<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting Language Dependency Using OSD</TITLE>

<META NAME=MS-HKWD CONTENT="Setting Language Dependancy Using OSD">
<META NAME="Keywords" CONTENT="OSD, Open Software Description, Internet Componenet Download, Software Update Channels">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="osdlang"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Setting Language Dependency Using OSD"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Setting Language Dependency Using OSD"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" ID="TOPIC_CONTENTS" HREF="overview.htm">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" ID="PRE_TOPIC" HREF="activex_example.htm">How to Automatically Update an ActiveX Control</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" ID="NEXT_TOPIC" HREF="../reference/reference.htm">Open Software Description Reference</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<h1>Setting Language Dependency Using OSD</h1>



<ul>
<li>Deliver localized language versions of applications/controls to the appropriate language systems automatically through code download.
<li>Allow users to download and preview English versions of applications/controls, and provide an automatic notification/download of users' language version when it becomes available (replacing their English version should they choose to do so).  
<li>Make it easy for developers to author and for PMs to manage. 
<li>Ensure that the mechanism does not break download on Microsoft&#174; Internet Explorer 3.0.
</ul>

<p>The model is based on a data file (an OSD file) housed in a signed cabinet (CAB) file (for security) that specifies which languages and platforms the application supports and at which location.

<p>This OSD is alone in a main CAB placed in the GUID directory for the control/application on the object store or at some code base URL location.  The OSD tells Internet Component Download which languages are available under the <B>DEPENDENCY</B>   element by specifying  sections for those languages.

<p>If the specific language CAB is empty or not found and English is supported, code download proceeds to download the English version of the control/application.  The next time this object is referenced, Internet Component Download checks the LanguageCheckPeriod default value (expressed in days and implemented by the control/application itself in the OSD).  Internet Component Download compares the downloaded date plus elapsed days with the current date to decide whether to download the main CAB again to check for language updates.  If the language has become available, Internet Component Download shows a certificate to the user and downloads the localized control (not really informing the user what it's up to). 

<p>Applications should make sure they place all the language values they intend to support in the <B>DllRegisterServer</B> routine or in an INF file in the main CAB's OSD from the very beginning.  This ensures an appropriate placeholder is put in the registry for future upgrading when the language version matching the browser becomes available.   Internet Component Download (code download) looks up the language of the browser by checking the version information of Shdocvw32.dll and compares it to the semicolon-delimited IS01739 name language section.  If a match is found, CDL downloads the CAB. 

<p>If the specific language CAB is empty or not found and English is <i>not</i> supported (only German, for example), the download will proceed by following the same path as an unmet dependency would in Internet Component Download (an empty box is displayed in the HTML).


<p><B>Notes:</B> 

<ul>
<li>Avoiding repeated certificates.
<P>A variance between languages is allowed in the amount of time until the version becomes available through the LanguageCheckPeriod key with DWORD values.
			 
<pre>[LanguageCheckPeriod]
				EN   	1
				FR 	5
				ES	30
				JA	60
				DE	30
				KO	90
				ZH-CN	120
				ZH-TW	120
</pre>

<p>The number inside the language would specify how much time to allow before checking again for that particular language.  This is easy to implement, provides flexibility, and minimizes the certificate downloads for the user.

<li>Default language.

<p>The language version is housed in an object referenced by the default <a href="../reference/IMPLEMENTATION.htm">IMPLEMENTATION</a> element.

<li>Applications/controls must implement the check period values in the OSD file.

<p>It's up to the application to implement the LanguageCheckPeriod key under its CLSID. This should be done in the <B>DllRegisterServer</B> routine or in an INF placed in the main data CAB.  In the absence of this, given a mismatch, Internet Component Download defaults to 30 days.
</ul>


<p><B>Wins:</B>

<ul>
<li>No confusing user interface for the user to have to respond to.
<li>The appropriate language version of the control/application is delivered automatically, based on the user's browser language.
<li>Easy to administer for the PM  through a single OSD in a single CAB.
<li>Download hits on the server and time on the net for users is minimized, while letting them preview the application/control in English until their language version becomes available.
<li>Method falls within the OSD model using XML, which is maintainable over time.
<li>Application/control developers do not have to use satellite localization with complicated dependencies. They have separate CABs for each language.
</ul>





<h2>Constructing CABs for Multiple Languages</h2>

<p>To support multiple languages, two types of CAB files need to be present:

<ul>
<li><a href="#Main_CAB">Main data CAB</a>
<li><a href="#Individual_CAB">Individual language CABs</a>
</ul>


<h3><a name="Main_CAB">Main data CAB</a></h3>

<p>The main data CAB consists of three text files:

<ul>
<li>INF file to allow installation on Internet Explorer 30 
<li>INF file to set a language check period 
<li>Main OSD file
</ul>

<p>The main OSD file contains the different language implementation information, as well as the locations of the individual language CABs.

<p>You will need to edit these files as languages become available by adding <a href="../reference/IMPLEMENTATION.htm">IMPLEMENTATION</a> sections.

<p>The following is an example of the main OSD file.

<pre>&lt;?XML version="1.0"?>
&lt;!DOCTYPE SOFTPKG SYSTEM "http://www.microsoft.com/standards/osd/osd.dtd">
&lt;?XML::namespace href="http://www.microsoft.com/standards/osd/msicd.dtd" as="msicd"?>

&lt;SOFTPKG NAME="{039397C0-46DF-11D0-99CB-00C04FD64497}" VERSION="4,3,0,2077" >
    &lt;Title>MS Chat&lt;/Title>
    &lt;MSICD::NativeCode>
        &lt;Code NAME="MsChatPr.ocx" CLASSID="clsid:039397C0-46DF-11D0-99CB-00C04FD64497"
		    VERSION="4,3,0,2077">
    &lt;IMPLEMENTATION>
        &lt;LANGUAGE VALUE="ja" />
        &lt;Processor VALUE="x86" />
        &lt;Codebase HREF="JaChatPr.cab" />
    &lt;/IMPLEMENTATION>
    &lt;IMPLEMENTATION>
        &lt;LANGUAGE VALUE="de" />
        &lt;Processor VALUE="x86" />
        &lt;Codebase HREF="DeChatPr.cab" />
    &lt;/IMPLEMENTATION>
    &lt;IMPLEMENTATION>
        &lt;Processor VALUE="x86" />
        &lt;Codebase HREF="EnChatPr.cab" />
    &lt;/IMPLEMENTATION>
        &lt;/Code>
    &lt;Code NAME="RegEntry">
        &lt;IMPLEMENTATION>
           &lt;Codebase FILENAME="langchk.inf" />
        &lt;/IMPLEMENTATION>
    &lt;/Code>
			
    &lt;/MSICD::NativeCode>
&lt;/SOFTPKG>
</pre>


<p>The following is a sample INF file to set the language check period.

<pre>
; Copyright (c) 1996 Microsoft Corporation

[Version]
Signature="$Chicago$" 
AdvancedINF=2.5

[DefaultInstall]
AddReg=IEIntl.Add.Reg

[DefaultInstall.NT]
AddReg=IEIntl.Add.Reg

[IEIntl.Add.Reg]
HKCR,%MSCHATCHECK%,"DE",3,"5"
HKCR,%MSCHATCHECK%,"JA",3,"5"
HKCR,%MSCHATCHECK%,"FR",3,"15"
HKCR,%MSCHATCHECK%,"KO",3,"15"
HKCR,%MSCHATCHECK%,"TW",3,"15"
HKCR,%MSCHATCHECK%,"",,"Enabled"

[Strings]
MSCHATCHECK = "CLSID\{039397C0-46DF-11D0-99CB-00C04FD64497}\LanguageCheckPeriod"
</pre>


<h3><a name="Individual_CAB">Individual language CABs</a></h3>

<p>The individual language CABs contain the following files:

<ul>
<li>Specific language version of object
<li>Object OSD file
</ul>

<p>The object OSD file would contain the information on how to install this language version, including any code dependencies and so on.
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>