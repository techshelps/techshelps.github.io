<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Internet Explorer Address Book</TITLE>

<META NAME=MS-HKWD CONTENT="Internet Explorer Address Book">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="bk_addrbook"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Internet Explorer Address Book"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Internet Explorer Address Book"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../internet.htm#set_internet_tools">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="../msicd/reference/TYPELIB.htm">TYPELIB</A>
<IMG SRC="../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="ifaces/IABinterfaces.htm">Internet Explorer Address Book Interfaces</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1><A NAME="ch_addrbook">Internet Explorer Address Book</A></H1>



<P>Microsoft&#174; Internet Explorer Address Book is an application and service that helps users keep track of people. It has a local database and a user interface for finding and editing information about people, and it can perform queries against network directory servers using the Internet-standard (LDAP) protocol. There are two ways users can access the Address Book from the Start Menu. They can select Programs, select Internet Explorer, and then select Address Book, or they can select Find and then select People. 

Other applications can also use Internet Explorer Address Book. For example, Microsoft Outlook Express uses Internet Explorer Address Book as its e-mail address book. Internet Explorer Address Book offers interfaces that enable other applications to directly use its database and its user interface services.

<P>For more information on Internet Explorer Address Book, please see:

<P><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" ALT="bullet" ><A CLASS=tctop HREF="addrbook.htm#sec_ie_ab_file_location">Internet Explorer Address Book File Location</A>
<P><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" ALT="bullet" ><A CLASS=tctop HREF="ifaces/IABinterfaces.htm#sec_ie_ab_interfaces">Interfaces</A>
<P><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" ALT="bullet" ><A CLASS=tctop HREF="functions/functions.htm#sec_ie_ab_functions">Functions</A>
<P><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" ALT="bullet" ><A CLASS=tctop HREF="structures/structures.htm#sec_ie_ab_structures">Structures</A>


<H2><A NAME="sec_ie_ab_file_location">Internet Explorer Address Book Files and Locations</A></H2>

<P>The collection of interfaces available to the developer from Internet Explorer Address Book represents the programmatic techniques necessary to implement the functionality of Internet Explorer Address Book.
<P>
<UL><LI><A HREF="addrbook.htm#sec_registering_ie_ab">Registering Internet Explorer Address Book</A>
<LI><A HREF="addrbook.htm#sec_create_instance_ie_ab">Creating an Instance of Internet Explorer Address Book</A>
<LI><A HREF="addrbook.htm#sec_loadWab32_runtime">Loading Wab32.dll at Run Time</A>
<LI><A HREF="addrbook.htm#sec_using_ieab_with_ie3.0x">Using Internet Explorer Address Book Files Under Internet Explorer 3.0x</A>
</UL>
<H3><A NAME="sec_registering_ie_ab">Registering Internet Explorer Address Book</A></H3>

<P>If you plan to have your application use Internet Explorer Address Book, your application must register itself for using the Wab32.dll as a shared DLL.  This will prevent the Wab32.dll from being inadvertently uninstalled while your application is still using it. To do this, you need to increment the reference count of the Wab32.dll in the SharedDLLs section in the registry under HKLM\Software\Microsoft\Windows\CurrentVersion\SharedDLLs.

<P>First get the full path of the installed Wab32.dll from:

<PRE>HKLM\Software\Microsoft\WAB\DLLPath
</PRE>
<P>The default value under this key gives the path of any WAB DLL installed on the computer. (This DLL path is defined in Wabapi.h as WAB_DLL_PATH_KEY; if you are including Wabapi.h in your application, just use the defined WAB_DLL_PATH_KEY symbol as the name of the key to open.) If this key does not exist, the system has a pre-Internet Explorer 4.0 version of Internet Explorer Address Book and you do not need to do any reference counting on the DLL.

<P>If the above key exists, look under:

<PRE>HKLM\Software\Microsoft\Windows\CurrentVersion\SharedDLLs
</PRE>
<P>Look for the value of &lt;Full WAB32 Path&gt;. If this value doesn't exist, create it using the registry API. This is a DWORD value. The content of this value is a reference count representing the number of clients registered to use Internet Explorer Address Book. You should read the reference count from the value, increment it by one, and then save the incremented value back to the registry. 

 
<H3><A NAME="sec_loadWab32_runtime">Loading Wab32.dll at Run Time</A></H3>

<P>On systems that have Internet Explorer 3.0x or earlier, the Wab32.dll file exists in the windows\system directory. However, on Internet Explorer 4.0 and later platforms, Wab32.dll exists elsewhere, and your application cannot assume it will be able to load the DLL by just using <B>LoadLibrary</B>("wab32.dll"). You should also not statically link your application to Wab32.dll because it might not necessarily be on the path.

<P>Under Internet Explorer 4.0, Wab32.dll is set in the registry in the following location:

<PRE>HKLM\Software\Microsoft\WAB\DLLPath
</PRE>
<P>The only reason to call <B>LoadLibrary</B>("wab32.dll") is if this key does not exist or if the path set in this key is invalid.

<P>The following sample code shows how to run <B>LoadLibrary</B> on Internet Explorer Address Book.

<PRE>const static TCHAR lpszWABRegPathKey[] = TEXT("Software\\Microsoft\\WAB\\DLLPath");
const static TCHAR lpszWABDll[] = TEXT("WAB32.dll");

// GetWABDllPath - loads the WAB DLL path from the registry
// szPath - ptr to buffer
// cb - sizeof buffer
//
void GetWABDllPath(LPTSTR szPath, ULONG cb)
{
    DWORD  dwType = 0;
    ULONG  cbData = cb;
    HKEY hKey = NULL;
    if(szPath)
    {
        *szPath = '\0';
        if (ERROR_SUCCESS == RegOpenKeyEx( HKEY_LOCAL_MACHINE,
            lpszWABRegPathKey, 0, KEY_READ, &amp;hKey))
            RegQueryValueEx( hKey, "", NULL, &amp;dwType, (LPBYTE) szPath, &amp;cbData);
    }
    if(hKey) RegCloseKey(hKey);
    return;
}

// LoadLibrary_WABDll() - Load the WAB library based on the WAB DLL path
//
HINSTANCE LoadLibrary_WABDll()
{
    TCHAR  szWABDllPath[MAX_PATH];
    HINSTANCE hinst = NULL;

    GetWABDllPath(szWABDllPath, sizeof(szWABDllPath));

    return(hinst = LoadLibrary( (lstrlen(szWABDllPath)) ? szWABDllPath : lpszWABDll ));
}
</PRE>


 
<H3><A NAME="sec_create_instance_ie_ab">Creating an Instance of Internet Explorer Address Book</A></H3>

<P>To create and initialize the first instance of Internet Explorer Address Book, use the following sample code as a guide.

<PRE>LPWABOPEN lpfnWABOpen = NULL;   // defined in WABAPI.H
HINSTANCE hinstWAB = NULL; 
//
// Initialize Internet Explorer Address Book and get an instance of IWABObject and IAddrBook
//
HRESULT InitWAB(LPWABOBJECT * lppWABObject,
   LPADRBOOK * lppAdrBook)
{
    HRESULT hr = E_FAIL; 
    hinstWAB = LoadLibrary_WABDll(); 
  if(hinstWAB)
    {
    lpfnWABOpen = (LPWABOPEN) GetProcAddress(hinstWAB, "WABOpen");
  if(lpfnWABOpen)
    hr = lpfnWABOpen(lppAdrBook, lppWABObject, NULL, 0);
    }
 return hr;
}
</PRE>

 
<H3><A NAME="sec_using_ieab_with_ie3.0x">Using Internet Explorer Address Book Files Under Internet Explorer 3.0x</A></H3>
<P>In Internet Explorer 3.0x installations, the default location of Wab32.dll is in the Windows system directory.

<PRE>&lt;Windows System Directory&gt;\WAB32.dll
</PRE>
<P>When Internet Explorer 4.0 is installed, the file Wab32.dll is renamed Wab32.ie3 so the old version of the file will not conflict with the newer versions installed by Internet Explorer 4.0 setup. Should it become necessary to uninstall, the old files are given back their original names so that users can revert back to their exact pre-Internet Explorer 4.0 settings. 

<P>An application that will be working with Wab32.dll under both Internet Explorer 4.0 and Internet Explorer 3.0x should not rely on being able to find Wab32.dll on the path. To see how you can write a single piece of code that can load the WAB32.dll library under both Internet Explorer 4.0 and Internet Explorer 3.0, refer to the sample code from the previous section, <A HREF="#sec_loadWab32_runtime">Loading Wab32.dll at Run Time</A>.


<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>