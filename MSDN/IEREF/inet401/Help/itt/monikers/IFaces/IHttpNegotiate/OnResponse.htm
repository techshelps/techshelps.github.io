<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IHttpNegotiate::OnResponse</TITLE>

<META NAME=MS-HKWD CONTENT="IHttpNegotiate::OnResponse">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, interface">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="IHttpNegotiate__OnRe"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="IHttpNegotiate::OnResponse"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="IHttpNegotiate::OnResponse"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../../reference.htm#ch_urlmon_ref">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="BeginningTransaction.htm">IHttpNegotiate::BeginningTransaction</A>
<IMG SRC="../../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="../ihttpsecurity/OnSecurityProblem.htm">IHttpSecurity::OnSecurityProblem</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>IHttpNegotiate::OnResponse</H1>

<PRE>HRESULT OnResponse(
    [in] DWORD  dwResponseCode,
    [in] LPCWSTR  szResponseHeaders,
    [in] LPCWSTR  szRequestHeaders,
    [out] LPWSTR * pszAdditionalRequestHeaders
);
</PRE>
<P>Allows the client of a bind operation to examine the response headers, optionally terminate the bind operation, and add HTTP headers to a request before resending the request.
<UL><LI>Returns one of the following values:
<TABLE>
<TR><TD>S_OK </TD><TD>The operation completed successfully. If <I>dwResponseCode</I> indicates an error, any <I>szAdditionalRequestHeaders</I> are appended and the request is sent again.</TD></TR>
<TR><TD>E_ABORT </TD><TD>Terminate the HTTP transaction.</TD></TR>
<TR><TD>E_INVALIDARG </TD><TD>The parameter is invalid.</TD></TR></TABLE>
</UL>
<DL>
<DT><I>dwResponseCode</I> </DT><DD>HTTP response code returned in response to a previous HTTP request. For information about these codes, see the HTTP specification.
</DD><DT><I>szResponseHeaders</I> </DT><DD>Response headers from the HTTP server. For more information, see the HTTP specification.
</DD><DT><I>szRequestHeaders</I> </DT><DD>If <I>dwResponseCode</I> indicates an error, contains HTTP request headers that will be used when the request is sent again.
</DD><DT><I>pszAdditionalRequestHeaders</I> </DT><DD>If <I>dwResponseCode</I> indicates an error, contains optional, additional headers to add before the request is sent again. If the specified header value conflicts with existing values in <I>szRequestHeaders</I>, the new headers take precedence. If <I>pszAdditionalRequestHeaders</I> is set to NULL, no headers are added to the HTTP request.
</DD></DL>
<P>The URL moniker calls this method when it receives a response to an HTTP request. If <I>dwResponseCode</I> indicates a success, the client can examine the response headers and can optionally abort the bind operation. If <I>dwResponseCode</I> indicates a failure, the client can add HTTP headers to the request before it is sent again.

<P>Note that if multiple clients have registered on the bind context for a given bind operation, more than one of these clients can provide an <A HREF="IHttpNegotiate.htm#IHttpNegotiate">IHttpNegotiate</A> callback interface. Every client providing this callback receives notifications. Each one is given a chance to add HTTP headers or to abort the HTTP transaction. In such cases, the last client to receive callback notification is the client driving the download operation, and it will dictate the final decision.

<P>See also <A HREF="BeginningTransaction.htm#IHttpNegotiate__Begi">IHttpNegotiate::BeginningTransaction</A>

<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>