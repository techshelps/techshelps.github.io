<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IBindStatusCallback::GetBindInfo</TITLE>

<META NAME=MS-HKWD CONTENT="IBindStatusCallback::GetBindInfo">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, interface">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="IBindStatusCallback_"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="IBindStatusCallback::GetBindInfo"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="IBindStatusCallback::GetBindInfo"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../../reference.htm#ch_urlmon_ref">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="../ibinding/Suspend.htm">IBinding::Suspend</A>
<IMG SRC="../../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="GetPriority.htm">IBindStatusCallback::GetPriority</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>IBindStatusCallback::GetBindInfo</H1>

<PRE>HRESULT GetBindInfo(
    [out] DWORD *pgrfBINDF,
    [in, out] BINDINFO *pbindinfo
);
</PRE>
<P>Obtains the bind information for the bind operation when called by an asynchronous moniker.

<UL><LI>Returns S_OK if successful, or E_INVALIDARG if one or more parameters are invalid.
</UL>
<DL>
<DT><I>pgrfBINDF</I> </DT><DD>Address of a value taken from the <A HREF="../../enums/BINDF.htm#BINDF">BINDF</A> enumeration indicating whether the bind should proceed synchronously or asynchronously.
</DD><DT><I>pbindinfo</I> </DT><DD>Address of the <A HREF="../../structures/BINDINFO.htm#BINDINFO">BINDINFO</A> structure, which describes how the client wants the binding to occur.
</DD></DL>
<P>The moniker calls this method in its implementations of the
<object id="hhal_3" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_3.Click()>IMoniker::BindToObject</A> and
<object id="hhal_4" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_4.Click()>IMoniker::BindToStorage</A> methods to obtain information about the specific bind operation.

<P>Asynchronous moniker clients should be aware that a moniker might call this method more than once during a bind operation. A proper implementation of <B>IBindStatusCallback::GetBindInfo</B> should prepare for this possibility. If returning data in the <I>pbindinfo</I> parameter, the implementation should allocate the appropriate data (<I>szExtraInfo</I> and/or <I>stgmedData</I>) at the time of each call. In this way, if the callback is never called, data is never allocated; if the callback is called more than once, it will work correctly. The first time this callback is received by the asynchronous moniker client is before the call to
<object id="hhal_5" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_5.Click()>IMoniker::BindToStorage</A> or
<object id="hhal_6" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_6.Click()>IMoniker::BindToObject</A>.

<P>Even when the value of <I>pgrfBINDF</I> is BINDF_ASYNCHRONOUS, it is possible that the original call to
<object id="hhal_7" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_7.Click()>IMoniker::BindToStorage</A> or
<object id="hhal_8" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_8.Click()>IMoniker::BindToObject</A> might return synchronously rather than returning the MK_S_ASYNCHRONOUS flag. Clients of asynchronous monikers should always prepare for this possibility. Specifically, to avoid memory leaks, it is important to make sure to release the pointer returned by a call to either method.

<P>One way to deal with this case is to call your own implementation of <A HREF="OnDataAvailable.htm#IBindStatusCallback_">IBindStatusCallback::OnDataAvailable</A> or <A HREF="OnObjectAvailable.htm#IBindStatusCallback_">IBindStatusCallback::OnObjectAvailable</A> in order to use the same code path (regardless of whether you bind synchronously or asynchronously).

<P>If the <A HREF="../../enums/BINDF.htm#BINDF_PULLDATA">BINDF_PULLDATA</A> value is not set in the <I>pgrfBINDF</I> parameter, Urlmon.dll sets the <A HREF="../../enums/BINDF.htm#BINDF_NEEDFILE">BINDF_NEEDFILE</A> value. If <B>BINDF_NEEDFILE</B> is set, binding of resources that cannot be cached (such as an https resource) will fail.

<P><B>Warning</B>  The size of the <A HREF="../../structures/BINDINFO.htm#BINDINFO">BINDINFO</A> structure has changed with the release of Microsoft Internet Explorer 4.0. Developers must write code that checks the size of the <B>BINDINFO</B> structure that is passed into their implementation of this method before writing to members of the structure. See <A HREF="../../overview.htm#Handling_BINDINFO_St">Handling BINDINFO Structures</A> in <A HREF="../../overview.htm#ch_urlmon_ovr">Asynchronous and URL Monikers Overview</A> for more information.
<P>See also <A HREF="../../enums/BINDF.htm#BINDF">BINDF</A>, <A HREF="../../structures/BINDINFO.htm#BINDINFO">BINDINFO</A>, <A HREF="../../functions/RegisterBindStatusCallback.htm#RegisterBindStatusCa">RegisterBindStatusCallback</A>

<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>