<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Protocol Overview</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana, arial, helvetica" size="2"><h1>
Protocol Overview</h1>
<p>
The protocol is a combination of a straightforward extension of DHCP (through the use of several new DHCP Option tags) and the definition of simple packet transactions which use the DHCP packet format and options to pass additional information between the client and server. This added complexity is introduced by the requirement to operate without disturbing existing DHCP services.</p>
<p>
In this protocol, DHCP options fields are used to do the following:
<ul>
<li>
Distinguish DHCP request packets sent by a client as part of this extended protocol from other DHCP request packets that the installation server may receive.<br><br></li>
<li>
Distinguish DHCP reply packets sent by a server as part of this extended protocol from other DHCP reply packets that the client may receive.<br><br></li>
<li>
Convey client network adapter type.<br><br></li>
<li>
Convey client System ID.<br><br></li>
<li>
Convey client system architecture type.<p>
Based on the client network adapter type and system architecture type, the server returns to the client the file name (on the server) of an appropriate executable. The client downloads the specified executable into memory and executes it. How this executable accomplishes the setup of the system is not specified by these guidelines.
<p>
This section presents an informal, step-by-step description of the remote new system setup protocol. A detailed description of packet formats and client and server actions appears later in this attachment.
<p>
<b>Figure 1 &ndash; PXE Operation &ndash; Client Server Interaction (updated in version 1.0b)</b>
<p>
<b>Step 1. </b>The client broadcasts a DHCP discover message to the standard DHCP port (67). An option field in this packet contains the following:
</li>
<li>
A tag for client identifier (if the client identifier is known).<br><br></li>
<li>
A tag for the client Network Interface Identifier.<br><br></li>
<li>
A tag for the client system architecture.<p>
<b>Step 2</b>. The PXE PROXY DHCP Service responds by sending a PXE PROXY DHCPOFFER message to the client on the standard DHCP reply port (68). This packet contains the address of the PXE PROXY DHCP Service. The client IP address field is null.
<p>
At this point, other DHCP Services and BOOTP Services also respond with DHCP offers or BOOTP reply messages on port 68. Each message contains standard DHCP parameters: an IP address for the client and any other parameters that the administrator might have configured on the Service. If the Installation Server is also functioning as a standard DHCP Service, then the DHCP Service reply from the Installation Server will also contain standard DHCP parameters (in particular, an IP address for the client)
<p>
The timeout for a reply from a DHCP server is standard. The timeout for re-broadcasting to receive a DHCPOFFER with PXE extensions, or a PROXY DHCPOFFER is based on the standard DHCP timeout, but is substantially shorter to allow reasonable operation of the client in standard BOOTP or DHCP environments that do not provide a OFFER with PXE extensions. The PXE timeout for rebroadcast is:
<p>
4, 8, 16 seconds, yielding three broadcasts and a timeout after 28 seconds.
<p>
The PXE timeout for rebroadcast is 4 seconds after receiving an OFFER without PXE extensions but with a valid &ldquo;bootfile name&rdquo; option.
<p>
<b>Step 3. </b>From the DHCPOFFER(s) that it receives, the client records the following:
</li>
<li>
The Client IP address (and other parameters) offered by a standard DHCP or BOOTP Service.<br><br></li>
<li>
The Server IP address of the BINL (Boot Image Negotiation Layer) Service from the &ldquo;siaddr&rdquo; field in the PXE proxy DHCP offer.<p>
<b>Step 4. </b>If the client selects an IP address offered by a DHCP Service, then it must complete the standard DHCP protocol by sending a request for the address back to the Service and then waiting for an acknowledgment from the Service. If the client selects an IP address from a BOOTP reply, it can simply go ahead and use the address.
<p>
<b>Step 5. </b>The client sends a DHCP Request packet to the BINL Service on port 4011. This packet is exactly the same as the initial DHCP Discover in Step 1, except that it is coded as a DHCP Request and now contains the following:
</li>
<li>
Contains the IP address assigned to the client from a DHCP Service.<br><br></li>
<li>
Contains all the PXE options fields received from the selected DHCP Offer which contained the PXE options.<p>
<b>Step 6. </b>The BINL Service on the Installation Server sends a DHCP Acknowledge packet back to the client, also on port 4011. This reply packet contains:
</li>
<li>
Boot file name and location.<br><br></li>
<li>
The Client UUID/GUID option in the PXE proxy DHCP offer.<br><br></li>
<li>
MTFTP configuration parameters.<p>
<b>Step 7. </b>The client downloads the executable file using either standard TFTP or MTFTP. The file downloaded and the placement of the downloaded code in memory is dependent on the client&rsquo&rsquo;s CPU architecture. (For Intel architecture Net PCs, see Attachment B.)
<p>
<b>Step 8. </b>Finally, the PXE Client initiates execution of the downloaded code. The way in which this is done is dependent on the client&rsquo&rsquo;s CPU type. For Intel architecture Net PC systems, the client code executes a far call to the first location in the code.
</li>
</ul>
</font></BODY>
</HTML>
