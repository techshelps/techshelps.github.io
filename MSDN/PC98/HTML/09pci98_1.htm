<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PCI Basic Requirements</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><form name=x><object name=iv classid="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016">
</object></form>
<h1><a name="pcibasicrequirements"></a>PCI Basic Requirements</h1>
<p>
This section summarizes the basic design requirements for PCI.</p>
<p>
<b>1. All components comply with PCI 2.1</h1>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Required</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
All cards, bridges, and devices that use PCI must be designed to meet the requirements defined in <i>PCI Local Bus Specification, Revision 2.1</i> (PCI&nbsp;2.1).</p>
<p>
Compliance with this requirement is demonstrated based on the compliance process of the PCI Special Interest Group (SIG).</p>
<p>
<b>2. System does not contain ghost cards</h1>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Required</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
A computer must not include any ghost cards, which are cards that do not decode the type 1/type 0 indicator. Such a card will appear on bus 0 as all the buses behind it that use the same IDSEL. Notice that it is acceptable, as defined in PCI&nbsp;2.1, for a single-function card to decode the IDSEL and AD[1::0] pins and not&nbsp;decode AD[10::8] if the card does not have bit 7 set in the header type. This&nbsp;requirement also excludes, for example, devices that ignore some type 0 transaction bits and therefore appear at multiple device/function addresses.</p>
<p>
A PCI card should be visible through hardware configuration access at only one bus/device/function coordinate.</p>
<p>
<b>3. System uses standard method to close BAR windows on nonsubtractive decode PCI bridges</h1>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Required</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
PCI-to-PCI bridges must comply with the <i>PCI to PCI Bridge Specification, Revision 1.0.</i> Setting the base address register (BAR) to its maximum value and the limit register to zeros should effectively close the I/O or memory window references in that bridge BAR.</p>
<p>
<b>4. System supports PCI docking through a bridge connector</h1>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Recommended</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
It is recommended that the system support docking through a bridge connector, with the actual bridge on the docking station, not on the mobile unit. The bridge can be positive or subtractive decoding. The bridge should create a new bus number so devices behind the bridge are not on the same bus number as other devices in the system.</p>
<p>
After a warm dock, the BIOS should not configure the bridge or any other devices in the docking station. That is the responsibility of the operating system.</p>
<p>
The PCI-to-ISA bridge should be placed on the docking station, not on the mobile unit. Mobile PCs typically do not have ISA expansion slots, and the ISA devices on the mobile PC can be controlled by the Plug and Play interface. For more information on requirements for docking station systems, see the “Basic PC&nbsp;98” chapter in Part 2 of this guide.</p>
<p>
Notice that implementing delayed transactions for PCI-to-PCI and PCI-to-ISA docking bridges is required in PCI 2.1 only when certain timing conditions are not met. For PC&nbsp;98 design requirements, PCI 2.1 is interpreted to mean that delayed transactions are required only when “targets cannot complete the initial data phase within the requirements of this specification” (as stated in PCI 2.1). Delayed transactions are a hardware-related timing issue (and will provide a performance advantage), but are not related to operating system requirements.</p>
<p>
<b>5. PCI chip sets support Ultra DMA/33</h1>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Required</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
PCI chip sets must implement DMA as defined in SFF 8020i and must implement Ultra DMA/33 (also known as Ultra-ATA) as defined in the specification submitted by Quantum Corporation for inclusion in the ATA-4 specification.</p>
<p>
Ultra DMA/33 is required to avoid the bottleneck created by the current 16.6-Mb/s limit on disk transfer. Ultra DMA/33 also provides error checking for improved robustness over previous IDE implementations.</p>
</font></BODY>
</HTML>
