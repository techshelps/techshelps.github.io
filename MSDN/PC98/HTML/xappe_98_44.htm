<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Preboot API Entry Point Structure</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana, arial, helvetica" size="2"><h1>
Preboot API Entry Point Structure</h1>
<p>
The preboot API entry point structure will be paragraph aligned and placed between the top of free base memory and A0000h (640k). The top of free base memory can be calculated using the size of free base memory word. This word is located in the BIOS data segment at 40:13h.</p>
<pre><code>typedef struct s_PXENV_ENTRY {
UINT8 signature[6];/* "PXENV+" */
UINT16 version;/* MSB=major, LSB=minor */
UINT8 length;/* sizeof(struct s_PXENV_ENTRY) */
UINT8 checksum;/* 8-bit checksum off structure, */
/* including this bytes should be 0. */
UINT16 rm_entry_off;/* 16-bit real-mode offset and segment */
UINT16 rm_entry_seg;/* of the PXENV API entry point. */
UINT16 pm_entry_off;/* 16-bit protected-mode offset and */
UINT32 pm_entry_base;/* segment base address of the */
/* PXENV API entry point. */
/* The PROM stack, base code and data segment selectors are only */
     /* required until the base code (TFTP API) layer is removed from */
     /* memory (this can only be done in real mode). */
        UINT16 stack_sel;         /* PROM stack segment.  Will be set */
        UINT16 stack_size;        /* to 0 when removed from memory. */
        UINT16 base_cs_sel;       /* Base code segment.  Will be set */
        UINT16 base_cs_size;      /* to 0 when removed from memory. */
        UINT16 base_ds_sel;       /* Base data segment.  Will be set */
        UINT16 base_ds_size;      /* to 0 when removed from memory. */
     /* The MLID code and data segment selectors are always required */
     /* when running the boot PROM in protected mode. */
        UINT16 mlid_ds_sel;       /* MLID data segment. */
        UINT16 mlid_ds_size;
        UINT16 mlid_cs_sel;       /* MLID code segment. */
        UINT16 mlid_cs_size;
} t_PXENV_ENTRY;
</code></pre>
</font></BODY>
</HTML>
