<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Plug and Play Design for PC Card 16 Cards</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><form name=x><object name=iv classid="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016">
</object></form>
<h1><a name="plugplaydesignforpccard16cards"></a>Plug and Play Design for PC&nbsp;Card 16 Cards</h1>
<p>
This section summarizes the Plug and Play requirements for PC&nbsp;Card&nbsp;16 cards.</p>
<p>
The Windows operating system determines what type of card is plugged into the&nbsp;PC&nbsp;Card socket by examining the tuples on the card. For Plug and Play functionality, PC Card 16 I/O cards must support a set of required information and configuration tuples. The PCMCIA bus enumerator uses these tuples to identify the card, load the correct device driver, and indicate all possible configurations to the Plug and Play configuration manager. The operating system then dynamically assigns a valid configuration based on this information.</p>
<p>
<b>11. Card supports required I/O card tuples</h1>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Required</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
The following items must be implemented for any PC Card 16 I/O card that connects to a PC&nbsp;98 system:
<ul>
<li>
The PC&nbsp;Card 16 card must contain the device information tuple (<small>cistpl_device</small>, 01h), the Level 1 (L1) version/product information tuple (<small>cistpl_vers_1</small>, 15h), the configuration tuple (<small>cistpl_config</small>, 1Ah), and the&nbsp;configuration table entry tuple (<small>cistpl_cftable_entry</small>, 1Bh).<br><br></li>
<li>
The L1 version/product information tuple must contain the product name and manufacturer name in the product information string (<small>tpllv1_info</small>, byte 4).<br><br></li>
<li>
The product name and manufacturer name in the L1 version/product information tuple must be composed only of ASCII characters greater than ASCII 20h and less than ASCII 7Fh.</li></ul><p>
Windows uses the information contained in the required and recommended tuples&nbsp;to create a unique device ID for the card and to assimilate configuration information for the device. Windows uses the device configuration tuples to determine the general characteristics of the card.</p>
<p>
<b>Required I/O Card Tuples</b></p>

<table border=1 cols=1 frame=below rules=none>
<tr valign=top>
<td width=464></td>
</tr>
<tr valign=top>
<td width=74><b>Tuple ID</b></td>
<td width=127><b>Tuple code</b></td>
<td width=262><b>Description and comments</b></td>
</tr>
<tr valign=top>
<td width=464></td>
</tr>
<tr valign=top>
<td width=74>01h</td>
<td width=127><small>cistpl_device</small></td>
<td width=262>Device information (common memory). For non-memory cards, this tuple must be present, but&nbsp;the device type will be NULL.</td>
</tr>
<tr valign=top>
<td width=74>15h</td>
<td width=127><small>cistpl_vers_1</small></td>
<td width=262>L1 version/product information strings:<br>
Product information <br>
Product name<br>
Product number<br>
Other manufacturer information</td>
</tr>
<tr valign=top>
<td width=74>1Ah</td>
<td width=127><small>cistpl_conf</small></td>
<td width=262>Configuration. Indicates the location of configuration registers and registers present.</td>
</tr>
<tr valign=top>
<td width=74>1Bh</td>
<td width=127><small>cistpl_ce</small></td>
<td width=262>Configuration table entry. Appropriate configuration requirements for I/O space, interrupts, memory, and so on should be specified.</td>
</tr>
<tr valign=top>
<td width=74>20h</td>
<td width=127><small>cistpl_manfid</small></td>
<td width=267>Manufacturer ID. Card manufacturer ID code. Defines manufacturer for this card.</td>
</tr>
<tr valign=top>
<td width=74>21h</td>
<td width=127><small>cistpl_funcid</small></td>
<td width=267>Function ID. Provides function information about the card. Also includes system&nbsp;initialization information.</td>
</tr>
</table><br>
<p>
The device information tuple provides information about the memory devices used in the card’s common memory space. The device type, size, and speed are used to configure the socket for efficient access to the card. This tuple must be present on PC Card 16 I/O cards, but the device type must be NULL.</p>
<p>
The L1 version/product information tuple contains human-readable information about the product and its manufacturer. This information is intended to be displayed to the user where necessary. Windows uses the information contained in the product information string and product name string to construct the device&nbsp;ID for that card. It also scans through the tuple, starting at the very beginning and continuing to the end of the product name string.</p>
<p>
The information gathered from the L1 version/product information tuple is used to&nbsp;construct the unique device ID. Because the optional third and fourth strings in&nbsp;the tuple are not used in the unique ID, devices that require unique numbers on&nbsp;each card can use these strings to store that information.</p>
<p>
The configuration tuple tells the software where to locate the configuration registers that program the card’s configuration, as well as which registers are present on the card.</p>
<p>
Each configuration table entry tuple completely describes one valid configuration in which the card can operate. Each entry describes power, timing, I/O space, interrupt, and memory space requirements for the given configuration. Configuration software selects one of these configurations for the card based on&nbsp;the resources currently available in the system.</p>
<p>
The manufacturer ID tuple (<small>cistpl_manfid</small>, 20h) and the function ID tuple (<small>cistpl_funcid</small>, 21h) add extra flexibility to a PC&nbsp;Card that connects to the PC:
<ul>
<li>
The manufacturer ID tuple provides unique information about the card manufacturer. This code is registered with PCMCIA. Windows uses the manufacturer ID tuple as one source for creating a 16-bit CRC used in the construction of the device ID.<br><br></li>
<li>
The function ID tuple provides information about the class of device or what function the card provides (for example, memory, modem, disk, and so on). This information helps the software perform necessary installation tasks and&nbsp;locate compatible drivers. Although it is not required to make this determination, Windows uses the function ID tuple internally to determine what type of device is on the PC&nbsp;Card.</li>
</ul>
<p>
<b>12. Configuration table entry tuples listed in priority order</b></p>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Required</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
Configuration table entry tuples are placed in the preferred order for configuring the device. Windows processes the tuples in the order they are placed in the CIS. From these tuples, Windows creates a logical configuration in this order and prioritizes them in the same order. Notice that for multiple voltage cards, the voltage policy is to prioritize 3.3-volt configurations (if supported by the system) over 5-volt configurations, regardless of the order of the configuration table entry tuples (<small>cistpl_cftable_entry</small>).</p>
<p>
<b>13. Card specifies maximum configuration options</b></p>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Required</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
Many older PC Cards specified fixed configurations in order to address compatibility with existing software. However, this is not the intended use for tuples; the configuration software should be responsible for compatibility. The tuples should be used only to rule out configurations not supported by the hardware.</p>
<p>
If you must provide fixed configurations for an operating system other than Windows, you still must provide one or more entries that specify the maximum configurability that the hardware can handle.</p>
</font></BODY>
</HTML>
