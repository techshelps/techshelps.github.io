<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Plug and Play Design for CardBus</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><form name=x><object name=iv classid="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016">
</object></form>
<h1><a name="plugplaydesignforcardbus"></a>Plug and Play Design for CardBus</h1>
<p>
This section summarizes the Plug and Play requirements for CardBus cards. CardBus was designed as a combination of the PC&nbsp;Card 16 and PCI. The goal is&nbsp;to gain the benefits of PCI in a PC&nbsp;Card format. Consistent with this goal, Windows support for CardBus places specific requirements on CardBus cards.</p>
<p>
<b>14. Configuration Space meets Common Silicon Guidelines </h1>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Required</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
The Common Silicon Guidelines are defined in Section 2.6 of the <i>PC Card Standard Guidelines, Volume 10.</i></p>
<p>
The standard for CardBus defines a PCI-like Configuration Space that is not fully compliant with the PCI specification. Specifically, under the CardBus standard, card vendors do not have to implement certain critical fields in the Configuration Space (described in the PC&nbsp;Card standard as allocated). In the PC&nbsp;Card standard guidelines for silicon common to both PCI and CardBus products, the implementation of these fields is recommended.</p>
<p>
However, to maintain compatibility with existing PCI system software and drivers for PC 98, Windows will support only CardBus cards whose Configuration Space is designed to meet the Common Silicon Guidelines. This is a requirement because CardBus configuration is performed by the PCI software, which knows how to deal with all aspects of PCI topology configuration, including bridging. Without the allocated fields, the cards cannot be fully treated as PCI devices and therefore cannot be supported under Windows.</p>
<p>
The required allocated fields are listed in the following table.</p>
<p>
<b>Required Allocated Fields</h1>
<table cols=1>
<tr valign=top>
<td width=467></td>
</tr>
<tr valign=top>
<td width=96><b>Field</b></td>
<td width=371><b>Description and comments</b></td>
</tr>
<tr valign=top>
<td width=467></td>
</tr>
<tr valign=top>
<td width=96>Vendor ID</td>
<td width=371>This read-only field contains a unique ID (in PCI space) for the card manufacturer. The PCI SIG allocates unique IDs.</td>
</tr>
<tr valign=top>
<td width=96>Device ID<br>
Revision ID</td>
<td width=371>These read-only fields are vendor-assigned values that uniquely identify the device (among all vendors of PCI or CardBus products).</td>
</tr>
<tr valign=top>
<td width=96>Class Code</td>
<td width=371>This read-only field is defined in PCI 2.1. It describes what type of device the card is.</td>
</tr>
<tr valign=top>
<td width=96>Max_Lat<br>
Min_Gnt</td>
<td width=371>These read-only fields specify the desired settings for Latency Timer values according to PCI 2.1. A value of 0 indicates the device has no major requirements for the settings of Latency Timers.</td>
</tr>
<tr valign=top>
<td width=96>Interrupt Line</td>
<td width=371>This register must be read-write and must not be connected to anything, just as on PCI cards. This register is used to store the current IRQ routing for the device.</td>
</tr>
</table><br>
<p>
<b>15. RESERVED fields comply with PCI 2.1</h1>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Required</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
The CardBus specification also lists two RESERVED fields (offset 2C in the Configuration Space), which have since been defined in PCI 2.1. These fields are&nbsp;also required on CardBus cards for Windows compatibility.</p>
<p>
<b>Required RESERVED Fields</h1>
<table cols=1>
<tr valign=top>
<td width=479></td>
</tr>
<tr valign=top>
<td width=187><b>Field</b></td>
<td width=280><b>Description</b></td>
</tr>
<tr valign=top>
<td width=467></td>
</tr>
<tr valign=top>
<td width=187>Subsystem ID</td>
<td width=280>If different from Device ID</td>
</tr>
<tr valign=top>
<td width=187>Subsystem Vendor ID</td>
<td width=280>If different from Vendor ID</td>
</tr>
</table><br>
<p>
<b>16. CardBus card implements required and recommended tuples</h1>
<table border=1 cols=3 frame=void rules=rows>
<tr valign=top>
<td width=30%><b>Required</b></td>
<td width=30%></td>
<td width=30%></td>
</tr>
</table><br>
<p>
For CardBus, Windows also requires the same set of card tuples recommended in&nbsp;the PC&nbsp;Card guidelines, as summarized in the following table.</p>
<p>
<b>Required CardBus Tuples </h1>
<table cols=1>
<tr valign=top>
<td width=479></td>
</tr>
<tr valign=top>
<td width=81><b>Tuple ID</b></td>
<td width=194><b>Tuple code</b></td>
<td width=200><b>Comments</b></td>
</tr>
<tr valign=top>
<td width=479></td>
</tr>
<tr valign=top>
<td width=81>04h</td>
<td width=194><small>cistpl_config_cb</small></td>
<td width=200>—</td>
</tr>
<tr valign=top>
<td width=81>05h</td>
<td width=194><small>cistpl_cftable_entry_cb</small></td>
<td width=200>—</td>
</tr>
<tr valign=top>
<td width=81>07h</td>
<td width=194><small>cistpl_bar</small></td>
<td width=200>—</td>
</tr>
<tr valign=top>
<td width=81>13h</td>
<td width=194><small>cistpl_linktarget</small></td>
<td width=200>Required as first tuple in PC&nbsp;Card standard.</td>
</tr>
<tr valign=top>
<td width=81>15h</td>
<td width=194><small>cistpl_vers_1</small></td>
<td width=200>—</td>
</tr>
<tr valign=top>
<td width=81>20h</td>
<td width=194><small>cistpl_manfid</small></td>
<td width=200>—</td>
</tr>
<tr valign=top>
<td width=81>FFh</td>
<td width=194><small>cistpl_end</small></td>
<td width=200>Required as end-of-chain tuple in PC&nbsp;Card standard.</td>
</tr>
<tr valign=top>
<td width=81>21h</td>
<td width=194><small>cistpl_funcid</small></td>
<td width=200>Recommended in PC&nbsp;Card standard; required for PC&nbsp;98.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
