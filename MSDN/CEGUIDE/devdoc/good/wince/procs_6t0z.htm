<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Processes and Threads</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_CreateThread">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_ExitThread">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Lists_of_Functions_and_Interfaces">
</OBJECT>
</TD></TR></TABLE>



<H1>

<A NAME="_working_with_processes_and_threads"></A>Working with Processes and Threads</H1>

<P>When you start a Windows CE-based application, the operating system automatically creates a process and a primary thread for that process. A process is a single instance of a running application and a thread is the basic unit of execution. Windows CE-based applications can incorporate multiple processes and each process can contain multiple threads. </P>

<P>Every process has at least one thread. You create additional threads by calling the <A HREF="JavaScript:hhobj_1.Click()"><B>CreateThread</B></A> function. You call the <A HREF="JavaScript:hhobj_2.Click()"><B>ExitThread</B></A> function to free up the resources used by a thread when it is no longer needed. Calling <B>Exit</B> <B>Thread </B>for an application's primary thread causes the application to terminate. </P>

<P><B>Note</B>  Unlike processes on Windows-based desktop platforms, a Windows CE process will terminate if its primary thread is terminated, even if there are other active threads in existence for the process.</P>

<P>When the Windows CE operating system initializes, it creates a single 4 GB virtual address space. It is divided into 33 <I>slots</I>, each 32 MB. The address space is shared by all processes. When a process initializes, Windows CE selects an open slot for the process in the system's address space. Slot zero is reserved for the currently running process. In addition to assigning a slot for each process, Windows CE creates a stack and a message queue for each thread in the process. Each stack has an initial size of at least 1 KB. Because the stack size is CPU-dependent; the system allocates 4 KB for each stack on some devices. The maximum number of threads is dependent upon the amount of available memory.</P>

<P>When a process initializes, the operating system stores in the slot assigned to the process all dynamic-link libraries (DLLs), the stack, the heap, the application code, and the data section for each process. DLLs are loaded at the top of the slot, followed by the stack, the heap, and the executable file (.exe). The bottom 64 KB is always left free.</P>

<P>For an overview of processes and threads, see <A HREF="wcearch_8sod.htm">Overview of the Windows CE Operating System</A>.  For a list of the functions that support manipulating processes and threads, see <A HREF="JavaScript:hhobj_3.Click()">Lists of Functions and Interfaces</A>. </P>

</BODY>
</HTML>
