<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sample RAPI Program</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1>

<A NAME="_sample_rapi_program"></A>Sample RAPI Program</H1>

<P>The following code example shows the basics of initializing the RAPI client, making calls, and handling errors. </P>

<PRE><CODE>#include &lt;stdio.h&gt;
#include &lt;rapi.h&gt;      
#include &lt;string.h&gt;

void PrintDirectory( LPWSTR Path, UINT Indent )
{
   if ( !Path )
      return;

   DWORD          foundCount;
   LPCE_FIND_DATA findDataArray;

   WCHAR searchPath[MAX_PATH];
   wcscpy( searchPath, Path );
   wcscat( searchPath, L"*" );

   if ( !CeFindAllFiles( searchPath,
                           FAF_ATTRIBUTES | FAF_NAME,
                           &amp;foundCount,
                           &amp;findDataArray ) )
   {
      printf( "*** CeFindAllFiles failed. ***\n" );

      if ( CeGetLastError() != ERROR_SUCCESS )
         printf( "failure occurred on the HPC function\n" );

      return;
   }

   if ( !foundCount )
   {
      for ( UINT indCount = 0 ; indCount &lt; Indent ; indCount++ )
         printf( "  " );
      printf( "No files found.\n" );
      return;
   }

   for ( UINT i = 0 ; i &lt; foundCount ; i++ )
   {
      for ( UINT indCount = 0 ; indCount &lt; Indent ; indCount++ )
         printf( "  " );
      wprintf( findDataArray[i].cFileName );
      printf( "\n" );

      if ( findDataArray[i].dwFileAttributes &amp; 
FILE_ATTRIBUTE_DIRECTORY )
      {
         WCHAR newPath[MAX_PATH];

         wcscpy( newPath, Path );
         wcscat( newPath, findDataArray[i].cFileName );
         wcscat( newPath, L"\\" );
         PrintDirectory( newPath, Indent + 1 );
      }
   }

   CeRapiFreeBuffer( findDataArray )
}

void main()
{
   HRESULT hr = CeRapiInit();
   if ( FAILED(hr) ) 
   {
      printf( "*** CeRapiInit() failed. ***\n" );
      return;
   }

   PrintDirectory( L"\\", 0 );

   CeRapiUninit();</CODE></PRE>

<P>}</P>

<P></P>

</BODY>
</HTML>
