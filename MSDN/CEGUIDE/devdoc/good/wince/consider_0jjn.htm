<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Automation Through ActiveX Objects</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H3>

<A NAME="_automation_through_activex_objects"></A>Automation Through ActiveX Objects</H3>

<P>Just as a user interface helps a user communicate with a software application, automation enables applications or scripting tools to interact with other applications or tools. Automation is a COM-based technology that enables interoperability among Microsoft® ActiveX™ components, including OLE components. To make their services available, applications or tools define COM objects to expose their unique features in terms of <I>methods</I>, <I>properties</I>, and <I>events</I>. Other applications and tools interact with the exposed objects to use these services. The exposed COM objects are known as ActiveX objects and the applications or tools calling ActiveX objects are known as ActiveX clients. </P>

<P>ActiveX clients invoke the <B>IDispatch</B> interface, or they call member functions directly in the object's virtual function table (<B>VTBL</B>). The table lists the addresses of all the properties and methods of an object, including the member functions of the interface it supports. The first three members of <B>VTBL</B> are the members of the <B>IUnknown</B> interface. ActiveX objects implementing a <B>VTBL</B> interface are standard COM objects. Clients must support pointers to access these objects. However, the object implementing the <B>IDispatch</B> interface offers additional features that makes the object accessible to a client without any pointer support. Clients written in Visual Basic use <B>IDispatch</B>, whereas those written in C++ may use both <B>VBTL</B> and <B>IDispatch</B>. The ActiveX objects in your applications should support both interfaces.</P>

<P>ActiveX objects publish themselves by means of <I>Type Libraries</I>, which are used by clients to determine the characteristics of an object, such as the supported interfaces and the names and addresses of the members of each interface. The developer of an ActiveX object should create the type library. Windows CE offers full support of the four type-building interfaces: <B>ICreateTypeInfo</B>,<B> ICreateTypeInfo2</B>,<B> ICreateTypeLib </B>and<B> ICreateTypeLib2</B>.</P>

<P>For a complete discussion of COM-based object services, see the documentation for the Microsoft Platform SDK<I>.</I></P>

</BODY>
</HTML>
