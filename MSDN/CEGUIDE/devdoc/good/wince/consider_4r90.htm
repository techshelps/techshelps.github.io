<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>National Language Support</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Lists_of_Functions_and_Interfaces">
</OBJECT>
</TD></TR></TABLE>



<H2>

<A NAME="_national_language_support"></A>National Language Support</H2>

<P>If you plan to release your application in the international market, you must keep language and cultural differences in mind when you develop specifications for the user interface and feature set. Consider the following potential trouble spots:

<UL>
	<LI>Text expansion. English text often grows when translated. In most cases, text increases by 10 or 15 percent; in some languages, localized text can be as much as 30 to 35 percent longer than the source text.</LI>

	<LI>Use of abbreviations. In some languages, abbreviations are not commonly used, for example, in Georgian, days of the week are not abbreviated.</LI>

	<LI>Use of symbols, metaphors, and colors. Most have specific cultural meaning. Some common symbols in the United States may not be recognized or may be misunderstood in other countries — for example, a mailbox.</LI>

	<LI>Use of bidirectional text. Text may be written and read from left to right, right to left, or top to bottom.</LI>

	<LI>Unique keyboard layout. Languages that use diacritical marks, such as Spanish and French, must have keyboards that support dead keys.</LI>

	<LI>Use of an Input Method Editor. Some languages, such as Japanese, have thousands of glyphs; therefore, the standard keyboard input is not sufficient to represent all the characters.</LI>

	<LI>Word order and punctuation. Of particular concern are differences in the punctuation of currency and other numbers, and the word order of dates. Though in English, word order is critical to meaning, in highly inflected languages, such as Spanish, word endings may have more significance.</LI>
</UL>

<P>The time to address these concerns is in the design phase of your project. For example, you will be disappointed to discover — after your program is completed — that the Spanish word <I>aceptar</I> will not fit onto your application's <B>OK</B> button. The following list provides tips for making your program easier to translate or localize:

<UL>
	<LI>Put all text strings that have to be translated in one location, such as a resource or text file. </LI>

	<LI>Declare string buffers of a variable size.</LI>

	<LI>Use the correct sorting method, date, time, and currency representation for that locale.</LI>

	<LI>Design controls, buttons, and the taskbar to accommodate different text length.</LI>
</UL>

<P>Windows CE makes your globalization efforts easier in two ways. Because Windows CE is a Unicode environment, all characters are double-byte; therefore, you do not have to be concerned with manipulating both single-byte and double-byte characters. In addition, Windows CE includes NLS, which provides NLS API as well as some font and keyboard functions.  For a list of the NLS functions supported by Windows CE, see <A HREF="JavaScript:hhobj_1.Click()">Lists of Functions and Interfaces</A>. </P>

<P>You must consider the constraints of the device on which your application will run when you globalize your application. The following list describes some of the complex interactions between your application, a Windows CE-based device, and the needs of users in different countries:

<UL>
	<LI>The manufacturer of the device, not the application programmer, determines what countries or locales to support.</LI>

	<LI>Because a user does not log into the device, the user locale and the default system locale are the same. For example, if you call the function <B>GetSystemDefaultLangID</B> or the function <B>GetUserDefaultLangID</B>, you obtain the same information.</LI>

	<LI>The Windows CE operating system loads only one keyboard driver. Although it is possible to load a different keyboard driver than the one installed, you would generally not do this because the device has a built-in keyboard.</LI>

	<LI>The locale can be changed by the programmer or by the user through an application such as the Control Panel. Changing the locale often requires changing the font, because the code page and character set change with the locale change.</LI>

	<LI>Because RAM is limited on most Windows CE-based devices, it is not practical to install multiple fonts. Therefore, using a different font requires installing a new one, which can be time-consuming.</LI>
</UL>

<P>For more information on NLS, see <I>Developing International Software</I> by Nadine Kano, Microsoft Press.</P>

</BODY>
</HTML>
