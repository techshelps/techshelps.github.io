<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registry Settings for Windows CE-Based Platforms</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H3>

<A NAME="_registry_settings_for_windows_ce_based_platforms"></A>Registry Settings for Windows CE-Based Platforms</H3>

<P>On the Windows CE-based platform, the registry settings are similar to those for the desktop computer. You must register the object types and the corresponding DLL under <B>HKEY_LOCAL_MACHINE\Windows CE Services\Synchronization\Objects</B>. Under the <B>Objects</B> key, there is a list of keys, one key for each object type. The only value needed is for <I>Store</I>, which specifies the name of the DLL that exports the necessary functions. </P>

<P>Using the Schedule+ example, the Windows CE-based platform component is a DLL named Pegobj.dll, which exports the four functions mentioned previously. </P>

<P>You can set these registry entries when you install your application with the device connected. The following screen shot illustrates the Windows CE-based device registry location for synchronization objects.</P>

<P>&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="syncdoc3.gif" ALT="" BORDER=0></P>

<P><B>Device registry structure</B></P>

<P>For an example of the required registry keys on the Windows CE-based platform, see the Stockpor program in the SDK. </P>

<P></P>

</BODY>
</HTML>
