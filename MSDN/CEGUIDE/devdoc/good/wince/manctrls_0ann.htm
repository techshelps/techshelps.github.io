<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Command Bands</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1>

<A NAME="_command_bands"></A>Command Bands</H1>

<P>The command bands control is a special kind of rebar control. It has a fixed band at the top containing a toolbar with a <B>Close</B> (<B>X</B>) button, and optionally, a <B>Help</B> (<B>?</B>) button and an <B>OK</B> button, in the right corner. By default, each band in the command bands control contains a command bar. You can override this, however, if you want a band to contain some other type of child window.</P>

<P><IMG SRC="comband.gif" ALT="" BORDER=0></P>

<P><B>Windows CE command band</B></P>

<H5><IMG SRC="../../images/wedge.gif" ALT="" BORDER=0>&nbsp;&nbsp;&nbsp;&nbsp;To create a command band control</H5>

<OL>
	<LI>Initialize an <B>INITCOMMONCONTROLSEX</B> structure with (ICC_BAR_CLASSES | ICC_COOL_CLASSES) as the <B>dwICC</B> member.</LI>

	<LI>Register the command bands control class and the command bar class by calling the <B>InitCommonControlsEx</B> function, passing in the <B>INITCOMMONCONTROLSEX </B>structure.</LI>

	<LI>Create the image list to use for the band images.</LI>

	<LI>Create the commands bands control by calling the <B>CommandBands_Create</B> function, and then passing the image list handle in the <I>himl</I> parameter.</LI>

	<LI>Initialize an array of <B>REBARBANDINFO</B> structures, one for each band in the command bands control.</LI>

	<LI>Add the bands by calling the <B>CommandBands_AddBands</B> function, passing the array of <B>REBARBANDINFO</B> structures in the <I>prbbi</I> parameter.</LI>

	<LI>Add controls to the command bars in the bands by calling the appropriate command bar functions for the controls you want to add.</LI>

	<LI>Add the <B>Close </B>and <B>Help</B> buttons by calling the <B>CommandBands_AddAdornments</B> function. When you do this, the <B>Close </B>button is added by default.</LI>
</OL>

<P>The following code example demonstrates how to register a command band and command bar.</P>

<PRE><CODE>INITCOMMONCONTROLSEX icex;
icex.dwSize = sizeof(icex);
icex.dwICC = ICC_BAR_CLASSES | ICC_COOL_CLASSES;
InitCommonControlsEx(&amp;icex);

HWND hwndCmdBands, hwnd;
REBARBANDINFO arbbi[2];

HIMAGELIST himl = ImageList_Create(16, 16, ILC_COLOR, 2, 0);
hwndCmdBands = CommandBands_Create(g_hinst, hwndParent, BANDS_ID, 
   RBS_VARHEIGHT | RBS_BANDBORDERS, himl);

arbbi[0].cbSize = sizeof(REBARBANDINFO); 
arbbi[0].fMask = RBBIM_ID | RBBIM_STYLE| RBBIM_SIZE |  RBBIM_IMAGE;
arbbi[0].fStyle = RBBS_NOGRIPPER ;
arbbi[0].wID = ID_MENUBAND;
arbbi[0].cx = 100;
arbbi[0].iImage = 0;

arbbi[1].cbSize = sizeof(REBARBANDINFO); 
arbbi[1].fMask = RBBIM_ID |  RBBIM_IMAGE | RBBIM_SIZE;
arbbi[1].wID = ID_BUTTONBAND;
arbbi[1].cx = 125;
arbbi[1].iImage = 1;

CommandBands_AddBands(hwndCmdBands, g_hinst, 2, arbbi);

hwnd = CommandBands_GetCommandBar(hwndCmdBands, 0);
CommandBar_InsertMenubar(hwnd, g_hinst, IDM_MAINMENU, 0);

hwnd = CommandBands_GetCommandBar(hwndCmdBands, 1);
CommandBar_AddBitmap(hwnd, HINST_COMMCTRL, IDB_STD_SMALL_COLOR, 0, 0, 0);
CommandBar_AddButtons(hwnd, sizeof(tbButtons)/sizeof(TBBUTTON), tbButtons);

CommandBands_AddAdornments(hwndCmdBands, g_hinst, CMDBAR_HELP, NULL);
</CODE></PRE>

<P>Command bands controls support the custom draw service, which makes it easy to customize the appearance of a command bands control.  For information on the custom draw service, see <A HREF="ctrls_27sj.htm">Overview of Controls</A>. </P>

</BODY>
</HTML>
