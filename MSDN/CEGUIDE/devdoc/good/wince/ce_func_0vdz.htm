<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateFileForMapping</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_getlasterror">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_createfile">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_createfilemapping">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_createfilemapping">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_mapviewoffile">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_unmapviewoffile">
</OBJECT>
</TD></TR></TABLE>



<H1>

<A NAME="_win32_createfileformapping"></A>CreateFileForMapping</H1>

<P>The <B>CreateFileForMapping</B> function creates a file that can be used for memory mapping.</P>

<H4>Syntax</H4>

<P><B>HANDLE CreateFileForMapping</B>(<B>LPCTSTR</B> <I>lpFileName,</I> <B> DWORD </B><I>dwDesiredAccess</I>, <B>DWORD </B><I>dwShareMode, </I><B>LPSECURITY_ATTRIBUTES</B> <I>lpSecurityAttributes,</I> <B> DWORD </B><I>dwCreationDisposition, </I><B>DWORD </B><I>dwFlagsAndAttributes, </I><B>HANDLE </B><I>hTemplateFile</I><B>);</B></P>

<H4>At a Glance</H4>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=33%>Header file:</TD>
<TD width=67%>Winbase.h</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>Module:</TD>
<TD width=67%>Nk</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>Platforms:</TD>
<TD width=67%>H/PC</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>Windows CE versions:</TD>
<TD width=67%>1.01 and later</TD>
</TR>
</TABLE><BR>

<H4>Parameters</H4>

<DL>
<DT><I>lpFileName</I></DT>

<DD>Pointer to a null-terminated string that specifies the name of the file that is to be created and used as a file-mapping object. The maximum length is MAX_PATH characters.</DD>

<DT><I>dwDesiredAccess</I></DT>

<DD>Type of access. An application can obtain read-only access to files, or query device attributes. You can use the following flag constants to build a value for this parameter. 

<DL>
<DT>0</DT>

<DD>Allows an application to query device attributes without actually accessing the device.</DD>

<DT>GENERIC_READ</DT>

<DD>Specifies read access to the file. Data can be read from the file and the file pointer can be moved.</DD>
</DL>
</DD>

<DT><I>dwShareMode</I> </DT>

<DD>How this file can be shared. This parameter must be some combination of the following values:

<DL>
<DT>0</DT>

<DD>Prevents the file from being shared.</DD>

<DT>FILE_SHARE_READ</DT>

<DD>Other open operations can be performed on the file for read access. If <B>CreateFile</B> is opening the client end of a mailslot, this flag is specified.</DD>

<DT>FILE_SHARE_WRITE</DT>

<DD>Other open operations can be performed on the file for write access.</DD>
</DL>
</DD>

<DT><I>lpSecurityAttributes</I></DT>

<DD>Not used. Must be NULL.</DD>

<DT><I>dwCreationDisposition</I> </DT>

<DD>This parameter must be one of the following values:

<DL>
<DT>CREATE_NEW</DT>

<DD>Creates a new file. The function fails if the specified file already exists.</DD>

<DT>CREATE_ALWAYS</DT>

<DD>Creates a new file. The function overwrites the file if it exists.</DD>

<DT>OPEN_EXISTING</DT>

<DD>Opens the file. The function fails if the file does not exist.</DD>

<DT>OPEN_ALWAYS</DT>

<DD>Opens the file, if it exists. If the file does not exist, the function creates the file as if <I>dwCreationDistribution</I> were CREATE_NEW.</DD>

<DT>TRUNCATE_EXISTING</DT>

<DD>Opens the file. Once opened, the file is truncated so that its size is zero bytes. The calling process must open the file with at least GENERIC_WRITE access. The function fails if the file does not exist.</DD>
</DL>
</DD>

<DT><I>dwFlagsAndAttributes</I> </DT>

<DD>File attributes and flags for the file. 

<P>Any combination of the following attributes is acceptable, except all other file attributes override FILE_ATTRIBUTE_NORMAL. 


<DL>
<DT>FILE_ATTRIBUTE_ARCHIVE</DT>

<DD>The file is an archive file. Applications use this attribute to mark files for backup or removal.</DD>

<DT>FILE_ATTRIBUTE_COMPRESSED</DT>

<DD>The file or directory is compressed. For a file, this means that all of the data in the file is compressed. For a directory, this means that compression is the default for newly created files and subdirectories.</DD>

<DT>FILE_ATTRIBUTE_NORMAL</DT>

<DD>The file has no other attributes set. This attribute is valid only if used alone.</DD>

<DT>FILE_ATTRIBUTE_HIDDEN</DT>

<DD>The file is hidden. It is not to be included in an ordinary directory listing.</DD>

<DT>FILE_ATTRIBUTE_READONLY</DT>

<DD>The file is read only. Applications can read the file but cannot write to it or delete it.</DD>

<DT>FILE_ATTRIBUTE_SYSTEM</DT>

<DD>The file is part of or is used exclusively by the operating system.</DD>
</DL>
</DD>
</DL>

<P>Any combination of the following flags is acceptable:

<DL>
<DT>FILE_FLAG_WRITE_THROUGH</DT>

<DD>Instructs the operating system to write through any intermediate cache and go directly to the file. The operating system can still cache write operations, but cannot lazily flush them.</DD>

<DT>FILE_FLAG_RANDOM_ACCESS</DT>

<DD>Indicates that the file is accessed randomly. Windows uses this flag to optimize file caching. Specifying this flag can increase performance for applications that read large files using sequential access. Performance gains can be even more noticeable for applications that read large files mostly sequentially, but occasionally skip over small ranges of bytes.</DD>

<DT><I>hTemplateFile</I></DT>

<DD>Not used. Ignored.</DD>
</DL>

<H4>Return Values</H4>

<P>If the function succeeds, the return value is an open handle to the specified file-mapping object. If the specified object exists before the function call and <I>dwCreationDistribution</I> is CREATE_ALWAYS or OPEN_ALWAYS, a call to <B>GetLastError</B> returns ERROR_ALREADY_EXISTS (even though the function has succeeded). If the file-mapping object does not exist before the call, <B>GetLastError</B> returns zero. If the function fails, the return value is INVALID_HANDLE_VALUE. To get extended error information, call <A HREF="JavaScript:hhobj_1.Click()"><B>GetLastError</B></A>. </P>

<H4>Remarks</H4>

<P>The <B>CreateFileForMapping</B> function is a special version of <A HREF="JavaScript:hhobj_2.Click()"><B>CreateFile</B></A> that is designed for file-mapping objects. It performs a callback into the kernel's address space so that the specified file is created by the kernel. This ensures that the file is available to processes other than the creating process.</P>

<P>The handle returned from <B>CreateFileForMapping</B> is used as the <I>hFile</I> parameter in a subsequent call to <A HREF="JavaScript:hhobj_3.Click()"><B>CreateFileMapping</B></A>, as shown in the following psuedo-code:</P>

<PRE><CODE>// psuedocode fragment to show call sequence, use of the handle
HANDLE hFile;
hFile = CreateFileForMapping(...);
CreateFileMapping(hFile, ...);
</CODE></PRE>

<H4>See Also</H4>

<P><A HREF="JavaScript:hhobj_4.Click()"><B>CreateFileMapping</B></A>, <A HREF="JavaScript:hhobj_5.Click()"><B>MapViewOfFile</B></A>, <A HREF="JavaScript:hhobj_6.Click()"><B>UnmapViewOfFile</B></A> </P>

</BODY>
</HTML>
