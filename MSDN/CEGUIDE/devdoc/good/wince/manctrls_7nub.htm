<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Command Bands</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CommandBands_AddAdornments">
</OBJECT>
</TD></TR></TABLE>



<H2>

<A NAME="_using_command_bands"></A>Using Command Bands </H2>

<P>Windows CE supports the following functions for creating and manipulating command bands controls.  </P>

<P>Use the <A HREF="JavaScript:hhobj_1.Click()"><B>CommandBands_AddAdornments</B></A> function to add a band with the <B>Close</B> (<B>X</B>) button, the <B>Help</B> (<B>?</B>) button, and the <B>OK</B> button. This band will always have a <B>Close</B> button. The <B>OK</B> button and the <B>Help</B> button are optional.</P>

<P>Use the <B>CommandBands_AddBands</B> function to add one or more bands to the control. By default, each band has a command bar as its child window. </P>

<P>Use the <B>CommandBands_Create</B> function to create a command bands control.</P>

<P>You can retrieve a command bar from a band in a command bands control by using the <B>CommandBands_GetCommandBar</B> function. Pass it the zero-based index of the band that contains the command bar you want to retrieve.</P>

<P>Unlike scroll bars and status bars, the command bar is part of the client area of your application. To determine the useable portion of the application window, use the <B>CommandBands_Height</B> function to retrieve the command bar's height in pixels and subtract the height of the command bar from the size of the client rectangle, which you obtain by calling <B>GetClientRect</B>.</P>

<P>Use the <B>CommandBands_IsVisible</B> function to determine whether a command bands control is visible.</P>

<P>Use the <B>CommandBands_GetRestoreInformation</B> function to retrieve information about the bands in a command band control, before you close the application window, so you can save the information in the registry. The next time the application is opened, you can use this information to restore the command bands control to its previous state.</P>

<P>Although you should always have a command bar or a command bands control in a Windows CE-based application that has a graphical user interface, you can provide users with the option to hide the command bands control, as long as it can be retrieved. Use the <B>CommandBands_Show</B> function show or hide the command bands control.</P>

<P>A command band is a rebar control and a toolbar control and can be manipulated using the rebar and toolbar messages.</P>

</BODY>
</HTML>
