<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Searching for Records</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeSeekDatabase">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeOpenDatabase">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeSeekDatabase">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeSeekDatabase">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeSetDatabaseInfo">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeSeekDatabase">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeReadRecordProps">
</OBJECT>
</TD></TR></TABLE>



<H2>

<A NAME="_searching_for_records"></A>Searching for Records</H2>

<P>Use the <A HREF="JavaScript:hhobj_1.Click()"><B>CeSeekDatabase</B></A> function to search for a record in a database. The <B>CeSeekDatabase</B> function always uses the current sort order as specified in the call to <A HREF="JavaScript:hhobj_2.Click()"><B>CeOpenDatabase</B></A>. If the CEDB_AUTOINCREMENT flag was specified, each read operation on the database will automatically increment the seek pointer from the current position to the next position. </P>

<P>The <A HREF="JavaScript:hhobj_3.Click()"><B>CeSeekDatabase</B></A> function can perform different types of seek operations. When calling the function, you specify a flag that indicates the type of seek operation, and a value whose meaning depends on the specified flag. For example, to find a particular record, you specify the CEDB_SEEK_CEOID flag and the object identifier of the desired record. When <B>CeSeekDatabase</B> finds a record, the seek pointer is positioned at that record. Any subsequent read operation takes place at the location of the seek pointer. </P>

<P><B>Note</B>  A seek can only be performed on a sorted property value.</P>

<P>Seek operations are affected by the sort order associated with the open database handle. For example, suppose the Contacts database was opened using a sort on the name property. If you specify the CEDB_SEEK_VALUEFIRSTEQUAL flag and a value of "Joe Smith," the <A HREF="JavaScript:hhobj_4.Click()"><B>CeSeekDatabase</B></A> function will search from the beginning of the database looking only at the name property of each record, stopping when, and if, a matching property is found. </P>

<P>You can change the sort order that was set when the database was created by using the <A HREF="JavaScript:hhobj_5.Click()"><B>CeSetDatabaseInfo</B></A> function, but this is not usually advised. The system maintains a set of indexes and other information that it uses to optimize database searches for the specified sort orders. When new sort orders are specified, the system must revise all of that internal information, which can take several minutes for large databases. The following code example demonstrates a call to <B>CeSeekDatabase</B>.</P>

<PRE><CODE>CEOID oid, oidSeek;      // Object identifier of record sought/returned
DWORD dwIndex;           // Index of record seeked to

// set value of oidSeek appropriately...
// actual set operation omitted from this fragment
// Perform the seek
oid = CeSeekDatabase(hDb,
               CEDB_SEEK_CEOID, // request a seek operation
               oidSeek, // specifies the record to seek
               &amp;dwIndex); // on success, index to the record
if (!oid)
      // error handling goes here; omitted from this fragment...
// Continues at this point only if record found 
// After finding the record, read it and get its data
oid = CeReadRecordProps(hDb, CEDB_ALLOWREALLOC, 
            &amp;wCount, NULL, &amp;lpBuffer, &amp;wSize);
</CODE></PRE>

<P>The following code example shows how to find a record in a database and read its properties into a buffer. The function <B>GetAddressData</B> takes two parameters: the object identifier of a record and a pointer to an application-defined <B>ADDRESSDATA</B> structure that receives the record's property data. First, the <B>GetAddressData</B> function allocates a temporary buffer for the property data, and then it calls the <A HREF="JavaScript:hhobj_6.Click()"><B>CeSeekDatabase</B></A> function to find the record that has the given object identifier. If the record is found, the <A HREF="JavaScript:hhobj_7.Click()"><B>CeReadRecordProps</B></A> function reads the property data into the temporary buffer. Finally, the property data is copied from the temporary buffer into the application-defined <B>ADDRESSDATA </B>structure. </P>

<PRE><CODE>// GetAddressData - Retrieves the contents of an address record
// Returns a code that indicates the result of the function
// pAddressData - Pointer to an application-defined ADDRESSDATA 
//    structure that receives the data from the address record
//
// Global variable:
//    g_hAddressDatabase - Open handle to the address database

ECODE GetAddressData(CEOID oidSeek, PADDRESSDATA pAddressData)
{
   LPBYTE lpBuffer;         // Buffer for address record
   WORD wSize = 1024;       // Size of buffer
   CEOID oid;               // Object identifier of record found or read
   DWORD dwIndex;           // Index of record seeked to
   WORD wCount;             // Number of properties in record
   int i;                   // Loop counter
   CEPROPID propid;         // Property identifier
   WORD wLength;            // String length
   ECODE ec = EC_SUCCESS;   // Error/success code

   lpBuffer = (LPBYTE) LocalAlloc(LMEM_FIXED, wSize);
   if (!lpBuffer) 
      return EC_OUTOFMEMORY;
    
   oid = CeSeekDatabase(g_hAddressDatabase, CEDB_SEEK_CEOID, 
      oidSeek, &amp;dwIndex);
   if (!oid) 
      return EC_SEEK_FAILURE;
    
   oid = CeReadRecordProps(g_hAddressDatabase, CEDB_ALLOWREALLOC, 
      &amp;wCount, NULL, &amp;lpBuffer, &amp;wSize);
   if (!oid) 
      return EC_READ_FAILURE;
    
   for (i = 0; i &lt; wCount; i++ ) 
      {
      propid = ((CEPROPVAL*) lpBuffer)[i].propid;
        
      switch (propid) 
         {
         case HHPR_NAME:
         {
                            // Copy the addressee's name.
            TCHAR* pData;
         
            wLength = 
               lstrlen(((CEPROPVAL*) lpBuffer)[i].val.lpwstr);
            pData = (TCHAR*) LocalAlloc(LMEM_FIXED, 
               wLength * sizeof(TCHAR) + 1);
            If (pData) 
            {
               lstrcpy(pData, 
                  ((CEPROPVAL*) lpBuffer)[i].val.lpwstr);
               pAddressData-&gt;pwszName = pData;
            } 
            else 
            {
               ec = EC_OUTOFMEMORY;
            }
         }
         break;
                
         case HHPR_STREET:
         { 

                            // Copy the addressee's street address.
            TCHAR* pData;

            wLength = 
               lstrlen(((CEPROPVAL*)lpBuffer)[i].val.lpwstr);
            pData = (TCHAR*) LocalAlloc(LMEM_FIXED, 
               wLength * sizeof(TCHAR) + 1, FALSE);
            if (pData) 
            {
               lstrcpy(pData, 
                  ((CEPROPVAL*) lpBuffer)[i].val.lpwstr);
               pTaskData-&gt;pwszDescription = pData;
            }
            else 
            {
               ec = EC_OUTOFMEMORY;
            }
         }
         break;

            .
            .               // Copy the remaining record properties to 
            .               // the ADDRESSDATA structure.
            

         default:
            break;
      }

      if (ec != EC_SUCCESS)
         break;
   }
    
   if (lpBuffer) 
      LocalFree(lpBuffer);

   return ec;
}</CODE></PRE>

<P></P>

</BODY>
</HTML>
