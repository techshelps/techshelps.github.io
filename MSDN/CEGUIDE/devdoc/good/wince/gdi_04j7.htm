<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Bitmaps</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_CreateDIBSection">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_SelectObject">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_DeleteObject">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_CreateCompatibleDC">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_BitBlt">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_StretchBlt">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_PatBlt">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_TransparentImage">
</OBJECT>
</TD></TR></TABLE>



<H2>

<A NAME="_using_bitmaps"></A>Using Bitmaps</H2>

<P>You can create a device-independent bitmap (DIB) with the <A HREF="JavaScript:hhobj_1.Click()"><B>CreateDIBSection</B></A> function, and then select it into a device context with the <A HREF="JavaScript:hhobj_2.Click()"><B>SelectObject</B></A> function. You use the <A HREF="JavaScript:hhobj_3.Click()"><B>DeleteObject</B></A><B> </B>function to delete the DIB.</P>

<P>In order to store a device-dependent bitmap in memory, you must first create a memory device context (DC) with the <A HREF="JavaScript:hhobj_4.Click()"><B>CreateCompatibleDC</B></A> function. This function creates a DC that is compatible with the specified device. The DC contains a single-bit array that serves as a placeholder for a bitmap. You can use the <B>CreateBitmap</B> or <B>CreateCompatibleBitmap</B> function to create a bitmap of the desired size, and then select it into the DC with the <B>SelectObject</B> function. Windows CE then replaces the single-bit array with an array large enough to store color information for the specified rectangle of pixels. </P>

<P>When you draw using the handle returned by <B>CreateCompatibleDC</B>, the output does not appear on a device's drawing surface; instead, it is stored in memory. To copy the image stored in memory to a display device, call the <A HREF="JavaScript:hhobj_5.Click()"><B>BitBlt</B></A> function. <B>BitBlt</B> copies the bitmap data from the bitmap in the source DC into the bitmap in the target DC. In this case, the source DC is the memory DC, and the target DC is the display DC. Thus, when <B>BitBlt</B> completes the transfer, the image will appear on the screen. By reversing the source and target DCs, you can use <B>BitBlt</B> to transfer images from the screen into memory. </P>

<P>Bit block transfer (BLT) functions, such as <B>BitBlt,</B> can be used to modify as well as transfer bitmaps. These functions modify a destination bitmap by combining it with a pen, a brush, and, in some cases, a source bitmap, in a format specified by a raster operation (ROP) code. Each ROP code specifies a unique logical pattern for combining graphic objects. For example, the <B>SRCCOPY</B> ROP simply copies a source bitmap to a destination bitmap while the <B>MERGECOPY</B> ROP merges the colors of a source rectangle with a specified pattern.</P>

<P>The ROP code types are described in the following table. </P>

<TABLE cols=2>

<TR VALIGN="top">
<TH align=left width=27%>ROP type </TH>
<TH align=left width=73%>Description </TH>
</TR>

<TR VALIGN="top">
<TD width=27%>ROP2 </TD>
<TD width=73%>Combines a pen or brush with a destination bitmap in one of 16 possible combinations.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>ROP3 </TD>
<TD width=73%>Combines a brush, a source bitmap, and a destination bitmap in one of 256 possible combinations. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>ROP4 </TD>
<TD width=73%>Uses a monochrome "mask" bitmap to combine a foreground ROP3 and a background ROP3. The mask uses zeros and ones to indicate the areas where each ROP3 will be used.</TD>
</TR>
</TABLE><BR>

<P>When the source and destination bitmaps are different sizes, you can use the <A HREF="JavaScript:hhobj_6.Click()"><B>StretchBlt</B></A> function to perform a BLT between the two bitmaps. <B>StrechBlt</B> copies a bitmap from a source rectangle into a destination rectangle, stretching or compressing the bitmap to fit the destination rectangle. </P>

<P>You can use the <A HREF="JavaScript:hhobj_7.Click()"><B>PatBlt</B></A> function to paint a selected rectangle using a selected brush and an ROP3 code. </P>

<P>You can use the <A HREF="JavaScript:hhobj_8.Click()"><B>TransparentImage</B></A> to transfer all portions of a bitmap except for those drawn in a specified transparent color. This function is especially useful for transferring non-rectangular images, such as icons.</P>

<P><B>Note</B>  Windows CE supports arbitrary bit pixel formats, which allow you to use BLT functions between bitmaps with different pixel depths.</P>

<P>The <B>BITMAPINFO</B> structure defines the dimensions and color information for a DIB. The <B>BITMAPINFO</B> structure must include a color table if the images are palettized, usually with 1-, 2-, 4-, and 8-bbp formats. For 16-bpp or-32-bpp non-palettized images, the color table must be three entries long; the entries must specify the value of the red, green, and blue bitmasks. Because GDI ignores the color table for 24-bpp bitmaps, you should store the image's pixels in Blue-Green-Red (BGR) format. </P>

</BODY>
</HTML>
