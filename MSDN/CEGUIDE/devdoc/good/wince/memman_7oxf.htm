<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handling Low Memory Situations</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_VirtualAlloc">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_LocalAlloc">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_HeapAlloc">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_CreateWindow">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_TerminateProcess">
</OBJECT>
</TD></TR></TABLE>



<H1>

<A NAME="_handling_low_memory_situations"></A>Handling Low Memory Situations</H1>

<P>No matter how effectively you use the <B>VirtualAlloc</B>, <B>LocalAlloc </B>and <B>HeapCreate</B> functions to allocate memory, and how efficiently your application uses RAM, the system may run low on memory. When memory is low, the <A HREF="JavaScript:hhobj_1.Click()"><B>VirtualAlloc</B></A><B> </B>function cannot find any unallocated pages. This can cause your application to stop functioning. </P>

<P>At a programming level, a low-memory situation can manifest itself to the application in the following ways: 

<UL>
	<LI>A call to the <B>VirtualAlloc</B> function fails. </LI>

	<LI>The <A HREF="JavaScript:hhobj_2.Click()"><B>LocalAlloc</B></A><B> </B>or <A HREF="JavaScript:hhobj_3.Click()"><B>HeapAlloc</B></A><B> </B>function attempts to grow a heap, but fails to do so. </LI>

	<LI>The stack tries to grow, but fails to do so. </LI>
</UL>

<P>The first two failures are returned in an orderly fashion and the user receives warning messages. These failures occur following a call by the application to a function, such as <A HREF="JavaScript:hhobj_4.Click()"><B>CreateWindow</B></A>.<B> </B>The third manifestation has more serious consequences because it causes the process to wait for a free page, and causes the program to stop responding.</P>

<P>To avoid the problems associated with low memory, the system constantly monitors the amount of memory available and tries to prevent low memory situations from occurring. It does this in several ways. When an application attempts to allocate memory, the system filters the request. Filtering prevents a single application from using all available memory with one large allocation by lowering the maximum allocation limit. When the system enters a low memory situation, the system lowers the memory limit further.</P>

<P>Another way that the system tries to prevent low-memory situations is by sending warning messages to applications. When available memory falls below a <I>hibernation threshold</I>, the system enters the<B> </B>limited-memory regime from which it asynchronously sends a WM_HIBERNATE message to each active application. This message warns the application that available memory is scarce.</P>

<P>Windows CE uses two additional thresholds, low and critical, that define successively more restrictive memory regimes. Values for memory thresholds are described in the following table. The values are based on a 1 KB memory page; values for a 4 KB memory page are provided in parentheses. </P>

<TABLE cols=3>

<TR VALIGN="top">
<TH align=left width=36%>Threshold</TH>
<TH align=left width=14%>Value</TH>
<TH align=left width=50%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=36%>Hibernation threshold</TD>
<TD width=14%>128 KB
<P>(160 KB)</P>
</TD>
<TD width=50%>The point at which the system enters a limited-memory state. The system sends a WM_HIBERNATE message when its memory falls below this value.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>Low-memory threshold</TD>
<TD width=14%>64 KB
<P>(96 KB)</P>
</TD>
<TD width=50%>The minimum available memory size that the system must maintain when it is in a low-memory state.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>Critical-memory threshold</TD>
<TD width=14%>16 KB
<P>(48 KB)</P>
</TD>
<TD width=50%>The minimum available memory size that the system must maintain when it is in a critical-memory state.</TD>
</TR>
</TABLE><BR>

<P>Maximum memory allocations in limited-memory states are described in the following table.</P>

<TABLE cols=3>

<TR VALIGN="top">
<TH align=left width=36%>Maximum allocations in limited-memory states</TH>
<TD width=12%><B>Value</B></TD>
<TD width=52%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=36%>Low Memory </TD>
<TD width=12%>16 KB</TD>
<TD width=52%>The maximum amount of memory that the system allows Virtual Alloc to allocate when the system is in a low-memory state.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>Critical Memory </TD>
<TD width=12%>8 KB</TD>
<TD width=52%>The maximum amount of memory that the system allows VirtualAlloc to allocate when the system is in a critical-memory state.</TD>
</TR>
</TABLE><BR>

<P>The system must respond to four limited-memory scenarios in Windows CE. These scenarios occur when an application does one of the following:

<UL>
	<LI>Requests less memory than the low-memory maximum</LI>

	<LI>Requests more memory than the low-memory maximum</LI>

	<LI>Requests less memory than the critical-memory maximum</LI>

	<LI>Requests more memory than the critical-memory maximum</LI>
</UL>

<P>If an application calls <B>VirtualAlloc</B> and requests less memory than the low-memory maximum, but enough to cause the system to fall below the low-memory threshold, the system<B> </B>displays<B> </B>a <B>System Out of</B> <B>Memory</B> dialog box. This dialog box is discussed in more detail in the next section. In this scenario, the user must either select applications for the system to close or allocate more RAM to program memory. If the user chooses to close applications, the system sends WM_CLOSE messages. If an application receives a WM_CLOSE message but does not shut down within eight seconds, the system<B> </B>displays<B> </B>an <B>End Task/Wait</B> dialog box. This gives the user the choice of terminating the application or to see if the application closes itself.</P>

<P>Any <B>VirtualAlloc</B> call fails if it causes the amount of available memory in the system to fall below the low-memory threshold. The system does not display the <B>System Out of Memory </B>dialog box. <B>LocalAlloc</B> does not necessarily have the same constraint as<B> VirtualAlloc</B>. Depending on the state of the system heap, a function call to <B>LocalAlloc </B>can succeed. </P>

<P>If an application calls <B>VirtualAlloc</B> to request less memory than the critical-memory maximum, the system displays the <B>System Out of Memory </B>dialog box. The user must either select applications for the system to close or increase the amount of RAM allocated to program memory, if there is any available RAM. The system calls <A HREF="JavaScript:hhobj_5.Click()"><B>TerminateProcess</B></A><B> </B>to terminate any applications selected by the user.</P>

<P>Applications that call <B>VirtualAlloc</B> fail if the function causes the amount of available memory in the system to fall below the critical-memory threshold. Depending on the state of the system heap, a function call to <B>LocalAlloc</B> can succeed.</P>

</BODY>
</HTML>
