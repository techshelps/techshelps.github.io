<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Brushes</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1>

<A NAME="_brushes"></A>Brushes</H1>

<P>In Windows CE, a <I>brush</I> is a graphic object for painting the interior of closed shapes. Drawing applications use brushes to paint shapes; word processing applications use brushes to paint rules; computer-aided design (CAD) applications use brushes to paint the interiors of cross-section views; and spreadsheet applications use brushes to paint graphs. </P>

<P>When you call one of the functions that create a brush, such as <B>CreatePatternBrush</B>, it returns a handle to a logical brush. When you select the logical brush into the device context with the <B>SelectObject</B> function, the device driver for the corresponding device creates the physical brush that will be used for painting. </P>

<P>When you call a painting function, GDI maps a pixel in the brush bitmap to the window origin of the client area. The window origin is the upper-left corner of the window's client area. The coordinates of the mapped pixel are called the brush origin. The default brush origin is the upper-left corner of the brush bitmap, at the coordinates (0, 0). You can use the <B>SetBrushOrgEx</B> function to change the location of the brush origin by a specified number of pixels. To make the changes effective, you must use the <B>SelectObject</B> function to select the modified brush.</P>

<P>Windows CE supports three types of logical brushes: stock brushes, solid brushes, and pattern brushes. </P>

<P>The seven types of stock brushes consist of the white brush, black brush, gray brush, light gray brush, dark gray brush, the null brush (which does not paint), and the hollow brush. You can use the <B>GetStockObject</B> function to select one of the stock brushes. </P>

<P>Windows CE maintains 21 stock brushes whose colors are used in window elements such as menus, scroll bars, and buttons. You can obtain a handle to a system stock brush with the <B>GetSysColorBrush</B> function. Furthermore, you can retrieve the color window element with the <B>GetSysColor</B> function, and set a color corresponding to a window element with the <B>SetSysColors</B> function. </P>

<P>A solid brush contains 64 pixels of the same color in an 8 pixel by 8 pixel square. You can call the <B>CreateSolidBrush</B> function to create a solid brush of a specified color. To paint with your solid brush, use <B>SelectObject </B>to select it into a specified device context. </P>

<P>You can create a pattern brush from an application-defined bitmap or a device-independent bitmap (DIB). To create a logical pattern brush, you must create a bitmap, and then call the <B>CreatePatternBrush</B> or <B>CreateDIBPatternBrushPt</B> function, supplying a handle that identifies the bitmap or DIB.</P>

<P>Windows CE does not support hatched brushes. However, you can achieve the effect of a hatched brush by creating a pattern brush with the desired hatch pattern using the <B>CreateDIBPatternBrushPt </B>function. You can create bitmaps of multiple sizes as well. </P>

</BODY>
</HTML>
