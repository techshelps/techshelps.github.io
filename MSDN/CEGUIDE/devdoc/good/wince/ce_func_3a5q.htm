<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LibMain</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1>

<A NAME="_libmain"></A>LibMain</H1>

<P>The <B>LibMain</B> function is called by the system to initialize a dynamic-link library (DLL). A DLL must contain <B>LibMain</B> if the library is linked with the file Libentry.obj.</P>

<H4>Syntax</H4>

<P><B>int CALLBACK LibMain</B>(<B>HINSTANCE</B> <I>hinst</I>, <B>WORD</B> <I>wDataSeg</I>, <B>WORD</B> <I>cbHeapSize</I>, <B>LPSTR</B> <I>lpszCmdLine<B>)</B></I><B>;</B></P>

<H4>At a Glance</H4>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=33%>Platforms:</TD>
<TD width=67%>H/PC</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>Windows CE versions:</TD>
<TD width=67%>1.0 and later</TD>
</TR>
</TABLE><BR>

<H4>Parameters</H4>

<DL>
<DT><I>hinst</I></DT>

<DD>Handle to the instance of the DLL.</DD>

<DT><I>wDataSeg</I></DT>

<DD>Value of the data segment (DS) register.</DD>

<DT><I>cbHeapSize</I></DT>

<DD>Size of the heap defined in the module-definition file. (The LibEntry routine in LIBENTRY.OBJ uses this value to initialize the local heap.)</DD>

<DT><I>lpszCmdLine</I></DT>

<DD>Pointer to a null-terminated string specifying command-line information. This parameter is rarely used by DLLs.
</DD>
</DL>

<H4>Return Values</H4>

<P>The function should return 1 if it is successful. Otherwise, it should return 0.</P>

<H4>Remarks</H4>

<P>The <B>LibMain</B> function is called by <B>LibEntry</B>, which is called by Windows when the DLL is loaded. The <B>LibEntry</B> routine is provided in the LIBENTRY.OBJ module. <B>LibEntry</B> initializes the DLL's heap (if a HEAPSIZE value is specified in the DLL's module-definition file) before calling <B>LibMain</B>.</P>

<P>The following example shows a typical <B>LibMain</B> function:</P>

<PRE><CODE>int CALLBACK LibMain (HINSTANCE hinst, WORD wDataSeg, WORD cbHeap, LPSTR lpszCmdLine)
  {
    HGLOBAL           hgblClassStruct;
    LPWNDCLASS        lpClassStruct;
    static HINSTANCE  hinstLib = NULL;

    /* Has the library been initialized yet? */

    if (hinstLib == NULL)
      {
        hgblClassStruct = LocalAlloc(0, sizeof(WNDCLASS));
   
        if (hgblClassStruct != NULL)
          {
            lpClassStruct = (LPWNDCLASS) LocalLock(hgblClassStruct);
  
            if (lpClassStruct != NULL)
              {
                /* Define the class attributes. */

                lpClassStruct-&gt;style = CS_HREDRAW | CS_VREDRAW | CS_DBLCLKS | CS_GLOBALCLASS;
                lpClassStruct-&gt;lpfnWndProc = (WNDPROC)DllWndProc;
                lpClassStruct-&gt;cbWndExtra = 0;
                lpClassStruct-&gt;hInstance = hinst;
                lpClassStruct-&gt;hIcon = NULL;
                lpClassStruct-&gt;hCursor = NULL;
                lpClassStruct-&gt;hbrBackground = (HBRUSH) (COLOR_WINDOW + 1);
                lpClassStruct-&gt;lpszMenuName = NULL;
                lpClassStruct-&gt;lpszClassName = TEXT("MyClassName");

                hinstLib = (RegisterClass(lpClassStruct)) ? hinst : NULL;
                LocalUnlock(lpClassStruct);
              }
          }
      }
    return 1 ;
  }
</CODE></PRE>

</BODY>
</HTML>
