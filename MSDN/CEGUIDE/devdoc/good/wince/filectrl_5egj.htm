<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Images in Image Lists</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_IMAGELISTDRAWPARAMS">
</OBJECT>
</TD></TR></TABLE>



<H2>

<A NAME="_using_images_in_image_lists"></A>Using Images in Image Lists</H2>

<P>You can add icons or other bit images to an image list. You add bit images by specifying the handles to two bitmaps in a call to the <B>ImageList_Add</B> function. The first bitmap contains one or more images to add to the image bitmap, and the second bitmap contains the masks to add to the mask bitmap. Windows CE ignores the second bitmap handle for nonmasked images; you can set it to NULL. </P>

<P>The <B>ImageList_AddMasked</B> function adds bit images to a masked image list. This function is similar to <B>ImageList_Add</B>, in which you do not specify a mask bitmap. Instead, you specify a color that the system combines with the image bitmap to automatically generate the masks. Windows CE changes each pixel of the specified color in the image bitmap to black, and sets the corresponding bit in the mask to one. As a result, any pixel in the image that matches the specified color is transparent when the image is drawn. </P>

<P>The <B>ImageList_AddIcon</B> function adds an icon to an image list. If the image list is masked, <B>ImageList_AddIcon</B> adds the mask provided with the icon to the mask bitmap. If the image list is nonmasked, the mask for the icon is not used when drawing the image. </P>

<P>You can create an icon based on an image and mask in an image list by using the <B>ImageList_GetIcon</B> function. The function returns the handle to the icon. <B>ImageList_Add</B>, <B>ImageList_AddMasked</B>, and <B>ImageList_AddIcon</B> assign an index to each image as it is added to an image list. When more than one image is added at a time, the functions return the index of the first image. The <B>ImageList_Remove</B> function removes an image from an image list.</P>

<P>The <B>ImageList_Replace</B> and <B>ImageList_ReplaceIcon</B> functions replace an image in an image list with a new image. <B>ImageList_Replace</B> replaces an image with a bit image and mask, and <B>ImageList_ReplaceIcon</B> replaces an image with an icon. You can use the <B>ImageList_Copy</B> function to move or copy images within an image list.</P>

<P>The <B>ImageList_Merge</B> function merges two images, storing the new image in a new image list. The new image is created by drawing the second image transparently over the first. The mask for the new image is the result of performing a logical <B>OR</B> operation on the bits of the masks for the two original images. </P>

<P>The <B>ImageList_GetImageInfo</B> function fills an <B>IMAGEINFO</B> structure with information about a single image, including the handles of the image and mask bitmaps, the number of color planes and bits per pixel, and the bounding rectangle of the image within the image bitmap. You can use this information to directly manipulate the bitmaps for the image. The <B>ImageList_GetImageCount</B> function retrieves the number of images in an image list. </P>

<P>You can use the <B>ImageList_DrawIndirect </B>function to specifies custom drawing properties for an image in an image list. This function takes a pointer to an <A HREF="JavaScript:hhobj_1.Click()"><B>IMAGELISTDRAWPARAMS</B></A> structure as a parameter. The <B>IMAGELISTDRAWPARAMS </B>structure contains information about how to draw the image.</P>

</BODY>
</HTML>
