<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Opening the Contacts Database</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H2>

<A NAME="_opening_the_contacts_database"></A>Opening the Contacts Database</H2>

<P>Before you can work with any address cards, you must first open the database and specify a sort order and a handle to a window. The window receives notification messages from the object store. Before you can open the database, you must create it by calling the <B>CreateAddressBook</B> function.</P>

<H5><IMG SRC="../../images/wedge.gif" ALT="" BORDER=0>&nbsp;&nbsp;&nbsp;&nbsp;To open the Contacts database</H5>

<OL>
	<LI>Call the <B>OpenAddressBook</B> function. </LI>

	<LI>Define a sort order to be used and specify a window to receive the notification message.
<P>If the Boolean function returns TRUE, you can proceed to work with the opened database. The function returns FALSE if you attempt to open a non-existing database. If another Contacts database application has altered the sort order in an existing database, the function returns FALSE as well. 
</LI>

	<LI>Call <B>GetLastError</B> to get error information. If the error value is ERROR_FILE_NOT_FOUND, the Contacts database does not exist. </LI>

	<LI>Call the <B>CreateAddressBook</B> function to create the database before re-opening it. 
<P>– Or –

<P>If the error value is ERROR_INVALID_PARAMETER, the database does exist, but the sort order has been altered. Call <B>OpenAddressBook</B> again, but without specifying a sort order.
</LI>
</OL>

<P>The <B>CreateAddressBook</B> function can take as input a NULL array for the sort order properties. In this case, the function uses the surname, company name, office telephone number, and home telephone number properties as the default sort order parameters. </P>

<P>Multiple applications can open the Contacts database simultaneously. To coordinate data access and preserve data integrity, the operating system sends object-store notification messages to attached applications whenever the database is modified. The notification messages have the DB_CEOID_ prefix and are defined in the Windbase.h header file. After receiving a notification message, an application calls the <B>RecountCards</B> function to recalculate the number of records in the database. </P>

<P>The following code example illustrates how to implement opening the Contacts database. When <B>OpenAddressBook</B> fails because the database does not exist, <B>CreateAddressBook</B> is invoked to create the database before <B>OpenAddressBook</B> is called again. The <B>GetPropertyDataStruct</B> function examines address card properties to ensure that the database has not been corrupted. The sample function returns TRUE if the database was successfully opened or FALSE if it was not.</P>

<PRE><CODE>BOOL OpenUpTheAddressBook(HWND hwndParent, HHPRTAG hhSortProp)
{
   DWORD dwError;                   // Error code
   HHPRTAG propList[MAX_COLUMNS];   // Sort-order property tags
   int nColumns;                    // Number of sortable columns 
   int index;                       // Loop index

   if (!OpenAddressBook(hwndParent, hhSortProp)) {
      dwError = GetLastError();
      if (dwError == ERROR_FILE_NOT_FOUND)
      {

            if (!CreateAddressBook(NULL, 0)) 
               {
               goto InitError;
               }

            if (!OpenAddressBook(hwndParent, hhSortProp)) 
               {
               goto InitError;
               }

      } else if (dwError == ERROR_INVALID_PARAMETER) 
      { 
            if (!OpenAddressBook(hwndParent, 0)) 
               {
               goto InitError;
               }

            nColumns = MAX_COLUMNS;
            if (!GetColumnProperties(&amp;propList, &amp;nColumns)) 
               {
               goto InitError;
               }

            for (index = 0; index &lt; nColumns; index++) 
               {
               if (GetPropertyDataStruct(GPDS_PROPERTY, 
                        propList[index], NULL) == GPDS_ERR) 
                     {
                     MessageBox(hwndParent, IDS_CORRUPT_DATABASE, 
                        MB_ICONEXCLAMATION | MB_OK);
                     goto InitError;
                     }
               }

            hhSortProp = propList[0];
            if (!OpenAddressBook(hwndParent, hhSortProp)) 
               {
               goto InitError;
               }
      } else 
            {
            goto InitError;
            }
   }
      return TRUE;

   InitError:
      return FALSE;
}
</CODE></PRE>

</BODY>
</HTML>
