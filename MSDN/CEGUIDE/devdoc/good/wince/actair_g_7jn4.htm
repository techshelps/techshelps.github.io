<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Active Desktop</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H2>

<A NAME="_active_desktop"></A>Active Desktop</H2>

<P>Windows CE Active Desktop shares many features with Channel Browser and uses the underlying Mobile Channels infrastructures. Its main window uses HTML controls to display the system information and selected shortcuts to applications. Each control represents a desktop component. On a Windows CE-based device, such as the Palm-size PC, Active Desktop components typically include the Windows CE Logo, Owner Information, Appointments, Tasks, Messages, and custom desktop components. Tapping the Appointment component launches the Calendar application. Similarly, the Tasks and Messages items provide shortcuts to the Tasks and Inbox applications, respectively. </P>

<P>Each desktop component is driven by a Mobile Channels script. You can supply the script file for defining desktop components. The following MCS file for a sample Stock Market component gives you a working example.</P>

<PRE><CODE>&lt;HTML&gt;

&lt;HEAD&gt;
&lt;META HTTP-EQUIV="Content-Type" content="text/html; charset=iso-8859-1"&gt;
&lt;META HTTP-EQUIV=NOTIFY
content="CACHEUPDATE=http://Market/Stocks/Stocks.MCD;URL=mctp://Stocks"&gt;

&lt;TITLE&gt;Stock Quotes&lt;/TITLE&gt;
&lt;/HEAD&gt;

&lt;BODY BGCOLOR=#FFFFFF&gt;

&lt;%
SET MC = Server.CreateObject("MobileChannels.Utilities")

' Get the small logo image from the CDF 
Base = MC.Navigate("", "INMATCH", "BASE")
LogoElem = MC.Navigate("", "INMATCH", "LOGO")
Logo = MC.Navigate(LogoElem, "INMATCH", "HREF")
LogoImg = MC.Value(Logo)
IF Base THEN LogoImg = MC.Value(Base) &amp; LogoImg END IF

' Jump to the data reference in the CDF
DataElem = MC.Locate("D1")

' Create a table of SYMBOL/VALUE/CHANGE for each stock
Response.Write("&lt;TABLE CELLPADDING=-1 CELLSPACING=-1&gt;")
Response.Write("&lt;TBODY&gt;")

RecordNum = 1
Record = MC.Data(DataElem, RecordNum)

DO WHILE Record.Count
    Response.Write("&lt;TR VALIGN=BOTTOM&gt;")

    ' Show the logo (from the CDF)
    IF RecordNum = 1 THEN
        Response.Write("&lt;TD&gt;&lt;IMG SRC=" &amp; LogoImg &amp; "&gt;&lt;/TD&gt;")
    Else
        Response.Write("&lt;TD&gt;&lt;/TD&gt;")
    END IF

    Response.Write("&lt;TD&gt;" &amp; Record(0).Value &amp; "&lt;/TD&gt;")
    Response.Write("&lt;TD ALIGN=RIGHT&gt;&amp;nbsp;$" &amp; Record(1).Value &amp; "&lt;/TD&gt;")
    Response.Write("&lt;TD ALIGN=RIGHT&gt;&amp;nbsp;$" &amp; Record(2).Value &amp; "&lt;/TD&gt;")
    Response.Write("&lt;/TR&gt;")

    RecordNum = RecordNum + 1
    Record = MC.Data(DataElem, RecordNum)
LOOP

Response.Write("&lt;/TBODY&gt;")
Response.Write("&lt;/TABLE&gt;")

' Show the user when the data was last updated (from data file)
Record = MC.Data(DataElem, 0)
IF Record.Count THEN
  Response.Write("&lt;HR&gt;&lt;I&gt;Last Updated&lt;/I&gt;: " &amp; Record(0).Value &amp; " at " &amp; Record(1).Value)
END IF

%&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</CODE></PRE>

<P>You create a desktop component in a CDF file in which the desktop component is defined as a child element of a channel. To do this, you must use the following tag in the CDF file containing the desktop component:</P>

<PRE><CODE>&lt;USAGE VALUE="MobileDesktopComponent"/&gt;
</CODE></PRE>

<P>Any such script is appropriately registered as a desktop component. The script files are then fed into the MCTP transport to process the data into the HTML format for display in the viewer. All the usual HTML tags are allowed. </P>

<P></P>

</BODY>
</HTML>
