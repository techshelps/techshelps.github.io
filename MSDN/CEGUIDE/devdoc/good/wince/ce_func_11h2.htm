<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TransportRecv</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mailmsg">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_transporterrormsg">
</OBJECT>
</TD></TR></TABLE>



<H1>

<A NAME="_transportrecv"></A>TransportRecv</H1>

<P>The <B>TransportRecv</B> function gets a specific message from the mail server. The number of <B>MailMsg</B> messages that can be retrieved is between 1 and the number returned by <B>TransportCount</B>.</P>

<H4>Syntax</H4>

<P><B>BOOL TransportRecv(HANDLE </B><I>hService, </I><B>WORD </B><I>wMessageId, </I><B>short </B><I>sNumLines, </I><B>MailMsg </B>*<I>MsgPtr, </I><B>lpMailAttArray </B><I>*lplpMaa<B>)</B></I><B>;</B></P>

<H4>At a Glance</H4>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=33%>Header file:</TD>
<TD width=67%>Smtp.h</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>Platforms:</TD>
<TD width=67%>H/PC</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>Windows CE versions:</TD>
<TD width=67%>1.0 and later</TD>
</TR>
</TABLE><BR>

<H4>Parameters</H4>

<DL>
<DT><I>hService</I></DT>

<DD>Handle to a <B>SERVICE</B> structure.</DD>

<DT><I>wMessageId</I></DT>

<DD>Identifier of the message for this session. If this value is zero, the unique message identifier stored in the <B>szSvcId</B> member of the <B>MailMsg</B> structure is used. For more information, see <A HREF="svcsampl_02ed.htm">Implementing a Sample Transport Service</A>.</DD>

<DT><I>sNumLines</I></DT>

<DD>Number of lines to receive. For the sample service, <I>sNumLines</I> is assigned value indicating the number of lines to be read. 

<P>If only message information is to be returned, <I>sNumLines </I>is set to one of the following flags:


<DL>
<DT>TRANSPORT_MSG_EXIST</DT>

<DD>Used to check for the existence of a message, without allocating any memory. Neither the message header nor the message body is read.</DD>

<DT>TRANSPORT_ALL_LINES</DT>

<DD>Returns the unique identifier stored in the <B>szSvcId</B> member of the <B>MailMsg</B> structure as determined from <I>wSessionId</I>.</DD>

<DT>TRANSPORT_HEADERS</DT>

<DD>Parses the message header and places the information in <I>MsgPtr</I>, also without allocating any memory. The message body is not read.</DD>
</DL>
</DD>

<DT><I>MsgPtr</I></DT>

<DD>A <A HREF="JavaScript:hhobj_1.Click()"><B>MailMsg</B></A><B> </B>structure that contains the message to be read.</DD>

<DT><I>lplpMaa</I></DT>

<DD>For Windows CE version 1.0, this parameter is reserved must be set to NULL. For version 2.0, it is a pointer to <B>lpMailAttArray</B> which itself is a pointer to a <B>MailAttArray</B> structure.</DD>
</DL>

<H4>Return Values</H4>

<P>Returns TRUE if successful or FALSE otherwise. To get extended error information, call <A HREF="ce_func_690y.htm"><B>TransportError</B></A> or <A HREF="JavaScript:hhobj_2.Click()"><B>TransportErrorMsg</B></A>.</P>

<H4>Remarks</H4>

<P>The <B>TransportRecv</B> function must be implemented by the transport service provider in a DLL registered as a mail service. The Inbox application can load this DLL and call this function.</P>

<P>For the sample transport service, <B>TransportRecv</B> receives a message via <I>hService</I> and copies the message (or message information) into the <I>MsgPtr</I> structure. If the calling application wishes only to check for the existence of the message, or just obtain header information, the calling application sets <I>sNumLines</I> to TRANSPORT_MSG_EXIST.</P>

<P>A typical <B>TransportRecv</B> routine opens the file containing the message (specified in <I>hService</I>), allocates heap space, parses the header, and fills the various <I>MsgPtr</I> fields with the appropriate information. After assigning pointers to the heap, header, and body fields of <I>MsgPtr</I>, the sample <B>TransportRecv</B> frees the memory allocated to <I>MsgPtr</I>, but leaves the heap it created intact. The heap must be destroyed by using <B>TransportFreeMsg</B>.</P>

<P>If the <I>lplpMaa</I> parameter returns a valid pointer and the transport determines that attachments are to be added to the message, then a <B>MailAttArray</B> structure should be allocated from the message heap and initialized with appropriate attachment information.</P>

<H4>See Also</H4>

<P><A HREF="ce_func_8obr.htm"><B>TransportFreeMsg</B></A></P>

</BODY>
</HTML>
