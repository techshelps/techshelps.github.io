<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sample Infrared Socket Server</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H3>

<A NAME="_sample_infrared_socket_server"></A>Sample Infrared Socket Server</H3>

<P>This sample IrSock server allocates a socket and binds it to the IAS name, "MyServer." It then allocates a single connection object and prepares the server to listen for incoming connections. When the client contacts the server, the server accepts the connection. It then receives a string from the client, passes one back, and closes the connection.</P>

<PRE><CODE>#include &lt;windows.h&gt;
#include &lt;af_irda.h&gt;

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
                  LPTSTR lpCmdLine, int nCmdShow )
{
   SOCKET         ServerSock,
                  ClientSock;

   SOCKADDR_IRDA  address = {AF_IRDA, 0, 0, 0, 0, "MyServer"};

   char           helloServer[25];               // ASCII String 
   TCHAR          helloText[25];                 // UNICODE String
   int            idx = 0;

   ServerSock = socket(AF_IRDA, SOCK_STREAM, 0);

   bind(ServerSock, (struct sockaddr *)&amp;address, sizeof(address));

   listen(ServerSock, 1);

   ClientSock = accept(ServerSock, 0, 0);

   recv(ClientSock, helloServer, sizeof(helloServer), 0);

   for (idx = 0; idx &lt;= sizeof(helloServer); idx++)
         helloText[idx] = helloServer[idx];

   MessageBox (NULL, helloText, TEXT("IR Server"), MB_OK);

   send(ClientSock, "Hello Client!", strlen("Hello Client!")+1, 0);

   closesocket(ClientSock);
   closesocket(ServerSock);

return 0;
}</CODE></PRE>

</BODY>
</HTML>
