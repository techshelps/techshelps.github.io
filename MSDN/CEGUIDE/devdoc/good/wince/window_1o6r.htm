<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processing Intermediate Messages</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H3>

<A NAME="_processing_intermediate_messages"></A>Processing Intermediate Messages</H3>

<P>You may need to process some of the messages you receive from <B>GetMessage</B> before you send them out using <B>DispatchMessage</B>. The most common processing routines are <B>TranslateMessage</B>, <B>TranslateAccelerator</B>, and <B>IsDialogMessage</B>. Some of these routines may dispatch messages internally because the application no longer needs to call <B>DispatchMessage</B> in the main message loop.</P>

<P>You usually call <B>TranslateMessage</B> before you call <B>DispatchMessage</B>. <B>TranslateMessage</B> determines which characters go with keyboard messages. <B>TranslateMessage</B> posts the characters to the message queue to be picked up on the next pass of the message loop.</P>

<P>Use the <B>TranslateAccelerator</B> function to intercept keyboard messages and generate menu commands. Use the <B>IsDialogMessage</B> function to ensure the proper operation of modeless dialog boxes. </P>

<P>You can remove a message from its queue with the <B>GetMessage</B> function. Use the <B>PeekMessage</B> function to examine a message without removing it from its queue. This function fills an <B>MSG</B> structure with information about the message. However, you should use the <B>PeekMessage</B> function in Windows CE carefully. Because the <B>PeekMessage</B> function does not block waiting for a message, it is commonly used in loops in Windows-based desktop platforms. This allows an application to continue processing whether or not there are any messages in its queue. In a Windows CE-based application, if an application does not block waiting for a message or some other event, the kernel cannot put the CPU into low-power mode, which can quickly drain the device's batteries. Also, in Windows CE, <B>PeekMessage</B> does not remove WM_PAINT messages.</P>

</BODY>
</HTML>
