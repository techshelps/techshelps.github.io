<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HTML Viewer Control</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_CreateWindow">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Win32_LoadLibrary">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_CreateWindow">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_WM_SETTEXT">
</OBJECT>
</TD></TR></TABLE>



<H1>

<A NAME="_html_viewer_control"></A>HTML Viewer Control</H1>

<P>The Hypertext Markup Language (HTML) viewer control provides a viewer for displaying HTML text and embedded images. The HTML viewer provides the functionality required to implement Microsoft® Pocket Internet Explorer and the Help engine. </P>

<P>You can also create other viewers based on the HTML viewer control. An HTML source can include references to other sources, which may provide different types of data. If the application determines that some of the data it retrieves is of a type other than HTML, it can invoke another type of viewer to display that data.</P>

<P>To use the HTML viewer control, you must include the Htmlctrl.h header file and either link your application with the Htmlview.dll dynamic link, or load the HTML viewer DLL by calling the <B>LoadLibrary</B> function. When you call <B>LoadLibrary</B>, pass "Htmlview.dll" as the <I>lpLibFileName</I> parameter.</P>

<P>Before you can create or use the HTML viewer control, you have to register it by calling the <B>InitHTMLControl</B> function.You create an HTML viewer control by specifying DISPLAYNAME in the <I>lpClassName</I> parameter to the <A HREF="JavaScript:hhobj_1.Click()"><B>CreateWindow</B></A> function.</P>

<H5><IMG SRC="../../images/wedge.gif" ALT="" BORDER=0>&nbsp;&nbsp;&nbsp;&nbsp;To create the HTML viewer control</H5>

<OL>
	<LI>Load the HTML viewer DLL by calling the <A HREF="JavaScript:hhobj_2.Click()"><B>LoadLibrary</B></A> function, specifying "Htmlview.dll" in the <I>lpLibFileName</I> parameter.</LI>

	<LI>Register the HTML viewer control class by calling the <B>InitHTMLControl</B> function. </LI>

	<LI>Create a window for the HTML viewer control by calling the <A HREF="JavaScript:hhobj_3.Click()"><B>CreateWindow</B></A> function, specifying DISPLAYNAME in the <I>lpClassName</I> parameter.</LI>
</OL>

<H5><IMG SRC="../../images/wedge.gif" ALT="" BORDER=0>&nbsp;&nbsp;&nbsp;&nbsp;To display an HTML document</H5>

<OL>
	<LI>Clear the current contents of the HTML viewer control by sending it a <A HREF="JavaScript:hhobj_4.Click()">WM_SETTEXT</A> message.</LI>

	<LI>Load an HTML document and copy the document's text to the control by sending the control a series of DTM_ADDTEXT messages for ASCII or DTM_ADDTEXTW messages for Unicode.</LI>

	<LI>When the document processing is complete, send the control a DTM_ENDOFSOURCE message.</LI>

	<LI>Process any NM_HOTSPOT notifications sent by the control when the user taps a link or submits a form.</LI>

	<LI>For each NM_INLINE_IMAGE notification received from the control, load the image so that the HTML viewer control will display the image loading icon.</LI>

	<LI>After the image has loaded successfully, send the control a DTM_SETIMAGE message containing the bitmap handle (HBITMAP) of the image to display.
<P>If the image does not load successfully, send a DTM_IMAGEFAIL message, which indicates to the control that it should display the broken image icon.
</LI>

	<LI>For each NM_INLINE_SOUND notification received from the control, load the sound, and then play it the number of times indicated in the <I>dwLoopCount</I> parameter.</LI>
</OL>

<P>The following code example shows how to create an HTML viewer control. </P>

<PRE><CODE>#define DISPLAYCLASS  TEXT("DISPLAYCLASS")

BOOL g_bMakeFit = TRUE;          // DTM_ENABLESHRINK Shrink-enable flag
TCHAR const c_szHTMLControlLibrary[] = TEXT("htmlview.dll");

HINSTANCE g_hInstHTMLCtrl;       // HTML Control Viewer instance
HINSTANCE hInstance;             // Application instance
HWND m_hwndHtml;                 // Handle to HTML DISPLAYCLASS window

g_hInstHTMLCtrl = LoadLibrary(c_szHTMLControlLibrary);

InitHTMLControl(hInstance);

LRESULT WndProc (HWND hwnd, UINT msg, WPARAM wp, LPARAM lp) 
{
   switch (message) 
   {
      case WM_CREATE: 
      {
         m_hwndHtml = CreateWindow(DISPLAYCLASS, NULL,
            WS_CHILD | WS_VISIBLE | WS_VSCROLL | WS_CLIPSIBLINGS,
            rc.left, rc.top, rc.right - rc.left, rc.bottom - rc.top,
                hWnd, (HMENU)IDC_HTMLVIEW, g_hInst, NULL);
         SetFocus(m_hwndHtml);
         PostMessage(m_hwndHtml, DTM_ENABLESHRINK, 0, g_bMakeFit);
         break;
      }
      .
      .
      .
   }
}
</CODE></PRE>

<P><B>Note</B>  When calling the <B>LoadLibrary</B> and <B>CreateWindow</B> functions, the library or class name has to be a Unicode string. Use the TEXT macro to cast a string as Unicode, for example, TEXT("Htmlview.dll").</P>

<P>Pocket Internet Explorer is an example of an application that uses the HTML viewer control. The application (Webview.exe) links with the dynamic-link library that provides the HTML viewer control (Htmlview.dll). The application provides the user interface, retrieves the data from the Uniform Resource Locators (URL), and interprets the data. </P>

<P>The following illustration describes how the application interacts with the HTML viewer control. </P>

<P><B>Interaction between the application and HTML viewer control</B></P>

<P><B>Note</B>  The HTML viewer control interface is not an ActiveX control, and does not expose any COM interfaces.</P>

<P></P>

</BODY>
</HTML>
