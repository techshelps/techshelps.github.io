<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interprocess Synchronization</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Win32_CreateEvent">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Win32_CreateMutex">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Win32_CreateEvent">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Win32_CreateMutex">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Win32_GetLastError">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Win32_CreateEvent">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Win32_CreateMutex">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Win32_CreateMutex">
</OBJECT>
</TD></TR></TABLE>



<H1>

<A NAME="_interprocess_synchronization"></A>Interprocess Synchronization</H1>

<P>Because multiple processes can have handles to the same event or mutex object, these objects can be used to accomplish interprocess synchronization. The process that creates an object can use the handle returned by the creation function, <A HREF="JavaScript:hhobj_1.Click()"><B>CreateEvent</B></A> or <A HREF="JavaScript:hhobj_2.Click()"><B>CreateMutex</B></A>. Other processes can open a handle to the object by using its name in another call to the appropriate creation function. </P>

<P>Named objects provide an easy way for processes to share object handles. The name specified by the creating process is limited to the number of characters defined by MAX_PATH. It can include any character except the backslash path-separator character (\). Once a process has created a named event or mutex object, other processes can use the name to call the appropriate function, either <A HREF="JavaScript:hhobj_3.Click()"><B>CreateEvent</B></A> or <A HREF="JavaScript:hhobj_4.Click()"><B>CreateMutex</B></A>, to open a handle to the object. Name comparison is case-sensitive. </P>

<P>The names of event and mutex objects share the same name space. If you specify a name that is in use by an object of another type when you create an object, the function succeeds, but <A HREF="JavaScript:hhobj_5.Click()"><B>GetLastError</B></A> returns ERROR_ALREADY_EXISTS. To avoid this error, use unique names and be sure to check function-return values for duplicate-name errors. </P>

<P>If the name specified in a call to <A HREF="JavaScript:hhobj_6.Click()"><B>CreateEvent</B></A> matches the name of an existing event object, the function returns the handle of the existing object. When using this technique for event objects, however, none of the calling processes should request immediate ownership of the event. If multiple processes do request immediate ownership, you may have difficulty predicting which process will get the initial ownership. </P>

<P>The following code examples illustrate the use of object names by creating and opening named objects. The first process uses the <A HREF="JavaScript:hhobj_7.Click()"><B>CreateMutex</B></A> function to create the mutex object. Note that the function succeeds even if there is an existing object with the same name. </P>

<PRE><CODE>HANDLE hMutex; 
DWORD dwErr; 

hMutex = CreateMutex
      ( 
      NULL,                           // no security descriptor
      FALSE,                          // mutex not owned
      "NameOfMutexObject");           // object name

if (hMutex == NULL) 
      printf("CreateMutex error: %d\n", GetLastError() ); 
else 
      if ( GetLastError() == ERROR_ALREADY_EXISTS ) 
         printf("CreateMutex opened existing mutex\n"); 
      else 
         printf("CreateMutex created new mutex\n"); 
</CODE></PRE>

<P>The second process uses the <A HREF="JavaScript:hhobj_8.Click()"><B>CreateMutex</B></A> function to open a handle of the existing mutex. </P>

<PRE><CODE>HANDLE hMutex; 

hMutex = OpenMutex
      ( 
      MUTEX_ALL_ACCESS,               // request full access
      FALSE,                          // handle not inheritable
      "NameOfMutexObject");           // object name

if (hMutex == NULL) 
      printf("OpenMutex error: %d\n", GetLastError() ); </CODE></PRE>

</BODY>
</HTML>
