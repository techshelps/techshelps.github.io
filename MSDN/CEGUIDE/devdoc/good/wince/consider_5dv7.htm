<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hardware Considerations</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H2>

<A NAME="_hardware_considerations"></A>Hardware Considerations</H2>

<P>When you port code between platforms, remember that the hardware configuration of most Windows CE-based platforms differs from that of a desktop computer. In some cases, a Windows CE-based platform might not be recognizable as a computer, though the functionality might be typical for a desktop computer. In addition, a Windows CE-based device may have hardware that has no counterpart on a conventional desktop computer, such as a Global Positioning System (GPS) chip. The most important hardware considerations for Windows CE-based devices are memory, power, user-interaction devices, and the broad range of CPU and communications options. Just recompiling your code with the appropriate Windows CE header files is not sufficient. You must examine the code to be ported while keeping in mind memory, power use, and user input devices.</P>

<P>Windows CE is designed to run on devices that have much less available memory than desktop computers. They may have no disk drive or other mass-storage device, or may support PC Cards that can be used as an alternative to a disk. Even if mass storage is available on the device, RAM is used to store data and applications and to execute programs. In general, you should limit the RAM requirements of your application and associated data and resources.</P>

<P>Windows CE supports functions, structures, and messages that are not supported in Win32, but that may be useful to you when you port code across platforms. Many of these elements will help you manage limited resources. For example, if memory resources become tight during operation, Windows CE has a procedure to reduce memory use and restore available memory to acceptable levels. The key to this procedure is the WM_HIBERNATE message, which notifies applications of low memory. Because this message is not part of Win32, you must implement a handler for it and cooperate when the message is received.</P>

<P>A Windows CE-based platform that operates on batteries has a limited energy supply. If you develop an application for such a platform and must port it, follow these guidelines to make the most of limited power resources:

<UL>
	<LI>Avoid cycling the CPU unnecessarily. An active CPU, and the <B>PeekMessage</B> function in particular, consume significant energy. </LI>

	<LI>Limit your use of common desktop computer hardware that drains batteries rapidly, such as a modem. </LI>

	<LI>Do not exceed available battery resources. Windows CE displays a warning message to users when batteries start to run low, but it does not send a message to running applications. Therefore, if your application places substantial demands on the batteries, you will need to poll the system with the <B>GetPowerStatusEx</B> function to determine battery status.</LI>
</UL>

<P>Applications for desktop computers assume that the user will get information from a relatively large screen and will communicate with the computer using a keyboard and a pointing device. Windows CE-based platforms may use very different hardware than this. The screen is generally smaller or absent, and the platform may have no keyboard or pointing device at all. On the other hand, a Windows CE-based platform may provide user-interaction hardware that is not commonly found on a desktop computer, such as a microphone for speech recognition or a stylus and screen for handwriting recognition.  For more information about user-interface considerations, see <A HREF="consider_4bqr.htm">User Interface Considerations</A>. </P>

<P>In addition, Windows CE offers a variety of communications hardware options, including infrared (IrDA) and radio transceivers, that require special consideration. Windows CE supports most standard communication methods, including serial communication, TCP/IP, and IrDA stacks, through WinSockIt. It also supports output by means of modems, infrared transceivers, and local-area networks.  For more information about different communications hardware and communications programming, see <A HREF="communic_2po3.htm">Using Communications</A>. </P>

</BODY>
</HTML>
