<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICeFileFilter::NextConvertFile</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_cff_convertinfo">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_cff_sourcefile">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_cff_destinationfile">
</OBJECT>
</TD></TR></TABLE>



<H1>

<A NAME="_icefilefilter_nextconvertfile"></A>ICeFileFilter::NextConvertFile</H1>

<P>When the user selects a conversion type from the Windows CE Services <B>File Conversion Properties</B> dialog box, Windows CE Services calls the <B>ICeFileFilter::NextConvertFile</B> method of the file filter that supports the selected conversion. </P>

<H4>Syntax</H4>

<P><B>STDMETHODIMP ICeFileFilter::NextConvertFile(<BR>
int</B> <I>nConversion</I><B>,</B><BR>
<B>PFF_CONVERTINFO</B> *<I>pci</I><B>,</B><BR>
<B>PFF_SOURCEFILE</B> *<I>psf</I><B>,</B><BR>
<B>PFF_DESTINATIONFILE</B> *<I>pdf</I><B>,</B><BR>
<B>volatile BOOL</B> *<I>pbCancel</I><B>,</B><I><BR>
</I><B>PR_ERROR</B> *<I>perr<BR>
</I><B>);</B></P>

<H4>At a Glance</H4>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=33%>Header file:</TD>
<TD width=67%>Replfilt.h</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>Platforms:</TD>
<TD width=67%>H/PC</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>Windows CE versions:</TD>
<TD width=67%>2.0 and later</TD>
</TR>
</TABLE><BR>

<H4>Parameters</H4>

<DL>
<DT><I>nConversion</I> </DT>

<DD>A counter for converting a single source file into multiple destination files. This parameter will be zero the first time <B>NextConvertFile</B> is called and will be incremented for each successive call. A simple filter should return HRESULT_FROM_WIN32<B>(</B>ERROR_NO_MORE_ITEMS<B>)</B> if this parameter is not zero. </DD>

<DT><I>pci</I> </DT>

<DD>Pointer to a <A HREF="JavaScript:hhobj_1.Click()"><B>CFF_CONVERTINFO</B></A> structure that contains a pointer to an <B>ICeFileFilterSite</B> object. A file filter uses this interface to create an <B>IStream</B> or <B>IStorage</B> object to read the contents of the source file or to write to the destination file. The type of interface object to create is determined by the the <I>nHowToOpen</I> parameter in the <A HREF="ce_int_2nz9.htm"><B>ICeFileFilterSite::OpenSourceFile</B></A> and <A HREF="ce_int_87vp.htm"><B>ICeFileFilterSite::OpenDestinationFile</B></A> methods. Any files opened in this way should be closed using the corresponding <A HREF="ce_int_3xt1.htm"><B>ICeFileFilterSite::CloseSourceFile</B></A> or <A HREF="ce_int_0x9h.htm"><B>ICeFileFilterSite::CloseDestinationFile</B></A> methods. </DD>

<DT><I>psf</I> </DT>

<DD>Pointer to a <A HREF="JavaScript:hhobj_2.Click()"><B>CFF_SOURCEFILE</B></A> structure that contains information about the source file. </DD>

<DT><I>pdf</I> </DT>

<DD>Pointer to a <A HREF="JavaScript:hhobj_3.Click()"><B>CFF_DESTINATIONFILE</B></A> structure that contains information about the destination file. </DD>

<DT><I>pbCancel</I> </DT>

<DD>Pointer to a variable that receives TRUE if the user cancels the file conversion before it is completed. Otherwise, the variable is set to FALSE. Because this variable is updated asynchronously by another thread, its contents can change at any time. A file filter must check this variable regularly during the conversion process, and return ERROR_CANCELLED (after cleaning up) if it is ever set to TRUE. </DD>

<DT><I>perr</I> </DT>

<DD>Address of a filter-defined error value that can be passed (by the Windows CE Services application) to the <B>ICeFileFilter::FormatMessage</B> method. This error value will be ignored unless the return value from <B>NextConvertFile</B> is E_FAIL. 
</DD>
</DL>

<H4>Return Values</H4>

<DL>
<DT>NOERROR</DT>

<DD>The subconversion was successful; proceed to the next subconversion. </DD>

<DT>HRESULT_FROM_WIN32 (ERROR_CANCELLED)</DT>

<DD>The user canceled the conversion. </DD>

<DT>HRESULT_FROM_WIN32 (ERROR_NO_MORE_ITEMS)</DT>

<DD>The conversion (or last subconversion) was successful. End calls to <B>ICeFileFilter::NextConvertFile</B>. </DD>

<DT>E_FAIL</DT>

<DD>The <I>perr</I> parameter contained an error value that should be passed to <A HREF="ce_int_3vad.htm"><B>ICeFileFilter::FormatMessage</B></A>.
</DD>
</DL>

<H4>Remarks</H4>

<P>The Explorer Window for the mobile device calls the <B>ICeFileFilter::NextConvertFile</B> method repeatedly, incrementing the <I>nConversion</I> parameter, until the return value is ERROR_NO_MORE_ITEMS. A simple filter should return NOERROR the first time this method is called, and thereafter return <B>HRESULT_FROM_WIN32(</B>ERROR_NO_MORE_ITEMS<B>)</B>. Alternatively, a file filter can return E_FAIL and specify a filter-defined error code in the variable pointed to by <I>perr</I>. For more information about filter-defined error codes, see <A HREF="filter_0x83.htm">Filter Defined Error Values</A>. </P>

<P>As a file conversion progresses, a file filter should periodically call <A HREF="ce_int_7s8j.htm"><B>ICeFileFilterSite::ReportProgress</B></A> to report its progress. Windows CE Services uses the progress information to update a progress bar that shows the user how much of the conversion has been completed. </P>

<P>If any important data is intentionally discarded by a file filter during the conversion process, the filter should call <A HREF="ce_int_22pf.htm"><B>ICeFileFilterSite::ReportLoss</B></A> to report the loss. When calling this <B>ReportLoss</B>, the filter specifies a message that explains the data loss, and Windows CE Services formats and displays the message in a message box when the file conversion has completed. For more information, see <A HREF="filter_6w1f.htm">Transferring Files</A>.</P>

<H4>See Also</H4>

<P><A HREF="ce_int_22pf.htm"><B>ICeFileFilterSite::ReportLoss</B></A>, <A HREF="ce_int_7s8j.htm"><B>ICeFileFilterSite::ReportProgress</B></A></P>

</BODY>
</HTML>
