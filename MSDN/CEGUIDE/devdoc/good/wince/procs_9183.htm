<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Synchronizing Processes and Threads</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1>

<A NAME="_synchronizing_processes_and_threads"></A>Synchronizing Processes and Threads</H1>

<P>Windows CE supports preemptive multitasking. Multitasking operating systems must ensure that processes and threads are synchronized. Windows CE provides many ways to coordinate multiple threads of execution. For example, you can use <I>wait functions </I>and<I> synchronization objects</I>. You pass a synchronization object as a parameter to a wait function. The wait function does not return until its specified criteria has been met. The type of wait function determines the set of criteria used. When a wait function is called, it checks whether the wait criteria has been met. If the criteria has not been met, the calling thread enters an efficient wait state, consuming very little processor time. </P>

</BODY>
</HTML>
