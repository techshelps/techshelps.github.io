<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Synchronization and Device I/O</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Win32_WriteFile">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_ReadFile">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_WaitCommEvent">
</OBJECT>
</TD></TR></TABLE>



<H1>

<A NAME="_synchronization_and_device_i_o"></A>Synchronization and Device I/O</H1>

<P>Windows CE supports both synchronous and asynchronous I/O operations on files and serial communications devices. The <A HREF="JavaScript:hhobj_1.Click()"><B>WriteFile</B></A>, <A HREF="JavaScript:hhobj_2.Click()"><B>ReadFile</B></A>, and <A HREF="JavaScript:hhobj_3.Click()"><B>WaitCommEvent</B></A> functions can be performed either synchronously or asynchronously. </P>

<P>When a function is executed synchronously, it does not return until the operation has been completed. This means that the execution of the calling thread can be blocked for an indefinite period while it waits for a time-consuming operation to finish. Functions called for overlapped operation can return immediately, even though the operation has not been completed. This enables a time-consuming I/O operation to be executed in the background while the calling thread is free to perform other tasks. For example, a single thread can perform simultaneous I/O operations on different handles, or even simultaneous read-and-write operations on the same handle. </P>

<P>Windows CE does not support the overlapped I/O features of Windows NT. The <I>lpOverlapped </I>parameter to <B>ReadFile</B> or <B>WriteFile</B> must be NULL. Therefore, Windows CE cannot signal the event passed in when the I/O operation is completed. However, Windows CE does support simultaneous synchronous or asynchronous calls to <B>ReadFile</B> or <B>WriteFile</B> made by separate threads that are overlapped in time; this is not supported in Windows NT.</P>

</BODY>
</HTML>
