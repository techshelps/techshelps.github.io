<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>User Input System</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_SetActiveWindow">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_GetActiveWindow">
</OBJECT>
</TD></TR></TABLE>



<H2>

<A NAME="_user_input_system"></A>User Input System</H2>

<P>The user input system delivers keyboard messages containing scan code, virtual key code, and character information to the appropriate window. To understand how this system works, you need to understand the relationship between the <I>active window</I>, the <I>focus window</I>, and the <I>foreground window</I>.</P>

<P>Each thread maintains its own active window and focus window. The active window is a <I>top-level window</I>. The focus window is either the active window or one of its descendents. At any one time, there is one thread in the system that is considered the foreground thread. The active window of this thread is the foreground<I> </I>window. The user-input system places keyboard messages in the message queue of the foreground thread. The thread's message loop pulls the message from the queue and sends it to the thread's focus window. If the focus window is NULL, the active window receives the message. </P>

<P>To summarize the relationship between these window types: 

<UL>
	<LI>The active window is always a top-level window or NULL.</LI>

	<LI>The focus window is always the active window, a descendent of the active window, or NULL.</LI>

	<LI>The foreground window is always the active window of the foreground thread.</LI>
</UL>

<P>There are a number of ways that a thread can become the foreground thread. If an application calls the <B>SetForegroundWindow </B>function<B> </B>and specifies a top-level window, the thread that owns the window becomes the foreground thread and the window becomes its active window. This function also moves the window to the top of the Z order. You can use <B>SetForegroundWindow</B> on any top-level window.  For more information on Z order, see <A HREF="window_4qwj.htm">Windows</A>. </P>

<P>In most cases, if the user taps on a window, the system will bring that window to the foreground. The thread that created the window becomes the foreground thread. If the foreground window is hidden or destroyed, the system designates another window as the foreground window. In that case, the new foreground window's thread becomes the foreground thread. You can use the <B>GetForegroundWindow</B> function to get the current foreground window.</P>

<P>In general, an application thread does not need to set the foreground window explicitly. This is usually done by the system as the user selects and closes windows with the stylus. Use the <A HREF="JavaScript:hhobj_1.Click()"><B>SetActiveWindow</B></A> function to activate a window. If the calling thread is the foreground thread, then the new active window automatically becomes the foreground window. When the activation changes, the system sends a WM_ACTIVATE message to the window that is being deactivated and to the window that is being activated. A thread can use the <A HREF="JavaScript:hhobj_2.Click()"><B>GetActiveWindow</B></A> function to access its active window.</P>

<P>An application thread uses the <B>SetFocus</B> function to move the focus between its windows. When the focus changes, the system sends a WM_KILLFOCUS message to the window that is losing the focus. It sends a WM_SETFOCUS message to the window that is gaining the focus.</P>

<P>The system ensures that the focus window is always the active window or a descendent of the active window. If the focus is changed to a window with a different top-level ancestor, the system first changes the activation, and then it changes the focus.</P>

</BODY>
</HTML>
