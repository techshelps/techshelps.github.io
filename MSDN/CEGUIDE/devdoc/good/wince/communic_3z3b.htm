<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows CE Networking</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1>

<A NAME="_windows_ce_networking"></A>Windows CE Networking</H1>

<P>Windows CE supports a variety of networking options that range from serial link networking over a modem to wireless communications. Networking capabilities include: 

<UL>
	<LI>Sending an ICMP request, also known as a ping</LI>

	<LI>Communicating over the Internet (WinINET API)</LI>

	<LI>Accessing remote file systems</LI>

	<LI>Using Windows Sockets</LI>

	<LI>Using network security features</LI>

	<LI>Accessing an IR transceiver using the IrDA protocols</LI>
</UL>

<P>There are several types of networking that are supported:

<UL>
	<LI>Local area networking</LI>

	<LI>Wired serial-link networking using serial cables or modems</LI>

	<LI>IR networking</LI>

	<LI>Wireless networking</LI>
</UL>

<P>Windows CE network support is organized in layers. The network stack is responsible for taking data from applications, breaking it into one or more <I>packets</I>, and adding whatever header information is necessary to ensure that the packet arrives at its destination. The following illustration describes the schematics of the network stack.</P>

<P>&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="comm1.gif" ALT="" BORDER=0></P>

<P><B>Network stack schematics</B></P>

<P>There are several ways to access the network stack:

<UL>
	<LI>The Windows Sockets (Winsock) API provides applications with the means to exchange packets with a remote site. It handles all the details of creating the needed header information, but leaves the format of the data up to the application. All network communication on Windows CE uses Winsock directly or indirectly.</LI>

	<LI>The WinINET API supports high-level data protocols, such as Hypertext Transmission Protocol (HTTP) or File Transfer Protocol (FTP). These APIs ensure that the data is properly structured and relieve applications of the need to use Winsock directly.</LI>

	<LI>A Common Internet File System (CIFS) redirector gives applications access to remote file systems. Windows CE also provides support for a Remote Access Service (RAS) client, which allows a Windows CE-based device to connect to a remote host.</LI>
</UL>

<P>The following sections describe the Windows CE network stack from the top to the bottom.</P>

</BODY>
</HTML>
