<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sample Infrared Socket Client</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H3>

<A NAME="_sample_infrared_socket_client"></A>Sample Infrared Socket Client</H3>

<P>This sample IrSock client opens a socket and makes five attempts to locate a server. If none is found, it displays a message box to inform the user of the failure. When a server is detected, the client queries the server for its device identifier and sends a greeting to the service named "My Server." It then waits for the server to respond, displays a message box with the response, and closes the socket.  </P>

<PRE><CODE>#include &lt;windows.h&gt;
#include &lt;af_irda.h&gt;

#define    NumRetries    5

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
                  LPTSTR lpCmdLine, int nCmdShow )
{
   SOCKET         sock;
   SOCKADDR_IRDA  address = {AF_IRDA, 0,0,0,0, "MyServer"};
    EVICELIST     devList;
   int            devListLen = sizeof(devList),
                  cnt = 0,
                  idx = 0;
   char           helloClient[25];
   TCHAR         helloText[25];

   sock = socket(AF_IRDA, SOCK_STREAM, 0);
   devList.numDevice = 0;      // initialize number of devices to zero

   while ((devList.numDevice == 0) &amp;&amp; (cnt &lt;= NumRetries))
   {
         getsockopt(sock, SOL_IRLMP, IRLMP_ENUMDEVICES,
                  (char *)&amp;devList, &amp;devListLen);
         cnt++;
         Sleep(1000);          // Wait one second before retrying
   }
   if  (cnt &gt; NumRetries)
   {
         MessageBox (NULL, TEXT("Server could not be located"),
                   TEXT("IR Client"), MB_OK);
   }
   else
    {
                               // Get socket address of server
         for (idx = 0; idx &lt;= 3; idx++)
            address.irdaDeviceID[idx] =
            devList.Device[0].irdaDeviceID[idx];

         connect(sock, (struct sockaddr *)&amp;address,
                     sizeof(SOCKADDR_IRDA));

        send(sock, "Hello Server!", strlen("Hello Server!")+1, 0);

        recv(sock, helloClient, sizeof(helloClient), 0);

        for (idx = 0; idx &lt;= sizeof(helloClient); idx++)
             helloText[idx] = helloClient[idx];

        MessageBox (NULL, helloText, TEXT("IR Client"), MB_OK);

        closesocket(sock);
   }
return 0;
}
</CODE></PRE>

</BODY>
</HTML>
