<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reading Records and Properties</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeReadRecordProps">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CEPROPVAL">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeReadRecordProps">
</OBJECT>
</TD></TR></TABLE>



<H2>

<A NAME="_reading_records_and_properties"></A>Reading Records and Properties</H2>

<P>After opening a Windows CE database, the seek pointer is positioned at the first record according to the selected sort order.</P>

<P>The <A HREF="JavaScript:hhobj_1.Click()"><B>CeReadRecordProps</B></A> function reads properties from the record where the seek pointer is currently positioned. When calling <B>CeReadRecordProps</B>, indicate the properties to be read by specifying an array of property identifiers. Also specify the buffer into which the function is to write the property information, and a value indicating the size of the buffer. If you specify the CEDB_ALLOWREALLOC flag, the system will reallocate the buffer if it is too small to hold the property information. Note that the system stores records in compressed format and must decompress records as they are read. For efficiency, you should read all of the desired properties in a single call rather than in several separate calls.</P>

<P>When the property is read successfully, the property information is copied into the specified buffer as an array of <A HREF="JavaScript:hhobj_2.Click()"><B>CEPROPVAL</B></A> structures, and the function returns the record's object identifier. </P>

<P>If the system cannot find a requested property in the given record, the <B>CEPROPVAL</B> structure for that property receives the CEDB_PROPNOTFOUND flag. All of the variable size data, such as strings and BLOBs, are copied to the end of the buffer. The <B>CEPROPVAL</B> structures contain pointers to this data. </P>

<P>If you specified the CEDB_AUTOINCREMENT flag when opening the database, <A HREF="JavaScript:hhobj_3.Click()"><B>CeReadRecordProps</B></A> increments the seek pointer.</P>

<P>The following code example demonstrates how to read properties from the database using the autoincrement and reallocation flags.</P>

<PRE><CODE>CEOID objId;         // object identifier; use for db, each record
HANDLE hDb;          // handle to the database
WORD cProps;         // count of properties returned by Read operation
LPBYTE pBuf = NULL;  // no init size; let CeReadRecordProps realloc
DWORD cbBuf;         // count of bytes in buffer
...
hDb = CeOpenDatabase(&amp;objId,      // tmp location for the database id
                     szDbName,    // database name
                     0,           // sort order; 0 indicates ignore
                     CEDB_AUTOINCREMENT,
                     NULL);       // window handle for notifications
// perform error checking on hDb handle before continuing...
while (objId = CeReadRecordProps(hDb,
                     CEDB_ALLOWREALLOC,
                     &amp;cProps,     // return count of properties
                     NULL,        // retrieve all properties
                     &amp;pBuf,       // buffer to return prop data
                     &amp;cbBuf))     // count of bytes in pBuf1
   {                              // record is now available in pBuf1
   // add code here to manipulate the props in this record
   }
// at this point, all records have been read from the database
CloseHandle(hDb);
</CODE></PRE>

</BODY>
</HTML>
