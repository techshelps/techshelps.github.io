<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Tab Controls</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_TCITEM_str">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_TCITEMHEADER_str">
</OBJECT>
</TD></TR></TABLE>



<H2>

<A NAME="_using_tab_controls"></A>Using Tab Controls</H2>

<P>You create a tab control by specifying WC_TABCONTROL in the <I>lpClassName</I> parameter to the <B>CreateWindowEx</B> function. Windows CE registers this class when it loads the common control DLL. You can use the <B>InitCommonControls</B> function to ensure that this DLL is loaded. To register the tab control class using the <B>InitCommonControlsEx</B> function, specify the ICC_ TAB_CLASSES flag as the <B>dwICC</B> member of the <B>INITCOMMONCONTROLSEX</B> structure you pass in the <I>lpInitCtrls</I> parameter.</P>

<P>To add tabs to a tab control, use the TCM_INSERTITEM message, which specifies the position of the tab and the address of its <B>TCITEM</B> structure. You can retrieve and set the contents of an existing tab by using the TCM_GETITEM and TCM_SETITEM messages. For each tab, you can specify an icon, a label, or both. You can also specify application-defined data to associate with the tab.</P>

<P>Other messages that you can use with a tab control are described in the following table.</P>

<TABLE cols=2>

<TR VALIGN="top">
<TH align=left width=40%>Message </TH>
<TH align=left width=60%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=40%>TCM_GETITEMCOUNT</TD>
<TD width=60%>Retrieves the current number of tabs.</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>TCM_DELETEITEM</TD>
<TD width=60%>Deletes a tab.</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>TC_DELETEALLITEMS</TD>
<TD width=60%>Deletes all tabs in a tab control.</TD>
</TR>
</TABLE><BR>

<P>You can associate application-defined data with each tab. For example, you might save information about each page with its corresponding tab. By default, a tab control allocates four extra bytes per tab for application-defined data. You can change the number of extra bytes per tab by using the TCM_SETITEMEXTRA message. You can only use this message when the tab control is empty.</P>

<P>The<B> lParam</B> member of the <B>TCITEM</B> structure specifies application-defined data. If you use more than four bytes of application-defined data, you need to define your own structure and use it instead of <B>TCITEM</B>. You can retrieve and set application-defined data the same way you retrieve and set other information about a tab: Use the TCM_GETITEM and TCM_SETITEM messages.</P>

<P><B>Note</B>  Windows CE does not support vertical text. If you create vertical tabs, and want to use vertical text, you have to create a text bitmap and rotate it. Then, you can add the bitmap to an image list and attach it to the tab by specifying its image list index in the <B>iImage</B> member of the <A HREF="JavaScript:hhobj_1.Click()"><B>TCITEM</B></A> or <A HREF="JavaScript:hhobj_2.Click()"><B>TCITEMHEADER</B></A> structure.</P>

</BODY>
</HTML>
