<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Choosing Controls</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1>

<A NAME="_choosing_controls"></A>Choosing Controls</H1>

<P>Windows CE supplies a set of pre-constructed elements, known as controls, that you can use to build an application. Controls, objects that users interact with to enter or manipulate data, commonly appear in dialog boxes, can also appear on toolbars and command bars. Windows CE supports many pre-defined controls, which can be divided into two categories: windows controls and common controls. Windows controls typically send the WM_COMMAND message and include buttons, combo boxes, edit controls, list boxes, scroll bars, and static controls. Common controls typically send the WM_NOTIFY message and include all other controls. They are divided into the following sub-categories: Foundation controls, file controls, scale controls, informational controls, and miscellaneous controls that are used for specific Windows CE-based platform functionality.</P>

<P>Due to the large number of controls available in Windows CE, determining which control to use in a specified situation is often difficult. When choosing a control, you must consider the type of input you are trying to capture, the abilities and limitations of the control, and the characteristics of your platform's display screen. To assist you in this task, all pre-defined Windows CE controls and their uses are described in the following tables.</P>

<P><B>Windows CE Window Controls  </B></P>

<TABLE cols=3>

<TR VALIGN="top">
<TH align=left width=27%>Control</TH>
<TH align=left width=40%>Description</TH>
<TH align=left width=33%>Use</TH>
</TR>

<TR VALIGN="top">
<TD width=27%>Check Box</TD>
<TD width=40%>A two-part control consisting of a square box and text options. Each option acts as a switch that can be turned on — selected — or off — deselected. When an item is turned on, a check appears within the square box; otherwise, the square box is empty. Users can select more than one option.</TD>
<TD width=33%>When setting properties, attributes, or values.<BR>
When more than one choice can be selected.<BR>
When ample screen space is available.<BR>
When options do not change. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Radio Button</TD>
<TD width=40%>A two-part control consisting of a small circle and text options. When an option is selected, the circle appears highlighted or filled. Only one option can be selected at one time.</TD>
<TD width=33%>When setting properties, attributes, or values.<BR>
When only one choice can be selected.<BR>
When ample screen space is available.<BR>
When options do not change.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Push Button (Command Button)</TD>
<TD width=40%>A square or rectangle with a text or graphic label inside. When selected, an application immediately performs the associated action or command.</TD>
<TD width=33%>To perform an action.<BR>
To display a menu or window.<BR>
To set a condition or property value.<BR>
When ample screen space is available.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Group Box</TD>
<TD width=40%>A rectangular frame that surrounds a group of controls.</TD>
<TD width=33%>To visually relate a group of related controls.<BR>
To visually relate elements within a control.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Combination Box</TD>
<TD width=40%>A control possessing the characteristics of both an edit control and a list box or drop-down list box. Information may either be typed into the edit control field or selected from items displayed in the list box.</TD>
<TD width=33%>When options are large in number and not frequently selected.<BR>
When the list of options may change.<BR>
When only one choice can be selected.<BR>
When screen space is limited; use with a drop-down list box combination only.<BR>
To capture unlisted data.<BR>
When users prefer to type information rather than select it from a list.<BR>
When a keyboard is present.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Edit Control</TD>
<TD width=40%>A rectangular box in which information can be typed by the user or in which information is displayed for read-only purposes. Edit controls typically contain captions and can be designated as either single- or multiple-line.</TD>
<TD width=33%>When options are difficult to categorize and vary in length.<BR>
When screen space is limited.<BR>
When a keyboard is present.<BR>
When providing a list of options is not feasible.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>List Box</TD>
<TD width=40%>A rectangular box containing a list of items from which either a single selection is made, or multiple selections are made. Lists can contain either text or graphics. If the list exceeds the boundaries of the box, scroll bars appear, enabling users to view the remaining items. </TD>
<TD width=33%>When options are large in number and not frequently selected.<BR>
When screen space makes radio buttons or check boxes impractical.<BR>
When the list of options may change.<BR>
When ample screen space is available.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Drop-Down List Box</TD>
<TD width=40%>A rectangular box with an arrow button on the side. When the arrow button is selected, the box displays a hidden list of items which seems to drop-down from a single item. If the list exceeds the boundaries of the box, scroll bars appear, enabling users to view the remaining list.</TD>
<TD width=33%>When only one choice can be selected<BR>
When screen space is limited.<BR>
When options are large in number and not frequently selected.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Scroll Bar</TD>
<TD width=40%>A rectangular container consisting of a scroll area, a slider box, and arrows. Scroll bars are typically found on primary and secondary windows.</TD>
<TD width=33%>To view information that uses more than the allotted space.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Static Control</TD>
<TD width=40%>A text field that displays read-only information.</TD>
<TD width=33%>To display a caption.<BR>
To provide instructional information.<BR>
To display descriptive information.</TD>
</TR>
</TABLE><BR>

<P>Foundation controls, used to contain or manage other controls, are described in the following table.</P>

<P><B>Windows CE Foundation Controls</B></P>

<TABLE cols=3>

<TR VALIGN="top">
<TH align=left width=31%>Control</TH>
<TH align=left width=34%>Description</TH>
<TH align=left width=35%>Use</TH>
</TR>

<TR VALIGN="top">
<TD width=31%>Command Band</TD>
<TD width=34%>A special kind of rebar control. It has a fixed band at the top containing a toolbar with a <B>Close</B> (<B>X</B>) button, and optionally, a <B>Help</B> (<B>?</B>) button and <B>OK</B> button, in the right corner. By default, each band in the command bands control contains a command bar. You can override this if you want a band to contain some other type of child window.</TD>
<TD width=35%>To provide easy access to frequently used commands or options.<BR>
When screen space is limited.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Command Bar</TD>
<TD width=34%>A toolbar that combines a menu bar as well as the <B>Close</B> (<B>X</B>) button, the <B>Help</B> (<B>?</B>) button, and the <B>OK</B> button. A command bar can contain menus, combo boxes, buttons, and separators. A separator is a blank space you can use to divide other elements into groups or to reserve space in a command bar.</TD>
<TD width=35%>To provide easy access to frequently used commands or options.<BR>
When screen space is limited.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Toolbar</TD>
<TD width=34%>A panel that contains a set of controls.</TD>
<TD width=35%>To provide easy access to frequently used commands or options.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Property Sheet</TD>
<TD width=34%>A control to define property sheets. It accepts dialog box layout specifications and automatically creates tabbed property pages.</TD>
<TD width=35%>When creating property sheets.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Tab Control</TD>
<TD width=34%>A tab control resembles a divider in a notebook and is used to define sections of information within the same window.</TD>
<TD width=35%>To present repetitive, related information.<BR>
To present options or settings that can be applied to one object.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Rebar</TD>
<TD width=34%>A control that acts as a container for a child window. It contains one or more bands; each band can contain one child window, which can be a toolbar or any other control. Each band can have its own bitmap, which is displayed as a background for the toolbar on that band. A user can resize or reposition a band by dragging its gripper bar. If a band has a text label next to its gripper bar, a user can maximize the band and restore it to its previous size.</TD>
<TD width=35%>When screen space is limited.<BR>
To hide and show portions of a command bar.</TD>
</TR>
</TABLE><BR>

<P>File controls, used to display files, are described in the following table.</P>

<P><B>Windows CE File Controls</B></P>

<TABLE cols=3>

<TR VALIGN="top">
<TH align=left width=31%>Control</TH>
<TH align=left width=35%>Description</TH>
<TH align=left width=34%>Use</TH>
</TR>

<TR VALIGN="top">
<TD width=31%>Header Control <B> </B></TD>
<TD width=35%>A heading above a column of text or numbers that can be divided into two or more parts for multiple columns. Each part can operate like a command button to support a different function.</TD>
<TD width=34%>To display text and graphics.<BR>
To aid the user in sorting or sizing columns of information.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Image List</TD>
<TD width=35%>A special list box that contains a collection of images that are all the same size, such as bitmaps or icons. Image lists manage images, but do not display them. They are designed to be used with list view and tree view controls. <B> </B></TD>
<TD width=34%>To display a relationship between a set of containers.<BR>
When ample screen space is available.<BR>
When the displaying of icons or images is appropriate.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Tree View</TD>
<TD width=35%>A special list box that displays a hierarchical set of labeled items as an indented outline. It includes buttons that allow the outline to be expanded and contracted.</TD>
<TD width=34%>To display a relationship between a set of containers.<BR>
When ample screen space is available.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>List View</TD>
<TD width=35%>A special list box that displays a collection of files or folders consisting of an icon and a label. Selection and navigation in this control work similarly to that in a folder window.</TD>
<TD width=34%>When the displaying of icons is appropriate.<BR>
When ample screen space is available.</TD>
</TR>
</TABLE><BR>

<P>Scale controls, used to increment scaled values, are described in the following table.</P>

<P><B>Windows CE Scale Controls</B></P>

<TABLE cols=3>

<TR VALIGN="top">
<TH align=left width=31%>Control</TH>
<TH align=left width=34%>Description</TH>
<TH align=left width=35%>Use</TH>
</TR>

<TR VALIGN="top">
<TD width=31%>Spin Box</TD>
<TD width=34%>An edit control with an associated spin button control. A spin box allows the user to select an option by scrolling through a small list or by typing an item in the edit control field.</TD>
<TD width=35%>When options are infrequently selected and small in number.<BR>
When screen space is limited.<BR>
To capture unlisted data.<BR>
When users prefer to type information rather than select it from a list.<BR>
When only one choice can be selected.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Trackbar (Slider)</TD>
<TD width=34%>A bar with tick marks on it and a slider or thumb. The tick marks represent a range of values. When a user drags the slider arm, it moves in the appropriate direction, tick by tick.</TD>
<TD width=35%>To set an attribute.<BR>
When only one choice can be selected.<BR>
When a limited range of possible settings exist.<BR>
When options are incremented.<BR>
When ample screen space is available.</TD>
</TR>
</TABLE><BR>

<P>Informational controls, used to provide information about tools, processes, or time, are described in the following table.</P>

<P><B>Windows CE Informational Controls</B></P>

<TABLE cols=3>

<TR VALIGN="top">
<TH align=left width=31%>Control</TH>
<TH align=left width=34%>Description</TH>
<TH align=left width=35%>Use</TH>
</TR>

<TR VALIGN="top">
<TD width=31%>Progress Bar</TD>
<TD width=34%>A display-only control that consists of a rectangular bar that fills from left to right.</TD>
<TD width=35%>To provide visual feedback concerning completion of a process.<BR>
When ample screen space is available.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Date and Time Picker</TD>
<TD width=34%>A control that provides users with an easy a way to modify date and time information. Each field in the control displays a time element, such as month, day, hour, or minutes.</TD>
<TD width=35%>To modify date and time information.<BR>
When screen space is limited.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Status Bar</TD>
<TD width=34%>An area within a window, typically at the bottom, that displays information. It can contain display-only controls.</TD>
<TD width=35%>To provide information about the current state of what is being viewed in the window.<BR>
To provide a descriptive message about a selected menu or toolbar.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Month Calendar Control</TD>
<TD width=34%>A child window that displays a monthly calendar. The calendar can display one or more months at a time.</TD>
<TD width=35%>To select date information.<BR>
When screen space is limited.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>ToolTip Control</TD>
<TD width=34%>A small pop-up window containing information about a control. A ToolTip appears when a pointer is moved over a control not possessing a label.</TD>
<TD width=35%>To identify a control that has no caption.<BR>
To reduce screen clutter cause by control captions.</TD>
</TR>
</TABLE><BR>

<P>Miscellaneous controls, used for specific Windows CE-based platform functionality, are described in the following table.</P>

<P><B>Windows CE Miscellaneous Controls</B></P>

<TABLE cols=3>

<TR VALIGN="top">
<TH align=left width=31%>Control</TH>
<TH align=left width=34%>Description</TH>
<TH align=left width=35%>Use</TH>
</TR>

<TR VALIGN="top">
<TD width=31%>HTML Viewer Control</TD>
<TD width=34%>A control that provides the functionality required to implement the Windows CE Pocket Internet Explorer and Help engine.</TD>
<TD width=35%>To view HTML text and embedded images. For more information about the HTML viewer control, see  <A HREF="ctrls_27sj.htm">Overview of Controls</A>.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>Rich Ink Control</TD>
<TD width=34%>A control that captures stylus motions in order to emulate the act of writing or drawing on paper. The control's document view, under the touch-sensitive display screen, serves as electronic paper. In addition to capturing images, Active Ink also has editing and formatting capabilities.</TD>
<TD width=35%>To accept user input without using a keyboard. For more information about the Rich Ink control, see <A HREF="usrinput_39ns.htm">User Input</A>.</TD>
</TR>
</TABLE><BR>

<P>In addition to pre-defined controls, Windows CE supports a new custom draw service. The custom draw service is not a pre-defined control; it is a service that makes it easy to customize a common control's appearance. You can use the custom draw service to change a common control's color or font, or to partially or completely draw the control. This is useful when your interface uses several text boxes, because you can draw the borders of the text box before the user inserts text, then hide borders when displaying text. This enables you to place text closer together, making your interface appear less cluttered.</P>

<P>Besides using the controls included in Windows CE, you can also create your own custom controls. When designing custom controls, avoid the following pitfalls common to many designs: 

<UL>
	<LI>Controls are difficult to use.
<P>Make controls easy to use. For example, make controls larger; use colors that contrast with the screen background; remove nearby controls and unnecessary images; and make controls centrally located. Additionally, when you design a control, have a variety of people test its usability. Also consider differences in the capabilities of the people that need to use the control.
</LI>

	<LI>Controls are too close together.
<P>They should be spaced far enough apart so that users do not accidentally select one control while intending to select another.
</LI>

	<LI>Controls are hard to interpret.
<P>A control should in some way resemble or depict its corresponding function so that users can figure out how to use it. For example, it is common to place an image of scissors on a button control that is used to "cut" or remove text.
</LI>

	<LI>Controls are hard to distinguish.
<P>Controls should have easily recognizable differences. When you have several similar controls close together and lined up, people confuse them with each other. Distinguish controls by size, position, shape, and color, and always distinguish a control by more than just a single feature. 
</LI>

	<LI>Controls are hidden.
<P>Controls should be obvious so that users do not overlook them. If you want to remove a control from view, place it where users expect to find it, such as in a menu.
</LI>

	<LI>Controls are not predictable.
<P>Controls that have the same function should operate the same way. Controls should also function the same regardless of where they are placed. Also, controls should follow a consistent rule. If a control uses a different operating principle, design the control such that it will not be confused with controls that operate under different operating principles. Additionally, users expect a control behave in ways consistent with previous experiences or cultural norms. For example, moving a slider control to the right represents an increase whereas moving the slider to the left represents a decrease.  
</LI>
</UL>

</BODY>
</HTML>
