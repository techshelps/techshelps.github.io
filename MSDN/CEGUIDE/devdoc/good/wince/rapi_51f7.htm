<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Executing Functions and Applications</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeCreateProcess">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CeRapiInvoke">
</OBJECT>
</TD></TR></TABLE>



<H1>

<A NAME="_executing_functions_and_applications"></A>Executing Functions and Applications</H1>

<P>Among all RAPI functions, there are two functions that execute functions and applications residing on the Windows CE-based platform:

<UL>
	<LI><A HREF="JavaScript:hhobj_1.Click()"><B>CeCreateProcess</B></A>
<P>This function creates a new process that runs a specified executable file residing on the Windows CE-based platform.
</LI>

	<LI><A HREF="JavaScript:hhobj_2.Click()"><B>CeRapiInvoke</B></A>
<P>This function remotely executes a function residing on the Windows CE-based platform and provides for both input parameters and output data. It operates in either of two modes: block, known as synchronous, or stream, known as asynchronous.

<P>In <I>block mode</I>, the caller passes both input parameters and output data in a single buffer. Because this is a synchronous call, all input data must be present in memory at the time of the call and all output data must be present before the function finishes.

<P>In <I>stream mode</I>, an <B>IStream</B> type interface is used to exchange arbitrarily-sized data in any order and direction. The caller can pass input data in a single buffer, but from that point on all data should be exchanged through the stream. Because the data can be read, written, and stored in chunks, stream code is significantly faster than block mode. The interface used is based on <B>Istream</B>,<B><I> </I></B>but has two additional methods to allow you to timeouts.
</LI>
</UL>

<P><B>Note</B>  <B>LocalAlloc</B> allocates the memory passed for both the <I>pInput</I> and <I>ppOutput</I> parameters of <B>CeRapiInvoke</B>. The called function frees the input memory allocation, and the calling application frees the output memory allocation. </P>

</BODY>
</HTML>
