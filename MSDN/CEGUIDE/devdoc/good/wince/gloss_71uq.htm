<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>B</TITLE>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H1>

<A NAME="_gly_b"></A>B</H1>



<DL>
<DT>

<A NAME="_gly_bandwidth"></A><B>bandwidth</B></DT>

<DD><B>1.</B> The difference between the highest and lowest frequencies that an analog communications system can pass. For example, a telephone accommodates a bandwidth of 3000 Hz, which is the difference between the lowest (300 Hz) and highest (3300 Hz) frequencies it can carry. <B>2.</B> The data transfer capacity of a digital communications system.</DD>

<DT>

<A NAME="_gly_bidirectional_parallel_port"></A><B>bi-directional parallel port</B></DT>

<DD>An interface that supports two-way parallel communications between a device and a computer.</DD>

<DT>

<A NAME="_gly_binary_image_builder_file"></A><B>binary image builder file (.bib)</B></DT>
</DL>



<P>A file used by the Windows CE ROM image builder tool to determine which modules and files to combine when forming the ROM image, and where to place the modules in memory. </P>



<DL>
<DT>

<A NAME="_gly_binary_large_object"></A><B>Binary Large Object (BLOB)</B></DT>

<DD><B>1.</B> A large piece of data, such as a bitmap, characterized by large field values, an unpredictable table size, and data that is formless from the perspective of a program. <B>2.</B> A keyword designating the BLOB structure, which contains information about a block of data.</DD>

<DT>

<A NAME="_gly_bit_block_transfer"></A><B>bit block transfer (BLT, Bitblt)</B></DT>

<DD>The process of copying the bits that constitute a bitmap from one device context to another. For example, a bit block transfer can be used to move a bitmap stored in memory to the screen for display. The bits can also be altered during a bit block transfer. As a result, light and dark portions of an image can be reversed. Successive displays can thus be used to change the appearance of an image or to move it around on the screen.</DD>

<DT>

<A NAME="_gly_bitmap"></A><B>bitmap</B></DT>

<DD>A computer graphic represented as an array of bits in memory that represent the attributes of the individual pixels in an image (1 bit per pixel in a black-and-white display, multiple bits per pixel in a color or grayscale display). </DD>

<DT>

<A NAME="_gly_blink_time"></A><B>blink time</B></DT>

<DD>The elapsed time, in milliseconds, required to invert the caret display. This value is half of the flash time.</DD>

<DT>

<A NAME="_gly_blob"></A><B>BLOB</B></DT>

<DD><I>See </I><B>Binary Large Object</B>.</DD>

<DT>

<A NAME="_gly_block_mode"></A><B>block mode</B></DT>

<DD>A synchronous method of calling the <B>CeRapiInvoke</B> function by storing input parameters and output data in a single buffer.</DD>

<DT>

<A NAME="_gly_boot_loader"></A><B>boot loader</B></DT>

<DD>A program that is automatically run when a computer is switched on (booted). After first performing a few basic hardware tests, the bootstrap loader loads and passes control to a larger loader program, which then typically loads the operating system. The bootstrap loader normally resides in the computer's read-only memory (ROM).</DD>

<DT>

<A NAME="_gly_brush"></A><B>brush</B></DT>

<DD>A tool used in paint programs to sketch or fill in areas of a drawing with the color and pattern currently in use. Paint programs that offer a variety of brush shapes can produce brushstrokes of varying width and, in some cases, shadowing or calligraphic effects.</DD>

<DT>

<A NAME="_gly_build_environment"></A><B>build environment</B></DT>

<DD>The state of the development workstation and the directory structure at the time a program build is begun.</DD>

<DT>

<A NAME="_gly_build_window"></A><B>build window</B></DT>

<DD><I>See </I><B>command prompt window</B>.</DD>

<DT>

<A NAME="_gly_built_in_device_driver"></A><B>built-in device driver </B></DT>

<DD>A software component that permits a computer system to communicate with a device. In Windows CE, it is linked with the GWE component. The Windows CE built-in driver consists of a model device driver (MDD) layer and a platform dependent driver (PDD) layer. Together, these layers make it possible for applications to access physically different, but functionally equivalent, hardware resources in the same way on all Windows CE-based platforms. </DD>
</DL>



</BODY>
</HTML>
