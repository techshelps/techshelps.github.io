<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Nested Setup Files Into a Setup Distribution Unit</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vehowaddingnestedsetupsintosetupexedistributionunit"></a>Adding Nested Setup Files Into a Setup Distribution Unit</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vehowAddingNestedSetupsIntoSetupexeDistributionUnit_C">
</object></p>
<p>
When you are working with applications made up of several components (such as Microsoft<sup>®</sup> ActiveX<sup>®</sup> controls), you can:
<ul type=disc>
<li>
Create separate setup distribution units for each component.<br><br></li>
<li>
Create separate setup distribution units to install each component and then nest these setup distribution units together.</li>
</ul>
<p>
When a nested setup is deployed or downloaded on the target computer, the innermost setup distribution unit runs first, and then the overall setup distribution unit. This strategy is appropriate when the components are used by several applications, or when the components are provided by a third party as a setup distribution unit, and you are not sure what is involved with that installation.</p>
<p class=label>
<b>To add a nested setup to a setup distribution unit</b>
<ol>
<li>
In the <b>Project Explorer</b>, select the setup distribution unit in which you want to place the nested setup file.<br><br></li>
<li>
On the <b>Project</b> menu, click <b>Add Item</b>.<br><br></li>
<li>
In the <b>Add Item</b> dialog box, click <b>Browse</b> and find the setup (.exe) file. Select this file and click <b>Open</b>.<br><br></li>
<li>
In the <b>Project Properties</b> dialog box, click the <b>Nested Setups</b> tab.<br><br></li>
<li>
Select the check box next to the nested setup file that you have just added to the project.<br><br></li>
<li>
Click <b>OK</b>.</li>
</ol>
<p>
Generate the setup files and add them to the project containing the in-place setup distribution unit. You can add files to the project by right-clicking the project, selecting <b>Property Pages</b>, and then clicking the <b>Output Format</b> tab. Click <b>Include Additional Files</b>.</p>
<p class=label>
<b>To add a nested setup file to a setup in-place packaging configuration in a Visual J++ project</b>
<ol>
<li>
In the <b>Project Explorer</b>, select the project containing the in-place setup, right-click, and then click <b>Properties</b>.<br><br></li>
<li>
In the <b>Project Properties</b> dialog box, click the <b>Output Format</b> tab.<br><br></li>
<li>
In the <b>Output Format</b> tab, confirm that the <b>Enable Packaging</b> check box is selected and the <b>Self-extracting Setup (.EXE)</b> option is chosen for the packaging type.<br><br></li>
<li>
Click <b>Include Additional Files</b>.<br><br></li>
<li>
In the <b>Add Additional Files</b> dialog box, click <b>Add</b>.<br><br></li>
<li>
In the <b>Browse for Package Output File</b> dialog box, find the setup (.exe) file. Select this file and click <b>Open</b>.<br><br></li>
<li>
In the <b>Add Additional Files</b> dialog box, click <b>OK</b>.<br><br></li>
<li>
Click <b>Advanced</b> to get to the property pages for that setup distribution unit.<br><br></li>
<li>
Click the <b>Nested Setups</b> tab.<br><br></li>
<li>
Select the check box next to the setup file that you have just added to the project.<br><br></li>
<li>
Click <b>OK</b>.</li>
</ol>
</BODY>
</HTML>
