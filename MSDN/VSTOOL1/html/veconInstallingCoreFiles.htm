<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Installing Core Components with Setup Files</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconinstallingcorefiles"></a>Installing Core Components with Setup Files</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconInstallingCoreFiles_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconInstallingCoreFiles_T">
</object></p>
<p>
Some of the files that a setup file must install are "core" files, which must be treated in special ways in a Windows logo-compliant installer. Core files are usually placed in a default location so that other applications can use the same files.</p>
<p>
While core files can be installed, they must never be removed during an uninstall process. The Microsoft development environment knows which files are core files, and creates a Windows logo-compliant installer in the setup distribution unit without your needing to know whether a particular file is a core file or not — just add whatever files are needed and the development environment will treat them correctly.</p>
<p>
In this topic you can:
<ul type=disc>
<li>
Learn more about handling core components in a setup distribution unit. <br><br></li>
<li>
Check and update the core component list.</li>
</ul>
<h3>Handling Core Components in a Setup File</h3>
<p>
Core components are all files included with the operating system, plus crucial files that may be added by secondary installations, such as ODBC, DirectX, and similar components. These core components are shared by many applications and should be installed in the same common folder (which is almost always the Windows System folder) by each application's installer or setup program.</p>
<p>
The Microsoft development environment contains a list of core components and will automatically create a setup file that handles core components correctly (they will not be removed during uninstallation, for example).</p>
<p>
Although the development environment knows which files are core files, you must specify that a core file should be installed in the Windows System folder, because the development environment will not do this by default.</p>
<p>
An important Microsoft logo requirement for setup distribution units is that applications must not register, reference count, uninstall, or overwrite any core components of the operating system (although they may check versions and upgrade.).</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For step-by-step instructions on installing shared files in the system folder, see <a href="vehowinstallingsharedfilesinsystemfolder.htm">Installing Shared Files in the System folder</a>.</p>
<h3>Checking and Updating the Core Component List</h3>
<p>
New files are sometimes added to the core component list. The core component list that was included with the development environment was current at that time, but changes may have been made since then. Veritest, Inc., maintains a list of core components at their Web site. You can download the list of core components from this site and use it to update the list the development environment uses. To do this, download the Corelist.exe file and run it to extract the Corelist.txt file, and then use it to replace the file Corelist.txt in the Microsoft Visual Studio\Common\Ide\Ide98 folder.</p>
<p>
It is good practice to check the core file list before the final build of a setup file that you will be distributing to your users. The core file list is relatively stable and doesn't change that often, so it isn't necessary to check the list before every build.</p>
</BODY>
</HTML>
