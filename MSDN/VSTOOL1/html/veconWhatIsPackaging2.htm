<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What is Packaging?</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconwhatispackaging2"></a>What is Packaging?</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconWhatIsPackaging2_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconWhatIsPackaging2_T">
</object></p>
<p>
Packaging bundles up your application's executable files into a single file, called a distribution unit, so that it is easier to deploy and install your application to your user's computer.</p>
<p>
With the Microsoft development environment you can package the files required to run your application (for example Java class files, Windows .exe or .dll files, HTML pages, and so on) into easily manageable and movable distribution units. Examples of packaging are:
<ul type=disc>
<li>
Putting all the application files for an application into a single setup (.exe) file which, when run, installs the application and adds an item to the Windows Start menu.<br><br></li>
<li>
Putting all the Java .class and .gif files that implement an applet into a cabinet (.cab) file. Then, when an HTML page that references the applet is loaded, you can download and install the applet.</li>
</ul>
<h2>Create Three Types of Distribution Units</h2>
<p>
You can create three types of distribution units in the Microsoft development environment.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=27%><b>Distribution unit</b></td>
<td class=label width=73%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=27%><a href="veovrcreatingcustompackages.htm">Cabinet Packaging</a></td>
<td width=73%>Contains multiple files and is compressed to download and install components from Web pages (WFC components, applets, and so on).</td>
</tr>
<tr valign=top>
<td width=27%><a href="veconcreatingselfextractingsetuppackage.htm">Setup Packaging</a></td>
<td width=73%>Contains your application files and bundles them (in compressed form) into an executable file that installs the application on the user's computer. Includes an uninstaller program.</td>
</tr>
<tr valign=top>
<td width=27%><a href="veconzipformatpackaging.htm">Zip Format Packaging</a></td>
<td width=73%>Contains multiple files in a single, uncompressed Zip Archive file format supported by many Web browsers.</td>
</tr>
</table><br>
<h2>Two Methods of Creating Distribution Units</h2>
<p>
The Microsoft development environment helps you create these packaging types in two different ways:
<ul type=disc>
<li>
Create in-place packaging by specifying the output format of any Visual J++ project to any of the three types (cabinet, setup, or Zip).<br><br></li>
<li>
Create a distribution unit project and add it to your solution. These distribution units can be of any of the three types (cabinet, setup, or Zip).</li>
</ul>
<p>
The advantage of in-place packaging is that you can easily create a cabinet, setup, or Zip file for your single Visual J++ project. The advantage of distribution units is that you can add as many distribution unit projects to your solution as you want, and each distribution unit can collect project outputs from multiple projects.</p>
</BODY>
</HTML>
