<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Publishing, Finding, and Reusing Components</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconmanagingcomponents"></a>Publishing, Finding, and Reusing Components</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconManagingComponents_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconManagingComponents_T">
</object></p>
<p>
The biggest challenge of component-based development is managing all the separate components. Within a single application you may have hundreds or even thousands of separate components, and use each of these components in many different places in the program. What's more, you can reuse many components in other applications, saving enormous development time and effort — <i>if </i>you can locate the right component when you need it.</p>
<p>
Visual Component Manager addresses the three main requirements for storing and organizing components: publishing, finding, and reusing them.</p>
<p>
It provides a single source to organize, find, and insert components into your project. It can also be the centralized location for approved project programming conventions, functional specifications, and architectural models and diagrams.</p>
<h2>Publishing Components</h2>
<p>
Publishing a component means storing it in a Visual Component Manager repository database, along with attributes and search keywords that will make it easy for others to find and reuse it.</p>
<p>
When you publish a component, you add it to a Microsoft Repository database. This can be a local (Microsoft<sup>®</sup> Access) database on your own workstation, or it can be a shared Microsoft<sup>®</sup> SQL Server™ database on a network server. A shared database gives everyone who has access to that server the ability to find and reuse your component.</p>
<p>
Visual Component Manager provides a single location for anything that can be added to a Microsoft<sup>®</sup> Visual Studio™ project. It allows you to catalog components, to find them easily using flexible search criteria, and to insert them into your project with point-and-click ease.</p>
<p>
For example, you might create a template for a standard form used in all the accounting applications at the company, or a standard tax-calculation object that can be used in many applications. Cataloging these components on a shared repository database provides an easy way for all of the organization's developers to find and use the components. It also provides a convenient method of documenting their interfaces and usage requirements. </p>
<p>
In addition to single components, Visual Component Manager can also store component libraries, templates, models, and complete application frameworks. For example, a tool developer might create a set of forms and basic modules that are the starting point for new forms and modules of the same type. By creating a template stored in Visual Component Manager, any developer can get a copy of the forms or modules and be able to add to or change it without affecting the original.</p>
<p>
Because Visual Component Manager supports multiple databases, it is possible to selectively browse through items in a local repository database, switch to a departmental repository database (on a shared server), and then finally to enterprise scope on another shared database. In any repository database, you can use Visual Component Manager to drag items of interest into your local database, or insert them directly into your project.</p>
<p>
<b>For More Information</b>&nbsp;&nbsp;&nbsp;To see step-by-step instructions for publishing components, see <a href="veconpublishingcomponents.htm">Publishing Components</a>. For detailed information about the Microsoft Repository, search online in the <i>MSDN Library Visual Studio 6.0</i> for "Repository Overview".</p>
<h2>Finding Components</h2>
<p>
Visual Component Manager provides a flexible keyword and search mechanism to help organize and cross-reference components very flexibly. You can catalog and search for components by the component name, type, description, keywords, and annotations. With full text search capability, you can find components even if you don't know the exact component name.</p>
<p>
Making best use of this search capability requires careful thought and consideration when you are publishing a component. You should be sure to enter the keywords most likely to describe the component to someone looking for it, or for someone searching for a component that has its functionality.</p>
<p>
The keyword scheme also lets you group and categorize components hierarchically. For example, "Accounting" components might be further subdivided with keywords such as "Accounts Receivable" and "Payroll." By defining keywords to match both the larger category and the subcategories, a user can find either all items with the "Accounting" keyword, or just a subset with the "Payroll" keyword.</p>
<p>
To provide good examples of well-indexed component entries, Visual Component Manager allows you to install entries for all controls, templates, forms, and other components supplied by Microsoft<sup>®</sup> Visual Basic<sup>®</sup>. You are given this option when you first run Visual Component Manager from within Visual Basic. Useful descriptions and keywords have already been entered, allowing you to find the component or tool you are looking for, and then launch or add it to your project with a click of the mouse.</p>
<p>
<b>For More Information</b>&nbsp;&nbsp;&nbsp;For step-by-step instructions on finding components in a Visual Component Manager repository database, see <a href="veconfindingcomponents.htm">Finding Components</a>.</p>
<h2>Reusing Components</h2>
<p>
Visual Component Manager lets you easily share and reuse code components, documentation, and other pieces of a project, as well as complete projects. When you locate a component you need, reusing it in your current project is usually as simple as clicking Add to my project on the component's shortcut menu. When reusing components that require Component Object Model (COM) registration, Visual Component Manager automatically registers the component for you when adding it to your project.</p>
<p>
Programmers often create modules that contain "utility" functions that are used over and over again, to avoid reinventing the wheel. Storing such modules in Visual Component Manager provides an easy way to find and reuse such modules.</p>
<p>
You can also associate additional files with components. A particular component may require the presence of additional support files such as .dll files, Help files, or documentation. With Visual Component Manager, you can associate multiple files with any component. This association becomes a part of the component item's properties in Visual Component Manager, and the associated files can be loaded along with the item.</p>
<p>
When you use it in this way, Visual Component manager can also be the central location for approved project programming conventions, functional specifications, architectural models, and diagrams.</p>
<p>
<b>For More Information</b>&nbsp;&nbsp;&nbsp;For step-by-step instructions on reusing components that have been published in Visual Component Manager, see <a href="veconreusingcomponentsinyourproject.htm">Reusing Components in Your Project</a>.</p>
</BODY>
</HTML>
