<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Installing Components Authored in Visual Basic</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconinstallingcomponentsauthoredinvisualbasic"></a>Installing Components Authored in Visual Basic</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconInstallingComponentsAuthoredInVisualBasic_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconInstallingComponentsAuthoredInVisualBasic_T">
</object></p>
<p>
You can include components written in Visual Basic in a setup project by including the Visual Basic components and all the files that they depend on in the setup project. However, it is often easier to use Visual Basic's Package and Deployment Wizard to build a setup. You can then include these Visual Basic-authored setup files as a nested setup in a Microsoft developer environment setup project.</p>
<p>
Such internal, nested setups are automatically run first, when your users run the outer setup (.exe) file that the setup project generated.</p>
<p>
If the component authored in Visual Basic is a COM component (such as an ActiveX control), then like all COM components, it is best to install them in the Windows System folder (in the Visual Basic-authored setup).</p>
<p>
Even if you don't want to use a nested setup, running the Package and Deployment Wizard on the Visual Basic project for the component is a quick and easy way to determine the correct set of files that need to be included in your self-installing setup file with the component.</p>
</BODY>
</HTML>
