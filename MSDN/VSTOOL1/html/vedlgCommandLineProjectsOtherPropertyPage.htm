<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Custom (Utility Projects Settings Dialog Box)</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vedlgcommandlineprojectsotherpropertypage"></a>Custom (Utility Projects Settings Dialog Box)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vedlgCommandLineProjectsOtherPropertyPage_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vedlgCommandLineProjectsOtherPropertyPage_T">
</object></p>
<p>
Use this dialog box to specify the build engine and project outputs to be generated for the files contained within a utility project. You can place any types of files in a utility project, and then specify the command line to execute to process those files.</p>
<p>
The project outputs of the utility project can be used in other types of projects, such as cabinet files and setup executables, if you specify the project output file names here.</p>
<p>
You can list any type of command here, whether the command builds a file or not. Project outputs are optional. You can set the order that the Microsoft development environment uses to execute the build commands in the Build Order dialog box.</p>
<p>
You can also use this dialog box to set random files as project output files to be included in a packaging project. For example, you can add 10 external bitmap files to the project outputs in a utility project, and then include the utility project in a cabinet (.cab) file. The external files will be packaged into the cabinet file.</p>
<h2>Options</h2>
<h3>Build commands</h3>
<p>
Provides a place to enter the command line build commands to execute. List the full path to the build tool and files to be built here. Alternatively, the development environment will look in the current directory for the build tool or check the environment variables specified in the full path.</p>
<p>
For example, your build command could be:</p>
<p>
nmake C:\myproj\myproj.mak</p>
<h3>Build outputs</h3>
<p>
Provides a place to enter the full path and file name for the project outputs generated by the build commands if you wish these project outputs to be recognized by other projects in the development environment for packaging or deployment. Build outputs information is optional.</p>
<p>
For example, you could list C:\myproj\myproj.exe. Do not use wildcard characters, such as *.exe.</p>
</BODY>
</HTML>
