<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UnsignedIntRanges</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UnsignedIntRanges.htm#com_0003001413010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UnsignedIntRanges.htm#com_0003001413020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="TimerEvent.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_util.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="VectorSort.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.util</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UnsignedIntRanges</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UnsignedIntRanges extends <A HREF="IntRanges.htm">IntRanges</A>
{
  // Constructors
  public <A HREF="UnsignedIntRanges.htm#com_0003001413010100">UnsignedIntRanges</A> ();
  public <A HREF="UnsignedIntRanges.htm#com_0003001413010200">UnsignedIntRanges</A> (String str);
  public <A HREF="UnsignedIntRanges.htm#com_0003001413010300">UnsignedIntRanges</A> (String str, String delims);

  // Methods
  public synchronized void <A HREF="UnsignedIntRanges.htm#com_0003001413020100">addRange</A> (int s, int e);
  public synchronized void <A HREF="UnsignedIntRanges.htm#com_0003001413020200">addRanges</A> (IntRanges r);
  public synchronized void <A HREF="UnsignedIntRanges.htm#com_0003001413020300">addSingleton</A> (int n);
  public StringBuffer <A HREF="UnsignedIntRanges.htm#com_0003001413020400">appendToStringBuffer</A> (StringBuffer sb);
  public boolean <A HREF="UnsignedIntRanges.htm#com_0003001413020500">contains</A> (int find);
  public int <A HREF="UnsignedIntRanges.htm#com_0003001413020600">getRangeEnd</A> (int idx);
  public int <A HREF="UnsignedIntRanges.htm#com_0003001413020700">getRangeStart</A> (int idx);
  public int <A HREF="UnsignedIntRanges.htm#com_0003001413020800">indexOf</A> (int find, int fromRange);
  public int <A HREF="UnsignedIntRanges.htm#com_0003001413020900">indexOf</A> (int find);
  public UnsignedIntRanges <A HREF="UnsignedIntRanges.htm#com_0003001413020a00">intersect</A> (UnsignedIntRanges other,
        IIntRangeComparator judge);
  public IntRanges <A HREF="UnsignedIntRanges.htm#com_0003001413020b01">intersect</A> (IntRanges other, IIntRangeComparator judge);
  public UnsignedIntRanges <A HREF="UnsignedIntRanges.htm#com_0003001413020b00">intersect</A> (UnsignedIntRanges other);
  public boolean <A HREF="UnsignedIntRanges.htm#com_0003001413020c00">removeRange</A> (int s, int e,
        IIntRangeComparator hook);
}
</FONT></PRE>
<P>This class shifts unsigned numbers to the range of signed numbers. Those familiar with the <A HREF="IntRanges.htm">IntRanges</A> class should be aware that <A HREF="IntRanges.htm#com_0003001408020f00">IntRanges.getRanges</A> and <A HREF="IntRanges.htm#com_0003001408022200">IntRanges.setRanges</A> are not converted by this derived class. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="IntRanges.htm">IntRanges</A>
  |
  +--<B>UnsignedIntRanges</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003001413010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001413010100">UnsignedIntRanges</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UnsignedIntRanges ();
</FONT></PRE>
<P><P>Creates an <A HREF="UnsignedIntRanges.htm">UnsignedIntRanges</A> object. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413010200">UnsignedIntRanges</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UnsignedIntRanges (String str);
</FONT></PRE>
<P><P>Constructs a set of ranges from the given string. This method simply calls the superclass. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>str</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A string containing ranges of unsigned integers (in hexadecimal), where the bounds of each range are separated by a dash (-), and separate ranges are delimited by commas. 
<P>A range of a single unsigned integer can be entered by including just the single unsigned integer, separated by delimiters. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413010300">UnsignedIntRanges</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UnsignedIntRanges (String str, String delims);
</FONT></PRE>
<P><P>Constructs a set of ranges from the given string with specified delimiters. This method simply calls the superclass. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>str</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A string containing ranges of unsigned integers (in hexadecimal), where the bounds of each range are separated by a dash (-). 
<P>A range of a single unsigned integer can be entered by including just the single unsigned integer, separated by delimiters. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>delims</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The character or characters separating ranges. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001413020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001413020100">addRange</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addRange (int s, int e);
</FONT></PRE>
<P><P>Adds a range of unsigned integers to the <A HREF="UnsignedIntRanges.htm">UnsignedIntRanges</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The lower limit of the range. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The upper limit of the range. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="IntRanges.htm#com_0003001408020100">addRange(int,int)</A> in <A HREF="IntRanges.htm">IntRanges</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413020200">addRanges</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addRanges (IntRanges r);
</FONT></PRE>
<P><P>Adds a set of ranges to this set of ranges. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>r</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An <A HREF="IntRanges.htm">IntRanges</A> object to add to this <A HREF="UnsignedIntRanges.htm">UnsignedIntRanges</A> object. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="IntRanges.htm#com_0003001408020200">addRanges(IntRanges)</A> in <A HREF="IntRanges.htm">IntRanges</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413020300">addSingleton</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addSingleton (int n);
</FONT></PRE>
<P><P>Adds a range of a single, unsigned integer to the <A HREF="UnsignedIntRanges.htm">UnsignedIntRanges</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>n</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The integer range. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="IntRanges.htm#com_0003001408020300">addSingleton(int)</A> in <A HREF="IntRanges.htm">IntRanges</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413020400">appendToStringBuffer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public StringBuffer appendToStringBuffer (StringBuffer sb);
</FONT></PRE>
<P><P>Appends a string representation of the unsigned integer ranges to a given string buffer. The unsigned integers are represented in hexadecimal. 

<P><B>Return Value:</B> <P>Returns a string buffer containing the concatenated strings. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sb</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <B>StringBuffer</B> to append the set of unsigned integer range pairs to. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="IntRanges.htm#com_0003001408020400">appendToStringBuffer(StringBuffer)</A> in <A HREF="IntRanges.htm">IntRanges</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413020500">contains</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean contains (int find);
</FONT></PRE>
<P><P>Searches from the beginning for a given number. 

<P><B>Return Value:</B> <P>Returns true if the number was found; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>find</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number to search for. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="IntRanges.htm#com_0003001408020c00">contains(int)</A> in <A HREF="IntRanges.htm">IntRanges</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413020600">getRangeEnd</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getRangeEnd (int idx);
</FONT></PRE>
<P><P>Retrieves the end of a range at a specified index. 

<P><B>Return Value:</B> <P>Returns the last integer of the range pair. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the range pair. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="IntRanges.htm#com_0003001408020e00">getRangeEnd(int)</A> in <A HREF="IntRanges.htm">IntRanges</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413020700">getRangeStart</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getRangeStart (int idx);
</FONT></PRE>
<P><P>Retrieves the start of a range at a specified index. 

<P><B>Return Value:</B> <P>Returns the first integer of the range pair. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the range pair. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="IntRanges.htm#com_0003001408021000">getRangeStart(int)</A> in <A HREF="IntRanges.htm">IntRanges</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413020800">indexOf</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int indexOf (int find, int fromRange);
</FONT></PRE>
<P><P>Searches from a starting index for a range pair containing a given a number. 

<P><B>Return Value:</B> <P>Returns the index of the range pair that includes the number, if found; otherwise, returns -1. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>find</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number to search for. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fromRange</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the range pair to start the search from. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="IntRanges.htm#com_0003001408021100">indexOf(int,int)</A> in <A HREF="IntRanges.htm">IntRanges</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413020900">indexOf</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int indexOf (int find);
</FONT></PRE>
<P><P>Searches from the beginning for a range pair containing a given a number. 

<P><B>Return Value:</B> <P>Returns the index of the range pair that includes the number, if found; otherwise, returns -1. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>find</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number to search for. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="IntRanges.htm#com_0003001408021200">indexOf(int)</A> in <A HREF="IntRanges.htm">IntRanges</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413020a00">intersect</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UnsignedIntRanges intersect (UnsignedIntRanges other,
        IIntRangeComparator judge);
</FONT></PRE>
<P><P>Constructs a new <A HREF="UnsignedIntRanges.htm">UnsignedIntRanges</A> object with the set of unsigned integers that are common to both this object and another object. 

<P><B>Return Value:</B> <P>Returns an <A HREF="UnsignedIntRanges.htm">UnsignedIntRanges</A> object for the intersection of this object and <I>other</I>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>other</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The other <A HREF="UnsignedIntRanges.htm">UnsignedIntRanges</A> object to find an intersection with. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>judge</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The hook interface to notify through <A HREF="IIntRangeComparator.htm#com_0003001417010200">IIntRangeComparator.intersectRanges</A> of intersecting ranges that will be added to the new <A HREF="UnsignedIntRanges.htm">UnsignedIntRanges</A> object. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_0003001413020b01">intersect</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IntRanges intersect (IntRanges other, IIntRangeComparator judge);
</FONT></PRE>
<P><P>Constructs a new <A HREF="IntRanges.htm">IntRanges</A> object with the set of integers that are common to both this object and another object. 

<P><B>Return Value:</B> <P>Returns an <A HREF="IntRanges.htm">IntRanges</A> object for the intersection of this object and the <A HREF="IntRanges.htm">IntRanges</A> object contained in the <I>other</I> parameter. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>other</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The other <A HREF="IntRanges.htm">IntRanges</A> object to find an intersection with. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>judge</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The hook interface to notify through <A HREF="IIntRangeComparator.htm#com_0003001417010200">IIntRangeComparator.intersectRanges</A> of intersecting ranges that will be added to the new <A HREF="IntRanges.htm">IntRanges</A> object. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_0003001413020b00">intersect</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UnsignedIntRanges intersect (UnsignedIntRanges other);
</FONT></PRE>
<P><P>Retrieves the intersection of this set of unsigned integer ranges with another. 

<P><B>Return Value:</B> <P>Returns the intersection as a set of unsigned integer ranges. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>other</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The set of unsigned integer ranges to compare. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001413020c00">removeRange</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean removeRange (int s, int e, IIntRangeComparator hook);
</FONT></PRE>
<P><P>Removes a range of integers from the <A HREF="UnsignedIntRanges.htm">UnsignedIntRanges</A> object. 

<P><B>Return Value:</B> <P>Returns true if any integers in the range were removed; otherwise false if the set contains no integers in the range. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The lower limit of the range. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The upper limit of the range. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hook</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The interface to notify through <A HREF="IIntRangeComparator.htm#com_0003001417010500">IIntRangeComparator.shiftRanges</A> that the ranges were deleted or <A HREF="IIntRangeComparator.htm#com_0003001417010600">IIntRangeComparator.splitRange</A> that a range was split. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
