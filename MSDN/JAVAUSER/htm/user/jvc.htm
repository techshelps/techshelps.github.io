<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction to Jvc</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Working with MS VM"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="jvc.htm#jvc_0004000401010000">Description of Jvc Syntax</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="jvc.htm#jvc_0004000401020000">File Name Syntax</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="jvc.htm#jvc_0004000401030000">Using Jvc.exe</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="jvc.htm#jvc_0004000401040000">Order of Jvc Options</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="jvc.htm#jvc_0004000401050000">Jvc Command Files</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="jvc.htm#jvc_0004000401060000">CLASSPATH Environment Variable</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="jvc.htm#jvc_0004000401070000">Reference to Jvc Command-Line Options</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/tools2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Tools"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom">&nbsp;</TD><TD ALIGN="center" VALIGN="bottom"><A href="exegen.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_tool.htm"><IMG SRC="art/homenrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Tools"></A></TD><TD ALIGN="center" VALIGN="bottom"><A href="jvcrd_rn.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Jvc Reference</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">&nbsp;</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Tools</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Introduction to Jvc</H2>
<P>Jvc.exe is the Microsoft compiler for Java (jvc). The compiler produces interpreted (.class) files that will run on any virtual machine.

<P><B>Important</B>  For last-minute changes to jvc, see <A HREF="jvcrd_rn.htm">Jvc Release Notes</A>.<P>For an alphabetic reference to jvc options, see <A href="jvc.htm#jvc_0004000401070000">Reference to Jvc Command-Line Options</A>. 

<P>For a listing of error and warning messages produced by jvc, see <A href="JVCError.htm">JVC Errors and Warning Messages</A>.


<H3 STYLE="color:#333366"><A NAME="jvc_0004000401010000">Description of Jvc Syntax</A></H3><P>The Jvc.exe (jvc) command line uses the following syntax:

<PRE><FONT FACE="Courier" SIZE="2">JVC [options] &lt;filename&gt;
</FONT></PRE>
<P>The following table describes input to the jvc command.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Entry </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning

</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>option</I>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One or more jvc options. For more information, see <A href="jvc.htm#jvc_0004000401070000">Reference to Jvc Command-Line Options</A>. 

 Note that all options apply to all specified 
 source files.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>filename</I>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Name of one or more source files.
</FONT></TD></TR></TABLE>
<P>You can specify any number of options and filenames, as long 
as the number of characters on the command line does not 
exceed 1024 or the limit dictated by the operating system.

<P><B>Note</B>  There is no guarantee that future releases of 
Microsoft&#174; Windows NT&#174; (version 4.0 and later) and Microsoft&#174; 
Windows&#174; 95 will have the same input limit of 1024 characters 
for the command line.
<P>Any options that you want to pass to jvc must be supplied 
before the name of the .class file, or they will be 
interpreted as command-line arguments to the .class file.


<H3 STYLE="color:#333366"><A NAME="jvc_0004000401020000">File Name Syntax</A></H3><P>The jvc recognizes the following file name syntax:
<UL><LI>Jvc accepts files with names that follow FAT, HPFS, or 
 NTFS naming conventions.
<LI>Any filename can include a full or partial path.
 <P>A full path includes a drive name and one or more directory names. Jvc accepts filenames separated either by backslashes (\) or forward slashes (/). 
 <P>A partial path omits the drive name, which jvc assumes to be the current drive. If you do not specify a path, jvc assumes the file is in the current directory.
</UL>
<P><B>Note</B>  If a file does not have an extension, jvc assumes the 
extension of .java.
<H3 STYLE="color:#333366"><A NAME="jvc_0004000401030000">Using Jvc.exe</A></H3><P>You can use Jvc.exe (jvc) to compile specified .java source 
files into interpreted .class files. To compile without 
producing the .class files, use the <A href="jvc.htm#jvc_0004000401070800">/nowrite</A> option.
You can specify jvc options on the command line. 
If you are compiling your Java project from the command line, 
place the options you want to supply to jvc before the name 
of your .class file on the command line.


<H3 STYLE="color:#333366"><A NAME="jvc_0004000401040000">Order of Jvc Options</A></H3><P>Command-line options can appear anywhere on the Jvc.exe (jvc) 
command line. Jvc reads the command line from left to right, 
processing command files in the order it encounters them. 
Each option applies to all files on the command line. If jvc 
encounters conflicting options, it uses the rightmost option.


<H3 STYLE="color:#333366"><A NAME="jvc_0004000401050000">Jvc Command Files</A></H3><P>A command file, also referred to as a response file, is a 
text file that contains information you would otherwise type 
on the command line. Jvc accepts a command file as an 
argument on the command line. Unlike the command line, a 
command file allows you to use multiple filenames.

<P>You should use the following criteria when using command files:
<UL><LI>A command file can contain only filenames.
<LI>A command file must not invoke the jvc command.
<LI>A command file must not contain any jvc compiler options.
</UL>
<P>A command file is specified by an "at" sign (&#064;), followed by a 
filename; the filename can specify an absolute or relative path.

<H3 STYLE="color:#333366"><A NAME="jvc_0004000401060000">CLASSPATH Environment Variable</A></H3><P>Use the CLASSPATH environment variable to specify additional 
class path information when compiling from the command line. 
The CLASSPATH environment variable has the following syntax.

<PRE><FONT FACE="Courier" SIZE="2">SET CLASSPATH = &lt;path&gt;
</FONT></PRE>
<P>An understanding of where the Microsoft Win32 VM for Java (Microsoft VM) and the command line get class path information will 
explain why your Java program may behave differently, 
depending on where it runs.
When the Microsoft VM installs, it enters the value 
C:\Windows\Java\Classes\Classes.zip;.; into the registry key 
HKEY_LOCAL_MACHINE\Software\Microsoft\Java VM\Classpath. When 
a Java program runs, the Microsoft VM first looks for the 
CLASSPATH value in the registry. If the application executes 
from the command line, the Microsoft VM also uses the 
CLASSPATH environment variable, if one has been set. 
<P>What this means is if you are executing from the:
<UL><LI>Command line:
 <P>Class path = C:\Windows\Java\Classes\Classes.zip;.; and the 
 value set in the CLASSPATH environment variable

</UL>
<H3 STYLE="color:#333366"><A NAME="jvc_0004000401070000">Reference to Jvc Command-Line Options</A></H3><P>This section is an alphabetic reference to all the jvc 
command-line options. 
If a command-line option can take one or more arguments, its 
syntax is shown before its 
description. Click any option in the following table for 
information on the option.

<P>Jvc options set from the command line
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070100">/cp</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070600">/g:l</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070b00">/O:J</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070200">/cp:o</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070700">/g:t</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070c00">/verbose</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070300">/cp:p</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070800">/nowrite</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070d00">/w</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070400">/d</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070900">/O</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070f00">/?</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070500">/g</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A href="jvc.htm#jvc_0004000401070a00">/O:I</A>
</FONT></TD>
</TR>
</TABLE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070100">/cp</A></H4><BLOCKQUOTE>
<P><B>/cp</B> <I>classpath</I><BR>
<P><P>Use the /cp option to set the CLASSPATH environment variable 
for the current compilation. Using this option specifies the 
path where the jvc or jview command-line tools can find 
system and user-defined classes. The Java interpreter uses a 
platform-dependent default location and the CLASSPATH 
environment variable to find system classes. (See <A href="jvc.htm#jvc_0004000401060000">CLASSPATH Environment Variable</A> for more information.) The directories 
in the class path are separated by semicolons on a Microsoft 
Windows system; on UNIX, by colons. 

<P><B>Example:</B> <P>For example, on Windows NT, the class path might be:

<PRE><FONT FACE="Courier" SIZE="2">JVC /cp x:.;x:\java\classes
</FONT></PRE>
<P>In this example, jvc searches in and beneath the directories 
on the path for system and user-defined classes.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070200">/cp:o</A></H4><BLOCKQUOTE>
<P><P>Prints the class path to standard output. This 
option is especially useful for troubleshooting errors, like 
"class not found," when compiling from the command line. 

<P><B>Example:</B> <P>The following example prints the class path to the screen.

<PRE><FONT FACE="Courier" SIZE="2">JVC /cp:o
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070300">/cp:p</A></H4><BLOCKQUOTE>
<P><B>/cp:p</B> <I>path</I><BR>
<P><P>This option is inserted before the path entered to the class path and 
inserts a semicolon between them.

<P><B>Remarks:</B> <P>The value for the class path can come from the CLASSPATH environment variable or from the /cp option. When multiple /cp:p switches are entered, the paths are concatenated.
<P><B>Example:</B> <P>The following command concatenates the directories myproj1 
and myproj2, and is inserted before the resulting path to the existing 
class path.

<PRE><FONT FACE="Courier" SIZE="2">JVC /cp:p myproj1 /cp:p myproj2
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070400">/d</A></H4><BLOCKQUOTE>
<P><B>/d</B> <I>directory</I> <I>filename</I><BR>
<P><P>When compiling .java files, use the /d option to specify an 
output directory other than the current directory for the 
.class files. If the directory does not exist, jvc will 
create it. 

<P><B>Example:</B> <P>The following command compiles the myClass.java file into a 
myClass.class file and writes this file into the class 
directory.

<PRE><FONT FACE="Courier" SIZE="2">JVC /d c:\classdir myClass.java
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070500">/g</A></H4><BLOCKQUOTE>
<P><B>/g</B>[<B>-</B>] <I>filename</I><BR>
<P><P>Generates all debugging information. No 
debugging options are set by default. The effect of using the 
/g switch is the same as using the following options together.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Option </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Action
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/g:l
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Generates line number information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/g:t
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Generates debug tables.
</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>To disable this option, use a dash (-) after the 
switch on the command line.
<P><B>Examples:</B> <P>The following command creates a .class file called 
myClass.class that contains debugging information.

<PRE><FONT FACE="Courier" SIZE="2">JVC /g myClass.java
</FONT></PRE>
<P>The following command instructs jvc to exclude debugging 
information from the myClass.class file.

<PRE><FONT FACE="Courier" SIZE="2">JVC /g- myClass.java
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070600">/g:l</A></H4><BLOCKQUOTE>
<P><B>/g:l</B>[<B>-</B>] <I>filename</I><BR>
<P><P>Generates line numbers that are used when 
debugging a program. By default, no debugging options are set.

<P><B>Remarks:</B> <P>To disable this option, use a dash (-) after the 
switch on the command line.
<P><B>Examples:</B> <P>The following command instructs jvc to generate line-number 
information for the resulting myClass.class file:

<PRE><FONT FACE="Courier" SIZE="2">JVC /g:l myClass.java
</FONT></PRE>
<P>The following command instructs jvc to turn off line-number 
generation:

<PRE><FONT FACE="Courier" SIZE="2">JVC /g:l- myClass.java
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070700">/g:t</A></H4><BLOCKQUOTE>
<P><B>/g:t</B>[<B>-</B>] <I>filename</I><BR>
<P><P>Generates debug tables that are used when 
debugging a program. By default, no debugging options are set.

<P><B>Remarks:</B> <P>To disable this option, use a dash (-) after the 
switch on the command line.
<P><B>Examples:</B> <P>The following command instructs jvc to generate debug-table 
information for the resulting myClass.class file:

<PRE><FONT FACE="Courier" SIZE="2">JVC /g:t myClass.java
</FONT></PRE>
<P>The following command instructs jvc to turn off debug-table 
generation:

<PRE><FONT FACE="Courier" SIZE="2">JVC /g:t- myClass.java
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070800">/nowrite</A></H4><BLOCKQUOTE>
<P><B>/nowrite</B> <I>filename</I><BR>
<P><P>Tells jvc to compile a .java file and suppress the writing of a .class file. 

<P><B>Example:</B> <P>In the following example, the myClass.java file is compiled, and errors and warnings are reported, but no myClass.class file is produced. 

<PRE><FONT FACE="Courier" SIZE="2">JVC /nowrite myClass.java
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070900">/O</A></H4><BLOCKQUOTE>
<P><B>/O</B> <I>filename</I><BR>
<P><P>Combines optimizing options to produce the 
fastest possible program. The effect of using this option is 
the same as using the following options together.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Option </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Action
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/O:I
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Optimizes by inlining methods, when appropriate.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/O:J
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Optimizes bytecode jumps. Default optimization 
 setting.
</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>To disable any optimization option, use a dash (-) 
after the switch on the command line.
<P><B>Examples:</B> <P>The following command fully optimizes the code for the
myClass.class file that is produced.

<PRE><FONT FACE="Courier" SIZE="2">JVC /O myClass.java
</FONT></PRE>
<P>The following command turns off all code optimization.

<PRE><FONT FACE="Courier" SIZE="2">JVC /O- myClass.java
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070a00">/O:I</A></H4><BLOCKQUOTE>
<P><B>/O:I</B> <I>filename</I><BR>
<P><P>Tells the compiler it can inline methods to 
produce more efficient code. Code that is inlined does not 
have the overhead associated with a method call. Since there 
is no mechanism in the Java language to request inlining of 
methods, use this option when you want the compiler to inline 
your code.

<P><B>Remarks:</B> <P>To disable this option, use a dash (&#150;) after the 
switch on the command line.
<P><B>Examples:</B> <P>The following example evaluates the source code in the 
myClass.java file and inlines methods where possible. The 
resulting myClass.class file contains the optimized code.

<PRE><FONT FACE="Courier" SIZE="2">JVC /O:I myClass.java
</FONT></PRE>
<P>The following command turns off all inline-code optimization.

<PRE><FONT FACE="Courier" SIZE="2">JVC /O:I- myClass.java
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070b00">/O:J</A></H4><BLOCKQUOTE>
<P><B>/O:J</B> <I>filename</I><BR>
<P><P>Causes jvc to optimize the bytecode jumps in 
the compiled .class file. This switch tells the compiler to 
generate code that jumps to another jump. This switch is the 
compiler's default optimization setting.

<P><B>Remarks:</B> <P>To disable this option, use a dash (-) after the 
switch on the command line.
<P><B>Examples:</B> <P>The following example evaluates the source code in the 
myClass.java file and optimizes the bytecode jumps to produce 
more efficient code. The resulting myClass.class file 
contains the optimized code.

<PRE><FONT FACE="Courier" SIZE="2">JVC /O:J myClass.java
</FONT></PRE>
<P>The following command turns off bytecode jump optimization.

<PRE><FONT FACE="Courier" SIZE="2">JVC /O:J- myClass.java
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070c00">/verbose</A></H4><BLOCKQUOTE>
<P><B>/verbose</B> <I>filename</I><BR>
<P><P>Instructs jvc to display all messages while 
compiling a file or project. These messages give useful 
information about the progress of the compilation.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070d00">/w</A></H4><BLOCKQUOTE>
<P><B>/w0<BR>
/w1<BR>
/w2<BR>
/w3<BR>
/w4<BR>
</B><P><P>These options control the number of warning messages produced by the compiler. They affect only source files named on the command line.

<P>Compiler warning message numbers begin with "J5." The 
documentation describes the warnings, indicates each 
warning's level, and indicates potential problems (rather 
than actual coding errors) with statements that might not 
compile as you intend.

<P>The meanings of the options are as follows:

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Option </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/w0
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Turns off all warning messages.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/w1
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Displays severe warning messages.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/w2
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Displays a less-severe level of warning message 
 than /w1. This is the default.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/w3
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Displays a less-severe level of warning message 
 than /w2, including use of methods with no declared 
 return type, failure to put return statements in 
 methods with non-void return types, and data 
 conversions that would cause loss of data or 
 precision.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/w4
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Displays the least severe level of warning messages.
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070e00">/x</A></H4><BLOCKQUOTE>
<P><B>/x</B>[<B>-</B>] <I>filename</I><BR>
<P><P>This compiler supports the Java language specification. In addition, the compiler might offer a number of features 
beyond those required by the Java language specification. These features 
are available by default, and are not available when the /x 
option is specified. 

<P>Use /x if you plan to port your program to other 
environments. The /x option tells the compiler to treat 
extended keywords as simple identifiers and to disable the 
other Microsoft extensions. 

<P><B>Remarks:</B> <P>To disable this option, use a dash (-) after the 
switch on the command line.
<P><B>Examples:</B> <P>The following command ignores any extensions used 
in the myClass.class file.

<PRE><FONT FACE="Courier" SIZE="2">JVC /x myClass.java
</FONT></PRE>
<P>The following command restores the default settings and 
recognizes the language extensions.

<PRE><FONT FACE="Courier" SIZE="2">JVC /x- myClass.java
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="jvc_0004000401070f00">/?</A></H4><BLOCKQUOTE>
<P><B>/?<BR>
</B><P><P>Displays a listing of compiler options to standard output.
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Top"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
