<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Direct3dRM</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Direct3dRM.htm#com_0003000625010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="Direct3dMaterial.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A href="def_dirx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="Direct3dRMAnimation.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.directX</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class Direct3dRM</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class Direct3dRM implements <A HREF="IDirect3dRM.htm">IDirect3dRM</A>
{
  // Methods
  public void <A HREF="Direct3dRM.htm#com_0003000625010100">addSearchPath</A>(String name);
  public Direct3dRMAnimation <A HREF="Direct3dRM.htm#com_0003000625010200">createAnimation</A>();
  public Direct3dRMAnimationSet <A HREF="Direct3dRM.htm#com_0003000625010300">createAnimationSet</A>();
  public int <A HREF="Direct3dRM.htm#com_0003000625010400">createColorRGB</A>(float red, float green, float blue);
  public Direct3dRMDevice <A HREF="Direct3dRM.htm#com_0003000625010500">createDevice</A>(int v1, int v2);
  public Direct3dRMDevice <A HREF="Direct3dRM.htm#com_0003000625010600">createDeviceFromClipper</A>(DirectDrawClipper
        lpDDClipper, _Guid g, int width, int height);
  public Direct3dRMDevice <A HREF="Direct3dRM.htm#com_0003000625010700">createDeviceFromD3D</A>(Direct3d direct3d,
        Direct3dDevice direct3dDevice));
  public Direct3dRMDevice <A HREF="Direct3dRM.htm#com_0003000625010800">createDeviceFromSurface</A>(_Guid g,
        DirectDraw dd, DirectDrawSurface DDsBack);
  public Direct3dRMFace <A HREF="Direct3dRM.htm#com_0003000625010900">createFace</A>();
  public Direct3dRMFrame <A HREF="Direct3dRM.htm#com_0003000625010a00">createFrame</A>(Direct3dRMFrame parent);
  public Direct3dRMLight <A HREF="Direct3dRM.htm#com_0003000625010b00">createLight</A>(int t, int c);
  public Direct3dRMLight <A HREF="Direct3dRM.htm#com_0003000625010c00">createLightRGB</A>(int lt, float vred,
        float vgreen, float vblue);
  public Direct3dRMMaterial <A HREF="Direct3dRM.htm#com_0003000625010d00">createMaterial</A>(float d);
  public Direct3dRMMesh <A HREF="Direct3dRM.htm#com_0003000625010e00">createMesh</A>();
  public Direct3dRMMeshBuilder <A HREF="Direct3dRM.htm#com_0003000625010f00">createMeshBuilder</A>();
  public Direct3dRMVisual <A HREF="Direct3dRM.htm#com_0003000625011000">createShadow</A>(Direct3dRMVisual v,
        Direct3dRMLight l, float px, float py, float pz,
        float nx, float ny, float nz);
  public Direct3dRMVisual <A HREF="Direct3dRM.htm#com_0003000625011100">createShadowFromFrame</A>(
        Direct3dRMFrame frame, Direct3dRMLight direct3dRMLight,
        float px, float py, float pz, float nx, float ny,
        float nz);
  public Direct3dRMVisual <A HREF="Direct3dRM.htm#com_0003000625011200">createShadowFromMesh</A>(Direct3dRMMesh mesh,
        Direct3dRMLight direct3dRMLight, float px, float py,
        float pz, float nx, float ny, float nz);
  public Direct3dRMVisual <A HREF="Direct3dRM.htm#com_0003000625011300">createShadowFromMeshBuilder</A>(
        Direct3dRMMeshBuilder mb, Direct3dRMLight l, float px,
        float py, float pz, float nx, float ny, float nz);
  public Direct3dRMTexture <A HREF="Direct3dRM.htm#com_0003000625011400">createTexture</A>(D3dRMImage image,
        byte[] buffer1, byte[] pal);
  public Direct3dRMTexture <A HREF="Direct3dRM.htm#com_0003000625011500">createTextureFromSurface</A>(
        DirectDrawSurface ddS);
  public Direct3dRMUserVisual <A HREF="Direct3dRM.htm#com_0003000625011600">createUserVisual</A>(
        IUserVisualCallback fn, IUnknown Arg);
  public Direct3dRMViewport <A HREF="Direct3dRM.htm#com_0003000625011700">createViewport</A>(Direct3dRMDevice dev,
        Direct3dRMFrame fr, int l, int t, int w, int h);
  public Direct3dRMWrap <A HREF="Direct3dRM.htm#com_0003000625011800">createWrap</A>(int t, Direct3dRMFrame f,
        float ox, float oy, float oz, float dx, float dy,
        float dz, float ux, float uy, float uz, float ou,
        float ov, float su, float sv);
  public void <A HREF="Direct3dRM.htm#com_0003000625011900">enumerateObjects</A>(IEnumerateObjectsCallback fn,
        IUnknown pArgs);
  public Direct3dRMDeviceArray <A HREF="Direct3dRM.htm#com_0003000625011a00">getDevices</A>();
  public Direct3dRMObject <A HREF="Direct3dRM.htm#com_0003000625011b00">getNamedObject</A>(String name);
  public String <A HREF="Direct3dRM.htm#com_0003000625011c00">getSearchPath</A>();
  public void <A HREF="Direct3dRM.htm#com_0003000625011d00">loadFromFileByPos</A>(String fnam, int[] id, _Guid g, int
        cnt, int options, ILoadCallback fn1, int[] arg1,
        ILoadTextureCallback fn2, int[] arg2, Direct3dRMFrame f);
  public Direct3dRMTexture <A HREF="Direct3dRM.htm#com_0003000625011e00">loadTexture</A>(String name);
  public Direct3dRMTexture <A HREF="Direct3dRM.htm#com_0003000625011f00">loadTextureFromResource</A>(int hnd);
  public void <A HREF="Direct3dRM.htm#com_0003000625012000">setDefaultTextureColors</A>(int ds);
  public void <A HREF="Direct3dRM.htm#com_0003000625012100">setDefaultTextureShades</A>(int ds);
  public void <A HREF="Direct3dRM.htm#com_0003000625012200">setSearchPath</A>(String name);
  public void <A HREF="Direct3dRM.htm#com_0003000625012300">tick</A>(float val);
  public void <A HREF="Direct3dRM.htm#com_0003000625012400">vectorAdd</A>(D3dVector lpd, D3dVector lps1,
        D3dVector lps2);
  public void <A HREF="Direct3dRM.htm#com_0003000625012500">vectorCrossProduct</A>(D3dvector lpd, D3dvector lps1,
        D3dvector lps2);
  public float <A HREF="Direct3dRM.htm#com_0003000625012600">vectorDotProduct</A>(D3dVector lps1, D3dVector lps2);
  public float <A HREF="Direct3dRM.htm#com_0003000625012700">vectorModulus</A>(D3dVector d);
  public void <A HREF="Direct3dRM.htm#com_0003000625012800">vectorNormalise</A>(D3dvector d);
  public void <A HREF="Direct3dRM.htm#com_0003000625012900">vectorRandom</A>(D3dVector d);
  public void <A HREF="Direct3dRM.htm#com_0003000625012a00">vectorReflect</A>(D3dVector lpd, D3dVector lpRay,
        D3dVector lpNorm);
  public void <A HREF="Direct3dRM.htm#com_0003000625012b00">vectorRotate</A>(D3dVector lpr, D3dVector lpv,
        D3dVector lpaxis, float theta);
  public void <A HREF="Direct3dRM.htm#com_0003000625012c00">vectorScale</A>(D3dVector lpd, D3dVector lps,
        float factor);
  public void <A HREF="Direct3dRM.htm#com_0003000625012d00">vectorSubtract</A>(D3dVector lpd, D3dVector lps1,
        D3dVector lps2);
}
</FONT></PRE>
<P>Applications use the methods of the <B>Direct3dRM</B> class to create Direct3dRM objects and work with system-level variables. 

<H3 STYLE="color:#333366"><A NAME="com_0003000625010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000625010100">addSearchPath</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSearchPath(String name);
</FONT></PRE>
<P><P>Adds a list of directories to the end of the current file search path. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A string specifying the path to add to the current search path. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For Windows, the path should be a list of directories separated by semicolons (;). 
<P><B>See Also:</B> <A HREF="Direct3dRM.htm#com_0003000625012200">setSearchPath</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010200">createAnimation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMAnimation createAnimation();
</FONT></PRE>
<P><P>Creates an empty <A HREF="Direct3dRMAnimation.htm">Direct3dRMAnimation</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMAnimation.htm">Direct3dRMAnimation</A> object if successful; otherwise, null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010300">createAnimationSet</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMAnimationSet createAnimationSet();
</FONT></PRE>
<P><P>Creates an empty <A HREF="Direct3dRMAnimationSet.htm">Direct3dRMAnimationSet</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMAnimationSet.htm">Direct3dRMAnimationSet</A> object if successful; otherwise, null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010400">createColorRGB</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int createColorRGB(float red, float green, float blue);
</FONT></PRE>
<P><P>Creates an RGB color value. 

<P><B>Return Value:</B> <P>Returns a color value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>red</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The red component of the color. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>green</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The green component of the color. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>blue</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The blue component of the color. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010500">createDevice</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMDevice createDevice(int v1, int v2);
</FONT></PRE>
<P><P>Not implemented on the Windows platform. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010600">createDeviceFromClipper</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMDevice createDeviceFromClipper(
        DirectDrawClipper lpDDClipper, _Guid g, int width, int height);
</FONT></PRE>
<P><P>Creates a Microsoft&#174; Direct3DRM windows device by using a specified <A HREF="DirectDrawClipper.htm">DirectDrawClipper</A> object. 
<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMDevice.htm">Direct3dRMDevice</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpDDrawClipper</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="DirectDrawClipper.htm">DirectDrawClipper</A> object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A globally unique identifier (GUID). This parameter can be null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width of the device to be created. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height of the device to be created. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the <I>g</I> parameter is null, the system searches for a device with a default set of device capabilities. This is the recommended way to create a Retained-Mode device because it always works, even if the user installs new hardware. 
<P>If a hardware device is not found, the monochromatic (ramp) software driver is loaded. An application should enumerate devices instead of specifying null for <I>g</I> if it has special needs that are not met by default settings. 
<P>If you are having palette problems using this method, try using the <A HREF="Direct3dRM.htm#com_0003000625010700">createDeviceFromD3D</A> as an alternative. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010700">createDeviceFromD3D</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMDevice createDeviceFromD3D(Direct3d direct3d,
        Direct3dDevice direct3dDevice));
</FONT></PRE>
<P><P>Creates a Microsoft &#174;Direct3dRM Windows&#174; device by using specified <A HREF="Direct3d.htm">Direct3d</A> objects. It is important that all objects are derived from the same DirectDraw object. In DirectX for Java, it is also important to use create methods to construct objects, rather than using <B>new</B>. Using <B>new</B> to create certain DirectX for Java objects creates uninitialized objects that can be difficult or impossible to manipulate. 
<P>See the <A HREF="Direct3dRM.htm#com_0003000625010800">createDeviceFromSurface</A> method for a sample using standard techniques to create a Retain Mode object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMDevice.htm">Direct3dRMDevice</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>direct3d</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A Microsoft&#174; Direct3D&#174; object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>direct3dDevice</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="Direct3dDevice.htm">Direct3dDevice</A> object. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010800">createDeviceFromSurface</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMDevice createDeviceFromSurface(_Guid g, DirectDraw dd,
        DirectDrawSurface DDsBack);
</FONT></PRE>
<P><P>Creates a Microsoft&#174; Windows&#174; device for rendering from the specified DirectDraw surfaces. It is important that all objects are derived from the same DirectDraw object. In DirectX for Java, it is also important to use create methods to construct objects, rather than using <B>new</B>. Using <B>new</B> to create certain DirectX for Java objects creates uninitialized objects that can be difficult or impossible to manipulate. 
<P>The following code example shows how to use the <B>createDeviceFromSurface</B> method and create appropriate objects without using <B>new</B>. 
<PRE><FONT FACE="Courier" SIZE="2">int hw =0;  //depends on hardware
dd = new DirectDraw();    
dd.setCooperativeLevel (this, DDSCL_NORMAL);

//Create a surface
ddsd = new DDSurfaceDesc();
ddsd.flags = DDSD_CAPS | DDSD_WIDTH | DDSD_HEIGHT;

if (hw==1){
ddsd.ddsCaps = DDSCAPS_3DDEVICE | DDSCAPS_OFFSCREENPLAIN | CAPS_VIDEOMEMORY;
}
else{
ddsd.ddsCaps = DDSCAPS_3DDEVICE | DDSCAPS_OFFSCREENPLAIN | DDSCAPS_SYSTEMMEMORY;
}
ddsd.width   = w;&#009;
ddsd.height  = h; 
ddsOffscreen = dd.createSurface(ddsd);
d3d = dd.createD3D();

// Find the device's Guid for a device type specified by 
// application info object - can be RGB or MONO
//
_Guid g = d3d.findDeviceForColorModel(D3DCOLOR_RGB, hw );
rmDevice = d3drm.createDeviceFromSurface(g, dd,ddsOffscreen);
</FONT></PRE>
<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMDevice.htm">Direct3dRMDevice</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The globally unique identifier (GUID) used as the required device driver. If this parameter is null, the default device driver is used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dd</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="DirectDraw.htm">DirectDraw</A> object that is the source of the DirectDraw surface. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>DDsBack</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="DirectDrawSurface.htm">DirectDrawSurface</A> object that represents the back buffer. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010900">createFace</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMFace createFace();
</FONT></PRE>
<P><P>Creates a <A HREF="Direct3dRMFace.htm">Direct3dRMFace</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMFace.htm">Direct3dRMFace</A> object if successful; otherwise, null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010a00">createFrame</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMFrame createFrame(Direct3dRMFrame parent);
</FONT></PRE>
<P><P>Creates a new child frame of the given parent frame. 
<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A frame object that is to be the parent of the new frame. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The child frame inherits the motion attributes of its parent. For example, if the parent is moving with a given velocity, the child frame will also move with that velocity. Furthermore, if the parent is set rotating, the child frame will rotate about the origin of the parent. Frames that have no parent are called scenes. To create a scene, specify null as the parent. An application can create a frame with no parent, and then associate it with a parent frame later by using the <A HREF="Direct3dRMFrame.htm#com_000300062d010100">addChild</A> method. 
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm">com.ms.directX.Direct3dRMFrame</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010b00">createLight</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMLight createLight(int t, int c);
</FONT></PRE>
<P><P>Creates a new light source with the given type and color. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMLight.htm">Direct3dRMLight</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>t</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One value of the <A HREF="DirectXConstants.htm">D3DRMLIGHT_</A> type. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Color of the light. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010c00">createLightRGB</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMLight createLightRGB(int lt, float vred, float vgreen,
        float vblue);
</FONT></PRE>
<P><P>Creates a new light source with the given type and color. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMLight.htm">Direct3dRMLight</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One value of <A HREF="DirectXConstants.htm">D3DRMLIGHT_</A> type. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vred</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The red component of the color. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vgreen</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The green component of the color. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vblue</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The blue component of the color. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010d00">createMaterial</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMMaterial createMaterial(float d);
</FONT></PRE>
<P><P>Creates a material with the given specular property. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMMaterial.htm">Direct3dRMMaterial</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vPower</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sharpness of the reflected highlights, with a value of 5 giving a metallic look and higher values giving a more "plastic" look to the rendered surface. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010e00">createMesh</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMMesh createMesh();
</FONT></PRE>
<P><P>Creates a new mesh object with no faces. The mesh is not visible until it is added to a frame. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMMesh.htm">Direct3dRMMesh</A> object if successful; otherwise, null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625010f00">createMeshBuilder</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMMeshBuilder createMeshBuilder();
</FONT></PRE>
<P><P>Creates a new mesh builder object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object if successful; otherwise, null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011000">createShadow</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMVisual createShadow(Direct3dRMVisual v, Direct3dRMLight l,
        float px, float py, float pz, float nx, float ny, float nz);
</FONT></PRE>
<P><P>Creates a shadow by using the specified visual and light, projecting the shadow onto the specified plane. The shadow is a visual that should be added to the frame that contains the visual. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMVisual.htm">Direct3dRMVisual</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMVisual.htm">Direct3dRMVisual</A> object that is casting the shadow. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMLight.htm">Direct3dRMLight</A> object that is the light source. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>px</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>py</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the normal to the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ny</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the normal to the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the normal to the plane that the shadow is to be projected on. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011100">createShadowFromFrame</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMVisual createShadowFromFrame(Direct3dRMFrame frame,
        Direct3dRMLight direct3dRMLight, float px, float py, float pz,
        float nx, float ny, float nz);
</FONT></PRE>
<P><P>Creates a shadow by using the specified frame and light, projecting the shadow onto the specified plane. The shadow is a visual that should be added to the frame that contains the visual. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMVisual.htm">Direct3dRMVisual</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>frame</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object that is casting the shadow. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMLight.htm">Direct3dRMLight</A> object that is the light source. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>px</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>py</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the normal to the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ny</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the normal to the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the normal to the plane that the shadow is to be projected on. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011200">createShadowFromMesh</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMVisual createShadowFromMesh(Direct3dRMMesh mesh,
        Direct3dRMLight direct3dRMLight, float px, float py, float pz,
        float nx, float ny, float nz);
</FONT></PRE>
<P><P>Creates a shadow by using the specified mesh and light, projecting the shadow onto the specified plane. The shadow is a visual that should be added to the frame that contains the visual. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMVisual.htm">Direct3dRMVisual</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>mesh</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMMesh.htm">Direct3dRMMesh</A> object that is casting the shadow. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMLight.htm">Direct3dRMLight</A> object that is the light source. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>px</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>py</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the normal to the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ny</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the normal to the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the normal to the plane that the shadow is to be projected on. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011300">createShadowFromMeshBuilder</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMVisual createShadowFromMeshBuilder(
        Direct3dRMMeshBuilder mb, Direct3dRMLight l, float px, float py,
        float pz, float nx, float ny, float nz);
</FONT></PRE>
<P><P>Creates a shadow by using the specified mesh builder and light, projecting the shadow onto the specified plane. The shadow is a visual that should be added to the frame that contains the visual. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMVisual.htm">Direct3dRMVisual</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object that is casting the shadow. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMLight.htm">Direct3dRMLight</A> object that is the light source. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>px</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>py</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the normal to the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ny</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the normal to the plane that the shadow is to be projected on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the normal to the plane that the shadow is to be projected on. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011400">createTexture</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMTexture createTexture(D3dRMImage image, byte[] buffer1,
        byte[] pal);
</FONT></PRE>
<P><P>Creates a texture from an image in memory. 
<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>image</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <B>Direct3dRMImage</B> object describing the source for the texture. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>buffer1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image buffer. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pal</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image palette. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The memory associated with the image is used each time the texture is rendered (rather than the memory being copied into Direct3dRM's buffers). This allows the image to be used both as a rendering target and as a texture. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011500">createTextureFromSurface</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMTexture createTextureFromSurface(DirectDrawSurface ddS);
</FONT></PRE>
<P><P>Creates a texture from a specified DirectDraw surface. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ddS</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="DirectDrawSurface.htm">DirectDrawSurface</A> object containing the texture. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011600">createUserVisual</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMUserVisual createUserVisual(IUserVisualCallback fn,
        IUnknown Arg);
</FONT></PRE>
<P><P>Creates an application-defined visual object, which can then be added to a scene and rendered by using an application-defined handler. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMUserVisual.htm">Direct3dRMUserVisual</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fn</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A callback interface containing the application-defined callback function. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Arg</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application-defined data passed to the callback function. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011700">createViewport</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMViewport createViewport(Direct3dRMDevice dev,
        Direct3dRMFrame fr, int l, int t, int w, int h);
</FONT></PRE>
<P><P>Creates a viewport on a device with device coordinates (<I>xPos</I>, <I>yPos</I>) to (<I>xPos</I> + <I>width</I>, <I>yPos</I> + <I>height</I>). 
<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMViewport.htm">Direct3dRMViewport</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dev</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The device that the viewport is to be created on. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The frame that describes the position and direction of the view. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the upper-left corner of the viewport, in device coordinates. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>t</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the upper-left corner of the viewport, in device coordinates. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>w</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Width of the viewport, in device coordinates. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>h</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Height of the viewport, in device coordinates. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The viewport displays objects in the scene that contains the camera, with the view direction and up vector taken from the camera. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011800">createWrap</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMWrap createWrap(int t, Direct3dRMFrame f, float ox,
        float oy, float oz, float dx, float dy, float dz, float ux,
        float uy, float uz, float ou, float ov, float su, float sv);
</FONT></PRE>
<P><P>Creates a wrapping function that can be used to assign texture coordinates to faces and meshes. The vector [<I>ox oy oz</I>] gives the origin of the wrap, [<I>dx dy dz</I>] gives its z-axis, and [<I>ux uy uz</I>] gives its y-axis. The 2D vectors [<I>ou ov</I>] and [<I>su sv</I>] give an origin and scale factor in the texture applied to the result of the wrapping function. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMWrap.htm">Direct3dRMWrap</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>t</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One value of the <A HREF="DirectXConstants.htm">D3DRMWRAP_</A> type. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The reference frame for the wrap. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ox</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the wrap's origin. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the wrap's origin. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the wrap's origin 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the z-axis of the wrap. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the z-axis of the wrap. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the z-axis of the wrap. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ux</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the y-axis of the wrap. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>uy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the y-axis of the wrap. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>uz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the y-axis of the wrap. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ou</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Origin in the texture. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ov</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Origin in the texture. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>su</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Scale factor in the texture. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sv</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Scale factor in the texture. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011900">enumerateObjects</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void enumerateObjects(IEnumerateObjectsCallback fn, IUnknown pArgs);
</FONT></PRE>
<P><P>Calls the callback function specified by the <I>fn</I> parameter on each of the active Direct3dRM objects. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fn</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A callback interface that contains an application-defined callback function to be called with each <A HREF="Direct3dRMObject.htm">Direct3dRMObject</A> object and the application-defined argument. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pArgs</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application-defined data passed to the callback function. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011a00">getDevices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMDeviceArray getDevices();
</FONT></PRE>
<P><P>Returns all the Direct3dRM devices that have been created in the system. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMDeviceArray.htm">Direct3dRMDeviceArray</A> object if successful; otherwise, null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011b00">getNamedObject</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMObject getNamedObject(String name);
</FONT></PRE>
<P><P>Retrieves a <A HREF="Direct3dRMObject.htm">Direct3dRMObject</A> object, given its name. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMObject.htm">Direct3dRMObject</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the object to be searched for. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011c00">getSearchPath</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getSearchPath();
</FONT></PRE>
<P><P>Returns the current file search path. 

<P><B>Return Value:</B> <P>Returns a string specifying the search path. 

<P><B>See Also:</B> <A HREF="Direct3dRM.htm#com_0003000625012200">setSearchPath</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011d00">loadFromFileByPos</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void loadFromFileByPos(String fnam, int[] id, _Guid g, int cnt,
        int options, ILoadCallback fn1, int[] arg1,
        ILoadTextureCallback fn2, int[] arg2, Direct3dRMFrame f);
</FONT></PRE>
<P><P>Loads an object. This method enables you to inspect an X file and decide what object to load, using the <A HREF="ILoadCallback.htm">ILoadCallback</A> interface. 
<P>The following example shows how this method can be used. 
<PRE><FONT FACE="Courier" SIZE="2">//Indicate what type of objects will be sent to the callback.

IID_IDirect3DRMFrame.set(0xeb16cb03, (short)0xd271,(short) 0x11ce,
 (byte)0xac, (byte)0x48, (byte)0x0,(byte) 0x0,(byte) 0xc0, (byte)0x38,
 (byte)0x25, (byte)0xa1);
IID_IDirect3DRMMeshBuilder.set(0xa3a80d02, (short)0x6e12, (short)0x11cf,
 (byte)0xac, (byte)0x4a, (byte)0x0, (byte)0x0, (byte)0xc0, (byte)0x38,
 (byte)0x25, (byte)0xa1);
IID_IDirect3DRMAnimationSet.set(0xeb16cb0e, (short)0xd271,(short) 0x11ce,
 (byte)0xac, (byte)0x48, (byte)0x0, (byte)0x0, (byte)0xc0, (byte)0x38,
 (byte)0x25, (byte)0xa1);

// If you use 0, you will retrieve all objects.
d3drm.loadFromFileByPos(sFile, 
    null, IID_IDirect3DRMFrame, 1,
    D3DRM_LOADFROMFILE, this,
    null, this,
    null, f_env);

public void callbackLoad(Direct3dRMObject obj, _Guid id, IUnknown Arg)
{&#009;
    String sType=obj.getClassName();
    if (sType.equals("Frame"))
    {
         Direct3dRMFrame f=obj.getd3drmFrame();&#009;&#009; 
         f_env.addChild(f);
    }
    if (sType.equals("Builder"))
    {&#009;&#009;&#009;&#009;
         Direct3dRMMeshBuilder m=obj.getd3drmMeshBuilder();
         System.out.println("OK to convert");
         f_env.addVisualMeshBuilder(m);
    }
}
// other callbacks ...
</FONT></PRE>
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fnam</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file that the object is loaded from. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>id</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object position. The value of the first variable in the array gives the object's order in the file. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The interface identifier to be loaded. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cnt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of identifiers specified in the <I>g</I> parameter. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>options</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A load options type. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fn1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The callback interface that contains a load callback function called when the system reads the specified object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>arg1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application-defined data passed to the load callback function. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fn2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The callback interface that contains a load texture callback function called to load any textures used by an object that require special formatting. This parameter can be null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>arg2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application-defined data passed to the load texture callback function. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A parent frame. This information is useful when loading <A HREF="Direct3dRMAnimationSet.htm">Direct3dRMAnimationSet</A> or <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> objects because otherwise, these objects would be created with a null parent. This value can be null. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011e00">loadTexture</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMTexture loadTexture(String name);
</FONT></PRE>
<P><P>Loads a texture from the specified file. This texture can have 8, 24, or 32 bits-per-pixel, and it should be in either the Windows bitmap (.bmp) or Portable Pixmap (.ppm) P6 format. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the required .bmp or .ppm file. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625011f00">loadTextureFromResource</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMTexture loadTextureFromResource(int hnd);
</FONT></PRE>
<P><P>Loads a texture from a specified resource. Because it is difficult to obtain resource handles, this method is rarely used in Java. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hnd</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Handle of the resource. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012000">setDefaultTextureColors</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setDefaultTextureColors(int ds);
</FONT></PRE>
<P><P>Sets the default colors to be used for a <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ds</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Number of colors. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method affects texture colors only when it is called before the <A HREF="Direct3dRM.htm#com_0003000625011400">createTexture</A> method; it has no effect on textures that have already been created. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012100">setDefaultTextureShades</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setDefaultTextureShades(int ds);
</FONT></PRE>
<P><P>Sets the default shades to be used for an <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ds</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of shades. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method affects texture shades only when it is called before the <A HREF="Direct3dRM.htm#com_0003000625011400">createTexture</A> method; it has no effect on textures that have already been created. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012200">setSearchPath</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSearchPath(String name);
</FONT></PRE>
<P><P>Sets the current file search path from a list of directories. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A string specifying the path to set as the current search path. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The default search path is taken from the value of the <B>D3DPATH</B> environment variable. If this is not set, the search path will be empty. When opening a file, the system first looks for the file in the current working directory, and then checks every directory in the search path. 
<P><B>See Also:</B> <A HREF="Direct3dRM.htm#com_0003000625011c00">getSearchPath</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012300">tick</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void tick(float val);
</FONT></PRE>
<P><P>Performs the Direct3dRM system heartbeat. When this method is called, the positions of all moving frames are updated according to their current motion attributes, the scene is rendered to the current device, and relevant callback functions are called at their appropriate times. Control is returned when the rendering cycle is complete. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The velocity and rotation step for the <A HREF="Direct3dRMFrame.htm#com_000300062d013800">setRotation</A> and <A HREF="Direct3dRMFrame.htm#com_000300062d014400">setVelocity</A> methods. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>You can implement this method by using other Retained-Mode methods to allow more flexibility in rendering a scene. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012400">vectorAdd</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void vectorAdd(D3dVector lpd, D3dVector lps1, D3dVector lps2);
</FONT></PRE>
<P><P>Calculates the sum of two vectors. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpd</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that receives the sum of <I>lps1</I> and <I>lps2</I>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lps1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains a vector. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lps2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains a vector. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012500">vectorCrossProduct</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void vectorCrossProduct(D3dvector lpd, D3dvector lps1,
        D3dvector lps2);
</FONT></PRE>
<P><P>Calculates the cross-product of two vectors. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpd</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that receives the cross product. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lps1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains a vector. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lps2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains a vector. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012600">vectorDotProduct</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public float vectorDotProduct(D3dVector lps1, D3dVector lps2);
</FONT></PRE>
<P><P>Calculates the dot-product of two vectors. 

<P><B>Return Value:</B> <P>Returns the result of the operation. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lps1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains a vector. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lps2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains a vector. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012700">vectorModulus</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public float vectorModulus(D3dVector d);
</FONT></PRE>
<P><P>Calculates the modulus of a vector. 

<P><B>Return Value:</B> <P>Returns a float that is the remainder of the modulus operation. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>d</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The vector to mod. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012800">vectorNormalise</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void vectorNormalise(D3dvector d);
</FONT></PRE>
<P><P>Normalizes a vector. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>d</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains the vector to normalize. This object also receives the normalized vector. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012900">vectorRandom</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void vectorRandom(D3dVector d);
</FONT></PRE>
<P><P>Randomizes a vector. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>d</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains the vector to randomize. This object also receives the randomized vector. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012a00">vectorReflect</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void vectorReflect(D3dVector lpd, D3dVector lpRay, D3dVector lpNorm);
</FONT></PRE>
<P><P>Reflects a vector, given a vector ray and a vector normal. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpd</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The resulting <A HREF="D3dVector.htm">D3dVector</A> from the operation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpRay</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> ray. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpNorm</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> normal. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012b00">vectorRotate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void vectorRotate(D3dVector lpr, D3dVector lpv, D3dVector lpaxis,
        float theta);
</FONT></PRE>
<P><P>Rotates a vector, given a ray, vector, axis, and amount to rotate. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> ray. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpv</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> vector. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpaxis</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> axis. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>theta</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The amount to rotate the vector (in radians). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012c00">vectorScale</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void vectorScale(D3dVector lpd, D3dVector lps, float factor);
</FONT></PRE>
<P><P>Scales one vector to another by a specified factor. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpd</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that receives the result of the scaling operation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains the source vector. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>The</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">factor to scale <I>lps</I> by. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000625012d00">vectorSubtract</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void vectorSubtract(D3dVector lpd, D3dVector lps1, D3dVector lps2);
</FONT></PRE>
<P><P>Subtracts one vector from another. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lpd</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that receives the result of the subtraction. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lps1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains a vector. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lps2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains a vector. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
