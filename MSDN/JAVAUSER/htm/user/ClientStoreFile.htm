<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class ClientStoreFile</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="ClientStoreFile.htm#com_0003000a04010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="ClientStoreFile.htm#com_0003000a04020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="ClientStore.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ics.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.io.clientstorage</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class ClientStoreFile</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class ClientStoreFile extends <B>File</B>
{
  // Constructors
  public <A HREF="ClientStoreFile.htm#com_0003000a04010100">ClientStoreFile</A> (String stgfilename) throws IOException;
  public <A HREF="ClientStoreFile.htm#com_0003000a04010200">ClientStoreFile</A> (ClientStore store,
        String stgfilename) throws IOException;
  public <A HREF="ClientStoreFile.htm#com_0003000a04010300">ClientStoreFile</A> (String stgfilename, int flags)
        throws IOException;
  public <A HREF="ClientStoreFile.htm#com_0003000a04010400">ClientStoreFile</A> (ClientStore store, String stgfilename,
        int flags) throws IOException;

  // Methods
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04020100">canRead</A> ();
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04020200">canWrite</A> ();
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04020300">delete</A> ();
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04020400">equals</A> (Object obj);
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04020500">exists</A> ();
  public String <A HREF="ClientStoreFile.htm#com_0003000a04020600">getAbsolutePath</A>();
  public String <A HREF="ClientStoreFile.htm#com_0003000a04020700">getCanonicalPath</A>() throws IOException;
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04020800">isAbsolute</A> ();
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04020900">isDirectory</A> ();
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04020a00">isFile</A> ();
  public long <A HREF="ClientStoreFile.htm#com_0003000a04020b00">lastModified</A> ();
  public long <A HREF="ClientStoreFile.htm#com_0003000a04020c00">length</A> ();
  public String[] <A HREF="ClientStoreFile.htm#com_0003000a04020d00">list</A> ();
  public String[] <A HREF="ClientStoreFile.htm#com_0003000a04020e00">list</A> (FilenameFilter filter);
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04020f00">mkdir</A> ();
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04021000">mkdirs</A> ();
  public InputStream <A HREF="ClientStoreFile.htm#com_0003000a04021100">openInputStream</A> () throws IOException;
  public OutputStream <A HREF="ClientStoreFile.htm#com_0003000a04021200">openOutputStream</A> () throws IOException;
  public OutputStream <A HREF="ClientStoreFile.htm#com_0003000a04021300">openOutputStream</A> (boolean append)
        throws IOException;
  public RandomAccessFile <A HREF="ClientStoreFile.htm#com_0003000a04021400">openRandom</A> () throws IOException;
  public RandomAccessFile <A HREF="ClientStoreFile.htm#com_0003000a04021500">openRandom</A> (boolean writable)
        throws IOException;
  public boolean <A HREF="ClientStoreFile.htm#com_0003000a04021600">renameTo</A> (File dest);
}
</FONT></PRE>
<P>This class manages and provides access to individual files within client stores. Using the methods in this class, you can delete a file, rename it, make a directory for it, determine whether you can read from the file, get the absolute or canonical path for the file, and retrieve other file characteristics. 
<P>This class extends the <B>java.io.File</B> class and uses the <B>java.io.File.getPath</B> method to retrieve the pathfor the <B>ClientStoreFile</B> object. 

<PRE><FONT FACE="Courier" SIZE="2"><B>File</B>
  |
  +--<B>ClientStoreFile</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003000a04010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000a04010100">ClientStoreFile</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public ClientStoreFile (String stgfilename) throws IOException;
</FONT></PRE>
<P><P>Creates a <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object from the specified filename. 

<P><B>Return Value:</B> <P>Returns the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object that represents the specified file. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>stgfilename</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if there is an I/O error. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04010200">ClientStoreFile</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public ClientStoreFile (ClientStore store, String stgfilename)
        throws IOException;
</FONT></PRE>
<P><P>Creates a <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object from the filename and the <A HREF="ClientStore.htm">ClientStore</A> object that the file is located in. 

<P><B>Return Value:</B> <P>Returns the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object representing the file that is located in the client store. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>store</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The client store that contains the specified file. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>stgfilename</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if there is an I/O error. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04010300">ClientStoreFile</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public ClientStoreFile (String stgfilename, int flags) throws IOException;
</FONT></PRE>
<P><P>Creates a <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object from the filename and any specified file flags. 

<P><B>Return Value:</B> <P>Returns the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object representing the file that is located in the client store. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>stgfilename</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flags that can be used with any of the file operations in this class. They can be any combination of the following: 
<UL><LI><A HREF="ClientStore.htm#com_0003000a03020006">OPEN_FL_SHARED</A> 
<LI><A HREF="ClientStore.htm#com_0003000a03020009">STORE_FL_ROAMING</A> 
<LI><A HREF="ClientStore.htm#com_0003000a03020004">OPEN_FL_APPEND</A> 
<LI><A HREF="ClientStore.htm#com_0003000a03020005">OPEN_FL_EXPENDABLE</A> 
<LI><A HREF="ClientStore.htm#com_0003000a03020007">OPEN_FL_WRITABLE</A> 
<LI><A HREF="ClientStore.htm#com_0003000a03020008">STORE_FL_LOCAL</A> 
</UL>
</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if there is an I/O error. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04010400">ClientStoreFile</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public ClientStoreFile (ClientStore store, String stgfilename,
        int flags) throws IOException;
</FONT></PRE>
<P><P>Creates a <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object from the filename, the <A HREF="ClientStore.htm">ClientStore</A> object that the file is located in, and any specified file flags. 

<P><B>Return Value:</B> <P>Returns the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object representing the file that is located in the client store. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>store</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The client store that contains the specified file. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>stgfilename</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flags that can be used with any of the file operations in this class. They can be any combination of the following: 
<UL><LI><A HREF="ClientStore.htm#com_0003000a03020006">OPEN_FL_SHARED</A> 
<LI><A HREF="ClientStore.htm#com_0003000a03020009">STORE_FL_ROAMING</A> 
<LI><A HREF="ClientStore.htm#com_0003000a03020004">OPEN_FL_APPEND</A> 
<LI><A HREF="ClientStore.htm#com_0003000a03020005">OPEN_FL_EXPENDABLE</A> 
<LI><A HREF="ClientStore.htm#com_0003000a03020007">OPEN_FL_WRITABLE</A> 
<LI><A HREF="ClientStore.htm#com_0003000a03020008">STORE_FL_LOCAL</A> 
</UL>
</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if there is an I/O error. 


</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000a04020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000a04020100">canRead</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean canRead ();
</FONT></PRE>
<P><P>Determines whether the application can read from the specified file. 

<P><B>Return Value:</B> <P>Returns true if the file specified by this object exists and the application can read the file; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020200">canWrite</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean canWrite ();
</FONT></PRE>
<P><P>Determines whether the application can write to this file. 

<P><B>Return Value:</B> <P>Returns true if the application is allowed to write to the file whose name is specified by this object; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020300">delete</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean delete ();
</FONT></PRE>
<P><P>Deletes the file specified by the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object. 

<P><B>Return Value:</B> <P>Returns true if the file is successfully deleted; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020400">equals</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean equals (Object obj);
</FONT></PRE>
<P><P>Determines whether this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> instance is equal to another object. 

<P><B>Return Value:</B> <P>Returns false if <I>obj</I> is not an instance of <A HREF="ClientStoreFile.htm">ClientStoreFile</A> or if the file specified by this instance is not identical to the object specified by <I>obj</I>; otherwise, returns true. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>obj</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object that the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> instance is being compared with. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020500">exists</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean exists ();
</FONT></PRE>
<P><P>Determines whether this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object exists. 

<P><B>Return Value:</B> <P>Returns true if the file specified by this object exists; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020600">getAbsolutePath</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getAbsolutePath();
</FONT></PRE>
<P><P>Retrieves the absolute path of the file represented by this object. 
<P><B>Return Value:</B> <P>Returns an absolute path for this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object. 

<P><B>Remarks:</B> <P>If the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object represents an absolute path, this method returns the path. Otherwise, it returns a path that is a concatenation of the current storage directory, the separator character, and the path of this file object. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020700">getCanonicalPath</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getCanonicalPath() throws IOException;
</FONT></PRE>
<P><P>Retrieves the canonical form of this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object's path. The precise definition of the canonical form is system-dependent, but it usually specifies an absolute path in which all relative references and references to the current user directory have been completely resolved. The canonical form of a path of a nonexistent file cannot be defined. 

<P><B>Return Value:</B> <P>Returns the canonical form of the object's path. 

<P><B>Exceptions:</B> <P><B>IOException</B>
 if an I/O error occurs. Errors are possible because the construction of the canonical path may require file system queries. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020800">isAbsolute</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isAbsolute ();
</FONT></PRE>
<P><P>Determines whether the file represented by this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object is an absolute path. 
<P><B>Return Value:</B> <P>Returns true if the path indicated by the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object is an absolute path; otherwise, returns false. 

<P><B>Remarks:</B> <P>The definition of an absolute pathname is system dependent. For example, on UNIX, a pathname is absolute if its first character is the separator character. On Microsoft&#174; Windows&#174; platforms, a pathname is absolute if its first character is an ASCII '&#092;' or '/', or if it begins with a letter followed by a colon. This method uses the <B>java.io.File.separator</B> field to retrieve the separator for the file system. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020900">isDirectory</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isDirectory ();
</FONT></PRE>
<P><P>Determines whether the file represented by this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object is a directory. 

<P><B>Return Value:</B> <P>Returns true if this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object exists and is a directory; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020a00">isFile</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isFile ();
</FONT></PRE>
<P><P>Determines whether the file represented by this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object is a "normal" file. A file is normal if it is not a directory and, in addition, satisfies other system-dependent criteria. Any non-directory file created by a Java application is guaranteed to be a normal file. 

<P><B>Return Value:</B> <P>Returns true if the file specified by this object exists and is a normal file; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020b00">lastModified</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public long lastModified ();
</FONT></PRE>
<P><P>Retrieves the time that the file represented by this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object was last modified. 
<P><B>Caution</B>  The return value is system dependent and should only be used to compare with other values returned by <B>lastModified</B>. It should not be interpreted as an absolute time. 
<P><B>Return Value:</B> <P>Returns the time the file specified by this object was last modified, or 0L if the specified file does not exist. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020c00">length</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public long length ();
</FONT></PRE>
<P><P>Retrieves the length of the file represented by this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object. 

<P><B>Return Value:</B> <P>Returns the length, in bytes, of the file specified by this object, or 0L if the specified file does not exist. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020d00">list</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String[] list ();
</FONT></PRE>
<P><P>Returns a list of the files in the directory specified by the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object. 

<P><B>Return Value:</B> <P>Returns an array that contains the names of files in the specified directory. This list does not include the current directory or the parent directory ("." and ".." on Unix systems). 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020e00">list</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String[] list (FilenameFilter filter);
</FONT></PRE>
<P><P>Retrieves a list of files that satisfy the specified filter and that are located in the directory specified by the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object. The <I>filter</I> parameter, which is an instance of a class that implements the <B>java.io.FilenameFilter</B> interface, indicates the properties that the file must have to be included in the returned list of files. 

<P><B>Return Value:</B> <P>Returns an array that contains the names of files in the specified directory. This list does not include the current directory or the parent directory ("." and ".." on Unix systems). 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>filter</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A filename filter. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04020f00">mkdir</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mkdir ();
</FONT></PRE>
<P><P>Creates a directory whose path is specified by the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object. 

<P><B>Return Value:</B> <P>Returns true if the directory could be created; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04021000">mkdirs</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mkdirs ();
</FONT></PRE>
<P><P>Creates a directory whose path is specified by the <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object, including any necessary parent directories. 

<P><B>Return Value:</B> <P>Returns true if the directory (or directories) could be created; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04021100">openInputStream</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public InputStream openInputStream () throws IOException;
</FONT></PRE>
<P><P>Opens an input stream to the file. 

<P><B>Return Value:</B> <P>Returns the <B>InputStream</B> that is open for reading. 

<P><B>Exceptions:</B> <P><B>IOException</B>
 if the file could not be created or truncated. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04021200">openOutputStream</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public OutputStream openOutputStream () throws IOException;
</FONT></PRE>
<P><P>Opens an output stream to the file. 

<P><B>Return Value:</B> <P>Returns the <B>OutputStream</B> that is open for writing. 

<P><B>Exceptions:</B> <P><B>IOException</B>
 if the file could not be created or truncated. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04021300">openOutputStream</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public OutputStream openOutputStream (boolean append) throws IOException;
</FONT></PRE>
<P><P>Opens an output stream to the file, optionally appending to an existing file. 

<P><B>Return Value:</B> <P>Returns the output stream that is open for writing. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>append</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value that determines whether to append to an existing file. If true, this method appends to an existing file; otherwise, it truncates an existing file. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if the file could not be created or truncated. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04021400">openRandom</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public RandomAccessFile openRandom () throws IOException;
</FONT></PRE>
<P><P>Opens a <B>RandomAccessFile</B> from the store for read operations, with no specified flags. 

<P><B>Return Value:</B> <P>Returns the <B>RandomAccessFile</B> that is opened. 

<P><B>Exceptions:</B> <P><B>IOException</B>
 if the method fails to open the specified file. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04021500">openRandom</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public RandomAccessFile openRandom (boolean writable) throws IOException;
</FONT></PRE>
<P><P>Opens a <B>RandomAccessFile</B> from the store for read or write operations, with no specified flags. 

<P><B>Return Value:</B> <P>Returns the <B>RandomAccessFile</B> that is opened. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>writable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Set this value to true if the file should be opened as <A HREF="ClientStore.htm#com_0003000a03020007">OPEN_FL_WRITABLE</A>; otherwise, set <I>writable</I> to false. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if the method fails to open the specified file. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000a04021600">renameTo</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean renameTo (File dest);
</FONT></PRE>
<P><P>Renames the file specified by this <A HREF="ClientStoreFile.htm">ClientStoreFile</A> object to have the path given by the <B>File</B> argument. 

<P><B>Return Value:</B> <P>Returns true if the renaming succeeds; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dest</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new filename. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
