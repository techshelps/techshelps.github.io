<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About com.ms.security.permissions</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="def_secp.htm#commssecuritypermissions_ovr_0003000e01010000">Permission Objects</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="def_secp.htm#commssecuritypermissions_ovr_0003000e01020000">ISecurityRequest Objects</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="def_secp.htm#commssecuritypermissions_ovr_0003000e01030000">Using ISecurityRequest Objects to Perform Security Checks</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="def_secp.htm#commssecuritypermissions_ovr_0003000e01040000">Implementing a Custom Permission</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="def_secp.htm#commssecuritypermissions_0003000e01050000">Classes</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="def_secp.htm#commssecuritypermissions_0003000e01060000">Hierarchy</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="def_pack.htm"><IMG SRC="art/homenrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Packages"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="ClientStoragePermission.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.security.permissions</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Packages</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">About com.ms.security.permissions</H2>
<P>The <A HREF="def_secp.htm">com.ms.security.permissions</A> package contains classes used to represent two types of objects: permission objects and <A HREF="ISecurityRequest.htm">ISecurityRequest</A> objects. 

<H3 STYLE="color:#333366"><A NAME="commssecuritypermissions_ovr_0003000e01010000">Permission Objects</A></H3><P>A permission object is an object that specifies a set of rights that can be associated with a class. Classes that represent permission objects must implement the <A HREF="IPermission.htm">IPermission</A> interface. The <A HREF="def_secp.htm">com.ms.security.permissions</A> package supplies several classes that represent permission objects. Each of these classes controls the ability to perform certain operations, as described in the following table. 
<BR><BR>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Permission Class </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Operations Controlled
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="ClientStoragePermission.htm">ClientStoragePermission</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls access to client-side storage. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="ExecutionPermission.htm">ExecutionPermission</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the ability to run other programs. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FileIOPermission.htm">FileIOPermission</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the ability to read, write, and delete files.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="MultimediaPermission.htm">MultimediaPermission</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls access to enhanced multimedia functionality. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="NetIOPermission.htm">NetIOPermission</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the ability to perform networking operations.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="PrintingPermission.htm">PrintingPermission</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the ability to print. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="PropertyPermission.htm">PropertyPermission</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the ability to access and manipulate global system properties. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="ReflectionPermission.htm">ReflectionPermission</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the ability to perform reflection operations. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="RegistryPermission.htm">RegistryPermission</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the ability to access the registry. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SecurityPermission.htm">SecurityPermission</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls access to the <B>java.lang.security</B> package. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SystemStreamsPermission.htm">SystemStreamsPermission</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the ability to change the values of system streams.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="ThreadPermission.htm">ThreadPermission</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the ability to create and manipulate threads and thread groups. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIPermission.htm">UIPermission</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls access to enhanced user interface functionality. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UserFileIOPermission.htm">UserFileIOPermission</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the ability to perform user-directed file I/O. 
</FONT></TD>
</TR>
</TABLE>
<P>To associate a group of permission objects with a class, you would bundle the objects together in a set (either a <A HREF="PermissionDataSet.htm">PermissionDataSet</A> or a <A HREF="PermissionSet.htm">PermissionSet</A>) and then use <A HREF="SecurityClassLoader.htm">SecurityClassLoader</A> methods to associate the set of permissions with a particular class. The security system for the Microsoft Win32 VM for Java can then examine the permissions associated with the classes on the call stack to determine which permissions are allowed in a particular context. To see an example that creates a set of permissions, puts them in a <B>PermissionSet</B>, and then associates the <B>PermissionSet</B> with a class, see the <A HREF="def_psec.htm#commssecurity_ovr_0003000d01020000">Examples</A> section of the <A HREF="def_psec.htm">com.ms.security</A> overview. 


<H3 STYLE="color:#333366"><A NAME="commssecuritypermissions_ovr_0003000e01020000">ISecurityRequest Objects</A></H3><P>An <A HREF="ISecurityRequest.htm">ISecurityRequest</A> object is an instance of a class that implements the <B>ISecurityRequest</B> interface. The <A HREF="def_secp.htm">com.ms.security.permissions</A> package supplies classes that implement the <B>ISecurityRequest</B> interface. These classes represent objects that have two purposes: they identify a permission type and they also represent the parameters relevant to the permission type. The following table lists each of these classes along with the permission type that each class identifies.
<BR><BR>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Class </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Permission Type
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="ExecutionRequest.htm">ExecutionRequest</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PermissionID.<A HREF="PermissionID.htm#com_0003000d05020002">EXEC</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FileIORequest.htm">FileIORequest</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PermissionID.<A HREF="PermissionID.htm#com_0003000d05020003">FILEIO</A> 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="NetIORequest.htm">NetIORequest</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PermissionID.<A HREF="PermissionID.htm#com_0003000d05020005">NETIO</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="PropertyAccessRequest.htm">PropertyAccessRequest</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PermissionID.<A HREF="PermissionID.htm#com_0003000d05020007">PROPERTY</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="ReflectionRequest.htm">ReflectionRequest</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PermissionID.<A HREF="PermissionID.htm#com_0003000d05020008">REFLECTION</A> 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="RegistryRequest.htm">RegistryRequest</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PermissionID.<A HREF="PermissionID.htm#com_0003000d05020009">REGISTRY</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIAccessRequest.htm">UIAccessRequest</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PermissionID.<A HREF="PermissionID.htm#com_0003000d0502000e">UI</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UserFileIOAccess.htm">UserFileIOAccess</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PermissionID.<A HREF="PermissionID.htm#com_0003000d0502000f">USERFILEIO</A> 
</FONT></TD>
</TR>
</TABLE>
<P>Instances of classes that implement <A HREF="ISecurityRequest.htm">ISecurityRequest</A> are passed to <A HREF="PolicyEngine.htm#com_0003000d09011200">PolicyEngine.checkPermission(ISecurityRequest)</A> methods to do security checks for their respective permission types. An <B>ISecurityRequest</B> object contains parameters that are passed to the permission's check method. For example, to check for the registry permission, you should create and pass a <A HREF="RegistryRequest.htm">RegistryRequest</A> object to the <B>PolicyEngine.checkPermission(ISecurityRequest)</B> method. The parameters specified by the <B>RegistryRequest</B> object will be passed on to the RegistryPermission.<A HREF="RegistryPermission.htm#com_0003000e0f020100">check</A> method.

<H3 STYLE="color:#333366"><A NAME="commssecuritypermissions_ovr_0003000e01030000">Using ISecurityRequest Objects to Perform Security Checks</A></H3><P>To perform a non-parameterized security check such as a check for <A HREF="PrintingPermission.htm">PrintingPermission</A>, you would simply call the <A HREF="PolicyEngine.htm#com_0003000d09010e00">PolicyEngine.checkPermission(PermissionID)</A> method, as in the following example.
<PRE><FONT FACE="Courier" SIZE="2">
// Check to see that all of your 
// callers have the rights to print.
PolicyEngine.checkPermission(PermissionID.PRINTING);
</FONT></PRE>
<P>To perform a parameterized security check, you must past a security request object of the correct type to the <A HREF="PolicyEngine.htm">PolicyEngine.checkPermission</A> method. If the permission being checked is one of the permissions that has a corresponding <A HREF="ISecurityRequest.htm">ISecurityRequest</A> object, then you should create the appropriate <B>ISecurityRequest</B> object and then pass it to the <A HREF="PolicyEngine.htm#com_0003000d09011200">PolicyEngine.checkPermission(ISecurityRequest)</A> method. The following example shows how to use a <A HREF="FileIORequest.htm">FileIORequest</A> object to perform a security check that determines whether a file called "c:\\MyFile.txt" can be deleted.
<PRE><FONT FACE="Courier" SIZE="2">
...
// Create a FileIORequest object that indicates that you 
// want to delete the file called "c:\\MyFile.txt".
FileIORequest sreq = 
   new FileIORequest(FileIORequest.DELETE,"c:\\MyFile.txt");

// Check to see that all of your callers
// have the rights to delete that file.
PolicyEngine.checkPermission(sreq);
...
</FONT></PRE>
<P>For parameterized security checks for a permission that does not have a predefined <A HREF="ISecurityRequest.htm">ISecurityRequest</A> class (such as <A HREF="ThreadPermission.htm">ThreadPermission</A>), you must pass to the <A HREF="PolicyEngine.htm">PolicyEngine.checkPermission</A> method the <A HREF="PermissionID.htm">PermissionID</A> (or the name of the permission) and an <B>Object</B> whose type depends on the type of permission being checked. For example, to check for <B>ThreadPermission</B>, you would pass PermissionID.<A HREF="PermissionID.htm#com_0003000d0502000d">THREAD</A> and an <B>Object</B> of type <B>Thread</B> or <B>ThreadGroup</B>. In general, to find out what type of <B>Object</B> to pass to the <A HREF="PolicyEngine.htm">checkPermission</A> method, consult the documentation for the <B>check</B> method of the permission you want to check.

<P>If a security check fails, a <A HREF="SecurityExceptionEx.htm">SecurityExceptionEx</A> is thrown. For more information about how security checks are implemented by the Microsoft Win32 VM for Java, see the <A HREF="PolicyEngine.htm">PolicyEngine</A> class.

<H3 STYLE="color:#333366"><A NAME="commssecuritypermissions_ovr_0003000e01040000">Implementing a Custom Permission</A></H3><P>There may be times when you want to implement your own permission class. As mentioned above, every permission class must implement the <A HREF="IPermission.htm">IPermission</A> interface. In addition, a custom permission class may need to implement the following interfaces:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="IEncodablePermission.htm">IEncodablePermission</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If instances of your custom permission class need to be encoded for storage in a digital signature, your permission class should implement the <A HREF="IEncodablePermission.htm">IEncodablePermission</A> interface. The <B>IEncodablePermission</B> interface can also be implemented to allow a user-friendly name for the class to be displayed in security dialog boxes. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="IAdjustablePermission.htm">IAdjustablePermission</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If instances of your custom permission class need to contain context information, the permission class must implement the <A HREF="IAdjustablePermission.htm">IAdjustablePermission</A> interface. 
</FONT></TD></TR></TABLE>
<P>The following code shows how to implement a custom permission class called <B>NamePermission</B> that keeps track of names that are allowed. Notice that <B>NamePermission</B> implements the mandatory <A HREF="IPermission.htm">IPermission</A> interface.
<PRE><FONT FACE="Courier" SIZE="2">package MyPackage;
import com.ms.security.*;

public class NamePermission implements IPermission
{
  String[] allowedNames;
   
  void setAllowedNames(String[] names)
  {
  // Copy the array of allowed names.
  int len = names.length;
  allowedNames = new String[len];
  System.arraycopy(names,0,allowedNames,0,len);
  }

  void check(Object request) throws SecurityException
  {
  // See if the Object is a String.
  if (!(request instanceof String) )
  throw new IllegalArgumentException("Illegal argument.");

  // See if the name is in the array of allowed names.
  for (int i= 0; i &lt; allowedNames.length; i++ )
    if (allowedNames[i].equals( (String)request ) )
      return;

  // Not in the list, so throw exception.
  throw new SecurityException("Security check failed.");
  }

  IPermission copy()
  {
  // Create a new NamePermission object. 
  NamePermission copy = new NamePermission();

  // Initialize the copy with the
  // allowed names.
  copy.setAllowedNames(allowedNames);

  return copy;
  }

  IPermission combine(IPermission other)
  {
  // See if the other permission 
  // object is of the right type.
  if(!(other instanceof NamePermission))&#009;&#009;&#009; 
     throw new IllegalArgumentException("Illegal argument.");
  
  // Create a NamePermission object.
  NamePermission comb = new NamePermission();

  // Combine the two permission objects.
  comb.allowedNames = 
    PermissionUtils.combineArraysOfStrings(this.allowedNames,
                       ((NamePermission)other).allowedNames);

  // Return the combination.
  return comb;
  }

  int compare(IPermission other)
  {
  // 
  if (!(other instanceof NamePermission))
     throw new IllegalArgumentException("Illegal argument.");

  // Return the result of comparing the names
  // allowed by the two permission objects.  
  return PermissionUtils.compareArraysOfStrings(this.allowedNames,
                            ((NamePermission)other).allowedNames);
  }
}
</FONT></PRE>
<P>You could then determine whether a particular name (such as "Pat") is allowed.
<PRE><FONT FACE="Courier" SIZE="2">// Create a security request object.
String name = "Pat";
   
// Do the security check, passing 
// in the security request object.  
PolicyEngine.checkPermission("MyPackage.NamePermission",name);
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="commssecuritypermissions_0003000e01050000">Classes</A></H3><DL>
<DT><A HREF="ClientStoragePermission.htm">Class ClientStoragePermission</A>
 </DT><DD>This class represents a permission for controlling access to client-side storage that is available through the <B>ClientStore</B> class.
</DD><DT><A HREF="ExecutionPermission.htm">Class ExecutionPermission</A>
 </DT><DD>This class represents a permission that controls the ability to run other programs.
</DD><DT><A HREF="ExecutionRequest.htm">Class ExecutionRequest</A>
 </DT><DD>This class represents a request to execute an application.
</DD><DT><A HREF="FileIOPermission.htm">Class FileIOPermission</A>
 </DT><DD>This class represents a permission that controls the ability to access files.
</DD><DT><A HREF="FileIORequest.htm">Class FileIORequest</A>
 </DT><DD>This class represents a request for access to the file system.
</DD><DT><A HREF="MultimediaPermission.htm">Class MultimediaPermission</A>
 </DT><DD>This class represents a permission that allows the use of enhanced multimedia functionality.
</DD><DT><A HREF="NetIOPermission.htm">Class NetIOPermission</A>
 </DT><DD>This class represents a permission that controls the ability to perform networking operations.
</DD><DT><A HREF="NetIORequest.htm">Class NetIORequest</A>
 </DT><DD>This class represents a request to perform a network-related action.
</DD><DT><A HREF="PrintingPermission.htm">Class PrintingPermission</A>
 </DT><DD>This class represents a permission that controls access to the printing APIs.
</DD><DT><A HREF="PropertyAccessRequest.htm">Class PropertyAccessRequest</A>
 </DT><DD>This class represents a request to access the system properties.
</DD><DT><A HREF="PropertyPermission.htm">Class PropertyPermission</A>
 </DT><DD>This class represents a permission that controls the ability to access and manipulate the global system properties.
</DD><DT><A HREF="ReflectionPermission.htm">Class ReflectionPermission</A>
 </DT><DD>This class represents a permission that controls the ability to perform reflection operations.
</DD><DT><A HREF="ReflectionRequest.htm">Class ReflectionRequest</A>
 </DT><DD>This class represents a request to use the reflection APIs to gain access to members of a specified class.
</DD><DT><A HREF="RegistryPermission.htm">Class RegistryPermission</A>
 </DT><DD>This class represents a permission that controls the ability to access the registry.
</DD><DT><A HREF="RegistryRequest.htm">Class RegistryRequest</A>
 </DT><DD>This class represents a request for access to a registry key.
</DD><DT><A HREF="SecurityPermission.htm">Class SecurityPermission</A>
 </DT><DD>This class represents a permission that controls access to the JDK security classes (the <B>java.lang.security</B> package).
</DD><DT><A HREF="SystemStreamsPermission.htm">Class SystemStreamsPermission</A>
 </DT><DD>This class represents a permission that controls the ability to change the values of the system streams <B>java.lang.System.in</B>, <B>java.lang.System.out</B>, and <B>java.lang.System.err</B>.
</DD><DT><A HREF="ThreadPermission.htm">Class ThreadPermission</A>
 </DT><DD>This class represents a permission that controls the ability to create and manipulate threads and thread groups.
</DD><DT><A HREF="UIAccessRequest.htm">Class UIAccessRequest</A>
 </DT><DD>This class represents objects that indicate a request to use an extended aspect of the user interface APIs.
</DD><DT><A HREF="UIPermission.htm">Class UIPermission</A>
 </DT><DD>This class represents a permission that controls the ability to use some of the enhanced functionality of the AWT.
</DD><DT><A HREF="UserFileIOAccess.htm">Class UserFileIOAccess</A>
 </DT><DD>This class represents a request to perform a user-directed file I/O operation.
</DD><DT><A HREF="UserFileIOPermission.htm">Class UserFileIOPermission</A>
 </DT><DD>This class represents a permission that controls the ability to perform user-directed file I/O operations using the <B>UserFileDialog</B> class.

</DD></DL>
<H3 STYLE="color:#333366"><A NAME="commssecuritypermissions_0003000e01060000">Hierarchy</A></H3><PRE><FONT FACE="Courier" SIZE="2"><B>Object</B>
  |
  +--<A HREF="ClientStoragePermission.htm">ClientStoragePermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>, <B>Cloneable</B>)
  |
  +--<A HREF="ExecutionPermission.htm">ExecutionPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>)
  |
  +--<A HREF="ExecutionRequest.htm">ExecutionRequest</A> (<A HREF="ISecurityRequest.htm">ISecurityRequest</A>)
  |
  +--<A HREF="FileIOPermission.htm">FileIOPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>, <A HREF="IAdjustablePermission.htm">IAdjustablePermission</A>)
  |
  +--<A HREF="FileIORequest.htm">FileIORequest</A> (<A HREF="ISecurityRequest.htm">ISecurityRequest</A>)
  |
  +--<A HREF="MultimediaPermission.htm">MultimediaPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>)
  |
  +--<A HREF="NetIOPermission.htm">NetIOPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>, <A HREF="IAdjustablePermission.htm">IAdjustablePermission</A>)
  |
  +--<A HREF="NetIORequest.htm">NetIORequest</A> (<A HREF="ISecurityRequest.htm">ISecurityRequest</A>)
  |
  +--<A HREF="PrintingPermission.htm">PrintingPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>)
  |
  +--<A HREF="PropertyAccessRequest.htm">PropertyAccessRequest</A> (<A HREF="ISecurityRequest.htm">ISecurityRequest</A>)
  |
  +--<A HREF="PropertyPermission.htm">PropertyPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>)
  |
  +--<A HREF="ReflectionPermission.htm">ReflectionPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>, <A HREF="IAdjustablePermission.htm">IAdjustablePermission</A>)
  |
  +--<A HREF="ReflectionRequest.htm">ReflectionRequest</A> (<A HREF="ISecurityRequest.htm">ISecurityRequest</A>)
  |
  +--<A HREF="RegistryPermission.htm">RegistryPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>)
  |
  +--<A HREF="RegistryRequest.htm">RegistryRequest</A> (<A HREF="ISecurityRequest.htm">ISecurityRequest</A>)
  |
  +--<A HREF="SecurityPermission.htm">SecurityPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>)
  |
  +--<A HREF="SystemStreamsPermission.htm">SystemStreamsPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>)
  |
  +--<A HREF="ThreadPermission.htm">ThreadPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>, <A HREF="IAdjustablePermission.htm">IAdjustablePermission</A>)
  |
  +--<A HREF="UIAccessRequest.htm">UIAccessRequest</A> (<A HREF="ISecurityRequest.htm">ISecurityRequest</A>)
  |
  +--<A HREF="UIPermission.htm">UIPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>)
  |
  +--<A HREF="UserFileIOAccess.htm">UserFileIOAccess</A> (<A HREF="ISecurityRequest.htm">ISecurityRequest</A>)
  |
  +--<A HREF="UserFileIOPermission.htm">UserFileIOPermission</A> (<A HREF="IPermission.htm">IPermission</A>, <A HREF="IEncodablePermission.htm">IEncodablePermission</A>)
</FONT></PRE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
