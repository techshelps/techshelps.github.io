<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About com.ms.object.dragdrop</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=162 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="def_oddr.htm#commsobjectdragdrop_ovr_0000000101010000">Overview</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="def_oddr.htm#commsobjectdragdrop_ovr_0000000101020000">Drag Handler Example</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="def_oddr.htm#commsobjectdragdrop_ovr_0000000101021000">Drag Session Example</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="def_oddr.htm#commsobjectdragdrop_0000000101030000">Classes</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="def_oddr.htm#commsobjectdragdrop_0000000101040000">Interfaces</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="def_oddr.htm#commsobjectdragdrop_0000000101050000">Hierarchy</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="def_pack.htm"><IMG SRC="art/homenrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Packages"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="DragHelper.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>

<TD WIDTH="355" VALIGN="right"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.object.dragdrop</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Packages</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">About com.ms.object.dragdrop</H2>
<P>This package provides classes and interfaces for implementing visual drag-and-drop operations. </P>
<H3 STYLE="color:#333366"><A NAME="commsobjectdragdrop_ovr_0000000101010000">Overview</A></H3><P>The <B>com.ms.object.dragdrop</B> package uses the transfer model defined in the <A HREF="def_obj.htm">com.ms.object</A> package, adding behavior that is specific to visual drag-and-drop operations. The basic dragdrop protocol is defined by the <A HREF="DragHandler.htm">DragHandler</A>, <A HREF="DragSession.htm">DragSession</A>, and <A HREF="DragSource.htm">DragSource</A> interfaces. The <A HREF="DragHelper.htm">DragHelper</A> and <A HREF="DragProxy.htm">DragProxy</A> classes help developers implement the dragdrop protocol for objects that are not supported by the system. <B>DragProxy</B> is a simple <B>DragHandler</B> implementation that forwards all calls to a specified <B>DragHandler</B>, with an optional offset to the drag coordinates. The <B>DragHelper</B> class implements the <B>DragHandler</B> interface and distributes <B>DragHandler</B> method calls to child handlers. 

<P>The <A HREF="DragHandler.htm">DragHandler</A> interface is implemented by recipients who want to receive drops from a drag source. This interface contains methods for notifying the recipient when the object has entered, exited, moved, or has been dropped by the user. <A HREF="DragSession.htm">DragSession</A> extends the <A HREF="TransferSession.htm">TransferSession</A> interface and adds the concepts of modifier keys and mouse state. The <B>DragSession</B> interface is generally implemented by the dragdrop implementation. To customize the behavior of a drag operation as it progresses, you can implement the <A HREF="DragSource.htm">DragSource</A> interface, which provides capabilities such as cursor control. 

<H3 STYLE="color:#333366"><A NAME="commsobjectdragdrop_ovr_0000000101020000">Drag Handler Example</A></H3><P>The following example shows how to implement a <A HREF="DragHandler.htm">DragHandler</A>. In particular, this class implements a <B>ColorTile</B> object that can receive a new color (<B>java.awt.Color</B>) by a drag-and-drop operation. 

<PRE><FONT FACE="Courier" SIZE="2">
class ColorTile extends Canvas implements DragHandler
{
   static final private Class colorClass = new Color( ).getClass( );
  
   Color color;
   Color colorHot;
   boolean hot = false;

   public ColorTile(Color c, int x, int y)
   {
      super( );
      initFromColor(c);
      reshape(16 * x + 64, 16 * y + 64, 128, 128);
   }

   private void initFromColor(Color c)
   {
      color = c.darker( );
      colorHot = c;
      hotTrack(hot);
   }

   private void hotTrack(boolean hot)
   {
      this.hot = hot; 
      
      Color c = hot? colorHot : color;
      setBackground(c);

      if (isShowing( ))
         repaint( );
   }

   public void dragEnter(DragSession session)
   {
      hotTrack(true);
   }

   public void dragLeave( )
   {
      hotTrack(false);
   }

   public int dragOver(DragSession session, int x, int y)
   {
      //Interrogate the data to see if there is a color.

      MetaObject data = session.getTransferData( );
      if ((data !=      null) &amp;&amp; data.hasObject(null, colorClass))
      {
         //There is a color. Return a value that indicates
         // that we can copy it if the source is allowing copy
         // operations.
         return session.getAvailableEffects( ) &amp; Transfer.COPY;
      }
   
      return Transfer.NONE;
   }

   public void drop(DragSession session int x, int y)
   {
       MetaObject data = session.getTransferData( );
       if (data != null)
       {
          Object object = data.getObject(null, colorClass);
          if (object instanceof Color)
             initFromColor((Color)object);
       }
    }
}
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="commsobjectdragdrop_ovr_0000000101021000">Drag Session Example</A></H3>
<P>Starting a drag session differs, depending on whether you are using AFC or AWT. Two code samples follow: the first is for AWT, and the second is for AFC.
<H4 STYLE="color:#333366">AWT Example</H4><PRE><FONT FACE="Courier" SIZE="2">import java.awt.*;
import com.ms.object.*;
import com.ms.object.dragdrop.*;
import com.ms.awt.WDragSession;

class DragMeAWT extends Canvas
{
//...
  public boolean mouseDown(Event e, int x, int y)
  {
    ObjectBag data = new ObjectBag();
    data.addObject(null, null, Color.red);
    WDragSession.beginDrag(data, Transfer.COPY | Transfer.LINK);
   
    return true;
  }
}
</FONT></PRE>

<p>
<H4 STYLE="color:#333366">AFC Example</H4><PRE><FONT FACE="Courier" SIZE="2">import com.ms.ui.*;
import com.ms.object.*;
import com.ms.object.dragdrop.*;
import java.awt.Color;

class DragMeAFC extends UICanvas
{
//...
  public boolean mouseDown(Event e, int x, int y)
  {
    ObjectBag data = new ObjectBag();
    data.addObject(null, null, Color.red);
    UIDragDrop.beginDrag(data, Transfer.COPY | Transfer.LINK);

    return true;
  }
}
</FONT></PRE>
 
 
<H3 STYLE="color:#333366"><A NAME="commsobjectdragdrop_0000000101030000">Classes</A></H3><DL>
<DT><A HREF="DragHelper.htm">Class DragHelper</A>
 </DT><DD>This class provides a default implementation for a dragdrop protocol involving a set of objects that the system does not support.
</DD><DT><A HREF="DragProxy.htm">Class DragProxy</A>
 </DT><DD>This class provides a <B>DragHandler</B> implementation that forwards calls to another specified <B>DragHandler</B>.

</DD></DL>
<H3 STYLE="color:#333366"><A NAME="commsobjectdragdrop_0000000101040000">Interfaces</A></H3><DL>
<DT><A HREF="DragHandler.htm">Interface DragHandler</A>
 </DT><DD>This interface defines methods that handle drag operations relative to other objects.
</DD><DT><A HREF="DragSession.htm">Interface DragSession</A>
 </DT><DD>This interface defines drag modifiers used with drag-and-drop operations.
</DD><DT><A HREF="DragSource.htm">Interface DragSource</A>
 </DT><DD>This interface defines constants and methods that can be used by the source object of a dragdrop data transfer session.

</DD></DL>
<H3 STYLE="color:#333366"><A NAME="commsobjectdragdrop_0000000101050000">Hierarchy</A></H3><PRE><FONT FACE="Courier" SIZE="2"><B>Object</B>
  |
  +--<A HREF="DragHelper.htm">DragHelper</A> (<A HREF="DragHandler.htm">DragHandler</A>)
  |
  +--<A HREF="DragProxy.htm">DragProxy</A> (<A HREF="DragHandler.htm">DragHandler</A>)

<A HREF="DragSource.htm">DragSource</A>
<A HREF="DragSession.htm">DragSession</A>
<A HREF="DragHandler.htm">DragHandler</A>
</FONT></PRE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
