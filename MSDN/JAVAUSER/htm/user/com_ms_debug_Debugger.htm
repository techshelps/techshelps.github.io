<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugger</TITLE>
</HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="com_ms_debug_debugger.htm#006699" ALINK="com_ms_debug_debugger.htm#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="com_ms_debug_debugger.htm#Methods">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="com_ms_debug_debugger.htm#Fields">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom">&nbsp;</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom">&nbsp;</TD><TD ALIGN="center" VALIGN="bottom">&nbsp;</TD><TD ALIGN="center" VALIGN="bottom">
&nbsp;
</TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top">&nbsp;</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">&nbsp;</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">&nbsp;</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">&nbsp;</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR>
</A><H1 STYLE="color:#333366">Class Debugger</H1>
<PRE><FONT FACE="Courier" SIZE="2">public final class Debugger
{
  // Fields
  public static final PrintStream <A HREF="com_ms_debug_debugger.htm#out">out</A>
  public static final int <A HREF="com_ms_debug_debugger.htm#EXEC_MODEL_INTERPRETED">EXEC_MODEL_INTERPRETED</A>;
  public static final int <A HREF="com_ms_debug_debugger.htm#EXEC_MODEL_NATIVE">EXEC_MODEL_NATIVE</A>;
  public static final int <A HREF="com_ms_debug_debugger.htm#EXEC_MODEL_COM">EXEC_MODEL_COM</A>;
  public static final int <A HREF="com_ms_debug_debugger.htm#EXEC_MODEL_JIT">EXEC_MODEL_JIT</A>;
  public static final int <A HREF="com_ms_debug_debugger.htm#EXEC_MODEL_FAST_INTERPRETED">EXEC_MODEL_FAST_INTERPRETED</A>;

  // Methods
  public static native void <A HREF="com_ms_debug_debugger.htm#breakpoint_0">breakpoint</A> ();
  public static native boolean <A HREF="com_ms_debug_debugger.htm#isDebugging_1">isDebugging</A> ();
  public static void <A HREF="com_ms_debug_debugger.htm#setDebugThread_2">setDebugThread</A> (Thread t, boolean candebug);
  public static void <A HREF="com_ms_debug_debugger.htm#setDebugThread_3">setDebugThread</A> (boolean candebug);
  public static boolean <A HREF="com_ms_debug_debugger.htm#isDebugThread_4">isDebugThread</A> (Thread t);
  public static boolean <A HREF="com_ms_debug_debugger.htm#isDebugThread_5">isDebugThread</A> ();
  public static native int <A HREF="com_ms_debug_debugger.htm#getExecutionModelOfCaller_6">getExecutionModelOfCaller</A> (int depth);
  public static native int <A HREF="com_ms_debug_debugger.htm#getInitialExecutionModelOfMethod_7">getInitialExecutionModelOfMethod</A> (java.lang.reflect.Method m);
  public static String <A HREF="com_ms_debug_debugger.htm#ExecutionModeltoString_8">ExecutionModeltoString</A> (int em);
  public static String <A HREF="com_ms_debug_debugger.htm#getExecutionModelStringOfCaller_9">getExecutionModelStringOfCaller</A> (int depth);
  public static String <A HREF="com_ms_debug_debugger.htm#getExecutionModelStringOfCaller_10">getExecutionModelStringOfCaller</A> ();
}
</font></pre>
<P>This class provides methods that set breakpoints and debugging states for threads.

<!-- ******************** -->
<A NAME="methods"></A><H2>Methods</H2>


<!-- * * * * * * * * * * -->
<H3><A NAME="breakpoint_0">breakpoint</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static native void <B>breakpoint</B> ();
</font></pre>
<P>Causes a breakpoint in the current process at the location of the caller of this function if a debugger is attached. 
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- * * * * * * * * * * -->
<H3><A NAME="ExecutionModeltoString_8">ExecutionModeltoString</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String <B>ExecutionModeltoString</B> (int em);
</font></pre>
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- * * * * * * * * * * -->
<H3><A NAME="getExecutionModelOfCaller_6">getExecutionModelOfCaller</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static native int <B>getExecutionModelOfCaller</B> (int depth);
</font></pre>
<P>Queries the execution model of a caller at the specified stack depth. Returns one of the EXEC_MODEL_XXX fields. 
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- * * * * * * * * * * -->
<H3><A NAME="getExecutionModelStringOfCaller_9">getExecutionModelStringOfCaller</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String <B>getExecutionModelStringOfCaller</B> (int depth);
</font></pre>
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- * * * * * * * * * * -->
<H3><A NAME="getExecutionModelStringOfCaller_10">getExecutionModelStringOfCaller</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String <B>getExecutionModelStringOfCaller</B> ();
</font></pre>
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- * * * * * * * * * * -->
<H3><A NAME="getInitialExecutionModelOfMethod_7">getInitialExecutionModelOfMethod</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static native int <B>getInitialExecutionModelOfMethod</B> (java.lang.reflect.Method m);
</font></pre>
<P>Queries the default execution model of a method. The actual execution model used may vary at any time. Returns one of the EXEC_MODEL_XXX fields. 
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- * * * * * * * * * * -->
<H3><A NAME="isDebugging_1">isDebugging</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static native boolean <B>isDebugging</B> ();
</font></pre>
<P>Determines whether a debugger is attached to the current process. 

<P><B>Return Value</B><P>Returns true if a debugger is attached. 
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- * * * * * * * * * * -->
<H3><A NAME="isDebugThread_4">isDebugThread</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static boolean <B>isDebugThread</B> (Thread t);
</font></pre>
<P>Checks the debug state of a thread. 
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- * * * * * * * * * * -->
<H3><A NAME="isDebugThread_5">isDebugThread</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static boolean <B>isDebugThread</B> ();
</font></pre>
<P>Checks the debug state of the current thread. 
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- * * * * * * * * * * -->
<H3><A NAME="setDebugThread_2">setDebugThread</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static void <B>setDebugThread</B> (Thread t, boolean candebug);
</font></pre>
<P>Marks or clears the debug state of a thread. If this is set on the thread, debug events, such as exception, breakpoints, and so on, will not trigger the debugger. This state is not re-entrant, that is, a single setDebugThread(false) will undo multiple setDebugThread(true)s. 
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- * * * * * * * * * * -->
<H3><A NAME="setDebugThread_3">setDebugThread</A></H3><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static void <B>setDebugThread</B> (boolean candebug);
</font></pre>
<P>Marks or clears the debug state of the current thread. 
</BLOCKQUOTE>
<!-- * * * * * * * * * * -->


<!-- ******************** -->
<A NAME="fields"><H2>Fields</H2>
<BLOCKQUOTE>
<DL>
<DT><B><A NAME="EXEC_MODEL_COM">EXEC_MODEL_COM</A></B>
<DD>
<DT><B><A NAME="EXEC_MODEL_FAST_INTERPRETED">EXEC_MODEL_FAST_INTERPRETED</A></B>
<DD>
<DT><B><A NAME="EXEC_MODEL_INTERPRETED">EXEC_MODEL_INTERPRETED</A></B>
<DD>
<DT><B><A NAME="EXEC_MODEL_JIT">EXEC_MODEL_JIT</A></B>
<DD>
<DT><B><A NAME="EXEC_MODEL_NATIVE">EXEC_MODEL_NATIVE</A></B>
<DD>
<DT><B><A NAME="out">out</A></B>
<DD>The out field is a stream that is redirected to a debugger, if it is attached. If not, the output is sent to a Win32 debugger through OutputDebugString. 


</DL>
</BLOCKQUOTE>
</BODY></HTML>
