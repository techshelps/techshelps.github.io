<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Direct3dRMViewport</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Direct3dRMViewport.htm#com_0003000638010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="Direct3dRMUserVisual.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A href="def_dirx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="Direct3dRMViewportArray.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.directX</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class Direct3dRMViewport</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class Direct3dRMViewport implements <A HREF="IDirect3dRMViewport.htm">IDirect3dRMViewport</A>
{
  // Methods
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638010100">clear</A>();
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638010200">configure</A>(int x, int y, int width, int height);
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638010300">forceUpdate</A>(int x1, int y1, int x2, int y2);
  public float <A HREF="Direct3dRMViewport.htm#com_0003000638010400">getBack</A>();
  public Direct3dRMFrame <A HREF="Direct3dRMViewport.htm#com_0003000638010500">getCamera</A>();
  public Direct3dRMDevice <A HREF="Direct3dRMViewport.htm#com_0003000638010600">getDevice</A>();
  public Direct3dViewport <A HREF="Direct3dRMViewport.htm#com_0003000638010700">getDirect3DViewport</A>();
  public float <A HREF="Direct3dRMViewport.htm#com_0003000638010800">getField</A>();
  public float <A HREF="Direct3dRMViewport.htm#com_0003000638010900">getFront</A>();
  public int <A HREF="Direct3dRMViewport.htm#com_0003000638010a00">getHeight</A>();
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638010b00">getPlane</A>(float[] l, float[] r, float[] b, float[] t);
  public int <A HREF="Direct3dRMViewport.htm#com_0003000638010c00">getProjection</A>();
  public int <A HREF="Direct3dRMViewport.htm#com_0003000638010d00">getUniformScaling</A>();
  public int <A HREF="Direct3dRMViewport.htm#com_0003000638010e00">getWidth</A>();
  public int <A HREF="Direct3dRMViewport.htm#com_0003000638010f00">getX</A>();
  public int <A HREF="Direct3dRMViewport.htm#com_0003000638011000">getY</A>();
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638011100">inverseTransform</A>(D3dVector d, D3dRMVector4d s);
  public Direct3dRMPickedArray <A HREF="Direct3dRMViewport.htm#com_0003000638011200">pick</A>(int x, int y);
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638011300">render</A>(Direct3dRMFrame f);
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638011400">setBack</A>(float v);
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638011500">setCamera</A>(Direct3dRMFrame f);
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638011600">setField</A>(float v);
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638011700">setFront</A>(float v);
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638011800">setPlane</A>(float left, float right, float bottom, float
        top);
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638011900">setProjection</A>(int val);
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638011a00">setUniformScaling</A>(int flag);
  public void <A HREF="Direct3dRMViewport.htm#com_0003000638011b00">transform</A>(D3dRMVector4d d, D3dVector s);
}
</FONT></PRE>
<P>Applications use the methods of the <B>Direct3dRMViewport</B> class to work with viewport objects. 
<P>The <B>Direct3dRMViewport</B> class inherits the following methods from the <A HREF="Direct3dRMObject.htm">Direct3dRMObject</A> class: 
<DL>
<DT><A HREF="Direct3dRMObject.htm">addDestroyCallback</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">duplicate</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">deleteDestroyCallback</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">getAppData</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">getClassName</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">getName</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">setAppData</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">setName</A> 
</DT></DL>
<P><B>Note</B>  This class does not provide an <B>init</B> method. Use the <A HREF="Direct3dRM.htm#com_0003000625011700">Direct3dRM.createViewport</A> method to create and initialize <B>Direct3dRMViewport</B> objects. 
<H3 STYLE="color:#333366"><A NAME="com_0003000638010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000638010100">clear</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void clear();
</FONT></PRE>
<P><P>Clears the given viewport to the current background color. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010200">configure</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void configure(int x, int y, int width, int height);
</FONT></PRE>
<P><P>Reconfigures the viewport origin and dimensions. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the new viewport position. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the new viewport position. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new width of the viewport (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new height of the viewport (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method carries out no action if <I>x</I> &#043; <I>width</I> or <I>y</I> &#043; <I>height</I> are greater than the width or height of the device, or if any of <I>x</I>, <I>y</I>, <I>width</I>, or <I>height</I> is less than zero. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010300">forceUpdate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void forceUpdate(int x1, int y1, int x2, int y2);
</FONT></PRE>
<P><P>Forces an area of the viewport to be updated. The specified area will be copied to the screen at the next call to the <A HREF="Direct3dRMDevice.htm">update</A> method. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The updated area's upper-left x coordinate. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The updated area's upper-left y coordinate. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The updated area's lower-right y coordinate. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The updated area's lower-right y coordinate. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The system might update any region that is larger than the specified rectangle, including (possibly) the entire window. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010400">getBack</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public float getBack();
</FONT></PRE>
<P><P>Retrieves the position of the viewport back clipping plane. 

<P><B>Return Value:</B> <P>Returns a value describing the position of the plane. 

<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638011400">setBack</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010500">getCamera</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMFrame getCamera();
</FONT></PRE>
<P><P>Retrieves the camera for a viewport. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object if successful; otherwise, returns null. 

<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638011500">setCamera</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010600">getDevice</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMDevice getDevice();
</FONT></PRE>
<P><P>Retrieves the device associated with a viewport. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMDevice.htm">Direct3dRMDevice</A> object if successful; otherwise, returns null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010700">getDirect3DViewport</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dViewport getDirect3DViewport();
</FONT></PRE>
<P><P>Retrieves the Microsoft&#174; Direct3D&#174; viewport corresponding to the current <A HREF="Direct3dRMViewport.htm">Direct3dRMViewport</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dViewport.htm">Direct3dViewport</A> object if successful; otherwise, returns null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010800">getField</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public float getField();
</FONT></PRE>
<P><P>Retrieves the viewport's field of view. 

<P><B>Return Value:</B> <P>Returns a value describing the viewport's field of view. 

<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638011600">setField</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010900">getFront</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public float getFront();
</FONT></PRE>
<P><P>Retrieves the position of the viewport's front clipping plane. 

<P><B>Return Value:</B> <P>Returns a value describing the position of the plane. 

<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638011700">setFront</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010a00">getHeight</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getHeight();
</FONT></PRE>
<P><P>Retrieves the height (measured in pixels) of the viewport. 

<P><B>Return Value:</B> <P>Returns the height of the viewport (in pixels). 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010b00">getPlane</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getPlane(float[] l, float[] r, float[] b, float[] t);
</FONT></PRE>
<P><P>Retrieves the dimensions of the viewport on the front clipping plane. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variables that receive the left dimensions of the viewport on the front clipping plane. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>r</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variables that receive the right dimensions of the viewport on the front clipping plane. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>b</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variables that receive the bottom dimensions of the viewport on the front clipping plane. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>t</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variables that receive the top dimensions of the viewport on the front clipping plane. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638011800">setPlane</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010c00">getProjection</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getProjection();
</FONT></PRE>
<P><P>Retrieves the viewport's projection type. A viewport can use either orthographic or perspective projection. 

<P><B>Return Value:</B> <P>Returns a projection type value. 

<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638011900">setProjection</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010d00">getUniformScaling</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getUniformScaling();
</FONT></PRE>
<P><P>Retrieves the scaling property used to scale the viewing volume into the larger dimension of the window. 

<P><B>Return Value:</B> <P>Returns true if the viewport scales uniformly; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638011a00">setUniformScaling</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010e00">getWidth</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getWidth();
</FONT></PRE>
<P><P>Retrieves the width (measured in pixels) of the viewport. 

<P><B>Return Value:</B> <P>Returns the width of the viewport (in pixels). 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638010f00">getX</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getX();
</FONT></PRE>
<P><P>Retrieves the x-offset of the start of the viewport on a device. 

<P><B>Return Value:</B> <P>Returns the x-offset. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011000">getY</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getY();
</FONT></PRE>
<P><P>Retrieves the y-offset of the start of the viewport on a device. 

<P><B>Return Value:</B> <P>Returns the y-offset. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011100">inverseTransform</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void inverseTransform(D3dVector d, D3dRMVector4d s);
</FONT></PRE>
<P><P>Transforms the vector in the <I>s</I> parameter (measured in screen coordinates) to world coordinates and returns the result in the <I>d</I> parameter. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>d</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that receives the result of the operation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dRMVector4d.htm">D3dRMVector4d</A> object that contains the source of the operation. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011200">pick</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMPickedArray pick(int x, int y);
</FONT></PRE>
<P><P>Finds a depth-sorted list of objects (and faces, if relevant) that includes the path taken in the hierarchy, from the root down to the frame that contained the object. 

<P><B>Return Value:</B> <P>Returns the <B>Direct3dRMPickedArray</B> object if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate used for picking. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate used for picking. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011300">render</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void render(Direct3dRMFrame f);
</FONT></PRE>
<P><P>Renders a frame hierarchy to the given viewport. Only those visuals on the given frame and any frames below it in the hierarchy are rendered. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object that represents the frame hierarchy to be rendered. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011400">setBack</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setBack(float v);
</FONT></PRE>
<P><P>Sets the position of the back clipping plane for a viewport. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new position of the back clipping plane. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638010400">getBack</A>, <A HREF="Direct3dRMViewport.htm#com_0003000638011700">setFront</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011500">setCamera</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setCamera(Direct3dRMFrame f);
</FONT></PRE>
<P><P>Sets a camera for a viewport. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object that represents the camera. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method sets viewport position, direction, and orientation to that of the given camera frame. The view is oriented along the positive z-axis of the camera frame, with the up direction being that of the positive y-axis. 
<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638010500">getCamera</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011600">setField</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setField(float v);
</FONT></PRE>
<P><P>Sets the viewport field of view. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new field of view. If this value is less than or equal to zero, this method does not carry out an action. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the initial field of view value is 0.5. 
<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638010800">getField</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011700">setFront</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setFront(float v);
</FONT></PRE>
<P><P>Sets the position of the front clipping plane for a viewport. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new position of the front clipping plane. If the value passed is less than or equal to zero, this method does not carry out an action. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the initial position is 1.0. 
<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638010900">getFront</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011800">setPlane</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPlane(float left, float right, float bottom, float top);
</FONT></PRE>
<P><P>Sets the dimensions of the viewport on the front clipping plane, relative to the camera's z-axis. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>left</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The minimum x coordinate of the four sides of the viewport. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>right</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The maximum x coordinate of the four sides of the viewport. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>bottom</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The minimum y coordinate of the four sides of the viewport. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>top</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The maximum y coordinate of the four sides of the viewport. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Unlike the <A HREF="Direct3dRMViewport.htm#com_0003000638011600">setField</A> method, which specifies a centered proportional viewport, this method enables you to specify a viewport of arbitrary proportion and position. For example, this method could be used to construct a sheared viewing frustum to implement a right- or left-eye stereo view. 
<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638010b00">getPlane</A>, <A HREF="Direct3dRMViewport.htm#com_0003000638011600">setField</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011900">setProjection</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setProjection(int val);
</FONT></PRE>
<P><P>Sets the viewport projection. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A projection type value. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638010c00">getProjection</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011a00">setUniformScaling</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setUniformScaling(int flag);
</FONT></PRE>
<P><P>Sets the scaling property used to scale the viewing volume into the larger dimension of the window. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new scaling property. If this parameter is true, the same horizontal and vertical scaling factor is used to scale the viewing volume. Otherwise, different scaling factors are used to scale the viewing volume exactly into the window. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is typically used with the <A HREF="Direct3dRMViewport.htm#com_0003000638011800">setPlane</A> method to support banding. 
<P>By default, the initial scaling property is true. 
<P><B>See Also:</B> <A HREF="Direct3dRMViewport.htm#com_0003000638010d00">getUniformScaling</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000638011b00">transform</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void transform(D3dRMVector4d d, D3dVector s);
</FONT></PRE>
<P><P>Transforms the vector in the <I>s</I> parameter (measured in world coordinates) to screen coordinates and returns the result in the <I>d</I> parameter. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>d</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dRMVector4d.htm">D3dRMVector4d</A> object that receives the result of the transformation operation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that contains the source for the transformation operation. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The result of the transformation is a four-element homogeneous vector. 
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
