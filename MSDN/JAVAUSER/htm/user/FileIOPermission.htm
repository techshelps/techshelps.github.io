<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class FileIOPermission</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FileIOPermission.htm#com_0003000e05010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FileIOPermission.htm#com_0003000e05020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="ExecutionRequest.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_secp.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="FileIORequest.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.security.permissions</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class FileIOPermission</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class FileIOPermission implements <A HREF="IPermission.htm">IPermission</A>, 
            <A HREF="IEncodablePermission.htm">IEncodablePermission</A>, <A HREF="IAdjustablePermission.htm">IAdjustablePermission</A>
{
  // Constructors
  public <A HREF="FileIOPermission.htm#com_0003000e05010100">FileIOPermission</A>();

  // Methods
  public void <A HREF="FileIOPermission.htm#com_0003000e05020100">addDeleteableFile</A> (String filename,
        boolean allowed) throws IOException;
  public void <A HREF="FileIOPermission.htm#com_0003000e05020200">addDeleteableFiles</A> (String pattern, boolean allow);
  public void <A HREF="FileIOPermission.htm#com_0003000e05020300">addFile</A> (int access, String filename,
        boolean allowed) throws IOException;
  public void <A HREF="FileIOPermission.htm#com_0003000e05020400">addFiles</A> (int access, WildcardExpression newspec,
        boolean allowed);
  public void <A HREF="FileIOPermission.htm#com_0003000e05020500">addReadableFile</A> (String filename,
        boolean allowed) throws IOException;
  public void <A HREF="FileIOPermission.htm#com_0003000e05020600">addReadableFiles</A> (String pattern, boolean allow);
  public void <A HREF="FileIOPermission.htm#com_0003000e05020700">addWriteableFile</A>(String filename,
        boolean allowed) throws IOException;
  public void <A HREF="FileIOPermission.htm#com_0003000e05020800">addWriteableFiles</A> (String pattern, boolean allow);
  public void <A HREF="FileIOPermission.htm#com_0003000e05020900">adjustPermission</A> (String tag, Object adjustment);
  public void <A HREF="FileIOPermission.htm#com_0003000e05020a00">check</A>(Object param) throws SecurityException;
  public IPermission <A HREF="FileIOPermission.htm#com_0003000e05020b00">combine</A>(IPermission source2);
  public int <A HREF="FileIOPermission.htm#com_0003000e05020c00">compareSet</A>(Object target);
  public IPermission <A HREF="FileIOPermission.htm#com_0003000e05020d00">copy</A>();
  public boolean <A HREF="FileIOPermission.htm#com_0003000e05020e00">decode</A>(String tag, InputStream data);
  public boolean <A HREF="FileIOPermission.htm#com_0003000e05020f00">encode</A>(String tag, OutputStream out);
  public boolean <A HREF="FileIOPermission.htm#com_0003000e05021000">getCanReadFromFileURLCodebase</A>();
  public WildcardExpression <A HREF="FileIOPermission.htm#com_0003000e05021100">getDeleteableFiles</A> (boolean allowed);
  public WildcardExpression <A HREF="FileIOPermission.htm#com_0003000e05021200">getFiles</A> (int access, boolean allowed);
  public WildcardExpression <A HREF="FileIOPermission.htm#com_0003000e05021300">getReadableFiles</A> (boolean allowed);
  public WildcardExpression <A HREF="FileIOPermission.htm#com_0003000e05021400">getWriteableFiles</A> (boolean allowed);
  public String <A HREF="FileIOPermission.htm#com_0003000e05021500">mapFormat</A>(String format);
  public void <A HREF="FileIOPermission.htm#com_0003000e05021600">reset</A>();
  public void <A HREF="FileIOPermission.htm#com_0003000e05021700">setCanReadFromFileURLCodebase</A>(boolean flag);
  public String[] <A HREF="FileIOPermission.htm#com_0003000e05021800">supportedFormats</A>();
  public String <A HREF="FileIOPermission.htm#com_0003000e05021900">toString</A>();
}
</FONT></PRE>
<P>This class represents a permission that controls the ability to access files. The <A HREF="StandardSecurityManager.htm">StandardSecurityManager</A> checks for this permission type when performing the <A HREF="StandardSecurityManager.htm#com_0003000d0c021900">checkRead</A>, <A HREF="StandardSecurityManager.htm#com_0003000d0c022300">checkWrite</A>, and <A HREF="StandardSecurityManager.htm#com_0003000d0c020800">checkDelete</A> operations. 
<P>The permission distinguishes between the following three different types of file I/O access. 
<DL>
<DT><A HREF="FileIORequest.htm#com_0003000e06030002">FileIORequest.READ</A> 
 </DT><DD>Read-only access to the contents of the file or access to information about the file, such as its length or last modification time. 
</DD><DT><A HREF="FileIORequest.htm#com_0003000e06030003">FileIORequest.WRITE</A> 
 </DT><DD>Write access to the contents of the file or access to change information about the file, such as its name. 
</DD><DT><A HREF="FileIORequest.htm#com_0003000e06030001">FileIORequest.DELETE</A> 
 </DT><DD>The ability to delete the file. 
</DD></DL>
<P>The specific files that the permission instance allows for each of these access types are defined by a pair of include/exclude patterns. 
<P>When permissions are checked, the requested filename is expanded to its full form using <B>java.io.File.getCanonicalPath</B>, so the permission objects must contain full path specifications. The <A HREF="FileIOPermission.htm#com_0003000e05020500">addReadableFile</A>, <A HREF="FileIOPermission.htm#com_0003000e05020700">addWriteableFile</A>, and <A HREF="FileIOPermission.htm#com_0003000e05020100">addDeleteableFile</A> methods can be used to convert a single filename to its full form and add it to the permission. 
<P>This class implements the <A HREF="IPermission.htm">IPermission</A>, the <A HREF="IEncodablePermission.htm">IEncodablePermission</A>, and the <A HREF="IAdjustablePermission.htm">IAdjustablePermission</A> interfaces. 

<P>Also see <A HREF="FileIORequest.htm">com.ms.security.permissions.FileIORequest</A>



<H3 STYLE="color:#333366"><A NAME="com_0003000e05010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000e05010100">FileIOPermission</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FileIOPermission();
</FONT></PRE>
<P><P>Creates a new <A HREF="FileIOPermission.htm">FileIOPermission</A> instance. 
<P><B>Remarks:</B> <P>The new instance does not allow any file I/O operations. 
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000e05020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000e05020100">addDeleteableFile</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addDeleteableFile (String filename, boolean allowed)
        throws IOException;
</FONT></PRE>
<P><P>Adds a file to the set, either allowing or denying that file for delete access. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>filename</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file to add to the permission. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allowed</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you are allowing or denying the file. If the value is true, the file is allowed; otherwise, the file is denied. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if an error occurs while getting the full name of the file. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020200">addDeleteableFiles</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addDeleteableFiles (String pattern, boolean allow);
</FONT></PRE>
<P><P>Adds a pattern that specifies a set of files that are allowed or denied for deleting. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pattern</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string that indicates which files to allow or deny. It must be of the form accepted by a <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A> with the <A HREF="WildcardExpression.htm#com_0003001415030006">ESCAPED</A> flag enabled. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allow</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you are allowing or denying the files specified by the pattern. If the value is true, the files are allowed. Otherwise, the files are denied. You can deny files only if the file was previously allowed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020300">addFile</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addFile (int access, String filename, boolean allowed)
        throws IOException;
</FONT></PRE>
<P><P>Adds a specific file to the permission, either allowing or denying that file for the specified access types. The file is expanded to its fully qualified form using the <B>java.io.File.getCanonicalPath</B> method. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>access</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An access type that is one of the following values: <A HREF="FileIORequest.htm#com_0003000e06030002">FileIORequest.READ</A>, <A HREF="FileIORequest.htm#com_0003000e06030003">FileIORequest.WRITE</A>, or <A HREF="FileIORequest.htm#com_0003000e06030001">FileIORequest.DELETE</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>filename</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file to add to the permission. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allowed</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you are allowing or denying the file for the specified access type. If the value is true, the file is allowed; otherwise, the file is denied. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if an error occurs while getting the full name of the file. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020400">addFiles</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addFiles (int access, WildcardExpression newspec,
        boolean allowed);
</FONT></PRE>
<P><P>Adds a set of files to this permission, either allowing or denying those files for the specified access type. The files to be added are specified as a <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>access</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An access type that is one of the following values: <A HREF="FileIORequest.htm#com_0003000e06030002">FileIORequest.READ</A>, <A HREF="FileIORequest.htm#com_0003000e06030003">FileIORequest.WRITE</A>, or <A HREF="FileIORequest.htm#com_0003000e06030001">FileIORequest.DELETE</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>newspec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The wildcard expression that indicates the files to add. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allowed</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you are allowing or denying the file for the specified access type. If the value is true, the files are allowed; otherwise, they are denied. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020500">addReadableFile</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addReadableFile (String filename, boolean allowed)
        throws IOException;
</FONT></PRE>
<P><P>Adds a file to the set, either allowing or denying that file for read access. Calling this method is equivalent to the following call. 
<PRE><FONT FACE="Courier" SIZE="2">
addFile(FileIORequest.READ,filename,allowed)
</FONT></PRE>
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>filename</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file to add to the permission. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allowed</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you are allowing or denying the file. If the value is true, the file is allowed; otherwise, the file is denied. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if an error occurs while getting the full name of the file. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020600">addReadableFiles</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addReadableFiles (String pattern, boolean allow);
</FONT></PRE>
<P><P>Adds a pattern that specifies a set of files that are allowed or denied for reading. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pattern</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string that indicates which files to allow or deny. It must be of the form accepted by a <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A> with the <A HREF="WildcardExpression.htm#com_0003001415030006">ESCAPED</A> flag enabled. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allow</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you are allowing or denying the files specified by the pattern. If the value is true, the files are allowed. Otherwise, the files are denied. You can deny files only if the file was previously allowed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020700">addWriteableFile</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addWriteableFile(String filename, boolean allowed)
        throws IOException;
</FONT></PRE>
<P><P>Adds a file to the set, either allowing or denying that file for write access. Calling this method is equivalent to the following call. 
<PRE><FONT FACE="Courier" SIZE="2">
addFile(FileIORequest.WRITE,filename,allowed)
</FONT></PRE>
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>filename</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file to add to the permission. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allowed</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you are allowing or denying the file. If the value is true, the file is allowed; otherwise, the file is denied. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if an error occurs while getting the full name of the file. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020800">addWriteableFiles</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addWriteableFiles (String pattern, boolean allow);
</FONT></PRE>
<P><P>Adds a pattern that specifies a set of files that are allowed or denied for writing. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pattern</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string that indicates which files to allow or deny. It must be of the form accepted by a <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A> with the <A HREF="WildcardExpression.htm#com_0003001415030006">ESCAPED</A> flag enabled. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allow</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you are allowing or denying the files specified by the pattern. If the value is true, the files are allowed. Otherwise, the files are denied. You can deny files only if the file was previously allowed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020900">adjustPermission</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void adjustPermission (String tag, Object adjustment);
</FONT></PRE>
<P><P>Adjusts the permission object with some run-time state. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The adjustment type. Every type except "codebase" is ignored. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>adjustment</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">This parameter must be an instance of <B>java.net.URL</B> for the "codebase" tag. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The <A HREF="FileIOPermission.htm">FileIOPermission</A> only responds to the "codebase" adjustment type, and expects the adjustment parameter to be of type <B>URL</B> in that case. All other adjustment types are ignored. 
<P>If the URL is a file:// URL and if the permission allows reading from file:// URL codebases, this method adds read access for the "codebase" directory (and everything below it) to the permission object. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020a00">check</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void check(Object param) throws SecurityException;
</FONT></PRE>
<P><P>Determines if the specified file I/O operation is allowed by this permission object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>param</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The security request parameter. It must be an instance of the <A HREF="FileIORequest.htm">FileIORequest</A> class. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>SecurityException</B>
 if this permission does not allow the specified file I/O operation. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020b00">combine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IPermission combine(IPermission source2);
</FONT></PRE>
<P><P>Creates and returns a new <A HREF="FileIOPermission.htm">FileIOPermission</A> object that is a combination of the current permission object and the specified permission object. The new object allows access to exactly those resources allowed by either one of the permission objects that it was constructed from. 

<P><B>Return Value:</B> <P>Returns the resulting <A HREF="FileIOPermission.htm">FileIOPermission</A> object. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>source2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="FileIOPermission.htm">FileIOPermission</A> object to combine with. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the specified object to combine with is not an instance of <A HREF="FileIOPermission.htm">FileIOPermission</A>. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020c00">compareSet</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int compareSet(Object target);
</FONT></PRE>
<P><P>Compares the <A HREF="FileIOPermission.htm">FileIOPermission</A> instance with a specified permission object. 

<P><B>Return Value:</B> <P>Returns one of the following constants: 
<UL><LI><A HREF="SetComparison.htm#com_000300141a020001">DISJOINT</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020002">EMPTY</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020006">OVERLAP</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020005">EQUAL</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020007">SUBSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020008">SUPERSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020003">EMPTY_SUBSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020004">EMPTY_SUPERSET</A> 
</UL>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The permission object that the <A HREF="FileIOPermission.htm">FileIOPermission</A> instance is compared with. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020d00">copy</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IPermission copy();
</FONT></PRE>
<P><P>Retrieves a copy of the <A HREF="FileIOPermission.htm">FileIOPermission</A> instance. 

<P><B>Return Value:</B> <P>Returns the copy of the <A HREF="FileIOPermission.htm">FileIOPermission</A> instance. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020e00">decode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean decode(String tag, InputStream data);
</FONT></PRE>
<P><P>Decodes the contents of the specified data stream into this permission object. The <I>tag</I> parameter specifies the type of data in the stream. 

<P><B>Return Value:</B> <P>Returns true if the decoding operation succeeded; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The encoding type identifier. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The raw data to construct the object from. The type of data is specified by the <I>tag</I> parameter. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05020f00">encode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean encode(String tag, OutputStream out);
</FONT></PRE>
<P><P>Encodes the contents of this permission object and sends the encoded data to the specified stream. The <I>tag</I> parameter specifies the type of encoding that should be used. 

<P><B>Return Value:</B> <P>Returns true if the encoding operation succeeded; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The encoding type identifier. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>out</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The output stream to send the encoded data to. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05021000">getCanReadFromFileURLCodebase</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean getCanReadFromFileURLCodebase();
</FONT></PRE>
<P><P>Returns the flag that controls whether classes that possess this permission should have read access to the directory that they were loaded from, if that location is a file:// URL. 

<P><B>Return Value:</B> <P>Returns true if the permission allows reading from file:// URL codebases; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05021100">getDeleteableFiles</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public WildcardExpression getDeleteableFiles (boolean allowed);
</FONT></PRE>
<P><P>Obtains a pattern that matches all files that are permitted or all files that are explicitly prohibited for delete access. The <I>allowed</I> flag indicates whether you want to obtain the pattern that matches files that have been explicitly allowed or explicitly denied. 

<P><B>Return Value:</B> <P>Returns the <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A> that matches the requested files. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allowed</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you want to obtain the pattern for explicitly allowed files or explicitly denied files. If true, the method returns a pattern that matches all files that are explicitly allowed; otherwise, the method returns a pattern that matches all files that are explicitly denied. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05021200">getFiles</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public WildcardExpression getFiles (int access, boolean allowed);
</FONT></PRE>
<P><P>Retrieves a <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A> object that indicates all the files that this permission object matches for the specified access type. 

<P><B>Return Value:</B> <P>Returns the wildcard expression that indicates the matching files. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>access</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An access type that is one of the following values: <A HREF="FileIORequest.htm#com_0003000e06030002">FileIORequest.READ</A>, <A HREF="FileIORequest.htm#com_0003000e06030003">FileIORequest.WRITE</A>, or <A HREF="FileIORequest.htm#com_0003000e06030001">FileIORequest.DELETE</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allowed</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether this method retrieves the pattern that matches files that have been explicitly allowed or explicitly denied. If true, this method returns the pattern for files that have been explicitly allowed; otherwise, it returns the pattern for files that have been explicitly denied. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05021300">getReadableFiles</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public WildcardExpression getReadableFiles (boolean allowed);
</FONT></PRE>
<P><P>Obtains a pattern that matches all files that are permitted or all files that are explicitly prohibited for read access. The <I>allowed</I> flag indicates whether you want to obtain the pattern that matches files that have been explicitly allowed or explicitly denied. 

<P><B>Return Value:</B> <P>Returns the <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A> that matches the requested files. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allowed</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you want to obtain the pattern for explicitly allowed files or explicitly denied files. If true, the method returns a pattern that matches all files that are explicitly allowed; otherwise, the method returns a pattern that matches all files that are explicitly denied. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05021400">getWriteableFiles</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public WildcardExpression getWriteableFiles (boolean allowed);
</FONT></PRE>
<P><P>Obtains a pattern that matches all files that are permitted or all files that are explicitly prohibited for write access. The <I>allowed</I> flag indicates whether you want to obtain the pattern that matches files that have been explicitly allowed or explicitly denied. 

<P><B>Return Value:</B> <P>Returns the <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A> that matches the requested files. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>allowed</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether you want to obtain the pattern for explicitly allowed files or explicitly denied files. If true, the method returns a pattern that matches all files that are explicitly allowed; otherwise, the method returns a pattern that matches all files that are explicitly denied. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05021500">mapFormat</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String mapFormat(String format);
</FONT></PRE>
<P><P>Retrieves a permission-specific tag when given an encoding format. The tag is then used with the encode and decode methods to specify an encoding type. 

<P><B>Return Value:</B> <P>Returns the permission-specific tag that corresponds to the specified format. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>format</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The encoding format to retrieve the tag for. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05021600">reset</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void reset();
</FONT></PRE>
<P><P>Resets the permission state to empty. This is a state in which the object allows no file I/O access. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05021700">setCanReadFromFileURLCodebase</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setCanReadFromFileURLCodebase(boolean flag);
</FONT></PRE>
<P><P>Sets the flag that controls whether classes that possess this permission should have read access to the directory that they were loaded from, if that location is a file:// URL. 
<P>
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value that indicates whether this permission should allow reading from the "codebase" directory for file:// URLs. If true, the flag will be set so that reading is allowed; otherwise, the flag is set so that reading is not allowed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the flag is set to true, a later "codebase" adjustment by using the <A HREF="FileIOPermission.htm#com_0003000e05020900">adjustPermission</A> method will include the "codebase" directory in the set of files that can be read by this permission. If this flag is false, a later call to the <B>adjustPermission</B> method will do nothing. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05021800">supportedFormats</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String[] supportedFormats();
</FONT></PRE>
<P><P>Returns the encoding formats that the permission type supports. 

<P><B>Return Value:</B> <P>Returns an array of the supported format identifiers. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e05021900">toString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String toString();
</FONT></PRE>
<P><P>Retrieves a textual representation of the permission object. 

<P><B>Return Value:</B> <P>Returns the string representation of the permission object. 

</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
