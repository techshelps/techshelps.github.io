<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="Template" content="D:\WIN\MSOFFICE\OFFICE\html.dot">
<meta name="GENERATOR" content="Microsoft FrontPad 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Release Notes J/Direct</TITLE>
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="Gray">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->


<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Release Notes"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD>
<TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B>

<!-- TOPIC LINKS -->

<!--<P><IMG SRC="art\linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*">-->
<!--<A STYLE="color: #333366;text-decoration:none" HREF="install.htm">Link to topic</A>-->

<!-- END TOPIC LINKS -->

</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/relnote2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Release Notes"></TD>
<TD WIDTH=20>&nbsp;</TD>
<!-- BUTTON 1 --><TD ALIGN="center" VALIGN="bottom"><!--<IMG SRC="art\indexnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Index">--></TD>
<!-- BUTTON 2 --><TD ALIGN="center" VALIGN="bottom"><!--<IMG SRC="art\prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous">--></TD>
<!-- BUTTON 3 --><TD ALIGN="center" VALIGN="bottom"><A HREF="default.htm"><IMG SRC="art/homenrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Release Notes"></A></TD>
<!-- BUTTON 4 --><TD ALIGN="center" VALIGN="bottom"><!--<IMG SRC="art\nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next">--></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>J/Direct</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<!-- CAPTION 1 --><TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><!--Index--></FONT></TD>
<!-- CAPTION 2 --><TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><!--Previous--></FONT></TD>
<!-- CAPTION 3 --><TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Introduction</FONT></TD>
<!-- CAPTION 4 --><TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><!--Next--></FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><BR>
<!-- DO NOT EDIT ABOVE THIS POINT -->
<!-- INSERT CONTENTS FROM THIS POINT-->
<!--################################-->




<H2 STYLE="color:#333366">J/Direct Information</H2>

<p>Microsoft&#174; J/Direct&#153
is a very powerful mechanism that allows Java code to call
functions exported from any Windows DLLs. The code in the DLLs
need not be aware of the Java environment. The most obvious use
of this scheme is to call Win32 APIs or APIs in third party DLLs.
This mechanism automatically translates common data types, such
as strings and structures to forms typically expected by C
functions. This dramatically reduces any glue code or wrapper
DLLs that need to be written. In short J/Direct exposes the
richness of the Windows platform to the Java programmer. It also
makes calling functions in DLLs as simple as possible.</p>

<p>Any
class that uses J/Direct calls requires permissions for maximum
trust from the system. This is best explained by looking at the
various scenarios:</p>

<ul>
    <li>An
        applet can use J/Direct calls only if it is signed and
        has &quot;fully trusted&quot; permissions.</li>
    <li>An
        untrusted applet cannot resolve to a class that uses
        J/Direct calls, unless that class has been appropriately
        marked as a class that can protect itself from malicious
        use. Please see the "Security Issues" section of the "About
        J/Direct" article 
        for more information on how to mark your class as safe for
        use from an untrusted applet.</li>
    <li>A
        class on the CLASSPATH, or a package managed class with
        the &quot;fully trusted&quot; permission, can be a
        wrapper class that protects another class that uses
        J/Direct calls from malicious use. Such a wrapper or
        proxy class can be called from an applet. </li>
</ul>

<p>A
J/Direct call should be treated as a native call. Do not expose
access to J/Direct functionality any more freely than access to
native code. Security checks should be made through the security
manager when exposing J/Direct functionally to untrusted code.</p>

<p>Please
refer to the articles &quot;Mixing Java and Native Code&quot; and
&quot;About J/Direct&quot; in the SDK for Java documentation for
more information.</p>

<H3 STYLE="color:#333366">Win32 API Classes for J/Direct</H3>

<p>The
Win32 API Classes for J/Direct (the com.ms.win32.* package) 
provide direct, low-overhead access to commonly used
Windows APIs. These classes use the new J/Direct feature and
therefore require either Internet Explorer 4.0, or the
Microsoft SDK for Java version 3.0 pre-release 2.</p>

<p>The
Win32 API Classes for J/Direct are an optional component in the
SDK install. When these classes are installed the com.ms.win32
package is copied into the %windir%\java\classes directory. The
sources (.java files) for these classes are also provided as part
of the Microsoft SDK for Java version 3.0 pre-release 2.</p>

<p>If
your application requires an api not covered in these classes,
J/Direct makes it very easy to write declarations on your own.
Complete documentation and samples on using J/Direct can be found
in the Microsoft SDK for Java version 3.0 pre-release 2. </p>

<H3 STYLE="color:#333366">Packages included in this CAB:</H3>

<p><b>com.ms.win32</b> J/Direct declarations for common Win32 APIs and constants<br>
</p>

<H3 STYLE="color:#333366">Classes included in this CAB:</H3>

<p>The
classes included in com.ms.win32 package fall into three main categories:</p>

<p><strong>Constants</strong></p>

<p>The
win class contains the numeric constants used in Win32. For
example, the system path length limit (MAX_PATH) can be accessed
from Java as follows:</p>

<p>import
com.ms.win32.*;</p>

<p>System.out.println(&quot;MAX_PATH
= &quot; + win.MAX_PATH);</p>

<p><strong>Performance
tip</strong>: </p>

<p>Do
not include the win class in the extends or implements clause of
your application's classes. This trick is commonly used to avoid
having to type the class name in front of each constant usage.
The price for this convenience is that the win class will need to
be loaded at runtime, which can significantly impact application
start up time. To avoid this overhead, use the qualified name for
each constant reference. The Microsoft compiler for Java will
inline constant references and will not create a runtime
dependency on the win class.</p>

<p><strong>Functions</strong></p>

<p>The
Win32 APIs are divided into classes according to the DLL they
are exported from.</p>
<div align="center"><center>

<table border="0">
    <tr>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">Kernel32.java </font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">KERNEL32.DLL</font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">(base API)</font></td>
    </tr>
    <tr>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">Gdi32.java </font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">GDI32.DLL</font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">(graphics)</font></td>
    </tr>
    <tr>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">User32.java</font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">USER32.DLL</font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">(user
        interface)</font></td>
    </tr>
    <tr>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">Advapi32.java</font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">ADVAPI32.DLL </font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">(crypto API,
        event logging)</font></td>
    </tr>
    <tr>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">Shell32.java </font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">SHELL32.DLL</font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">(interface to
        the Windows Explorer)</font></td>
    </tr>
    <tr>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">Winmm.java</font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">WINMM.DLL</font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">(multimedia) </font></td>
    </tr>
    <tr>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">Spoolss.java </font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">SPOOLSS.DLL</font></td>
        <td><font size="2"
        face="VERDANA, GEORGIA, ARIAL, HELVETICA">(spooling)</font></td>
    </tr>
</table>
</center></div>

<p><strong>Structures</strong></p>

<p>Win32
structures are represented by Java classes that bear the same
name as the structure.</p>



<H3 STYLE="color:#333366">Known Issues</H3>

<p>If the Win32 API classes for J/Direct were installed as part of the SDK for Java version 3.0 pre-release 2, they would reside in %windir%\java\classes\com\ms\win32.  The SDK setup does not delete these older classes.  Please feel free to delete them with a command of the form:
<pre>
	c:
	cd %windir%\java\classes
	deltree com
</pre>

<!--################################-->
<!-- END CONTENTS FROM THIS POINT-->
<!-- DO NOT EDIT BELLOW THIS POINT -->
<BR><BR>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P>
<TABLE WIDTH="95%">
<TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR>
</TABLE>
<TABLE WIDTH="98%">
<TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/buttup.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Top"></A></TD>
<TD ALIGN="right"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">
<A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD>
</TR>
</TABLE>
</CENTER>
</BODY></HTML>
