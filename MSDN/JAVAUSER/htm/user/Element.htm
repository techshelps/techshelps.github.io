<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interface Element</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Element.htm#com_0003001809010000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Element.htm#com_0003001809020000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="ElementImplBeanInfo.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_xmlo.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="ElementFactory.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.xml.om</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Interface Element</H2>
<PRE><FONT FACE="Courier" SIZE="2">public interface Element
{
  // Fields
  static public final int <A HREF="Element.htm#com_0003001809020001">CDATA</A>;
  static public final int <A HREF="Element.htm#com_0003001809020002">COMMENT</A>;
  static public final int <A HREF="Element.htm#com_0003001809020003">DOCUMENT</A>;
  static public final int <A HREF="Element.htm#com_0003001809020004">DTD</A>;
  static public final int <A HREF="Element.htm#com_0003001809020005">ELEMENT</A>;
  static public final int <A HREF="Element.htm#com_0003001809020006">ELEMENTDECL</A>;
  static public final int <A HREF="Element.htm#com_0003001809020007">ENTITY</A>;
  static public final int <A HREF="Element.htm#com_0003001809020008">ENTITYREF</A>;
  static public final int <A HREF="Element.htm#com_0003001809020009">NAMESPACE</A>;
  static public final int <A HREF="Element.htm#com_000300180902000a">NOTATION</A>;
  static public final int <A HREF="Element.htm#com_000300180902000b">PCDATA</A>;
  static public final int <A HREF="Element.htm#com_000300180902000c">PI</A>;

  // Methods
  public void <A HREF="Element.htm#com_0003001809010100">addChild</A>(Element elem, Element after);
  public void <A HREF="Element.htm#com_0003001809010200">addChild</A>(Element elem, int pos, int reserved);
  public Object <A HREF="Element.htm#com_0003001809010300">getAttribute</A>(String name);
  public Object <A HREF="Element.htm#com_0003001809010400">getAttribute</A>(Name n);
  public Enumeration <A HREF="Element.htm#com_0003001809010500">getAttributes</A>();
  public Element <A HREF="Element.htm#com_0003001809010600">getChild</A>(int index);
  public ElementCollection <A HREF="Element.htm#com_0003001809010700">getChildren</A>();
  public Enumeration <A HREF="Element.htm#com_0003001809010800">getElements</A>();
  public Element <A HREF="Element.htm#com_0003001809010900">getParent</A>();
  public Name <A HREF="Element.htm#com_0003001809010a00">getTagName</A>();
  public String <A HREF="Element.htm#com_0003001809010b00">getText</A>();
  public int <A HREF="Element.htm#com_0003001809010c00">getType</A>();
  public int <A HREF="Element.htm#com_0003001809010d00">numAttributes</A>();
  public int <A HREF="Element.htm#com_0003001809010e00">numElements</A>();
  public void <A HREF="Element.htm#com_0003001809010f00">removeAttribute</A>(String name);
  public void <A HREF="Element.htm#com_0003001809011000">removeAttribute</A>(Name name);
  public void <A HREF="Element.htm#com_0003001809011100">removeChild</A>(Element elem);
  public void <A HREF="Element.htm#com_0003001809011200">save</A>(XMLOutputStream o) throws IOException;
  public void <A HREF="Element.htm#com_0003001809011300">setAttribute</A>(String name, Object value);
  public void <A HREF="Element.htm#com_0003001809011400">setAttribute</A>(Name name, Object value);
  public void <A HREF="Element.htm#com_0003001809011500">setParent</A>(Element parent);
  public void <A HREF="Element.htm#com_0003001809011600">setText</A>(String text);
}
</FONT></PRE>
<P>This interface implements an Element object. Each XML tag in a document is represented by an Element object in the XML parse tree. The elements are named with a string, have attributes, and can contain child nodes. 
<P>There are seven types of elements, DOCUMENT, ELEMENT, PCDATA, PI, META, COMMENT, and CDATA. 

<H3 STYLE="color:#333366"><A NAME="com_0003001809010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001809010100">addChild</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addChild(Element elem, Element after);
</FONT></PRE>
<P><P>Adds a child to this element. Any element can only have one parent element and so the previous parent will lose this child from its subtree. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>elem</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The element to add. The child element becomes the last element if <I>after</I> is null. The child is added to the beginning of the list if <I>after</I> is this object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>after</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The element after which to add it. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010200">addChild</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addChild(Element elem, int pos, int reserved);
</FONT></PRE>
<P><P>Adds a child to this element. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>elem</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The element to add. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pos</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The position to add this element (calling <B>getChild(pos)</B> will return this element). If <I>pos</I> is less than 0, <I>elem</I> becomes the new last element. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>reserved</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The reserved parameter. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010300">getAttribute</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Object getAttribute(String name);
</FONT></PRE>
<P><P>Retrieves an attribute's value given its name. 

<P><B>Return Value:</B> <P>Returns the value of the attribute or null if the attribute is not found. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the attribute. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010400">getAttribute</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Object getAttribute(Name n);
</FONT></PRE>
<P><P>Retrieves an attribute's value given its name. 

<P><B>Return Value:</B> <P>Returns the value of the attribute or null if the attribute is not found. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the attribute. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010500">getAttributes</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Enumeration getAttributes();
</FONT></PRE>
<P><P>Retrieves an enumeration for the element attributes. The enumeration returns <B>Attribute</B> objects. 

<P><B>Return Value:</B> <P>Returns the enumeration. It must not return null (see <B>EnumWrapper</B> for returning empty enumerations). 

<P><B>See Also:</B> <B>Attribute</B>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010600">getChild</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Element getChild(int index);
</FONT></PRE>
<P><P>Retrieves the child element by index. 

<P><B>Return Value:</B> <P>Returns null if there is no child by that index. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the child element. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010700">getChildren</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public ElementCollection getChildren();
</FONT></PRE>
<P><P>Returns an element collection of the children of this element. It must not return null. See <B>EnumWrapper</B> for an emptyEnumeration. 

<P><B>Return Value:</B> <P>Returns ElementCollection of child objects. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010800">getElements</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Enumeration getElements();
</FONT></PRE>
<P><P>Returns an enumeration of the children of this element. <A HREF="ElementEnumeration.htm#com_0003001805020200">Enumeration.nextElement</A> returns <A HREF="Element.htm">Element</A> objects. 

<P><B>Return Value:</B> <P>Returns an enumeration of child objects. It must not return null. See <B>EnumWrapper</B> for an easy way to return an empty enumeration. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010900">getParent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Element getParent();
</FONT></PRE>
<P><P>Retrieves the parent of this element. Every element in the tree except the Document itself, has a parent. 

<P><B>Return Value:</B> <P>Returns the parent element or null if at the root of the tree. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010a00">getTagName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Name getTagName();
</FONT></PRE>
<P><P>Retrieves the name of the tag as a string. The string will be in uppercase. 

<P><B>Return Value:</B> <P>Returns the tag name or null for DATA and PCDATA elements. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010b00">getText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getText();
</FONT></PRE>
<P><P>Returns the non-marked-up text contained by this element. For text elements, this is the raw data. For elements with child nodes, this traverses the entire subtree and appends the text for each terminal text element, effectively stripping out the XML markup for the subtree. For example, if the XML document contains the following: &lt;xmp&gt; &lt;AUTHOR&gt; &lt;FIRST&gt;William&lt;/FIRST&gt; &lt;LAST&gt;Shakespeare&lt;/LAST&gt; &lt;/AUTHOR&gt; &lt;/xmp&gt; 
<P><A HREF="Document.htm#com_0003001802021200">Document.getText</A> returns "William Shakespeare". 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010c00">getType</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getType();
</FONT></PRE>
<P><P>Retrieves the type of the element. This is always one of the following values: <A HREF="Element.htm#com_0003001809020003">DOCUMENT</A>, <A HREF="Element.htm#com_0003001809020005">ELEMENT</A>, <A HREF="Element.htm#com_000300180902000b">PCDATA</A>, <A HREF="Element.htm#com_000300180902000c">PI</A>, <B>META</B>, <A HREF="Element.htm#com_0003001809020002">COMMENT</A>, or <A HREF="Element.htm#com_0003001809020001">CDATA</A>. 

<P><B>Return Value:</B> <P>Returns element type. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010d00">numAttributes</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int numAttributes();
</FONT></PRE>
<P><P>Retrieves the number of attributes. 

<P><B>Return Value:</B> <P>Returns the number of attributes. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010e00">numElements</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int numElements();
</FONT></PRE>
<P><P>Retrieves the number of child elements. 

<P><B>Return Value:</B> <P>Returns the number of child elements. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809010f00">removeAttribute</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeAttribute(String name);
</FONT></PRE>
<P><P>Deletes an attribute from an element. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The attribute to delete. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809011000">removeAttribute</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeAttribute(Name name);
</FONT></PRE>
<P><P>Deletes an attribute from an element. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The attribute to delete. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809011100">removeChild</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeChild(Element elem);
</FONT></PRE>
<P><P>Removes a child element from the tree. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>elem</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The element to remove. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809011200">save</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void save(XMLOutputStream o) throws IOException;
</FONT></PRE>
<P><P>Saves this element. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>o</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The output stream to save to. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IOException</B>
 if there is a problem saving the output. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809011300">setAttribute</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setAttribute(String name, Object value);
</FONT></PRE>
<P><P>Sets the attribute of this element. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The attribute name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>value</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The attribute value. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809011400">setAttribute</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setAttribute(Name name, Object value);
</FONT></PRE>
<P><P>Sets the attribute of this element. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The attribute name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>value</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The attribute value. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809011500">setParent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setParent(Element parent);
</FONT></PRE>
<P><P>Sets the parent of this element. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The element to set as parent. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001809011600">setText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setText(String text);
</FONT></PRE>
<P><P>Sets the text for this element. Only meaningful in <A HREF="Element.htm#com_0003001809020001">CDATA</A>, <A HREF="Element.htm#com_000300180902000b">PCDATA</A>, and <A HREF="Element.htm#com_0003001809020002">COMMENT</A> nodes. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>text</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to set. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001809020000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003001809020001">CDATA</A></B>
</DT><DD>Raw character data specified with special CDATA construct: &lt;![CDATA[...]]&gt; where ... can be anything except ]]&gt;, including HTML tags. 

</DD><DT><B><A NAME="com_0003001809020002">COMMENT</A></B>
</DT><DD>An XML comment ( &lt;!-- ... --&gt; ). 

</DD><DT><B><A NAME="com_0003001809020003">DOCUMENT</A></B>
</DT><DD>Reserved for use by the Document node only. 

</DD><DT><B><A NAME="com_0003001809020004">DTD</A></B>
</DT><DD>Reserved for use by the DTD node only. 

</DD><DT><B><A NAME="com_0003001809020005">ELEMENT</A></B>
</DT><DD>A general container element having optional attributes and optional child elements. 

</DD><DT><B><A NAME="com_0003001809020006">ELEMENTDECL</A></B>
</DT><DD>An element declaration node. 

</DD><DT><B><A NAME="com_0003001809020007">ENTITY</A></B>
</DT><DD>An entity node. 

</DD><DT><B><A NAME="com_0003001809020008">ENTITYREF</A></B>
</DT><DD>Entity reference nodes. 

</DD><DT><B><A NAME="com_0003001809020009">NAMESPACE</A></B>
</DT><DD>A namespace node that declares new namespaces in the element tree. 

</DD><DT><B><A NAME="com_000300180902000a">NOTATION</A></B>
</DT><DD>A notation node. 

</DD><DT><B><A NAME="com_000300180902000b">PCDATA</A></B>
</DT><DD>A text element that has no children or attributes and that contains parsed character data. 

</DD><DT><B><A NAME="com_000300180902000c">PI</A></B>
</DT><DD>A processing instruction node ( &lt;? ... ?&gt; ). 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
