<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Device</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Device.htm#com_0003000304010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Device.htm#com_0003000304020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Device.htm#com_0003000304030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="CursorX.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_pawt.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="DeviceException.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.awt</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class Device</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class Device
{
  // Fields
  public static final int <A HREF="Device.htm#com_0003000304030001">BLTALIGNMENT</A>;
  public final static int <A HREF="Device.htm#com_0003000304030002">CC_CHORD</A>;
  public final static int <A HREF="Device.htm#com_0003000304030003">CC_CIRCLES</A>;
  public final static int <A HREF="Device.htm#com_0003000304030004">CC_ELLIPSES</A>;
  public final static int <A HREF="Device.htm#com_0003000304030005">CC_INTERIORS</A>;
  public final static int <A HREF="Device.htm#com_0003000304030006">CC_NONE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030007">CC_PIE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030008">CC_ROUNDRECT</A>;
  public final static int <A HREF="Device.htm#com_0003000304030009">CC_STYLED</A>;
  public final static int <A HREF="Device.htm#com_000300030403000a">CC_WIDE</A>;
  public final static int <A HREF="Device.htm#com_000300030403000b">CC_WIDESTYLED</A>;
  public final static int <A HREF="Device.htm#com_000300030403000c">CP_NONE</A>;
  public final static int <A HREF="Device.htm#com_000300030403000d">CP_RECTANGLE</A>;
  public final static int <A HREF="Device.htm#com_000300030403000e">CP_REGION</A>;
  public static final int <A HREF="Device.htm#com_000300030403000f">DESKTOPHORZRES</A>;
  public static final int <A HREF="Device.htm#com_0003000304030010">DESKTOPVERTRES</A>;
  public final static int <A HREF="Device.htm#com_0003000304030011">DT_CHARSTREAM</A>;
  public final static int <A HREF="Device.htm#com_0003000304030012">DT_DISPFILE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030013">DT_METAFILE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030014">DT_PLOTTER</A>;
  public final static int <A HREF="Device.htm#com_0003000304030015">DT_RASCAMERA</A>;
  public final static int <A HREF="Device.htm#com_0003000304030016">DT_RASDISPLAY</A>;
  public final static int <A HREF="Device.htm#com_0003000304030017">DT_RASPRINTER</A>;
  public final static int <A HREF="Device.htm#com_0003000304030018">LC_INTERIORS</A>;
  public final static int <A HREF="Device.htm#com_0003000304030019">LC_MARKER</A>;
  public final static int <A HREF="Device.htm#com_000300030403001a">LC_NONE</A>;
  public final static int <A HREF="Device.htm#com_000300030403001b">LC_POLYLINE</A>;
  public final static int <A HREF="Device.htm#com_000300030403001c">LC_POLYMARKER</A>;
  public final static int <A HREF="Device.htm#com_000300030403001d">LC_STYLED</A>;
  public final static int <A HREF="Device.htm#com_000300030403001e">LC_WIDE</A>;
  public final static int <A HREF="Device.htm#com_000300030403001f">LC_WIDESTYLED</A>;
  public final static int <A HREF="Device.htm#com_0003000304030020">PC_INTERIORS</A>;
  public final static int <A HREF="Device.htm#com_0003000304030021">PC_NONE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030022">PC_PATHS</A>;
  public final static int <A HREF="Device.htm#com_0003000304030023">PC_POLYGON</A>;
  public final static int <A HREF="Device.htm#com_0003000304030024">PC_POLYPOLYGON</A>;
  public final static int <A HREF="Device.htm#com_0003000304030025">PC_RECTANGLE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030026">PC_SCANLINE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030027">PC_STYLED</A>;
  public final static int <A HREF="Device.htm#com_0003000304030028">PC_TRAPEZOID</A>;
  public final static int <A HREF="Device.htm#com_0003000304030029">PC_WIDE</A>;
  public final static int <A HREF="Device.htm#com_000300030403002a">PC_WIDESTYLED</A>;
  public final static int <A HREF="Device.htm#com_000300030403002b">PC_WINDPOLYGON</A>;
  public final static int <A HREF="Device.htm#com_000300030403002c">RC_BANDING</A>;
  public final static int <A HREF="Device.htm#com_000300030403002d">RC_BIGFONT</A>;
  public final static int <A HREF="Device.htm#com_000300030403002e">RC_BITBLT</A>;
  public final static int <A HREF="Device.htm#com_000300030403002f">RC_BITMAP64</A>;
  public final static int <A HREF="Device.htm#com_0003000304030030">RC_DEVBITS</A>;
  public final static int <A HREF="Device.htm#com_0003000304030031">RC_DI_BITMAP</A>;
  public final static int <A HREF="Device.htm#com_0003000304030032">RC_DIBTODEV</A>;
  public final static int <A HREF="Device.htm#com_0003000304030033">RC_FLOODFILL</A>;
  public final static int <A HREF="Device.htm#com_0003000304030034">RC_GDI20_OUTPUT</A>;
  public final static int <A HREF="Device.htm#com_0003000304030035">RC_GDI20_STATE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030036">RC_NONE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030037">RC_OP_DX_OUTPUT</A>;
  public final static int <A HREF="Device.htm#com_0003000304030038">RC_PALETTE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030039">RC_SAVEBITMAP</A>;
  public final static int <A HREF="Device.htm#com_000300030403003a">RC_SCALING</A>;
  public final static int <A HREF="Device.htm#com_000300030403003b">RC_STRETCHBLT</A>;
  public final static int <A HREF="Device.htm#com_000300030403003c">RC_STRETCHDIB</A>;
  public final static int <A HREF="Device.htm#com_000300030403003d">TC_CP_STROKE</A>;
  public final static int <A HREF="Device.htm#com_000300030403003e">TC_CR_90</A>;
  public final static int <A HREF="Device.htm#com_000300030403003f">TC_CR_ANY</A>;
  public final static int <A HREF="Device.htm#com_0003000304030040">TC_EA_DOUBLE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030041">TC_IA_ABLE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030042">TC_OP_CHARACTER</A>;
  public final static int <A HREF="Device.htm#com_0003000304030043">TC_OP_STROKE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030044">TC_RA_ABLE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030045">TC_RESERVED</A>;
  public final static int <A HREF="Device.htm#com_0003000304030046">TC_SA_CONTIN</A>;
  public final static int <A HREF="Device.htm#com_0003000304030047">TC_SA_DOUBLE</A>;
  public final static int <A HREF="Device.htm#com_0003000304030048">TC_SA_INTEGER</A>;
  public final static int <A HREF="Device.htm#com_0003000304030049">TC_SCROLLBLT</A>;
  public final static int <A HREF="Device.htm#com_000300030403004a">TC_SF_X_YINDEP</A>;
  public final static int <A HREF="Device.htm#com_000300030403004b">TC_SO_ABLE</A>;
  public final static int <A HREF="Device.htm#com_000300030403004c">TC_UA_ABLE</A>;
  public final static int <A HREF="Device.htm#com_000300030403004d">TC_VA_ABLE</A>;
  public static final int <A HREF="Device.htm#com_000300030403004e">VREFRESH</A>;

  // Constructors
  protected <A HREF="Device.htm#com_0003000304010100">Device</A>();

  // Methods
  public Dimension <A HREF="Device.htm#com_0003000304020100">getAspectRatio</A>();
  public int <A HREF="Device.htm#com_0003000304020200">getAspectRatioXY</A>();
  public void <A HREF="Device.htm#com_0003000304020300">getBasics</A>(int hdc) throws DeviceException;
  public int <A HREF="Device.htm#com_0003000304020400">getBitsPerPixel</A>();
  public int <A HREF="Device.htm#com_0003000304020500">getClipCapabilities</A>();
  public int <A HREF="Device.htm#com_0003000304020600">getColorResolution</A>();
  public int <A HREF="Device.htm#com_0003000304020700">getCurveCapabilities</A>();
  public final static Device <A HREF="Device.htm#com_0003000304020800">getDeviceFromGraphics</A>(
        Graphics g) throws DeviceException;
  public Dimension <A HREF="Device.htm#com_0003000304020900">getDeviceSize</A>();
  protected int <A HREF="Device.htm#com_0003000304020a00">getDisplayContext</A>(Graphics g)
        throws DeviceException;
  public int <A HREF="Device.htm#com_0003000304020b00">getDriverVersion</A>();
  public int <A HREF="Device.htm#com_0003000304020c00">getLineCapabilities</A>();
  public Dimension <A HREF="Device.htm#com_0003000304020d00">getLogicalPixelsPerInch</A>();
  public int <A HREF="Device.htm#com_0003000304020e00">getNumberOfBrushes</A>();
  public int <A HREF="Device.htm#com_0003000304020f00">getNumberOfColors</A>();
  public int <A HREF="Device.htm#com_0003000304021000">getNumberOfFonts</A>();
  public int <A HREF="Device.htm#com_0003000304021100">getNumberOfMarkers</A>();
  public int <A HREF="Device.htm#com_0003000304021200">getNumberOfPens</A>();
  public int <A HREF="Device.htm#com_0003000304021300">getPaletteReserved</A>();
  public int <A HREF="Device.htm#com_0003000304021400">getPaletteSize</A>();
  public Dimension <A HREF="Device.htm#com_0003000304021500">getPixelRes</A>();
  public int <A HREF="Device.htm#com_0003000304021600">getPlanes</A>();
  public int <A HREF="Device.htm#com_0003000304021700">getPolygonCapabilities</A>();
  public int <A HREF="Device.htm#com_0003000304021800">getRasterCapabilities</A>();
  public int <A HREF="Device.htm#com_0003000304021900">getTechnology</A>();
  public int <A HREF="Device.htm#com_0003000304021a00">getTextCapabilities</A>();
}
</FONT></PRE>
<P>This class manages information associated with a generic device. 
<P>The <A HREF="DisplayDevice.htm">DisplayDevice</A> and <A HREF="PrinterDevice.htm">PrinterDevice</A> classes are derived from the <B>Device</B> class. 

<H3 STYLE="color:#333366"><A NAME="com_0003000304010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000304010100">Device</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected Device();
</FONT></PRE>
<P><P>A constructor for the abstract class. 

</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000304020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000304020100">getAspectRatio</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getAspectRatio();
</FONT></PRE>
<P><P>Retrieves the device aspect ratio. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> that defines the device aspect ratio. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020200">getAspectRatioXY</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getAspectRatioXY();
</FONT></PRE>
<P><P></BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020300">getBasics</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getBasics(int hdc) throws DeviceException;
</FONT></PRE>
<P><P>Retrieves the basic information set (common to all devices types) from the native system. The information set includes the driver version, pixel resolution, curve, line, polygon, and raster capabilities, color resolution, logical pixels per inch, and so on. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hdc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The device context. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><A HREF="DeviceException.htm">com.ms.awt.DeviceException</A>
 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020400">getBitsPerPixel</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getBitsPerPixel();
</FONT></PRE>
<P><P>Retrieves the device number of bits per pixel. 

<P><B>Return Value:</B> <P>Returns the bits per pixel. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020500">getClipCapabilities</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getClipCapabilities();
</FONT></PRE>
<P><P>Retrieves the clipping capabilities of the device. 

<P><B>Return Value:</B> <P>Returns one of the clipping capabilities flags as shown in the following table. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403000c">CP_NONE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403000d">CP_RECTANGLE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403000e">CP_REGION</A> 
</FONT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020600">getColorResolution</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getColorResolution();
</FONT></PRE>
<P><P>Retrieves a device's color resolution. 

<P><B>Return Value:</B> <P>Returns the color resolution. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020700">getCurveCapabilities</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getCurveCapabilities();
</FONT></PRE>
<P><P>Retrieves the curve capabilities of the device. 

<P><B>Return Value:</B> <P>Returns one or a combination of the following curve capabilities flags: 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030006">CC_NONE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030003">CC_CIRCLES</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030007">CC_PIE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030002">CC_CHORD</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030004">CC_ELLIPSES</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403000a">CC_WIDE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030009">CC_STYLED</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403000b">CC_WIDESTYLED</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030005">CC_INTERIORS</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030008">CC_ROUNDRECT</A>
</FONT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020800">getDeviceFromGraphics</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final static Device getDeviceFromGraphics(Graphics g)
        throws DeviceException;
</FONT></PRE>
<P><P>Retrieves a device, given a graphics context. The device created is an instance of the <A HREF="DisplayDevice.htm">DisplayDevice</A> or the <A HREF="PrinterDevice.htm">PrinterDevice</A> class. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An extended graphics context, either an FxGraphics or a <A HREF="GraphicsX.htm">GraphicsX</A> object. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><A HREF="DeviceException.htm">com.ms.awt.DeviceException</A>
 if the graphics context is not valid. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020900">getDeviceSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getDeviceSize();
</FONT></PRE>
<P><P>Retrieves the physical device size as a <B>Dimension</B>. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> that defines the physical size of the device. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020a00">getDisplayContext</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected int getDisplayContext(Graphics g) throws DeviceException;
</FONT></PRE>
<P><P>Retrieves a display context usable on the device. If the display device is something other than a monitor (a printer, for example), the device context is obtained from the native peer object. 

<P><B>Return Value:</B> <P>Returns zero if the device is the screen; otherwise, returns the handle of the device context. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <B>Graphics</B> object to get the context for. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><A HREF="DeviceException.htm">com.ms.awt.DeviceException</A>
 if the graphics context is not an instance of the FxGraphics or <A HREF="GraphicsX.htm">GraphicsX</A> graphics classes. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020b00">getDriverVersion</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getDriverVersion();
</FONT></PRE>
<P><P>Retrieves the device driver version number. 

<P><B>Return Value:</B> <P>Returns the driver version. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020c00">getLineCapabilities</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getLineCapabilities();
</FONT></PRE>
<P><P>Retrieves the line capabilities of the device. 

<P><B>Return Value:</B> <P>Returns one or a combination of the following line capabilities flags: 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403001a">LC_NONE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403001b">LC_POLYLINE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030019">LC_MARKER</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403001c">LC_POLYMARKER</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403001e">LC_WIDE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403001d">LC_STYLED</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403001f">LC_WIDESTYLED</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030018">LC_INTERIORS</A>
</FONT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020d00">getLogicalPixelsPerInch</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getLogicalPixelsPerInch();
</FONT></PRE>
<P><P>Retrieves a device's logical pixels per inch. 

<P><B>Return Value:</B> <P>Returns a device's logical pixels per inch. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020e00">getNumberOfBrushes</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getNumberOfBrushes();
</FONT></PRE>
<P><P>Retrieves the number of brushes used by the device. 

<P><B>Return Value:</B> <P>Returns the number of brushes. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304020f00">getNumberOfColors</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getNumberOfColors();
</FONT></PRE>
<P><P>Retrieves the number of colors used by the device. 

<P><B>Return Value:</B> <P>Returns the number of colors. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021000">getNumberOfFonts</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getNumberOfFonts();
</FONT></PRE>
<P><P>Retrieves the number of fonts used by the device. 

<P><B>Return Value:</B> <P>Returns the number of fonts. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021100">getNumberOfMarkers</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getNumberOfMarkers();
</FONT></PRE>
<P><P>Retrieves the number of markers used by the device. 

<P><B>Return Value:</B> <P>Returns the number of markers. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021200">getNumberOfPens</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getNumberOfPens();
</FONT></PRE>
<P><P>Retrieves the number of pens used by the device. 

<P><B>Return Value:</B> <P>Returns the number of pens. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021300">getPaletteReserved</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getPaletteReserved();
</FONT></PRE>
<P><P>Retrieves a reserved device palette. 

<P><B>Return Value:</B> <P>Returns the reserved palette. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021400">getPaletteSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getPaletteSize();
</FONT></PRE>
<P><P>Retrieves a device palette size. 

<P><B>Return Value:</B> <P>Returns the size of the palette. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021500">getPixelRes</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPixelRes();
</FONT></PRE>
<P><P>Retrieves the device's pixel resolution (in pixels per inch). 

<P><B>Return Value:</B> <P>Returns the pixel resolution. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021600">getPlanes</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getPlanes();
</FONT></PRE>
<P><P>Retrieves the number of planes used by the device. 

<P><B>Return Value:</B> <P>Returns the number of planes. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021700">getPolygonCapabilities</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getPolygonCapabilities();
</FONT></PRE>
<P><P>Retrieves the polygon capabilities of the device. 

<P><B>Return Value:</B> <P>Returns one or a combination of the polygon capabilities flags shown in the following table. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030021">PC_NONE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030023">PC_POLYGON</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030025">PC_RECTANGLE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403002b">PC_WINDPOLYGON</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030028">PC_TRAPEZOID</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030026">PC_SCANLINE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030029">PC_WIDE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030027">PC_STYLED</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403002a">PC_WIDESTYLED</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030020">PC_INTERIORS</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030024">PC_POLYPOLYGON</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030022">PC_PATHS</A>
</FONT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021800">getRasterCapabilities</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getRasterCapabilities();
</FONT></PRE>
<P><P>Retrieves the device raster capabilities. 

<P><B>Return Value:</B> <P>Returns one or a combination of the raster capabilities flags shown in the following table. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030036">RC_NONE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403002e">RC_BITBLT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403002c">RC_BANDING</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403003a">RC_SCALING</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403002f">RC_BITMAP64</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030034">RC_GDI20_OUTPUT</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030035">RC_GDI20_STATE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030039">RC_SAVEBITMAP</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030031">RC_DI_BITMAP</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030038">RC_PALETTE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030032">RC_DIBTODEV</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403002d">RC_BIGFONT</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403003b">RC_STRETCHBLT</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030033">RC_FLOODFILL</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403003c">RC_STRETCHDIB</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030037">RC_OP_DX_OUTPUT</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030030">RC_DEVBITS</A>
</FONT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021900">getTechnology</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getTechnology();
</FONT></PRE>
<P><P>Retrieves the device technology. 

<P><B>Return Value:</B> <P>Returns one of the following device technology flags: 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030014">DT_PLOTTER</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030016">DT_RASDISPLAY</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030017">DT_RASPRINTER</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030015">DT_RASCAMERA</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030011">DT_CHARSTREAM</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030013">DT_METAFILE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030012">DT_DISPFILE</A> 
</FONT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000304021a00">getTextCapabilities</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getTextCapabilities();
</FONT></PRE>
<P><P>Retrieves the text capabilities of the device. 

<P><B>Return Value:</B> <P>Returns one or a combination of the text capabilities flags shown in the following table. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030042">TC_OP_CHARACTER</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030043">TC_OP_STROKE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403003d">TC_CP_STROKE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403003e">TC_CR_90</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403003f">TC_CR_ANY</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403004a">TC_SF_X_YINDEP</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030047">TC_SA_DOUBLE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030048">TC_SA_INTEGER</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030046">TC_SA_CONTIN</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030040">TC_EA_DOUBLE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030041">TC_IA_ABLE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403004c">TC_UA_ABLE</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403004b">TC_SO_ABLE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030044">TC_RA_ABLE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_000300030403004d">TC_VA_ABLE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030045">TC_RESERVED</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Device.htm#com_0003000304030049">TC_SCROLLBLT</A>
</FONT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000304030000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003000304030001">BLTALIGNMENT</A></B>
</DT><DD>The preferred blit alignment. 

</DD><DT><B><A NAME="com_0003000304030002">CC_CHORD</A></B>
</DT><DD>A curve capabilities flag that indicates chord arcs are supported. 

</DD><DT><B><A NAME="com_0003000304030003">CC_CIRCLES</A></B>
</DT><DD>A curve capabilities flag that indicates circles are supported. 

</DD><DT><B><A NAME="com_0003000304030004">CC_ELLIPSES</A></B>
</DT><DD>A curve capabilities flag that indicates ellipses are supported. 

</DD><DT><B><A NAME="com_0003000304030005">CC_INTERIORS</A></B>
</DT><DD>A curve capabilities flag that indicates interiors are supported. 

</DD><DT><B><A NAME="com_0003000304030006">CC_NONE</A></B>
</DT><DD>A curve capabilities flag that indicates curves are not supported. 

</DD><DT><B><A NAME="com_0003000304030007">CC_PIE</A></B>
</DT><DD>A curve capabilities flag that indicates pie wedge shapes are supported. 

</DD><DT><B><A NAME="com_0003000304030008">CC_ROUNDRECT</A></B>
</DT><DD>A curve capabilities flag that indicates rounded rectangles are supported. 

</DD><DT><B><A NAME="com_0003000304030009">CC_STYLED</A></B>
</DT><DD>A curve capabilities flag that indicates styled lines are supported. 

</DD><DT><B><A NAME="com_000300030403000a">CC_WIDE</A></B>
</DT><DD>A curve capabilities flag that indicates wide lines are supported. 

</DD><DT><B><A NAME="com_000300030403000b">CC_WIDESTYLED</A></B>
</DT><DD>A curve capabilities flag that indicates wide styled lines are supported. 

</DD><DT><B><A NAME="com_000300030403000c">CP_NONE</A></B>
</DT><DD>A clipping capabilities flag that indicates clipping of output is not supported. 

</DD><DT><B><A NAME="com_000300030403000d">CP_RECTANGLE</A></B>
</DT><DD>A clipping capabilities flag that indicates output is clipped to rectangles. 

</DD><DT><B><A NAME="com_000300030403000e">CP_REGION</A></B>
</DT><DD>A clipping capabilities flag that indicates output is clipped to Regions. 

</DD><DT><B><A NAME="com_000300030403000f">DESKTOPHORZRES</A></B>
</DT><DD>The desktop's horizontal resolution. 

</DD><DT><B><A NAME="com_0003000304030010">DESKTOPVERTRES</A></B>
</DT><DD>The desktop's vertical resolution. 

</DD><DT><B><A NAME="com_0003000304030011">DT_CHARSTREAM</A></B>
</DT><DD>The device technology flag for a character stream. 

</DD><DT><B><A NAME="com_0003000304030012">DT_DISPFILE</A></B>
</DT><DD>The device technology flag for a display file. 

</DD><DT><B><A NAME="com_0003000304030013">DT_METAFILE</A></B>
</DT><DD>The device technology flag for a metafile. 

</DD><DT><B><A NAME="com_0003000304030014">DT_PLOTTER</A></B>
</DT><DD>The device technology flag for a vector plotter (typically used in CAD). 

</DD><DT><B><A NAME="com_0003000304030015">DT_RASCAMERA</A></B>
</DT><DD>The device technology flag for a raster camera. 

</DD><DT><B><A NAME="com_0003000304030016">DT_RASDISPLAY</A></B>
</DT><DD>The device technology flag for a raster display. 

</DD><DT><B><A NAME="com_0003000304030017">DT_RASPRINTER</A></B>
</DT><DD>The device technology flag for a raster printer. 

</DD><DT><B><A NAME="com_0003000304030018">LC_INTERIORS</A></B>
</DT><DD>A line capabilities flag that indicates interiors are supported. 

</DD><DT><B><A NAME="com_0003000304030019">LC_MARKER</A></B>
</DT><DD>A line capabilities flag that indicates marker lines are supported. 

</DD><DT><B><A NAME="com_000300030403001a">LC_NONE</A></B>
</DT><DD>A line capabilities flag that indicates lines are not supported. 

</DD><DT><B><A NAME="com_000300030403001b">LC_POLYLINE</A></B>
</DT><DD>A line capabilities flag that indicates polylines are supported. 

</DD><DT><B><A NAME="com_000300030403001c">LC_POLYMARKER</A></B>
</DT><DD>A line capabilities flag that indicates polylinemarkers are supported. 

</DD><DT><B><A NAME="com_000300030403001d">LC_STYLED</A></B>
</DT><DD>A line capabilities flag that indicates styled lines are supported. 

</DD><DT><B><A NAME="com_000300030403001e">LC_WIDE</A></B>
</DT><DD>A line capabilities flag that indicates wide lines are supported. 

</DD><DT><B><A NAME="com_000300030403001f">LC_WIDESTYLED</A></B>
</DT><DD>A line capabilities flag that indicates wide styled lines are supported. 

</DD><DT><B><A NAME="com_0003000304030020">PC_INTERIORS</A></B>
</DT><DD>A polygonal capabilities flag that indicates interiors are supported. 

</DD><DT><B><A NAME="com_0003000304030021">PC_NONE</A></B>
</DT><DD>A polygonal capabilities flag that indicates polygonals are not supported. 

</DD><DT><B><A NAME="com_0003000304030022">PC_PATHS</A></B>
</DT><DD>A polygonal capabilities flag that indicates paths are supported. 

</DD><DT><B><A NAME="com_0003000304030023">PC_POLYGON</A></B>
</DT><DD>A polygonal capabilities flag that indicates polygons are supported. 

</DD><DT><B><A NAME="com_0003000304030024">PC_POLYPOLYGON</A></B>
</DT><DD>A polygonal capabilities flag that indicates poly-polygons are supported. 

</DD><DT><B><A NAME="com_0003000304030025">PC_RECTANGLE</A></B>
</DT><DD>A polygonal capabilities flag that indicates rectangles are supported. 

</DD><DT><B><A NAME="com_0003000304030026">PC_SCANLINE</A></B>
</DT><DD>A polygonal capabilities flag that indicates scan lines are supported. 

</DD><DT><B><A NAME="com_0003000304030027">PC_STYLED</A></B>
</DT><DD>A polygonal capabilities flag that indicates styled borders are supported. 

</DD><DT><B><A NAME="com_0003000304030028">PC_TRAPEZOID</A></B>
</DT><DD>A polygonal capabilities flag that indicates trapezoids are supported. 

</DD><DT><B><A NAME="com_0003000304030029">PC_WIDE</A></B>
</DT><DD>A polygonal capabilities flag that indicates wide borders are supported. 

</DD><DT><B><A NAME="com_000300030403002a">PC_WIDESTYLED</A></B>
</DT><DD>A polygonal capabilities flag that indicates wide styled borders are supported. 

</DD><DT><B><A NAME="com_000300030403002b">PC_WINDPOLYGON</A></B>
</DT><DD>A polygonal capabilities flag that indicates winding polygonals are supported. 

</DD><DT><B><A NAME="com_000300030403002c">RC_BANDING</A></B>
</DT><DD>A raster capabilities flag that indicates the device requires banding support. 

</DD><DT><B><A NAME="com_000300030403002d">RC_BIGFONT</A></B>
</DT><DD>A raster capabilities flag that indicates the device supports fonts greater than 64K. 

</DD><DT><B><A NAME="com_000300030403002e">RC_BITBLT</A></B>
</DT><DD>A raster capabilities flag that indicates the device can transfer bitmaps. 

</DD><DT><B><A NAME="com_000300030403002f">RC_BITMAP64</A></B>
</DT><DD>A raster capabilities flag that indicates the device can support bitmaps larger than 64K. 

</DD><DT><B><A NAME="com_0003000304030030">RC_DEVBITS</A></B>
</DT><DD>A raster capabilities flag that indicates the device supports device bitmaps. 

</DD><DT><B><A NAME="com_0003000304030031">RC_DI_BITMAP</A></B>
</DT><DD>A raster capabilities flag that indicates the device supports <B>setDIBits</B> and <B>getDIBits</B> Windows functions. 

</DD><DT><B><A NAME="com_0003000304030032">RC_DIBTODEV</A></B>
</DT><DD>A raster capabilities flag that indicates the device supports the <B>SetDIBitsToDevice</B> and <B>getDIBitsToDevice</B> Windows function. 

</DD><DT><B><A NAME="com_0003000304030033">RC_FLOODFILL</A></B>
</DT><DD>A raster capabilities flag that indicates the device supports flood fill operations. 

</DD><DT><B><A NAME="com_0003000304030034">RC_GDI20_OUTPUT</A></B>
</DT><DD>A raster capabilities flag that indicates the device supports Windows version 2.0 features. 

</DD><DT><B><A NAME="com_0003000304030035">RC_GDI20_STATE</A></B>
</DT><DD>A raster capabilities flag that indicates the device includes a state block in the device context. 

</DD><DT><B><A NAME="com_0003000304030036">RC_NONE</A></B>
</DT><DD>A raster capabilities flag that indicates the device has no raster capabilities. 

</DD><DT><B><A NAME="com_0003000304030037">RC_OP_DX_OUTPUT</A></B>
</DT><DD>A raster capabilities flag that indicates the device supports device opaque and dx arrays. 

</DD><DT><B><A NAME="com_0003000304030038">RC_PALETTE</A></B>
</DT><DD>A raster capabilities flag that specifies a palette-based device. 

</DD><DT><B><A NAME="com_0003000304030039">RC_SAVEBITMAP</A></B>
</DT><DD>A raster capabilities flag that indicates the device can save bitmaps locally. 

</DD><DT><B><A NAME="com_000300030403003a">RC_SCALING</A></B>
</DT><DD>A raster capabilities flag that indicates the device supports scaling. 

</DD><DT><B><A NAME="com_000300030403003b">RC_STRETCHBLT</A></B>
</DT><DD>A raster capabilities flag that indicates the device supports <B>StretchBlt</B> operations. 

</DD><DT><B><A NAME="com_000300030403003c">RC_STRETCHDIB</A></B>
</DT><DD>A raster capabilities flag that indicates the device supports the <B>StretchDIBits</B> Windows function. 

</DD><DT><B><A NAME="com_000300030403003d">TC_CP_STROKE</A></B>
</DT><DD>A text capabilities flag that indicates the device can clip device fonts to a pixel boundary. 

</DD><DT><B><A NAME="com_000300030403003e">TC_CR_90</A></B>
</DT><DD>A text capabilities flag that indicates 90-degree character rotation is supported. Fonts are rotated only 90 degrees at a time. 

</DD><DT><B><A NAME="com_000300030403003f">TC_CR_ANY</A></B>
</DT><DD>A text capabilities flag that indicates any degree character rotation is supported. 

</DD><DT><B><A NAME="com_0003000304030040">TC_EA_DOUBLE</A></B>
</DT><DD>A text capabilities flag that indicates the device can make device fonts bold. If this bit is not set for printer drivers, the GDI (graphics device interface) attempts to create bold device fonts by printing them twice. 

</DD><DT><B><A NAME="com_0003000304030041">TC_IA_ABLE</A></B>
</DT><DD>A text capabilities flag that indicates the device can make device fonts italic. If this bit is not set, the GDI assumes that italics are not available. 

</DD><DT><B><A NAME="com_0003000304030042">TC_OP_CHARACTER</A></B>
</DT><DD>A text capabilities flag that indicates the device can place device fonts at any pixel location. This is required for any device with device fonts. 

</DD><DT><B><A NAME="com_0003000304030043">TC_OP_STROKE</A></B>
</DT><DD>A text capabilities flag that indicates the device can omit any stroke of a device font. 

</DD><DT><B><A NAME="com_0003000304030044">TC_RA_ABLE</A></B>
</DT><DD>A text capabilities flag that indicates that the GDI should enumerate any raster or TrueType fonts that are available for this device in response to a call to the <B>EnumFonts</B> or <B>EnumFontFamilies</B> Microsoft&#174; Windows&#174; functions. If this bit is not set, GDI-supplied raster or TrueType fonts are not enumerated when these functions are called. 

</DD><DT><B><A NAME="com_0003000304030045">TC_RESERVED</A></B>
</DT><DD>A reserved text capabilities flag. 

</DD><DT><B><A NAME="com_0003000304030046">TC_SA_CONTIN</A></B>
</DT><DD>A text capabilities flag that indicates the device can scale device fonts by any amount, but still preserve the x and y ratios. 

</DD><DT><B><A NAME="com_0003000304030047">TC_SA_DOUBLE</A></B>
</DT><DD>A text capabilities flag that indicates can double the size of device fonts. 

</DD><DT><B><A NAME="com_0003000304030048">TC_SA_INTEGER</A></B>
</DT><DD>A text capabilities flag that the device can scale device fonts in any integer multiple. 

</DD><DT><B><A NAME="com_0003000304030049">TC_SCROLLBLT</A></B>
</DT><DD>A text capabilities flag that indicates text scrolling is not performed with blitting operations. 

</DD><DT><B><A NAME="com_000300030403004a">TC_SF_X_YINDEP</A></B>
</DT><DD>A text capabilities flag that indicates the device can scale device fonts separately in x and y directions. 

</DD><DT><B><A NAME="com_000300030403004b">TC_SO_ABLE</A></B>
</DT><DD>A text capabilities flag that indicates the device can strikeout device fonts. If this bit is not set, GDI creates strikethroughs for device fonts. 

</DD><DT><B><A NAME="com_000300030403004c">TC_UA_ABLE</A></B>
</DT><DD>A text capabilities flag that indicates the device can underline device fonts. If this bit is not set, the GDI creates underlines for device fonts. 

</DD><DT><B><A NAME="com_000300030403004d">TC_VA_ABLE</A></B>
</DT><DD>A text capabilities flag that indicates that GDI should enumerate any vector fonts available for this device in response to a call to the <B>EnumFonts</B> or <B>EnumFontFamilies</B> Windows functions. This is significant for vector devices only (that is, for plotters). Display drivers (which must be able to use raster fonts) and raster printer drivers always enumerate vector fonts, because GDI rasterizes vector fonts before sending them to the driver. 

</DD><DT><B><A NAME="com_000300030403004e">VREFRESH</A></B>
</DT><DD>The current vertical refresh rate of the display device. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
