<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIPermission</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIPermission.htm#com_0003000e15010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIPermission.htm#com_0003000e15020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIPermission.htm#com_0003000e15030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UIAccessRequest.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_secp.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UserFileIOAccess.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.security.permissions</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIPermission</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UIPermission implements <A HREF="IPermission.htm">IPermission</A>, 
            <A HREF="IEncodablePermission.htm">IEncodablePermission</A>
{
  // Fields
  public static final int <A HREF="UIPermission.htm#com_0003000e15030001">ALLOW_CLIPBOARD</A>;
  public static final int <A HREF="UIPermission.htm#com_0003000e15030002">ALLOW_EVENTQUEUEACCESS</A>;
  public static final int <A HREF="UIPermission.htm#com_0003000e15030003">ALLOW_FILEDIALOG</A>;
  public static final int <A HREF="UIPermission.htm#com_0003000e15030004">ALLOW_TOPLEVELWINDOW</A>;

  // Constructors
  public <A HREF="UIPermission.htm#com_0003000e15010100">UIPermission</A>();

  // Methods
  public void <A HREF="UIPermission.htm#com_0003000e15020100">check</A> (Object param);
  public IPermission <A HREF="UIPermission.htm#com_0003000e15020200">combine</A> (IPermission source2);
  public int <A HREF="UIPermission.htm#com_0003000e15020300">compareSet</A> (Object target);
  public IPermission <A HREF="UIPermission.htm#com_0003000e15020400">copy</A>();
  public boolean <A HREF="UIPermission.htm#com_0003000e15020500">decode</A>(String tag, InputStream data);
  public boolean <A HREF="UIPermission.htm#com_0003000e15020600">encode</A>(String tag, OutputStream out);
  public boolean <A HREF="UIPermission.htm#com_0003000e15020700">getClipboardAccess</A>();
  public boolean <A HREF="UIPermission.htm#com_0003000e15020800">getEventQueueAccessAllowed</A>();
  public boolean <A HREF="UIPermission.htm#com_0003000e15020900">getFileDialogsAllowed</A>();
  public boolean <A HREF="UIPermission.htm#com_0003000e15020a00">getTopLevelWindowCreationAllowed</A>();
  public boolean <A HREF="UIPermission.htm#com_0003000e15020b00">getWarningBannersRequired</A>();
  public String <A HREF="UIPermission.htm#com_0003000e15020c00">mapFormat</A>(String format);
  public void <A HREF="UIPermission.htm#com_0003000e15020d00">reset</A>();
  public void <A HREF="UIPermission.htm#com_0003000e15020e00">setClipboardAccess</A>(boolean flag);
  public void <A HREF="UIPermission.htm#com_0003000e15020f00">setEventQueueAccessAllowed</A>(boolean flag);
  public void <A HREF="UIPermission.htm#com_0003000e15021000">setFileDialogsAllowed</A>(boolean flag);
  public void <A HREF="UIPermission.htm#com_0003000e15021100">setTopLevelWindowCreationAllowed</A>(boolean flag);
  public void <A HREF="UIPermission.htm#com_0003000e15021200">setWarningBanners</A>(boolean flag);
  public String[] <A HREF="UIPermission.htm#com_0003000e15021300">supportedFormats</A>();
  public String <A HREF="UIPermission.htm#com_0003000e15021400">toString</A>();
}
</FONT></PRE>
<P>This class represents a permission that controls the ability to use some of the enhanced functionality of the AWT. Specifically, the UI (user interface) permission controls the ability to do the following: 
<UL><LI>Create top-level windows 
<LI>Access the system clipboard 
<LI>Create file dialog boxes 
<LI>Access the AWT event queue 
</UL>
<P>You can also use this permission to determine whether top-level windows require warning banners. 
<P>The <A HREF="StandardSecurityManager.htm">StandardSecurityManager</A> class checks for this permission type when performing the <A HREF="StandardSecurityManager.htm#com_0003000d0c020b00">checkFileDialog</A>, <A HREF="StandardSecurityManager.htm#com_0003000d0c022000">checkSystemClipboardAccess</A>, <A HREF="StandardSecurityManager.htm#com_0003000d0c020400">checkAwtEventQueueAccess</A>, and <A HREF="StandardSecurityManager.htm#com_0003000d0c022200">checkTopLevelWindow</A> operations. 
<P>This class implements the <A HREF="IPermission.htm">IPermission</A> and <A HREF="IEncodablePermission.htm">IEncodablePermission</A> interfaces. 

<P>Also see <A HREF="UIAccessRequest.htm">com.ms.security.permissions.UIAccessRequest</A>



<H3 STYLE="color:#333366"><A NAME="com_0003000e15010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000e15010100">UIPermission</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIPermission();
</FONT></PRE>
<P><P>Creates a new <A HREF="UIPermission.htm">UIPermission</A> instance. The new instance will not allow access to any of the extended AWT functionality. Specific features must be explicitly turned on to enable access. 

</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000e15020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000e15020100">check</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void check (Object param);
</FONT></PRE>
<P><P>Determines if the permission object allows the specified UI operation. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>param</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The security request parameter. It must be an instance of <A HREF="UIAccessRequest.htm">UIAccessRequest</A>. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>SecurityException</B>
 if this permission does not allow the specified operation. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020200">combine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IPermission combine (IPermission source2);
</FONT></PRE>
<P><P>Creates and returns a new <A HREF="UIPermission.htm">UIPermission</A> object that is a combination of the current permission object and the specified permission object. The new object allows access to exactly those resources allowed by either one of the permission objects it was constructed from. 

<P><B>Return Value:</B> <P>Returns the resulting <A HREF="UIPermission.htm">UIPermission</A> object. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>source2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="UIPermission.htm">UIPermission</A> object to combine with. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the specified object to combine with is not an instance of <A HREF="UIPermission.htm">UIPermission</A>. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020300">compareSet</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int compareSet (Object target);
</FONT></PRE>
<P><P>Compares the <A HREF="UIPermission.htm">UIPermission</A> instance with the specified permission object. 

<P><B>Return Value:</B> <P>Returns one of the following constants: 
<UL><LI><A HREF="SetComparison.htm#com_000300141a020001">DISJOINT</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020002">EMPTY</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020006">OVERLAP</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020005">EQUAL</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020007">SUBSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020008">SUPERSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020003">EMPTY_SUBSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020004">EMPTY_SUPERSET</A> 
</UL>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The permission object that the <A HREF="UIPermission.htm">UIPermission</A> instance is compared with. This parameter must be an instance of the <B>UIPermission</B> class. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the specified <B>Object</B> is not an instance of <A HREF="UIPermission.htm">UIPermission</A>. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020400">copy</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IPermission copy();
</FONT></PRE>
<P><P>Retrieves a copy of this <A HREF="UIPermission.htm">UIPermission</A> object. 

<P><B>Return Value:</B> <P>Returns the copy of the <A HREF="UIPermission.htm">UIPermission</A> object. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020500">decode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean decode(String tag, InputStream data);
</FONT></PRE>
<P><P>Decodes the contents of the specified data stream into this permission object. The <I>tag</I> parameter specifies the type of data in the stream. 

<P><B>Return Value:</B> <P>Returns true if the decoding operation succeeded; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The encoding type identifier. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The raw data to construct the object from. The type of data is specified by the <I>tag</I> parameter. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020600">encode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean encode(String tag, OutputStream out);
</FONT></PRE>
<P><P>Encodes the contents of this permission object, and sends the encoded data to the specified stream. The <I>tag</I> parameter specifies the type of encoding that should be used. 

<P><B>Return Value:</B> <P>Returns true if the encoding operation succeeded; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The encoding type identifier. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>out</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The output stream to send the encoded data to. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020700">getClipboardAccess</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean getClipboardAccess();
</FONT></PRE>
<P><P>Determines whether the object indicates permission to access the Clipboard. 

<P><B>Return Value:</B> <P>Returns true if the object indicates permission to access the Clipboard; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020800">getEventQueueAccessAllowed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean getEventQueueAccessAllowed();
</FONT></PRE>
<P><P>Determines whether the permission object indicates the ability to access the AWT event queue. 

<P><B>Return Value:</B> <P>Returns true if the permission object indicates the ability to access the AWT event queue. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020900">getFileDialogsAllowed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean getFileDialogsAllowed();
</FONT></PRE>
<P><P>Determines whether the permission object indicates the ability to create file dialog boxes. 

<P><B>Return Value:</B> <P>Returns true if the permission object indicates the ability to create file dialog boxes; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020a00">getTopLevelWindowCreationAllowed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean getTopLevelWindowCreationAllowed();
</FONT></PRE>
<P><P>Determines whether the permission object indicates permission to create top-level windows. 

<P><B>Return Value:</B> <P>Returns true if the permission object indicates permission to create top-level windows; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020b00">getWarningBannersRequired</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean getWarningBannersRequired();
</FONT></PRE>
<P><P>Determines whether the permission object indicates that top-level windows require warning banners. 

<P><B>Return Value:</B> <P>Returns true if the permission object indicates that top-level windows require warning banners; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020c00">mapFormat</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String mapFormat(String format);
</FONT></PRE>
<P><P>Retrieves a permission-specific tag, given an encoding format. The tag is then used with the encode and decode methods to specify an encoding type. 

<P><B>Return Value:</B> <P>Returns the permission-specific tag that corresponds to the specified format. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>format</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The encoding format to retrieve the tag for. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020d00">reset</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void reset();
</FONT></PRE>
<P><P>Resets the permission object to a state in which it allows no access to any of the special UI behaviors. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020e00">setClipboardAccess</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setClipboardAccess(boolean flag);
</FONT></PRE>
<P><P>Sets the ability to access the system clipboard. If <I>flag</I> is set to true, the permission object will indicate that access to the Clipboard is allowed; otherwise, it will indicate that access to the Clipboard is not allowed. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether access to the Clipboard should be allowed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15020f00">setEventQueueAccessAllowed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setEventQueueAccessAllowed(boolean flag);
</FONT></PRE>
<P><P>Sets the ability to access the AWT event queue. If <I>flag</I> is set to true, the permission object will indicate that access to the AWT event queue is allowed; otherwise, it will indicate that access to the AWT event queue is not allowed. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether access to the AWT event queue should be allowed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15021000">setFileDialogsAllowed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setFileDialogsAllowed(boolean flag);
</FONT></PRE>
<P><P>Sets the ability to use file dialog boxes. If <I>flag</I> is set to true, the permission object will indicate that top-level windows require warning banners; otherwise, it will indicate that top-level windows do not require warning banners. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether top-level windows should require warning banners. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15021100">setTopLevelWindowCreationAllowed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setTopLevelWindowCreationAllowed(boolean flag);
</FONT></PRE>
<P><P>Sets the ability to create a top-level window. If <I>flag</I> is set to true, the permission object will indicate that top-level window creation is allowed; otherwise, it will indicate that top level window creation is not allowed. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether top-level window creation should be allowed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15021200">setWarningBanners</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setWarningBanners(boolean flag);
</FONT></PRE>
<P><P>Sets the ability to display warning banners. If <I>flag</I> is set to true, the permission object will indicate that top-level windows require warning banners; otherwise, it will indicate that top-level windows do not require warning banners. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flag that indicates whether top-level windows should require warning banners. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15021300">supportedFormats</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String[] supportedFormats();
</FONT></PRE>
<P><P>Retrieves the encoding formats that the permission type supports. 

<P><B>Return Value:</B> <P>Returns an array of the supported format identifiers. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e15021400">toString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String toString();
</FONT></PRE>
<P><P>Converts the permission object to a textual representation. 

<P><B>Return Value:</B> <P>Returns the string representation of the permission object. 

</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000e15030000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003000e15030001">ALLOW_CLIPBOARD</A></B>
</DT><DD>Flag that indicates a request for access to the Clipboard. 

</DD><DT><B><A NAME="com_0003000e15030002">ALLOW_EVENTQUEUEACCESS</A></B>
</DT><DD>Flag that indicates a request for access to the AWT event queue. 

</DD><DT><B><A NAME="com_0003000e15030003">ALLOW_FILEDIALOG</A></B>
</DT><DD>Flag that indicates a request for access to file dialog boxes. 

</DD><DT><B><A NAME="com_0003000e15030004">ALLOW_TOPLEVELWINDOW</A></B>
</DT><DD>Flag that indicates a request for the ability to create top level windows. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
