<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a COM Object From Java</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Low-Level Java/COM Integration"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Using_a_COM_Object.htm#javacom_0008000302010000">Importing a COM Class Using the Jactivex Tool</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Using_a_COM_Object.htm#javacom_0008000302040000">Using a COM Object in Your Java Code</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="365" VALIGN="bottom"><IMG SRC="art/jnative2.gif" WIDTH="365" HEIGHT="27"  BORDER=0 ALT="Java & Native Code"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom">&nbsp;</TD><TD ALIGN="center" VALIGN="bottom"><A HREF="javacom.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="javacom.htm"><IMG SRC="art/homenrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Java/Com"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="Implementing_COM_Objects.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="365" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Low-Level Java/COM Integration</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">&nbsp;</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Java/Com</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Using a COM Object From Java</H2>
<P>The jactivex tool allows you to load and invoke OLE Automation objects directly from your Java source. There is also some limited support for types not supported by Automation using the <A href="marshal.htm">Custom Marshaling</A> feature. 

This section includes the following topics:
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="javacom.htm#javacom_0008000301010000">New Features</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I></I>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Using_a_COM_Object.htm#javacom_0008000302010000">Importing a COM Class Using the Jactivex Tool</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I></I>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I></I> 
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="Using_a_COM_Object.htm#javacom_0008000302040000">Using a COM Object in Your Java Code</A> 
</FONT></TD></TABLE>
<H3 STYLE="color:#333366"><A NAME="javacom_0008000302010000">Importing a COM Class Using the Jactivex Tool</A></H3><P>To use a COM class from Java, you must first import it into Java using the jactivex command-line tool. The jactivex tool, when used with the /javatlb switch, generates .java files for the classes and interfaces described by a type library. These .java files, once compiled into .class files, allow Java programs to use COM services. 

<P>The typical way to use the jactivex tool to import a COM class is as follows:

<PRE><FONT FACE="Courier" SIZE="2">
&#009;&#009;jactivex /javatlb filename
</FONT></PRE>
<P>where <I>filename</I> is the name of the type library that defines the class that you want to import. The filename should have one of the following extensions: .tlb, .olb, .ocx, .dll, or .exe. 

<P>Suppose you ran jactivex using the following command:

<PRE><FONT FACE="Courier" SIZE="2">
&#009;&#009;jactivex /javatlb  widgets.tlb
</FONT></PRE>
<P>This command first creates a \Widgets subdirectory underneath the trusted library directory specified by the registry key HKEY_LOCAL_MACHINE\Software\Microsoft\Java VM\TrustedLibsDirectory. If the trusted library directory is \Windows\Java\Trustlib, the preceding command creates the directory \Windows\Java\Trustlib\Widgets, and fills it with .java files&#151;one for each class, structure, enumeration, and interface described by the widgets.tlb type library. If the type library contains an <FONT FACE="Courier New">importlib</FONT> statement, jactivex creates a separate Java package in a separate directory for the imported type library. 

<P>For more information about installing and using the jactivex tool, see the description of jactivex in the <A href="jactivex.htm">Introduction to Jactivex</A> section of the Tools article.


<H3 STYLE="color:#333366"><A NAME="javacom_0008000302040000">Using a COM Object in Your Java Code</A></H3><P>The following example is presented to help you understand how to use COM objects in your code. Suppose comserver.dll, which defines a <B>CComBeeper</B> class and an <B>IComBeeper</B> interface, is registered as having type library information. Running the jactivex tool (with the /javatlb switch) on comserver.DLL would create a package named comserver, containing the Java class <B>CComBeeper</B> and the Java interface <B>IComBeeper</B>. 

<P>Once you've run jactivex on comserver.dll, you can use the import statement in your Java source code to easily refer to classes in the comserver package. For example:

<PRE><FONT FACE="Courier" SIZE="2">
import comserver.*;   // import comserver package 
</FONT></PRE>
<P>This statement is identical to Java's syntax for importing an entire package. It is not strictly necessary, however. In Java, any class can be referenced using its fully qualified name (for example, <B>java.awt.Canvas</B>), as long as a class fitting that name can be found when searching the class path. The <FONT FACE="Courier New">import</FONT> statement allows you to refer to the class using its short name (for example,<B>Canvas</B>). 

<P>The same rule applies to importing COM classes. The import statement is not required to use the COM class. It simply allows the class to be referenced using its short name. Any COM class can always be referenced using its fully qualified name. 

<P>Instead of importing the entire package, you could explicitly import individual classes within a type library. To import individual classes, use the following syntax, which is identical to Java's syntax for importing a single class:

<PRE><FONT FACE="Courier" SIZE="2">
import comserver.IComBeeper;  
import comserver.CComBeeper;  
</FONT></PRE>
<P>The Java classes that wrap COM classes can be used the same way you use other Java classes. For example, the following code declares a reference of type <B>IComBeeper</B>, initializes it by creating an instance of the COM class <B>CComBeeper</B>, gets and sets the value of a property of the object, and then calls two methods on the object: 

<PRE><FONT FACE="Courier" SIZE="2">
IComBeeper testBeep = (IComBeeper)new CComBeeper();
int myTone = testBeep.getSound();
testBeep.putSound(64);
testBeep.Beep();
</FONT></PRE>
<P>Because <B>CComBeeper</B> is a COM class, you must use one of its interfaces to manipulate an instance of the class. COM does not support accessing properties or methods on a class independently from its interfaces. For example, the following statements would be legal Java code, but will cause errors when used with a COM class:

<PRE><FONT FACE="Courier" SIZE="2">
CComBeeper testBeep = new CComBeeper(); // Don't do with COM class.
int myTone = testBeep.getSound();       // Causes runtime error with COM class.
</FONT></PRE>
<P><B>Note</B>  An important restriction on using Java classes that wrap COM classes is that you cannot use an instance of the class directly; you must use the instance through an interface. However, if you generate the .java files by using the jactivex tool with its /javatlb /xi option, you can call methods on the object directly without first casting to an interface pointer. For more information on using the jactivex tool, see the <A href="jactivex.htm">Introduction to Jactivex</A>.
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Top"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
