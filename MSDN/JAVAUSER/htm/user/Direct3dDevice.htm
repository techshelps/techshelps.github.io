<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Direct3dDevice</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Direct3dDevice.htm#com_0003000621010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="Direct3d.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A href="def_dirx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="Direct3dExecuteBuffer.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.directX</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class Direct3dDevice</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class Direct3dDevice implements <A HREF="IDirect3dDevice.htm">IDirect3dDevice</A>
{
  // Methods
  public void <A HREF="Direct3dDevice.htm#com_0003000621010100">addViewport</A>(Direct3dViewport vport);
  public void <A HREF="Direct3dDevice.htm#com_0003000621010200">beginScene</A>();
  public Direct3dExecuteBuffer <A HREF="Direct3dDevice.htm#com_0003000621010300">createExecuteBuffer</A>(
        D3dExecuteBufferDesc ebufDesc);
  public int <A HREF="Direct3dDevice.htm#com_0003000621010400">createMatrix</A>();
  public void <A HREF="Direct3dDevice.htm#com_0003000621010500">deleteMatrix</A>(int hdl);
  public void <A HREF="Direct3dDevice.htm#com_0003000621010600">deleteViewport</A>(Direct3dViewport vport);
  public void <A HREF="Direct3dDevice.htm#com_0003000621010700">endScene</A>();
  public void <A HREF="Direct3dDevice.htm#com_0003000621010800">enumTextureFormats</A>(IEnumTextureFormatsCallback fn,
        IUnknown args);
  public void <A HREF="Direct3dDevice.htm#com_0003000621010900">execute</A>(Direct3dExecuteBuffer eb,
        Direct3dViewport vp, int flags);
  public void <A HREF="Direct3dDevice.htm#com_0003000621010a00">getCaps</A>(D3dDeviceDesc hwDesc, D3dDeviceDesc helDesc);
  public Direct3d <A HREF="Direct3dDevice.htm#com_0003000621010b00">getDirect3D</A>();
  public void <A HREF="Direct3dDevice.htm#com_0003000621010c00">getMatrix</A>(int hdl, D3dMatrix mat);
  public void <A HREF="Direct3dDevice.htm#com_0003000621010d00">getPickRecords</A>(int[] flags, D3dPickRecord val);
  public void <A HREF="Direct3dDevice.htm#com_0003000621010e00">getStats</A>(D3dStats stat);
  public void <A HREF="Direct3dDevice.htm#com_0003000621010f00">initialize</A>(Direct3d dev, _Guid g,
        D3dDeviceDesc devDesc);
  public Direct3dViewport <A HREF="Direct3dDevice.htm#com_0003000621011000">nextViewport</A>(Direct3dViewport vp1,
        int flags);
  public void <A HREF="Direct3dDevice.htm#com_0003000621011100">pick</A>(Direct3dExecuteBuffer eb,
        Direct3dViewport vport, int flags, D3dRect rectangle);
  public void <A HREF="Direct3dDevice.htm#com_0003000621011200">setMatrix</A>(int hdl, D3dMatrix mat);
  public void <A HREF="Direct3dDevice.htm#com_0003000621011300">swapTextureHandles</A>(Direct3dTexture tex1,
        Direct3dTexture tex2);
}
</FONT></PRE>
<P>Applications use the methods of the <B>Direct3dDevice</B> class to retrieve and set the capabilities of Microsoft&#174; Direct3D&#174; devices. 

<H3 STYLE="color:#333366"><A NAME="com_0003000621010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000621010100">addViewport</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addViewport(Direct3dViewport vport);
</FONT></PRE>
<P><P>Adds the specified viewport to the list of viewport objects associated with the device. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vport</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The viewport object that should be associated with this <A HREF="Direct3dDevice.htm">Direct3dDevice</A> object. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010200">beginScene</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void beginScene();
</FONT></PRE>
<P><P>Begins a scene. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>Applications must call this method before performing any rendering, and must call <A HREF="Direct3dDevice.htm#com_0003000621010700">endScene</A> when rendering is complete. 
<P><B>See Also:</B> <A HREF="Direct3dDevice.htm#com_0003000621010700">endScene</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010300">createExecuteBuffer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dExecuteBuffer createExecuteBuffer(
        D3dExecuteBufferDesc ebufDesc);
</FONT></PRE>
<P><P>Allocates an execute buffer for a display list. The list may be read by hardware DMA into VRAM for processing. All display primitives in the buffer that have indices to vertices must also have those vertices in the same buffer. 
<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dExecuteBuffer.htm">Direct3dExecuteBuffer</A> if successful; otherwise, null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ebufDesc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes the <A HREF="Direct3dExecuteBuffer.htm">Direct3dExecuteBuffer</A> object to be created. The call will fail if a buffer of at least the specified size cannot be created. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The <A HREF="D3dExecuteBufferDesc.htm">D3dExecuteBufferDesc</A> object describes the execute buffer to be created. At a minimum, the application must specify the size required. If the application specifies DEBCAPS_VIDEO_MEMORY in the capabilities field, Direct3D will attempt to keep the execute buffer in video memory. 
<P>The application can use the <A HREF="Direct3dExecuteBuffer.htm#com_0003000622010900">lock</A> method to request that the memory be moved. When this method returns, it will adjust the contents of the <A HREF="D3dExecuteBufferDesc.htm">D3dExecuteBufferDesc</A> object to indicate whether the data resides in system or video memory. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010400">createMatrix</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int createMatrix();
</FONT></PRE>
<P><P>Creates a matrix. 

<P><B>Return Value:</B> <P>Returns a handle to the matrix that is created. The call will fail if a buffer of at least the size of the matrix cannot be created. 

<P><B>See Also:</B> <A HREF="Direct3dDevice.htm#com_0003000621010500">deleteMatrix</A>, <A HREF="Direct3dDevice.htm#com_0003000621011200">setMatrix</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010500">deleteMatrix</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteMatrix(int hdl);
</FONT></PRE>
<P><P>Deletes a matrix handle. This matrix handle must have been created by using the <A HREF="Direct3dDevice.htm#com_0003000621010400">createMatrix</A> method. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hdl</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Matrix handle to be deleted. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dDevice.htm#com_0003000621010400">createMatrix</A>, <A HREF="Direct3dDevice.htm#com_0003000621011200">setMatrix</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010600">deleteViewport</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteViewport(Direct3dViewport vport);
</FONT></PRE>
<P><P>Removes the specified viewport from the list of viewport objects associated with the device. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vport</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A viewport object that should be disassociated with this <A HREF="Direct3dDevice.htm">Direct3dDevice</A> object. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010700">endScene</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void endScene();
</FONT></PRE>
<P><P>Ends a scene that was begun by calling the <A HREF="Direct3dDevice.htm#com_0003000621010200">beginScene</A> method. 

<P><B>Return Value:</B> <P>No return value. 

<P><B>See Also:</B> <A HREF="Direct3dDevice.htm#com_0003000621010200">beginScene</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010800">enumTextureFormats</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void enumTextureFormats(IEnumTextureFormatsCallback fn,
        IUnknown args);
</FONT></PRE>
<P><P>Queries the current driver for a list of supported texture formats. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fn</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Callback interface containing the function that the enumeration procedure will call for each texture format. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>args</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application-defined data passed to the callback function. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010900">execute</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void execute(Direct3dExecuteBuffer eb, Direct3dViewport vp,
        int flags);
</FONT></PRE>
<P><P>Executes a buffer. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>eb</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The Direct3dExecute buffer to be executed. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dViewport.htm">Direct3dViewport</A> object that describes the transformation context, into which the execute buffer will be rendered. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A value of <A HREF="DirectXConstants.htm">D3DEXECUTE_</A> type, specifying whether objects in the buffer should be clipped. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010a00">getCaps</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getCaps(D3dDeviceDesc hwDesc, D3dDeviceDesc helDesc);
</FONT></PRE>
<P><P>Retrieves the capabilities of the <A HREF="Direct3dDevice.htm">Direct3dDevice</A> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hwDesc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dDeviceDesc.htm">D3dDeviceDesc</A> object that receives the hardware features of the device. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>helDesc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dDeviceDesc.htm">D3dDeviceDesc</A> object that receives the software emulation being provided. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method does not retrieve the capabilities of the display device. To retrieve this information, use the <A HREF="DirectDraw.htm#com_0003000640010c00">getCaps</A> method. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010b00">getDirect3D</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3d getDirect3D();
</FONT></PRE>
<P><P>Retrieves the current <A HREF="Direct3d.htm">Direct3d</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3d.htm">Direct3d</A> object if successful; otherwise, returns null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010c00">getMatrix</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getMatrix(int hdl, D3dMatrix mat);
</FONT></PRE>
<P><P>Retrieves a matrix from a matrix handle. This matrix handle must have been created by using the <A HREF="Direct3dDevice.htm#com_0003000621010400">createMatrix</A> method. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hdl</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Handle of the matrix to be retrieved. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>mat</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dMatrix.htm">D3dMatrix</A> object that receives the matrix. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dDevice.htm#com_0003000621010400">createMatrix</A>, <A HREF="Direct3dDevice.htm#com_0003000621010500">deleteMatrix</A>, <A HREF="Direct3dDevice.htm#com_0003000621011200">setMatrix</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010d00">getPickRecords</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getPickRecords(int[] flags, D3dPickRecord val);
</FONT></PRE>
<P><P>Retrieves the pick records for a device. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Valid flags for this method. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dPickRecord.htm">D3dPickRecord</A> object that receives a pick record. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010e00">getStats</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getStats(D3dStats stat);
</FONT></PRE>
<P><P>Retrieves statistics about a device. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>stat</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dStats.htm">D3dStats</A> object that receives the statistics. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621010f00">initialize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void initialize(Direct3d dev, _Guid g, D3dDeviceDesc devDesc);
</FONT></PRE>
<P><P>Initializes a <A HREF="Direct3dDevice.htm">Direct3dDevice</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dev</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The Direct3D device to use as an initializer. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The globally unique identifier (GUID) used as the interface identifier. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>devDesc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dDeviceDesc.htm">D3dDeviceDesc</A> object describing the <A HREF="Direct3dDevice.htm">Direct3dDevice</A> object to be initialized. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621011000">nextViewport</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dViewport nextViewport(Direct3dViewport vp1, int flags);
</FONT></PRE>
<P><P>Enumerates the viewports associated with the device. 

<P><B>Return Value:</B> <P>Returns the next <A HREF="Direct3dViewport.htm">Direct3dViewport</A> object in the list of viewports associated with this <B>Direct3DDevice</B> object if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vpl</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A viewport in the list of viewports associated with this <A HREF="Direct3dDevice.htm">Direct3dDevice</A> object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A value of <A HREF="DirectXConstants.htm">D3DNEXT_</A> type, specifying which viewport to retrieve from the list of viewports. The default setting is <B>D3DNEXT_NEXT</B>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621011100">pick</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void pick(Direct3dExecuteBuffer eb, Direct3dViewport vport,
        int flags, D3dRect rectangle);
</FONT></PRE>
<P><P>Executes a buffer without performing any rendering, but returns a z-ordered list of offsets to the primitives that cover the rectangle specified by <I>Rect</I>. 
<P>This call fails if the <A HREF="Direct3dExecuteBuffer.htm">Direct3dExecuteBuffer</A> object is locked. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>eb</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An execute buffer from which the z-ordered list is retrieved. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vport</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A viewport in the list of viewports associated with this <A HREF="Direct3dDevice.htm">Direct3dDevice</A> object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No flags are currently defined for this method. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Rect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dRect.htm">D3dRect</A> object specifying the range of device coordinates to be picked. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the <A HREF="D3dRect.htm">x1</A> and <A HREF="D3dRect.htm">x2</A> fields of the object specified in the <I>Rect</I> parameter are equal, and the <A HREF="D3dRect.htm">y1</A> and <A HREF="D3dRect.htm">y2</A> members are equal, a single pixel is used for picking. The coordinates are specified in device-pixel space. 
<P>All <A HREF="Direct3dExecuteBuffer.htm">Direct3dExecuteBuffer</A> objects must be attached to a <A HREF="Direct3dDevice.htm">Direct3dDevice</A> object for this method to succeed. 
<P><B>See Also:</B> <A HREF="Direct3dDevice.htm#com_0003000621010d00">getPickRecords</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621011200">setMatrix</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setMatrix(int hdl, D3dMatrix mat);
</FONT></PRE>
<P><P>Applies a matrix to a matrix handle. This matrix handle must have been created by using the <A HREF="Direct3dDevice.htm#com_0003000621010400">createMatrix</A> method. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hdl</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Matrix handle to be set. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>mat</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dMatrix.htm">D3dMatrix</A> object that describes the matrix to be set. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Transformations inside the execute buffer include a handle of a matrix. The <B>setMatrix</B> method enables an application to change this matrix without having to lock and unlock the execute buffer. 
<P><B>See Also:</B> <A HREF="Direct3dDevice.htm#com_0003000621010400">createMatrix</A>, <A HREF="Direct3dDevice.htm#com_0003000621010c00">getMatrix</A>, <A HREF="Direct3dDevice.htm#com_0003000621010500">deleteMatrix</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000621011300">swapTextureHandles</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void swapTextureHandles(Direct3dTexture tex1, Direct3dTexture tex2);
</FONT></PRE>
<P><P>Swaps two texture handles. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tex1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The texture to be swapped. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tex2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The texture to be swapped. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is useful when an application is changing all the textures in a complicated object. 
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
