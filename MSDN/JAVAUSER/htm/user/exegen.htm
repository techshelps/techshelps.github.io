<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction to Jexegen</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Working with MS VM"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="exegen.htm#exegen_0004000301010000">Basic Operation</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="exegen.htm#exegen_0004000301020000">Reference to Jexegen Command-Line Options</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="exegen.htm#exegen_0004000301030000">Working with Package Names</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="exegen.htm#exegen_0004000301040000">Command Files</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" href="exegen.htm#exegen_0004000301050000">Custom Stubs</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/tools2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Tools"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom">&nbsp;</TD><TD ALIGN="center" VALIGN="bottom"><A href="quickref.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_tool.htm"><IMG SRC="art/homenrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Tools"></A></TD><TD ALIGN="center" VALIGN="bottom"><A href="jvc.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Jexegen Reference</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">&nbsp;</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Tools</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Introduction to Jexegen</H2>
<P>The jexegen tool is used to create Microsoft&#174; Win32&#174; executables from Java applications.
The class files for the application are bound into the executable, and do 
not need to exist anywhere else on the drive. Note that the Microsoft Win32
VM for Java is required to run programs generated by the jexegen tool.


<H3 STYLE="color:#333366"><A NAME="exegen_0004000301010000">Basic Operation</A></H3><P>You must specify on the jexegen command line what class files you want to
include and the name of the main class file. For example, you have a Java
application that consists of three class files&#151;A.class, B.class, and
C.class&#151;and that class A contains the application's entry point (the main method). To generate an executable, you would run the following command
from the directory that contains the class files.

<PRE><FONT FACE="Courier" SIZE="2">jexegen /main:A /out:MyApp.exe A.class B.class C.class</FONT></PRE>
<P>In this case, the jexegen tool creates the file MyApp.exe, which contains 
your Java application.

<P>The jexegen tool uses virtual paths in command line arguments. It is important that the jexegen tool is in your CLASSPATH environment variable, as well as the classes you are working with. If jexegen is not in the CLASSPATH, the utility must be run from the directory where the associated classes are located (in particular, any classes that contain main()), or an application error occurs. For example, the following command will not work.
<PRE><FONT FACE="Courier" SIZE="2">C:\&gt;\SDK-java\bin\jexegen /v c:\_java\BsetEditor\*.class 
   c:\_java\BsetEditor\sun\audio\*.class ...</FONT></PRE>
<P>The jexegen utility is running directly from bin, and absolute paths are used. This results in an "Ignoring file.." message. You can avoid this by adding jexegen to your CLASSPATH and by using virtual paths in command line arguments. Also note that the classes you include on the command line need only be a package name (for more information, see <A href="exegen.htm#exegen_0004000301030000">Working with Package Names</A>), as the following example shows.
<PRE><FONT FACE="Courier" SIZE="2">C:\_java\BsetEditor\&gt;jexegen /V com.ms.ui.*.class ...</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="exegen_0004000301020000">Reference to Jexegen Command-Line Options</A></H3><PRE><FONT FACE="Courier" SIZE="2">
jexegen [options] [@command file] files  </FONT></PRE>
<P>The options are as follows:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/main:<I>classname</I> 
 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">(Required) Sets the name of the main class file. This class must contain
 the public static method <B>main</B>. The name specified on the 
 command line must be the same as the class's internal name; 
 it is case-sensitive and you must separate package names with periods.
 
 <P>For example, if you usually run your application with the 
 command line:
 <P><FONT FACE="Courier New">view MySample.Sample</FONT> 
 <P>then the appropriate switch for jexegen would be:
 <P><FONT FACE="Courier New">/main:MySample.Sample</FONT> 

 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/nomain 

 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates that you do not want to specify a main class file. 
 This option is useful only in conjunction with the /raw or 
 /bindto option.

 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/base:<I>dir</I> 

 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Changes the base directory; used to determine package names of specified class files. When used with the /raw or /bindto option, this option specifies the base directory that file operations are relative to. By default, package names and file operations are determined relative to the current directory. If used more than once on the command line, all /base options are relative to the original (current) directory. 

 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/out:<I>filename</I> 
 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies the name of the output file.

 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/r 

 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates that jexegen should recurse into subdirectories when 
 searching for the specified class files. By default, subdirectories will not be searched.

 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/r- 
 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Used to turn off subdirectory recursion. Only useful if 
 the /R option has already been used.
 
 <P>As an example, consider the following partial command line:
 
 <P><FONT FACE="Courier New"> /r This*.class /r- That*.class </FONT>

 <P>This example command line instructs jexegen to find all class files matching This*.class in the current directory and all subdirectories, and all files matching That*.class only in the current directory. 
 
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/v 
 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Provides detailed output.
 
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/w 
 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The generated executable will not have an associated console window.
 This option will be useful only for graphical applications.
 
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/bindto:<I>stub</I> 

 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies the executable (.exe file) or dynamic-link library (DLL) to bind the class resources to. 
 
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">/raw 
 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Saves resource data to a file and does not generate an executable. The 
 data file generated is of the appropriate format to be used with the
 IJavaExecute2::SetClassSource method.
</FONT></TD></TR></TABLE>
<H3 STYLE="color:#333366"><A NAME="exegen_0004000301030000">Working with Package Names</A></H3><P>Be sure to preserve package names when using the jexegen 
tool. The package names of the classes to be bound into the executable
are determined by the directories in which those class files are located. Therefore, you must run the jexegen tool from a directory above the directory containing the class files. 

<P>For example, a Java application consists of two class files, Main.class and Helper.class, which exist in a package called Sample. The files are in the c:\classes\Sample directory.

<PRE><FONT FACE="Courier" SIZE="2">
  c:\classes\Sample\Main.class
  c:\classes\Sample\Helper.class
</FONT></PRE>
<P>If the command jexegen /main:Main *.class is run from the c:\classes\sample 
directory, the generated executable will not work correctly: The names of the class files contained within the executable will not reflect their real names. The correct way to build the .exe file is to run jexegen /main:Sample.Main Sample/*.class from the c:\classes directory. To verify that the correct names are included, you can use the /v option to observe the names of class files that are stored in the executable.

<P>By default, the current directory is used as the base directory. Package
names are determined relative to the base directory. You can use the /base option to specify an alternative base directory.


<H3 STYLE="color:#333366"><A NAME="exegen_0004000301040000">Command Files</A></H3><P>As an alternative to specifying all the class files and options on the jexegen
command line, you can use a command file. A command file contains a list of
options and file specifications, one per line. For example, this 
command line:

<PRE><FONT FACE="Courier" SIZE="2">C:\..\&gt;jexegen /main:myapp /out:myapp.exe 
             Myapp.class Fido.class Fido2.class Fido3.class </FONT></PRE>
<P>can be replaced with the following command line:

<PRE><FONT FACE="Courier" SIZE="2"> jexegen @myapp.dat </FONT></PRE>
<P>where the contents of the file myapp.dat is:

<PRE><FONT FACE="Courier" SIZE="2">
  /main:myapp
  /out:myapp.exe
  Myapp.class
  Fido.class
  Fido2.class
  Fido3.class
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="exegen_0004000301050000">Custom Stubs</A></H3><P>The jexegen tool works by binding the class files to a small stub program. 
This stub simply instantiates the Microsoft VM, and uses the IJavaExecute2::SetClassSource
method to tell the VM that it should look for class files inside the executable.

<P>If the built-in stub is insufficient for your needs, you can provide your own 
stub file. For example, a custom stub could contain version information or 
a custom icon. You can use the /bindto option of the jexegen tool to add the
class resource data to your own stub program. Alternatively, you can use the /raw option and 
reference the resulting data file from your program's resource script.

<P>The SDK for Java includes the source code for a sample jexegen stub.

<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Top"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
