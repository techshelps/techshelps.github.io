<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Root</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Root.htm#com_0003000705010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="ParameterCountMismatchError.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_pdll.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="Win32Exception.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.dll</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class Root</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class Root
{
  // Methods
  public static int <A HREF="Root.htm#com_0003000705010100">alloc</A>(Object object);
  public static void <A HREF="Root.htm#com_0003000705010200">free</A>(int root);
  public static Object <A HREF="Root.htm#com_0003000705010300">get</A>(int root);
}
</FONT></PRE>
<P>This class allows you to create an opaque 32-bit root handle to any Java object. A root handle prevents the contained Java object from being reclaimed by garbage collection, so that the Java object can be safely stored in native data structures. This technique is valuable when using DLL functions that take callback parameters. 
<P>For example, when a callback will be used across function calls, you need to protect the <A HREF="Callback.htm">Callback</A> object from being reclaimed. You should wrap the <B>Callback</B> inside a root handle and then explicitly free the root handle when you no longer need the <B>Callback</B>. 
<P>Suppose you have declared a class called <B>EnumWindowsProc</B> that extends <A HREF="Callback.htm">Callback</A> and that will be used across function calls. To protect an instance of this class from garbage collection, you could write the following code. 
<PRE><FONT FACE="Courier" SIZE="2">
EnumWindowsProc MyCallback = new EnumWindowsProc;
int rootHandle = Root.alloc(MyCallback); 
// use the Callback across function calls
// until you're done
Root.free(rootHandle);
</FONT></PRE>
<P>For more information about declaring and invoking DLL functions that take callbacks, see the <A HREF="Marshaling.htm#jdirect_00070002030a0000">Callbacks</A> section of the Microsoft&#174; J/Direct&#153; article. 

<H3 STYLE="color:#333366"><A NAME="com_0003000705010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000705010100">alloc</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int alloc(Object object);
</FONT></PRE>
<P><P>Creates a new root handle. 
<P><B>Note</B>  Root handles require explicit deallocation using the <A HREF="Root.htm#com_0003000705010200">free</A> method. The object will not be reclaimed by the garbage collector until the <B>free</B> method is called. 
<P><B>Return Value:</B> <P>Returns a new root handle that protects the object from garbage collection. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>object</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object that the root handle is created for. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000705010200">free</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static void free(int root);
</FONT></PRE>
<P><P>Releases a root handle. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>root</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The handle to release. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000705010300">get</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static Object get(int root);
</FONT></PRE>
<P><P>Extracts the Java object protected by a root handle. 

<P><B>Return Value:</B> <P>Returns the Java object protected by the root handle. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>root</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The handle to dereference. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
