<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Direct3dRMMeshBuilder</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Direct3dRMMeshBuilder.htm#com_0003000633010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="Direct3dRMMesh.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A href="def_dirx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="Direct3dRMObject.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.directX</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class Direct3dRMMeshBuilder</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class Direct3dRMMeshBuilder implements 
            <A HREF="IDirect3dRMMeshBuilder.htm">IDirect3dRMMeshBuilder</A>
{
  // Methods
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010100">addFace</A>(Direct3dRMFace f);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010200">addFaces</A>(int vCount, D3dVector[] v, int nCount,
        D3dVector[] n, int[] cones);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010300">addFacesAsFloats</A>(int vc, float[] ver, int nc, float[]
        norm, int[] cones);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010400">addFrame</A>(Direct3dRMFrame f);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010500">addMesh</A>(Direct3dRMMesh m);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010600">addMeshBuilder</A>(Direct3dRMMeshBuilder mb);
  public int <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010700">addNormal</A>(float x, float y, float z);
  public int <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010800">addVertex</A>(float x, float y, float z);
  public Direct3dRMFace <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010900">createFace</A>();
  public Direct3dRMFaceArray <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010a00">createFaceArray</A>(int vCount,
        float[] vertices, int nCount, float[] normals,
        int[] cones);
  public Direct3dRMMesh <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010b00">createMesh</A>();
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010c00">generateNormals</A>();
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010d00">getBox</A>(D3dRMBox retv);
  public int <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010e00">getColorSource</A>();
  public Direct3dRMMeshBuilder <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010f00">getd3drmMeshBuilder</A>();
  public int <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011000">getFaceCount</A>();
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011100">getFacedataSize</A>(int[] f_cnt);
  public Direct3dRMFaceArray <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011200">getFaces</A>();
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011300">getNormalsSize</A>(int[] n_cnt);
  public int <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011400">getPerspective</A>();
  public int <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011500">getQuality</A>();
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011600">getTextureCoordinates</A>(int idx, float[] u, float[] v);
  public int <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011700">getVertexColor</A>(int index);
  public int <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011800">getVertexCount</A>();
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011900">getVertices</A>(int[] vc, D3dvector v, int[] nc,
        D3dvector n, int[] fs, int[] fc);
  public int <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011a00">getVerticesSize</A>();
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011b00">loadFromFileByPos</A>(String filename, int position,
        int flags, ILoadTextureCallback c, IUnknown pUser);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011c00">reserveSpace</A>(int v_cnt, int n_cnt, int f_cnt);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011d00">save</A>(String fname, int xFormat, int save);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011e00">scale</A>(float sx, float sy, float sz);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011f00">setColor</A>(int col);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012000">setColorRGB</A>(float red, float green, float blue);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012100">setColorSource</A>(int val);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012200">setMaterial</A>(Direct3dRMMaterial val);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012300">setNormal</A>(int idx, float x, float y, float z);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012400">setPerspective</A>(int persp);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012500">setQuality</A>(int q);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012600">setTexture</A>(Direct3dRMTexture val);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012700">setTextureCoordinates</A>(int idx, float u, float v);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012800">setTextureTopology</A>(int wrap_u, int wrap_v);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012900">setVertex</A>(int idx, float x, float y, float z);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012a00">setVertexColor</A>(int idx, int c);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012b00">setVertexColorRGB</A>(int idx, float r, float g, float b);
  public void <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012c00">translate</A>(float tx, float ty, float tz);
}
</FONT></PRE>
<P>Applications use the methods of the <B>Direct3dRMMeshBuilder</B> class to interact with mesh objects. 
<P>The <B>Direct3dRMMeshBuilder</B> class inherits the following methods from the <A HREF="Direct3dRMObject.htm">Direct3dRMObject</A> class: 
<DL>
<DT><A HREF="Direct3dRMObject.htm">addDestroyCallback</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">duplicate</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">deleteDestroyCallback</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">getAppData</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">getClassName</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">getName</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">setAppData</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">setName</A> 
</DT></DL>
<P>The <B>Direct3dRMMeshBuilder</B> object is obtained by calling the <A HREF="Direct3dRM.htm">createMeshBuilder</A> method. 
<P>There are two ways to add faces to a mesh object. <BR>The recommended way is to use the <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010200">addFaces</A> method. 
<PRE><FONT FACE="Courier" SIZE="2">// Create a mesh builder.
mb = myd3drm.createMeshBuilder();

// Add faces to the mesh.
mb.addFaces(vCount, v, nCount, n, cones);

// Create a material to set for the whole mesh.
material = myd3drm.createMaterial();
mb.setMaterial(material); // This works.
</FONT></PRE>
<P>Another possible way is to use the <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010800">addVertex</A> and <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010700">addNormal</A> methods, then use <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010900">createFace</A> to create a face, and add the vertices and normals to it. Currently, this procedure fails. 
<PRE><FONT FACE="Courier" SIZE="2">// Create a mesh builder.
mb = myd3drm.createMeshBuilder();
// Add four vertices.
mb.addVertex(x, y, x); // ...
// Add four normals.
mb.addNormal(x, y, z); // ...

// Create a face from the mesh builder.
d3drmface = mb.createFace();

// Use the <A HREF="Direct3dRMFace.htm#com_000300062b010200">Direct3dRMFace.addVertexAndNormalIndexed</A> method
// to add the vertex and normals to the face.
d3drmface.addVertexAndNormalIndexed(index, index); // ...

// Create a material to set for the whole mesh.
material = myd3drm.createMaterial();
mb.setMaterial(material); // This faults.
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003000633010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000633010100">addFace</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addFace(Direct3dRMFace f);
</FONT></PRE>
<P><P>Adds a face to a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFace.htm">Direct3dRMFace</A> object to add. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Any one face can exist in only one mesh at a time. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010200">addFaces</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addFaces(int vCount, D3dVector[] v, int nCount, D3dVector[] n,
        int[] cones);
</FONT></PRE>
<P><P>Adds a face to the <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. This method is very similar to <B>addFaces(int, float[], int, float[], int[])</B> except that it uses <A HREF="D3dVector.htm">D3dVector</A> array objects instead of simple float arrays. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vCount</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of vertices to use to create the face. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of vectors that contains the vertices to use to create the face. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nCount</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of normals to use to create the face. If <I>nCount</I> is 0, then the data is formatted as follows: 
<PRE><FONT FACE="Courier" SIZE="2">3, 1, 2, 3 //(v[1], v[2], and v[3] make this triangle)
3, 1, 2, 5 //(v[1], v[2], and v[5] make this triangle)
4, 7, 4, 0, 1 //(v[7], v[4], 4[0], and v[1] make this quadrilateral)</FONT></PRE>
<P>However, if <I>nCount</I> is not 0, then the data is as follows: 
<PRE><FONT FACE="Courier" SIZE="2">3, 1, 1, 2, 2, 3, 3 // normals are interlaced.
3, 1, 1, 2, 2, 5, 5
4, 7, 7, 4, 4, 0, 0, 1, 1</FONT></PRE>
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>n</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of vectors that contains the normals used to create the face. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cones</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Array variable that contains the data associated with the face. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010300">addFacesAsFloats</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addFacesAsFloats(int vc, float[] ver, int nc, float[] norm,
        int[] cones);
</FONT></PRE>
<P><P>Adds a face to the <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Number of vertices. This is one-third the size of the float array. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ver</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A float array variable that contains the vertices to use to create the face. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Number of normals. This is one-third the size of the float array. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>norm</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A float array variable that contains the normals to use to create the face. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cones</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Array variable that contains the data associated with the face. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010400">addFrame</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addFrame(Direct3dRMFrame f);
</FONT></PRE>
<P><P>Adds the contents of a frame to a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to add. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The source frame is not modified or referenced by this operation. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010500">addMesh</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addMesh(Direct3dRMMesh m);
</FONT></PRE>
<P><P>Adds a mesh to a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>m</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMMesh.htm">Direct3dRMMesh</A> object to add. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010600">addMeshBuilder</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addMeshBuilder(Direct3dRMMeshBuilder mb);
</FONT></PRE>
<P><P>Adds the contents of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object to another <B>Direct3dRMMeshBuilder</B> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>mb</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object to add. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The source <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object is not modified or referenced by this operation. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010700">addNormal</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int addNormal(float x, float y, float z);
</FONT></PRE>
<P><P>Adds a normal to a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>Returns the index of the normal. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the direction of the new normal 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the direction of the new normal 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>z</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the direction of the new normal. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010800">addVertex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int addVertex(float x, float y, float z);
</FONT></PRE>
<P><P>Adds a vertex to a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>Returns the index of the vertex. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the position of the new vertex. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the position of the new vertex. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>z</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the position of the new vertex. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010900">createFace</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMFace createFace();
</FONT></PRE>
<P><P>Creates a new face with no vertices and adds it to a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMFace.htm">Direct3dRMFace</A> object if successful; otherwise, returns null 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010a00">createFaceArray</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMFaceArray createFaceArray(int vCount, float[] vertices,
        int nCount, float[] normals, int[] cones);
</FONT></PRE>
<P><P>Creates a face array for the <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMFaceArray.htm">Direct3dRMFaceArray</A> object if successful; otherwise, null 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vCount</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of vertices. This is one-third the size of the float array. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vertices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">the array variable that contains the vertices used to create the face array. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nCount</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">the number of normals. This is one-third the size of the float array. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>normals</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variable that contains the normals used to create the face array. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cones</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variable that contains the data associated with the face array. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010b00">createMesh</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMMesh createMesh();
</FONT></PRE>
<P><P>Creates a new mesh from a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMMesh.htm">Direct3dRMMesh</A> object if successful; otherwise, returns null 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010c00">generateNormals</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void generateNormals();
</FONT></PRE>
<P><P>Processes the <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object and generates vertex normals that are the average of each vertex's adjoining face normals. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>Averaging the normals of back-to-back faces produces a zero normal. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010d00">getBox</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getBox(D3dRMBox retv);
</FONT></PRE>
<P><P>Retrieves the bounding box containing a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. The bounding box gives the minimum and maximum model coordinates in each dimension. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>retv</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dRMBox.htm">D3dRMBox</A> object that receives the bounding box coordinates. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010e00">getColorSource</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getColorSource();
</FONT></PRE>
<P><P>Retrieves the color source of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. The color source can be either a face or a vertex. 

<P><B>Return Value:</B> <P>Returns a value of color source type. 

<P><B>See Also:</B> <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012100">setColorSource</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633010f00">getd3drmMeshBuilder</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMMeshBuilder getd3drmMeshBuilder();
</FONT></PRE>
<P><P>Retrieves a mesh builder object associated with this object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object if successful; otherwise, returns null 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011000">getFaceCount</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getFaceCount();
</FONT></PRE>
<P><P>Retrieves the number of faces in a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>Returns the number of faces. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011100">getFacedataSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getFacedataSize(int[] f_cnt);
</FONT></PRE>
<P><P>Retrieves the size of the faces in a <A HREF="Direct3dRMFaceArray.htm">Direct3dRMFaceArray</A> and stores them in the int array <I>f_cnt</I>. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f_cnt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array that stores the sizes of the faces that are measured. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011200">getFaces</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMFaceArray getFaces();
</FONT></PRE>
<P><P>Retrieves the faces of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMFaceArray.htm">Direct3dRMFaceArray</A> object if successful; otherwise, returns null 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011300">getNormalsSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getNormalsSize(int[] n_cnt);
</FONT></PRE>
<P><P>Retrieves the size of the normals in a <A HREF="Direct3dRMFaceArray.htm">Direct3dRMFaceArray</A> and stores them in the int array <I>n_cnt</I>. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>n_cnt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array that stores the sizes of the faces that are measured. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011400">getPerspective</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getPerspective();
</FONT></PRE>
<P><P>Determines whether perspective correction for a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object is turned on. 

<P><B>Return Value:</B> <P>Returns true if perspective correction is on, otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011500">getQuality</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getQuality();
</FONT></PRE>
<P><P>Retrieves the rendering quality of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>Returns a value that specifies the rendering quality of the mesh. 

<P><B>See Also:</B> <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012500">setQuality</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011600">getTextureCoordinates</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getTextureCoordinates(int idx, float[] u, float[] v);
</FONT></PRE>
<P><P>Retrieves the texture coordinates of a specified vertex in a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the vertex. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>u</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variables that receive the texture coordinates of the vertex. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variables that receive the texture coordinates of the vertex. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012700">setTextureCoordinates</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011700">getVertexColor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getVertexColor(int index);
</FONT></PRE>
<P><P>Retrieves the color of a specified vertex in a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>Returns the color. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the vertex. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012a00">setVertexColor</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011800">getVertexCount</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getVertexCount();
</FONT></PRE>
<P><P>Retrieves the number of vertices in a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>Returns the number of vertices. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011900">getVertices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getVertices(int[] vc, D3dvector v, int[] nc, D3dvector n, int[]
        fs, int[] fc);
</FONT></PRE>
<P><P>Retrieves the vertex, normal, and face data for a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variable that receives the number of vertices. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that receives the vertices for the <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variable that receives the number of normals. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>n</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that receives the normals for the <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fs</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variable that receives the length of the array associated with the <I>fc</I> parameter. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variable that receives the face data for the <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. This data is in the same format as specified in the <B>addFacesToMesh</B> method except that it is null-terminated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011a00">getVerticesSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getVerticesSize();
</FONT></PRE>
<P><P>Retrieves the number of vertices. 

<P><B>Return Value:</B> <P>Returns the number of vertices. 

<P><B>See Also:</B> <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011900">getVertices</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011b00">loadFromFileByPos</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void loadFromFileByPos(String filename, int position, int flags,
        ILoadTextureCallback c, IUnknown pUser);
</FONT></PRE>
<P><P>Loads a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>filename</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file containing the object to be loaded. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>position</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The position of the object to be loaded. The value gives the object's order in the file. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The load options type value. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The callback interface that contains a load texture callback function called to load textures used by an object that require special formatting. This parameter can be null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pUser</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application-defined data passed to the load texture callback function. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, this method loads the first mesh from the file specified by the <I>filename</I> parameter. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011c00">reserveSpace</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void reserveSpace(int v_cnt, int n_cnt, int f_cnt);
</FONT></PRE>
<P><P>Reserves space within a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object for the specified number of vertices, normals, and faces. This allows the system to use memory more efficiently. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v_cnt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of vertices to allocate space for. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>n_cnt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of normals to allocate space for. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f_cnt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of faces to allocate space for. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011d00">save</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void save(String fname, int xFormat, int save);
</FONT></PRE>
<P><P>Saves a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fname</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the created file. This file must have a .X filename extension. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>xFormat</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DirectXConstants.htm#com_000300065b01016c">D3DRMXOF_TEXT</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>save</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A value of the save options type. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011e00">scale</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void scale(float sx, float sy, float sz);
</FONT></PRE>
<P><P>Scales a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object by the given scaling factors, parallel to the x-, y-, and z-axes in model coordinates. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The scaling factors that are applied along the x-axis. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">the scaling factors that are applied along the y-axis. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The scaling factors that are applied along the z-axis. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633011f00">setColor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setColor(int col);
</FONT></PRE>
<P><P>Sets all the faces of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object to a given color. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>col</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The color of the faces. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012000">setColorRGB</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setColorRGB(float red, float green, float blue);
</FONT></PRE>
<P><P>Sets all the faces of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object to a given color. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>red</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The red component of the color. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>green</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The green component of the color. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>blue</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The blue component of the color. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012100">setColorSource</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setColorSource(int val);
</FONT></PRE>
<P><P>Sets the color source of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value of color source type that specifies the new color source to use. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method does not exhibit expected behavior under certain circumstances. If you use this method to set colors to faces, then it works as expected. But if you try to set colors for individual vertices, it wont, because face data is still used. To set vertice's colors, call the <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010b00">createMesh</A> method and set individual vertex colors with the <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633012900">setVertex</A> method.
<P><B>See Also:</B> <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633010e00">getColorSource</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012200">setMaterial</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setMaterial(Direct3dRMMaterial val);
</FONT></PRE>
<P><P>Sets the material of all the faces of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMMaterial.htm">Direct3dRMMaterial</A> object to set. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012300">setNormal</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setNormal(int idx, float x, float y, float z);
</FONT></PRE>
<P><P>Sets the normal vector of a specified vertex in a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the normal to be set. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the vector to assign to the specified normal. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the vector to assign to the specified normal. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>z</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the vector to assign to the specified normal. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012400">setPerspective</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPerspective(int persp);
</FONT></PRE>
<P><P>Enables or disables perspective-correct texture-mapping for a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>persp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specify true if the mesh should be texture-mapped with perspective correction, otherwise, specify false. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012500">setQuality</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setQuality(int q);
</FONT></PRE>
<P><P>Sets the rendering quality of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>q</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value that specifies the new rendering quality to use. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011500">getQuality</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012600">setTexture</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setTexture(Direct3dRMTexture val);
</FONT></PRE>
<P><P>Sets the texture of all the faces of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object to set. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012700">setTextureCoordinates</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setTextureCoordinates(int idx, float u, float v);
</FONT></PRE>
<P><P>Sets the texture coordinates of a specified vertex in a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the vertex to be set. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>u</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The texture u coordinate to assign to the specified mesh vertex. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The texture v coordinate to assign to the specified mesh vertex. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011600">getTextureCoordinates</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012800">setTextureTopology</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setTextureTopology(int wrap_u, int wrap_v);
</FONT></PRE>
<P><P>Sets the texture topology of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>wrap_u</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specify true if you want the texture to have a cylindrical topology in the u dimension; otherwise, specify false. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>wrap_v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specify true if you want the texture to have a cylindrical topology in the v dimension; otherwise, specify false. 
<P>You can use any combination of true and false for these parameters. (Both may be true, both may be false, and so on.) 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012900">setVertex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setVertex(int idx, float x, float y, float z);
</FONT></PRE>
<P><P>Sets the position of a specified vertex in a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the vertex to be set. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the position to assign to the specified vertex. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the position to assign to the specified vertex. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>z</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the position to assign to the specified vertex. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012a00">setVertexColor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setVertexColor(int idx, int c);
</FONT></PRE>
<P><P>Sets the color of a specified vertex in a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the vertex to be set. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The color to assign to the specified vertex. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMMeshBuilder.htm#com_0003000633011700">getVertexColor</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012b00">setVertexColorRGB</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setVertexColorRGB(int idx, float r, float g, float b);
</FONT></PRE>
<P><P>Sets the color of a specified vertex in a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the vertex to be set. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>r</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The red component of the color assigned to the specified vertex. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The green component of the color assigned to the specified vertex. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>b</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The blue component of the color assigned to the specified vertex. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000633012c00">translate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void translate(float tx, float ty, float tz);
</FONT></PRE>
<P><P>Adds the specified offsets to the vertex positions of a <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The offset that is added to the x coordinate of each vertex position. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ty</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The offset that is added to the y coordinate of each vertex position. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The offset that is added to the z coordinate of each vertex position. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
