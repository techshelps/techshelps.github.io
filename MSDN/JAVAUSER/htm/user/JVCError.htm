
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction to Jvc</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="Gray">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Working with MS VM"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699"><!--In this topic--></B>
<!--<P><IMG SRC="art\linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="jvc.htm#jvc_0006000401010000">Description of Jvc Syntax</A>-->

</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/tools2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Tools"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="default.htm"><IMG SRC="art/homenrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Tools"></A></TD>
</TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Jvc Reference</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Tools</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>


<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">JVC Errors and Warning Messages</H2>

<P>This page contains a listing of all JVC Errors and <A HREF="JVCError.htm#WARNINGS">Warning</A> Messages produced by this compiler. 

<H3>Error Message Links</H3>
<P><TABLE CELLPADDING=2 CELLSPACING=5 ALIGN="CENTER" VALIGN="TOP">
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0001">J0001</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0021">J0021</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0041">J0041</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0061">J0061</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0081">J0081</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0101">J0101</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0121">J0121</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0141">J0141</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0161">J0161</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0181">J0181</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0201">J0201</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0221">J0221</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0241">J0241</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0002">J0002</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0022">J0022</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0042">J0042</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0062">J0062</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0082">J0082</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0102">J0102</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0122">J0122</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0142">J0142</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0162">J0162</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0182">J0182</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0202">J0202</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0222">J0222</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0242">J0242</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0003">J0003</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0023">J0023</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0043">J0043</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0063">J0063</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0083">J0083</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0103">J0103</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0123">J0123</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0143">J0143</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0163">J0163</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0183">J0183</A></B></FONT></TD>	
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0203">J0203</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0223">J0223</A></B></FONT></TD>

</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0004">J0004</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0024">J0024</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0044">J0044</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0064">J0064</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0084">J0084</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0104">J0104</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0124">J0124</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0144">J0144</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0164">J0164</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0184">J0184</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0204">J0204</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0224">J0224</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0005">J0005</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0025">J0025</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0045">J0045</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0065">J0065</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0085">J0085</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0105">J0105</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0125">J0125</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0145">J0145</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0165">J0165</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0185">J0185</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0205">J0205</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0225">J0225</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0006">J0006</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0026">J0026</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0046">J0046</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0066">J0066</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0086">J0086</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0106">J0106</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0126">J0126</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0146">J0146</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0166">J0166</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0186">J0186</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0206">J0206</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0226">J0226</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0007">J0007</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0027">J0027</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0047">J0047</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0067">J0067</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0087">J0087</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0107">J0107</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0127">J0127</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0147">J0147</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0167">J0167</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0187">J0187</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0207">J0207</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0227">J0227</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0008">J0008</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0028">J0028</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0048">J0048</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0068">J0068</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0088">J0088</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0108">J0108</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0128">J0128</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0148">J0148</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0168">J0168</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0188">J0188</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0208">J0208</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0228">J0228</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0009">J0009</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0029">J0029</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0049">J0049</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0069">J0069</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0089">J0089</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0109">J0109</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0129">J0129</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0149">J0149</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0169">J0169</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0189">J0189</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0209">J0209</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0229">J0229</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0010">J0010</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0030">J0030</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0050">J0050</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0070">J0070</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0090">J0090</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0110">J0110</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0130">J0130</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0150">J0150</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0170">J0170</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0190">J0190</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0210">J0210</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0230">J0230</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0011">J0011</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0031">J0031</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0051">J0051</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0071">J0071</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0091">J0091</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0111">J0111</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0131">J0131</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0151">J0151</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0171">J0171</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0191">J0191</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0211">J0211</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0231">J0231</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0012">J0012</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0032">J0032</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0052">J0052</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0072">J0072</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0092">J0092</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0112">J0112</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0132">J0132</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0152">J0152</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0172">J0172</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0192">J0192</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0212">J0212</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0232">J0232</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0013">J0013</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0033">J0033</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0053">J0053</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0073">J0073</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0093">J0093</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0113">J0113</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0133">J0133</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0153">J0153</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0173">J0173</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0193">J0193</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0213">J0213</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0233">J0233</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0014">J0014</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0034">J0034</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0054">J0054</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0074">J0074</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0094">J0094</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0114">J0114</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0134">J0134</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0154">J0154</A></B></FONT></TD>
      <TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0174">J0174</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0194">J0194</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0214">J0214</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0234">J0234</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0015">J0015</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0035">J0035</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0055">J0055</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0075">J0075</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0095">J0095</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0115">J0115</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0135">J0135</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0155">J0155</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0175">J0175</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0195">J0195</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0215">J0215</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0235">J0235</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0016">J0016</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0036">J0036</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0056">J0056</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0076">J0076</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0096">J0096</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0116">J0116</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0136">J0136</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0156">J0156</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0176">J0176</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0196">J0196</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0216">J0216</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0236">J0236</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0017">J0017</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0037">J0037</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0057">J0057</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0077">J0077</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0097">J0097</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0117">J0117</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0137">J0137</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0157">J0157</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0177">J0177</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0197">J0197</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0217">J0217</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0237">J0237</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0018">J0018</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0038">J0038</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0058">J0058</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0078">J0078</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0098">J0098</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0118">J0118</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0138">J0138</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0158">J0158</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0178">J0178</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0198">J0198</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0218">J0218</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0238">J0238</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0019">J0019</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0039">J0039</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0059">J0059</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0079">J0079</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0099">J0099</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0119">J0119</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0139">J0139</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0159">J0159</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0179">J0179</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0199">J0199</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0219">J0219</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0239">J0239</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0020">J0020</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0040">J0040</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0060">J0060</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0080">J0080</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0100">J0100</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0120">J0120</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0140">J0140</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0160">J0160</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0180">J0180</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0200">J0200</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0220">J0220</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J0240">J0240</A></B></FONT></TD>
</TR>
</TABLE>
<BR>
<P><A NAME="WARNINGS"></A><!--WARNINGS-->

<H3>Warning Message Links</H3>
<TABLE CELLPADDING=2 CELLSPACING=5 ALIGN="CENTER" VALIGN="TOP">
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5001">J5001</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5002">J5002</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5003">J5003</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5004">J5004</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5005">J5005</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5006">J5006</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5007">J5007</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5008">J5008</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5009">J5009</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5010">J5010</A></B></FONT></TD>
</TR>
<TR>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5011">J5011</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5012">J5012</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5013">J5013</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5014">J5014</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5015">J5015</A></B></FONT></TD>
	<TD><FONT SIZE=2><B><A HREF="JVCError.htm#J5016">J5016</A></B></FONT></TD>
</TR>
</TABLE>
<BR>
<P>


			<!-- ********** Topic J0001 ************** -->
<A NAME="J0001"></A><!--J0001--><h4><b>J0001 - INTERNAL COMPILER ERROR: 'identifier'</b></h4>
<P>The compiler was unable to recover after detecting an error. Contact Microsoft Product Support Services for further assistance on how to resolve this problem.<P>
			<!-- ********** Topic J0002 ************** -->
<A NAME="J0002"></A><!--J0002--><h4><b>J0002 - Out of memory</b></h4>
<P>The compiler attempted to allocate some additional memory during processing, but was unable to do so. When this error occurs, check the location, size, and validity of your system swap file. Also, check that there is sufficient growth space available on the drive on which your swap file resides. This error can also occur if a source file is too large. Break your source file into smaller blocks, and then try compiling again.
<P>

			<!-- ********** Topic J0003 ************** -->
<A NAME="J0003"></A><!--J0003--><h4><b>J0003 - Invalid code: 'string'</b></h4>
<P>The compiler may have detected generation of invalid code. Try dividing larger methods defined within your classes into smaller methods and compiling again.
<P>
			<!-- ********** Topic J0004 ************** -->
<A NAME="J0004"></A><!--J0004--><h4><b>J0004 - Cannot open class file 'filename' for reading</b></h4>
<P>The compiler could not open the program source file for reading. This error most likely occurs when another program has an exclusive lock on the source file. Try shutting down other processes that may be accessing the source file and compiling again.
<P>
			<!-- ********** Topic J0005 ************** -->
<A NAME="J0005"></A><!--J0005--><h4><b>J0005 - Cannot open class file 'filename' for writing</b></h4>
<P>The compiler failed to generate the output .class file. This error most likely occurs when the compiler cannot get write or create permission for the file. Make sure the file does not have its read-only attribute set, and that it is not currently in use by another process. This error can also occur when you are currently running or debugging the program that contains the specified .class file. Stop all running instances of the program and try compiling again.
<P>
			<!-- ********** Topic J0006 ************** -->
<A NAME="J0006"></A><!--J0006--><h4><b>J0006 - Cannot read class file 'filename'</b></h4>
<P>The compiler failed to read the specified .class file. This error most likely occurs when the compiler encounters an error reading the storage device, or when the compiler cannot otherwise get read permission for the file. Check to ensure the file is not currently in use by another process. Also, use whatever means available (for example, SCANDISK) to ensure the validity of the storage device you are attempting to use.
<P>
			<!-- ********** Topic J0007 ************** -->
<A NAME="J0007"></A><!--J0007--><h4><b>J0007 - Cannot write class file 'filename'</b></h4>
<P>The compiler failed while attempting to write the contents of a buffer to the specified .class file. This error most likely occurs when space is exhausted on the targeted storage device. Try freeing up any available space on the storage device and compiling again.
<P>
			<!-- ********** Topic J0008 ************** -->
<A NAME="J0008"></A><!--J0008--><h4><b>J0008 - Cannot locate class file 'filename'</b></h4>
<P>The compiler could not locate a core language class for the <B>java.lang</B> package. This error most likely occurs when the Java <B>CLASSPATH</B> variable is not properly set. Try correcting the CLASSPATH <!--a-kellyf 09/10/97: 
environment-->variable, and compiling again.
<P>
			<!-- ********** Topic J0009 ************** -->
<A NAME="J0009"></A><!--J0009--><h4><b>J0009 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0010 ************** -->
<A NAME="J0010"></A><!--J0010--><h4><b>J0010 - Syntax error</b></h4>
<P>The compiler could not determine the meaning of an expression or statement within the source program. This error most likely occurs when the line indicated in the error message is syntactically invalid. This error usually accompanies a more descriptive error. Try correcting any accompanying errors and compiling again.
<P>
The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
      int i =; // error: initialization error
   }
}
</FONT> </PRE>
<P>
			<!-- ********** Topic J0011 ************** -->
<A NAME="J0011"></A><!--J0011--><h4><b>J0011 - Expected ':'</b></h4>
<P>The compiler expected to find a colon following a case label or in a conditional expression that makes use of the ternary operator. This error most likely occurs when the colon is accidentally omitted. Many times this error is caused on the line previous to the line the compiler has reported the error on. Check to make sure lines that require a colon are correct, and then compile again.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   private int i;
   private static int x = 1;
   
   public void method1(int arg1) {
   
      switch (arg1) {
         case 1 // error: ':' omitted
            ; // do something meaningful
      }
   
      i = ( arg1 &lt; x) ? arg1  x; // error: ':' omitted
   }
}
</FONT> </PRE>
<P>
			<!-- ********** Topic J0012 ************** -->
<A NAME="J0012"></A><!--J0012--><h4><b>J0012 - Expected ';'</b></h4>
<P>The compiler expected to find a semicolon in the position indicated by the error message. This error most likely occurs when the semicolon is accidentally omitted from the end of a statement. This error can also occur when a conditional expression is not syntactically correct. Many times this error is caused on the line previous to the line the compiler has reported the error on. Check to make sure both lines of source code have proper semicolon usage, and then compile again.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   private static int x = 10 // error: ';' omitted
   
   public void method1(int arg1) {
   
      for (int i = 1; i &lt; x i++) { 
         // error: ';' omitted
         ;
      }
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0013 ************** -->
<A NAME="J0013"></A><!--J0013--><h4><b>J0013 - Expected '('</b></h4>
<P>The compiler expected to find a left parenthesis in the position indicated by the error message. This error most likely occurs when the left parenthesis is accidentally omitted in any of the following situations:
<UL>
<LI>type initializations
<LI><B>catch</B> statements
<LI>parenthesized expressions
<LI><B>while</B> loops
<LI><B>for</B> loops
<LI><B>if-else</B> statements 
</UL>
The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   private int i;
   
   public void method1(int arg1, int arg2) {
   
      if arg1 &lt; arg2) // error: '(' omitted
         i = arg1;
      else
         i = arg2;
   
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0014 ************** -->
<A NAME="J0014"></A><!--J0014--><h4><b>J0014 - Expected ')'</b></h4>
<P>The compiler expected to find a right parenthesis in the position indicated by the error message. This error most likely occurs when the right parenthesis is accidentally omitted in any of the following situations:
<P>
<UL>
<LI>type initializations
<LI>type casts
<LI><B>catch</B> statements
<LI>parenthesized expressions
<LI><B>while</B> loops
<LI><B>for</B> loops
<LI><B>if-else</B> statements 
</UL>
The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   private int i;
   
   public void method1(int arg1, int arg2) {
   
      i = (arg1 &lt; arg2 ? arg1 : arg2; 
      // error: ')' omitted
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0015 ************** -->
<A NAME="J0015"></A><!--J0015--><h4><b>J0015 - Expected ']'</b></h4>
<P>The compiler expected to find a right square bracket in the position indicated by the error message. This error most likely occurs when the right square bracket is accidentally omitted from an array declaration. Many times this error is caused on the line previous to the line the compiler has reported the error on. Check to make sure all brackets match again.

<P>
The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   private int x[ = new int[500]; // error: ']' omitted
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0016 ************** -->
<A NAME="J0016"></A><!--J0016--><h4><b>J0016 - Expected '{'</b></h4>
<P>The compiler expected to find a left brace in the position indicated by the error message. This error most likely occurs when the left brace is accidentally omitted from the beginning of a class declaration or method code block. Many times this error is caused on the line previous to the line the compiler has reported the error on. Check to make sure all braces match, and then compile again.
 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple // error: '{' omitted
   
   public void method1() {
      // do something meaningful
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0017 ************** -->
<A NAME="J0017"></A><!--J0017--><h4><b>J0017 - Expected '}'</b></h4>
<P>The compiler expected to find a right brace in the position indicated by the error message. This error most likely occurs when a class or method's closing brace is not found. Many times this error is caused on the line previous to the line the compiler has reported the error on. Check to make sure all braces match, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      int arr[] = {1, 2A}; 
      // error: invalid initialization
   
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0018 ************** -->
<A NAME="J0018"></A><!--J0018--><h4><b>J0018 - Expected 'while'</b></h4>
<P>The compiler expected to find the keyword <B>while</B> in the position indicated by the error message. This error most likely occurs when a <B>do/while</B> loop is not syntactically correct. The correct structure for a <B>do/while</B> loop is:
<P>
<PRE><FONT FACE="COURIER">do {
   // do something useful here
} while (condition);
</FONT> </PRE>
<P>

			<!-- ********** Topic J0019 ************** -->
<A NAME="J0019"></A><!--J0019--><h4><b>J0019 - Expected identifier</b></h4>
<P>The compiler expected to find an identifier toward the end of a class, interface, variable, or method declaration. This error most likely occurs when the type is accidentally omitted in a declaration.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   private i;  // error: type omitted
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0020 ************** -->
<A NAME="J0020"></A><!--J0020--><h4><b>J0020 - Expected 'class' or 'interface'</b></h4>
<P>The compiler expected to find either <B>class</B> or <B>interface</B> used within the corresponding declaration. This error most likely occurs when the keywords are accidentally omitted from a <B>class</B> or <B>interface</B> declaration. Another possible cause of this error is unbalanced scoping <!--scope can be either local or global. Scope is in part dictated by curly brackets. Cant really explain scope without writing a few pages, devs will know what its all about though --><!--a-kellyf 09/10/97: "Scoping"? Please specify what this means.--> braces.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   // do something meaningful
   
}}   // error: additional '}' is the problem
</FONT> </PRE>
<P>

			<!-- ********** Topic J0021 ************** -->
<A NAME="J0021"></A><!--J0021--><h4><b>J0021 - Expected type specifier</b></h4>
<P>The compiler expected to find a type specifier in the position indicated by the error message. Other errors may accompany this error due to the missing type specifier.
<p>The following example illustrates this error.
<pre><FONT FACE="COURIER">public class Simple {
   
   public Object o =new; //error: missing 'Object' type specifier
}</font></pre>
<p>

			<!-- ********** Topic J0022 ************** -->
<A NAME="J0022"></A><!--J0022--><h4><b>J0022 - Expected end of file</b></h4>
<P>The compiler expected to encounter an end of file character, but did not. This error most likely occurs when the source file has been damaged in some way. Try visually checking the source file for obvious corruption, save any changes, and then compile again.
<P>

			<!-- ********** Topic J0023 ************** -->
<A NAME="J0023"></A><!--J0023--><h4><b>J0023 - Expected 'catch' or 'finally'</b></h4>
<P>The compiler expected to find a <B>catch</B> or <B>finally</B> block immediately following a corresponding <B>try</B> block.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1( ) {
   
      try {
         // do something meaningful
      }
   
   } // error: 'catch' or 'finally' not found
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0024 ************** -->
<A NAME="J0024"></A><!--J0024--><h4><b>J0024 - Expected method body</b></h4>
<P>The compiler expected to find a method body immediately following a method declaration. This error most likely occurs when the braces surrounding the method body are not properly balanced. This error may also occur when the method was intended to be <B>abstract</B> or <B>native</B>, but the <B>abstract</B> or <B>native</B> keyword was mistakenly omitted from the method declaration.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public abstract class Simple {
   
   public void method1( ); 
   // error: 'abstract' omitted
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0025 ************** -->
<A NAME="J0025"></A><!--J0025--><h4><b>J0025 - Expected statement</b></h4>
<P>The compiler expected to find a statement before the end of the current scope. This error most likely occurs when the right brace designating the end of the current scope is misplaced.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">abstract class Simple {
   
   void method1() { 
   
      if (1)
      // error: a statement is required 
      // after the if statement
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0026 ************** -->
<A NAME="J0026"></A><!--J0026--><h4><b>J0026 - Expected Unicode escape sequence</b></h4>
<P>The compiler expected to find a valid Unicode escape sequence. This error most likely occurs when a syntactical error is found in a Unicode escape sequence.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   int i = \\u0032; 
   // error: '\\' not invalid 
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0027 ************** -->
<A NAME="J0027"></A><!--J0027--><h4><b>J0027 - Identifier too long</b></h4>
<P>The compiler detected an identifier name with a length greater than 1024 characters. Shorten the identifier name, and then compile again.
<P>

			<!-- ********** Topic J0028 ************** -->
<A NAME="J0028"></A><!--J0028--><h4><b>J0028 - Invalid number</b></h4>
<P>The compiler detected a numeric value that the Java language is not capable of supporting. This error most likely occurs when the number specified is an amount greater than any of the Java language's primitive types<!--a-kellyf[a-alexkr same idea] 09/10/97: the primitive types in Java can accept.--> can accept.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   long i = 12345678901234567890; 
   // error: value out of range
   
}

</FONT> </PRE>
<P>

			<!-- ********** Topic J0029 ************** -->
<A NAME="J0029"></A><!--J0029--><h4><b>J0029 - Invalid character</b></h4>
<P>The compiler detected an ASCII character that could not be used in an identifier. This error most likely occurs when a class, interface, method, or variable identifier includes an invalid character. 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   private int c#; 
   // error: '#' not supported
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0030 ************** -->
<A NAME="J0030"></A><!--J0030--><h4><b>J0030 - Invalid character constant</b></h4>
<P>The compiler detected an attempt to assign an invalid character or character escape sequence to a variable of type <B>char</B>.
<P>
The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   char c = '\'; 
   // error: invalid escape character
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0031 ************** -->
<A NAME="J0031"></A><!--J0031--><h4><b>J0031- Invalid escape character</b></h4>
<P>The compiler detected the use of an invalid escape character. This error most likely occurs when a syntactical error is found in a Unicode escape sequence.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   int i = \u032; 
   // error: Unicode uses 4 hex digits
   int x = \u0032;
    //correct assignment of a unicode escape sequence
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0032 ************** -->
<A NAME="J0032"></A><!--J0032--><h4><b>J0032 - Unterminated string constant</b></h4>
<P>The compiler did not detect a terminating double-quote character at the end of a string constant. This error most likely occurs when the string terminator is accidentally omitted, or when the string constant is mistakenly divided onto multiple lines.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   String str = "Hello
   // error: '"' and ';' omitted
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0033 ************** -->
<A NAME="J0033"></A><!--J0033--><h4><b>J0033 - Unterminated comment</b></h4>
<P>The compiler detected the beginning of a block comment, but did not detect a valid ending for it. This error most likely occurs when the comment terminator is accidentally omitted. 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   /* This comment block
    * does not have a valid
    * terminator
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0034 ************** -->
<A NAME="J0034"></A><!--J0034--><h4><b>J0034 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0035 ************** -->
<A NAME="J0035"></A><!--J0035--><h4><b>J0035 - Initializer block must be declared 'static'</b></h4>
<P>The compiler detected a modifier other than <B>static</B> associated with an initializer. Initializers can only use the <B>static</B> keyword to specify the initializer as a <B>static</B> initializer or no modifier to signify that the initializer is a field initializer. Remove the modifier from the initializer specified in the error message or add the <B>static</B> modifier to the initializer, adn then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   static private int i;
   
   {   // error: 'static' omitted
      i = 1;
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0036 ************** -->
<A NAME="J0036"></A><!--J0036--><h4><b>J0036 - A data member cannot be 'native', 'abstract' or 'synchronized'</b></h4>
<P>The compiler detected one of the modifiers previously shown used in the declaration of a variable. The modifiers <B>synchronized</B> and <B>native</B> can only be applied to method declarations. The <B>abstract</B> modifier can be applied to methods, classes, and interfaces.
<P>

			<!-- ********** Topic J0037 ************** -->
<A NAME="J0037"></A><!--J0037--><h4><b>J0037 - A method cannot be 'transient' or 'volatile'</b></h4>
<P>The compiler detected one of the modifiers shown above used in the declaration of a method. The modifiers <B>transient</B> and <B>volatile</B> can only be applied to field declarations.
<P>

			<!-- ********** Topic J0038 ************** -->
<A NAME="J0038"></A><!--J0038--><h4><b>J0038 - 'final' members must be initialized</b></h4>
<P>The compiler detected an uninitialized <B>final</B> variable in an interface definition. Variables declared as <B>final</B> in an interface definition must have their value set at declaration. Once set, the value cannot be programatically changed.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   private final int COOL_RAD; 
   // error: must have value set
   
}
</FONT> </PRE>
Note that variables declared within interfaces are implicitly defined as <B>final</B> or <B>static</B>. As such, this error also occurs when their initial values are not set at declaration.
<P>

			<!-- ********** Topic J0039 ************** -->
<A NAME="J0039"></A><!--J0039--><h4><b>J0039 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0040 ************** -->
<A NAME="J0040"></A><!--J0040--><h4><b>J0040 - Cannot define body for abstract/native methods</b></h4>
<P>The compiler detected a method body defined immediately following the corresponding declaration of an <B>abstract</B> or <B>native</B> method. An <B>abstract</B> method must have its implementation code defined in a subclass. <B>Native</B> methods are implemented using code of a native language, such as C++.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public interface Simple {
   
   public void method1() {
      // error: must define this method body
      // in a class that implements the 
      // 'Simple' interface
   }
}
</FONT> </PRE>
<p>Note that methods declared within an interface are implicitly <B>abstract</B>. As such, this error will also occur when you attempt to define a method body in an interface.
<P>

			<!-- ********** Topic J0041 ************** -->
<A NAME="J0041"></A><!--J0041--><h4><b>J0041 - Duplicate modifier</b></h4>
<P>The compiler detected a modifier used twice in a declaration. This error most likely occurs when the same modifier is mistakenly used more than once within a declaration. 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public public void method1() { // error: 'public' used twice
      // do something meaningful
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0042 ************** -->
<A NAME="J0042"></A><!--J0042--><h4><b>J0042 - Only classes can implement interfaces</b></h4>
<P>The compiler detected an interface declaration using the <B>implements</B> keyword. Interfaces cannot implement other interfaces. Interfaces may only be implemented by classes.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public interface Simple implements color{ 
   // error: 'Simple' cannot implement the 
   // 'color' interface
   
}
interface color {
   // do something meaningful
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0043 ************** -->
<A NAME="J0043"></A><!--J0043--><h4><b>J0043 - Redeclaration of member 'identifier'</b></h4>
<P>The compiler detected the same identifier name being declared more than once within the same scope. This error most likely occurs when a variable is mistakenly declared more than once.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   private int i;
   private int i; // error: 'i' declared twice
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0044 ************** -->
<A NAME="J0044"></A><!--J0044--><h4><b>J0044 - Cannot find definition for class 'identifier'</b></h4>
<P>The compiler could not locate the definition for the specified class. This error is most likely caused by a typographical error. It may also occur when the package containing the specified class cannot be found.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   char buf[] = new chaar[5];
   // error: 'chaar' not a valid type
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0045 ************** -->
<A NAME="J0045"></A><!--J0045--><h4><b>J0045 - 'identifier' is not a class name</b></h4>
<P>The compiler detected one of the following conditions:
<UL>
<LI>A class name provided as part of an <B>import</B> statement could not be found or the import statement was not syntactically valid.
<LI>The class attempted to extend an interface. 
</UL>
<P>Make sure that the package exists and that any classes that you import exist in the package specified in the <b>import</b> statement, and then compile again.
<p>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">package non.existent;
   
import non.existent; // error: 
   
public class Simple {
   
   // do something meaningful
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0046 ************** -->
<A NAME="J0046"></A><!--J0046--><h4><b>J0046 - 'identifier' is not an interface name</b></h4>
<P>The compiler detected that the identifier referred to by the keyword <B>implements</B> is not an interface.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">class Simple2 {
   
   // do something meaningful
   
}

public class Simple implements Simple2 {
   
   // error: cannot implement class 'Simple2'
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0047 ************** -->
<A NAME="J0047"></A><!--J0047--><h4><b>J0047 - 'identifier' is not a package name</b></h4>
<P>The compiler detected an invalid package name. This error most likely occurs when a syntactical error exists in an <B>import</B> statement or when the package name does not otherwise exist.
<P>

			<!-- ********** Topic J0048 ************** -->
<A NAME="J0048"></A><!--J0048--><h4><b>J0048 - Cannot extend final class 'identifier'</b></h4>
<P>The compiler detected an attempt to subclass a class declared with the keyword <B>final</B>. Classes declared as <B>final</B> cannot be subclassed.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">final class Simple2 {
   
   // do something meaningful
   
}

public class Simple extends Simple2 {
   
   // error: cannot extend 'Simple2'
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0049 ************** -->
<A NAME="J0049"></A><!--J0049--><h4><b>J0049 - Undefined name 'identifer'</b></h4>
<P>The compiler detected an unknown class name while processing an <B>import</B> statement. This error most likely occurs when the identifier is misspelled or does not exist. This error may also occur if the CLASSPATH environment variable is not set correctly.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">import java.io.bogus; // error: unknown class name
   
public class Simple {
   
   // do something meaningful
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0050 ************** -->
<A NAME="J0050"></A><!--J0050--><h4><b>J0050 - 'identifier' is not a member of 'identifier'</b></h4>
<P>The compiler detected a reference to an identifier that is not a member of the specified package. This error most likely occurs when the identifier is misspelled or does not exist.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">class Simple2{
   public void methodx(){}
}

public class Simple {
   
   public void method1() {
      Simple2 smp = new Simple2();
      smp.method2();
      // error: 'method2' not member of 'Simple2'
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0051 ************** -->
<A NAME="J0051"></A><!--J0051--><h4><b>J0051 - Undefined package 'identifier'</b></h4>
<P>The compiler detected a package name, but was unable to locate the package definition. This error most likely occurs when a syntactical error exists in an <B>import</B> statement. This error may also occur when the package cannot be found or does not exist. Make sure the path is set in the CLASSPATH environment variable.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">import java.lang.String.*;
// error: 'String' not a valid package name

public class Simple {
   
   // do something meaningful
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0052 ************** -->
<A NAME="J0052"></A><!--J0052--><h4><b>J0052 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0053 ************** -->
<A NAME="J0053"></A><!--J0053--><h4><b>J0053 - Ambiguous name: 'identifier' and 'identifier'</b></h4>
<P>The compiler could not resolve an ambiguity between the two identifiers shown. The error most likely occurs when the same class name occurs in two packages that are both imported into a source file using the "*" class import specifier. Make sure that you do not have two classes with the same name in the packages you are importing into your source file.
<P>

			<!-- ********** Topic J0054 ************** -->
<A NAME="J0054"></A><!--J0054--><h4><b>J0054 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0055 ************** -->
<A NAME="J0055"></A><!--J0055--><h4><b>J0055 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0056 ************** -->
<A NAME="J0056"></A><!--J0056--><h4><b>J0056 - Missing return type specification</b></h4>
<P>The compiler detected a method declaration without a return type specified. All method declarations must specify a return type. If the method is not meant to return a value, use the <B>void</B> keyword.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public method1() { // error: no return type
   
      // do something meaningful
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0057 ************** -->
<A NAME="J0057"></A><!--J0057--><h4><b>J0057 - Class file 'identifier' doesn't contain class 'identifier'</b></h4>
<P>The compiler did not detect the class name previously shown within the specified file. This error most likely occurs when the class name is either misspelled or does not exist. This error may also occur when a .class file has been renamed after successful compilation.
<P>

			<!-- ********** Topic J0058 ************** -->
<A NAME="J0058"></A><!--J0058--><h4><b>J0058 - Cannot have a variable of type 'void'</b></h4>
<P>The compiler detected a variable declared as type void. The keyword <B>void</B> is not allowed in variable declarations. Rather, void can only be used as a method return type, indicating that the method does not actually return a value.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public interface Simple {
   
   public final static void i = 1; 
   // error: 'void' not valid
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0059 ************** -->
<A NAME="J0059"></A><!--J0059--><h4><b>J0059 - Cannot reference member 'identifier' without an object</b></h4>
<P>The compiler detected an attempt to reference a variable without a known object association. This error most likely occurs when an instance field or method (a field or method declared without the keyword <b>static</b>) is referenced from within a <b>static</b> method without a valid instance. Static methods cannot use instance fields and methods without a valid instance of the class.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   private int x;
   
   public static void method1() {
   
      x = 0; // error: 'x' must be static
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0060 ************** -->
<A NAME="J0060"></A><!--J0060--><h4><b>J0060 - Invalid forward reference to member 'identifier'</b></h4>
<P>The compiler detected an attempt to initialize a variable with another variable that had not yet been defined. To avoid this situation, reverse the field declarations order so that a variable that is referenced by another is defined first.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   private static int i = j; 
   // error: 'j' not yet defined
   private static int j = 0;
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0061 ************** -->
<A NAME="J0061"></A><!--J0061--><h4><b>J0061 - The members 'identifier' and 'identifier' differ in return type only</b></h4>
<P>The compiler detected a subclass method attempting to overload a base class method, but the methods differed only in return type. In Java, overloaded methods must be distinguished by unique signatures. A unique signature consists of the method name, the number, type and positions of its parameters, and the return type.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple extends Simple2 {
   
   public void method1() {
      // error: only return type differs
   }
}

class Simple2 {
   
   public int method1() {
   
      return 1;
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0062 ************** -->
<A NAME="J0062"></A><!--J0062--><h4><b>J0062 - Attempt to reduce the access level of member 'identifier'</b></h4>
<P>The compiler detected an overridden method in the class being compiled that reduces the access level of its base class method. The base class access modifier for a method must be maintained by all derived classes that want to overload the method.
<P>

			<!-- ********** Topic J0063 ************** -->
<A NAME="J0063"></A><!--J0063--><h4><b>J0063 - Declare the class abstract, or implement abstract member 'identifier'</b></h4>
<P>The compiler detected the declaration of an abstract method within a class, but the class was not declared to be abstract.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public abstract void method1(); 
   // error: class not abstract
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0064 ************** -->
<A NAME="J0064"></A><!--J0064--><h4><b>J0064 - Not used</b></h4>
<P>This error message is currently not used.<P>

			<!-- ********** Topic J0065 ************** -->
<A NAME="J0065"></A><!--J0065--><h4><b>J0065 - Cannot assign to this expression</b></h4>
<P>The compiler detected an expression in the position normally held by an lvalue<!-- a-alexkr: yes lvalue as opposed to rvalue--><!--a-kellyf 09/10/97: Verifying that this is correct.--> for assignment. This error most likely occurs when an expression is being assigned a value, but the expression is not capable of accepting the assignment.
 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      int x = 0;
      int y = 1;
   
      x++ = y; //error: '++' not valid
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0066 ************** -->
<A NAME="J0066"></A><!--J0066--><h4><b>J0066 - 'this' can only be used in non-static methods</b></h4>
<P>The compiler detected use of the keyword <B>this</B> within a class (or static) method. Class methods are not passed implicit <B>this</B> references. As such, they cannot reference instance (non-static) variables or methods.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   int x;
   
   public static void method1() {
   
      this.x = 12; // error: 'this' instance specific
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0067 ************** -->
<A NAME="J0067"></A><!--J0067--><h4><b>J0067 - Cannot convert 'identifier' to 'identifier'</b></h4>
<P>The compiler detected a variable type used out of its correct context. As such, the compiler could not implicitly convert the result to anything meaningful. Convert the value you are attempting to use to something the method or field definition requires, and then compile again.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      int i = 10;
   
      if (i--) { 
         // error: conditional needs expression
         // or boolean variable
      }
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0068 ************** -->
<A NAME="J0068"></A><!--J0068--><h4><b>J0068 - Cannot implicitly convert 'identifier' to 'identifier'</b></h4>
<P>The compiler could not convert the specified variable without an explicit typecast. The error most likely occurs when a numeric field is assigned to a data type that is not numeric. Use a typecast to convert the data type to the appropriate data type, and then compile again.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   int i = 10;
   
   public char method1() {
   
      return i; // error: expected type char
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0069 ************** -->
<A NAME="J0069"></A><!--J0069--><h4><b>J0069 - Cannot apply '.' operator to an operand of type 'identifier'</b></h4>
<P>The compiler detected the '.' operator applied to an invalid type. This error most likely occurs when the <b>length</b> method is applied to an invalid type.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   int i = 123;
   int j = i.length; // error: 'i' not an array
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0070 ************** -->
<A NAME="J0070"></A><!--J0070--><h4><b>J0070 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0071 ************** -->
<A NAME="J0071"></A><!--J0071--><h4><b>J0071 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0072 ************** -->
<A NAME="J0072"></A><!--J0072--><h4><b>J0072 - 'identifier' is not a member of class 'identifier'</b></h4>
<P>The compiler detected a method call, but the method remains undefined. This error most likely occurs when the method name is either misspelled or cannot be found within proper scope. This error may also occur when the method does not exist. Make sure that the member you are trying to reference exists in the specified class.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public static void main(String args[]) {
   
      System.out.printline("Hello");
      // error: 'printline' should be 'println'
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0073 ************** -->
<A NAME="J0073"></A><!--J0073--><h4><b>J0073 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0074 ************** -->
<A NAME="J0074"></A><!--J0074--><h4><b>J0074 - Operator cannot be applied to 'identifier' and 'identifier' values</b></h4>
<P>The compiler detected an operator that cannot be correctly applied to the identifiers shown in the error message. This error most likely occurs when two fields are non-numeric and operators used for numbers are applied to the fields.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      String s1 = "one";
      String s2 = "two";
      String result;
   
      result = s1 * s2; // error: invalid operands
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0075 ************** -->
<A NAME="J0075"></A><!--J0075--><h4><b>J0075 - Invalid call</b></h4>
<P>The compiler detected syntax for a method call, but the identifier does not represent a valid method name. This error most likely occurs when a method name is misspelled or contains characters that are not recognized as valid in Java naming conventions.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">class Simple {
   
   int x = 1();
   //error: 1 is not a valid method name
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0076 ************** -->
<A NAME="J0076"></A><!--J0076--><h4><b>J0076 - Too many arguments for method 'identifier'</b></h4>
<P>The compiler detected a known method call, but the call contained more arguments than needed. Check the number of arguments for the method you are attempting to call, and remove any additional arguments from the call.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1(int arg1) {
   
      // do something meaningful
   }
   
   public void method2() {
   
      method1(1, 2); // error: Too many arguments
   }
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0077 ************** -->
<A NAME="J0077"></A><!--J0077--><h4><b>J0077 - Not enough arguments for method 'identifier'</b></h4>
<P>The compiler detected a known method call, but the call contained fewer arguments than needed. This error most likely occurs when one or more arguments are accidentally omitted from the call.
<P>
The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1(int arg1) {
      // do something meaningful
   }
   
   public void method2() {
   
      method1(); // error: Too few arguments
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0078 ************** -->
<A NAME="J0078"></A><!--J0078--><h4><b>J0078 - Class 'identifier' doesn't have a method that matches 'identifier'</b></h4>
<P>The compiler identified a call to a known overloaded method within another class, but was unable to detect a matching method with the correct number of arguments. Make sure the overloaded method call has the correct number and type of arguments, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
      // do something meaningful
   }

   public void method1(int arg1) {
      // do something meaningful
   }
}

class Simple2 {
   
   public void method1() {
   
      Simple s = new Simple();
      s.method1(1, 2, 3); // error: too many args
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0079 ************** -->
<A NAME="J0079"></A><!--J0079--><h4><b>J0079 - Ambiguity between 'identifier' and 'identifier'</b></h4>
<P>The compiler could not distinguish the correct method to execute. This error most likely occurs when two overloaded methods have related argument lists and the method call cannot be differentiated between the two methods. Make sure your method call is not using a parameter that conflicts with another overloaded method. Another way to avoid this error is to change the argument lists of the two overloaded methods so that they have a different number of arguments or more uniquely defined parameter data types.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   static void method1(Simple2 s2, Simple3 s3) {
      // do something meaningful
   }
   
   static void method1(Simple3 s3, Simple2 s2) {
      // do something meaningful
   }
   
   public static void main(String args[]) {
   
      Simple2 s2 = new Simple2();
      method1(s2, s2);
      // error: Ambiguity between Simple2 and Simple3
   }
}

class Simple2 extends Simple3 {
   // do something meaningful
}

class Simple3 {
   // do something meaningful
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0080 ************** -->
<A NAME="J0080"></A><!--J0080--><h4><b>J0080 - Value for argument 'identifier' cannot be converted from 'identifier' in call to 'identifier'</b></h4>
<P>The compiler detected a method argument that does not match the parameters specified in the method declaration. This error most likely occurs when a numeric field is passed as an argument to a method but the method requires a different numeric type. To pass different numeric types to arguments of a method, typecast the field being passed to method.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1(int arg1) { 
      // do something meaningful
   }
   
   public void method2() {
   
      float f = 1.0f;
      method1(f); // error: mismatched call types
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0081 ************** -->
<A NAME="J0081"></A><!--J0081--><h4><b>J0081 - Value for argument 'identifier' cannot be converted from 'identifier' in call to 'identifier'</b></h4>
<P>The compiler detected a method call, but was unable to convert one of the arguments from the supplied type to the type shown in the method declaration. This error most likely occurs when a method is called with the arguments in the wrong order or the wrong method was called.
<P>

			<!-- ********** Topic J0082 ************** -->
<A NAME="J0082"></A><!--J0082--><h4><b>J0082 - Class 'identifier' doesn't have a constructor that matches 'identifier'</b></h4>
<P>The compiler did not detect a constructor matching the call identified in the error. This error most likely occurs when a constructor is called with the wrong number of arguments. Check to make sure that the class has a constructor that matches the one you are attempting to call.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {

   Simple(int arg1) {
      // do something meaningful
   }

   public static void main (String args[]) {
   
      Simple s = new Simple(12, 13); 
      // error: too many arguments
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0083 ************** -->
<A NAME="J0083"></A><!--J0083--><h4><b>J0083 - 'super( )' or 'this( )' may only be called within a constructor</b></h4>
<P>The compiler detected use of either the <b>super()</b> or <b>this()</b> keyword outside of a constructor. The <b>super()</b> keyword is used to call a superclass constructor, while the <b>this()</b> keyword is used to call one constructor from another. To reference methods in a base class, you must use the <b>super</b> keyword.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   public void method1 () {
      super(); // error: 'super' cannot be called
   }
}

public class Simple{
   public method2(){
      super.method1(); //correct way to call a method of a superclass
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0084 ************** -->
<A NAME="J0084"></A><!--J0084--><h4><b>J0084 - Can't return a value from a 'void' method</b></h4>
<P>The compiler detected an attempt to return a value from a method declared with a return type of <B>void</B>.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
      return 1; // error: cannot return a value
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0085 ************** -->
<A NAME="J0085"></A><!--J0085--><h4><b>J0085 - Expected return value of type 'identifier'</b></h4>
<P>The compiler detected the keyword return within the body of a method which was declared to <B>return</B> a specific type, but the <B>return</B> had no associated value. The <b>return</b> statement with no associated value will not return a default value and thus must be assigned a valid return value.
 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public int method1() {
      return; // error: must return int value
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0086 ************** -->
<A NAME="J0086"></A><!--J0086--><h4><b>J0086 - '[]' cannot be applied to a value of type 'identifier'</b></h4>
<P>The compiler detected array brackets used with a non-array variable type. Change the field to be a valid array declaration if you wish to use the field as an array.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
      int i = 0;
      int j, x;
   
      x = j[i]; // error: 'j' not declared as array
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0087 ************** -->
<A NAME="J0087"></A><!--J0087--><h4><b>J0087 - The 'goto' statement is not currently supported by Java</b></h4>
<P>The keyword <B>goto</B>, while defined as a keyword, has not yet been implemented in the Java language.
<P>

			<!-- ********** Topic J0088 ************** -->
<A NAME="J0088"></A><!--J0088--><h4><b>J0088 - Not used</b></h4>
<P>This error message is not currently used.
<P>

			<!-- ********** Topic J0089 ************** -->
<A NAME="J0089"></A><!--J0089--><h4><b>J0089 - Already had 'case: 'identifier'</b></h4>
<P>The compiler identified two or more <B>case</B> statements with the same identifier or value occurring within the same <B>switch</B> statement. 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public int method1(int arg1) {
   
      switch (arg1) {
         case 1:
            return (int) 1;
         case 2:
            return (int) 2;
         case 2: // error: duplicate of above
            return (int) 3;
         default:
            return (int) 0;
      }
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0090 ************** -->
<A NAME="J0090"></A><!--J0090--><h4><b>J0090 - Already had 'default'</b></h4>
<P>The compiler identified two or more instances of the keyword <B>default</B> occurring within the same <B>switch</B> statement. 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public int method1(int arg1) {
   
      switch (arg1) {
         case 1:
            return (int) 1;
         case 2:
            return (int) 2;
         default:
            return (int) 3;
         default: // error: duplicate of previous
            return (int) 0;
      }
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0091 ************** -->
<A NAME="J0091"></A><!--J0091--><h4><b>J0091 - 'case' outside of switch statement</b></h4>
<P>The compiler identified the keyword <B>case</B> used outside the scope of a <B>switch</B> statement.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public int method1() {
      case 1: // error: no switch statement
         return 1;
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0092 ************** -->
<A NAME="J0092"></A><!--J0092--><h4><b>J0092 - Constant expression expected</b></h4>
<P>The compiler has detected an expression that used a nonconstant value when a constant value was required. This error most likely occurs when a variable is used in a case statement. Check the expression and make sure that a constant value is being used.
<P>The following sample illustrates this error.
<P><PRE><FONT FACE="COURIER">public class Simple{
   int var1 = 10;
   int var2 = 20;
   public void method1(){
      switch(var1){
        case var2:
        //error: cannot use variable with case
      }
   }
}
</font></pre>

			<!-- ********** Topic J0093 ************** -->
<A NAME="J0093"></A><!--J0093--><h4><b>J0093 - 'break' only allowed in loops and switch statements</b></h4>
<P>The compiler detected the keyword <B>break</B> occurring outside the scope of a loop or <B>switch</B> statement.
<P>
			<!-- ********** Topic J0094 ************** -->
<A NAME="J0094"></A><!--J0094--><h4><b>J0094 - Label 'identifier' not found</b></h4>
<P>The compiler detected a label name associated with one of the keywords <b>continue</b> or <b>break</b>, but could not find the label. This error most likely occurs when a label does not exist yet is being referenced by a <b>break</b> or <b>continue</b> statement. The error can also occur if the label is placed outside of the <b>break</b> or <b>continue</b> statement's scope. A label cannot reference labels in other classes or other source files. Check to make sure the <b>break</b> or <b>continue</b> statement can access a valid label, and then compile again.
<p>The following example illustrates this error.
<P><PRE><FONT FACE="COURIER">public class Simple{
   public int method1(){
      int y;
      for (int x = 0; x &#60; 10; x++){
         y = x *2;
         if (x == 5)
            break test; //error 'test' is not defined as a label
      }
      return y;
   }
}</font></pre>
<p>The following example illustrates the proper usage of a label when used with the <b>break</b> or <b>continue</b> statements:
<P><PRE><FONT FACE="COURIER">public class Simple{
   public int method1(){
      int y;
      for (int x = 0; x &#60; 10; x++){
         y = x *2;
         if (x == 5)
            break test; //error 'test' is not defined as a label
      }
      test:
      return y;
   }
}</font></pre>

			<!-- ********** Topic J0095 ************** -->
<A NAME="J0095"></A><!--J0095--><h4><b>J0095 - 'continue' only allowed in loop</b></h4>
<P>The compiler detected attempted use of the keyword <B>continue</B> outside the scope of a loop.
<P>

			<!-- ********** Topic J0096 ************** -->
<A NAME="J0096"></A><!--J0096--><h4><b>J0096 - Class value expected</b></h4>
<P>The compiler detected a synchronization block, but the <B>synchronized</B> modifier was applied to an invalid type. This error most likely occurs when an identifier other than a class object instance is used with the <b>synchronized</b> statement.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {

      int i;

      synchronized (i);
      // error: 'i' must resolve to 
      // class or array type 
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0097 ************** -->
<A NAME="J0097"></A><!--J0097--><h4><b>J0097 - Class or array expected</b></h4>
<P>The compiler detected the <b>instanceof</b> operator applied to a type that did not resolve to a class or array. The <b>instanceof</b> operator is used to determine if identifier is an instance of a specific class or array. Make sure the <b>lvalue</b> used with the <b>instanceof</b> operator references a class instance or array and the <b>rvalue</b> references a valid class name or array.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      Simple2 obj = new Simple2();
   
      if (obj instanceof int) // error: bad type
         ; // do something meaningful
   }
}

class Simple2 {
   // do something meaningful
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0098 ************** -->
<A NAME="J0098"></A><!--J0098--><h4><b>J0098 - Attempt to access nonexistent member of 'identifier'</b></h4>
<P>The compiler detected an array member that was <!--a-kellyf 09/11/97: that was?
-->specified, but could not identify it. This error most likely occurs when an attempt to reference the length method of an array is mistyped. This error can also occur when an attempt is made to call a method<!--[a-alexkr same idea, different words]a-kellyf 09/11/97: that is--> in an array of objects, but the call does not reference an element of the array.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      int j[] = new int[10];
      int i = j.bogus; 
      // error: 'bogus' not valid member
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0099 ************** -->
<A NAME="J0099"></A><!--J0099--><h4><b>J0099 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0100 ************** -->
<A NAME="J0100"></A><!--J0100--><h4><b>J0100 - Cannot throw 'identifier' - the type doesn't inherit from 'Throwable'</b></h4>
<P>The compiler detected an object in a <b>throw</b> statement that was not derived from the class <b>Throwable</b>. This error most likely occurs when a <b>throw</b> statement uses a class that does not inherit from the <b>Throwable</b> class. Check to make sure that the exception class you are throwing is a valid exception class.
<P>

			<!-- ********** Topic J0101 ************** -->
<A NAME="J0101"></A><!--J0101--><h4><b>J0101 - The type 'identifier' does not inherit from 'Throwable'</b></h4>
<P>The compiler detected an invalid class argument used as an argument in a <B>catch</B> declaration. When using a <b>catch</b> statement to handle exceptions, you must define it with a class derived from <b>Throwable</b> as a parameter. Make sure the class you defined for the <b>catch</b> statement is derived from <b>Throwable</b>, and then compile again.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      try {
         // do something meaningful
      } catch (String s) {
         // error: 'String' not a subclass
         // of 'Throwable'
      }
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0102 ************** -->
<A NAME="J0102"></A><!--J0102--><h4><b>J0102 - Handler for 'identifier' hidden by earlier handler for 'identifier'</b></h4>
<P>The compiler detected an exception handler that will never be executed because an earlier handler would have already caught the exception. This error is most likely caused by putting <B>catch</B> statements in the wrong order.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">class Simple {
   
   static
   {
      try
      {
      }
      catch (Exception e)
      {
      }
      catch (ArithmeticException e)
      {
      }
      // error: any exceptions this block
      // could have caught are already caught
      // by the first catch statement.
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0103 ************** -->
<A NAME="J0103"></A><!--J0103--><h4><b>J0103 - Cannot override final method 'identifier'</b></h4>
<P>The compiler detected a class method attempting to override one of its base class methods, but the base class method was declared with the keyword <B>final</B>. Methods defined with the <b>final</b> modifier cannot be overridden by a derived class.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple extends Simple2 {
   
   public void method1() {
      // error: 'method1' final in superclass
   }
}

class Simple2 {
   
   public final void method1() {
      // do something meaningful
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0104 ************** -->
<A NAME="J0104"></A><!--J0104--><h4><b>J0104 - Unreachable statement or declaration</b></h4>
<P>The compiler detected a statement or declaration that cannot be reached under any circumstances. This error most likely occurs when a return statement is called from a method and code is placed below the <b>return</b> statement. This error can also occur if a <b>break</b> statement is used in a loop without any flow control to allow code below it to be run.
 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">class Simple {
   static
   {
      return;
      int x;
      //error: the declaration cannot be reached
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0105 ************** -->
<A NAME="J0105"></A><!--J0105--><h4><b>J0105 - Method 'identifier' must return a value</b></h4>
<P>The compiler detected a method declaration, which included a return type other than <B>void</B>, but the keyword <B>return</B> was not found in the method body. This error most likely occurs when a method that returns a value is missing a valid <B>return</B> statement. This error can also occur if a <B>return</B> statement is called within a flow control block and cannot always accessed due to the logic of the method.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public int method1(int arg1) {
   
   } // error: expected an integer returned
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0106 ************** -->
<A NAME="J0106"></A><!--J0106--><h4><b>J0106 - Class 'identifier' has a circular dependency</b></h4>
<P>The compiler detected two or more classes directly or indirectly attempting to subclass each other. One class should act as the base class of the other.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple extends Simple2 {
   
   // error: extending 'Simple2'
}

class Simple2 extends Simple {
   
   // error: also extending 'Simple'
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0107 ************** -->
<A NAME="J0107"></A><!--J0107--><h4><b>J0107 - Missing array dimension</b></h4>
<P>The compiler detected the initialization of an array, but failed to detect a valid array dimension. This error most likely occurs when an array is defined but one of the dimensions of the array is not defined. To use an array, all dimensions must be defined.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      int [][] i = new int[][12]; 
      // error: missing first array dimension
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0108 ************** -->
<A NAME="J0108"></A><!--J0108--><h4><b>J0108 - Cannot 'new' an instance of type 'identifier'</b></h4>
<P>The compiler detected an attempt to instantiate a data type that does not require use of the keyword <B>new</B>. This error most likely occurs when an attempt is made to use the new keyword with an intrinsic data type and the declaration is not an array. Make sure your member declaration does not use the <B>new</B> keyword unless it is a class object or array declaration.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
      int i = new int(5); 
      // error: cannot use 'new' on 'int' types
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0109 ************** -->
<A NAME="J0109"></A><!--J0109--><h4><b>J0109 - Cannot 'new' an instance of abstract class 'identifier'</b></h4>
<P>The compiler detected an attempt to instantiate a class object declared as <B>abstract</B>. A class declared as <b>abstract</b> cannot be instantiated and exists only as a base class for other classes to derive from.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      Simple2 s2Object = new Simple2(); 
      // error: class 'Simple2' declared as abstract
   }
}

abstract class Simple2 {
   // do something meaningful
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0110 ************** -->
<A NAME="J0110"></A><!--J0110--><h4><b>J0110 - Cannot 'new' an interface 'identifier'</b></h4>
<P>The compiler detected an attempt to instantiate an interface object declared as <B>abstract</B>. Note that interfaces are abstract by default, regardless whether the keyword <B>abstract</B> is used in their declaration.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      Simple2 s2Object = new Simple2(); 
      // error: interface Simple2 is abstract
   }
}

interface Simple2 {
   // do something meaningful
}
</FONT> </PRE>
<P>
			<!-- ********** Topic J0111 ************** -->
<A NAME="J0111"></A><!--J0111--><h4><b>J0111 - Invalid use of array initializer</b></h4>
<P>The compiler detected an attempt to initialize an array, but the initialization statement was not syntactically correct. Arrays can be initialized at declaration with an initial set of values. The compiler detected that the syntax of the initialization was incorrect. This error most likely occurs when trying to initialize a multidimension array with the incorrect number or positioning of braces and commas. Check the syntax of your array initialization, and then compile again.
<P>

			<!-- ********** Topic J0112 ************** -->
<A NAME="J0112"></A><!--J0112--><h4><b>J0112 - Cannot assign final variable 'identifier'</b></h4>
<P>The compiler detected an attempt to change the value of a variable declared as <B>final</B>. A field declared as <B>final</B> cannot be assigned a value once it has been initialized with a value either at declaration or in an initializer block. 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   private final int i = 3;

   public void method1(int arg1) {
      i = arg1; 
      // error: variable 'i' declared final
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0113 ************** -->
<A NAME="J0113"></A><!--J0113--><h4><b>J0113 - Call to constructor must be first in constructor</b></h4>
<P>The compiler detected a constructor called from within the body of a second constructor, but the constructor call was not placed at the beginning of the second constructor body. In a constructor, calls to another constructor must be the first line of code in the constructor's body. Move the constructor call to the top, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   int i, j;
   Simple () {
   
      i = 0;
   }
   
   Simple(int arg1) {
   
      j = arg1;
      this(); // error: call to Simple() must be first
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0114 ************** -->
<A NAME="J0114"></A><!--J0114--><h4><b>J0114 - Cannot reference 'this' in constructor call</b></h4>
<P>The compiler detected a reference to <B>this</B> in a constructor. The <b>this</b> statement can only be used in a constructor to access methods and fields of the constructor's class. Usage of <B>this(this)</B> or <B>super(this)</B> in a constructor will cause this error to occur because the instance of the class has not yet been created, and thus cannot be passed to another constructor.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">class SuperSimple {
   
   SuperSimple(Object o) { }
}

public class Simple extends SuperSimple {
   
   Simple()
   {
      super(this);
      //error: cannot refer to this in constructor
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0115 ************** -->
<A NAME="J0115"></A><!--J0115--><h4><b>J0115 - Cannot call constructor recursively</b></h4>
<P>The compiler detected a recursive constructor call. This error most likely occurs when a constructor has a call to the same constructor. This error can also occur if one constructor calls a second constructor and the second constructor has a call back to the first constructor.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   Simple (int arg1) {
   
      this(1);
      // error: constructor calling itself
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0116 ************** -->
<A NAME="J0116"></A><!--J0116--><h4><b>J0116 - Variable 'identifier' may be used before initialization</b></h4>
<P>The compiler detected an attempt to use a variable before it was properly initialized. To use a variable in an assignment or expression, you need to assign a value to it. Initialize the variable in a constructor or field initializer, and then compile again.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   static 
   {
      int i;
      int j = i;
      // error: 'i' not yet initialized
   
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0117 ************** -->
<A NAME="J0117"></A><!--J0117--><h4><b>J0117 - Cannot declare a class to be 'private'</b></h4>
<P>The compiler detected use of the modifier <B>private</B> in an outer class declaration. This modifier may only be used with fields, methods, and inner class declarations.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">private class Simple {
   
   // error: a class cannot be 'private'
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0118 ************** -->
<A NAME="J0118"></A><!--J0118--><h4><b>J0118 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0119 ************** -->
<A NAME="J0119"></A><!--J0119--><h4><b>J0119 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0120 ************** -->
<A NAME="J0120"></A><!--J0120--><h4><b>J0120 - Divide or mod by zero</b></h4>
<P>The compiler detected a division by zero error in code. 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   final int x = 0;
   int y = 1 % x;
   //error: x cannot be 0 
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0121 ************** -->
<A NAME="J0121"></A><!--J0121--><h4><b>J0121 - Unable to recover from previous error(s)</b></h4>
<P>The compiler encountered a serious error and could not continue processing the file reliably. Try fixing whatever errors are already flagged, and then compile again.
<P>

			<!-- ********** Topic J0122 ************** -->
<A NAME="J0122"></A><!--J0122--><h4><b>J0122 - Exception 'identifier' not caught or declared by 'identifier'</b></h4>
<P>The compiler detected an exception that was thrown but never caught within the exception class. This error most likely occurs when a method calls another method <!--a-kellyf 09/11/97: with a declaration to throw?-->with a declaration to throw an exception. For a method to call another method that throws an exception, the method must either be declared to throw the exception or handle the error using a <B>try catch</B> combination.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">class SimpleException extends Exception {
   // do something meaningful
}

class Simple {
   
   void method1() throws SimpleException { }
   void method2() { method1(); } 
   // error: exception not declared for method2
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0123 ************** -->
<A NAME="J0123"></A><!--J0123--><h4><b>J0123 - Multiple inheritance of classes is not supported</b></h4>
<P>The compiler detected a class attempting to apply the keyword <B>extends</B> to more than one base class. This is defined as multiple inheritance in other languages and is not supported in Java.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple extends BaseClass1, BaseClass2 {
   // error: Multiple inheritance not supported in Java
}

class BaseClass1 {
   
   // do something meaningful
}

class BaseClass2 {
   
   // do something meaningful
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0124 ************** -->
<A NAME="J0124"></A><!--J0124--><h4><b>J0124 - Operator cannot be applied to 'identifier' values</b></h4>
<P>The compiler detected an operator being applied to a type it cannot be used with. Make sure the operation you are attempting is valid for the type of variable or object, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   void method1(boolean b) {
   
      b++;
      // error: post increment operator cannot
      // be applied to boolean variables
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0125 ************** -->
<A NAME="J0125"></A><!--J0125--><h4><b>J0125 - 'finally' without 'try'</b></h4>
<P>The compiler detected a <B>finally</B> block but did not find a corresponding <B>try</B> statement. A <B>finally</B> block is used to execute code after a <B>try</B> statement and regardless of the results of the <B>try</B> statement.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      finally {
         // error: missing corresponding 'try'
      }
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0126 ************** -->
<A NAME="J0126"></A><!--J0126--><h4><b>J0126 - 'catch' without 'try'</b></h4>
<P>The compiler detected a <B>catch</B> block but did not find a corresponding <B>try</B> statement. To use a <B>catch</B> block you must have a <B>try</B> statement preceding it. Make sure you have a valid <B>try</B> statement, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      catch {
         // error: missing corresponding 'try'
      }
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0127 ************** -->
<A NAME="J0127"></A><!--J0127--><h4><b>J0127 - 'else' without 'if'</b></h4>
<P>The compiler detected the keyword <B>else</B>, but did not find a corresponding <B>if</B> statement. This error most likely occurs when there are scoping<!--a-kellyf 09/10/97: Specify what "scoping" is.--><!--a-alexkr global or local scope, see previous comment on this.--> issues with regards to the placement of an <B>else</B> statement. This error can also occur if an <B>else</B> statement's corresponding <B>if</B> statement is missing.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      else // error: no corresponding 'if'
         ;
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0128 ************** -->
<A NAME="J0128"></A><!--J0128--><h4><b>J0128 - Cannot declare an interface to be 'final'</b></h4>
<P>The compiler detected an interface declared with the keyword <B>final</B>. Interfaces cannot be defined as final and thus cannot use the <B>final</B> modifier. Remove the <B>final</B> keyword from the interface's declaration, and then compile again.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">final interface Simple {
   
   // error: 'final' only applies to
   // classes, methods or variables
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0129 ************** -->
<A NAME="J0129"></A><!--J0129--><h4><b>J0129 - Cannot declare a class to be 'identifier' and 'identifier'</b></h4>
<P>The compiler detected a class declared with modifiers that cannot be combined. Make sure that the modifiers you have applied to the class do not conflict with each other, and then make appropriate changes.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public abstract final class Simple {
   
   // error: 'abstract' and 'final' cannot
   // be used together in a class declaration
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0130 ************** -->
<A NAME="J0130"></A><!--J0130--><h4><b>J0130 - Cannot declare an interface method to be 'native', 'static', 'synchronized' or 'final'</b></h4>
<P>The compiler detected one of the keywords previously shown used in the declaration of an interface method. Because an interface method does not have implementation code, it cannot be declared as <B>native</B>, <b>static</b>, <b>synchronized</b>, or <b>final</b>.
 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">interface Simple {
   
   public final void method1();
   // error: 'method1' cannot be declared 
   // as final in an interface
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0131 ************** -->
<A NAME="J0131"></A><!--J0131--><h4><b>J0131 - Cannot declare a method to be 'identifier' and 'identifier'</b></h4>
<P>The compiler detected the use of two or more incompatible modifiers in the declaration of a method. This error most likely occurs when a method has been defined with two access modifiers such as <B>public</B> and <B>private</B>. Make sure the modifiers for the method do not conflict with each other, and then make appropriate changes.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public private void method1() {
   
      // error: modifiers 'public' and 'private'
      // cannot be combined in a declaration
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0132 ************** -->
<A NAME="J0132"></A><!--J0132--><h4><b>J0132 - Cannot declare a field to be 'identifier' and 'identifier'</b></h4>
<P>The compiler detected the use of two or more incompatible modifiers in the declaration of a variable. This error most likely occurs when a field has been defined with two access modifiers, such as <B>public</B> and <B>private</B>. Make sure the modifiers for the field do not conflict with each other, and
then make appropriate changes.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public private int i;
   // error: modifiers 'public' and 'private' 
   // cannot be combined in a declaration
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0133 ************** -->
<A NAME="J0133"></A><!--J0133--><h4><b>J0133 - Constructors cannot be declared 'native', 'abstract', 'static', 'synchronized', or 'final'</b></h4>
<P>The compiler detected the use of one of the modifiers previously shown in the declaration of a constructor. Make sure that the constructor is not defined with any of the modifiers mentioned in the error message, and then compile again.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   final Simple() {}
   // error: constructors cannot be 'final'
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0134 ************** -->
<A NAME="J0134"></A><!--J0134--><h4><b>J0134 - Interfaces cannot have constructors</b></h4>
<P>The compiler detected an interface containing a constructor declaration. Because an interface cannot be instantiated, constructors are not allowed to be defined for an interface. If you are defining a method with the same name as the method, make sure that it has appropriate modifiers to differentiate it from a constructor declaration.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">interface Simple {
   
   Simple();
   // error: interfaces cannot 
   // declare constructors
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0135 ************** -->
<A NAME="J0135"></A><!--J0135--><h4><b>J0135 - Interface data members cannot be declared 'transient', 'volatile', 'private', or 'protected'</b></h4>
<P>The compiler detected one of the modifiers previously shown used in the declaration of a interface member variable.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">interface Simple {
   
   volatile int i = 1;
   // error: 'volatile'cannot be used.
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0136 ************** -->
<A NAME="J0136"></A><!--J0136--><h4><b>J0136 - Public class 'identifier' should not be defined in 'identifier'</b></h4>
<P>The compiler detected more than one class declared with the modifier <B>public</B> in a source file. Remove the <B>public</B> access modifier from the other classes, and make sure that the class that will be exposed through the class file is declared as <B>public</B>. You can also move classes that need to remain declared as <B>public</B> to their own source file.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   // do something meaningful
   
}

public class Errorclass {
   
   // error: only one class may be defined as 
   // 'public' within the same source file
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0137 ************** -->
<A NAME="J0137"></A><!--J0137--><h4><b>J0137 - Not used</b></h4>
<P>This error message is currently not used.

<P>

			<!-- ********** Topic J0138 ************** -->
<A NAME="J0138"></A><!--J0138--><h4><b>J0138 - Interface cannot have static initializer</b></h4>
<P>The compiler detected a <B>static</B> initializer within an interface. Because an interface does not get instantiated, initializers cannot be defined in an interface. To set the values of interface fields, initialize them at the time of declaration.
 
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">interface Simple {
   
   static {
      // error: static initializers cannot 
      // be used in interfaces
   }
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0139 ************** -->
<A NAME="J0139"></A><!--J0139--><h4><b>J0139 - Invalid label</b></h4>
<P>The compiler detected an invalid label. Labels must start with an alphanumeric character. Change the label, and then compile again. 
<P>The following sample illustrates this error.
<!--a-kellyf 09/11/97: Indent on code sample needs to be fixed per a-lisasu.-->
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
   123:
   // error: label cannot 
   // begin with alphanumeric
   
   return;
   
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0140 ************** -->
<A NAME="J0140"></A><!--J0140--><h4><b>J0140 - Cannot override static method 'identifier'</b></h4>
<P>The compiler detected an attempt to override a <B>static</B> method from within a subclass. A method that has been declared as <B>static</B> cannot be overridden.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   static void method1() {}
}

class SimpleSubclass extends Simple {
   
   void method1() {}
   // error: cannot override 
   // static method
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0141 ************** -->
<A NAME="J0141"></A><!--J0141--><h4><b>J0141 - Argument cannot have type 'void'</b></h4>
<P>The compiler detected a method argument defined as type <B>void</B>. The <B>void</B> type can only be used for method return values to declare a method has no return value. Change the data type of the argument, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1(void i) {
      // error: type void can only 
      // be used as a return value
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0142 ************** -->
<A NAME="J0142"></A><!--J0142--><h4><b>J0142 - Cannot make static call to abstract method 'identifier'</b></h4>
<P>The compiler detected an attempt to directly call an abstract method. Abstract methods are defined to provide a definition of a method to be implemented by subclasses and thus <B>abstract</B> methods do not have implementation code. Because of this lack of implementation in an <B>abstract</B> method, calling an abstract method using the <B>super</B> keyword is invalid.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">abstract class Simple {
   
   abstract int method1();
}

class SimpleSubclass extends Simple {
   
   int method1() {
      
      return super.method1();
      // error: 'method1' must be 
      // implemented instead
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0143 ************** -->
<A NAME="J0143"></A><!--J0143--><h4><b>J0143 - Cannot throw exception 'identifier' from static initializer</b></h4>
<P>The compiler detected an attempt to throw an exception from within a static initializer. This error most likely occurs when a <B>throw</B> statement is called or an initialization of a static class instance occurs within a static initializer. To capture exceptions from static class instance initializations in a static initializer, use a <B>try</B> and <B>catch</B> block combination.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   static {
      ThrowClass TClass = new ThrowClass();
      // error: cannot throw exceptions 
      // within static initializers
   }
}

class ThrowClass {
   
   ThrowClass() throws Exception{}
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0144 ************** -->
<A NAME="J0144"></A><!--J0144--><h4><b>J0144 - Cannot find definition for interface 'identifier'</b></h4>
<P>The compiler could not locate a definition for the named interface. This error most likely occurs when an implemented interface is either missing or misspelled. Verify the location and name of the interface you are implementing, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple implements Bogus {
   // error: the interface 'Bogus' does not exist
   
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0145 ************** -->
<A NAME="J0145"></A><!--J0145--><h4><b>J0145 - Output directory too long: 'identifier'</b></h4>
<P>The output directory exceeded 228 characters in length. Try shortening the length of the output directory path, and then compile again.
<P>

			<!-- ********** Topic J0146 ************** -->
<A NAME="J0146"></A><!--J0146--><h4><b>J0146 - Cannot create output directory 'identifier'</b></h4>
<P>The output directory could not be created. This error most likely occurs when you do not have write permission on the specified drive. 
<P>

			<!-- ********** Topic J0147 ************** -->
<A NAME="J0147"></A><!--J0147--><h4><b>J0147 - Cannot access private member 'identifier' in class 'identifier' from 'identifier'</b></h4>
<P>The compiler detected an invalid attempt to access a private member contained within another class. Private class members are only accessible from within the member's class.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">class AccessClass {   
   private int i = 0;   
}

public class Simple {
   
   public void method1() {
      
      AccessClass ac = new AccessClass();
      
      ac.i = 1;
      // error: cannot access 'i'
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0148 ************** -->
<A NAME="J0148"></A><!--J0148--><h4><b>J0148 - Cannot reference instance method 'identifier' before superclass constructor has been called</b></h4>
<P>The compiler detected an attempt to reference an instance method before the superclass constructor was called. This error most likely occurs when a base class method is called from within a subclass's constructor using the <B>super()</B> method. This error can also occur if the subclass calls its own methods from the constructor using the <B>this()</B> method. Because instances of the subclass and base class have not been instantiated at the time the constructor is called, this error occurs. To avoid this situation, use the <B>super</B> statement to call a base class method, and use the <B>this</B> statement to call a subclass method.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">abstract class Simple {
   
   Simple(int i) {}
   
   int method1() {
      
      return 0;
   }
}

class SimpleSubclass extends Simple {
   
   SimpleSubclass() {
      
      super(method1());
      // error: constructor must be called first
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0149 ************** -->
<A NAME="J0149"></A><!--J0149--><h4><b>J0149 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0150 ************** -->
<A NAME="J0150"></A><!--J0150--><h4><b>J0150 - Cannot have repeated interface 'identifier'</b></h4>
<P>The compiler detected an interface name being repeated within a class declaration. This error is most likely caused when a class implements a large number of interfaces and an interface has a duplicate entry in the <B>implements</B> list. Check to make sure you do not have a duplicate interface entry, and then compile again.
<P>

			<!-- ********** Topic J0151 ************** -->
<A NAME="J0151"></A><!--J0151--><h4><b>J0151 - Variable 'identifier' is already defined in this method</b></h4>
<P>The compiler detected two variables with the same name that are defined twice within the same scope of a method. Make sure that a variable has not been defined twice in the same scope, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
   
      int i = 1;
      int i = 0;
      // error: 'i' defined twice within
      // the same scope
   
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0152 ************** -->
<A NAME="J0152"></A><!--J0152--><h4><b>J0152 - Ambiguous reference to 'identifier' in interfaces 'identifier' and 'identifier'</b></h4>
<P>The compiler detected an ambiguous reference to an identifier. The identifier may have been declared in two or more interfaces, and the compiler could not determine which reference to use. Make sure that you do not have two interfaces with the same field defined.<!--a-kellyf 09/11/97: Sample code need // message
to point out where the error is, per a-lisasu.-->

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">interface Interface1 {
    final int i = 0;
}

interface Interface2 {
    final int i = 1;
}

public class Simple implements Interface1, Interface2 {

   int method1() {
      return i; //Error, the class implements two
                //interfaces that define 'i' separately.
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0153 ************** -->
<A NAME="J0153"></A><!--J0153--><h4><b>J0153 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0154 ************** -->
<A NAME="J0154"></A><!--J0154--><h4><b>J0154 - Not used</b></h4>
<P>This error message is currently not used.
<p>

			<!-- ********** Topic J0155 ************** -->
<A NAME="J0155"></A><!--J0155--><h4><b>J0155 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0156 ************** -->
<A NAME="J0156"></A><!--J0156--><h4><b>J0156 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0157 ************** -->
<A NAME="J0157"></A><!--J0157--><h4><b>J0157 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0158 ************** -->
<A NAME="J0158"></A><!--J0158--><h4><b>J0158 - Class 'identifier' already defined</b></h4>
<P>The compiler detected two or more classes defined with the same name. Make sure that you do not have the class defined more than once in the same source file. This error can also occur if a class is duplicated by an imported class. Rename one of the classes or remove the duplicate instance, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   // do something meaningful
}

class Simple {
   // error: class 'Simple' already defined
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0159 ************** -->
<A NAME="J0159"></A><!--J0159--><h4><b>J0159 - '@' must be followed by the response filename</b></h4>
<P>The compiler detected the @ character on the JVC command line, but did not detect a valid response filename immediately following it. Supply the response filename, and then compile again.
<P>

			<!-- ********** Topic J0160 ************** -->
<A NAME="J0160"></A><!--J0160--><h4><b>J0160 - response file 'identifier' could not be opened</b></h4>
<P>The compiler could not open the specified response file. This error most likely occurs when the response file name is misspelled or the file does not exist.
<P>

			<!-- ********** Topic J0161 ************** -->
<A NAME="J0161"></A><!--J0161--><h4><b>J0161 - Cannot open source file: 'identifier'</b></h4>
<P>The source file specified in the error message could not be opened. This error most likely occurs when either the filename specified is misspelled or the file does not exist. Check the location of the specified source file, and then compile again.

<P>

			<!-- ********** Topic J0162 ************** -->
<A NAME="J0162"></A><!--J0162--><h4><b>J0162 - Failed to initialize compiler - maybe you didn't set the class path?</b></h4>
<P>The compiler failed to properly initialize. Check to ensure the CLASSPATH <!--a-kellyf 09/10/97: Remove bold tags. Insert "environment--> environment variable is set properly, and then compile again.
<P>

			<!-- ********** Topic J0163 ************** -->
<A NAME="J0163"></A><!--J0163--><h4><b>J0163 - Array 'identifier' missing array index</b></h4>
<P>The compiler detected access to an array type, but the index value was missing. To access an element of an array, you must provide a valid integer index for the array.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   int j[] = {1, 2, 3};
   
   void method1() {
      j[] = 0;
      // error: 'j' missing index value
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0164 ************** -->
<A NAME="J0164"></A><!--J0164--><h4><b>J0164 - Ambiguous import of class 'identifier' from more than one package</b></h4>
<P>The compiler detected two or more <B>import</B> statements attempting to import identical class names from different packages. This error most likely occurs when two packages contain duplicate classes and both packages are imported into the same source file. Check the packages imported into the source file for duplicate classes. Remove the duplicate class from one of the packages or remove one of the <B>import</B> statements from the source file.

<P>

			<!-- ********** Topic J0165 ************** -->
<A NAME="J0165"></A><!--J0165--><h4><b>J0165 - Cannot throw exception 'identifier' from method 'identifier' -- it is not a subclass of any exceptions thrown from overloaded method 'identifier'</b></h4>
<P>The compiler detected an override method attempting to throw more exceptions than the method it overrides. In Java, an override method may not be declared to throw more exceptions than the overridden method. Either change the exception thrown to one that the base class throws, or change the base class declaration to throw the exception type that the subclass needs to throw.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">class ExceptionA extends Exception (
   // do something meaningful
}

class ExceptionB extends Exception {
   // do something meaningful
}

class AnotherClass {
   
   public void method1() throws ExceptionA {
      // do something meaningful
   }
}

public class Simple extends AnotherClass {
   
   public void method1() throws ExceptionA, ExceptionB {
      // error: cannot throw greater than 
      // one exception here
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0166 ************** -->
<A NAME="J0166"></A><!--J0166--><h4><b>J0166 - Cannot access member 'identifier' in class 'identifier' from 'identifier' -- it is in a different package</b></h4>
<P>The compiler detected an invalid attempt to reference a member variable defined within a different package. This error most likely occurs when an attempt is made to access a <B>protected</B> member defined within another package.<!--a-kellyf 09/11/97: Solution?-->
<P>

			<!-- ********** Topic J0167 ************** -->
<A NAME="J0167"></A><!--J0167--><h4><b>J0167 - Cannot override non-static method 'identifier' with static method 'identifier'</b></h4>
<P>The compiler detected an attempt to override a superclass method with a subclass method declared with the modifier <B>static</B>. When a method is overridden in a subclass, the method cannot raise or lower the access level of the method or apply the <B>static</B> modifier. Remove the <B>static</B> modifier from the overridden method declaration, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public void method1() {
      // do something meaningful
   }
}

class Simple2 extends Simple {
   
   static public void method1() {
      // error: overriding superclass 'method1'
      // with a static method is not valid
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0168 ************** -->
<A NAME="J0168"></A><!--J0168--><h4><b>J0168 - The declaration of an abstract method must appear within an abstract class</b></h4>
<P>The compiler detected a method declared with the modifier <B>abstract</B> within a class which was not defined as <B>abstract</B>. This error most likely occurs when a class was intended to be <B>abstract</B> but is missing the <b>abstract</b> modifier in the class declaration. Either change the class so it is declared as <B>abstract</B> or remove the modifier from the methods defined in the class.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   abstract void method1();
      // error: class must also be abstract
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J0169 ************** -->
<A NAME="J0169"></A><!--J0169--><h4><b>J0169 - Cannot access 'identifier' -- only public classes and interfaces in other packages can be accessed</b></h4>
<P>The compiler detected an attempt to access a non-public class or interface contained within another package. Only classes or interfaces defined with the modifier <B>public</B> can be accessed in other packages. Check the access level of the class or interface you are accessing in the other package and ensure that it is <B>public</B>.

<P>

			<!-- ********** Topic J0170 ************** -->
<A NAME="J0170"></A><!--J0170--><h4><b>J0170 - Cannot load predefined class 'identifier' -- is CLASSPATH set correctly?</b></h4>
<P>The compiler attempted to load a predefined class, but was unable to find the appropriate file. This error most likely occurs when the <B>CLASSPATH</B> variable has not been set correctly. Check to ensure the <B>CLASSPATH</B> is set properly, and then compile again.

<P>

			<!-- ********** Topic J0171 ************** -->
<A NAME="J0171"></A><!--J0171--><h4><b>J0171 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0172 ************** -->
<A NAME="J0172"></A><!--J0172--><h4><b>J0172 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J0173 ************** -->
<A NAME="J0173"></A><!--J0173--><h4><b>J0173 - Found class 'identifier' in package 'identifier' rather than package 'identifier'</b></h4>
<P>The compiler found the specified class, but the class was not defined as a member of the correct package. This error most likely occurs when an <B>import</B> statement includes an incorrect package identifier for the class.
<p>

			<!-- ********** Topic J0174 ************** -->
<A NAME="J0174"></A><!--J0174--><h4><b>J0174 - Not used</b></h4>
<P>This error message is currently not used.
<p>

			<!-- ********** Topic J0175 ************** -->
<A NAME="J0175"></A><!--J0175--><h4><b>J0175 - Cannot invoke method on 'null' literal</b></h4>
<P>The compiler detected an attempt to call a method from the <B>null</B> keyword. <B>Null</B> is not a class object and provides no methods.
<p>

			<!-- ********** Topic J0176 ************** -->
<A NAME="J0176"></A><!--J0176--><h4><b>J0176 - Duplicate label 'identifier' nested inside another label with same name</b></h4>
<P>The compiler detected a nested label that was the same as another label. Rename the label to something different then change all break and <B>continue</B> statements that reference the label, and then compile again.
<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple{
   void method1(){
      outsideLoop:
      for (int i=0;i&#60;10;i++)
      {
         outsideLoop:  //error: duplicate label
         for (int x=0;x&#60;10;x++)
         {
            break outsideLoop;
         }
         break outsideLoop;
      }
   }
}
</FONT> </PRE>
<p>

			<!-- ********** Topic J0177 ************** -->
<A NAME="J0177"></A><!--J0177--><h4><b>J0177 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0178 ************** -->
<A NAME="J0178"></A><!--J0178--><h4><b>J0178 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0179 ************** -->
<A NAME="J0179"></A><!--J0179--><h4><b>J0179 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0180 ************** -->
<A NAME="J0180"></A><!--J0180--><h4><b>J0180 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0181 ************** -->
<A NAME="J0181"></A><!--J0181--><h4><b>J0181 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0182 ************** -->
<A NAME="J0182"></A><!--J0182--><h4><b>J0182 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0183 ************** -->
<A NAME="J0183"></A><!--J0183--><h4><b>J0183 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0184 ************** -->
<A NAME="J0184"></A><!--J0184--><h4><b>J0184 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0185 ************** -->
<A NAME="J0185"></A><!--J0185--><h4><b>J0185 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0186 ************* -->
<A NAME="J0186"></A><!--J0186--><h4><b>J0186 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0187 ************* -->
<A NAME="J0187"></A><!--J0187--><h4><b>J0187 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0188 ************* -->
<A NAME="J0188"></A><!--J0188--><h4><b>J0188 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J0189 ************** -->
<A NAME="J0189"></A><!--J0189--><h4><b>J0189 - 'return' not allowed in a static initializer or instance initializer</b></h4>
<P>A <B>return</B> statement was found in a static initializer. Initializers, like constructors, cannot return a value. Remove the <B>return</B> statement, and then compile again.
<!--a-kellyf 09/11/97: per a-lisasu: code sample needs a // to point out where the error is.--><!--a-alexkr ok-->

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple{
   
   static int var1;
   
   static{
   
   var1 = 0;
   return; // Error, static initializer cannot use the
           // return statement.
   
   }
}
</FONT> </PRE>
<p>

			<!-- ********** Topic J0190 ************** -->
<A NAME="J0190"></A><!--J0190--><h4><b>J0190 - Not used</b></h4>
<P>This error message is currently not used.
<p>

			<!-- ********** Topic J0191 ************** -->
<A NAME="J0191"></A><!--J0191--><h4><b>J0191 - Expected '.class'</b></h4>
<P>The compiler detected usage of an intrinsic type name in an assignment statement but did not find <B>.class</B> after the name. This error most often occurs when the <B>.class</B> keyword was omitted. Make the appropriate changes to the statement, and then compile again.

<P>The following sample illustrates this error.
<P>
<PRE><FONT FACE="COURIER">public class Simple{
   public static void main (String args[]){
      Class x = int;//error: missing '.class'
   }
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0192 ************** -->
<A NAME="J0192"></A><!--J0192--><h4><b>J0192 - '.class' on intrinsic type requires Java 1.1 compatible class libraries</b></h4>
<P>The compiler has detected usage of .class with an intrinsic data type, but either the Microsoft Win 32 VM for Java or the Java class libraries are based on Java 1.0. Make sure that your class libraries and Java VM are the Java 1.1 versions, and then compile again.
<p>

			<!-- ********** Topic J0193 ************** -->
<A NAME="J0193"></A><!--J0193--><h4><b>J0193 - Cannot have an array of type 'void'</b></h4>
<P>An attempt to define an array of type <B>void</B> was found by the compiler. The <B>void</B> data type is for use with methods to declare the method has no return value and thus cannot be used as an array.
<p>

			<!-- ********** Topic J0194 ************** -->
<A NAME="J0194"></A><!--J0194--><h4><b>J0194 - class or interface cannot be declared 'volatile', 'native', 'transient', or 'synchronized'
</b></h4>
<P>The compiler detected that an inner class has been declared with one of the above mentioned modifiers. Inner classes<!--a-kellyf 09/10/97: classes--> can only use the private, public, protected, and static modifiers.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">public class Simple{
   //Do something here
   volatile class InnerClass{
      /*error: like outer class, inner classes cannot be defined as
               volatile */
   }
}
</FONT> </PRE>

			<!-- ********** Topic J0195 ************** -->
<A NAME="J0195"></A><!--J0195--><h4><b>J0195 - Cannot declare 'identifier' as 'static' in inner class 'identifier'</b></h4>
<P>The compiler detected an attempt to declare a variable or method as <B>static</B> from within an inner class. Unlike regular class declarations, inner classes do not support static members unless the inner class has been declared static. This error can also occur if an interface was defined within an inner class.<!--a-kellyf 09/11/97: Open comment in the code sample.-->
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">public class Simple{
   
   //Do something meaningful here
   
   class InnerClass{
   
   static int var1; /* error: cannot declare static
                              members in inner class */
   }
}
</FONT> </PRE>
<p>

			<!-- ********** Topic J0196 ************** -->
<A NAME="J0196"></A><!--J0196--><h4><b>J0196 - Nested class 'identifier' cannot have the same name as any of its enclosing classes</b></h4>
<P>The specified inner class has the same name as one of the classes that it is nested under. Make sure you have not duplicated the name of a class that your inner class is nested in.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">public class Simple{
   
   // Do something meaningful here
   class InnerClass{
      //Do something meaningful here
        class Simple{
            //error: inner class has same name as a parent class
        }
   }
}
</FONT> </PRE>
<p>

			<!-- ********** Topic J0197 ************** -->
<A NAME="J0197"></A><!--J0197--><h4><b>J0197 - Cannot declare interface in inner class 'identifier'.</b></h4>
<P>The compiler detected an attempt to declare an interface inside an inner class. Inner class definitions do not support interfaces declared within them.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">public class Simple{
   //Do something meaningful here
   class InnerClass{
   //Do something meaningful here
      interface MyInterface{
         /*error: interfaces cannot be declared
                  inside inner classes */
      }
   }
}
</FONT> </PRE>
<p>

			<!-- ********** Topic J0198 ************** -->
<A NAME="J0198"></A><!--J0198--><h4><b>J0198 - An enclosing instance of type 'identifier' is required</b></h4>
<P>The compiler detected that an inner class definition has tried to reference something outside of its scope. Examples of when this can occur are:
<ul>
<li>A <B>static</B> inner class definition referenced one of the parent class's variables. Because the inner class is declared <B>static</B>, it cannot reference any members of the parent class without an instance of the parent class defined.
<li>An inner class tried to reference a class that was not its outer class using the <B>this</B> keyword with the classes name preceding it. Since the referenced class it not the inner class's parent class, an instance cannot be implied.
</ul>
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">//This example illustrates the first error situation
public class Simple{
   int x = 10;
   static class InnerClass{
      public void method1(){
         int y = x; /*error: instance variable needed
                             to reference parent
                             variables. */
      }
   }
}

//This example illustrates the second error situation
class A{
   int x;
}
class B{
   //Do something meaningful here
   class InnerClass{
      void method1(){
         int y = A.this.x;
         /*error: no instance of A defined. Cannot use
           the &#60;classname.this.variable&#62; syntax here.*/
      }
   }
}
</FONT> </PRE>
<p>

			<!-- ********** Topic J0199 ************** -->
<A NAME="J0199"></A><!--J0199--><h4><b>J0199 - Call of 'this()' cannot be qualified</b></h4>
<P>The compiler detected that an inner class's constructor attempted to call a constructor from its outer class using the class name and <B>this()</B>. Inner classes cannot call their outer class's constructors.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">public class Simple{
   int x;
   Simple(int x){
      this.x = x;
   }
   class InnerClass{
      InnerClass(){
         Simple.this(10);
         //error: cannot call outer class constructor
      }
   }
}
</FONT> </PRE>
<p>

			<!-- ********** Topic J0200 ************** -->
<A NAME="J0200"></A><!--J0200--><h4><b>J0200 - 'this' must be qualified with a class name </b></h4>
<P>The compiler detected that an attempt was made in an inner class to reference an outer class member using the <B>this</B> keyword with a name other than an outer class's name. Only the name of the outer class can be used from an inner class to reference members of the outer class.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">public class Simple{
   int x;
   class InnerClass{
      void method1(){
         int j = x.this;
         /*error: only a class name can be used with
         this to reference outer class */
      }
   }
}
</FONT> </PRE>
<p>

			<!-- ********** Topic J0201 ************** -->
<A NAME="J0201"></A><!--J0201--><h4><b>J0201 - 'super' cannot be qualified except as a superclass constructor call</b></h4>
<P>The compiler detected the usage of the <B>super</B> keyword with an instance of the superclass preceding it to access a field or method of the superclass. Using an instance of a superclass along with the keyword <B>super</B> is limited to referencing a superclass constructor when the superclass has inner classes defined.
<p>
			<!-- ********** Topic J0202 ************** -->
<A NAME="J0202"></A><!--J0202--><h4><b>J0202 - 'super()' cannot be qualified; superclass 'identifier' is not an inner class</b></h4>
<P>The compiler has detected a call to a superclass constructor using an instance of the superclass but the superclass is not an inner class. The usage of an instance of a superclass with the <B>super</B> keyword is only valid when the superclass is an inner class.<!--a-kellyf 09/11/97: A superclass is only an inner class when blah?-->
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">class Simple{
   //Do something meaningful here
}

class NotSimple extends Simple
{
   NotSimple(Simple smp){
      smp.super();
      /*error: cannot call 'super' with instance when
        superclass does not contain inner classes*/
   }
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0203 ************** -->
<A NAME="J0203"></A><!--J0203--><h4><b>J0203 - Cannot access protected member 'identifier' in class 'identifier' from class 'identifier'</b></h4>
<P>The compiler has detected an attempt to access a protected member from a class in a different package. Classes that reside in separate packages cannot refer to protected members unless you are subclassing a class<!--a-kellyf [a-alexkr, no actually, stet] 09/11/97: making a class a subclass?--> in the other package.<!--a-kellyf 09/11/97: Solution?-->
<p>
			<!-- ********** Topic J0204 ************** -->
<A NAME="J0204"></A><!--J0204--><h4><b>J0204 - Cannot access protected member 'identifier' in class 'identifier' through<!--a-kellyf [a-alexkr]09/10/97: through--> a qualifier of type 'identifier'</b></h4>
<P>The compiler detected that a class in one package that is extending a class in another package, attempted to access a protected member of the base class using an instance of the base class. This error most likely occurs when a class attempts to access members of its base class through an instance other than <B>this</B><!--a-kellyf 09/11/97: Remove the empty parentheses.--> or <B>super</B>.<!--a-kellyf 09/11/97: Solution?-->
<p>
			<!-- ********** Topic J0205 ************** -->
<A NAME="J0205"></A><!--J0205--><h4><b>J0205 - Cannot use non-final local variable 'identifier' from a different method</b></h4>
<P>The compiler detected that a local variable, which was not declared as final, was referenced in a method. This error can occur if an inner class is defined in a method declaration and the inner class attempts to reference a parameter or local variable passed to the method.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">public class Simple{
   void method1(int var1){
      class InnerClass{
         boolean getVar1(){
           return(var1 == 1);
           /*error cannot reference local variable of
                   method from within inner class. */
         }
      }
   }
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0206 ************** -->
<A NAME="J0206"></A><!--J0206--><h4><b>J0206 - Cannot assign a second value to blank final variable 'identifier'</b></h4>
<P>The compiler detected an attempt to assign a value to a <B>final</B> variable more than once. This error most likely occurs when a blank final variable is initialized more than once in constructor or initializer. Check for duplicate initializations of the <B>final</B> variable mentioned in the error message, and then compile again.
<p>
			<!-- ********** Topic J0207 ************** -->
<A NAME="J0207"></A><!--J0207--><h4><b>J0207 - Cannot assign blank final variable 'identifier' in a loop</b></h4>
<P>The compiler detected that a <B>final</B> variable was assigned a value from within the scope of a program control loop. A <B>final</B> variable can only be assigned a value once and thus cannot be initialized within a loop. Move the initialization of the <B>final</B> variable specified in the error message outside of the loop and ensure that it is initialized only once.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">public class Simple{
   final int x;
   
   public Simple(){
      for (int z=0;z&#60;10;z++){
         x = z; /*error: cannot assign final variable
                  in loop */
      }
   }
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0208 ************** -->
<A NAME="J0208"></A><!--J0208--><h4><b>J0208 - Constructor or instance initializer must assign a value to blank final variable 'identifier'</b></h4>
<P>The compiler detected that a <B>final</B> variable was declared but never assigned a value in either an initializer or constructor. For a variable to be properly declared <B>final</B>, it must be assigned a value.
<!--a-kellyf 09/11/97: Solution?-->
<p>
			<!-- ********** Topic J0209 ************** -->
<A NAME="J0209"></A><!--J0209--><h4><b>J0209 - Expected '='</b></h4>
<P>The compiler detected that an "=" was missing from a comment tag (for example <B>@com</B>,<B> @security</B>,<B> @dll</B>) attribute. This error most often occurs when an equal sign is missing from an attribute in a comment tag declaration. This error could also occur if another symbol or character obscures the &quot;=&quot; sign from being evaluated by the compiler. Check to make sure all comment tag attributes have proper &quot;=&quot; signs applied, and then compile again.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">/**@com.interface(iid 31415926-5358-9793-2384-612345678901)*/
//error: missing equal sign in 'iid' parameter
interface Itest{
   //Do something meaningful here
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0210 ************** -->
<A NAME="J0210"></A><!--J0210--><h4><b>J0210 - Expected '.'</b></h4>
<P>The compiler detected that the specified comment tag's declaration (for example <B>@com</B>) is missing a period (.) after the comment tag. This error can also occur if another symbol or character obscures the period symbol from being evaluated by the compiler. Check to make sure your comment tag declaration contains a period after the comment tag, and then compile again.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">/**@com class*/
//error: missing '.' from @com statement

public class Simple{
   //Do something meaningful here
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0211 ************** -->
<A NAME="J0211"></A><!--J0211--><h4><b>J0211 - Not used</b></h4>
<P>This error message is currently not used.
<p>
			<!-- ********** Topic J0212 ************** -->
<A NAME="J0212"></A><!--J0212--><h4><b>J0212 - Not used</b></h4>
<P>This error message is currently not used.
<p>
			<!-- ********** Topic J0213 ************** -->
<A NAME="J0213"></A><!--J0213--><h4><b>J0213 - Not used</b></h4>
<P>This error message is currently not used.
<p>
			<!-- ********** Topic J0214 ************** -->
<A NAME="J0214"></A><!--J0214--><h4><b>J0214 - Invalid GUID specified</b></h4>
<P>The compiler detected that an <B>@com</B> attribute that uses a GUID was incorrect.<!--[a-alexkr, stet]a-kellyf 09/11/97: the GUID, the attribute or both are incorrect?--> This can be caused by a syntax error in entering the GUID. Check the syntax for the GUID, and then compile again.
<p>
			<!-- ********** Topic J0215************** -->
<A NAME="J0215"></A><!--J0215--><h4><b>J0215 - Syntax error in @com declaration</b></h4>
<P>A syntax error was found in the specified <B>@com</B> declaration. This is most often caused by incorrectly typing the declaration. Check the syntax of the <B>@com</B> declaration, and then compile again.
<p>
			<!-- ********** Topic J0216 ************** -->
<A NAME="J0216"></A><!--J0216--><h4><b>J0216 - @com attribute 'identifier' on 'identifier' is illegal in this context</b></h4>
<P>The compiler has detected that a value assigned to an attribute within an <B>@com</B> declaration is illegal. This error most often occurs when an attribute is specified but usage of the attribute requires that other specific attributes be specified. This error can also occur if an attribute is specified in the wrong location within an <B>@com</B> declaration. The following list illustrates some examples of when this can occur.
<ul>
<li>The <B>@com.parameter</B> attribute <b>iid</b> can only be specified if the attribute <B>type</B> has a value of either &quot;OBJECT&quot; or &quot;DISPATCH&quot;.
<li>The <B>@com.parameter</B> attribute size can only be specified if the type attribute is specified as either "ARRAY", "STRUCT", "SYSFIXEDSTRING", or "FIXEDARRAY".
<li>The <b>@com.method</b> attribute <b>name2</b> can only be specified if the method is declared within an <b>@com.interface</b> declaration that has its <b>type</b> attribute equal to either <b>dual</b> or <b>dispatch</b>.
<li>The <b>@com.parameter</b> attribute <b>name</b> cannot be specified as the last attribute in an <b>@com.parameter</b> declaration.
</ul>
<p>
			<!-- ********** Topic J0217 ************** -->
<A NAME="J0217"></A><!--J0217--><h4><b>J0217 - @com attribute 'identifier' was not specified for 'identifier' but is required in this context</b></h4>
<P>The compiler has detected an attribute for the <b>@com</b> declaration shown in the error is missing, and is required for this type of declaration. Each type of @com declaration has attributes that are required. Check the documentation on <b>@com</b> for more details on what attributes are required for the <b>@com</b> declaration that is listed in the error message.<!--[a-alexk, no, thats how its used....]a-kellyf 09/11/97: 
Remove the empty parentheses from @com.class in the sample.-->
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">/**@com.class() */
//error: must specify iid for @com.class
public class Simple{
   //Do something here
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0218 ************** -->
<A NAME="J0218"></A><!--J0218--><h4><b>J0218 - @com attribute 'identifier' on 'identifier' has an invalid value</b></h4>
<P>The compiler has detected that the value specified in the error message is either not the correct type for the attribute specified in the error or is outside the valid ranges for the error. Check the value assigned to the specified attribute, and then compile again.
<p>
			<!-- ********** Topic J0219 ************** -->
<A NAME="J0219"></A><!--J0219--><h4><b>J0219 - An @com attribute cannot be placed on member 'identifier' unless the containing class also has an @com attribute</b></h4>
<P>The compiler has detected that an <B>@com</B> declaration was placed on a member of a class or interface but the class or interface was not declared with an <B>@com</B> declaration. Check to make sure the class or interface that contains the method specified in the error has a valid <b>@com</b> declaration defined.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">interface Simple{
   /**@com.method(dispid=777) */
   public void method1();
   /*error: interface does not have an @com comment tag
            assigned*/
}
</FONT> </PRE>
<p>

			<!-- ********** Topic J0220 ************** -->
<A NAME="J0220"></A><!--J0220--><h4><b>J0220 - An @com attribute cannot be placed on static member 'identifier'</b></h4>
<P>The compiler detected that an <B>@com</B> declaration was placed on a static member of a class. Static members cannot be exposed through COM. Remove the <B>static</B> keyword from the method or field, and then compile again.
<p>
			<!-- ********** Topic J02221 ************** -->
<A NAME="J0221"></A><!--J0221--><h4><b>J0221 - The @com attribute on member 'identifier' cannot be used in this kind of class or interface</b></h4>
<P>The compiler has detected that an <B>@com</B> declaration was placed on a member of a class or method but because of the type of <B>@com</B> declaration used with the class or interface, it is not allowed. This error can occur in the following situations:
<ul>
<li>Using an <B>@com.structmap</B> declaration on a member of a class or interface that has the <B>@com.class</B> or <b>@com.interface</b> declaration applied.
<li>Using an <B>@com.method</B> declaration on a member of a class that has the <B>@com.struct</B> declaration applied.
</ul>
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">/**@com.struct()*/
class Simple{
   /**@com.method(dispid=777)*/
   public native void method1();
   /*error: cannot use @com.method inside of
            @com.struct*/
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0222 ************** -->
<A NAME="J0222"></A><!--J0222--><h4><b>J0222 - @com attribute cannot be placed on method 'identifier'-- it must be declared 'native' or be in an interface</b></h4>
<P>The compiler has detected that a method was specified with an <B>@com.method</B> or <B>@com.parameters</B> declaration but the method was not declared with the <B>native</B> modifier or declared in an interface definition. For methods to be exposed through a COM interface, they must be either declared <B>native</B> from within a class declaration or be declared in an interface declaration.
<p>
			<!-- ********** Topic J0223 ************** -->
<A NAME="J0223"></A><!--J0223--><h4><b>J0223 - The @com.parameters declaration on member 'identifier' has the wrong number of parameters</b></h4>
<P>The compiler has detected that the <B>@com.parameters</B> declaration, specified in the error message, has a different number of parameters than the method it is exposing through COM. Make sure that both the method's declaration and the <B>@com.parameters</B> declaration have the correct number of parameters, and then compile again.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">/**@com.interface(iid=31415926-5358-9793-2384-612345678910)*/
interface Itest{
   /** @com.method(dispid=306)
       @com.parameters([type=BOOLEAN] var1, var2, var3)
   */
   public void method1(boolean var1, int var2);
   /*error: extra parameter added to com.parameters
            declaration */
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0224 ************** -->
<A NAME="J0224"></A><!--J0224--><h4><b>J0224 - 'return' must be the last item in an @com.parameters declaration</b></h4>
<P>When declaring <B>@com.parameters</B> for a method, the <B>return</B> parameter must be the last parameter in the list. The compiler has detected the <B>return</B> parameter in a different position within the parameter list. Check the location of the return parameter in the <B>@com.paramters</B> declaration specified in the error message, make appropriate changes, and then compile again.
<p>
			<!-- ********** Topic J0225 ************** -->
<A NAME="J0225"></A><!--J0225--><h4><b>J0225 - An @com.'identifier' declaration is illegal for this kind of item</b></h4>
<P>The compiler detected that an <B>@com</B> declaration was defined for the wrong type of item. This error most likely occurs as a result of a change to your code but not to the syntax or placement of an <B>@com</B> declaration. Make sure the proper <B>@com</B> declaration is used on the specified item in your code.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">/**@com.interface(iid=31415926-5358-9793-2384-612345678901,dual)*/
interface Itest{
   /**@com.struct()*/
   public int method1();
   //error: wrong type of @com attribute applied
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0226 ************** -->
<A NAME="J0226"></A><!--J0226--><h4><b>J0226 - The @com declared type of 'identifier' is illegal for a dispatch or a dual interface</b></h4>
<P>The compiler detected that an <B>@com</B> interface declaration, declared as either a <B>dual</B> or <B>dispatch</B> interface, has a member that contains an <B>@com.parameters</B> declaration with an incorrect <B>type</B>. Certain <B>@com.parameters</B> types are not allowed when the interface they are defined in is declared as either <B>dual</B> or <B>dispatch</B> interface. The following list shows which values are invalid for <B>type</B>.
<ul><li>FIXEDARRAY
<li>SYSFIXEDSTRING
<li>I8
<li>U8
<li>STRUCT
<li>CUSTOM, CUSTOMBYREF/CUSTOMBYVAL
<li>PTR (except PTR to VARIANT)
<li>Arrays of any of the previously listed values.
</ul>
<p>
			<!-- ********** Topic J0227 ************** -->
<A NAME="J0227"></A><!--J0227--><h4><b>J0227 - It is impossible for an expression of type 'identifier' to be an instance of 'identifier'</b></h4>
<P>The compiler has detected that a comparison of two classes using the <B>instanceof</B> operator could never be instances of each other. To use the <B>instanceof</B> operator correctly, you must be comparing classes that have some common class lineage. Either change the expression containing the <B>instanceof</B> operator so that it uses a related class and instance for its comparison, or remove the expression, and then compile again.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">class Simple1{
   //do something meaningful here
}

class Simple2{
   //do something meaningful here
}

class CompClasses{
   Simple1 x = new Simple1();
   public static void main(String args[]){
   
   if(smp.x instanceof Simple2){
      /*error: nonrelated classes cannot be instances of each other*/
   }
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0228 ************** -->
<A NAME="J0228"></A><!--J0228--><h4><b>J0228 - Syntax error in @dll declaration</b></h4>
<P>The compiler has detected a syntax error in an <B>@dll</B> statement. This error most likely occurs when an <B>@dll</B> statement has been mistyped. Check the statement for syntactical errors, and then compile again.
<p>
			<!-- ********** Topic J0229 ************** -->
<A NAME="J0229"></A><!--J0229--><h4><b>J0229 - Expected string constant</b></h4>
<P>The compiler detected a parameter of a comment tag's declaration (for example <B>@com</B>, <B>@dll</B>, or <B>@security</B>) that was expecting a string constant, was either missing it or it was incorrectly entered. This error most often occurs when matching quotes are missing around a value passed to an attribute. Check your comment tag declaration's attributes, and then compile again.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">/**@com.interface(iid=31415926-5358-9793-2384-612345678901,dual)*/
interface ITest{
   /**@com.method(name=method1);*/
   //error: Missing quotes around 'method1'
   public void method1();
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0230 ************** -->
<A NAME="J0230"></A><!--J0230--><h4><b>J0230 - Class or interface name 'identifier' conflicts with import 'identifier'</b></h4>
<P>The specified class or interface conflicts with a class that has been imported. This could be caused by declaring a class or interface that is already declared in the Java API and you are importing that API class or interface into your source file.
<p>
			<!-- ********** Topic J0231 ************** -->
<A NAME="J0231"></A><!--J0231--><h4><b>J0231 - Expression statement must be assignment, method call, increment, decrement, or 'new'</b></h4>
<P>The compiler has detected an invalid expression statement. An expression statement is a statement that can reside on its own line of source code. The following are some examples of valid expression statements.
<!--a-kellyf 09/11/97: In sample per a-lisasu: "The following statements are invalid" should be regular text, not sample code. Comment in /* */ should be
a // comment.-->
<p><dl>
<dt>Method calls
<dd>m_cars.changeColor();
<dt>Assignment statements
<dd>int x = y + z;
<dt>Increment statement
<dd>j++;
<dd>m_tempVar1 += 3;
<dt>Use of the new keyword
<dd>new Simple();
</dl>
<p>The following are examples of invalid expression statements.
<dl>
<dd>1+2;
<dt>Error: No assignment statement
<dd>j+k-method1();
<dt>A method call but not a valid assignment statement
<dd>var1 == var2;
<dt>Comparison statements should be contained in flow control statements
</dl>

<p>
			<!-- ********** Topic J0232 ************** -->
<A NAME="J0232"></A><!--J0232--><h4><b>J0232 - Expected '{' or ';'</b></h4>
<P>The compiler has detected an error with a method declaration in a class or interface. This error most likely occurs if an interface's method declaration is missing a semicolon at the end of the declaration or a class's declaration is missing its opening brace '{'. Check the specified class or interface method declaration and check for a missing semicolon or opening brace, and then compile again.
<p>
			<!-- ********** Topic J0233 ************** -->
<A NAME="J0233"></A><!--J0233--><h4><b>J0233 - Catch clause is unreachable; exception 'identifier' is never thrown in the corresponding try block</b></h4>
<P>The compiler detected that the specified <B>catch</B> clause will never be executed because the corresponding <B>try</B> statement never throws the <B>catch</B> statement's exception type. <B>Catch</B> statements are required to catch exceptions or derivations of exceptions that the <B>try</B> statement can throw<!--a-kellyf 09/11/97: thrown?-->. This error can be avoided by changing the <B>catch</B> statement so it does not catch a specific exception type but catches the base <B>Exception</B> class. Change the exception class so that<!--a-kellyf 09/10/97: so that--> your <B>catch</B> statement will trap it<!--a-kellyf 09/10/97: it-->, and then compile again.
<p>
			<!-- ********** Topic J0234 ************** -->
<A NAME="J0234"></A><!--J0234--><h4><b>J0234 - 'identifier' is not a field in class 'identifier'</b></h4>
<P>The compiler detected a field reference but the field does not exist in the specified class. This error most likely occurs when the field reference is mistyped or the field reference was meant to reference a field in a different class. Make sure that the field exists in the specified class and that your reference to the field is syntactically correct, and then compile again.
<p>
			<!-- ********** Topic J0235 ************** -->
<A NAME="J0235"></A><!--J0235--><h4><b>J0235 - 'identifier' is not a method in class 'identifier'</b></h4>
<P>The compiler detected a method call but the method does not exist in the specified class. This error most likely occurs when the method call is called incorrectly or the method call was meant to reference a method in a different class. Make sure that the method exists in the specified class and that your method call is syntactically correct.
<p>
			<!-- ********** Topic J0236 ************** -->
<A NAME="J0236"></A><!--J0236--><h4><b>J0236 - 'identifier' is not a nested class or interface in class 'identifier'</b></h4>
<P>The compiler has detected a reference to a nested class or interface but the nested class or interface does not exist in the specified class. This error most likely occurs because of a syntactical error in referencing a nested class or interface. Check the reference to the inner class for syntax errors and make sure that the class or interface exists inside the specified class, and then compile again.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">class NotSimple{
}

public class Simple{
   void method1(){
      NotSimple nt = new NotSimple();
      Object o = nt.new InnerClass();
      //error: 'InnerClass' is not an inner class of 'NotSimple'
   }
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0237 ************** -->
<A NAME="J0237"></A><!--J0237--><h4><b>J0237 - 'identifier' is not a field or nested class in class 'identifier'</b></h4>
<P>The compiler has detected a reference to a nested class or field but the nested class or field does not exist in the specified class. This error most likely occurs because of a syntactical error in referencing a nested class or field. This error can also occur if a reference to a field in an inner class is made but the field does not exist within the inner class definition. Check to make sure the inner class or field exists, and then compile again.
<p>
			<!-- ********** Topic J0238 ************** -->
<A NAME="J0238"></A><!--J0238--><h4><b>J0238 - Cannot throw exception 'identifier' from field initializer</b></h4>
<P>The compiler has detected that an exception was thrown within a field initializer. This error most likely occurs when an exception can be thrown<!--a-kellyf 09/10/97: can be thrown--> from a constructor of a class, and an instance of that class is declared and instantiated as a member of another class. To resolve this problem, have the class object that throws the exception instantiated inside a constructor so it can use a <B>try</B> and <B>catch</B> combination to trap any exceptions from the other class's constructor call.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">public class Simple{
   public int i;
   public Simple(boolean var1) throws Exception{
      if (var1 = true)
         i = 0;
      else
         throw new Exception();
   }
}
//This is the incorrect way to instantiate this class
class Simple2{
   Simple smp = new Simple(true);
   /* error: cannot call constructor that throws exception in field
            initializer*/
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0239 ************** -->
<A NAME="J0239"></A><!--J0239--><h4><b>J0239 - Static initializer must assign a value to blank final variable 'identifier'</b></h4>
<P>The compiler detected that a <B>static final</B> variable was not initialized to a value using a static or field initializer. To declare a variable as <B>static</B> and <B>final</B>, you must use a static or field initializer to set an initial value. This error can also occur if a field is declared as <B>static</B> and <B>final</B> and assigned a value in a constructor.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">public class Simple{
   static final int MAX_CONTROL;
} //error: static final variables must have value assigned
</FONT> </PRE>
<p>
			<!-- ********** Topic J0240 ************** -->
<A NAME="J0240"></A><!--J0240--><h4><b>J0240 - Syntax error in @security declaration</b></h4>
<P>The compiler detected a syntax error in the specified <B>@security</B> comment tag. This error most likely occurs when the comment tag is missing a closing parenthesis or the tag's attributes are incorrect. Check the syntax of the specified <B>@security</B> comment tag declaration, and then compile again.
<p>The following example illustrates this error.
<p><PRE><FONT FACE="COURIER">/**@security()*/   //error: invalid @security syntax
public class Simple{
   //Class members defined here
}
</FONT> </PRE>
<p>
			<!-- ********** Topic J0241 ************** -->
<A NAME="J0241"></A><!--J0241--><h4><b>J0241 - '@security' can only be specified on a class or interface</b></h4>
<P>The compiler detected that the <B>@security</B> comment tag was applied to something other than a class or interface declaration. <B>@security</B> comment tags are used to define the security settings for a class or interface definition and cannot be applied to methods or fields of a class or interface.
<p>
			<!-- ********** Topic J0242 ************** -->
<A NAME="J0242"></A><!--J0242--><h4><b>J0242 - Cannot make static call to nonstatic method 'identifier'</b></h4>
<P>The compiler has detected that a method was called by using the static method call<!--a-kellyf 09/10/97: missing word here?--> syntax of '&lt;classname&gt;.&lt;method&gt;', but the method is not a static method. Change the method call to use an instance of the class that contains the method instead of the class name itself, and then compile again.
<p>

			<!-- ********** Topic J5001 ************** -->
<A NAME="J5001"></A><!--J5001--><h4><b>J5001 - Local variable 'identifier' is initialized but never used</b></h4>
<P>The compiler detected an initialized variable that was never referenced in any class code. This message occurs at warning level 3 or greater.
<P>The following sample illustrates this warning.
<P>
<PRE><FONT FACE="COURIER">public class Simple {
   
   public int method1() {
   
      int i = 1;
      return 1;
      // warning: 'i' is never used
   }
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J5002 ************** -->
<A NAME="J5002"></A><!--J5002--><h4><b>J5002 - Compiler option 'identifier' is not supported</b></h4>
<P>The compiler that detected an unsupported command line option was specified. Check your compiler switch settings, and then try compiling again.

<P>

			<!-- ********** Topic J5003 ************** -->
<A NAME="J5003"></A><!--J5003--><h4><b>J5003 - Ignoring unknown compiler option 'identifier'</b></h4>
<P>The compiler detected an unknown option specified on the Jvc command line. This warning most likely occurs when a typographical error exists. For example, specifying <B>/W4</B> on the command line will cause this warning because the <B>warning level</B> option must use a lowercase 'w'.
<P>

			<!-- ********** Topic J5004 ************** -->
<A NAME="J5004"></A><!--J5004--><h4><b>J5004 - Missing argument for compiler option 'identifier'</b></h4>
<P>The compiler detected a valid command line option, but the required argument was not specified. Check your compiler switch settings and try compiling again.

<P>

			<!-- ********** Topic J5005 ************** -->
<A NAME="J5005"></A><!--J5005--><h4><b>J5005 - Package 'identifier' was already implicitly imported</b></h4>
<P>The compiler detected an <B>import</B> statement for a package that was already implicitly imported, such as <B>java.lang</B>. This message occurs at warning level 1 or greater.
<P>

			<!-- ********** Topic J5006 ************** -->
<A NAME="J5006"></A><!--J5006--><h4><b>J5006 - 'private protected' not supported, using 'protected'</b></h4>
<P>The compiler detected use of the modifier combination <B>private protected</B>. This combination is now obsolete and has been replaced by <B>protected</B>. This message occurs at warning level 1 or greater.
<P>

			<!-- ********** Topic J5007 ********** -->
<A NAME="J5007"></A><!--J5007--><h4><b>J5007 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J5008 ************** -->
<A NAME="J5008"></A><!--J5008--><h4><b>J5008 - Not used</b></h4>
<P>This error message is currently not used.
<P>
			<!-- ********** Topic J5009 ************** -->
<A NAME="J5009"></A><!--J5009--><h4><b>J5009 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J5010 ************** -->
<A NAME="J5010"></A><!--J5008--><h4><b>J5010 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J5011 ************** -->
<A NAME="J5011"></A><!--J5011--><h4><b>J5011 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J5012 ************** -->
<A NAME="J5012"></A><!--J5012--><h4><b>J5012 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J5013 ************** -->
<A NAME="J5013"></A><!--J5013--><h4><b>J5013 - Not used</b></h4>
<P>This error message is currently not used.
<P>

			<!-- ********** Topic J5014 ************** -->
<A NAME="J5014"></A><!--J5014--><h4><b>J5014 - 'identifier' has been deprecated by the author of 'identifier'</b></h4>
<P>The method or class referenced has been marked as deprecated. Deprecated methods or classes are marked by the creator of the source code as outdated and subject to removal. To keep code stable, avoid calling functions that have been flagged as deprecated.
<P>

			<!-- ********** Topic J5015 ************** -->
<A NAME="J5015"></A><!--J5015--><h4><b>J5015 - The parameter 'identifier' in an @com.parameters declaration does not match the corresponding argument 'identifier'</b></h4>
<P>A COM interface parameter declaration does not match the method that implements the interface. This error could indicate inconsistent data types or mismatched of parameter locations.<!--a-kellyf 09/11/97: Solution?-->
<!--a-kellyf [ a-alexkr] 09/11/97: Per a-lisasu: Need // in code sample to indicate where
there error is.-->
<P>The following sample illustrates this warning.
<PRE><FONT FACE="COURIER">/** @com.interface(iid=31415926-5358-9793-2384-612345678901, dual) */
interface ExampleInterface 
{
/** 
@com.method(dispid=306)
@com.parameters([type=BOOLEAN] when, on) 
*/
public String Method1(boolean on, int when); //Error, on and when
                                             // have changed order. 
}
</FONT> </PRE>
<P>

			<!-- ********** Topic J5016 ************** -->
<A NAME="J5016"></A><!--J5016--><h4><b>J5016 - This 'instanceof' operator will always be true</b></h4>
<P>The compiler determined that the specified <B>instanceof</B> expression will always evaluate to true. This could occur when <B>instanceof</B> is used to determine if a subclass instance is a member of a base class or an implemented interface. Although it is not an error to use the operator in this way,
<!--a-kellyf [a-alexkr]09/10/97: way--> it is not useful because the expression will always evaluate to true.<!--a-kellyf 09/11/97: Per a-lisasu in sample code:
"//These statements give blah...."-->
<P>The following sample illustrates this warning.
<PRE><FONT FACE="COURIER">interface I {}
class X {}
class Y extends X implements I {}

public class Simple{
   void f()
   {
      Y y = new Y();
      X x = new X();
      Object o;

      // These statements result in J5016 warnings.
      if (y instanceof X){
         // y is of type Y, which extends X, so this is always true
      }
      if (y instanceof I){
         // type Y implements I, so this is always true.
      }
      if (x instanceof Object){
         // everything is of type Object
      }
   }
}
</FONT> </PRE>
<BR><BR>
</FONT>
</td>
</tr>
</table>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Top"></A></TD><TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>

</BODY>
</HTML>
