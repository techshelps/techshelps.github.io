<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Direct3dRMFrame</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Direct3dRMFrame.htm#com_000300062d010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="Direct3dRMFaceArray.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A href="def_dirx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="Direct3dRMFrameArray.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.directX</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class Direct3dRMFrame</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class Direct3dRMFrame implements <A HREF="IDirect3dRMFrame.htm">IDirect3dRMFrame</A>
{
  // Methods
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010100">addChild</A>(Direct3dRMFrame child);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010200">addLight</A>(Direct3dRMLight val);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010300">addMoveCallback</A>(IFrameMoveCallback fmC,
        IUnknown args);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010400">addRotation</A>(int typ, float x, float y, float z, float
        theta);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010500">addScale</A>(int typ, float sx, float sy, float sz);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010600">addTransform</A>(int t, float[] val);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010700">addTranslation</A>(int t, float x, float y, float z);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010800">addVisual</A>(Direct3dRMVisual v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010900">addVisualFrame</A>(Direct3dRMFrame v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010a00">addVisualMesh</A>(Direct3dRMMesh v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010b00">addVisualMeshBuilder</A>(Direct3dRMMeshBuilder v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010c00">addVisualShadow</A>(Direct3dRMShadow v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010d00">addVisualTexture</A>(Direct3dRMTexture v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010e00">addVisualUserVisual</A>(Direct3dRMUserVisual v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d010f00">deleteChild</A>(Direct3dRMFrame c);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011000">deleteLight</A>(Direct3dRMLight l);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011100">deleteMoveCallback</A>(IFrameMoveCallback fn,
        IUnknown args);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011200">deleteVisual</A>(Direct3dRMVisual v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011300">deleteVisualFrame</A>(Direct3dRMFrame v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011400">deleteVisualMesh</A>(Direct3dRMMesh v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011500">deleteVisualMeshBuilder</A>(Direct3dRMMeshBuilder v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011600">deleteVisualShadow</A>(Direct3dRMShadow v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011700">deleteVisualTexture</A>(Direct3dRMTexture v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011800">deleteVisualUserVisual</A>(Direct3dRMUserVisual v);
  public Direct3dRMFrameArray <A HREF="Direct3dRMFrame.htm#com_000300062d011900">getChildren</A>();
  public int <A HREF="Direct3dRMFrame.htm#com_000300062d011a00">getColor</A>();
  public Direct3dRMLightArray <A HREF="Direct3dRMFrame.htm#com_000300062d011b00">getLights</A>();
  public int <A HREF="Direct3dRMFrame.htm#com_000300062d011c00">getMaterialMode</A>();
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011d00">getOrientation</A>(Direct3dRMFrame ref, D3dVector dir,
        D3dVector up);
  public Direct3dRMFrame <A HREF="Direct3dRMFrame.htm#com_000300062d011e00">getParent</A>();
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d011f00">getPosition</A>(Direct3dRMFrame ref, D3dVector position);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d012000">getRotation</A>(Direct3dRMFrame ref, D3dVector axis,
        float[] theta);
  public Direct3dRMFrame <A HREF="Direct3dRMFrame.htm#com_000300062d012100">getScene</A>();
  public int <A HREF="Direct3dRMFrame.htm#com_000300062d012200">getSceneBackground</A>();
  public DirectDrawSurface <A HREF="Direct3dRMFrame.htm#com_000300062d012300">getSceneBackgroundDepth</A>();
  public int <A HREF="Direct3dRMFrame.htm#com_000300062d012400">getSceneFogColor</A>();
  public int <A HREF="Direct3dRMFrame.htm#com_000300062d012500">getSceneFogEnable</A>();
  public int <A HREF="Direct3dRMFrame.htm#com_000300062d012600">getSceneFogMode</A>();
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d012700">getSceneFogParams</A>(float[] start, float[] end, float[]
        density);
  public int <A HREF="Direct3dRMFrame.htm#com_000300062d012800">getSortMode</A>();
  public Direct3dRMTexture <A HREF="Direct3dRMFrame.htm#com_000300062d012900">getTexture</A>();
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d012a00">getTextureTopology</A>(int[] u, int[] v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d012b00">getTransform</A>(float[] val);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d012c00">getVelocity</A>(Direct3dRMFrame ref, D3dVector vel,
        int rotation);
  public Direct3dRMVisualArray <A HREF="Direct3dRMFrame.htm#com_000300062d012d00">getVisuals</A>();
  public int <A HREF="Direct3dRMFrame.htm#com_000300062d012e00">getZbufferMode</A>();
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d012f00">inverseTransform</A>(D3dVector d, D3dVector s);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013000">loadFromFileByPos</A>(String filename, int position,
        int flags, ILoadTextureCallback c, IUnknown pUser);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013100">lookAt</A>(Direct3dRMFrame tgt, Direct3dRMFrame ref,
        int val);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013200">move</A>(float delta);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013300">setColor</A>(int c);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013400">setColorRGB</A>(float r, float g, float b);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013500">setMaterialMode</A>(int val);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013600">setOrientation</A>(Direct3dRMFrame reference, float dx,
        float dy, float dz, float ux, float uy, float uz);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013700">setPosition</A>(Direct3dRMFrame reference, float x, float
        y, float z);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013800">setRotation</A>(Direct3dRMFrame reference, float x, float
        y, float z, float theta);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013900">setSceneBackground</A>(int c);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013a00">setSceneBackgroundDepth</A>(DirectDrawSurface s);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013b00">setSceneBackgroundImage</A>(Direct3dRMTexture i);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013c00">setSceneBackgroundRGB</A>(float r, float g, float b);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013d00">setSceneFogColor</A>(int c);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013e00">setSceneFogEnable</A>(int enable);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d013f00">setSceneFogMode</A>(int c);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d014000">setSceneFogParams</A>(float s, float e, float d);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d014100">setSortMode</A>(int val);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d014200">setTexture</A>(Direct3dRMTexture t);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d014300">setTextureTopology</A>(int wrap_u, int wrap_v);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d014400">setVelocity</A>(Direct3dRMFrame reference, float x, float
        y, float z, int with_rotation);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d014500">setZbufferMode</A>(int val);
  public void <A HREF="Direct3dRMFrame.htm#com_000300062d014600">transform</A>(D3dVector d, D3dVector s);
}
</FONT></PRE>
<P>Applications use the methods of the <B>Direct3dRMFrame</B> class to interact with frames&#151;an object's frame of reference. 
<P>The <B>Direct3dRMFrame</B> class inherits the following methods from the <A HREF="Direct3dRMObject.htm">Direct3dRMObject</A> class: 
<DL>
<DT><A HREF="Direct3dRMObject.htm">addDestroyCallback</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">duplicate</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">deleteDestroyCallback</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">getAppData</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">getClassName</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">getName</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">setAppData</A> 
</DT><DT><A HREF="Direct3dRMObject.htm">setName</A> 
</DT></DL>
<P>The <B>Direct3dRMFrame</B> object is obtained by calling the <A HREF="Direct3dRM.htm">createFrame</A> method. 

<H3 STYLE="color:#333366"><A NAME="com_000300062d010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300062d010100">addChild</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addChild(Direct3dRMFrame child);
</FONT></PRE>
<P><P>Adds a child frame to a frame hierarchy. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>child</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object that will be added as a child. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the frame being added as a child already has a parent, this method removes it from its previous parent before adding it to the new parent. 
<P>To preserve an object's transformation, use the <A HREF="Direct3dRMFrame.htm#com_000300062d012b00">getTransform</A> method to retrieve the object's transformation before using the <B>addChild</B> method. Then, reapply the transformation after the frame is added. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010200">addLight</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addLight(Direct3dRMLight val);
</FONT></PRE>
<P><P>Adds a light to a frame. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMLight.htm">Direct3dRMLight</A> object to be added to the frame. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010300">addMoveCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addMoveCallback(IFrameMoveCallback fmC, IUnknown args);
</FONT></PRE>
<P><P>Adds a callback function for special movement processing. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fmC</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The callback interface that contains an application-defined callback function. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>args</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application-defined data to be passed to the callback function. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d013200">move</A>, <A HREF="Direct3dRMFrame.htm#com_000300062d011100">deleteMoveCallback</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010400">addRotation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addRotation(int typ, float x, float y, float z, float theta);
</FONT></PRE>
<P><P>Adds a rotation about (<I>x</I>, <I>y</I>, <I>z</I>) by the number of radians specified in <I>theta</I>. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>typ</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A value of combine type that specifies how to combine the new rotation with any current frame transformation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The axis about which to rotate. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The axis about which to rotate. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>z</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The axis about which to rotate. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>theta</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The angle of rotation, in radians. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The specified rotation changes the matrix only for the frame identified by this object. This method changes the objects in the frame only once, unlike <A HREF="Direct3dRMFrame.htm#com_000300062d013800">setRotation</A>, which changes the matrix with every render tick. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010500">addScale</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addScale(int typ, float sx, float sy, float sz);
</FONT></PRE>
<P><P>Scales a frame's local transformation by (<I>sx</I>, <I>sy</I>, <I>sz</I>). 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>typ</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value of combine type that specifies how to combine the new scale with any current frame transformation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The scale factor in the x direction. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The scale factor in the y direction. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The scale factor in the z direction. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The specified transformation changes the matrix only for the frame identified by this object. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010600">addTransform</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addTransform(int t, float[] val);
</FONT></PRE>
<P><P>Transforms the local coordinates of the frame by the given affine transformation according to the value of the <I>t</I> parameter. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>t</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value of combine type that specifies how to combine the new transformation with any current transformation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variable that defines the transformation matrix to be combined. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Although a 4-by-4 matrix is given, the last column must be the transpose of [0 0 0 1] for the transformation to be affine. 
<P>The specified transformation changes the matrix only for the frame identified by this <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010700">addTranslation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addTranslation(int t, float x, float y, float z);
</FONT></PRE>
<P><P>Adds a translation by (<I>x</I>, <I>y</I>, <I>z</I>) to a frame's local coordinate system. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>t</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value of combine type that specifies how to combine the new translation with any current translation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The position change in the x direction. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The position change in the y direction. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>z</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The position change in the z direction. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The specified translation changes the matrix only for the frame identified by this object. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010800">addVisual</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addVisual(Direct3dRMVisual v);
</FONT></PRE>
<P><P>Adds a visual object to a frame. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMVisual.htm">Direct3dRMVisual</A> object to be added to the frame. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Visual objects include meshes and textures. When a visual object is added to a frame, it becomes visible if the frame is in view. The visual object is referenced by the frame. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010900">addVisualFrame</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addVisualFrame(Direct3dRMFrame v);
</FONT></PRE>
<P><P>Adds a visual frame to the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010a00">addVisualMesh</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addVisualMesh(Direct3dRMMesh v);
</FONT></PRE>
<P><P>Adds a visual mesh to the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMMesh.htm">Direct3dRMMesh</A> object to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010b00">addVisualMeshBuilder</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addVisualMeshBuilder(Direct3dRMMeshBuilder v);
</FONT></PRE>
<P><P>Adds a mesh builder object to the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010c00">addVisualShadow</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addVisualShadow(Direct3dRMShadow v);
</FONT></PRE>
<P><P>Adds a shadow object to the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <B>Direct3dRMShadow</B> object to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010d00">addVisualTexture</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addVisualTexture(Direct3dRMTexture v);
</FONT></PRE>
<P><P>Adds a texture object to the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010e00">addVisualUserVisual</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addVisualUserVisual(Direct3dRMUserVisual v);
</FONT></PRE>
<P><P>Adds a user visual object to the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMUserVisual.htm">Direct3dRMUserVisual</A> object to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d010f00">deleteChild</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteChild(Direct3dRMFrame c);
</FONT></PRE>
<P><P>Removes a frame from the hierarchy. If the frame is not referenced, it is destroyed along with any child frames, lights, and meshes. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be used as the child. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011000">deleteLight</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteLight(Direct3dRMLight l);
</FONT></PRE>
<P><P>Removes a light from a frame and destroys it if it is no longer referenced. When a light is removed from a frame, it no longer affects meshes in the scene its frame was in. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMLight.htm">Direct3dRMLight</A> object to be removed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011100">deleteMoveCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteMoveCallback(IFrameMoveCallback fn, IUnknown args);
</FONT></PRE>
<P><P>Removes a callback function that performed special motion processing. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fn</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The callback interface that contains an application-defined callback function. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>args</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application-defined data that was passed to the callback function. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d010300">addMoveCallback</A>, <A HREF="Direct3dRMFrame.htm#com_000300062d013200">move</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011200">deleteVisual</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteVisual(Direct3dRMVisual v);
</FONT></PRE>
<P><P>Removes a visual object from a frame and destroys it if it is no longer referenced. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMVisual.htm">Direct3dRMVisual</A> object to be removed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011300">deleteVisualFrame</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteVisualFrame(Direct3dRMFrame v);
</FONT></PRE>
<P><P>Deletes a visual frame from the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be deleted. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011400">deleteVisualMesh</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteVisualMesh(Direct3dRMMesh v);
</FONT></PRE>
<P><P>Deletes a mesh object from the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMMesh.htm">Direct3dRMMesh</A> object to be deleted. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011500">deleteVisualMeshBuilder</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteVisualMeshBuilder(Direct3dRMMeshBuilder v);
</FONT></PRE>
<P><P>Deletes a mesh builder object from the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMMeshBuilder.htm">Direct3dRMMeshBuilder</A> object to be deleted. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011600">deleteVisualShadow</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteVisualShadow(Direct3dRMShadow v);
</FONT></PRE>
<P><P>Deletes a shadow object from the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <B>Direct3dRMShadow</B> object to be deleted. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011700">deleteVisualTexture</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteVisualTexture(Direct3dRMTexture v);
</FONT></PRE>
<P><P>Deletes a texture object from the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object to be deleted. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011800">deleteVisualUserVisual</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deleteVisualUserVisual(Direct3dRMUserVisual v);
</FONT></PRE>
<P><P>Deletes a user visual object from the frame object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMUserVisual.htm">Direct3dRMUserVisual</A> object to be deleted. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011900">getChildren</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMFrameArray getChildren();
</FONT></PRE>
<P><P>Retrieves a list of child frames in the form of a <A HREF="Direct3dRMFrameArray.htm">Direct3dRMFrameArray</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMFrameArray.htm">Direct3dRMFrameArray</A> object if successful; otherwise, null. 

<P><B>See Also:</B> <A HREF="Direct3dRMFrameArray.htm">com.ms.directX.Direct3dRMFrameArray</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011a00">getColor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getColor();
</FONT></PRE>
<P><P>Retrieves the color of the frame. 

<P><B>Return Value:</B> <P>Returns the color of the <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object. 

<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d013300">setColor</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011b00">getLights</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMLightArray getLights();
</FONT></PRE>
<P><P>Retrieves a list of lights in the frame in the form of a <A HREF="Direct3dRMLightArray.htm">Direct3dRMLightArray</A> object. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMLightArray.htm">Direct3dRMLightArray</A> object if successful; otherwise, null. 

<P><B>See Also:</B> <A HREF="Direct3dRMLightArray.htm">com.ms.directX.Direct3dRMLightArray</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011c00">getMaterialMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getMaterialMode();
</FONT></PRE>
<P><P>Retrieves the material mode of the frame. 

<P><B>Return Value:</B> <P>Returns a value of material mode type that specifies the current material mode. 

<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d013500">setMaterialMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011d00">getOrientation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getOrientation(Direct3dRMFrame ref, D3dVector dir,
        D3dVector up);
</FONT></PRE>
<P><P>Retrieves the orientation of a frame relative to the given reference frame. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ref</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be used as the reference. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dir</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dVector.htm">D3dVector</A> objects that receive the directions of the frame's z-axis. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>up</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dVector.htm">D3dVector</A> objects that receive the directions of the frame's y-axis. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d013600">setOrientation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011e00">getParent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMFrame getParent();
</FONT></PRE>
<P><P>Retrieves the parent frame of the current frame. 
<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object if successful; null otherwise. 

<P><B>Remarks:</B> <P>If the current frame is the root, this method returns null. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d011f00">getPosition</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getPosition(Direct3dRMFrame ref, D3dVector position);
</FONT></PRE>
<P><P>Retrieves the position of a frame, relative to the given reference frame. (For example, this method retrieves the distance of the frame from the reference.) The distance is stored in the <I>position</I> parameter as a vector, rather than as a linear measure. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ref</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be used as the reference. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>position</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dVector.htm">D3dVector</A> object that receives the frame's position. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d013700">setPosition</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012000">getRotation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getRotation(Direct3dRMFrame ref, D3dVector axis, float[] theta);
</FONT></PRE>
<P><P>Retrieves the rotation of the frame, relative to the given reference frame. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ref</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be used as the reference. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>axis</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dVector.htm">D3dVector</A> object that receives the frame's axis of rotation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>theta</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variable that receives the frame's rotation, in radians. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d013800">setRotation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012100">getScene</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMFrame getScene();
</FONT></PRE>
<P><P>Retrieves the root frame of the hierarchy containing the given frame. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object if successful; otherwise, null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012200">getSceneBackground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getSceneBackground();
</FONT></PRE>
<P><P>Retrieves the background color of a scene. 

<P><B>Return Value:</B> <P>Returns the color. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012300">getSceneBackgroundDepth</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public DirectDrawSurface getSceneBackgroundDepth();
</FONT></PRE>
<P><P>Retrieves the current background-depth buffer for the scene. 

<P><B>Return Value:</B> <P>Returns the <A HREF="DirectDrawSurface.htm">DirectDrawSurface</A> object if successful; otherwise, returns null. 

<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d013a00">setSceneBackgroundDepth</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012400">getSceneFogColor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getSceneFogColor();
</FONT></PRE>
<P><P>Retrieves the fog color of a scene. 

<P><B>Return Value:</B> <P>Returns the fog's color. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012500">getSceneFogEnable</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getSceneFogEnable();
</FONT></PRE>
<P><P>Returns whether fog is currently enabled for this scene. 

<P><B>Return Value:</B> <P>Returns true if fog is enabled, otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012600">getSceneFogMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getSceneFogMode();
</FONT></PRE>
<P><P>Retrieves the current fog mode for this scene. 

<P><B>Return Value:</B> <P>Returns a value of the fog mode type that specifies the current fog mode. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012700">getSceneFogParams</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getSceneFogParams(float[] start, float[] end, float[] density);
</FONT></PRE>
<P><P>Retrieves the current fog parameters for this scene. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>start</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variables that receive the fog start values. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>end</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variables that receive the fog end values. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>density</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variables that receive the fog density values. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012800">getSortMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getSortMode();
</FONT></PRE>
<P><P>Retrieves the sorting mode used to process child frames. 

<P><B>Return Value:</B> <P>Returns a value of the <A HREF="DirectXConstants.htm">D3DRMSORT_</A> type that specifies the sorting mode. 

<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d014100">setSortMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012900">getTexture</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMTexture getTexture();
</FONT></PRE>
<P><P>Retrieves the texture of the given frame. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object if successful; otherwise, null. 

<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d014200">setTexture</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012a00">getTextureTopology</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getTextureTopology(int[] u, int[] v);
</FONT></PRE>
<P><P>Retrieves the topological properties of a texture when it is mapped onto objects in the given frame. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>u</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Array variable that is set to true if the texture is mapped in the u direction. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Array variable that is set to true if the texture is mapped in the v direction. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d014300">setTextureTopology</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012b00">getTransform</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getTransform(float[] val);
</FONT></PRE>
<P><P>Retrieves the local transformation of the frame as a 4-by-4 affine matrix. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array variable that receives the frame's transformation. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012c00">getVelocity</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getVelocity(Direct3dRMFrame ref, D3dVector vel, int rotation);
</FONT></PRE>
<P><P>Retrieves the velocity of the frame, relative to the given reference frame. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ref</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be used as the reference. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vel</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that receives the frame's velocity. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rotation</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A flag specifying whether the rotational velocity of the object is taken into account when retrieving the linear velocity. If this parameter is true, the object's rotational velocity is included in the calculation. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d014400">setVelocity</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012d00">getVisuals</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Direct3dRMVisualArray getVisuals();
</FONT></PRE>
<P><P>Retrieves a list of visuals in the frame. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Direct3dRMVisualArray.htm">Direct3dRMVisualArray</A> object if successful; otherwise, null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012e00">getZbufferMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getZbufferMode();
</FONT></PRE>
<P><P>Determines whether z-buffering is enabled or disabled. 

<P><B>Return Value:</B> <P>Returns one value of <A HREF="DirectXConstants.htm">D3DRMZBUFFER_</A> type. 

<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d014500">setZbufferMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d012f00">inverseTransform</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void inverseTransform(D3dVector d, D3dVector s);
</FONT></PRE>
<P><P>Transforms the vector in the <I>s</I> parameter in world coordinates to model coordinates, and returns the result in the <I>d</I> parameter. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>d</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that receives the result of the transformation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dVector.htm">D3dVector</A> object that is the source of the transformation. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d014600">transform</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013000">loadFromFileByPos</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void loadFromFileByPos(String filename, int position, int flags,
        ILoadTextureCallback c, IUnknown pUser);
</FONT></PRE>
<P><P>Loads a <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>filename</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the file containing the object to be loaded. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>position</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The position of the object to be loaded. This is a value that gives the object's order in the file. This parameter can be null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value of the load options type. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The callback interface that contains a load texture callback function called to load any textures used by the object that require special formatting. This parameter can be null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pUser</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application-defined data passed to the load texture callback function. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, this method loads the first frame hierarchy in the file specified by the <I>filename</I> parameter. The frame that calls this method is used as the parent of the new frame hierarchy. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013100">lookAt</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void lookAt(Direct3dRMFrame tgt, Direct3dRMFrame ref, int val);
</FONT></PRE>
<P><P>Faces the frame toward the target frame (relative to the given reference frame) and locks the rotation by the given constraints. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tgt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> objects to be used as the target. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ref</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> objects to be used as the reference. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value of frame constraint type that specifies the axis of rotation constrained. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013200">move</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void move(float delta);
</FONT></PRE>
<P><P>Applies the rotations and velocities for all frames in the given hierarchy. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>delta</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The amount to change the velocity and rotation by. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013300">setColor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setColor(int c);
</FONT></PRE>
<P><P>Sets the color of the frame. This color is used for meshes in the frame when the material mode is <A HREF="DirectXConstants.htm#com_000300065b010148">D3DRMMATERIAL_FROMFRAME</A>. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">New color for the frame. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d011a00">getColor</A>, <A HREF="Direct3dRMFrame.htm#com_000300062d013500">setMaterialMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013400">setColorRGB</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setColorRGB(float r, float g, float b);
</FONT></PRE>
<P><P>Sets the color of the frame. This color is used for meshes in the frame when the material mode is <A HREF="DirectXConstants.htm#com_000300065b010148">D3DRMMATERIAL_FROMFRAME</A>. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>r</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The red component of a new color for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The green component of a new color for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>b</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The blue component of a new color for the frame. 
<P>Each component of the color should be in the range of 0 to 1. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d013500">setMaterialMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013500">setMaterialMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setMaterialMode(int val);
</FONT></PRE>
<P><P>Sets the material mode for a frame. The material mode determines the source of material information for visuals rendered with the frame. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The material mode type. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d011c00">getMaterialMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013600">setOrientation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setOrientation(Direct3dRMFrame reference, float dx, float dy,
        float dz, float ux, float uy, float uz);
</FONT></PRE>
<P><P>Aligns a frame so that its z-direction points along the direction vector [<I>dx</I>, <I>dy</I>, <I>dz</I>] and its y-direction aligns with the vector [<I>ux</I>, <I>uy</I>, <I>uz</I>]. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>reference</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be used as the reference. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new z axis for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new z axis for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new z axis for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ux</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new y axis for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>uy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new y axis for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>uz</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new y axis for the frame. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The default orientation of a frame has a direction vector of [0, 0, 1] and an up vector of [0, 1, 0]. 
<P>If [<I>ux</I>, <I>uy</I>, <I>uz</I>] is parallel to [<I>dx</I>, <I>dy</I>, <I>dz</I>], no action is taken; otherwise, the [<I>ux</I>, <I>uy</I>, <I>uz</I>] vector passed is projected onto the plane that is perpendicular to [<I>dx</I>, <I>dy</I>, <I>dz</I>]. 
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d011d00">getOrientation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013700">setPosition</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPosition(Direct3dRMFrame reference, float x, float y,
        float z);
</FONT></PRE>
<P><P>Sets the position of a frame, relative to the frame of reference. This method places the frame a distance of [<I>x</I>, <I>y</I>, <I>z</I>] from the reference. When a child frame is created within a parent frame, it is placed at [0, 0, 0] in the parent frame. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>reference</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be used as the reference. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the new position for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the new position for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>z</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z coordinate of the new position for the frame. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d011f00">getPosition</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013800">setRotation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setRotation(Direct3dRMFrame reference, float x, float y,
        float z, float theta);
</FONT></PRE>
<P><P>Sets a frame rotating by the given angle around the given vector at each call to the <A HREF="Direct3dRM.htm">tick</A> or <A HREF="Direct3dRMFrame.htm#com_000300062d013200">move</A> method. The direction vector [<I>x</I>, <I>y</I>, <I>z</I>] is defined in the reference frame. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>reference</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be used as the reference. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x element of the vector, about which rotation occurs. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y element of the vector, about which rotation occurs. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>z</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z element of the vector, about which rotation occurs. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>theta</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The rotation angle, in radians. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The specified rotation changes the matrix with every render tick, unlike the <A HREF="Direct3dRMFrame.htm#com_000300062d010400">addRotation</A> method, which changes the objects in the frame only once. 
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d010400">addRotation</A>, <A HREF="Direct3dRMFrame.htm#com_000300062d012000">getRotation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013900">setSceneBackground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSceneBackground(int c);
</FONT></PRE>
<P><P>Sets the background color of a scene. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">New color for the background. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013a00">setSceneBackgroundDepth</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSceneBackgroundDepth(DirectDrawSurface s);
</FONT></PRE>
<P><P>Specifies a background-depth buffer for a scene. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="DirectDrawSurface.htm">DirectDrawSurface</A> object that will store the new background depth for the scene. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The image must have a depth of 16. If the image and viewport sizes are different, the image is scaled first. For best performance when animating the background-depth buffer, the image should be the same size as the viewport. This enables the depth buffer to be updated directly from the image memory without incurring extra overhead. 
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d012300">getSceneBackgroundDepth</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013b00">setSceneBackgroundImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSceneBackgroundImage(Direct3dRMTexture i);
</FONT></PRE>
<P><P>Specifies a background image for a scene. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>i</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object that will contain the new background scene. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the image is a different size or color depth than the viewport, the image will first be scaled or converted to the correct depth. For best performance when animating the background, the image should be the same size and color depth. This enables the background to be rendered directly from the image memory without incurring any extra overhead. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013c00">setSceneBackgroundRGB</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSceneBackgroundRGB(float r, float g, float b);
</FONT></PRE>
<P><P>Sets the background color of a scene, using an RGB value. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>r</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The red component of the new color for the background. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The green component of the new color for the background. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>b</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The blue component of the new color for the background. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013d00">setSceneFogColor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSceneFogColor(int c);
</FONT></PRE>
<P><P>Sets the fog color of a scene. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new color for the fog. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013e00">setSceneFogEnable</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSceneFogEnable(int enable);
</FONT></PRE>
<P><P>Sets the fog enable state. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>enable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new fog enable state. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d013f00">setSceneFogMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSceneFogMode(int c);
</FONT></PRE>
<P><P>Sets the fog mode. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The fog mode type. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d014000">setSceneFogParams</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d014000">setSceneFogParams</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSceneFogParams(float s, float e, float d);
</FONT></PRE>
<P><P>Sets the current fog parameters for the scene. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The fog start point for linear fog mode. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The fog end point for linear fog mode. These settings determine the distance from the camera at which the fog effects first become visible and the distance at which the fog reaches its maximum density. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>d</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The fog density for the exponential fog modes.. This value should be in the range of 0 through 1. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d013f00">setSceneFogMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d014100">setSortMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSortMode(int val);
</FONT></PRE>
<P><P>Sets the sorting mode used to process child frames. You can use this method to change the properties of hidden-surface-removal algorithms. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One value of the <A HREF="DirectXConstants.htm">D3DRMSORT_</A> type, specifying the sorting mode. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, a frame's initial sort mode is <A HREF="DirectXConstants.htm#com_000300065b01015b">D3DRMSORT_FROMPARENT</A>. 
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d012800">getSortMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d014200">setTexture</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setTexture(Direct3dRMTexture t);
</FONT></PRE>
<P><P>Sets the texture of the frame. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>t</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMTexture.htm">Direct3dRMTexture</A> object to be used. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The texture is used for meshes in the frame when the material mode is <A HREF="DirectXConstants.htm#com_000300065b010148">D3DRMMATERIAL_FROMFRAME</A>. To disable the frame's texture, use a null texture. 
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d012900">getTexture</A>, <A HREF="Direct3dRMFrame.htm#com_000300062d013500">setMaterialMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d014300">setTextureTopology</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setTextureTopology(int wrap_u, int wrap_v);
</FONT></PRE>
<P><P>Defines the topological properties of the texture coordinates across objects in the frame. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>wrap_u</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A variable that is set to true to map the texture in the u-direction. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>wrap_v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A variable that is set to true to map the texture in the v-directions. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d012a00">getTextureTopology</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d014400">setVelocity</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setVelocity(Direct3dRMFrame reference, float x, float y,
        float z, int with_rotation);
</FONT></PRE>
<P><P>Sets the velocity of the given frame relative to the reference frame. The frame will be moved by the vector [<I>x</I>, <I>y</I>, <I>z</I>], with respect to the reference frame at each successive call to the <A HREF="Direct3dRM.htm">tick</A> or <A HREF="Direct3dRMFrame.htm#com_000300062d013200">move</A> method. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>reference</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Direct3dRMFrame.htm">Direct3dRMFrame</A> object to be used as the reference. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x component of the new velocity for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y component of the new velocity for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>z</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z component of the new velocity for the frame. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>with_rotation</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A flag specifying whether the rotational velocity of the object is taken into account when setting the linear velocity. If <I>with_rotation</I> is true, the object's rotational velocity is included in the calculation. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d012c00">getVelocity</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d014500">setZbufferMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setZbufferMode(int val);
</FONT></PRE>
<P><P>Sets the z-buffer mode (that is, whether z-buffering is enabled or disabled). 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>val</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One value of the<A HREF="DirectXConstants.htm">D3DRMZBUFFER_</A> type, specifying the z-buffer mode. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, a frame's initial z-buffer mode is <A HREF="DirectXConstants.htm#com_000300065b010175">D3DRMZBUFFER_FROMPARENT</A>. 
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d012e00">getZbufferMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300062d014600">transform</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void transform(D3dVector d, D3dVector s);
</FONT></PRE>
<P><P>Transforms the vector in the <I>s</I> parameter, which is in model coordinates, into world coordinates. The result is returned in the <I>d</I> parameter. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>d</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="D3dVector.htm">D3dVector</A> object that receives the result of the transformation operation. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="D3dVector.htm">D3dVector</A> object that is the source of the transformation operation. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="Direct3dRMFrame.htm#com_000300062d012f00">inverseTransform</A>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
