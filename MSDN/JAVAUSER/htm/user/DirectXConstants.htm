<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interface DirectXConstants</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="DirectXConstants.htm#com_000300065b010000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="WaveFormatEx.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A href="def_dirx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="Id3dEnumDevicesCallback.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.directX</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Interface DirectXConstants</H2>
<PRE><FONT FACE="Courier" SIZE="2">public interface DirectXConstants
{
  // Fields
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010001">D3DBLEND_BOTHINVSRCALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010002">D3DBLEND_BOTHSRCALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010003">D3DBLEND_DESTALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010004">D3DBLEND_DESTCOLOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010005">D3DBLEND_INVDESTALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010006">D3DBLEND_INVDESTCOLOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010007">D3DBLEND_INVSRCALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010008">D3DBLEND_INVSRCCOLOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010009">D3DBLEND_ONE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01000a">D3DBLEND_SRCALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01000b">D3DBLEND_SRCALPHASAT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01000c">D3DBLEND_SRCCOLOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01000d">D3DBLEND_ZERO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01000e">D3DCLEAR_TARGET</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01000f">D3DCLEAR_ZBUFFER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010010">D3DCLIP_BACK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010011">D3DCLIP_BOTTOM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010012">D3DCLIP_FRONT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010013">D3DCLIP_GEN0</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010014">D3DCLIP_GEN1</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010015">D3DCLIP_GEN2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010016">D3DCLIP_GEN3</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010017">D3DCLIP_GEN4</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010018">D3DCLIP_GEN5</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010019">D3DCLIP_LEFT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01001a">D3DCLIP_RIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01001b">D3DCLIP_TOP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01001c">D3DCMP_ALWAYS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01001d">D3DCMP_EQUAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01001e">D3DCMP_GREATER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01001f">D3DCMP_GREATEREQUAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010020">D3DCMP_LESS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010021">D3DCMP_LESSEQUAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010022">D3DCMP_NEVER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010023">D3DCMP_NOTEQUAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010024">D3DCOLOR_MONO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010025">D3DCOLOR_RGB</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010026">D3DCULL_CCW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010027">D3DCULL_CW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010028">D3DCULL_NONE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010029">D3DDD_BCLIPPING</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01002a">D3DDD_COLORMODEL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01002b">D3DDD_DEVCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01002c">D3DDD_DEVICERENDERBITDEPTH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01002d">D3DDD_DEVICEZBUFFERBITDEPTH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01002e">D3DDD_LIGHTINGCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01002f">D3DDD_LINECAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010030">D3DDD_MAXBUFFERSIZE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010031">D3DDD_MAXVERTEXCOUNT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010032">D3DDD_TRANSFORMCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010033">D3DDD_TRICAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010034">D3DDEB_BUFSIZE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010035">D3DDEB_CAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010036">D3DDEB_LPDATA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010037">D3DDEBCAPS_MEM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010038">D3DDEBCAPS_SYSTEMMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010039">D3DDEBCAPS_VIDEOMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01003a">D3DDEVCAPS_EXECUTESYSTEMMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01003b">D3DDEVCAPS_EXECUTEVIDEOMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01003c">D3DDEVCAPS_FLOATTLVERTEX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01003d">D3DDEVCAPS_SORTDECREASINGZ</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01003e">D3DDEVCAPS_SORTEXACT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01003f">D3DDEVCAPS_SORTINCREASINGZ</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010040">D3DDEVCAPS_TEXTURESYSTEMMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010041">D3DDEVCAPS_TEXTUREVIDEOMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010042">D3DDEVCAPS_TLVERTEXSYSTEMMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010043">D3DDEVCAPS_TLVERTEXVIDEOMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010044">D3DEXECUTE_CLIPPED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010045">D3DEXECUTE_UNCLIPPED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010046">D3DFDS_ALPHACMPCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010047">D3DFDS_COLORMODEL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010048">D3DFDS_DSTBLENDCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010049">D3DFDS_GUID</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01004a">D3DFDS_HARDWARE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01004b">D3DFDS_LINES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01004c">D3DFDS_MISCCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01004d">D3DFDS_RASTERCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01004e">D3DFDS_SHADECAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01004f">D3DFDS_SRCBLENDCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010050">D3DFDS_TEXTUREADDRESSCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010051">D3DFDS_TEXTUREBLENDCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010052">D3DFDS_TEXTURECAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010053">D3DFDS_TEXTUREFILTERCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010054">D3DFDS_TRIANGLES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010055">D3DFDS_ZCMPCAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010056">D3DFILL_POINT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010057">D3DFILL_SOLID</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010058">D3DFILL_WIREFRAME</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010059">D3DFILTER_LINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01005a">D3DFILTER_LINEARMIPLINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01005b">D3DFILTER_LINEARMIPNEAREST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01005c">D3DFILTER_MIPLINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01005d">D3DFILTER_MIPNEAREST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01005e">D3DFILTER_NEAREST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01005f">D3DFOG_EXP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010060">D3DFOG_EXP2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010061">D3DFOG_LINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010062">D3DFOG_NONE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010063">D3DLIGHT_DIRECTIONAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010064">D3DLIGHT_GLSPOT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010065">D3DLIGHT_PARALLELPOINT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010066">D3DLIGHT_POINT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010067">D3DLIGHT_SPOT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010068">D3DLIGHTSTATE_AMBIENT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010069">D3DLIGHTSTATE_COLORMODEL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01006a">D3DLIGHTSTATE_FOGDENSITY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01006b">D3DLIGHTSTATE_FOGEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01006c">D3DLIGHTSTATE_FOGMODE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01006d">D3DLIGHTSTATE_FOGSTART</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01006e">D3DLIGHTSTATE_MATERIAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01006f">D3DOP_BRANCHFORWARD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010070">D3DOP_EXIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010071">D3DOP_LINE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010072">D3DOP_MATRIXLOAD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010073">D3DOP_MATRIXMULTIPLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010074">D3DOP_POINT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010075">D3DOP_PROCESSVERTICES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010076">D3DOP_SETSTATUS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010077">D3DOP_SPAN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010078">D3DOP_STATELIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010079">D3DOP_STATERENDER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01007a">D3DOP_STATETRANSFORM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01007b">D3DOP_TEXTURELOAD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01007c">D3DOP_TRIANGLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01007d">D3DPAL_FREE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01007e">D3DPAL_READONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01007f">D3DPAL_RESERVED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010080">D3DPBLENDCAPS_BOTHINVSRCALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010081">D3DPBLENDCAPS_BOTHSRCALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010082">D3DPBLENDCAPS_DESTALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010083">D3DPBLENDCAPS_DESTCOLOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010084">D3DPBLENDCAPS_INVDESTALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010085">D3DPBLENDCAPS_INVDESTCOLOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010086">D3DPBLENDCAPS_INVSRCALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010087">D3DPBLENDCAPS_INVSRCCOLOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010088">D3DPBLENDCAPS_ONE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010089">D3DPBLENDCAPS_SRCALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01008a">D3DPBLENDCAPS_SRCALPHASAT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01008b">D3DPBLENDCAPS_SRCCOLOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01008c">D3DPBLENDCAPS_ZERO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01008d">D3DPCMPCAPS_ALWAYS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01008e">D3DPCMPCAPS_EQUAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01008f">D3DPCMPCAPS_GREATER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010090">D3DPCMPCAPS_GREATEREQUAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010091">D3DPCMPCAPS_LESS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010092">D3DPCMPCAPS_LESSEQUAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010093">D3DPCMPCAPS_NEVER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010094">D3DPCMPCAPS_NOTEQUAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010095">D3DPMISCCAPS_CONFORMANT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010096">D3DPMISCCAPS_CULLCCW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010097">D3DPMISCCAPS_CULLCW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010098">D3DPMISCCAPS_CULLNONE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010099">D3DPMISCCAPS_LINEPATTERNREP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01009a">D3DPMISCCAPS_MASKPLANES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01009b">D3DPMISCCAPS_MASKZ</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01009c">D3DPRASTERCAPS_DITHER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01009d">D3DPRASTERCAPS_FOGTABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01009e">D3DPRASTERCAPS_FOGVERTEX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01009f">D3DPRASTERCAPS_PAT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100a0">D3DPRASTERCAPS_ROP2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100a1">D3DPRASTERCAPS_STIPPLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100a2">D3DPRASTERCAPS_SUBPIXEL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100a3">D3DPRASTERCAPS_SUBPIXELX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100a4">D3DPRASTERCAPS_XOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100a5">D3DPRASTERCAPS_ZTEST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100a6">D3DPROCESSVERTICES_COPY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100a7">D3DPROCESSVERTICES_NOCOLOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100a8">D3DPROCESSVERTICES_OPMASK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100a9">D3DPROCESSVERTICES_TRANSFORM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100aa">D3DPROCESSVERTICES_TRANSFORMLIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ab">D3DPROCESSVERTICES_UPDATEEXTENTS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ac">D3DPSHADECAPS_ALPHAFLATBLEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ad">D3DPSHADECAPS_ALPHAFLATSTIPPLED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ae">D3DPSHADECAPS_ALPHAGOURAUDBLEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100af">D3DPSHADECAPS_ALPHAGOURAUDSTIPPLED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100b0">D3DPSHADECAPS_ALPHAPHONGBLEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100b1">D3DPSHADECAPS_ALPHAPHONGSTIPPLED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100b2">D3DPSHADECAPS_COLORFLATMONO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100b3">D3DPSHADECAPS_COLORFLATRGB</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100b4">D3DPSHADECAPS_COLORGOURAUDMONO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100b5">D3DPSHADECAPS_COLORGOURAUDRGB</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100b6">D3DPSHADECAPS_COLORPHONGMONO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100b7">D3DPSHADECAPS_COLORPHONGRGB</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100b8">D3DPSHADECAPS_FOGFLAT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100b9">D3DPSHADECAPS_FOGGOURAUD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ba">D3DPSHADECAPS_FOGPHONG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100bb">D3DPSHADECAPS_SPECULARFLATMONO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100bc">D3DPSHADECAPS_SPECULARFLATRGB</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100bd">D3DPSHADECAPS_SPECULARGOURAUDMONO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100be">D3DPSHADECAPS_SPECULARGOURAUDRGB</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100bf">D3DPSHADECAPS_SPECULARPHONGMONO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100c0">D3DPSHADECAPS_SPECULARPHONGRGB</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100c1">D3DPTADDRESSCAPS_CLAMP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100c2">D3DPTADDRESSCAPS_MIRROR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100c3">D3DPTADDRESSCAPS_WRAP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100c4">D3DPTBLENDCAPS_COPY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100c5">D3DPTBLENDCAPS_DECAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100c6">D3DPTBLENDCAPS_DECALALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100c7">D3DPTBLENDCAPS_DECALMASK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100c8">D3DPTBLENDCAPS_MODULATE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100c9">D3DPTBLENDCAPS_MODULATEALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ca">D3DPTBLENDCAPS_MODULATEMASK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100cb">D3DPTEXTURECAPS_ALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100cc">D3DPTEXTURECAPS_BORDER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100cd">D3DPTEXTURECAPS_PERSPECTIVE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ce">D3DPTEXTURECAPS_POW2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100cf">D3DPTEXTURECAPS_SQUAREONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100d0">D3DPTEXTURECAPS_TRANSPARENCY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100d1">D3DPTFILTERCAPS_LINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100d2">D3DPTFILTERCAPS_LINEARMIPLINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100d3">D3DPTFILTERCAPS_LINEARMIPNEAREST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100d4">D3DPTFILTERCAPS_MIPLINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100d5">D3DPTFILTERCAPS_MIPNEAREST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100d6">D3DPTFILTERCAPS_NEAREST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100d7">D3DRENDERSTATE_ALPHAFUNC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100d8">D3DRENDERSTATE_ALPHAREF</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100d9">D3DRENDERSTATE_ALPHATESTENABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100da">D3DRENDERSTATE_ANTIALIAS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100db">D3DRENDERSTATE_BLENDENABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100dc">D3DRENDERSTATE_CULLMODE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100dd">D3DRENDERSTATE_DESTBLEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100de">D3DRENDERSTATE_DITHERENABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100df">D3DRENDERSTATE_FILLMODE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100e0">D3DRENDERSTATE_FOGCOLOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100e1">D3DRENDERSTATE_FOGENABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100e2">D3DRENDERSTATE_FOGTABLEDENSITY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100e3">D3DRENDERSTATE_FOGTABLEEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100e4">D3DRENDERSTATE_FOGTABLEMODE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100e5">D3DRENDERSTATE_FOGTABLESTART</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100e6">D3DRENDERSTATE_LASTPIXEL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100e7">D3DRENDERSTATE_LINEPATTERN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100e8">D3DRENDERSTATE_MONOENABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100e9">D3DRENDERSTATE_PLANEMASK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ea">D3DRENDERSTATE_ROP2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100eb">D3DRENDERSTATE_SHADEMODE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ec">D3DRENDERSTATE_SPECULARENABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ed">D3DRENDERSTATE_SRCBLEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ee">D3DRENDERSTATE_STIPPLEDALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ef">D3DRENDERSTATE_STIPPLEENABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100f0">D3DRENDERSTATE_STIPPLEPATTERN00</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100f1">D3DRENDERSTATE_STIPPLEPATTERN01</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100f2">D3DRENDERSTATE_STIPPLEPATTERN02</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100f3">D3DRENDERSTATE_STIPPLEPATTERN03</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100f4">D3DRENDERSTATE_STIPPLEPATTERN04</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100f5">D3DRENDERSTATE_STIPPLEPATTERN05</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100f6">D3DRENDERSTATE_STIPPLEPATTERN06</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100f7">D3DRENDERSTATE_STIPPLEPATTERN07</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100f8">D3DRENDERSTATE_STIPPLEPATTERN08</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100f9">D3DRENDERSTATE_STIPPLEPATTERN09</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100fa">D3DRENDERSTATE_STIPPLEPATTERN10</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100fb">D3DRENDERSTATE_STIPPLEPATTERN11</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100fc">D3DRENDERSTATE_STIPPLEPATTERN12</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100fd">D3DRENDERSTATE_STIPPLEPATTERN13</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100fe">D3DRENDERSTATE_STIPPLEPATTERN14</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0100ff">D3DRENDERSTATE_STIPPLEPATTERN15</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010101">D3DRENDERSTATE_STIPPLEPATTERN16</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010102">D3DRENDERSTATE_STIPPLEPATTERN17</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010103">D3DRENDERSTATE_STIPPLEPATTERN18</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010104">D3DRENDERSTATE_STIPPLEPATTERN19</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010105">D3DRENDERSTATE_STIPPLEPATTERN20</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010106">D3DRENDERSTATE_STIPPLEPATTERN21</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010107">D3DRENDERSTATE_STIPPLEPATTERN22</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010108">D3DRENDERSTATE_STIPPLEPATTERN23</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010109">D3DRENDERSTATE_STIPPLEPATTERN24</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01010a">D3DRENDERSTATE_STIPPLEPATTERN25</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01010b">D3DRENDERSTATE_STIPPLEPATTERN26</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01010c">D3DRENDERSTATE_STIPPLEPATTERN27</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01010d">D3DRENDERSTATE_STIPPLEPATTERN28</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01010e">D3DRENDERSTATE_STIPPLEPATTERN29</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01010f">D3DRENDERSTATE_STIPPLEPATTERN30</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010110">D3DRENDERSTATE_STIPPLEPATTERN31</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010111">D3DRENDERSTATE_SUBPIXEL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010112">D3DRENDERSTATE_SUBPIXELX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010113">D3DRENDERSTATE_TEXTUREADDRESS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010114">D3DRENDERSTATE_TEXTUREHANDLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010115">D3DRENDERSTATE_TEXTUREMAG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010116">D3DRENDERSTATE_TEXTUREMAPBLEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010117">D3DRENDERSTATE_TEXTUREMIN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010118">D3DRENDERSTATE_TEXTUREPERSPECTIVE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010119">D3DRENDERSTATE_WRAPU</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01011a">D3DRENDERSTATE_WRAPV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01011b">D3DRENDERSTATE_ZENABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01011c">D3DRENDERSTATE_ZFUNC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01011d">D3DRENDERSTATE_ZVISIBLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01011e">D3DRENDERSTATE_ZWRITEENABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01011f">D3DRMANIMATION_CLOSED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010120">D3DRMANIMATION_LINEARPOSITION</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010121">D3DRMANIMATION_OPEN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010122">D3DRMANIMATION_POSITION</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010123">D3DRMANIMATION_SCALEANDROTATION</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010124">D3DRMANIMATION_SPLINEPOSITION</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010125">D3DRMCOLOR_FROMFACE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010126">D3DRMCOLOR_FROMVERTEX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010127">D3DRMCOMBINE_AFTER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010128">D3DRMCOMBINE_BEFORE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010129">D3DRMCOMBINE_REPLACE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01012a">D3DRMCONSTRAIN_X</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01012b">D3DRMCONSTRAIN_Y</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01012c">D3DRMCONSTRAIN_Z</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01012d">D3DRMFILL_MASK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01012e">D3DRMFILL_MAX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01012f">D3DRMFILL_POINTS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010130">D3DRMFILL_SOLID</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010131">D3DRMFILL_WIREFRAME</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010132">D3DRMFOG_EXPONENTIAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010133">D3DRMFOG_EXPONENTIALSQUARED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010134">D3DRMFOG_LINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010135">D3DRMLIGHT_AMBIENT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010136">D3DRMLIGHT_DIRECTIONAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010137">D3DRMLIGHT_MASK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010138">D3DRMLIGHT_MAX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010139">D3DRMLIGHT_OFF</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01013a">D3DRMLIGHT_ON</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01013b">D3DRMLIGHT_PARALLELPOINT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01013c">D3DRMLIGHT_POINT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01013d">D3DRMLIGHT_SPOT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01013e">D3DRMLOAD_BYGUID</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01013f">D3DRMLOAD_BYNAME</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010140">D3DRMLOAD_BYPOSITION</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010141">D3DRMLOAD_FIRST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010142">D3DRMLOAD_FROMFILE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010143">D3DRMLOAD_FROMMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010144">D3DRMLOAD_FROMRESOURCE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010145">D3DRMLOAD_FROMSTREAM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010146">D3DRMLOAD_INSTANCEBYCOPYING</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010147">D3DRMLOAD_INSTANCEBYREFERENCE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010148">D3DRMMATERIAL_FROMFRAME</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010149">D3DRMMATERIAL_FROMMESH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01014a">D3DRMMATERIAL_FROMPARENT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01014b">D3DRMPALETTE_FREE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01014c">D3DRMPALETTE_READONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01014d">D3DRMPALETTE_RESERVED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01014e">D3DRMPROJECT_ORTHOGRAPHIC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01014f">D3DRMPROJECT_PERSPECTIVE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010150">D3DRMRENDER_FLAT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010151">D3DRMRENDER_GOURAUD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010152">D3DRMRENDER_PHONG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010153">D3DRMRENDER_UNLITFLAT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010154">D3DRMRENDER_WIREFRAME</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010155">D3DRMSHADE_FLAT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010156">D3DRMSHADE_GOURAUD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010157">D3DRMSHADE_MASK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010158">D3DRMSHADE_MAX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010159">D3DRMSHADE_PHONG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01015a">D3DRMSORT_BACKTOFRONT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01015b">D3DRMSORT_FROMPARENT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01015c">D3DRMSORT_FRONTTOBACK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01015d">D3DRMSORT_NONE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01015e">D3DRMTEXTURE_LINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01015f">D3DRMTEXTURE_LINEARMIPLINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010160">D3DRMTEXTURE_LINEARMIPNEAREST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010161">D3DRMTEXTURE_MIPLINEAR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010162">D3DRMTEXTURE_MIPNEAREST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010163">D3DRMTEXTURE_NEAREST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010164">D3DRMWIREFRAME_CULL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010165">D3DRMWIREFRAME_HIDDENLINE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010166">D3DRMWRAP_CHROME</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010167">D3DRMWRAP_CYLINDER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010168">D3DRMWRAP_FLAT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010169">D3DRMWRAP_SPHERE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01016a">D3DRMXOF_BINARY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01016b">D3DRMXOF_COMPRESSED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01016c">D3DRMXOF_TEXT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01016d">D3DRMXOFSAVE_ALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01016e">D3DRMXOFSAVE_MATERIALS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01016f">D3DRMXOFSAVE_NORMALS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010170">D3DRMXOFSAVE_TEMPLATES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010171">D3DRMXOFSAVE_TEXTURECOORDINATES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010172">D3DRMXOFSAVE_TEXTURENAMES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010173">D3DRMZBUFFER_DISABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010174">D3DRMZBUFFER_ENABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010175">D3DRMZBUFFER_FROMPARENT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010176">D3DSETSTATUS_ALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010177">D3DSETSTATUS_EXTENTS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010178">D3DSETSTATUS_STATUS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010179">D3DSHADE_FLAT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01017a">D3DSHADE_GOURAUD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01017b">D3DSHADE_PHONG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01017c">D3DSTATE_OVERRIDE_BIAS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01017d">D3DSTATUS_CLIPINTERSECTIONALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01017e">D3DSTATUS_CLIPINTERSECTIONBACK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01017f">D3DSTATUS_CLIPINTERSECTIONBOTTOM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010180">D3DSTATUS_CLIPINTERSECTIONFRONT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010181">D3DSTATUS_CLIPINTERSECTIONGEN0</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010182">D3DSTATUS_CLIPINTERSECTIONGEN1</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010183">D3DSTATUS_CLIPINTERSECTIONGEN2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010184">D3DSTATUS_CLIPINTERSECTIONGEN3</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010185">D3DSTATUS_CLIPINTERSECTIONGEN4</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010186">D3DSTATUS_CLIPINTERSECTIONGEN5</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010187">D3DSTATUS_CLIPINTERSECTIONLEFT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010188">D3DSTATUS_CLIPINTERSECTIONRIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010189">D3DSTATUS_CLIPINTERSECTIONTOP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01018a">D3DSTATUS_CLIPUNIONALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01018b">D3DSTATUS_CLIPUNIONBACK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01018c">D3DSTATUS_CLIPUNIONBOTTOM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01018d">D3DSTATUS_CLIPUNIONFRONT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01018e">D3DSTATUS_CLIPUNIONGEN0</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01018f">D3DSTATUS_CLIPUNIONGEN1</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010190">D3DSTATUS_CLIPUNIONGEN2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010191">D3DSTATUS_CLIPUNIONGEN3</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010192">D3DSTATUS_CLIPUNIONGEN4</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010193">D3DSTATUS_CLIPUNIONGEN5</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010194">D3DSTATUS_CLIPUNIONLEFT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010195">D3DSTATUS_CLIPUNIONRIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010196">D3DSTATUS_CLIPUNIONTOP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010197">D3DSTATUS_DEFAULT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010198">D3DSTATUS_ZNOTVISIBLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010199">D3DTADDRESS_CLAMP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01019a">D3DTADDRESS_MIRROR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01019b">D3DTADDRESS_WRAP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01019c">D3DTBLEND_COPY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01019d">D3DTBLEND_DECAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01019e">D3DTBLEND_DECALALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01019f">D3DTBLEND_DECALMASK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101a0">D3DTBLEND_MODULATE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101a1">D3DTBLEND_MODULATEALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101a2">D3DTBLEND_MODULATEMASK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101a3">D3DTRANSFORM_CLIPPED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101a4">D3DTRANSFORM_UNCLIPPED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101a5">D3DTRANSFORMSTATE_PROJECTION</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101a6">D3DTRANSFORMSTATE_VIEW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101a7">D3DTRANSFORMSTATE_WORLD</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b0101a8">D3DTRIFLAG_EDGEENABLE1</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b0101a9">D3DTRIFLAG_EDGEENABLE2</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b0101aa">D3DTRIFLAG_EDGEENABLE3</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b0101ab">D3DTRIFLAG_EDGEENABLETRIANGLE</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b0101ac">D3DTRIFLAG_EVEN</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b0101ad">D3DTRIFLAG_ODD</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b0101ae">D3DTRIFLAG_START</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101af">DD_OK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101b0">DDBD_1</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101b1">DDBD_16</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101b2">DDBD_2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101b3">DDBD_24</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101b4">DDBD_32</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101b5">DDBD_4</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101b6">DDBD_8</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101b7">DDBLT_ALPHADEST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101b8">DDBLT_ALPHADESTCONSTOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101b9">DDBLT_ALPHADESTNEG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101ba">DDBLT_ALPHADESTSURFACEOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101bb">DDBLT_ALPHAEDGEBLEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101bc">DDBLT_ALPHASRC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101bd">DDBLT_ALPHASRCCONSTOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101be">DDBLT_ALPHASRCNEG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101bf">DDBLT_ALPHASRCSURFACEOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101c0">DDBLT_ASYNC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101c1">DDBLT_COLORFILL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101c2">DDBLT_DDFX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101c3">DDBLT_DDROPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101c4">DDBLT_DEPTHFILL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101c5">DDBLT_KEYDEST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101c6">DDBLT_KEYDESTOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101c7">DDBLT_KEYSRC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101c8">DDBLT_KEYSRCOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101c9">DDBLT_ROP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101ca">DDBLT_ROTATIONANGLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101cb">DDBLT_WAIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101cc">DDBLT_ZBUFFER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101cd">DDBLT_ZBUFFERDESTCONSTOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101ce">DDBLT_ZBUFFERDESTOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101cf">DDBLT_ZBUFFERSRCCONSTOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101d0">DDBLT_ZBUFFERSRCOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101d1">DDBLTFAST_DESTCOLORKEY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101d2">DDBLTFAST_NOCOLORKEY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101d3">DDBLTFAST_SRCCOLORKEY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101d4">DDBLTFAST_WAIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101d5">DDBLTFX_ARITHSTRETCHY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101d6">DDBLTFX_MIRRORLEFTRIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101d7">DDBLTFX_MIRRORUPDOWN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101d8">DDBLTFX_NOTEARING</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101d9">DDBLTFX_ROTATE180</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101da">DDBLTFX_ROTATE270</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101db">DDBLTFX_ROTATE90</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101dc">DDBLTFX_ZBUFFERBASEDEST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101dd">DDBLTFX_ZBUFFERRANGE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101de">DDCAPS_3D</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101df">DDCAPS_ALIGNBOUNDARYDEST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101e0">DDCAPS_ALIGNBOUNDARYSRC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101e1">DDCAPS_ALIGNSIZEDEST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101e2">DDCAPS_ALIGNSIZESRC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101e3">DDCAPS_ALIGNSTRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101e4">DDCAPS_ALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101e5">DDCAPS_BANKSWITCHED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101e6">DDCAPS_BLT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101e7">DDCAPS_BLTCOLORFILL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101e8">DDCAPS_BLTDEPTHFILL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101e9">DDCAPS_BLTFOURCC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101ea">DDCAPS_BLTQUEUE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101eb">DDCAPS_BLTSTRETCH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101ec">DDCAPS_CANBLTSYSMEM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101ed">DDCAPS_CANCLIP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101ee">DDCAPS_CANCLIPSTRETCHED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101ef">DDCAPS_COLORKEY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101f0">DDCAPS_COLORKEYHWASSIST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101f1">DDCAPS_GDI</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101f2">DDCAPS_NOHARDWARE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101f3">DDCAPS_OVERLAY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101f4">DDCAPS_OVERLAYCANTCLIP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101f5">DDCAPS_OVERLAYFOURCC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101f6">DDCAPS_OVERLAYSTRETCH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101f7">DDCAPS_PALETTE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101f8">DDCAPS_PALETTEVSYNC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101f9">DDCAPS_READSCANLINE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101fa">DDCAPS_STEREOVIEW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101fb">DDCAPS_VBI</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101fc">DDCAPS_ZBLTS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101fd">DDCAPS_ZOVERLAYS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101fe">DDCAPS2_CERTIFIED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0101ff">DDCAPS2_NO2DDURING3DSCENE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010201">DDCKEY_COLORSPACE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010202">DDCKEY_DESTBLT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010203">DDCKEY_DESTOVERLAY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010204">DDCKEY_SRCBLT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010205">DDCKEY_SRCOVERLAY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010206">DDCKEYCAPS_DESTBLT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010207">DDCKEYCAPS_DESTBLTCLRSPACE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010208">DDCKEYCAPS_DESTBLTCLRSPACEYUV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010209">DDCKEYCAPS_DESTBLTYUV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01020a">DDCKEYCAPS_DESTOVERLAY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01020b">DDCKEYCAPS_DESTOVERLAYCLRSPACE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01020c">DDCKEYCAPS_DESTOVERLAYCLRSPACEYUV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01020d">DDCKEYCAPS_DESTOVERLAYONEACTIVE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01020e">DDCKEYCAPS_DESTOVERLAYYUV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01020f">DDCKEYCAPS_NOCOSTOVERLAY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010210">DDCKEYCAPS_SRCBLT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010211">DDCKEYCAPS_SRCBLTCLRSPACE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010212">DDCKEYCAPS_SRCBLTCLRSPACEYUV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010213">DDCKEYCAPS_SRCBLTYUV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010214">DDCKEYCAPS_SRCOVERLAY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010215">DDCKEYCAPS_SRCOVERLAYCLRSPACE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010216">DDCKEYCAPS_SRCOVERLAYCLRSPACEYUV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010217">DDCKEYCAPS_SRCOVERLAYONEACTIVE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010218">DDCKEYCAPS_SRCOVERLAYYUV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010219">DDCOOPERATIVE_CLIPTOCOMPONENT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01021a">DDCOOPERATIVE_OFFSETTOCOMPONENT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01021b">DDCREATE_EMULATIONONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01021c">DDCREATE_HARDWAREONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01021d">DDEDM_REFRESHRATES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01021e">DDENUMOVERLAYZ_BACKTOFRONT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01021f">DDENUMOVERLAYZ_FRONTTOBACK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010220">DDENUMSURFACES_ALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010221">DDENUMSURFACES_CANBECREATED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010222">DDENUMSURFACES_DOESEXIST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010223">DDENUMSURFACES_MATCH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010224">DDENUMSURFACES_NOMATCH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010225">DDERR_SURFACELOST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010226">DDERR_WASSTILLDRAWING</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010227">DDFLIP_WAIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010228">DDFXALPHACAPS_BLTALPHAEDGEBLEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010229">DDFXALPHACAPS_BLTALPHAPIXELS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01022a">DDFXALPHACAPS_BLTALPHAPIXELSNEG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01022b">DDFXALPHACAPS_BLTALPHASURFACES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01022c">DDFXALPHACAPS_BLTALPHASURFACESNEG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01022d">DDFXALPHACAPS_OVERLAYALPHAEDGEBLEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01022e">DDFXALPHACAPS_OVERLAYALPHAPIXELS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01022f">DDFXALPHACAPS_OVERLAYALPHAPIXELSNEG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010230">DDFXALPHACAPS_OVERLAYALPHASURFACES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010231">DDFXALPHACAPS_OVERLAYALPHASURFACESNEG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010232">DDFXCAPS_BLTARITHSTRETCHY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010233">DDFXCAPS_BLTARITHSTRETCHYN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010234">DDFXCAPS_BLTMIRRORLEFTRIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010235">DDFXCAPS_BLTMIRRORUPDOWN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010236">DDFXCAPS_BLTROTATION</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010237">DDFXCAPS_BLTROTATION90</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010238">DDFXCAPS_BLTSHRINKX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010239">DDFXCAPS_BLTSHRINKXN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01023a">DDFXCAPS_BLTSHRINKY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01023b">DDFXCAPS_BLTSHRINKYN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01023c">DDFXCAPS_BLTSTRETCHX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01023d">DDFXCAPS_BLTSTRETCHXN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01023e">DDFXCAPS_BLTSTRETCHY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01023f">DDFXCAPS_BLTSTRETCHYN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010240">DDFXCAPS_OVERLAYARITHSTRETCHY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010241">DDFXCAPS_OVERLAYARITHSTRETCHYN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010242">DDFXCAPS_OVERLAYMIRRORLEFTRIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010243">DDFXCAPS_OVERLAYMIRRORUPDOWN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010244">DDFXCAPS_OVERLAYSHRINKX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010245">DDFXCAPS_OVERLAYSHRINKXN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010246">DDFXCAPS_OVERLAYSHRINKY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010247">DDFXCAPS_OVERLAYSHRINKYN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010248">DDFXCAPS_OVERLAYSTRETCHX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010249">DDFXCAPS_OVERLAYSTRETCHXN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01024a">DDFXCAPS_OVERLAYSTRETCHY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01024b">DDFXCAPS_OVERLAYSTRETCHYN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01024c">DDGBS_CANBLT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01024d">DDGBS_ISBLTDONE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01024e">DDGFS_CANFLIP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01024f">DDGFS_ISFLIPDONE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010250">DDLOCK_EVENT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010251">DDLOCK_READONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010252">DDLOCK_SURFACEMEMORYPTR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010253">DDLOCK_WAIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010254">DDLOCK_WRITEONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010255">DDOVER_ADDDIRTYRECT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010256">DDOVER_ALPHADEST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010257">DDOVER_ALPHADESTCONSTOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010258">DDOVER_ALPHADESTNEG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010259">DDOVER_ALPHADESTSURFACEOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01025a">DDOVER_ALPHAEDGEBLEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01025b">DDOVER_ALPHASRC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01025c">DDOVER_ALPHASRCCONSTOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01025d">DDOVER_ALPHASRCNEG</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01025e">DDOVER_ALPHASRCSURFACEOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01025f">DDOVER_DDFX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010260">DDOVER_HIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010261">DDOVER_KEYDEST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010262">DDOVER_KEYDESTOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010263">DDOVER_KEYSRC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010264">DDOVER_KEYSRCOVERRIDE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010265">DDOVER_REFRESHALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010266">DDOVER_REFRESHDIRTYRECTS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010267">DDOVER_SHOW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010268">DDOVERFX_ARITHSTRETCHY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010269">DDOVERFX_MIRRORLEFTRIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01026a">DDOVERFX_MIRRORUPDOWN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01026b">DDOVERZ_INSERTINBACKOF</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01026c">DDOVERZ_INSERTINFRONTOF</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01026d">DDOVERZ_MOVEBACKWARD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01026e">DDOVERZ_MOVEFORWARD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01026f">DDOVERZ_SENDTOBACK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010270">DDOVERZ_SENDTOFRONT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010271">DDPCAPS_1BIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010272">DDPCAPS_2BIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010273">DDPCAPS_4BIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010274">DDPCAPS_8BIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010275">DDPCAPS_8BITENTRIES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010276">DDPCAPS_ALLOW256</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010277">DDPCAPS_INITIALIZE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010278">DDPCAPS_PRIMARYSURFACE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010279">DDPCAPS_PRIMARYSURFACELEFT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01027a">DDPCAPS_VSYNC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01027b">DDPF_ALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01027c">DDPF_ALPHAPIXELS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01027d">DDPF_COMPRESSED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01027e">DDPF_FOURCC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01027f">DDPF_PALETTEINDEXED1</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010280">DDPF_PALETTEINDEXED2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010281">DDPF_PALETTEINDEXED4</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010282">DDPF_PALETTEINDEXED8</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010283">DDPF_PALETTEINDEXEDTO8</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010284">DDPF_RGB</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010285">DDPF_RGBTOYUV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010286">DDPF_YUV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010287">DDPF_ZBUFFER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010288">DDSCAPS_3D</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010289">DDSCAPS_3DDEVICE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01028a">DDSCAPS_ALLOCONLOAD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01028b">DDSCAPS_ALPHA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01028c">DDSCAPS_BACKBUFFER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01028d">DDSCAPS_COMPLEX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01028e">DDSCAPS_FLIP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01028f">DDSCAPS_FRONTBUFFER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010290">DDSCAPS_HWCODEC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010291">DDSCAPS_LIVEVIDEO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010292">DDSCAPS_MIPMAP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010293">DDSCAPS_MODEX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010294">DDSCAPS_OFFSCREENPLAIN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010295">DDSCAPS_OVERLAY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010296">DDSCAPS_OWNDC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010297">DDSCAPS_PALETTE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010298">DDSCAPS_PRIMARYSURFACE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010299">DDSCAPS_PRIMARYSURFACELEFT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01029a">DDSCAPS_SYSTEMMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01029b">DDSCAPS_TEXTURE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01029c">DDSCAPS_VIDEOMEMORY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01029d">DDSCAPS_VISIBLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01029e">DDSCAPS_WRITEONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01029f">DDSCAPS_ZBUFFER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102a0">DDSCL_ALLOWMODEX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102a1">DDSCL_ALLOWREBOOT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102a2">DDSCL_EXCLUSIVE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102a3">DDSCL_FULLSCREEN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102a4">DDSCL_NORMAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102a5">DDSCL_NOWINDOWCHANGES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102a6">DDSD_ALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102a7">DDSD_ALPHABITDEPTH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102a8">DDSD_BACKBUFFERCOUNT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102a9">DDSD_CAPS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102aa">DDSD_CKDESTBLT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ab">DDSD_CKDESTOVERLAY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ac">DDSD_CKSRCBLT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ad">DDSD_CKSRCOVERLAY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ae">DDSD_HEIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102af">DDSD_MIPMAPCOUNT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102b0">DDSD_PITCH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102b1">DDSD_PIXELFORMAT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102b2">DDSD_REFRESHRATE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102b3">DDSD_WIDTH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102b4">DDSD_ZBUFFERBITDEPTH</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102b5">DDSVCAPS_ENIGMA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102b6">DDSVCAPS_FLICKER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102b7">DDSVCAPS_REDBLUE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102b8">DDSVCAPS_SPLIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102b9">DDWAITVB_BLOCKBEGIN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ba">DDWAITVB_BLOCKBEGINEVENT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102bb">DDWAITVB_BLOCKEND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102bc">DPCAPS_GROUPOPTIMIZED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102bd">DPCAPS_GUARANTEEDOPTIMIZED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102be">DPCAPS_GUARANTEEDSUPPORTED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102bf">DPCAPS_ISHOST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102c0">DPCAPS_KEEPALIVEOPTIMIZED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102c1">DPCPA_DTRFLOW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102c2">DPCPA_NOFLOW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102c3">DPCPA_RTSDTRFLOW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102c4">DPCPA_RTSFLOW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102c5">DPCPA_XONXOFFFLOW</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102c6">DPENUMPLAYERS_ALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102c7">DPENUMPLAYERS_GROUP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102c8">DPENUMPLAYERS_LOCAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102c9">DPENUMPLAYERS_REMOTE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ca">DPENUMPLAYERS_SESSION</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102cb">DPENUMSESSIONS_ALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102cc">DPENUMSESSIONS_AVAILABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102cd">DPESC_TIMEDOUT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ce">DPGET_LOCAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102cf">DPGET_REMOTE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102d0">DPGETCAPS_GUARANTEED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102d1">DPLAD_SYSTEM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102d2">DPLCONNECTION_CREATESESSION</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102d3">DPLCONNECTION_JOINSESSION</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102d4">DPLSYS_APPTERMINATED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102d5">DPLSYS_CONNECTIONSETTINGSREAD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102d6">DPLSYS_DPLAYCONNECTFAILED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102d7">DPLSYS_DPLAYCONNECTSUCCEEDED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102d8">DPOPEN_CREATE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102d9">DPOPEN_JOIN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102da">DPPLAYERTYPE_GROUP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102db">DPPLAYERTYPE_PLAYER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102dc">DPRECEIVE_ALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102dd">DPRECEIVE_FROMPLAYER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102de">DPRECEIVE_PEEK</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102df">DPRECEIVE_TOPLAYER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102e0">DPSEND_CLOSESTREAM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102e1">DPSEND_GUARANTEED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102e2">DPSEND_HIGHPRIORITY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102e3">DPSEND_OPENSTREAM</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102e4">DPSESSION_JOINDISABLED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102e5">DPSESSION_KEEPALIVE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102e6">DPSESSION_MIGRATEHOST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102e7">DPSESSION_NEWPLAYERSDISABLED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102e8">DPSESSION_NODATAMESSAGES</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102e9">DPSESSION_NOMESSAGEID</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ea">DPSET_GUARANTEED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102eb">DPSET_LOCAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ec">DPSET_REMOTE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ed">DPSYS_ADDPLAYERTOGROUP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ee">DPSYS_CREATEPLAYERORGROUP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ef">DPSYS_DELETEPLAYERFROMGROUP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102f0">DPSYS_DESTROYPLAYERORGROUP</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102f1">DPSYS_HOST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102f2">DPSYS_SESSIONLOST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102f3">DPSYS_SETPLAYERORGROUPDATA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102f4">DPSYS_SETPLAYERORGROUPNAME</A>;
  public final static float <A HREF="DirectXConstants.htm#com_000300065b0102f5">DS3D_DEFAULTDISTANCEFACTOR</A>;
  public final static float <A HREF="DirectXConstants.htm#com_000300065b0102f6">DS3D_DEFAULTDOPPLERFACTOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102f7">DS3D_DEFERRED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102f8">DS3D_IMMEDIATE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102f9">DS3DMODE_DISABLE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102fa">DS3DMODE_HEADRELATIVE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102fb">DS3DMODE_NORMAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102fc">DSBCAPS_CTRL3D</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102fd">DSBCAPS_CTRLALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102fe">DSBCAPS_CTRLDEFAULT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b0102ff">DSBCAPS_CTRLFREQUENCY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010301">DSBCAPS_CTRLPAN</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010302">DSBCAPS_CTRLVOLUME</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010303">DSBCAPS_GETCURRENTPOSITION2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010304">DSBCAPS_GLOBALFOCUS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010305">DSBCAPS_LOCHARDWARE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010306">DSBCAPS_LOCSOFTWARE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010307">DSBCAPS_PRIMARYBUFFER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010308">DSBCAPS_STATIC</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010309">DSBCAPS_STICKYFOCUS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01030a">DSBLOCK_FROMWRITECURSOR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01030b">DSBPLAY_LOOPING</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01030c">DSBSTATUS_BUFFERLOST</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01030d">DSBSTATUS_LOOPING</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01030e">DSBSTATUS_PLAYING</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01030f">DSCAPS_CERTIFIED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010310">DSCAPS_CONTINUOUSRATE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010311">DSCAPS_EMULDRIVER</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010312">DSCAPS_PRIMARY16BIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010313">DSCAPS_PRIMARY8BIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010314">DSCAPS_PRIMARYMONO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010315">DSCAPS_PRIMARYSTEREO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010316">DSCAPS_SECONDARY16BIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010317">DSCAPS_SECONDARY8BIT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010318">DSCAPS_SECONDARYMONO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010319">DSCAPS_SECONDARYSTEREO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01031a">DSSCL_EXCLUSIVE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01031b">DSSCL_NORMAL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01031c">DSSCL_PRIORITY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01031d">DSSCL_WRITEPRIMARY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01031e">DSSPEAKER_HEADPHONE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01031f">DSSPEAKER_MONO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010320">DSSPEAKER_QUAD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010321">DSSPEAKER_STEREO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010322">DSSPEAKER_SURROUND</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010323">JOY_BUTTON1</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010324">JOY_BUTTON10</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010325">JOY_BUTTON11</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010326">JOY_BUTTON12</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010327">JOY_BUTTON13</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010328">JOY_BUTTON14</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010329">JOY_BUTTON15</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01032a">JOY_BUTTON16</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01032b">JOY_BUTTON17</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01032c">JOY_BUTTON18</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01032d">JOY_BUTTON19</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01032e">JOY_BUTTON2</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01032f">JOY_BUTTON20</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010330">JOY_BUTTON21</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010331">JOY_BUTTON22</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010332">JOY_BUTTON23</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010333">JOY_BUTTON24</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010334">JOY_BUTTON25</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010335">JOY_BUTTON26</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010336">JOY_BUTTON27</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010337">JOY_BUTTON28</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010338">JOY_BUTTON29</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010339">JOY_BUTTON3</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01033a">JOY_BUTTON30</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01033b">JOY_BUTTON31</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01033c">JOY_BUTTON32</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01033d">JOY_BUTTON4</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01033e">JOY_BUTTON5</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01033f">JOY_BUTTON6</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010340">JOY_BUTTON7</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010341">JOY_BUTTON8</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010342">JOY_BUTTON9</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010343">JOY_CAL_READ3</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010344">JOY_CAL_READ4</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010345">JOY_CAL_READ5</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010346">JOY_CAL_READ6</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010347">JOY_CAL_READALWAYS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010348">JOY_CAL_READRONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010349">JOY_CAL_READUONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01034a">JOY_CAL_READVONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01034b">JOY_CAL_READXONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01034c">JOY_CAL_READXYONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01034d">JOY_CAL_READYONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01034e">JOY_CAL_READZONLY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01034f">JOY_POVBACKWARD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010350">JOY_POVCENTERED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010351">JOY_POVFORWARD</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010352">JOY_POVLEFT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010353">JOY_POVRIGHT</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010354">JOY_RETURNALL</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010355">JOY_RETURNBUTTONS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010356">JOY_RETURNCENTERED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010357">JOY_RETURNPOV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010358">JOY_RETURNPOVCTS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010359">JOY_RETURNR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01035a">JOY_RETURNRAWDATA</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01035b">JOY_RETURNU</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01035c">JOY_RETURNV</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01035d">JOY_RETURNX</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01035e">JOY_RETURNY</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01035f">JOY_RETURNZ</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010360">JOY_USEDEADZONE</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b010361">JOYCAPS_HASPOV</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b010362">JOYCAPS_HASR</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b010363">JOYCAPS_HASU</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b010364">JOYCAPS_HASV</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b010365">JOYCAPS_HASZ</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b010366">JOYCAPS_POV4DIR</A>;
  public final static short <A HREF="DirectXConstants.htm#com_000300065b010367">JOYCAPS_POVCTS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010368">JOYERR_BASE</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b010369">JOYERR_NOCANDO</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01036a">JOYERR_NOERROR</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01036b">JOYERR_PARMS</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01036c">JOYERR_UNPLUGGED</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01036d">JOYSTICKID1</A>;
  public final static int <A HREF="DirectXConstants.htm#com_000300065b01036e">JOYSTICKID2</A>;
}
</FONT></PRE>
<P>The DirectXConstants interface defines all the constants used in DirectX for Java. 

<H3 STYLE="color:#333366"><A NAME="com_000300065b010000">Fields</A></H3><DL>
<DT><B><A NAME="com_000300065b010001">D3DBLEND_BOTHINVSRCALPHA</A></B>
</DT><DD>The destination blend selection is overridden when the source blend factor is (1-As, 1-As, 1-As, 1-As), and destination blend factor is (As, As, As, As). 

</DD><DT><B><A NAME="com_000300065b010002">D3DBLEND_BOTHSRCALPHA</A></B>
</DT><DD>The destination blend selection is overridden when the source blend factor is (As, As, As, As), and destination blend factor is (1-As, 1-As, 1-As, 1-As). 

</DD><DT><B><A NAME="com_000300065b010003">D3DBLEND_DESTALPHA</A></B>
</DT><DD>Blend factor is (Ad, Ad, Ad, Ad). 

</DD><DT><B><A NAME="com_000300065b010004">D3DBLEND_DESTCOLOR</A></B>
</DT><DD>Blend factor is (Rd, Gd, Bd, Ad). 

</DD><DT><B><A NAME="com_000300065b010005">D3DBLEND_INVDESTALPHA</A></B>
</DT><DD>Blend factor is (1-Ad, 1-Ad, 1-Ad, 1-Ad). 

</DD><DT><B><A NAME="com_000300065b010006">D3DBLEND_INVDESTCOLOR</A></B>
</DT><DD>Blend factor is (1-Rd, 1-Gd, 1-Bd, 1-Ad). 

</DD><DT><B><A NAME="com_000300065b010007">D3DBLEND_INVSRCALPHA</A></B>
</DT><DD>Blend factor is (1-As, 1-As, 1-As). 

</DD><DT><B><A NAME="com_000300065b010008">D3DBLEND_INVSRCCOLOR</A></B>
</DT><DD>Blend factor is (As, As, As, As, 1-As). 

</DD><DT><B><A NAME="com_000300065b010009">D3DBLEND_ONE</A></B>
</DT><DD>Blend factor is (1, 1, 1, 1). 

</DD><DT><B><A NAME="com_000300065b01000a">D3DBLEND_SRCALPHA</A></B>
</DT><DD>Blend factor is (As, As, As, As). 

</DD><DT><B><A NAME="com_000300065b01000b">D3DBLEND_SRCALPHASAT</A></B>
</DT><DD>Blend factor is (f, f, f, 1); f = min(As, 1-Ad). 

</DD><DT><B><A NAME="com_000300065b01000c">D3DBLEND_SRCCOLOR</A></B>
</DT><DD>Blend factor is (Rs, Gs, Bs, As). 

</DD><DT><B><A NAME="com_000300065b01000d">D3DBLEND_ZERO</A></B>
</DT><DD>Blend factor is (0, 0, 0, 0). 

</DD><DT><B><A NAME="com_000300065b01000e">D3DCLEAR_TARGET</A></B>
</DT><DD>Clear the rendering target to the background material (if set). 

</DD><DT><B><A NAME="com_000300065b01000f">D3DCLEAR_ZBUFFER</A></B>
</DT><DD>Clear the z-buffer or set it to the current background depth field (if set). 

</DD><DT><B><A NAME="com_000300065b010010">D3DCLIP_BACK</A></B>
</DT><DD>Clipped by the back plane of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b010011">D3DCLIP_BOTTOM</A></B>
</DT><DD>Clipped by the bottom plane of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b010012">D3DCLIP_FRONT</A></B>
</DT><DD>Clipped by the front plane of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b010013">D3DCLIP_GEN0</A></B>
</DT><DD>Application-defined clipping plane. 

</DD><DT><B><A NAME="com_000300065b010014">D3DCLIP_GEN1</A></B>
</DT><DD>Application-defined clipping plane. 

</DD><DT><B><A NAME="com_000300065b010015">D3DCLIP_GEN2</A></B>
</DT><DD>Application-defined clipping plane. 

</DD><DT><B><A NAME="com_000300065b010016">D3DCLIP_GEN3</A></B>
</DT><DD>Application-defined clipping plane. 

</DD><DT><B><A NAME="com_000300065b010017">D3DCLIP_GEN4</A></B>
</DT><DD>Application-defined clipping plane. 

</DD><DT><B><A NAME="com_000300065b010018">D3DCLIP_GEN5</A></B>
</DT><DD>Application-defined clipping plane. 

</DD><DT><B><A NAME="com_000300065b010019">D3DCLIP_LEFT</A></B>
</DT><DD>Clipped by the left plane of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b01001a">D3DCLIP_RIGHT</A></B>
</DT><DD>Clipped by the right plane of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b01001b">D3DCLIP_TOP</A></B>
</DT><DD>Clipped by the top plane of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b01001c">D3DCMP_ALWAYS</A></B>
</DT><DD>Always pass the test. 

</DD><DT><B><A NAME="com_000300065b01001d">D3DCMP_EQUAL</A></B>
</DT><DD>Accept the new pixel if its value equals the value of the current pixel. 

</DD><DT><B><A NAME="com_000300065b01001e">D3DCMP_GREATER</A></B>
</DT><DD>Accept the new pixel if its value is greater than the value of the current pixel. 

</DD><DT><B><A NAME="com_000300065b01001f">D3DCMP_GREATEREQUAL</A></B>
</DT><DD>Accept the new pixel if its value is greater than or equal to the value of the current pixel. 

</DD><DT><B><A NAME="com_000300065b010020">D3DCMP_LESS</A></B>
</DT><DD>Accept the new pixel if its value is less than the value of the current pixel. 

</DD><DT><B><A NAME="com_000300065b010021">D3DCMP_LESSEQUAL</A></B>
</DT><DD>Accept the new pixel if its value is less than or equal to the value of the current pixel. 

</DD><DT><B><A NAME="com_000300065b010022">D3DCMP_NEVER</A></B>
</DT><DD>Always fail the test. 

</DD><DT><B><A NAME="com_000300065b010023">D3DCMP_NOTEQUAL</A></B>
</DT><DD>Accept the new pixel if its value does not equal the value of the current pixel. 

</DD><DT><B><A NAME="com_000300065b010024">D3DCOLOR_MONO</A></B>
</DT><DD>Use a monochromatic model (or ramp model). In this model, the blue component of a vertex color is used to define the brightness of a lit vertex. 

</DD><DT><B><A NAME="com_000300065b010025">D3DCOLOR_RGB</A></B>
</DT><DD>Use a full RGB model. 

</DD><DT><B><A NAME="com_000300065b010026">D3DCULL_CCW</A></B>
</DT><DD>Cull faces with counterclockwise vertices. 

</DD><DT><B><A NAME="com_000300065b010027">D3DCULL_CW</A></B>
</DT><DD>Cull faces with clockwise vertices. 

</DD><DT><B><A NAME="com_000300065b010028">D3DCULL_NONE</A></B>
</DT><DD>Do not cull faces. 

</DD><DT><B><A NAME="com_000300065b010029">D3DDD_BCLIPPING</A></B>
</DT><DD>The <A HREF="D3dDeviceDesc.htm#com_0003000603010001">D3dDeviceDesc.clipping</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b01002a">D3DDD_COLORMODEL</A></B>
</DT><DD>The <A HREF="D3dDeviceDesc.htm#com_0003000603010002">D3dDeviceDesc.dcmColorModel</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b01002b">D3DDD_DEVCAPS</A></B>
</DT><DD>The <A HREF="D3dDeviceDesc.htm#com_0003000603010003">D3dDeviceDesc.devCaps</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b01002c">D3DDD_DEVICERENDERBITDEPTH</A></B>
</DT><DD>The <A HREF="D3dDeviceDesc.htm#com_0003000603010004">D3dDeviceDesc.deviceRenderBitDepth</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b01002d">D3DDD_DEVICEZBUFFERBITDEPTH</A></B>
</DT><DD>The <A HREF="D3dDeviceDesc.htm#com_0003000603010005">D3dDeviceDesc.deviceZBufferBitDepth</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b01002e">D3DDD_LIGHTINGCAPS</A></B>
</DT><DD>The <A HREF="D3dDeviceDesc.htm#com_0003000603010006">D3dDeviceDesc.dlcLightingCaps</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b01002f">D3DDD_LINECAPS</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010030">D3DDD_MAXBUFFERSIZE</A></B>
</DT><DD>The <A HREF="D3dDeviceDesc.htm#com_000300060301000b">D3dDeviceDesc.maxBufferSize</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b010031">D3DDD_MAXVERTEXCOUNT</A></B>
</DT><DD>The <A HREF="D3dDeviceDesc.htm#com_000300060301000c">D3dDeviceDesc.maxVertexCount</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b010032">D3DDD_TRANSFORMCAPS</A></B>
</DT><DD>The <A HREF="D3dDeviceDesc.htm#com_0003000603010009">D3dDeviceDesc.dtcTransformCaps</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b010033">D3DDD_TRICAPS</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010034">D3DDEB_BUFSIZE</A></B>
</DT><DD>The <A HREF="D3dExecuteBufferDesc.htm#com_0003000604010001">D3dExecuteBufferDesc.bufferSize</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b010035">D3DDEB_CAPS</A></B>
</DT><DD>The <A HREF="D3dExecuteBufferDesc.htm#com_0003000604010002">D3dExecuteBufferDesc.caps</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b010036">D3DDEB_LPDATA</A></B>
</DT><DD>The <B>D3dExecuteBufferDesc.data</B> field is valid. 

</DD><DT><B><A NAME="com_000300065b010037">D3DDEBCAPS_MEM</A></B>
</DT><DD>A logical OR of <A HREF="DirectXConstants.htm#com_000300065b010038">D3DDEBCAPS_SYSTEMMEMORY</A> and <A HREF="DirectXConstants.htm#com_000300065b010039">D3DDEBCAPS_VIDEOMEMORY</A>. 

</DD><DT><B><A NAME="com_000300065b010038">D3DDEBCAPS_SYSTEMMEMORY</A></B>
</DT><DD>The execute buffer data resides in system memory. 

</DD><DT><B><A NAME="com_000300065b010039">D3DDEBCAPS_VIDEOMEMORY</A></B>
</DT><DD>The execute buffer data resides in device memory. 

</DD><DT><B><A NAME="com_000300065b01003a">D3DDEVCAPS_EXECUTESYSTEMMEMORY</A></B>
</DT><DD>Device can use execute buffers from system memory. 

</DD><DT><B><A NAME="com_000300065b01003b">D3DDEVCAPS_EXECUTEVIDEOMEMORY</A></B>
</DT><DD>Device can use execute buffers from video memory. 

</DD><DT><B><A NAME="com_000300065b01003c">D3DDEVCAPS_FLOATTLVERTEX</A></B>
</DT><DD>Device accepts floating point for post-transform vertex data. 

</DD><DT><B><A NAME="com_000300065b01003d">D3DDEVCAPS_SORTDECREASINGZ</A></B>
</DT><DD>Device needs data sorted for decreasing depth. 

</DD><DT><B><A NAME="com_000300065b01003e">D3DDEVCAPS_SORTEXACT</A></B>
</DT><DD>Device needs data sorted exactly. 

</DD><DT><B><A NAME="com_000300065b01003f">D3DDEVCAPS_SORTINCREASINGZ</A></B>
</DT><DD>Device needs data sorted for increasing depth. 

</DD><DT><B><A NAME="com_000300065b010040">D3DDEVCAPS_TEXTURESYSTEMMEMORY</A></B>
</DT><DD>Device can retrieve textures from system memory. 

</DD><DT><B><A NAME="com_000300065b010041">D3DDEVCAPS_TEXTUREVIDEOMEMORY</A></B>
</DT><DD>Device can retrieves textures from device memory. 

</DD><DT><B><A NAME="com_000300065b010042">D3DDEVCAPS_TLVERTEXSYSTEMMEMORY</A></B>
</DT><DD>Device can use buffers from system memory for transformed and lit vertices. 

</DD><DT><B><A NAME="com_000300065b010043">D3DDEVCAPS_TLVERTEXVIDEOMEMORY</A></B>
</DT><DD>Device can use buffers from video memory for transformed and lit vertices. 

</DD><DT><B><A NAME="com_000300065b010044">D3DEXECUTE_CLIPPED</A></B>
</DT><DD>Clip any primitives in the buffer that are outside or partially outside the viewport. 

</DD><DT><B><A NAME="com_000300065b010045">D3DEXECUTE_UNCLIPPED</A></B>
</DT><DD>All primitives in the buffer are contained within the viewport. 

</DD><DT><B><A NAME="com_000300065b010046">D3DFDS_ALPHACMPCAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_0003000607020001">D3dFindDeviceSearch.alphaCmpCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b010047">D3DFDS_COLORMODEL</A></B>
</DT><DD>Match the color model specified in the <A HREF="D3dFindDeviceSearch.htm#com_0003000607020003">D3dFindDeviceSearch.dcmColorModel</A> field. 

</DD><DT><B><A NAME="com_000300065b010048">D3DFDS_DSTBLENDCAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_0003000607020004">D3dFindDeviceSearch.destBlendCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b010049">D3DFDS_GUID</A></B>
</DT><DD>Match the globally unique identifier (GUID). 

</DD><DT><B><A NAME="com_000300065b01004a">D3DFDS_HARDWARE</A></B>
</DT><DD>Match the hardware or software search specification given in the <A HREF="D3dFindDeviceSearch.htm#com_0003000607020006">D3dFindDeviceSearch.hardware</A> field. 

</DD><DT><B><A NAME="com_000300065b01004b">D3DFDS_LINES</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b01004c">D3DFDS_MISCCAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_0003000607020007">D3dFindDeviceSearch.miscCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b01004d">D3DFDS_RASTERCAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_0003000607020008">D3dFindDeviceSearch.rasterCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b01004e">D3DFDS_SHADECAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_0003000607020009">D3dFindDeviceSearch.shadeCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b01004f">D3DFDS_SRCBLENDCAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_000300060702000a">D3dFindDeviceSearch.srcBlendCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b010050">D3DFDS_TEXTUREADDRESSCAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_000300060702000d">D3dFindDeviceSearch.textureAddressCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b010051">D3DFDS_TEXTUREBLENDCAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_000300060702000e">D3dFindDeviceSearch.textureBlendCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b010052">D3DFDS_TEXTURECAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_000300060702000f">D3dFindDeviceSearch.textureCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b010053">D3DFDS_TEXTUREFILTERCAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_0003000607020010">D3dFindDeviceSearch.textureFilterCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b010054">D3DFDS_TRIANGLES</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010055">D3DFDS_ZCMPCAPS</A></B>
</DT><DD>Match the <A HREF="D3dFindDeviceSearch.htm#com_0003000607020011">D3dFindDeviceSearch.zCmpCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b010056">D3DFILL_POINT</A></B>
</DT><DD>Fill points. 

</DD><DT><B><A NAME="com_000300065b010057">D3DFILL_SOLID</A></B>
</DT><DD>Fill solid. 

</DD><DT><B><A NAME="com_000300065b010058">D3DFILL_WIREFRAME</A></B>
</DT><DD>Fill wire frames. 

</DD><DT><B><A NAME="com_000300065b010059">D3DFILTER_LINEAR</A></B>
</DT><DD>Weighted average of a 2-by-2 area of texels surrounding the desired pixel is used. This applies to both zooming in and zooming out. If either is supported, both zooming in and zooming out must be supported. 

</DD><DT><B><A NAME="com_000300065b01005a">D3DFILTER_LINEARMIPLINEAR</A></B>
</DT><DD>Similar to <A HREF="DirectXConstants.htm#com_000300065b01005c">D3DFILTER_MIPLINEAR</A>, but interpolates between the two nearest mipmaps. 

</DD><DT><B><A NAME="com_000300065b01005b">D3DFILTER_LINEARMIPNEAREST</A></B>
</DT><DD>Similar to <A HREF="DirectXConstants.htm#com_000300065b01005d">D3DFILTER_MIPNEAREST</A>, but interpolates between the two nearest mipmaps. 

</DD><DT><B><A NAME="com_000300065b01005c">D3DFILTER_MIPLINEAR</A></B>
</DT><DD>Similar to <A HREF="DirectXConstants.htm#com_000300065b010059">D3DFILTER_LINEAR</A>, but uses the appropriate mipmap for texel selection. 

</DD><DT><B><A NAME="com_000300065b01005d">D3DFILTER_MIPNEAREST</A></B>
</DT><DD>Similar to <A HREF="DirectXConstants.htm#com_000300065b01005e">D3DFILTER_NEAREST</A>, but uses the appropriate mipmap for texel selection. 

</DD><DT><B><A NAME="com_000300065b01005e">D3DFILTER_NEAREST</A></B>
</DT><DD>Texel with coordinates nearest to the desired pixel value is used. This applies to both zooming in and zooming out. If either zooming in or zooming out is supported, both must be supported. 

</DD><DT><B><A NAME="com_000300065b01005f">D3DFOG_EXP</A></B>
</DT><DD>The fog effect intensifies exponentially, according to the following formula: 

</DD><DT><B><A NAME="com_000300065b010060">D3DFOG_EXP2</A></B>
</DT><DD>The fog effect intensifies exponentially with the square of the distance. 

</DD><DT><B><A NAME="com_000300065b010061">D3DFOG_LINEAR</A></B>
</DT><DD>The fog effect intensifies linearly between the start and end points. 

</DD><DT><B><A NAME="com_000300065b010062">D3DFOG_NONE</A></B>
</DT><DD>No fog effect. 

</DD><DT><B><A NAME="com_000300065b010063">D3DLIGHT_DIRECTIONAL</A></B>
</DT><DD>Light is a directional source. 

</DD><DT><B><A NAME="com_000300065b010064">D3DLIGHT_GLSPOT</A></B>
</DT><DD>Light is a GL-style spotlight. 

</DD><DT><B><A NAME="com_000300065b010065">D3DLIGHT_PARALLELPOINT</A></B>
</DT><DD>Light is a parallel point source. 

</DD><DT><B><A NAME="com_000300065b010066">D3DLIGHT_POINT</A></B>
</DT><DD>Light is a point source. 

</DD><DT><B><A NAME="com_000300065b010067">D3DLIGHT_SPOT</A></B>
</DT><DD>Light is a spotlight source. 

</DD><DT><B><A NAME="com_000300065b010068">D3DLIGHTSTATE_AMBIENT</A></B>
</DT><DD>Set the color and intensity of the current ambient light. If an application specifies this value, it should not specify a light as a parameter. The default value is 0. 

</DD><DT><B><A NAME="com_000300065b010069">D3DLIGHTSTATE_COLORMODEL</A></B>
</DT><DD>One value of <B>D3DCOLOR_</B> type. The default value is <A HREF="DirectXConstants.htm#com_000300065b010025">D3DCOLOR_RGB</A>. 

</DD><DT><B><A NAME="com_000300065b01006a">D3DLIGHTSTATE_FOGDENSITY</A></B>
</DT><DD>Define the density setting for fog. The default value is 1.0. 

</DD><DT><B><A NAME="com_000300065b01006b">D3DLIGHTSTATE_FOGEND</A></B>
</DT><DD>Define the ending value for fog. The default value is 100.0. 

</DD><DT><B><A NAME="com_000300065b01006c">D3DLIGHTSTATE_FOGMODE</A></B>
</DT><DD>One value of <B>D3DFOG_</B> type. The default value is <A HREF="DirectXConstants.htm#com_000300065b010062">D3DFOG_NONE</A> . 

</DD><DT><B><A NAME="com_000300065b01006d">D3DLIGHTSTATE_FOGSTART</A></B>
</DT><DD>Define the starting value for fog. The default value is 1.0. 

</DD><DT><B><A NAME="com_000300065b01006e">D3DLIGHTSTATE_MATERIAL</A></B>
</DT><DD>Define the material that is lit and used to compute the final color and intensity values during rasterization. The default value is null. 

</DD><DT><B><A NAME="com_000300065b01006f">D3DOP_BRANCHFORWARD</A></B>
</DT><DD>Enable a branching mechanism within the execute buffer. 

</DD><DT><B><A NAME="com_000300065b010070">D3DOP_EXIT</A></B>
</DT><DD>Signal that the end of the list has been reached. 

</DD><DT><B><A NAME="com_000300065b010071">D3DOP_LINE</A></B>
</DT><DD>Send a line to the renderer. 

</DD><DT><B><A NAME="com_000300065b010072">D3DOP_MATRIXLOAD</A></B>
</DT><DD>Trigger a data transfer in the rendering engine. 

</DD><DT><B><A NAME="com_000300065b010073">D3DOP_MATRIXMULTIPLY</A></B>
</DT><DD>Trigger a data transfer in the rendering engine. 

</DD><DT><B><A NAME="com_000300065b010074">D3DOP_POINT</A></B>
</DT><DD>Send a point to the renderer. 

</DD><DT><B><A NAME="com_000300065b010075">D3DOP_PROCESSVERTICES</A></B>
</DT><DD>Set both lighting and transformations for vertices. 

</DD><DT><B><A NAME="com_000300065b010076">D3DOP_SETSTATUS</A></B>
</DT><DD>Reset the status of the execute buffer. 

</DD><DT><B><A NAME="com_000300065b010077">D3DOP_SPAN</A></B>
</DT><DD>Span a list of points with the same y-value. 

</DD><DT><B><A NAME="com_000300065b010078">D3DOP_STATELIGHT</A></B>
</DT><DD>Set the value of internal state variables in the rendering engine for the lighting module. Operand data is a variable token and the new value. The token identifies the internal state variable, and the new value is the value to which that variable should be set. 

</DD><DT><B><A NAME="com_000300065b010079">D3DOP_STATERENDER</A></B>
</DT><DD>Set the value of internal state variables in the rendering engine for the rendering module. Operand data is a variable token and the new value. The token identifies the internal state variable, and the new value is the value to which that variable should be set. 

</DD><DT><B><A NAME="com_000300065b01007a">D3DOP_STATETRANSFORM</A></B>
</DT><DD>Set the value of internal state variables in the rendering engine for the transformation module. Operand data is a variable token and the new value. The token identifies the internal state variable, and the new value is the value to which that variable should be set. 

</DD><DT><B><A NAME="com_000300065b01007b">D3DOP_TEXTURELOAD</A></B>
</DT><DD>Trigger a data transfer in the rendering engine. 

</DD><DT><B><A NAME="com_000300065b01007c">D3DOP_TRIANGLE</A></B>
</DT><DD>Send a triangle to the renderer. 

</DD><DT><B><A NAME="com_000300065b01007d">D3DPAL_FREE</A></B>
</DT><DD>The renderer may use this entry freely. 

</DD><DT><B><A NAME="com_000300065b01007e">D3DPAL_READONLY</A></B>
</DT><DD>The renderer may not set this entry. 

</DD><DT><B><A NAME="com_000300065b01007f">D3DPAL_RESERVED</A></B>
</DT><DD>The renderer may not use this entry. 

</DD><DT><B><A NAME="com_000300065b010080">D3DPBLENDCAPS_BOTHINVSRCALPHA</A></B>
</DT><DD>The destination blend selection is overridden when the source blend factor is (1-As, 1-As, 1-As, 1-As) and destination blend factor is (As, As, As, As). 

</DD><DT><B><A NAME="com_000300065b010081">D3DPBLENDCAPS_BOTHSRCALPHA</A></B>
</DT><DD>The destination blend selection is overridden when the source blend factor is (As, As, As, As) and destination blend factor is (1-As, 1-As, 1-As, 1-As). 

</DD><DT><B><A NAME="com_000300065b010082">D3DPBLENDCAPS_DESTALPHA</A></B>
</DT><DD>Blend factor is (Ad, Ad, Ad, Ad). 

</DD><DT><B><A NAME="com_000300065b010083">D3DPBLENDCAPS_DESTCOLOR</A></B>
</DT><DD>Blend factor is (Rd, Gd, Bd, Ad). 

</DD><DT><B><A NAME="com_000300065b010084">D3DPBLENDCAPS_INVDESTALPHA</A></B>
</DT><DD>Blend factor is (1-Ad, 1-Ad, 1-Ad, 1-Ad). 

</DD><DT><B><A NAME="com_000300065b010085">D3DPBLENDCAPS_INVDESTCOLOR</A></B>
</DT><DD>Blend factor is (1-Rd, 1-Gd, 1-Bd, 1-Ad). 

</DD><DT><B><A NAME="com_000300065b010086">D3DPBLENDCAPS_INVSRCALPHA</A></B>
</DT><DD>Blend factor is (1-As, 1-As, 1-As, 1-As). 

</DD><DT><B><A NAME="com_000300065b010087">D3DPBLENDCAPS_INVSRCCOLOR</A></B>
</DT><DD>Blend factor is (1-Rd, 1-Gd, 1-Bd, 1-Ad). 

</DD><DT><B><A NAME="com_000300065b010088">D3DPBLENDCAPS_ONE</A></B>
</DT><DD>Blend factor is (1, 1, 1, 1). 

</DD><DT><B><A NAME="com_000300065b010089">D3DPBLENDCAPS_SRCALPHA</A></B>
</DT><DD>Blend factor is (As, As, As, As). 

</DD><DT><B><A NAME="com_000300065b01008a">D3DPBLENDCAPS_SRCALPHASAT</A></B>
</DT><DD>Blend factor is (f, f, f, 1); f = min(As, 1-Ad). 

</DD><DT><B><A NAME="com_000300065b01008b">D3DPBLENDCAPS_SRCCOLOR</A></B>
</DT><DD>Blend factor is (Rs, Gs, Bs, As). 

</DD><DT><B><A NAME="com_000300065b01008c">D3DPBLENDCAPS_ZERO</A></B>
</DT><DD>Blend factor is (0, 0, 0, 0). 

</DD><DT><B><A NAME="com_000300065b01008d">D3DPCMPCAPS_ALWAYS</A></B>
</DT><DD>Always pass the z-test. 

</DD><DT><B><A NAME="com_000300065b01008e">D3DPCMPCAPS_EQUAL</A></B>
</DT><DD>Pass the z-test if the new z-value equals the current z-value. 

</DD><DT><B><A NAME="com_000300065b01008f">D3DPCMPCAPS_GREATER</A></B>
</DT><DD>Pass the z-test if the new z-value is greater than the current z-value. 

</DD><DT><B><A NAME="com_000300065b010090">D3DPCMPCAPS_GREATEREQUAL</A></B>
</DT><DD>Pass the z-test if the new z-value is greater than or equal to the current z-value. 

</DD><DT><B><A NAME="com_000300065b010091">D3DPCMPCAPS_LESS</A></B>
</DT><DD>Pass the z-test if the new z-value is less than the current z-value. 

</DD><DT><B><A NAME="com_000300065b010092">D3DPCMPCAPS_LESSEQUAL</A></B>
</DT><DD>Pass the z-test if the new z-value is less than or equal to the current z-value. 

</DD><DT><B><A NAME="com_000300065b010093">D3DPCMPCAPS_NEVER</A></B>
</DT><DD>Always fail the z-test. 

</DD><DT><B><A NAME="com_000300065b010094">D3DPCMPCAPS_NOTEQUAL</A></B>
</DT><DD>Pass the z-test if the new z-value does not equal the current z-value. 

</DD><DT><B><A NAME="com_000300065b010095">D3DPMISCCAPS_CONFORMANT</A></B>
</DT><DD>The device conforms to the OpenGL standard. 

</DD><DT><B><A NAME="com_000300065b010096">D3DPMISCCAPS_CULLCCW</A></B>
</DT><DD>The driver supports counterclockwise culling through the <A HREF="DirectXConstants.htm#com_000300065b0100dc">D3DRENDERSTATE_CULLMODE</A> state. (This applies only to triangle primitives.) This corresponds to the <A HREF="DirectXConstants.htm#com_000300065b010026">D3DCULL_CCW</A> value. 

</DD><DT><B><A NAME="com_000300065b010097">D3DPMISCCAPS_CULLCW</A></B>
</DT><DD>The driver supports clockwise triangle culling through the <A HREF="DirectXConstants.htm#com_000300065b0100dc">D3DRENDERSTATE_CULLMODE</A> state. (This applies only to triangle primitives.) This corresponds to the <A HREF="DirectXConstants.htm#com_000300065b010027">D3DCULL_CW</A> value. 

</DD><DT><B><A NAME="com_000300065b010098">D3DPMISCCAPS_CULLNONE</A></B>
</DT><DD>The driver does not perform triangle culling. This corresponds to the <A HREF="DirectXConstants.htm#com_000300065b010028">D3DCULL_NONE</A> value. 

</DD><DT><B><A NAME="com_000300065b010099">D3DPMISCCAPS_LINEPATTERNREP</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b01009a">D3DPMISCCAPS_MASKPLANES</A></B>
</DT><DD>The device can perform a bitmask of color planes. 

</DD><DT><B><A NAME="com_000300065b01009b">D3DPMISCCAPS_MASKZ</A></B>
</DT><DD>The device can enable and disable modification of the z-buffer on pixel operations. 

</DD><DT><B><A NAME="com_000300065b01009c">D3DPRASTERCAPS_DITHER</A></B>
</DT><DD>The device can dither to improve color resolution. 

</DD><DT><B><A NAME="com_000300065b01009d">D3DPRASTERCAPS_FOGTABLE</A></B>
</DT><DD>The device calculates the fog value by referring to a lookup table containing fog values that are indexed to the depth of a given pixel. 

</DD><DT><B><A NAME="com_000300065b01009e">D3DPRASTERCAPS_FOGVERTEX</A></B>
</DT><DD>The device calculates the fog value during the lighting operation and places the value into the alpha component of the <B>D3DCOLOR_</B> value given for the specular color in the <A HREF="Service.htm#com_0003001002030009">D3dLightData.out</A> field. It then interpolates the fog value during rasterization. 

</DD><DT><B><A NAME="com_000300065b01009f">D3DPRASTERCAPS_PAT</A></B>
</DT><DD>The driver can perform patterned drawing (lines or fills with <A HREF="DirectXConstants.htm#com_000300065b0100e7">D3DRENDERSTATE_LINEPATTERN</A> or one of the <B>D3DRENDERSTATE_STIPPLEPATTERN</B> render states) for the primitive being queried. 

</DD><DT><B><A NAME="com_000300065b0100a0">D3DPRASTERCAPS_ROP2</A></B>
</DT><DD>The device can support raster operations other than <B>R2_COPYPEN</B>. 

</DD><DT><B><A NAME="com_000300065b0100a1">D3DPRASTERCAPS_STIPPLE</A></B>
</DT><DD>The device can stipple polygons to simulate translucency. 

</DD><DT><B><A NAME="com_000300065b0100a2">D3DPRASTERCAPS_SUBPIXEL</A></B>
</DT><DD>The device performs subpixel placement of color, texture, and z data, rather than working with the nearest integer pixel coordinate. This helps avoid bleed-through due to z-imprecision, and jitter of color and texture values for pixels. Note that there is no corresponding state that can be enabled and disabled. The device either performs subpixel placement or it does not, and this bit is present only so that the Microsoft&#174; Direct3D&#153; client will be better able to determine what the rendering quality will be. 

</DD><DT><B><A NAME="com_000300065b0100a3">D3DPRASTERCAPS_SUBPIXELX</A></B>
</DT><DD>The device is subpixel accurate along the x-axis only and is clamped to an integer y-axis scan line. For information about subpixel accuracy, see <A HREF="DirectXConstants.htm#com_000300065b0100a2">D3DPRASTERCAPS_SUBPIXEL</A> . 

</DD><DT><B><A NAME="com_000300065b0100a4">D3DPRASTERCAPS_XOR</A></B>
</DT><DD>The device can support XOR operations. 

</DD><DT><B><A NAME="com_000300065b0100a5">D3DPRASTERCAPS_ZTEST</A></B>
</DT><DD>The device can perform z-test operations. This effectively renders a primitive and indicates whether any z-pixels would have been rendered. 

</DD><DT><B><A NAME="com_000300065b0100a6">D3DPROCESSVERTICES_COPY</A></B>
</DT><DD>Vertices should be copied to the driver, because they have always been transformed and lit. If all the vertices in the execute buffer can be copied, the driver does not need to do the work of processing the vertices; the result is an improvement in performance. 

</DD><DT><B><A NAME="com_000300065b0100a7">D3DPROCESSVERTICES_NOCOLOR</A></B>
</DT><DD>Vertices should not be colored. 

</DD><DT><B><A NAME="com_000300065b0100a8">D3DPROCESSVERTICES_OPMASK</A></B>
</DT><DD>Specifies a bitmask of the other flags in the <A HREF="D3dDeviceDesc.htm#com_000300060301000a">flags</A> member, exclusive of <A HREF="DirectXConstants.htm#com_000300065b0100a7">D3DPROCESSVERTICES_NOCOLOR</A> and <A HREF="DirectXConstants.htm#com_000300065b0100ab">D3DPROCESSVERTICES_UPDATEEXTENTS</A>. 

</DD><DT><B><A NAME="com_000300065b0100a9">D3DPROCESSVERTICES_TRANSFORM</A></B>
</DT><DD>Vertices should be transformed. 

</DD><DT><B><A NAME="com_000300065b0100aa">D3DPROCESSVERTICES_TRANSFORMLIGHT</A></B>
</DT><DD>Vertices should be transformed and lit. 

</DD><DT><B><A NAME="com_000300065b0100ab">D3DPROCESSVERTICES_UPDATEEXTENTS</A></B>
</DT><DD>Extents of all transformed vertices should be updated. This information is returned in the <A HREF="D3dExecuteData.htm#com_0003000605010008">D3dStatus.x1</A>, <A HREF="D3dExecuteData.htm#com_000300060501000a">D3dStatus.y1</A>, <A HREF="D3dExecuteData.htm#com_0003000605010009">D3dStatus.x2</A>, and <A HREF="D3dExecuteData.htm#com_000300060501000b">D3dStatus.y2</A> fields. 

</DD><DT><B><A NAME="com_000300065b0100ac">D3DPSHADECAPS_ALPHAFLATBLEND</A></B>
</DT><DD>Device can support an alpha component for flat blended transparency (the <A HREF="DirectXConstants.htm#com_000300065b010179">D3DSHADE_FLAT</A> state). 

</DD><DT><B><A NAME="com_000300065b0100ad">D3DPSHADECAPS_ALPHAFLATSTIPPLED</A></B>
</DT><DD>Device can support an alpha component for flat stippled transparency (the <A HREF="DirectXConstants.htm#com_000300065b010179">D3DSHADE_FLAT</A> state). In these modes, the alpha color component for a primitive is provided as part of the color for the first vertex of the primitive. 

</DD><DT><B><A NAME="com_000300065b0100ae">D3DPSHADECAPS_ALPHAGOURAUDBLEND</A></B>
</DT><DD>Device can support an alpha component for Gouraud blended transparency (the <A HREF="DirectXConstants.htm#com_000300065b01017a">D3DSHADE_GOURAUD</A> state). 

</DD><DT><B><A NAME="com_000300065b0100af">D3DPSHADECAPS_ALPHAGOURAUDSTIPPLED</A></B>
</DT><DD>Device can support an alpha component for Gouraud stippled transparency (the <A HREF="DirectXConstants.htm#com_000300065b01017a">D3DSHADE_GOURAUD</A> state). In these modes, the alpha color component for a primitive is provided at vertices and interpolated across a face along with the other color components. 

</DD><DT><B><A NAME="com_000300065b0100b0">D3DPSHADECAPS_ALPHAPHONGBLEND</A></B>
</DT><DD>Device can support an alpha component for Phong blended transparency (the <A HREF="DirectXConstants.htm#com_000300065b01017b">D3DSHADE_PHONG</A> state). 

</DD><DT><B><A NAME="com_000300065b0100b1">D3DPSHADECAPS_ALPHAPHONGSTIPPLED</A></B>
</DT><DD>Device can support an alpha component for Phong stippled transparency (the <A HREF="DirectXConstants.htm#com_000300065b01017b">D3DSHADE_PHONG</A> state). In these modes, vertex parameters are reevaluated on a per-pixel basis, applying lighting effects for the red, green, and blue color components. Phong shading is not currently supported. 

</DD><DT><B><A NAME="com_000300065b0100b2">D3DPSHADECAPS_COLORFLATMONO</A></B>
</DT><DD>Device can support colored flat shading in the <A HREF="DirectXConstants.htm#com_000300065b010024">D3DCOLOR_MONO</A> color model. 

</DD><DT><B><A NAME="com_000300065b0100b3">D3DPSHADECAPS_COLORFLATRGB</A></B>
</DT><DD>Device can support colored flat shading in the <A HREF="DirectXConstants.htm#com_000300065b010025">D3DCOLOR_RGB</A> color model. In these modes, the color component for a primitive is provided as part of the color for the first vertex of the primitive. In monochromatic lighting modes, only the blue component of the color is interpolated. In RGB lighting modes, the red, green, and blue components are interpolated. 

</DD><DT><B><A NAME="com_000300065b0100b4">D3DPSHADECAPS_COLORGOURAUDMONO</A></B>
</DT><DD>Device can support colored Gouraud shading in the <A HREF="DirectXConstants.htm#com_000300065b010024">D3DCOLOR_MONO</A>color model. 

</DD><DT><B><A NAME="com_000300065b0100b5">D3DPSHADECAPS_COLORGOURAUDRGB</A></B>
</DT><DD>Device can support colored Gouraud shading in the <A HREF="DirectXConstants.htm#com_000300065b010025">D3DCOLOR_RGB</A> color model. In these modes, the color component for a primitive is provided at vertices and interpolated across a face along with the other color components. In monochromatic lighting modes, only the blue component of the color is interpolated. In RGB lighting modes, the red, green, and blue components are interpolated. 

</DD><DT><B><A NAME="com_000300065b0100b6">D3DPSHADECAPS_COLORPHONGMONO</A></B>
</DT><DD>Device can support colored Phong shading in the <A HREF="DirectXConstants.htm#com_000300065b010024">D3DCOLOR_MONO</A> color model. 

</DD><DT><B><A NAME="com_000300065b0100b7">D3DPSHADECAPS_COLORPHONGRGB</A></B>
</DT><DD>Device can support colored Phong shading in the <A HREF="DirectXConstants.htm#com_000300065b010025">D3DCOLOR_RGB</A> color model. In these modes, vertex parameters are reevaluated on a per-pixel basis. Lighting effects are applied for the red, green, and blue color components in RGB mode, and for the blue component only for monochromatic mode. Phong shading is not currently supported. 

</DD><DT><B><A NAME="com_000300065b0100b8">D3DPSHADECAPS_FOGFLAT</A></B>
</DT><DD>Device can support fog in the flat shading model. 

</DD><DT><B><A NAME="com_000300065b0100b9">D3DPSHADECAPS_FOGGOURAUD</A></B>
</DT><DD>Device can support fog in the Gouraud shading model. 

</DD><DT><B><A NAME="com_000300065b0100ba">D3DPSHADECAPS_FOGPHONG</A></B>
</DT><DD>Device can support fog in the Phong shading model. Phong shading is not currently supported. 

</DD><DT><B><A NAME="com_000300065b0100bb">D3DPSHADECAPS_SPECULARFLATMONO</A></B>
</DT><DD>Device can support specular highlights in flat shading in the <A HREF="DirectXConstants.htm#com_000300065b010024">D3DCOLOR_MONO</A> color model. 

</DD><DT><B><A NAME="com_000300065b0100bc">D3DPSHADECAPS_SPECULARFLATRGB</A></B>
</DT><DD>Device can support specular highlights in flat shading in the <A HREF="DirectXConstants.htm#com_000300065b010025">D3DCOLOR_RGB</A> color model. 

</DD><DT><B><A NAME="com_000300065b0100bd">D3DPSHADECAPS_SPECULARGOURAUDMONO</A></B>
</DT><DD>Device can support specular highlights in Gouraud shading in the <A HREF="DirectXConstants.htm#com_000300065b010024">D3DCOLOR_MONO</A> color model. 

</DD><DT><B><A NAME="com_000300065b0100be">D3DPSHADECAPS_SPECULARGOURAUDRGB</A></B>
</DT><DD>Device can support specular highlights in Gouraud shading in the <A HREF="DirectXConstants.htm#com_000300065b010025">D3DCOLOR_RGB</A> color model. 

</DD><DT><B><A NAME="com_000300065b0100bf">D3DPSHADECAPS_SPECULARPHONGMONO</A></B>
</DT><DD>Device can support specular highlights in Phong shading in the <A HREF="DirectXConstants.htm#com_000300065b010024">D3DCOLOR_MONO</A> color model. Phong shading is not currently supported. 

</DD><DT><B><A NAME="com_000300065b0100c0">D3DPSHADECAPS_SPECULARPHONGRGB</A></B>
</DT><DD>Device can support specular highlights in Phong shading in the <A HREF="DirectXConstants.htm#com_000300065b010025">D3DCOLOR_RGB</A> color model. Phong shading is not currently supported. 

</DD><DT><B><A NAME="com_000300065b0100c1">D3DPTADDRESSCAPS_CLAMP</A></B>
</DT><DD>Device can clamp textures to addresses. 

</DD><DT><B><A NAME="com_000300065b0100c2">D3DPTADDRESSCAPS_MIRROR</A></B>
</DT><DD>Device can mirror textures to addresses. 

</DD><DT><B><A NAME="com_000300065b0100c3">D3DPTADDRESSCAPS_WRAP</A></B>
</DT><DD>Device can wrap textures to addresses. 

</DD><DT><B><A NAME="com_000300065b0100c4">D3DPTBLENDCAPS_COPY</A></B>
</DT><DD>Copy texture-blending mode (<A HREF="DirectXConstants.htm#com_000300065b01019c">D3DTBLEND_COPY</A> ) is supported. 

</DD><DT><B><A NAME="com_000300065b0100c5">D3DPTBLENDCAPS_DECAL</A></B>
</DT><DD>Decal texture-blending mode (<A HREF="DirectXConstants.htm#com_000300065b01019d">D3DTBLEND_DECAL</A> ) is supported. 

</DD><DT><B><A NAME="com_000300065b0100c6">D3DPTBLENDCAPS_DECALALPHA</A></B>
</DT><DD>Decal-alpha texture-blending mode (<A HREF="DirectXConstants.htm#com_000300065b01019e">D3DTBLEND_DECALALPHA</A> ) is supported. 

</DD><DT><B><A NAME="com_000300065b0100c7">D3DPTBLENDCAPS_DECALMASK</A></B>
</DT><DD>Decal-mask texture-blending mode (<A HREF="DirectXConstants.htm#com_000300065b01019f">D3DTBLEND_DECALMASK</A> ) is supported. 

</DD><DT><B><A NAME="com_000300065b0100c8">D3DPTBLENDCAPS_MODULATE</A></B>
</DT><DD>Modulate texture-blending mode (<A HREF="DirectXConstants.htm#com_000300065b0101a0">D3DTBLEND_MODULATE</A> ) is supported. 

</DD><DT><B><A NAME="com_000300065b0100c9">D3DPTBLENDCAPS_MODULATEALPHA</A></B>
</DT><DD>Modulate-alpha texture-blending mode (<A HREF="DirectXConstants.htm#com_000300065b0101a1">D3DTBLEND_MODULATEALPHA</A> ) is supported. 

</DD><DT><B><A NAME="com_000300065b0100ca">D3DPTBLENDCAPS_MODULATEMASK</A></B>
</DT><DD>Modulate-mask texture-blending mode (<A HREF="DirectXConstants.htm#com_000300065b0101a2">D3DTBLEND_MODULATEMASK</A> ) is supported. 

</DD><DT><B><A NAME="com_000300065b0100cb">D3DPTEXTURECAPS_ALPHA</A></B>
</DT><DD>RGBA textures are supported. If this capability is not set, only RGB textures are supported in those modes. 

</DD><DT><B><A NAME="com_000300065b0100cc">D3DPTEXTURECAPS_BORDER</A></B>
</DT><DD>Texture mapping along borders is supported. 

</DD><DT><B><A NAME="com_000300065b0100cd">D3DPTEXTURECAPS_PERSPECTIVE</A></B>
</DT><DD>Perspective correction is supported. 

</DD><DT><B><A NAME="com_000300065b0100ce">D3DPTEXTURECAPS_POW2</A></B>
</DT><DD>All non-mipmapped textures must have widths and heights specified as powers of two if this flag is set. (Note that all mipmapped textures must always have dimensions that are powers of two.) 

</DD><DT><B><A NAME="com_000300065b0100cf">D3DPTEXTURECAPS_SQUAREONLY</A></B>
</DT><DD>All textures must be square. 

</DD><DT><B><A NAME="com_000300065b0100d0">D3DPTEXTURECAPS_TRANSPARENCY</A></B>
</DT><DD>Texture transparency is supported. (Only those texels that are not the current transparent color are drawn.) 

</DD><DT><B><A NAME="com_000300065b0100d1">D3DPTFILTERCAPS_LINEAR</A></B>
</DT><DD>A weighted average of a 2-by-2 area of texels surrounding the desired pixel is used. This applies to both zooming in and zooming out. If either is supported, both zooming in and zooming out must be supported. 

</DD><DT><B><A NAME="com_000300065b0100d2">D3DPTFILTERCAPS_LINEARMIPLINEAR</A></B>
</DT><DD>Interpolate between the two nearest mipmaps. 

</DD><DT><B><A NAME="com_000300065b0100d3">D3DPTFILTERCAPS_LINEARMIPNEAREST</A></B>
</DT><DD>Interpolate between the two nearest mipmaps. 

</DD><DT><B><A NAME="com_000300065b0100d4">D3DPTFILTERCAPS_MIPLINEAR</A></B>
</DT><DD>Use the appropriate mipmap for texel selection. 

</DD><DT><B><A NAME="com_000300065b0100d5">D3DPTFILTERCAPS_MIPNEAREST</A></B>
</DT><DD>Use the appropriate mipmap for texel selection. 

</DD><DT><B><A NAME="com_000300065b0100d6">D3DPTFILTERCAPS_NEAREST</A></B>
</DT><DD>The texel with coordinates nearest to the desired pixel value is used. This applies to both zooming in and zooming out. If either is supported, both zooming in and zooming out must be supported. 

</DD><DT><B><A NAME="com_000300065b0100d7">D3DRENDERSTATE_ALPHAFUNC</A></B>
</DT><DD>One <B>D3DCMP_</B> value. The default value is <A HREF="DirectXConstants.htm#com_000300065b01001c">D3DCMP_ALWAYS</A>. This field enables an application to accept or reject a pixel based on its alpha value. 

</DD><DT><B><A NAME="com_000300065b0100d8">D3DRENDERSTATE_ALPHAREF</A></B>
</DT><DD>Value specifying a reference alpha value against which pixels are tested when alpha-testing is enabled. The default value is 0. 

</DD><DT><B><A NAME="com_000300065b0100d9">D3DRENDERSTATE_ALPHATESTENABLE</A></B>
</DT><DD>This member enables applications to turn off the tests that otherwise would accept or reject a pixel based on its alpha value. Set to TRUE to enable alpha tests. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b0100da">D3DRENDERSTATE_ANTIALIAS</A></B>
</DT><DD>Anti-aliasing primitive edges. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b0100db">D3DRENDERSTATE_BLENDENABLE</A></B>
</DT><DD>TRUE to enable alpha blending. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b0100dc">D3DRENDERSTATE_CULLMODE</A></B>
</DT><DD>One <B>D3DCULL_</B> value. Software renderers have a fixed culling order and do not support changing the culling mode. The default value is <A HREF="DirectXConstants.htm#com_000300065b010026">D3DCULL_CCW</A>. 

</DD><DT><B><A NAME="com_000300065b0100dd">D3DRENDERSTATE_DESTBLEND</A></B>
</DT><DD>One <B>D3DBLEND_</B> value. The default value is <A HREF="DirectXConstants.htm#com_000300065b01000d">D3DBLEND_ZERO</A>. 

</DD><DT><B><A NAME="com_000300065b0100de">D3DRENDERSTATE_DITHERENABLE</A></B>
</DT><DD>TRUE to enable dithering. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b0100df">D3DRENDERSTATE_FILLMODE</A></B>
</DT><DD>One or more <B>D3DFILL_</B> values. The default value is <A HREF="DirectXConstants.htm#com_000300065b010057">D3DFILL_SOLID</A>. 

</DD><DT><B><A NAME="com_000300065b0100e0">D3DRENDERSTATE_FOGCOLOR</A></B>
</DT><DD>A <B>D3DCOLOR_</B> value. The default value is 0. 

</DD><DT><B><A NAME="com_000300065b0100e1">D3DRENDERSTATE_FOGENABLE</A></B>
</DT><DD>TRUE to enable fog. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b0100e2">D3DRENDERSTATE_FOGTABLEDENSITY</A></B>
</DT><DD>Sets the maximum fog density for linear fog mode. This value can range from 0 to 1. 

</DD><DT><B><A NAME="com_000300065b0100e3">D3DRENDERSTATE_FOGTABLEEND</A></B>
</DT><DD>Fog table end. This is the position at which fog effects reach their maximum density for linear fog mode. 

</DD><DT><B><A NAME="com_000300065b0100e4">D3DRENDERSTATE_FOGTABLEMODE</A></B>
</DT><DD>A <B>D3DFOG_</B> value. The default value is <A HREF="DirectXConstants.htm#com_000300065b010062">D3DFOG_NONE</A>. 

</DD><DT><B><A NAME="com_000300065b0100e5">D3DRENDERSTATE_FOGTABLESTART</A></B>
</DT><DD>Fog table start. This is the position at which fog effects begin for linear fog mode. 

</DD><DT><B><A NAME="com_000300065b0100e6">D3DRENDERSTATE_LASTPIXEL</A></B>
</DT><DD>TRUE to prevent drawing the last pixel in a line. The default value is TRUE. 

</DD><DT><B><A NAME="com_000300065b0100e7">D3DRENDERSTATE_LINEPATTERN</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b0100e8">D3DRENDERSTATE_MONOENABLE</A></B>
</DT><DD>TRUE to enable monochromatic rendering. The default value is FALSE. If the device does not support RGB rendering, the value will be TRUE. Applications can check whether the device supports RGB rendering by using the <A HREF="D3dDeviceDesc.htm#com_0003000603010002">D3dDeviceDesc.dcmColorModel</A> field. 

</DD><DT><B><A NAME="com_000300065b0100e9">D3DRENDERSTATE_PLANEMASK</A></B>
</DT><DD>Physical plane mask. The default value is 0. 

</DD><DT><B><A NAME="com_000300065b0100ea">D3DRENDERSTATE_ROP2</A></B>
</DT><DD>One of the 16 ROP2 binary raster operations that specify how the supplied pixels are combined with the pixels of the display surface. Applications can use the <A HREF="DirectXConstants.htm#com_000300065b0100a0">D3DPRASTERCAPS_ROP2</A> flag in the <A HREF="D3dFindDeviceSearch.htm#com_0003000607020008">D3dFindDeviceSearch.rasterCaps</A> field to determine whether additional raster operations are supported. The default value is R2_COPYPEN. 

</DD><DT><B><A NAME="com_000300065b0100eb">D3DRENDERSTATE_SHADEMODE</A></B>
</DT><DD>One or more <B>D3DSHADE_</B> values. The default value is <A HREF="DirectXConstants.htm#com_000300065b01017a">D3DSHADE_GOURAUD</A> . 

</DD><DT><B><A NAME="com_000300065b0100ec">D3DRENDERSTATE_SPECULARENABLE</A></B>
</DT><DD>TRUE to enable specular. The default value is TRUE. 

</DD><DT><B><A NAME="com_000300065b0100ed">D3DRENDERSTATE_SRCBLEND</A></B>
</DT><DD>One <B>D3DBLEND_</B> value. The default value is <A HREF="DirectXConstants.htm#com_000300065b010009">D3DBLEND_ONE</A> . 

</DD><DT><B><A NAME="com_000300065b0100ee">D3DRENDERSTATE_STIPPLEDALPHA</A></B>
</DT><DD>TRUE to enable stippled alpha. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b0100ef">D3DRENDERSTATE_STIPPLEENABLE</A></B>
</DT><DD>Enables stippling in the device driver. When stippled alpha is enabled, it must override the current stipple pattern. When stippled alpha is disabled, the stipple pattern must be returned. 

</DD><DT><B><A NAME="com_000300065b0100f0">D3DRENDERSTATE_STIPPLEPATTERN00</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100f1">D3DRENDERSTATE_STIPPLEPATTERN01</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100f2">D3DRENDERSTATE_STIPPLEPATTERN02</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100f3">D3DRENDERSTATE_STIPPLEPATTERN03</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100f4">D3DRENDERSTATE_STIPPLEPATTERN04</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100f5">D3DRENDERSTATE_STIPPLEPATTERN05</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100f6">D3DRENDERSTATE_STIPPLEPATTERN06</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100f7">D3DRENDERSTATE_STIPPLEPATTERN07</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100f8">D3DRENDERSTATE_STIPPLEPATTERN08</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100f9">D3DRENDERSTATE_STIPPLEPATTERN09</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100fa">D3DRENDERSTATE_STIPPLEPATTERN10</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100fb">D3DRENDERSTATE_STIPPLEPATTERN11</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100fc">D3DRENDERSTATE_STIPPLEPATTERN12</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100fd">D3DRENDERSTATE_STIPPLEPATTERN13</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100fe">D3DRENDERSTATE_STIPPLEPATTERN14</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b0100ff">D3DRENDERSTATE_STIPPLEPATTERN15</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010101">D3DRENDERSTATE_STIPPLEPATTERN16</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010102">D3DRENDERSTATE_STIPPLEPATTERN17</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010103">D3DRENDERSTATE_STIPPLEPATTERN18</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010104">D3DRENDERSTATE_STIPPLEPATTERN19</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010105">D3DRENDERSTATE_STIPPLEPATTERN20</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010106">D3DRENDERSTATE_STIPPLEPATTERN21</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010107">D3DRENDERSTATE_STIPPLEPATTERN22</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010108">D3DRENDERSTATE_STIPPLEPATTERN23</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010109">D3DRENDERSTATE_STIPPLEPATTERN24</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b01010a">D3DRENDERSTATE_STIPPLEPATTERN25</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b01010b">D3DRENDERSTATE_STIPPLEPATTERN26</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b01010c">D3DRENDERSTATE_STIPPLEPATTERN27</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b01010d">D3DRENDERSTATE_STIPPLEPATTERN28</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b01010e">D3DRENDERSTATE_STIPPLEPATTERN29</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b01010f">D3DRENDERSTATE_STIPPLEPATTERN30</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010110">D3DRENDERSTATE_STIPPLEPATTERN31</A></B>
</DT><DD>Stipple pattern. Each render state applies to a separate line of the stipple pattern. 

</DD><DT><B><A NAME="com_000300065b010111">D3DRENDERSTATE_SUBPIXEL</A></B>
</DT><DD>TRUE to enable subpixel correction. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b010112">D3DRENDERSTATE_SUBPIXELX</A></B>
</DT><DD>TRUE to enable correction in x-values only. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b010113">D3DRENDERSTATE_TEXTUREADDRESS</A></B>
</DT><DD>One <B>D3DTADDRESS_</B> value. The default value is <A HREF="DirectXConstants.htm#com_000300065b01019b">D3DTADDRESS_WRAP</A> . 

</DD><DT><B><A NAME="com_000300065b010114">D3DRENDERSTATE_TEXTUREHANDLE</A></B>
</DT><DD>Texture handle. The default value is null. 

</DD><DT><B><A NAME="com_000300065b010115">D3DRENDERSTATE_TEXTUREMAG</A></B>
</DT><DD>One <B>D3DFILTER_</B> value. The default value is <A HREF="DirectXConstants.htm#com_000300065b01005e">D3DFILTER_NEAREST</A> . 

</DD><DT><B><A NAME="com_000300065b010116">D3DRENDERSTATE_TEXTUREMAPBLEND</A></B>
</DT><DD>One <B>D3DTBLEND_</B> value. The default value is <A HREF="DirectXConstants.htm#com_000300065b0101a0">D3DTBLEND_MODULATE</A> . 

</DD><DT><B><A NAME="com_000300065b010117">D3DRENDERSTATE_TEXTUREMIN</A></B>
</DT><DD>One <B>D3DFILTER_</B> value. The default value is <A HREF="DirectXConstants.htm#com_000300065b01005e">D3DFILTER_NEAREST</A>. 

</DD><DT><B><A NAME="com_000300065b010118">D3DRENDERSTATE_TEXTUREPERSPECTIVE</A></B>
</DT><DD>TRUE for perspective correction. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b010119">D3DRENDERSTATE_WRAPU</A></B>
</DT><DD>TRUE for wrapping in u-direction. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b01011a">D3DRENDERSTATE_WRAPV</A></B>
</DT><DD>TRUE for wrapping in v-direction. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b01011b">D3DRENDERSTATE_ZENABLE</A></B>
</DT><DD>TRUE to enable the z-buffer comparison test when writing to the frame buffer. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b01011c">D3DRENDERSTATE_ZFUNC</A></B>
</DT><DD>One <B>D3DCMP_</B> value. This field enables an application to accept or reject a pixel based on its distance from the camera. The default value is <A HREF="DirectXConstants.htm#com_000300065b010021">D3DCMP_LESSEQUAL</A> . 

</DD><DT><B><A NAME="com_000300065b01011d">D3DRENDERSTATE_ZVISIBLE</A></B>
</DT><DD>TRUE to enable z-checking. Z-checking is a culling technique in which a polygon representing the screen space of an entire group of polygons is tested against the z-buffer to discover whether any of the polygons should be drawn. The default value is FALSE. 

</DD><DT><B><A NAME="com_000300065b01011e">D3DRENDERSTATE_ZWRITEENABLE</A></B>
</DT><DD>TRUE to enable z-writes. This member enables an application to prevent the system from updating the z-buffer with new z-values. The default value is TRUE. 

</DD><DT><B><A NAME="com_000300065b01011f">D3DRMANIMATION_CLOSED</A></B>
</DT><DD>Animation plays continually, looping back to the beginning whenever it reaches the end. In a closed animation, the last key in the animation should be a repeat of the first. This repeated key is used to indicate the time difference between the last and first keys in the looping animation. 

</DD><DT><B><A NAME="com_000300065b010120">D3DRMANIMATION_LINEARPOSITION</A></B>
</DT><DD>The animation's position is set linearly. 

</DD><DT><B><A NAME="com_000300065b010121">D3DRMANIMATION_OPEN</A></B>
</DT><DD>The animation plays once and stops. 

</DD><DT><B><A NAME="com_000300065b010122">D3DRMANIMATION_POSITION</A></B>
</DT><DD>The animation's position matrix overwrites any transformation matrices that could be set by other methods. 

</DD><DT><B><A NAME="com_000300065b010123">D3DRMANIMATION_SCALEANDROTATION</A></B>
</DT><DD>The animation's scale and rotation matrix overwrites any transformation matrices that could be set by other methods. 

</DD><DT><B><A NAME="com_000300065b010124">D3DRMANIMATION_SPLINEPOSITION</A></B>
</DT><DD>The animation's position is set using splines. 

</DD><DT><B><A NAME="com_000300065b010125">D3DRMCOLOR_FROMFACE</A></B>
</DT><DD>The object's color source is a face. 

</DD><DT><B><A NAME="com_000300065b010126">D3DRMCOLOR_FROMVERTEX</A></B>
</DT><DD>The object's color source is a vertex. 

</DD><DT><B><A NAME="com_000300065b010127">D3DRMCOMBINE_AFTER</A></B>
</DT><DD>The supplied matrix is multiplied with the frame's current matrix and follows the current matrix in the calculation. 

</DD><DT><B><A NAME="com_000300065b010128">D3DRMCOMBINE_BEFORE</A></B>
</DT><DD>The supplied matrix is multiplied with the frame's current matrix and precedes the current matrix in the calculation. 

</DD><DT><B><A NAME="com_000300065b010129">D3DRMCOMBINE_REPLACE</A></B>
</DT><DD>The supplied matrix replaces the frame's current matrix. 

</DD><DT><B><A NAME="com_000300065b01012a">D3DRMCONSTRAIN_X</A></B>
</DT><DD>Use only y- and z-rotations. 

</DD><DT><B><A NAME="com_000300065b01012b">D3DRMCONSTRAIN_Y</A></B>
</DT><DD>Use only x- and z-rotations. 

</DD><DT><B><A NAME="com_000300065b01012c">D3DRMCONSTRAIN_Z</A></B>
</DT><DD>Use only x- and y-rotations. 

</DD><DT><B><A NAME="com_000300065b01012d">D3DRMFILL_MASK</A></B>
</DT><DD>Fill using a mask. 

</DD><DT><B><A NAME="com_000300065b01012e">D3DRMFILL_MAX</A></B>
</DT><DD>Maximum value for fill mode. 

</DD><DT><B><A NAME="com_000300065b01012f">D3DRMFILL_POINTS</A></B>
</DT><DD>Fill points only; minimum fill mode. 

</DD><DT><B><A NAME="com_000300065b010130">D3DRMFILL_SOLID</A></B>
</DT><DD>Fill solid objects. 

</DD><DT><B><A NAME="com_000300065b010131">D3DRMFILL_WIREFRAME</A></B>
</DT><DD>Fill wireframes. 

</DD><DT><B><A NAME="com_000300065b010132">D3DRMFOG_EXPONENTIAL</A></B>
</DT><DD>The fog effect intensifies exponentially. 

</DD><DT><B><A NAME="com_000300065b010133">D3DRMFOG_EXPONENTIALSQUARED</A></B>
</DT><DD>The fog effect intensifies exponentially with the square of the distance. 

</DD><DT><B><A NAME="com_000300065b010134">D3DRMFOG_LINEAR</A></B>
</DT><DD>The fog effect intensifies linearly between the start and end points. This is the only fog mode currently supported. 

</DD><DT><B><A NAME="com_000300065b010135">D3DRMLIGHT_AMBIENT</A></B>
</DT><DD>Light is an ambient source. 

</DD><DT><B><A NAME="com_000300065b010136">D3DRMLIGHT_DIRECTIONAL</A></B>
</DT><DD>Light is a directional source. 

</DD><DT><B><A NAME="com_000300065b010137">D3DRMLIGHT_MASK</A></B>
</DT><DD>Lighting uses a mask. 

</DD><DT><B><A NAME="com_000300065b010138">D3DRMLIGHT_MAX</A></B>
</DT><DD>Maximum lighting mode. 

</DD><DT><B><A NAME="com_000300065b010139">D3DRMLIGHT_OFF</A></B>
</DT><DD>Lighting is off. 

</DD><DT><B><A NAME="com_000300065b01013a">D3DRMLIGHT_ON</A></B>
</DT><DD>Lighting is on. 

</DD><DT><B><A NAME="com_000300065b01013b">D3DRMLIGHT_PARALLELPOINT</A></B>
</DT><DD>Light is a parallel point source. 

</DD><DT><B><A NAME="com_000300065b01013c">D3DRMLIGHT_POINT</A></B>
</DT><DD>Light is a point source. 

</DD><DT><B><A NAME="com_000300065b01013d">D3DRMLIGHT_SPOT</A></B>
</DT><DD>Light is a spotlight source. 

</DD><DT><B><A NAME="com_000300065b01013e">D3DRMLOAD_BYGUID</A></B>
</DT><DD>Load any object by using a specified globally unique identifier (GUID). 

</DD><DT><B><A NAME="com_000300065b01013f">D3DRMLOAD_BYNAME</A></B>
</DT><DD>Load any object by using a specified name. 

</DD><DT><B><A NAME="com_000300065b010140">D3DRMLOAD_BYPOSITION</A></B>
</DT><DD>Load a stand-alone object based on a given zero-based position (that is, the <I>n</I>th object in the file). Stand-alone objects can contain other objects, but are not contained by any other objects. 

</DD><DT><B><A NAME="com_000300065b010141">D3DRMLOAD_FIRST</A></B>
</DT><DD>This is the default setting. Load the first stand-alone object of the given type (for example, a mesh if the application calls <B>Direct3drmMeshBuilder.loadFromFileByPos</B>). Stand-alone objects can contain other objects, but are not contained by any other objects. 

</DD><DT><B><A NAME="com_000300065b010142">D3DRMLOAD_FROMFILE</A></B>
</DT><DD>Load from a file. This is the default setting. 

</DD><DT><B><A NAME="com_000300065b010143">D3DRMLOAD_FROMMEMORY</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010144">D3DRMLOAD_FROMRESOURCE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010145">D3DRMLOAD_FROMSTREAM</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010146">D3DRMLOAD_INSTANCEBYCOPYING</A></B>
</DT><DD>Check whether an object already exists with the same name as specified and, if so, copy that object. 

</DD><DT><B><A NAME="com_000300065b010147">D3DRMLOAD_INSTANCEBYREFERENCE</A></B>
</DT><DD>Check whether an object already exists with the same name as specified and, if so, use an instance of that object instead of creating a new one. 

</DD><DT><B><A NAME="com_000300065b010148">D3DRMMATERIAL_FROMFRAME</A></B>
</DT><DD>Material information is retrieved from the frame, overriding any previous material information that the visual object may have possessed. 

</DD><DT><B><A NAME="com_000300065b010149">D3DRMMATERIAL_FROMMESH</A></B>
</DT><DD>Material information is retrieved from the visual object (the mesh) itself. This is the default setting. 

</DD><DT><B><A NAME="com_000300065b01014a">D3DRMMATERIAL_FROMPARENT</A></B>
</DT><DD>Material information, along with color or texture information, is inherited from the parent frame. 

</DD><DT><B><A NAME="com_000300065b01014b">D3DRMPALETTE_FREE</A></B>
</DT><DD>Renderer may use this entry freely. 

</DD><DT><B><A NAME="com_000300065b01014c">D3DRMPALETTE_READONLY</A></B>
</DT><DD>Fixed but may be used by renderer. 

</DD><DT><B><A NAME="com_000300065b01014d">D3DRMPALETTE_RESERVED</A></B>
</DT><DD>May not be used by renderer. 

</DD><DT><B><A NAME="com_000300065b01014e">D3DRMPROJECT_ORTHOGRAPHIC</A></B>
</DT><DD>The projection is orthographic. 

</DD><DT><B><A NAME="com_000300065b01014f">D3DRMPROJECT_PERSPECTIVE</A></B>
</DT><DD>The projection is perspective. 

</DD><DT><B><A NAME="com_000300065b010150">D3DRMRENDER_FLAT</A></B>
</DT><DD>Flat shaded. 

</DD><DT><B><A NAME="com_000300065b010151">D3DRMRENDER_GOURAUD</A></B>
</DT><DD>Gouraud shaded. 

</DD><DT><B><A NAME="com_000300065b010152">D3DRMRENDER_PHONG</A></B>
</DT><DD>Phong shaded. Phong shading is not currently supported. 

</DD><DT><B><A NAME="com_000300065b010153">D3DRMRENDER_UNLITFLAT</A></B>
</DT><DD>Flat shaded without lighting. 

</DD><DT><B><A NAME="com_000300065b010154">D3DRMRENDER_WIREFRAME</A></B>
</DT><DD>Display only the edges. 

</DD><DT><B><A NAME="com_000300065b010155">D3DRMSHADE_FLAT</A></B>
</DT><DD>Flat shaded. 

</DD><DT><B><A NAME="com_000300065b010156">D3DRMSHADE_GOURAUD</A></B>
</DT><DD>Gouraud shaded. 

</DD><DT><B><A NAME="com_000300065b010157">D3DRMSHADE_MASK</A></B>
</DT><DD>Shading uses a mask. 

</DD><DT><B><A NAME="com_000300065b010158">D3DRMSHADE_MAX</A></B>
</DT><DD>Maximum shade. 

</DD><DT><B><A NAME="com_000300065b010159">D3DRMSHADE_PHONG</A></B>
</DT><DD>Phong shaded. Phong shading is not currently supported. 

</DD><DT><B><A NAME="com_000300065b01015a">D3DRMSORT_BACKTOFRONT</A></B>
</DT><DD>Child frames are sorted back-to-front. 

</DD><DT><B><A NAME="com_000300065b01015b">D3DRMSORT_FROMPARENT</A></B>
</DT><DD>Child frames inherit the sorting order of their parents. This is the default setting. 

</DD><DT><B><A NAME="com_000300065b01015c">D3DRMSORT_FRONTTOBACK</A></B>
</DT><DD>Child frames are sorted front-to-back. 

</DD><DT><B><A NAME="com_000300065b01015d">D3DRMSORT_NONE</A></B>
</DT><DD>Child frames are not sorted. 

</DD><DT><B><A NAME="com_000300065b01015e">D3DRMTEXTURE_LINEAR</A></B>
</DT><DD>Linearly interpolate the four nearest pixels. 

</DD><DT><B><A NAME="com_000300065b01015f">D3DRMTEXTURE_LINEARMIPLINEAR</A></B>
</DT><DD>Similar to D3DRMTEXTURE_MIPLINEAR, but interpolates between the two nearest mipmaps. 

</DD><DT><B><A NAME="com_000300065b010160">D3DRMTEXTURE_LINEARMIPNEAREST</A></B>
</DT><DD>Similar to D3DRMTEXTURE_MIPNEAREST, but interpolates between the two nearest mipmaps. 

</DD><DT><B><A NAME="com_000300065b010161">D3DRMTEXTURE_MIPLINEAR</A></B>
</DT><DD>Similar to D3DRMTEXTURE_LINEAR, but uses the appropriate mipmap instead of the texture. 

</DD><DT><B><A NAME="com_000300065b010162">D3DRMTEXTURE_MIPNEAREST</A></B>
</DT><DD>Similar to D3DRMTEXTURE_NEAREST, but uses the appropriate mipmap instead of the texture. 

</DD><DT><B><A NAME="com_000300065b010163">D3DRMTEXTURE_NEAREST</A></B>
</DT><DD>Choose the nearest pixel in the texture. 

</DD><DT><B><A NAME="com_000300065b010164">D3DRMWIREFRAME_CULL</A></B>
</DT><DD>The backfacing faces are not drawn. 

</DD><DT><B><A NAME="com_000300065b010165">D3DRMWIREFRAME_HIDDENLINE</A></B>
</DT><DD>Wireframe-rendered lines are obscured by nearer objects. 

</DD><DT><B><A NAME="com_000300065b010166">D3DRMWRAP_CHROME</A></B>
</DT><DD>The wrap allocates texture coordinates so that the texture appears to be reflected onto the objects. 

</DD><DT><B><A NAME="com_000300065b010167">D3DRMWRAP_CYLINDER</A></B>
</DT><DD>The wrap is cylindrical. 

</DD><DT><B><A NAME="com_000300065b010168">D3DRMWRAP_FLAT</A></B>
</DT><DD>The wrap is flat. 

</DD><DT><B><A NAME="com_000300065b010169">D3DRMWRAP_SPHERE</A></B>
</DT><DD>The wrap is spherical. 

</DD><DT><B><A NAME="com_000300065b01016a">D3DRMXOF_BINARY</A></B>
</DT><DD>File is in binary format. This is the default setting. 

</DD><DT><B><A NAME="com_000300065b01016b">D3DRMXOF_COMPRESSED</A></B>
</DT><DD>Not currently supported. 

</DD><DT><B><A NAME="com_000300065b01016c">D3DRMXOF_TEXT</A></B>
</DT><DD>File is in text format. 

</DD><DT><B><A NAME="com_000300065b01016d">D3DRMXOFSAVE_ALL</A></B>
</DT><DD>Save normal vectors, texture coordinates, materials, and texture names in addition to the basic geometry. 

</DD><DT><B><A NAME="com_000300065b01016e">D3DRMXOFSAVE_MATERIALS</A></B>
</DT><DD>Save materials in addition to the basic geometry. 

</DD><DT><B><A NAME="com_000300065b01016f">D3DRMXOFSAVE_NORMALS</A></B>
</DT><DD>Save normal vectors in addition to the basic geometry. 

</DD><DT><B><A NAME="com_000300065b010170">D3DRMXOFSAVE_TEMPLATES</A></B>
</DT><DD>Save templates with the file. By default, templates are not saved. 

</DD><DT><B><A NAME="com_000300065b010171">D3DRMXOFSAVE_TEXTURECOORDINATES</A></B>
</DT><DD>Save texture coordinates in addition to the basic geometry. 

</DD><DT><B><A NAME="com_000300065b010172">D3DRMXOFSAVE_TEXTURENAMES</A></B>
</DT><DD>Save texture names in addition to the basic geometry. 

</DD><DT><B><A NAME="com_000300065b010173">D3DRMZBUFFER_DISABLE</A></B>
</DT><DD>Z-buffering is disabled. 

</DD><DT><B><A NAME="com_000300065b010174">D3DRMZBUFFER_ENABLE</A></B>
</DT><DD>Z-buffering is enabled. 

</DD><DT><B><A NAME="com_000300065b010175">D3DRMZBUFFER_FROMPARENT</A></B>
</DT><DD>The frame inherits the z-buffer setting from its parent frame. This is the default setting. 

</DD><DT><B><A NAME="com_000300065b010176">D3DSETSTATUS_ALL</A></B>
</DT><DD></DD><DT><B><A NAME="com_000300065b010177">D3DSETSTATUS_EXTENTS</A></B>
</DT><DD>Sets the extents of the bounding box specified in the <A HREF="D3dExecuteData.htm#com_0003000605010008">D3dStatus.x1</A>, <A HREF="D3dExecuteData.htm#com_000300060501000a">D3dStatus.y1</A>, <A HREF="D3dExecuteData.htm#com_0003000605010009">D3dStatus.x2</A>, and <A HREF="D3dExecuteData.htm#com_000300060501000b">D3dStatus.y2</A> fields. 

</DD><DT><B><A NAME="com_000300065b010178">D3DSETSTATUS_STATUS</A></B>
</DT><DD>Sets the status. 

</DD><DT><B><A NAME="com_000300065b010179">D3DSHADE_FLAT</A></B>
</DT><DD>Flat shade mode. The color of the first vertex in the triangle is used to determine the color of the face. 

</DD><DT><B><A NAME="com_000300065b01017a">D3DSHADE_GOURAUD</A></B>
</DT><DD>Gouraud shade mode. The color of the face is determined by a linear interpolation between all three of the triangle's vertices. 

</DD><DT><B><A NAME="com_000300065b01017b">D3DSHADE_PHONG</A></B>
</DT><DD>Phong shade mode. This mode is not currently supported. 

</DD><DT><B><A NAME="com_000300065b01017c">D3DSTATE_OVERRIDE_BIAS</A></B>
</DT><DD>Override bias. 

</DD><DT><B><A NAME="com_000300065b01017d">D3DSTATUS_CLIPINTERSECTIONALL</A></B>
</DT><DD>Combination of all CLIPINTERSECTION flags. 

</DD><DT><B><A NAME="com_000300065b01017e">D3DSTATUS_CLIPINTERSECTIONBACK</A></B>
</DT><DD>Logical AND of the clip flags for the vertices compared to the back clipping plane of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b01017f">D3DSTATUS_CLIPINTERSECTIONBOTTOM</A></B>
</DT><DD>Logical AND of the clip flags for the vertices compared to the bottom of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b010180">D3DSTATUS_CLIPINTERSECTIONFRONT</A></B>
</DT><DD>Logical AND of the clip flags for the vertices compared to the front clipping plane of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b010181">D3DSTATUS_CLIPINTERSECTIONGEN0</A></B>
</DT><DD>Logical AND of the clip flags for application-defined clipping planes. 

</DD><DT><B><A NAME="com_000300065b010182">D3DSTATUS_CLIPINTERSECTIONGEN1</A></B>
</DT><DD>Logical AND of the clip flags for application-defined clipping planes. 

</DD><DT><B><A NAME="com_000300065b010183">D3DSTATUS_CLIPINTERSECTIONGEN2</A></B>
</DT><DD>Logical AND of the clip flags for application-defined clipping planes. 

</DD><DT><B><A NAME="com_000300065b010184">D3DSTATUS_CLIPINTERSECTIONGEN3</A></B>
</DT><DD>Logical AND of the clip flags for application-defined clipping planes. 

</DD><DT><B><A NAME="com_000300065b010185">D3DSTATUS_CLIPINTERSECTIONGEN4</A></B>
</DT><DD>Logical AND of the clip flags for application-defined clipping planes. 

</DD><DT><B><A NAME="com_000300065b010186">D3DSTATUS_CLIPINTERSECTIONGEN5</A></B>
</DT><DD>Logical AND of the clip flags for application-defined clipping planes. 

</DD><DT><B><A NAME="com_000300065b010187">D3DSTATUS_CLIPINTERSECTIONLEFT</A></B>
</DT><DD>Logical AND of the clip flags for the vertices compared to the left side of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b010188">D3DSTATUS_CLIPINTERSECTIONRIGHT</A></B>
</DT><DD>Logical AND of the clip flags for the vertices compared to the right side of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b010189">D3DSTATUS_CLIPINTERSECTIONTOP</A></B>
</DT><DD>Logical AND of the clip flags for the vertices compared to the top of the viewing frustum. 

</DD><DT><B><A NAME="com_000300065b01018a">D3DSTATUS_CLIPUNIONALL</A></B>
</DT><DD>Combination of all CLIPUNION flags. 

</DD><DT><B><A NAME="com_000300065b01018b">D3DSTATUS_CLIPUNIONBACK</A></B>
</DT><DD>Equal to D3DCLIP_BACK. 

</DD><DT><B><A NAME="com_000300065b01018c">D3DSTATUS_CLIPUNIONBOTTOM</A></B>
</DT><DD>Equal to D3DCLIP_BOTTOM. 

</DD><DT><B><A NAME="com_000300065b01018d">D3DSTATUS_CLIPUNIONFRONT</A></B>
</DT><DD>Equal to D3DCLIP_FRONT. 

</DD><DT><B><A NAME="com_000300065b01018e">D3DSTATUS_CLIPUNIONGEN0</A></B>
</DT><DD>Equal to D3DCLIP_GEN0 

</DD><DT><B><A NAME="com_000300065b01018f">D3DSTATUS_CLIPUNIONGEN1</A></B>
</DT><DD>Equal to D3DCLIP_GEN1. 

</DD><DT><B><A NAME="com_000300065b010190">D3DSTATUS_CLIPUNIONGEN2</A></B>
</DT><DD>Equal to D3DCLIP_GEN2. 

</DD><DT><B><A NAME="com_000300065b010191">D3DSTATUS_CLIPUNIONGEN3</A></B>
</DT><DD>Equal to D3DCLIP_GEN3. 

</DD><DT><B><A NAME="com_000300065b010192">D3DSTATUS_CLIPUNIONGEN4</A></B>
</DT><DD>Equal to D3DCLIP_GEN4. 

</DD><DT><B><A NAME="com_000300065b010193">D3DSTATUS_CLIPUNIONGEN5</A></B>
</DT><DD>Equal to D3DCLIP_GEN5. 

</DD><DT><B><A NAME="com_000300065b010194">D3DSTATUS_CLIPUNIONLEFT</A></B>
</DT><DD>Equal to D3DCLIP_LEFT. 

</DD><DT><B><A NAME="com_000300065b010195">D3DSTATUS_CLIPUNIONRIGHT</A></B>
</DT><DD>Equal to D3DCLIP_RIGHT. 

</DD><DT><B><A NAME="com_000300065b010196">D3DSTATUS_CLIPUNIONTOP</A></B>
</DT><DD>Equal to D3DCLIP_TOP. 

</DD><DT><B><A NAME="com_000300065b010197">D3DSTATUS_DEFAULT</A></B>
</DT><DD>Combination of D3DSTATUS_CLIPINTERSECTION and D3DSTATUS_ZNOTVISIBLE flags. This value is the default. 

</DD><DT><B><A NAME="com_000300065b010198">D3DSTATUS_ZNOTVISIBLE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010199">D3DTADDRESS_CLAMP</A></B>
</DT><DD>Texture coordinates greater than 1.0 are set to 1.0, and values less than 0.0 are set to 0.0. 

</DD><DT><B><A NAME="com_000300065b01019a">D3DTADDRESS_MIRROR</A></B>
</DT><DD>Equivalent to a tiling texture-addressing mode (that is, when neither D3DRENDERSTATE_WRAPU nor D3DRENDERSTATE_WRAPV is used), except that the texture is flipped at every integer junction. For u-values between 0 and 1, for example, the texture is addressed normally; between 1 and 2, the texture is flipped (mirrored); between 2 and 3, the texture is normal again, and so on. 

</DD><DT><B><A NAME="com_000300065b01019b">D3DTADDRESS_WRAP</A></B>
</DT><DD>The <A HREF="DirectXConstants.htm#com_000300065b010119">D3DRENDERSTATE_WRAPU</A> and <A HREF="DirectXConstants.htm#com_000300065b01011a">D3DRENDERSTATE_WRAPV</A> render states are used. This is the default setting. 

</DD><DT><B><A NAME="com_000300065b01019c">D3DTBLEND_COPY</A></B>
</DT><DD>Copy texture-blending is supported. 

</DD><DT><B><A NAME="com_000300065b01019d">D3DTBLEND_DECAL</A></B>
</DT><DD>Decal texture-blending is supported. In this mode, the RGB and alpha values of the texture replace the colors that would have been used with no texturing. 

</DD><DT><B><A NAME="com_000300065b01019e">D3DTBLEND_DECALALPHA</A></B>
</DT><DD>Decal-alpha texture-blending is supported. In this mode, the RGB and alpha values of the texture are blended with the colors that would have been used with no texturing. 
<P>In the D3DTBLEND_DECALALPHA mode, any alpha values in the texture replace the alpha values in the colors that would have been used with no texturing. 

</DD><DT><B><A NAME="com_000300065b01019f">D3DTBLEND_DECALMASK</A></B>
</DT><DD>Decal-mask texture-blending is supported. 

</DD><DT><B><A NAME="com_000300065b0101a0">D3DTBLEND_MODULATE</A></B>
</DT><DD>Modulate texture-blending is supported. In this mode, the RGB values of the texture are multiplied with the RGB values that would have been used with no texturing. Any alpha values in the texture replace the alpha values that would have been used with no texturing. 

</DD><DT><B><A NAME="com_000300065b0101a1">D3DTBLEND_MODULATEALPHA</A></B>
</DT><DD>Modulate-alpha texture-blending is supported. In this mode, the RGB values of the texture are multiplied with the RGB values that would have been used with no texturing, and the alpha values of the texture are multiplied with the alpha values that would have been used with no texturing. 

</DD><DT><B><A NAME="com_000300065b0101a2">D3DTBLEND_MODULATEMASK</A></B>
</DT><DD>Modulate-mask texture-blending is supported. 

</DD><DT><B><A NAME="com_000300065b0101a3">D3DTRANSFORM_CLIPPED</A></B>
</DT><DD>The method uses the current transformation matrix to transform a set of vertices, checking the resulting vertices to see if they are within the viewing frustum. The homogeneous part of the <B>D3dTransformData.in</B> field will be set if the vertex is clipped. Otherwise, only the screen coordinates will be set. The <A HREF="D3dExecuteData.htm#com_0003000605010008">D3dTransformData.x1</A>, <A HREF="D3dExecuteData.htm#com_000300060501000a">D3dTransformData.y1</A>, <A HREF="D3dExecuteData.htm#com_0003000605010009">D3dTransformData.x2</A>, and <A HREF="D3dExecuteData.htm#com_000300060501000b">D3dTransformData.y2</A> fields will also be set to the 2D bounding rectangle of the resulting vertices. 

</DD><DT><B><A NAME="com_000300065b0101a4">D3DTRANSFORM_UNCLIPPED</A></B>
</DT><DD>The method uses the current transformation matrix to transform a set of vertices. In this case, the system assumes that all the resulting coordinates will be within the viewing frustum. The <A HREF="D3dExecuteData.htm#com_0003000605010008">D3dTransformData.x1</A>, <A HREF="D3dExecuteData.htm#com_000300060501000a">D3dTransformData.y1</A>, <A HREF="D3dExecuteData.htm#com_0003000605010009">D3dTransformData.x2</A>, and <A HREF="D3dExecuteData.htm#com_000300060501000b">D3dTransformData.y2</A> fields will be set to the bounding rectangle of the resulting vertices. 

</DD><DT><B><A NAME="com_000300065b0101a5">D3DTRANSFORMSTATE_PROJECTION</A></B>
</DT><DD>Define the matrix for the projection transformation. The default value is null (the identity matrix). 

</DD><DT><B><A NAME="com_000300065b0101a6">D3DTRANSFORMSTATE_VIEW</A></B>
</DT><DD>Define the matrix for the view transformation. The default value is null (the identity matrix). 

</DD><DT><B><A NAME="com_000300065b0101a7">D3DTRANSFORMSTATE_WORLD</A></B>
</DT><DD>Define the matrix for the world transformation. The default values is null (the identity matrix). 

</DD><DT><B><A NAME="com_000300065b0101a8">D3DTRIFLAG_EDGEENABLE1</A></B>
</DT><DD>Edge defined by v1&#150;v2. 

</DD><DT><B><A NAME="com_000300065b0101a9">D3DTRIFLAG_EDGEENABLE2</A></B>
</DT><DD>Edge defined by v2&#150;v3. 

</DD><DT><B><A NAME="com_000300065b0101aa">D3DTRIFLAG_EDGEENABLE3</A></B>
</DT><DD>Edge defined by v3&#150;v1. 

</DD><DT><B><A NAME="com_000300065b0101ab">D3DTRIFLAG_EDGEENABLETRIANGLE</A></B>
</DT><DD>All edges. 

</DD><DT><B><A NAME="com_000300065b0101ac">D3DTRIFLAG_EVEN</A></B>
</DT><DD>The v1&#150;v2 edge of the current triangle is adjacent to the v3&#150;v1 edge of the previous triangle; that is, v1 is the previous v1, and v2 is the previous v3. 

</DD><DT><B><A NAME="com_000300065b0101ad">D3DTRIFLAG_ODD</A></B>
</DT><DD>The v1&#150;v2 edge of the current triangle is adjacent to the v2&#150;v3 edge of the previous triangle; that is, v1 is the previous v3, and v2 is the previous v2. 

</DD><DT><B><A NAME="com_000300065b0101ae">D3DTRIFLAG_START</A></B>
</DT><DD>Begin the strip or fan, loading all three vertices. 

</DD><DT><B><A NAME="com_000300065b0101af">DD_OK</A></B>
</DT><DD>The request completed successfully. 

</DD><DT><B><A NAME="com_000300065b0101b0">DDBD_1</A></B>
</DT><DD>One bit per pixel. 

</DD><DT><B><A NAME="com_000300065b0101b1">DDBD_16</A></B>
</DT><DD>Sixteen bits per pixel. 

</DD><DT><B><A NAME="com_000300065b0101b2">DDBD_2</A></B>
</DT><DD>Two bits per pixel. 

</DD><DT><B><A NAME="com_000300065b0101b3">DDBD_24</A></B>
</DT><DD>Twenty-four bits per pixel. 

</DD><DT><B><A NAME="com_000300065b0101b4">DDBD_32</A></B>
</DT><DD>Thirty-two bits per pixel. 

</DD><DT><B><A NAME="com_000300065b0101b5">DDBD_4</A></B>
</DT><DD>Four bits per pixel. 

</DD><DT><B><A NAME="com_000300065b0101b6">DDBD_8</A></B>
</DT><DD>Eight bits per pixel. 

</DD><DT><B><A NAME="com_000300065b0101b7">DDBLT_ALPHADEST</A></B>
</DT><DD>Use either the alpha information in the pixel format or the alpha channel surface attached to the destination surface as the alpha channel for this blit. 

</DD><DT><B><A NAME="com_000300065b0101b8">DDBLT_ALPHADESTCONSTOVERRIDE</A></B>
</DT><DD>Uses the <A HREF="DDBltFx.htm#com_000300061a010001">DDBltFx.alphaDestConst</A> field as the alpha channel for the destination surface for this blit. 

</DD><DT><B><A NAME="com_000300065b0101b9">DDBLT_ALPHADESTNEG</A></B>
</DT><DD>Indicates that the destination surface becomes more transparent as the alpha value increases (0 is opaque). 

</DD><DT><B><A NAME="com_000300065b0101ba">DDBLT_ALPHADESTSURFACEOVERRIDE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b0101bb">DDBLT_ALPHAEDGEBLEND</A></B>
</DT><DD>Uses the <A HREF="DDBltFx.htm#com_000300061a010003">DDBltFx.alphaEdgeBlend</A> field as the alpha channel for the edges of the image that border the colors of the color key. 

</DD><DT><B><A NAME="com_000300065b0101bc">DDBLT_ALPHASRC</A></B>
</DT><DD>Uses either the alpha information in the pixel format or the alpha channel surface attached to the source surface as the alpha channel for this blit. 

</DD><DT><B><A NAME="com_000300065b0101bd">DDBLT_ALPHASRCCONSTOVERRIDE</A></B>
</DT><DD>Uses the <A HREF="DDBltFx.htm#com_000300061a010005">DDBltFx.alphaSrcConst</A> field as the alpha channel for the source for this blit. 

</DD><DT><B><A NAME="com_000300065b0101be">DDBLT_ALPHASRCNEG</A></B>
</DT><DD>Indicates that the source surface becomes more transparent as the alpha value increases (0 is opaque). 

</DD><DT><B><A NAME="com_000300065b0101bf">DDBLT_ALPHASRCSURFACEOVERRIDE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b0101c0">DDBLT_ASYNC</A></B>
</DT><DD>Processes this blit asynchronously through the FIFO hardware in the order received. If there is no room in the FIFO hardware, the call fails. 

</DD><DT><B><A NAME="com_000300065b0101c1">DDBLT_COLORFILL</A></B>
</DT><DD>Uses the <A HREF="DDBltFx.htm#com_000300061a01000b">DDBltFx.fillValue</A> field as the RGB color with which to fill the destination rectangle on the destination surface. 

</DD><DT><B><A NAME="com_000300065b0101c2">DDBLT_DDFX</A></B>
</DT><DD>Uses the <A HREF="DDBltFx.htm#com_000300061a010007">DDBltFx.ddfx</A> field to specify the effects to be used for this blit. 

</DD><DT><B><A NAME="com_000300065b0101c3">DDBLT_DDROPS</A></B>
</DT><DD>Uses the <A HREF="DDBltFx.htm#com_000300061a010008">DDBltFx.ddrop</A> field to specify the raster operations that are not part of the Microsoft&#174; Win32&#174; API. 

</DD><DT><B><A NAME="com_000300065b0101c4">DDBLT_DEPTHFILL</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b0101c5">DDBLT_KEYDEST</A></B>
</DT><DD>Uses the color key associated with the destination surface. 

</DD><DT><B><A NAME="com_000300065b0101c6">DDBLT_KEYDESTOVERRIDE</A></B>
</DT><DD>Uses the <A HREF="DDBltFx.htm#com_000300061a01000a">DDBltFx.destColorSpaceLowValue</A> and <A HREF="DDBltFx.htm#com_000300061a010009">DDBltFx.destColorSpaceHighValue</A> fields as the color key for the destination surface. 

</DD><DT><B><A NAME="com_000300065b0101c7">DDBLT_KEYSRC</A></B>
</DT><DD>Uses the color key associated with the source surface. 

</DD><DT><B><A NAME="com_000300065b0101c8">DDBLT_KEYSRCOVERRIDE</A></B>
</DT><DD>Uses the <A HREF="DDBltFx.htm#com_000300061a01000f">DDBltFx.srcColorSpaceLowValue</A> and <A HREF="DDBltFx.htm#com_000300061a01000e">DDBltFx.srcColorSpaceHighValue</A> fields as the color key for the source surface. 

</DD><DT><B><A NAME="com_000300065b0101c9">DDBLT_ROP</A></B>
</DT><DD>Uses the <A HREF="DDBltFx.htm#com_000300061a01000c">DDBltFx.rop</A> field for the raster operation for this blit. The raster operations are the same as those defined in the Win32 API. 

</DD><DT><B><A NAME="com_000300065b0101ca">DDBLT_ROTATIONANGLE</A></B>
</DT><DD>Uses the <A HREF="DDBltFx.htm#com_000300061a01000d">DDBltFx.rotationAngle</A> field as the rotation angle (specified in 1/100th of a degree) for the surface. 

</DD><DT><B><A NAME="com_000300065b0101cb">DDBLT_WAIT</A></B>
</DT><DD>Returns as soon as the blit can be set up. 

</DD><DT><B><A NAME="com_000300065b0101cc">DDBLT_ZBUFFER</A></B>
</DT><DD>Performs a z-buffered blit using the z-buffers attached to the source and destination surfaces and the <A HREF="DDBltFx.htm#com_000300061a010013">DDBltFx.zbufferOpCode</A> field as the z-buffer opcode. 

</DD><DT><B><A NAME="com_000300065b0101cd">DDBLT_ZBUFFERDESTCONSTOVERRIDE</A></B>
</DT><DD>Performs a z-buffered blit using the <A HREF="DDBltFx.htm#com_000300061a010014">DDBltFx.zDestConst</A> and <A HREF="DDBltFx.htm#com_000300061a010013">DDBltFx.zbufferOpCode</A> fields as the z-buffer and z-buffer opcode, respectively, for the destination. 

</DD><DT><B><A NAME="com_000300065b0101ce">DDBLT_ZBUFFERDESTOVERRIDE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b0101cf">DDBLT_ZBUFFERSRCCONSTOVERRIDE</A></B>
</DT><DD>Performs a z-buffered blit using the <A HREF="DDBltFx.htm#com_000300061a010016">DDBltFx.zSrcConst</A> and <A HREF="DDBltFx.htm#com_000300061a010013">DDBltFx.zbufferOpCode</A> fields as the z-buffer and z-buffer opcode, respectively, for the source. 

</DD><DT><B><A NAME="com_000300065b0101d0">DDBLT_ZBUFFERSRCOVERRIDE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b0101d1">DDBLTFAST_DESTCOLORKEY</A></B>
</DT><DD>A transparent blit that uses the destination's color key. 

</DD><DT><B><A NAME="com_000300065b0101d2">DDBLTFAST_NOCOLORKEY</A></B>
</DT><DD>A normal copy blit with no transparency. 

</DD><DT><B><A NAME="com_000300065b0101d3">DDBLTFAST_SRCCOLORKEY</A></B>
</DT><DD>A transparent blit that uses the source's color key. 

</DD><DT><B><A NAME="com_000300065b0101d4">DDBLTFAST_WAIT</A></B>
</DT><DD>Returns as soon as the blit can be set up. 

</DD><DT><B><A NAME="com_000300065b0101d5">DDBLTFX_ARITHSTRETCHY</A></B>
</DT><DD>Use arithmetic stretching along the y-axis for this blit. 

</DD><DT><B><A NAME="com_000300065b0101d6">DDBLTFX_MIRRORLEFTRIGHT</A></B>
</DT><DD>Turn the surface on its y-axis. This blit mirrors the surface from left to right. 

</DD><DT><B><A NAME="com_000300065b0101d7">DDBLTFX_MIRRORUPDOWN</A></B>
</DT><DD>Turn the surface on its x-axis. This blit mirrors the surface from top to bottom. 

</DD><DT><B><A NAME="com_000300065b0101d8">DDBLTFX_NOTEARING</A></B>
</DT><DD>Schedule this blit to avoid tearing. 

</DD><DT><B><A NAME="com_000300065b0101d9">DDBLTFX_ROTATE180</A></B>
</DT><DD>Rotate the surface 180 degrees clockwise during this blit. 

</DD><DT><B><A NAME="com_000300065b0101da">DDBLTFX_ROTATE270</A></B>
</DT><DD>Rotate the surface 270 degrees clockwise during this blit. 

</DD><DT><B><A NAME="com_000300065b0101db">DDBLTFX_ROTATE90</A></B>
</DT><DD>Rotate the surface 90 degrees clockwise during this blit. 

</DD><DT><B><A NAME="com_000300065b0101dc">DDBLTFX_ZBUFFERBASEDEST</A></B>
</DT><DD>Adds the <A HREF="DDBltFx.htm#com_000300061a010010">DDBltFx.zbufferBaseDest</A> field to each of the source z-values before comparing them with the destination z-values during this z-blit. 

</DD><DT><B><A NAME="com_000300065b0101dd">DDBLTFX_ZBUFFERRANGE</A></B>
</DT><DD>Use the <A HREF="DDBltFx.htm#com_000300061a010012">DDBltFx.zbufferLow</A> and <A HREF="DDBltFx.htm#com_000300061a010011">DDBltFx.zbufferHigh</A> fields as range values to specify limits to the bits copied from a source surface during this z-blit. 

</DD><DT><B><A NAME="com_000300065b0101de">DDCAPS_3D</A></B>
</DT><DD>Display hardware has 3D acceleration. 

</DD><DT><B><A NAME="com_000300065b0101df">DDCAPS_ALIGNBOUNDARYDEST</A></B>
</DT><DD>DirectDraw will support only those source rectangles with the x-axis aligned to the <A HREF="DDCaps.htm#com_000300061b010001">DDCaps.alignBoundaryDest</A> boundaries of the surface. 

</DD><DT><B><A NAME="com_000300065b0101e0">DDCAPS_ALIGNBOUNDARYSRC</A></B>
</DT><DD>DirectDraw will support only those source rectangles with the x-axis aligned to the <A HREF="DDCaps.htm#com_000300061b010002">DDCaps.alignBoundarySrc</A> boundaries of the surface. 

</DD><DT><B><A NAME="com_000300065b0101e1">DDCAPS_ALIGNSIZEDEST</A></B>
</DT><DD>DirectDraw will support only those source rectangles whose x-axis sizes, in bytes, are <A HREF="DDCaps.htm#com_000300061b010003">DDCaps.alignSizeDest</A> multiples. 

</DD><DT><B><A NAME="com_000300065b0101e2">DDCAPS_ALIGNSIZESRC</A></B>
</DT><DD>DirectDraw will support only those source rectangles whose x-axis sizes, in bytes, are <A HREF="DDCaps.htm#com_000300061b010004">DDCaps.alignSizeSrc</A> multiples. 

</DD><DT><B><A NAME="com_000300065b0101e3">DDCAPS_ALIGNSTRIDE</A></B>
</DT><DD>DirectDraw will create display memory surfaces that have a stride alignment equal to the <A HREF="DDCaps.htm#com_000300061b010005">DDCaps.alignStrideAlign</A> value. 

</DD><DT><B><A NAME="com_000300065b0101e4">DDCAPS_ALPHA</A></B>
</DT><DD>Indicates that the display hardware supports an alpha channel during blit operations. 

</DD><DT><B><A NAME="com_000300065b0101e5">DDCAPS_BANKSWITCHED</A></B>
</DT><DD>Display hardware is bank-switched and is potentially very slow at random access to display memory. 

</DD><DT><B><A NAME="com_000300065b0101e6">DDCAPS_BLT</A></B>
</DT><DD>Display hardware is capable of blit operations. 

</DD><DT><B><A NAME="com_000300065b0101e7">DDCAPS_BLTCOLORFILL</A></B>
</DT><DD>Display hardware is capable of color filling with a blitter. 

</DD><DT><B><A NAME="com_000300065b0101e8">DDCAPS_BLTDEPTHFILL</A></B>
</DT><DD>Display hardware is capable of depth filling z-buffers with a blitter. 

</DD><DT><B><A NAME="com_000300065b0101e9">DDCAPS_BLTFOURCC</A></B>
</DT><DD>Display hardware is capable of color-space conversions during blit operations. 

</DD><DT><B><A NAME="com_000300065b0101ea">DDCAPS_BLTQUEUE</A></B>
</DT><DD>Display hardware is capable of asynchronous blit operations. 

</DD><DT><B><A NAME="com_000300065b0101eb">DDCAPS_BLTSTRETCH</A></B>
</DT><DD>Display hardware is capable of stretching during blit operations. 

</DD><DT><B><A NAME="com_000300065b0101ec">DDCAPS_CANBLTSYSMEM</A></B>
</DT><DD>Display hardware is capable of blitting to or from system memory. 

</DD><DT><B><A NAME="com_000300065b0101ed">DDCAPS_CANCLIP</A></B>
</DT><DD>Display hardware is capable of clipping with blitting. 

</DD><DT><B><A NAME="com_000300065b0101ee">DDCAPS_CANCLIPSTRETCHED</A></B>
</DT><DD>Display hardware is capable of clipping while stretch blitting. 

</DD><DT><B><A NAME="com_000300065b0101ef">DDCAPS_COLORKEY</A></B>
</DT><DD>Support some form of color key in either overlay or blit operations. More specific color key capability information can be found in the <A HREF="DDCaps.htm#com_000300061b01000e">DDCaps.colorkeyCaps</A> field. 

</DD><DT><B><A NAME="com_000300065b0101f0">DDCAPS_COLORKEYHWASSIST</A></B>
</DT><DD>The color key is hardware assisted. 

</DD><DT><B><A NAME="com_000300065b0101f1">DDCAPS_GDI</A></B>
</DT><DD>Display hardware is shared with GDI. 

</DD><DT><B><A NAME="com_000300065b0101f2">DDCAPS_NOHARDWARE</A></B>
</DT><DD>There is no hardware support for DirectDraw. 

</DD><DT><B><A NAME="com_000300065b0101f3">DDCAPS_OVERLAY</A></B>
</DT><DD>Display hardware supports overlays. 

</DD><DT><B><A NAME="com_000300065b0101f4">DDCAPS_OVERLAYCANTCLIP</A></B>
</DT><DD>Display hardware supports overlays, but cannot clip them. 

</DD><DT><B><A NAME="com_000300065b0101f5">DDCAPS_OVERLAYFOURCC</A></B>
</DT><DD>Overlay hardware is capable of color-space conversions during overlay operations. 

</DD><DT><B><A NAME="com_000300065b0101f6">DDCAPS_OVERLAYSTRETCH</A></B>
</DT><DD>Overlay hardware is capable of stretching. 

</DD><DT><B><A NAME="com_000300065b0101f7">DDCAPS_PALETTE</A></B>
</DT><DD>DirectDraw is capable of creating and supporting DirectDrawPalette objects for more surfaces than only the primary surface. 

</DD><DT><B><A NAME="com_000300065b0101f8">DDCAPS_PALETTEVSYNC</A></B>
</DT><DD>DirectDraw&#174; is capable of updating a palette synchronized with the vertical refresh. 

</DD><DT><B><A NAME="com_000300065b0101f9">DDCAPS_READSCANLINE</A></B>
</DT><DD>Display hardware is capable of returning the current scan line. 

</DD><DT><B><A NAME="com_000300065b0101fa">DDCAPS_STEREOVIEW</A></B>
</DT><DD>Display hardware has stereo vision capabilities. 

</DD><DT><B><A NAME="com_000300065b0101fb">DDCAPS_VBI</A></B>
</DT><DD>Display hardware is capable of generating a vertical-blank interrupt. 

</DD><DT><B><A NAME="com_000300065b0101fc">DDCAPS_ZBLTS</A></B>
</DT><DD>Supports the use of z-buffers with blit operations. 

</DD><DT><B><A NAME="com_000300065b0101fd">DDCAPS_ZOVERLAYS</A></B>
</DT><DD>Supports the use of the <A HREF="DirectDrawSurface.htm#com_0003000644012500">DirectDrawSurface.updateOverlayZOrder</A> method as a z-value for overlays to control their layering. 

</DD><DT><B><A NAME="com_000300065b0101fe">DDCAPS2_CERTIFIED</A></B>
</DT><DD>Display hardware is certified. 

</DD><DT><B><A NAME="com_000300065b0101ff">DDCAPS2_NO2DDURING3DSCENE</A></B>
</DT><DD>Between calls to the <A HREF="Direct3dDevice.htm#com_0003000621010200">Direct3dDevice.beginScene</A> and <A HREF="Direct3dDevice.htm#com_0003000621010700">Direct3dDevice.endScene</A> methods, 2D operations such as <A HREF="DirectDrawSurface.htm#com_0003000644010300">DirectDrawSurface.blt</A> and <A HREF="DirectDrawSurface.htm#com_0003000644011b00">DirectDrawSurface.lock</A> cannot be performed on any surfaces that Direct3D&#153; is using. 

</DD><DT><B><A NAME="com_000300065b010201">DDCKEY_COLORSPACE</A></B>
</DT><DD>A color space. 

</DD><DT><B><A NAME="com_000300065b010202">DDCKEY_DESTBLT</A></B>
</DT><DD>Color key or color space to use as a destination color key for blit operations. 

</DD><DT><B><A NAME="com_000300065b010203">DDCKEY_DESTOVERLAY</A></B>
</DT><DD>Color key or color space to use as a destination color key for overlay operations. 

</DD><DT><B><A NAME="com_000300065b010204">DDCKEY_SRCBLT</A></B>
</DT><DD>Color key or color space to use as a source color key for blit operations. 

</DD><DT><B><A NAME="com_000300065b010205">DDCKEY_SRCOVERLAY</A></B>
</DT><DD>Color key or color space to use as a source color key for overlay operations. 

</DD><DT><B><A NAME="com_000300065b010206">DDCKEYCAPS_DESTBLT</A></B>
</DT><DD>Supports transparent blitting with a color key that identifies the replaceable bits of the destination surface for RGB colors. 

</DD><DT><B><A NAME="com_000300065b010207">DDCKEYCAPS_DESTBLTCLRSPACE</A></B>
</DT><DD>Supports transparent blitting with a color space that identifies the replaceable bits of the destination surface for RGB colors. 

</DD><DT><B><A NAME="com_000300065b010208">DDCKEYCAPS_DESTBLTCLRSPACEYUV</A></B>
</DT><DD>Supports transparent blitting with a color space that identifies the replaceable bits of the destination surface for YUV colors. 

</DD><DT><B><A NAME="com_000300065b010209">DDCKEYCAPS_DESTBLTYUV</A></B>
</DT><DD>Supports transparent blitting with a color key that identifies the replaceable bits of the destination surface for YUV colors. 

</DD><DT><B><A NAME="com_000300065b01020a">DDCKEYCAPS_DESTOVERLAY</A></B>
</DT><DD>Supports overlays with color keying of the replaceable bits of the destination surface being overlaid for RGB colors. 

</DD><DT><B><A NAME="com_000300065b01020b">DDCKEYCAPS_DESTOVERLAYCLRSPACE</A></B>
</DT><DD>Support a color space as the color key for the destination of RGB colors. 

</DD><DT><B><A NAME="com_000300065b01020c">DDCKEYCAPS_DESTOVERLAYCLRSPACEYUV</A></B>
</DT><DD>Supports a color space as the color key for the destination of YUV colors. 

</DD><DT><B><A NAME="com_000300065b01020d">DDCKEYCAPS_DESTOVERLAYONEACTIVE</A></B>
</DT><DD>Support only one active destination color key value for visible overlay surfaces. 

</DD><DT><B><A NAME="com_000300065b01020e">DDCKEYCAPS_DESTOVERLAYYUV</A></B>
</DT><DD>Supports overlays using color keying of the replaceable bits of the destination surface being overlaid for YUV colors. 

</DD><DT><B><A NAME="com_000300065b01020f">DDCKEYCAPS_NOCOSTOVERLAY</A></B>
</DT><DD>There are no bandwidth tradeoffs for using the color key with an overlay. 

</DD><DT><B><A NAME="com_000300065b010210">DDCKEYCAPS_SRCBLT</A></B>
</DT><DD>Supports transparent blitting using the color key for the source with this surface for RGB colors. 

</DD><DT><B><A NAME="com_000300065b010211">DDCKEYCAPS_SRCBLTCLRSPACE</A></B>
</DT><DD>Supports transparent blitting using a color space for the source with this surface for RGB colors. 

</DD><DT><B><A NAME="com_000300065b010212">DDCKEYCAPS_SRCBLTCLRSPACEYUV</A></B>
</DT><DD>Supports transparent blitting using a color space for the source with this surface for YUV colors. 

</DD><DT><B><A NAME="com_000300065b010213">DDCKEYCAPS_SRCBLTYUV</A></B>
</DT><DD>Supports transparent blitting using the color key for the source with this surface for YUV colors. 

</DD><DT><B><A NAME="com_000300065b010214">DDCKEYCAPS_SRCOVERLAY</A></B>
</DT><DD>Supports overlays using the color key for the source with this overlay surface for RGB colors. 

</DD><DT><B><A NAME="com_000300065b010215">DDCKEYCAPS_SRCOVERLAYCLRSPACE</A></B>
</DT><DD>Supports overlays using a color space as the source color key for the overlay surface for RGB colors. 

</DD><DT><B><A NAME="com_000300065b010216">DDCKEYCAPS_SRCOVERLAYCLRSPACEYUV</A></B>
</DT><DD>Supports overlays using a color space as the source color key for the overlay surface for YUV colors. 

</DD><DT><B><A NAME="com_000300065b010217">DDCKEYCAPS_SRCOVERLAYONEACTIVE</A></B>
</DT><DD>Supports only one active source color key value for visible overlay surfaces. 

</DD><DT><B><A NAME="com_000300065b010218">DDCKEYCAPS_SRCOVERLAYYUV</A></B>
</DT><DD>Supports overlays using the color key for the source with this overlay surface for YUV colors. 

</DD><DT><B><A NAME="com_000300065b010219">DDCOOPERATIVE_CLIPTOCOMPONENT</A></B>
</DT><DD>Used in the <B>blt</B> and the <B>bltFast</B> methods to specify that the <A HREF="DirectDraw.htm">DirectDraw</A> object clips completely to a component's region. 

</DD><DT><B><A NAME="com_000300065b01021a">DDCOOPERATIVE_OFFSETTOCOMPONENT</A></B>
</DT><DD>Used in the <B>blt</B> and the <B>bltFast</B> methods to specify that the <A HREF="DirectDraw.htm">DirectDraw</A> object will only offset the blt to the component but will not clip to other components. 

</DD><DT><B><A NAME="com_000300065b01021b">DDCREATE_EMULATIONONLY</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b01021c">DDCREATE_HARDWAREONLY</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b01021d">DDEDM_REFRESHRATES</A></B>
</DT><DD>Enumerates modes with different refresh rates. <A HREF="DirectDraw.htm#com_0003000640010900">DirectDraw.enumDisplayModes</A> guarantees that a particular mode will be enumerated only once. This flag specifies whether the refresh rate is taken into account when determining if a mode is unique. 

</DD><DT><B><A NAME="com_000300065b01021e">DDENUMOVERLAYZ_BACKTOFRONT</A></B>
</DT><DD>Enumerates overlays back to front. 

</DD><DT><B><A NAME="com_000300065b01021f">DDENUMOVERLAYZ_FRONTTOBACK</A></B>
</DT><DD>Enumerates overlays front to back. 

</DD><DT><B><A NAME="com_000300065b010220">DDENUMSURFACES_ALL</A></B>
</DT><DD>Enumerates all of the surfaces that meet the search criterion. 

</DD><DT><B><A NAME="com_000300065b010221">DDENUMSURFACES_CANBECREATED</A></B>
</DT><DD>Enumerates the first surface that can be created and meets the search criterion. 

</DD><DT><B><A NAME="com_000300065b010222">DDENUMSURFACES_DOESEXIST</A></B>
</DT><DD>Enumerates the already existing surfaces that meet the search criterion. 

</DD><DT><B><A NAME="com_000300065b010223">DDENUMSURFACES_MATCH</A></B>
</DT><DD>Searches for any surface that matches the surface description. 

</DD><DT><B><A NAME="com_000300065b010224">DDENUMSURFACES_NOMATCH</A></B>
</DT><DD>Searches for any surface that does not match the surface description. 

</DD><DT><B><A NAME="com_000300065b010225">DDERR_SURFACELOST</A></B>
</DT><DD>Access to the surface is refused because the surface memory is gone. The <A HREF="DirectDrawSurface.htm">DirectDrawSurface</A> object representing this surface should have the <A HREF="DirectDrawSurface.htm#com_0003000644011d00">DirectDrawSurface.restore</A> method called on it. 

</DD><DT><B><A NAME="com_000300065b010226">DDERR_WASSTILLDRAWING</A></B>
</DT><DD>The previous blit operation that is transferring information to or from this surface is incomplete. 

</DD><DT><B><A NAME="com_000300065b010227">DDFLIP_WAIT</A></B>
</DT><DD>Typically, if the flip cannot be set up because the state of the display hardware is not appropriate, the <A HREF="DirectDrawSurface.htm#com_0003000644010c00">DirectDrawSurface.flip</A> method returns immediately and no flip occurs. Setting this flag causes the method to continue trying to flip. <B>DirectDrawSurface.flip</B> does not return until the flipping operation has been successfully set up or an error that prevents flipping occurs. 

</DD><DT><B><A NAME="com_000300065b010228">DDFXALPHACAPS_BLTALPHAEDGEBLEND</A></B>
</DT><DD>Supports alpha blending around the edge of a source color-keyed surface. Used for blit operations. 

</DD><DT><B><A NAME="com_000300065b010229">DDFXALPHACAPS_BLTALPHAPIXELS</A></B>
</DT><DD>Supports alpha information in pixel format. The bit depth of alpha information in the pixel format can be 1, 2, 4, or 8. The alpha value becomes more opaque as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully transparent value. Used for blit operations. 

</DD><DT><B><A NAME="com_000300065b01022a">DDFXALPHACAPS_BLTALPHAPIXELSNEG</A></B>
</DT><DD>Supports alpha information in pixel format. The bit depth of alpha information in the pixel format can be 1, 2, 4, or 8. The alpha value becomes more transparent as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully opaque value. This flag can be used only if <A HREF="DirectXConstants.htm#com_000300065b0101e4">DDCAPS_ALPHA</A> is set. Used for blit operations. 

</DD><DT><B><A NAME="com_000300065b01022b">DDFXALPHACAPS_BLTALPHASURFACES</A></B>
</DT><DD>Supports alpha-only surfaces. The bit depth of an alpha-only surface can be 1, 2, 4, or 8. The alpha value becomes more opaque as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully transparent value. Used for blit operations. 

</DD><DT><B><A NAME="com_000300065b01022c">DDFXALPHACAPS_BLTALPHASURFACESNEG</A></B>
</DT><DD>Indicates that the alpha channel becomes more transparent as the alpha value increases. The depth of the alpha channel data can be 1, 2, 4, or 8. Regardless of the depth of the alpha information, 0 is always the fully opaque value. This flag can be set only if <B>DDFXCAPS_ALPHASURFACES</B> has been set. Used for blit operations. 

</DD><DT><B><A NAME="com_000300065b01022d">DDFXALPHACAPS_OVERLAYALPHAEDGEBLEND</A></B>
</DT><DD>Supports alpha blending around the edge of a source color-keyed surface. Used for overlays. 

</DD><DT><B><A NAME="com_000300065b01022e">DDFXALPHACAPS_OVERLAYALPHAPIXELS</A></B>
</DT><DD>Supports alpha information in pixel format. The bit depth of alpha information in pixel format can be 1, 2, 4, or 8. The alpha value becomes more opaque as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully transparent value. Used for overlays. 

</DD><DT><B><A NAME="com_000300065b01022f">DDFXALPHACAPS_OVERLAYALPHAPIXELSNEG</A></B>
</DT><DD>Supports alpha information in pixel format. The bit depth of alpha information in pixel format can be 1, 2, 4, or 8. The alpha value becomes more transparent as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully opaque value. This flag can be used only if <B>DDFXCAPS_ALPHAPIXELS</B> has been set. Used for overlays. 

</DD><DT><B><A NAME="com_000300065b010230">DDFXALPHACAPS_OVERLAYALPHASURFACES</A></B>
</DT><DD>Supports alpha-only surfaces. The bit depth of an alpha-only surface can be 1, 2, 4, or 8. The alpha value becomes more opaque as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully transparent value. Used for overlays. 

</DD><DT><B><A NAME="com_000300065b010231">DDFXALPHACAPS_OVERLAYALPHASURFACESNEG</A></B>
</DT><DD>Indicates that the alpha channel becomes more transparent as the alpha value increases. The depth of the alpha channel data can be 1, 2, 4, or 8. Regardless of the depth of the alpha information, 0 is always the fully opaque value. This flag can be used only if <B>DDFXCAPS_ALPHASURFACES</B> has been set. Used for overlays. 

</DD><DT><B><A NAME="com_000300065b010232">DDFXCAPS_BLTARITHSTRETCHY</A></B>
</DT><DD>Uses arithmetic operations, rather than pixel-doubling techniques, to stretch and shrink surfaces during a blit operation. Occurs along the y-axis (vertically). 

</DD><DT><B><A NAME="com_000300065b010233">DDFXCAPS_BLTARITHSTRETCHYN</A></B>
</DT><DD>Uses arithmetic operations, rather than pixel-doubling techniques, to stretch and shrink surfaces during a blit operation. Occurs along the y-axis (vertically), and works only for integer stretching ( x 1, x 2, and so on). 

</DD><DT><B><A NAME="com_000300065b010234">DDFXCAPS_BLTMIRRORLEFTRIGHT</A></B>
</DT><DD>Supports mirroring left to right in a blit operation. 

</DD><DT><B><A NAME="com_000300065b010235">DDFXCAPS_BLTMIRRORUPDOWN</A></B>
</DT><DD>Supports mirroring top to bottom in a blit operation. 

</DD><DT><B><A NAME="com_000300065b010236">DDFXCAPS_BLTROTATION</A></B>
</DT><DD>Supports arbitrary rotation in a blit operation. 

</DD><DT><B><A NAME="com_000300065b010237">DDFXCAPS_BLTROTATION90</A></B>
</DT><DD>Supports 90-degree rotations in a blit operation. 

</DD><DT><B><A NAME="com_000300065b010238">DDFXCAPS_BLTSHRINKX</A></B>
</DT><DD>Supports arbitrary shrinking of a surface along the x-axis (horizontally). This flag is valid only for blit operations. 

</DD><DT><B><A NAME="com_000300065b010239">DDFXCAPS_BLTSHRINKXN</A></B>
</DT><DD>Supports integer shrinking ( x 1, x 2, and so on) of a surface along the x-axis (horizontally). This flag is valid only for blit operations. 

</DD><DT><B><A NAME="com_000300065b01023a">DDFXCAPS_BLTSHRINKY</A></B>
</DT><DD>Supports arbitrary shrinking of a surface along the y-axis (vertically). This flag is valid only for blit operations. 

</DD><DT><B><A NAME="com_000300065b01023b">DDFXCAPS_BLTSHRINKYN</A></B>
</DT><DD>Supports integer shrinking ( x 1, x 2, and so on) of a surface along the y-axis (vertically). This flag is valid only for blit operations. 

</DD><DT><B><A NAME="com_000300065b01023c">DDFXCAPS_BLTSTRETCHX</A></B>
</DT><DD>Supports arbitrary stretching of a surface along the x-axis (horizontally). This flag is valid only for blit operations. 

</DD><DT><B><A NAME="com_000300065b01023d">DDFXCAPS_BLTSTRETCHXN</A></B>
</DT><DD>Supports integer stretching ( x1, x2, and so on) of a surface along the x-axis (horizontally). This flag is valid only for blit operations. 

</DD><DT><B><A NAME="com_000300065b01023e">DDFXCAPS_BLTSTRETCHY</A></B>
</DT><DD>Supports arbitrary stretching of a surface along the y-axis (vertically). This flag is valid only for blit operations. 

</DD><DT><B><A NAME="com_000300065b01023f">DDFXCAPS_BLTSTRETCHYN</A></B>
</DT><DD>Supports integer stretching ( x1, x2, and so on) of a surface along the y-axis (vertically). This flag is valid only for blit operations. 

</DD><DT><B><A NAME="com_000300065b010240">DDFXCAPS_OVERLAYARITHSTRETCHY</A></B>
</DT><DD>Uses arithmetic operations, rather than pixel-doubling techniques, to stretch and shrink surfaces during an overlay operation. Occurs along the y-axis (vertically). 

</DD><DT><B><A NAME="com_000300065b010241">DDFXCAPS_OVERLAYARITHSTRETCHYN</A></B>
</DT><DD>Uses arithmetic operations, rather than pixel-doubling techniques, to stretch and shrink surfaces during an overlay operation. Occurs along the y-axis (vertically), and works only for integer stretching ( x 1, x 2, and so on). 

</DD><DT><B><A NAME="com_000300065b010242">DDFXCAPS_OVERLAYMIRRORLEFTRIGHT</A></B>
</DT><DD>Supports mirroring of overlays around the vertical axis. 

</DD><DT><B><A NAME="com_000300065b010243">DDFXCAPS_OVERLAYMIRRORUPDOWN</A></B>
</DT><DD>Supports mirroring of overlays across the horizontal axis. 

</DD><DT><B><A NAME="com_000300065b010244">DDFXCAPS_OVERLAYSHRINKX</A></B>
</DT><DD>Supports arbitrary shrinking of a surface along the x-axis (horizontally). This flag is valid only for <A HREF="DirectXConstants.htm#com_000300065b010295">DDSCAPS_OVERLAY</A> surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available. 

</DD><DT><B><A NAME="com_000300065b010245">DDFXCAPS_OVERLAYSHRINKXN</A></B>
</DT><DD>Supports integer shrinking ( x 1, x 2, and so on) of a surface along the x-axis (horizontally). This flag is valid only for <A HREF="DirectXConstants.htm#com_000300065b010295">DDSCAPS_OVERLAY</A> surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available. 

</DD><DT><B><A NAME="com_000300065b010246">DDFXCAPS_OVERLAYSHRINKY</A></B>
</DT><DD>Supports arbitrary shrinking of a surface along the y-axis (vertically). This flag is valid only for <A HREF="DirectXConstants.htm#com_000300065b010295">DDSCAPS_OVERLAY</A> surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available. 

</DD><DT><B><A NAME="com_000300065b010247">DDFXCAPS_OVERLAYSHRINKYN</A></B>
</DT><DD>Supports integer shrinking ( x1, x2, and so on) of a surface along the y-axis (vertically). This flag is valid only for <A HREF="DirectXConstants.htm#com_000300065b010295">DDSCAPS_OVERLAY</A> surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available. 

</DD><DT><B><A NAME="com_000300065b010248">DDFXCAPS_OVERLAYSTRETCHX</A></B>
</DT><DD>Supports arbitrary stretching of a surface along the x-axis (horizontally). This flag is valid only for <A HREF="DirectXConstants.htm#com_000300065b010295">DDSCAPS_OVERLAY</A> surfaces. This flag indicates only the capabilities of a surface; it does not indicate that stretching is available. 

</DD><DT><B><A NAME="com_000300065b010249">DDFXCAPS_OVERLAYSTRETCHXN</A></B>
</DT><DD>Supports integer stretching ( x1, x2, and so on) of a surface along the x-axis (horizontally). This flag is valid only for <A HREF="DirectXConstants.htm#com_000300065b010295">DDSCAPS_OVERLAY</A> surfaces. This flag indicates only the capabilities of a surface; it does not indicate that stretching is available. 

</DD><DT><B><A NAME="com_000300065b01024a">DDFXCAPS_OVERLAYSTRETCHY</A></B>
</DT><DD>Supports arbitrary stretching of a surface along the y-axis (vertically). This flag is valid only for DDSCAPS_OVERLAY surfaces. This flag indicates only the capabilities of a surface; it does not indicate that stretching is available. 

</DD><DT><B><A NAME="com_000300065b01024b">DDFXCAPS_OVERLAYSTRETCHYN</A></B>
</DT><DD>Supports integer stretching ( x1, x2, and so on) of a surface along the y-axis (vertically). This flag is valid only for <A HREF="DirectXConstants.htm#com_000300065b010295">DDSCAPS_OVERLAY</A> surfaces. This flag indicates only the capabilities of a surface; it does not indicate that stretching is available. 

</DD><DT><B><A NAME="com_000300065b01024c">DDGBS_CANBLT</A></B>
</DT><DD>Inquires whether a blit involving this surface can occur immediately, and returns DD_OK if the blit can be completed. 

</DD><DT><B><A NAME="com_000300065b01024d">DDGBS_ISBLTDONE</A></B>
</DT><DD>Inquires whether the blit is done, and returns DD_OK if the last blit on this surface has completed. 

</DD><DT><B><A NAME="com_000300065b01024e">DDGFS_CANFLIP</A></B>
</DT><DD>Inquires whether this surface can be flipped immediately. Returns DD_OK if the flip can be completed. 

</DD><DT><B><A NAME="com_000300065b01024f">DDGFS_ISFLIPDONE</A></B>
</DT><DD>Inquires whether the flip has finished. Returns DD_OK if the last flip on this surface has completed. 

</DD><DT><B><A NAME="com_000300065b010250">DDLOCK_EVENT</A></B>
</DT><DD>Triggers the event when <A HREF="DirectDrawSurface.htm#com_0003000644011b00">DirectDrawSurface.lock</A> can return the surface memory requested. This flag is set if an event handle is being passed to <B>DirectDrawSurface.lock</B>. If multiple locks of this type are placed on a surface, events are triggered in FIFO order. 

</DD><DT><B><A NAME="com_000300065b010251">DDLOCK_READONLY</A></B>
</DT><DD>Indicates that the surface being locked will be read-only. 

</DD><DT><B><A NAME="com_000300065b010252">DDLOCK_SURFACEMEMORYPTR</A></B>
</DT><DD>Indicates that valid memory at the top of the specified rectangle should be returned. If no rectangle is specified, the top of the surface is returned. This is the default. 

</DD><DT><B><A NAME="com_000300065b010253">DDLOCK_WAIT</A></B>
</DT><DD>Typically, if a lock cannot be obtained because a blit operation is in progress, no action is taken. If this flag is set, however, <A HREF="DirectDrawSurface.htm#com_0003000644011b00">DirectDrawSurface.lock</A> retries until a lock is obtained. 

</DD><DT><B><A NAME="com_000300065b010254">DDLOCK_WRITEONLY</A></B>
</DT><DD>Indicates that the surface being locked will be write-only. 

</DD><DT><B><A NAME="com_000300065b010255">DDOVER_ADDDIRTYRECT</A></B>
</DT><DD>Adds a dirty rectangle to an emulated overlay surface. 

</DD><DT><B><A NAME="com_000300065b010256">DDOVER_ALPHADEST</A></B>
</DT><DD>Uses either the alpha information in pixel format or the alpha channel surface attached to the destination surface as the alpha channel for this overlay. 

</DD><DT><B><A NAME="com_000300065b010257">DDOVER_ALPHADESTCONSTOVERRIDE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010258">DDOVER_ALPHADESTNEG</A></B>
</DT><DD>Indicates that the destination surface becomes more transparent as the alpha value increases (0 is opaque). 

</DD><DT><B><A NAME="com_000300065b010259">DDOVER_ALPHADESTSURFACEOVERRIDE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b01025a">DDOVER_ALPHAEDGEBLEND</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b01025b">DDOVER_ALPHASRC</A></B>
</DT><DD>Uses either the alpha information in pixel format or the alpha channel surface attached to the source surface as the source alpha channel for this overlay. 

</DD><DT><B><A NAME="com_000300065b01025c">DDOVER_ALPHASRCCONSTOVERRIDE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b01025d">DDOVER_ALPHASRCNEG</A></B>
</DT><DD>Indicates that the source surface becomes more transparent as the alpha value increases (0 is opaque). 

</DD><DT><B><A NAME="com_000300065b01025e">DDOVER_ALPHASRCSURFACEOVERRIDE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b01025f">DDOVER_DDFX</A></B>
</DT><DD>Uses the overlay FX flags to define special overlay effects. 

</DD><DT><B><A NAME="com_000300065b010260">DDOVER_HIDE</A></B>
</DT><DD>Turns this overlay off. 

</DD><DT><B><A NAME="com_000300065b010261">DDOVER_KEYDEST</A></B>
</DT><DD>Uses the color key associated with the destination surface. 

</DD><DT><B><A NAME="com_000300065b010262">DDOVER_KEYDESTOVERRIDE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010263">DDOVER_KEYSRC</A></B>
</DT><DD>Uses the color key associated with the source surface. 

</DD><DT><B><A NAME="com_000300065b010264">DDOVER_KEYSRCOVERRIDE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010265">DDOVER_REFRESHALL</A></B>
</DT><DD>Ignores the dirty rectangle list and updates the overlay display completely. This clears the dirty rectangle list. 

</DD><DT><B><A NAME="com_000300065b010266">DDOVER_REFRESHDIRTYRECTS</A></B>
</DT><DD>Updates the overlay display using the list of dirty rectangles previously constructed for this destination. This clears the dirty rectangle list. 

</DD><DT><B><A NAME="com_000300065b010267">DDOVER_SHOW</A></B>
</DT><DD>Turns on this overlay. 

</DD><DT><B><A NAME="com_000300065b010268">DDOVERFX_ARITHSTRETCHY</A></B>
</DT><DD>If stretching, uses arithmetic stretching along the y-axis for this overlay. 

</DD><DT><B><A NAME="com_000300065b010269">DDOVERFX_MIRRORLEFTRIGHT</A></B>
</DT><DD>Mirrors the overlay around the vertical axis. 

</DD><DT><B><A NAME="com_000300065b01026a">DDOVERFX_MIRRORUPDOWN</A></B>
</DT><DD>Mirrors the overlay around the horizontal axis. 

</DD><DT><B><A NAME="com_000300065b01026b">DDOVERZ_INSERTINBACKOF</A></B>
</DT><DD>Inserts this overlay behind the reference overlay in the overlay chain. 

</DD><DT><B><A NAME="com_000300065b01026c">DDOVERZ_INSERTINFRONTOF</A></B>
</DT><DD>Inserts this overlay in front of the reference overlay in the overlay chain. 

</DD><DT><B><A NAME="com_000300065b01026d">DDOVERZ_MOVEBACKWARD</A></B>
</DT><DD>Moves this overlay one position backward in the overlay chain. 

</DD><DT><B><A NAME="com_000300065b01026e">DDOVERZ_MOVEFORWARD</A></B>
</DT><DD>Moves this overlay one position forward in the overlay chain. 

</DD><DT><B><A NAME="com_000300065b01026f">DDOVERZ_SENDTOBACK</A></B>
</DT><DD>Moves this overlay to the back of the overlay chain. 

</DD><DT><B><A NAME="com_000300065b010270">DDOVERZ_SENDTOFRONT</A></B>
</DT><DD>Moves this overlay to the front of the overlay chain. 

</DD><DT><B><A NAME="com_000300065b010271">DDPCAPS_1BIT</A></B>
</DT><DD>Indicates that the index is 1 bit. There are two entries in the color table. 

</DD><DT><B><A NAME="com_000300065b010272">DDPCAPS_2BIT</A></B>
</DT><DD>Indicates that the index is 2 bits. There are four entries in the color table. 

</DD><DT><B><A NAME="com_000300065b010273">DDPCAPS_4BIT</A></B>
</DT><DD>Indicates that the index is 4 bits. There are 16 entries in the color table. 

</DD><DT><B><A NAME="com_000300065b010274">DDPCAPS_8BIT</A></B>
</DT><DD>Indicates that the index is 8 bits. There are 256 entries in the color table. 

</DD><DT><B><A NAME="com_000300065b010275">DDPCAPS_8BITENTRIES</A></B>
</DT><DD>Specifies an index to an 8-bit color index. This field is valid only when used with the DDPCAPS_1BIT, DDPCAPS_2BIT, or DDPCAPS_4BIT capability and when the target surface is in 8 bits per pixel (bpp). Each color entry is 1 byte long and is an index to an 8-bpp palette on the destination surface. 

</DD><DT><B><A NAME="com_000300065b010276">DDPCAPS_ALLOW256</A></B>
</DT><DD>Indicates that this palette can have all 256 entries defined. 

</DD><DT><B><A NAME="com_000300065b010277">DDPCAPS_INITIALIZE</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b010278">DDPCAPS_PRIMARYSURFACE</A></B>
</DT><DD>Indicates that the palette is attached to the primary surface. Changing the palette has an immediate effect on the display unless the DDPCAPS_VSYNC capability is specified and supported. 

</DD><DT><B><A NAME="com_000300065b010279">DDPCAPS_PRIMARYSURFACELEFT</A></B>
</DT><DD>Indicates that the palette is attached to the primary surface on the left. Changing the palette has an immediate effect on the display unless the DDPCAPS_VSYNC capability is specified and supported. 

</DD><DT><B><A NAME="com_000300065b01027a">DDPCAPS_VSYNC</A></B>
</DT><DD>Indicates that the palette can be modified synchronously with the monitor's refresh rate. 

</DD><DT><B><A NAME="com_000300065b01027b">DDPF_ALPHA</A></B>
</DT><DD>The pixel format describes an alpha-only surface. 

</DD><DT><B><A NAME="com_000300065b01027c">DDPF_ALPHAPIXELS</A></B>
</DT><DD>The surface has alpha channel information in the pixel format. 

</DD><DT><B><A NAME="com_000300065b01027d">DDPF_COMPRESSED</A></B>
</DT><DD>The surface will accept pixel data in the specified format and compress it during the write operation. 

</DD><DT><B><A NAME="com_000300065b01027e">DDPF_FOURCC</A></B>
</DT><DD>The FourCC code is valid. 

</DD><DT><B><A NAME="com_000300065b01027f">DDPF_PALETTEINDEXED1</A></B>
</DT><DD>The surface is 1-bit color indexed. 

</DD><DT><B><A NAME="com_000300065b010280">DDPF_PALETTEINDEXED2</A></B>
</DT><DD>The surface is 2-bit color indexed. 

</DD><DT><B><A NAME="com_000300065b010281">DDPF_PALETTEINDEXED4</A></B>
</DT><DD>The surface is 4-bit color indexed. 

</DD><DT><B><A NAME="com_000300065b010282">DDPF_PALETTEINDEXED8</A></B>
</DT><DD>The surface is 8-bit color indexed. 

</DD><DT><B><A NAME="com_000300065b010283">DDPF_PALETTEINDEXEDTO8</A></B>
</DT><DD>The surface is 1-, 2-, or 4-bit color indexed to an 8-bit palette. 

</DD><DT><B><A NAME="com_000300065b010284">DDPF_RGB</A></B>
</DT><DD>The RGB data in the pixel format structure is valid. 

</DD><DT><B><A NAME="com_000300065b010285">DDPF_RGBTOYUV</A></B>
</DT><DD>The surface will accept RGB data and translate it during the write operation to YUV data. The format of the data to be written will be contained in the pixel format structure. The DDPF_RGB flag will be set. 

</DD><DT><B><A NAME="com_000300065b010286">DDPF_YUV</A></B>
</DT><DD>The YUV data in the pixel format structure is valid. 

</DD><DT><B><A NAME="com_000300065b010287">DDPF_ZBUFFER</A></B>
</DT><DD>The pixel format describes a z-buffer-only surface. 

</DD><DT><B><A NAME="com_000300065b010288">DDSCAPS_3D</A></B>
</DT><DD>Supported for backwards compatibility. Applications should use the <A HREF="DirectXConstants.htm#com_000300065b010289">DDSCAPS_3DDEVICE</A> flag, instead. 

</DD><DT><B><A NAME="com_000300065b010289">DDSCAPS_3DDEVICE</A></B>
</DT><DD>Indicates that this surface can be used for 3D rendering. Applications can use this flag to ensure that a device that can only render to a certain heap has off-screen surfaces allocated from the correct heap. If this flag is set for a heap, the surface is not allocated from that heap. 

</DD><DT><B><A NAME="com_000300065b01028a">DDSCAPS_ALLOCONLOAD</A></B>
</DT><DD>Indicates that memory for the surface is not allocated until the surface is loaded by using the <A HREF="Direct3dTexture.htm#com_000300063e010300">Direct3dTexture.load</A> method. 

</DD><DT><B><A NAME="com_000300065b01028b">DDSCAPS_ALPHA</A></B>
</DT><DD>Indicates that this surface contains alpha information. The pixel format must be interrogated to determine whether this surface contains only alpha information or alpha information interlaced with pixel color data (such as RGBA or YUVA). 

</DD><DT><B><A NAME="com_000300065b01028c">DDSCAPS_BACKBUFFER</A></B>
</DT><DD>Indicates that this surface is the back buffer of a surface flipping structure. Typically, this capability is set by the <A HREF="DirectDraw.htm#com_0003000640010700">DirectDraw.createSurface</A> method when the DDSCAPS_FLIP flag is used. Only the surface that immediately precedes the DDSCAPS_FRONTBUFFER surface has this capability set. The other surfaces are identified as back buffers by the presence of the DDSCAPS_FLIP flag, their attachment order, and the absence of the DDSCAPS_FRONTBUFFER and DDSCAPS_BACKBUFFER capabilities. If this capability is sent to the <B>DirectDraw.createSurface</B> method, a stand-alone back buffer is being created. After this method is called, this surface could be attached to a front buffer, another back buffer, or both to form a surface flipping structure. For more information, see <A HREF="DirectDrawSurface.htm#com_0003000644010100">DirectDrawSurface.addAttachedSurface</A> . DirectDraw&#174; supports an arbitrary number of surfaces in a flipping structure. 

</DD><DT><B><A NAME="com_000300065b01028d">DDSCAPS_COMPLEX</A></B>
</DT><DD>Indicates a complex surface is being described. A complex surface results in the creation of more than one surface. The additional surfaces are attached to the root surface. The complex surface can be destroyed only by destroying the root. 

</DD><DT><B><A NAME="com_000300065b01028e">DDSCAPS_FLIP</A></B>
</DT><DD>Indicates that this surface is a part of a surface flipping structure. When this capability is passed to the <A HREF="DirectDraw.htm#com_0003000640010700">DirectDraw.createSurface</A> method, a front buffer and one or more back buffers are created. DirectDraw&#174; sets the DDSCAPS_FRONTBUFFER bit on the front-buffer surface and the DDSCAPS_BACKBUFFER bit on the surface adjacent to the front-buffer surface. The <A HREF="DDSurfaceDesc.htm#com_000300061f010003">DDSurfaceDesc.backBufferCount</A> field must be set to at least 1 for the method call to succeed. The DDSCAPS_COMPLEX capability must always be set when creating multiple surfaces by using the <A HREF="DirectDraw.htm#com_0003000640010700">Class_DirectDraw.createSurface</A> method. 

</DD><DT><B><A NAME="com_000300065b01028f">DDSCAPS_FRONTBUFFER</A></B>
</DT><DD>Indicates that this surface is the front buffer of a surface flipping structure. This flag is typically set by the <A HREF="DirectDraw.htm#com_0003000640010700">DirectDraw.createSurface</A> method when the DDSCAPS_FLIP capability is set. If this capability is sent to the <A HREF="DirectDraw.htm">createSurface</A> method, a stand-alone front buffer is created. This surface will not have the DDSCAPS_FLIP capability. It can be attached to other back buffers to form a flipping structure by using <A HREF="DirectDrawSurface.htm#com_0003000644010100">DirectDrawSurface.addAttachedSurface</A>. 

</DD><DT><B><A NAME="com_000300065b010290">DDSCAPS_HWCODEC</A></B>
</DT><DD>Indicates that this surface should be able to have a stream decompressed to it by the hardware. 

</DD><DT><B><A NAME="com_000300065b010291">DDSCAPS_LIVEVIDEO</A></B>
</DT><DD>Indicates that this surface should be able to receive live video. 

</DD><DT><B><A NAME="com_000300065b010292">DDSCAPS_MIPMAP</A></B>
</DT><DD>Indicates that this surface is one level of a mipmap. This surface will be attached to other DDSCAPS_MIPMAP surfaces to form the mipmap. This can be done explicitly by creating a number of surfaces and attaching them by using the <A HREF="DirectDrawSurface.htm#com_0003000644010100">DirectDrawSurface.addAttachedSurface</A> method, or implicitly by the <A HREF="DirectDraw.htm#com_0003000640010700">DirectDraw.createSurface</A> method. If this capability is set, DDSCAPS_TEXTURE must also be set. 

</DD><DT><B><A NAME="com_000300065b010293">DDSCAPS_MODEX</A></B>
</DT><DD>Indicates that this surface is a 320 x 200 or 320 x 240 Mode X surface. 

</DD><DT><B><A NAME="com_000300065b010294">DDSCAPS_OFFSCREENPLAIN</A></B>
</DT><DD>Indicates that this surface is any off-screen surface that is not an overlay, texture, z-buffer, front-buffer, back-buffer, or alpha surface. It is used to identify plain surfaces. 

</DD><DT><B><A NAME="com_000300065b010295">DDSCAPS_OVERLAY</A></B>
</DT><DD>Indicates that this surface is an overlay. It may or may not be directly visible, depending on whether it is currently being overlaid onto the primary surface. DDSCAPS_VISIBLE can be used to determine if it is being overlaid at the moment. 

</DD><DT><B><A NAME="com_000300065b010296">DDSCAPS_OWNDC</A></B>
</DT><DD>Indicates that this surface will have a device context (DC) association for a long period. 

</DD><DT><B><A NAME="com_000300065b010297">DDSCAPS_PALETTE</A></B>
</DT><DD>Indicates that this device driver allows unique DirectDrawPalette objects to be created and attached to this surface. 

</DD><DT><B><A NAME="com_000300065b010298">DDSCAPS_PRIMARYSURFACE</A></B>
</DT><DD>Indicates the surface is the primary surface. It represents what is visible to the user at the moment. 

</DD><DT><B><A NAME="com_000300065b010299">DDSCAPS_PRIMARYSURFACELEFT</A></B>
</DT><DD>Indicates that this surface is the primary surface for the left eye. It represents what is visible to the user's left eye at the moment. When this surface is created, the surface with the DDSCAPS_PRIMARYSURFACE capability represents what is seen by the user's right eye. 

</DD><DT><B><A NAME="com_000300065b01029a">DDSCAPS_SYSTEMMEMORY</A></B>
</DT><DD>Indicates that this surface memory was allocated in system memory. 

</DD><DT><B><A NAME="com_000300065b01029b">DDSCAPS_TEXTURE</A></B>
</DT><DD>Indicates that this surface can be used as a 3D texture. It does not indicate whether the surface is being used for that purpose. 

</DD><DT><B><A NAME="com_000300065b01029c">DDSCAPS_VIDEOMEMORY</A></B>
</DT><DD>Indicates that this surface exists in display memory. 

</DD><DT><B><A NAME="com_000300065b01029d">DDSCAPS_VISIBLE</A></B>
</DT><DD>Indicates that changes made to this surface are immediately visible. It is always set for the primary surface, as well as for overlays while they are being overlaid and texture maps while they are being textured. 

</DD><DT><B><A NAME="com_000300065b01029e">DDSCAPS_WRITEONLY</A></B>
</DT><DD>Indicates that only write access is permitted to the surface. Read access from the surface may generate a general protection (GP) fault, but the read results from this surface will not be meaningful. 

</DD><DT><B><A NAME="com_000300065b01029f">DDSCAPS_ZBUFFER</A></B>
</DT><DD>Indicates that this surface is the z-buffer. The z-buffer contains information that cannot be displayed. Instead, it contains bit-depth information that is used to determine which pixels are visible and which are obscured. 

</DD><DT><B><A NAME="com_000300065b0102a0">DDSCL_ALLOWMODEX</A></B>
</DT><DD>Allows the use of Mode X display modes. 

</DD><DT><B><A NAME="com_000300065b0102a1">DDSCL_ALLOWREBOOT</A></B>
</DT><DD>Allows CTRL+ALT+DEL to function while in exclusive (full-screen) mode. 

</DD><DT><B><A NAME="com_000300065b0102a2">DDSCL_EXCLUSIVE</A></B>
</DT><DD>Requests the exclusive level. 

</DD><DT><B><A NAME="com_000300065b0102a3">DDSCL_FULLSCREEN</A></B>
</DT><DD>Indicates that the exclusive-mode owner will be responsible for the entire primary surface. GDI can be ignored. 

</DD><DT><B><A NAME="com_000300065b0102a4">DDSCL_NORMAL</A></B>
</DT><DD>Indicates that the application will function as a regular Windows&#174; application. 

</DD><DT><B><A NAME="com_000300065b0102a5">DDSCL_NOWINDOWCHANGES</A></B>
</DT><DD>Indicates that DirectDraw&#174; is not allowed to minimize or restore the application window on activation. 

</DD><DT><B><A NAME="com_000300065b0102a6">DDSD_ALL</A></B>
</DT><DD>All input fields are valid. 

</DD><DT><B><A NAME="com_000300065b0102a7">DDSD_ALPHABITDEPTH</A></B>
</DT><DD>Indicates the <A HREF="DDSurfaceDesc.htm#com_000300061f010001">DDSurfaceDesc.alphaBitDepth</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b0102a8">DDSD_BACKBUFFERCOUNT</A></B>
</DT><DD>Indicates the <A HREF="DDSurfaceDesc.htm#com_000300061f010003">DDSurfaceDesc.backBufferCount</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b0102a9">DDSD_CAPS</A></B>
</DT><DD>Indicates the <A HREF="DDSurfaceDesc.htm#com_000300061f01000d">DDSurfaceDesc.ddsCaps</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b0102aa">DDSD_CKDESTBLT</A></B>
</DT><DD>Indicates the <A HREF="DDSurfaceDesc.htm#com_000300061f010006">DDSurfaceDesc.colorkeyDestBltLow</A> and <A HREF="DDSurfaceDesc.htm#com_000300061f010005">DDSurfaceDesc.colorkeyDestBltHigh</A> fields are valid. 

</DD><DT><B><A NAME="com_000300065b0102ab">DDSD_CKDESTOVERLAY</A></B>
</DT><DD>Indicates the <A HREF="DDSurfaceDesc.htm#com_000300061f010008">DDSurfaceDesc.colorkeyDestOverlayLow</A> and <A HREF="DDSurfaceDesc.htm#com_000300061f010007">DDSurfaceDesc.colorkeyDestOverlayHigh</A> fields are valid. 

</DD><DT><B><A NAME="com_000300065b0102ac">DDSD_CKSRCBLT</A></B>
</DT><DD>Indicates the <A HREF="DDSurfaceDesc.htm#com_000300061f01000a">DDSurfaceDesc.colorkeySrcBltLow</A> and <A HREF="DDSurfaceDesc.htm#com_000300061f010009">DDSurfaceDesc.colorkeySrcBltHigh</A> fields are valid. 

</DD><DT><B><A NAME="com_000300065b0102ad">DDSD_CKSRCOVERLAY</A></B>
</DT><DD>Indicates the <A HREF="DDSurfaceDesc.htm#com_000300061f01000c">DDSurfaceDesc.colorkeySrcOverlayLow</A> and <A HREF="DDSurfaceDesc.htm#com_000300061f01000b">DDSurfaceDesc.colorkeySrcOverlayHigh</A> fields are valid. 

</DD><DT><B><A NAME="com_000300065b0102ae">DDSD_HEIGHT</A></B>
</DT><DD>Indicates the <A HREF="DDSurfaceDesc.htm#com_000300061f010011">DDSurfaceDesc.height</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b0102af">DDSD_MIPMAPCOUNT</A></B>
</DT><DD>Mip map count. 

</DD><DT><B><A NAME="com_000300065b0102b0">DDSD_PITCH</A></B>
</DT><DD>Indicates the <A HREF="DDSurfaceDesc.htm#com_000300061f010013">DDSurfaceDesc.pitch</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b0102b1">DDSD_PIXELFORMAT</A></B>
</DT><DD>Reserved. 

</DD><DT><B><A NAME="com_000300065b0102b2">DDSD_REFRESHRATE</A></B>
</DT><DD>Refresh rate. 

</DD><DT><B><A NAME="com_000300065b0102b3">DDSD_WIDTH</A></B>
</DT><DD>Indicates the <A HREF="DDSurfaceDesc.htm#com_000300061f01001a">DDSurfaceDesc.width</A> field is valid. 

</DD><DT><B><A NAME="com_000300065b0102b4">DDSD_ZBUFFERBITDEPTH</A></B>
</DT><DD>Z-buffer bit depth. 

</DD><DT><B><A NAME="com_000300065b0102b5">DDSVCAPS_ENIGMA</A></B>
</DT><DD>Indicates that the stereo view is accomplished using Enigma encoding. 

</DD><DT><B><A NAME="com_000300065b0102b6">DDSVCAPS_FLICKER</A></B>
</DT><DD>Indicates that the stereo view is accomplished using high-frequency flickering. 

</DD><DT><B><A NAME="com_000300065b0102b7">DDSVCAPS_REDBLUE</A></B>
</DT><DD>Indicates that the stereo view is accomplished when the viewer looks at the image through red and blue filters placed over the left and right eyes. All images must adapt their color spaces for this process. 

</DD><DT><B><A NAME="com_000300065b0102b8">DDSVCAPS_SPLIT</A></B>
</DT><DD>Indicates that the stereo view is accomplished with split-screen technology. 

</DD><DT><B><A NAME="com_000300065b0102b9">DDWAITVB_BLOCKBEGIN</A></B>
</DT><DD>Returns when the vertical-blank interval begins. 

</DD><DT><B><A NAME="com_000300065b0102ba">DDWAITVB_BLOCKBEGINEVENT</A></B>
</DT><DD>Triggers an event when the vertical blank begins. This value is not currently supported. 

</DD><DT><B><A NAME="com_000300065b0102bb">DDWAITVB_BLOCKEND</A></B>
</DT><DD>Returns when the vertical-blank interval ends and the display begins. 

</DD><DT><B><A NAME="com_000300065b0102bc">DPCAPS_GROUPOPTIMIZED</A></B>
</DT><DD>Indicates that the service provider bound to this <A HREF="DirectPlay2.htm">DirectPlay2</A> object can optimize group (multicast) messaging. 

</DD><DT><B><A NAME="com_000300065b0102bd">DPCAPS_GUARANTEEDOPTIMIZED</A></B>
</DT><DD>Indicates that the service provider bound to this <A HREF="DirectPlay2.htm">DirectPlay2</A> object supports guaranteed message delivery. 

</DD><DT><B><A NAME="com_000300065b0102be">DPCAPS_GUARANTEEDSUPPORTED</A></B>
</DT><DD>Indicates that the DirectPlay object supports guaranteed message delivery, either because the service provider supports it or because DirectPlay implements it on a nonguaranteed service provider. 

</DD><DT><B><A NAME="com_000300065b0102bf">DPCAPS_ISHOST</A></B>
</DT><DD>Indicates that the <A HREF="DirectPlay2.htm">DirectPlay2</A> object created by the calling application is the session host. 

</DD><DT><B><A NAME="com_000300065b0102c0">DPCAPS_KEEPALIVEOPTIMIZED</A></B>
</DT><DD>The service provider can detect when the connection to the session has been lost. 

</DD><DT><B><A NAME="com_000300065b0102c1">DPCPA_DTRFLOW</A></B>
</DT><DD>Indicates hardware flow control with DTR. 

</DD><DT><B><A NAME="com_000300065b0102c2">DPCPA_NOFLOW</A></B>
</DT><DD>Indicates no flow control. 

</DD><DT><B><A NAME="com_000300065b0102c3">DPCPA_RTSDTRFLOW</A></B>
</DT><DD>Indicates hardware flow control with RTS and DTR 

</DD><DT><B><A NAME="com_000300065b0102c4">DPCPA_RTSFLOW</A></B>
</DT><DD>Indicates hardware flow control with RTS 

</DD><DT><B><A NAME="com_000300065b0102c5">DPCPA_XONXOFFFLOW</A></B>
</DT><DD>Indicates software flow control (xon/xoff). 

</DD><DT><B><A NAME="com_000300065b0102c6">DPENUMPLAYERS_ALL</A></B>
</DT><DD>Enumerates all players. 

</DD><DT><B><A NAME="com_000300065b0102c7">DPENUMPLAYERS_GROUP</A></B>
</DT><DD>Enumerates groups as well as players. 

</DD><DT><B><A NAME="com_000300065b0102c8">DPENUMPLAYERS_LOCAL</A></B>
</DT><DD>Enumerates only those players that were created locally by this DirectPlay&#174; object. 

</DD><DT><B><A NAME="com_000300065b0102c9">DPENUMPLAYERS_REMOTE</A></B>
</DT><DD>Enumerates only those players that were created by remote DirectPlay&#174; objects. 

</DD><DT><B><A NAME="com_000300065b0102ca">DPENUMPLAYERS_SESSION</A></B>
</DT><DD>Enumerates the players in the session or the group in the session. 

</DD><DT><B><A NAME="com_000300065b0102cb">DPENUMSESSIONS_ALL</A></B>
</DT><DD>Enumerates all active sessions, whether they are available to join or not. Sessions where the player limit has been reached, new players have been disabled, or joining has been disabled will be enumerated. The application can examine the <A HREF="DPSessionDesc.htm#com_000300064e010002">DPSessionDesc.flags</A> field to determine if the session will allow new applications to join. 

</DD><DT><B><A NAME="com_000300065b0102cc">DPENUMSESSIONS_AVAILABLE</A></B>
</DT><DD>Enumerates all sessions with a matching password (if provided) that is allowing new applications to join. 

</DD><DT><B><A NAME="com_000300065b0102cd">DPESC_TIMEDOUT</A></B>
</DT><DD>The enumeration has timed out. Reset the <I>timeOut</I> parameter and return. 

</DD><DT><B><A NAME="com_000300065b0102ce">DPGET_LOCAL</A></B>
</DT><DD>Retrieves the local data set by this application. 

</DD><DT><B><A NAME="com_000300065b0102cf">DPGET_REMOTE</A></B>
</DT><DD>Retrieves the current data from the remote shared data space. 

</DD><DT><B><A NAME="com_000300065b0102d0">DPGETCAPS_GUARANTEED</A></B>
</DT><DD>Retrieves the capabilities for a guaranteed message delivery. 

</DD><DT><B><A NAME="com_000300065b0102d1">DPLAD_SYSTEM</A></B>
</DT><DD>Indicates that this is a system message informing the application of an event. 

</DD><DT><B><A NAME="com_000300065b0102d2">DPLCONNECTION_CREATESESSION</A></B>
</DT><DD>Create a new session as described in the session description. 

</DD><DT><B><A NAME="com_000300065b0102d3">DPLCONNECTION_JOINSESSION</A></B>
</DT><DD>Join the existing session as described in the session description 

</DD><DT><B><A NAME="com_000300065b0102d4">DPLSYS_APPTERMINATED</A></B>
</DT><DD>Indicates the application started by <A HREF="DirectPlayLobby.htm#com_0003000647010d00">DirectPlayLobby.runApplication</A> has terminated. 

</DD><DT><B><A NAME="com_000300065b0102d5">DPLSYS_CONNECTIONSETTINGSREAD</A></B>
</DT><DD>Indicates the application started by the <A HREF="DirectPlayLobby.htm#com_0003000647010d00">DirectPlayLobby.runApplication</A> method has read the connection settings. 

</DD><DT><B><A NAME="com_000300065b0102d6">DPLSYS_DPLAYCONNECTFAILED</A></B>
</DT><DD>Indicates the application started by <A HREF="DirectPlayLobby.htm#com_0003000647010d00">DirectPlayLobby.runApplication</A> failed to connect to a session. 

</DD><DT><B><A NAME="com_000300065b0102d7">DPLSYS_DPLAYCONNECTSUCCEEDED</A></B>
</DT><DD>Indicates the application started by <A HREF="DirectPlayLobby.htm#com_0003000647010d00">DirectPlayLobby.runApplication</A> has created a session and is ready for other applications to join or successfully join a session. 

</DD><DT><B><A NAME="com_000300065b0102d8">DPOPEN_CREATE</A></B>
</DT><DD>Creates a new instance of a gaming session. 

</DD><DT><B><A NAME="com_000300065b0102d9">DPOPEN_JOIN</A></B>
</DT><DD>Joins an existing instance of a gaming session. 

</DD><DT><B><A NAME="com_000300065b0102da">DPPLAYERTYPE_GROUP</A></B>
</DT><DD>Indicates that the message applies to a group. 

</DD><DT><B><A NAME="com_000300065b0102db">DPPLAYERTYPE_PLAYER</A></B>
</DT><DD>Indicates that the message applies to a player. 

</DD><DT><B><A NAME="com_000300065b0102dc">DPRECEIVE_ALL</A></B>
</DT><DD>Returns the first available message. This is the default. 

</DD><DT><B><A NAME="com_000300065b0102dd">DPRECEIVE_FROMPLAYER</A></B>
</DT><DD>Returns the first message from the player whose ID is specified in the <B>PlayerIDs.sender</B> field. System messages come from player ID DPID_SYSMSG. 

</DD><DT><B><A NAME="com_000300065b0102de">DPRECEIVE_PEEK</A></B>
</DT><DD>Returns a message as specified by the other flags, but does not remove it from the message queue. 

</DD><DT><B><A NAME="com_000300065b0102df">DPRECEIVE_TOPLAYER</A></B>
</DT><DD>Returns the first message intended for the player whose ID is specified in the <B>PlayerIDs.receiver</B> field. 

</DD><DT><B><A NAME="com_000300065b0102e0">DPSEND_CLOSESTREAM</A></B>
</DT><DD>Indicates that there will no longer be a lot of guaranteed messages being sent to this player. 

</DD><DT><B><A NAME="com_000300065b0102e1">DPSEND_GUARANTEED</A></B>
</DT><DD>Sends the message by using a guaranteed method of delivery if it is available. 

</DD><DT><B><A NAME="com_000300065b0102e2">DPSEND_HIGHPRIORITY</A></B>
</DT><DD>Sends the message high-priority. This will force the message to the front of the send queue for immediate transmission. The message will also go to the top of the receiving application's receive buffer. 

</DD><DT><B><A NAME="com_000300065b0102e3">DPSEND_OPENSTREAM</A></B>
</DT><DD>Indicates an optimization hint to the service provider that there will be a lot of guaranteed messages being sent to this player. 

</DD><DT><B><A NAME="com_000300065b0102e4">DPSESSION_JOINDISABLED</A></B>
</DT><DD>No new applications can join this session. Any call to the <A HREF="DirectPlay2.htm#com_0003000646011b00">DirectPlay2.open</A> method with the <A HREF="DirectXConstants.htm#com_000300065b0102d9">DPOPEN_JOIN</A> flag and the globally unique identifier (GUID) of this session instance will cause an error. If this flag is not specified, new remote applications can join the session until the session player limit is reached. 

</DD><DT><B><A NAME="com_000300065b0102e5">DPSESSION_KEEPALIVE</A></B>
</DT><DD>Automatically detect when remote players drop out of the game abnormally. Those players will be deleted from the session. If a temporary network outage caused the loss of the players, they will be informed when they return that they were dropped from the session. For more information, see the description for the <A HREF="DirectXConstants.htm#com_000300065b0102f2">DPSYS_SESSIONLOST</A> system message in Using System Messages. If this flag is not specified, DirectPlay will not support this feature. 

</DD><DT><B><A NAME="com_000300065b0102e6">DPSESSION_MIGRATEHOST</A></B>
</DT><DD>If the current host exits, the host will attempt to migrate to another computer so that new players can continue to join. If this flag is not specified, the host will not migrate and new players cannot be created. 

</DD><DT><B><A NAME="com_000300065b0102e7">DPSESSION_NEWPLAYERSDISABLED</A></B>
</DT><DD>Indicates that new players cannot be created in the session. Any call to the <A HREF="DirectPlay2.htm#com_0003000646010500">DirectPlay2.createPlayer</A> method by an application in the session will result in an error. Also, new applications cannot join the session. If this flag is not specified, players can be created until the session player limit is reached. 

</DD><DT><B><A NAME="com_000300065b0102e8">DPSESSION_NODATAMESSAGES</A></B>
</DT><DD>Do not send system messages when remote player or group data changes, by using the <A HREF="DirectPlay2.htm#com_0003000646012100">DirectPlay2.setPlayerData</A>, <A HREF="DirectPlay2.htm#com_0003000646011f00">DirectPlay2.setGroupData</A>, <A HREF="DirectPlay2.htm#com_0003000646012200">DirectPlay2.setPlayerName</A>, or <A HREF="DirectPlay2.htm#com_0003000646012000">DirectPlay2.setGroupName</A> method. If this flag is not specified, messages will be generated indicating that the data changed. 

</DD><DT><B><A NAME="com_000300065b0102e9">DPSESSION_NOMESSAGEID</A></B>
</DT><DD>Do not attach data to messages indicating who the message is from and who it is to. Saves message overhead if this information is not relevant. (For more information, see the <A HREF="DirectPlay2.htm#com_0003000646011c00">DirectPlay2.receive</A> method.) If this flag is not specified, the message ID will be added. 

</DD><DT><B><A NAME="com_000300065b0102ea">DPSET_GUARANTEED</A></B>
</DT><DD>Propagates the data by using guaranteed messaging (if available). This flag can only be used with <A HREF="DirectXConstants.htm#com_000300065b0102ec">DPSET_REMOTE</A> . 

</DD><DT><B><A NAME="com_000300065b0102eb">DPSET_LOCAL</A></B>
</DT><DD>This data is for local use only and will not be propagated. 

</DD><DT><B><A NAME="com_000300065b0102ec">DPSET_REMOTE</A></B>
</DT><DD>This data is for use by all the applications, and will be propagated to all the other applications in the session. 

</DD><DT><B><A NAME="com_000300065b0102ed">DPSYS_ADDPLAYERTOGROUP</A></B>
</DT><DD>An identifier for a system message sent when a player is added to a group. 

</DD><DT><B><A NAME="com_000300065b0102ee">DPSYS_CREATEPLAYERORGROUP</A></B>
</DT><DD>An identifier for a system message sent when a player or group is created in a session. 

</DD><DT><B><A NAME="com_000300065b0102ef">DPSYS_DELETEPLAYERFROMGROUP</A></B>
</DT><DD>An identifier for a system message sent when a player is deleted from a group. 

</DD><DT><B><A NAME="com_000300065b0102f0">DPSYS_DESTROYPLAYERORGROUP</A></B>
</DT><DD>An identifier for a system message sent when a player or group is deleted from a session. 

</DD><DT><B><A NAME="com_000300065b0102f1">DPSYS_HOST</A></B>
</DT><DD>An identifier for a system message sent when the current session host exits the session. 

</DD><DT><B><A NAME="com_000300065b0102f2">DPSYS_SESSIONLOST</A></B>
</DT><DD></DD><DT><B><A NAME="com_000300065b0102f3">DPSYS_SETPLAYERORGROUPDATA</A></B>
</DT><DD>An identifier for a system message sent when the application changes remote player or group data. 

</DD><DT><B><A NAME="com_000300065b0102f4">DPSYS_SETPLAYERORGROUPNAME</A></B>
</DT><DD>An identifier for a system message sent when the name of a player or group has changed. 

</DD><DT><B><A NAME="com_000300065b0102f5">DS3D_DEFAULTDISTANCEFACTOR</A></B>
</DT><DD>An application can retrieve the current distance factor set for a listener by using the <A HREF="DirectSound3dListener.htm#com_000300064a010300">DirectSound3dListener.getDistanceFactor</A> method. The default value is DS3D_DEFAULTDISTANCEFACTOR (1.0), meaning that one distance unit corresponds to 1 meter. 

</DD><DT><B><A NAME="com_000300065b0102f6">DS3D_DEFAULTDOPPLERFACTOR</A></B>
</DT><DD>DirectSound can apply to a sound up to 10 times the Doppler shift experienced in the real world by setting a Doppler factor. This Doppler factor has a range of 0 (no Doppler effects) to 10.0 (10 times the Doppler effects found in the physical world). The default value is DS3D_DEFAULTDOPPLERFACTOR (1.0). 

</DD><DT><B><A NAME="com_000300065b0102f7">DS3D_DEFERRED</A></B>
</DT><DD>Settings are not applied until the application calls the <A HREF="DirectSound3dListener.htm#com_000300064a010100">DirectSound3dListener.commitDeferredSettings</A> method. This allows the application to change several settings and generate a single recalculation. 

</DD><DT><B><A NAME="com_000300065b0102f8">DS3D_IMMEDIATE</A></B>
</DT><DD>Settings are applied immediately, causing the system to recalculate the 3D coordinates for all 3D sound buffers. 

</DD><DT><B><A NAME="com_000300065b0102f9">DS3DMODE_DISABLE</A></B>
</DT><DD>Processing of 3D sound is disabled. The sound seems to originate from the center of the listener's head. 

</DD><DT><B><A NAME="com_000300065b0102fa">DS3DMODE_HEADRELATIVE</A></B>
</DT><DD>Sound parameters (position, velocity, and orientation) are relative to the listener's parameters. In this mode, the absolute parameters of the sound are updated automatically as the listener's parameters change, so that the relative parameters remain constant. 

</DD><DT><B><A NAME="com_000300065b0102fb">DS3DMODE_NORMAL</A></B>
</DT><DD>Normal processing. This is the default mode. 

</DD><DT><B><A NAME="com_000300065b0102fc">DSBCAPS_CTRL3D</A></B>
</DT><DD>The buffer is a primary buffer that uses 3D control. 

</DD><DT><B><A NAME="com_000300065b0102fd">DSBCAPS_CTRLALL</A></B>
</DT><DD>The buffer must have all control capabilities. 

</DD><DT><B><A NAME="com_000300065b0102fe">DSBCAPS_CTRLDEFAULT</A></B>
</DT><DD>The buffer should have default control options. This is the same as specifying the DSBCAPS_CTRLPAN, DSBCAPS_CTRLVOLUME, and DSBCAPS_CTRLFREQUENCY flags. 

</DD><DT><B><A NAME="com_000300065b0102ff">DSBCAPS_CTRLFREQUENCY</A></B>
</DT><DD>The buffer must have frequency control capability. 

</DD><DT><B><A NAME="com_000300065b010301">DSBCAPS_CTRLPAN</A></B>
</DT><DD>The buffer must have pan control capability. 

</DD><DT><B><A NAME="com_000300065b010302">DSBCAPS_CTRLVOLUME</A></B>
</DT><DD>The buffer must have volume control capability. 

</DD><DT><B><A NAME="com_000300065b010303">DSBCAPS_GETCURRENTPOSITION2</A></B>
</DT><DD>Indicates that <A HREF="DirectSoundBuffer.htm#com_000300064b010400">DirectSoundBuffer.getCurrentPosition</A> should use the new behavior of the play cursor. In DirectSound in DirectX 1, the play cursor was significantly ahead of the actual playing sound on emulated sound cards; it was directly behind the write cursor. Now, if the DSBCAPS_GETCURRENTPOSITION2 flag is specified, the application can get a more accurate play position. If this flag is not specified, the old behavior is preserved for compatibility. Note that this flag affects only emulated sound cards. If a DirectSound driver is present, the play cursor is accurate for DirectSound in all versions of Microsoft&#174; DirectX&#153;. 

</DD><DT><B><A NAME="com_000300065b010304">DSBCAPS_GLOBALFOCUS</A></B>
</DT><DD>The buffer is a global sound buffer. With this flag set, an application using DirectSound can continue to play its buffers if the user switches focus to another application, even if the new application uses DirectSound. The one exception is if you switch focus to a DirectSound application that uses the <A HREF="DirectXConstants.htm#com_000300065b01031a">DSSCL_EXCLUSIVE</A> or <A HREF="DirectXConstants.htm#com_000300065b01031d">DSSCL_WRITEPRIMARY</A> flag for its cooperative level. In this case, the global sounds from other applications will not be audible. 

</DD><DT><B><A NAME="com_000300065b010305">DSBCAPS_LOCHARDWARE</A></B>
</DT><DD>Forces the buffer to use hardware mixing, even if DSBCAPS_STATIC is not specified. If the device does not support hardware mixing or the required hardware memory is not available, the call to <A HREF="DirectSound.htm#com_0003000648010800">initialize</A> will fail. The application must ensure that a mixing channel will be available for this buffer; this condition is not guaranteed. 

</DD><DT><B><A NAME="com_000300065b010306">DSBCAPS_LOCSOFTWARE</A></B>
</DT><DD>Forces the buffer to be stored in software memory and use software mixing, even if DSBCAPS_STATIC is specified and hardware resources are available. 

</DD><DT><B><A NAME="com_000300065b010307">DSBCAPS_PRIMARYBUFFER</A></B>
</DT><DD>Indicates that the buffer is a primary sound buffer. If this value is not specified, a secondary sound buffer will be created. 

</DD><DT><B><A NAME="com_000300065b010308">DSBCAPS_STATIC</A></B>
</DT><DD>Indicates that the buffer will be used for static sound data. Typically, these buffers are loaded once and played many times. These buffers are candidates for hardware memory. 

</DD><DT><B><A NAME="com_000300065b010309">DSBCAPS_STICKYFOCUS</A></B>
</DT><DD>Changes the focus behavior of the sound buffer. With this flag set, an application using Microsoft &#174; DirectSound&#174; can continue to play its sticky focus buffers if the user switches to another application not using DirectSound. In this situation, the application's normal buffers are muted, but the sticky focus buffers are still audible. This is useful for non-game applications, such as movie playback (ActiveMovie&#153;), when the user wants to hear the soundtrack while typing in Microsoft&#174; Word or Microsoft&#174; Excel, for example. However, if the user switches to another DirectSound application, all sound buffers, both normal and sticky focus, in the previous application are muted. 

</DD><DT><B><A NAME="com_000300065b01030a">DSBLOCK_FROMWRITECURSOR</A></B>
</DT><DD>Locks from the current write cursor, making a call to <A HREF="DirectSoundBuffer.htm#com_000300064b010400">DirectSoundBuffer.getCurrentPosition</A> unnecessary. If this flag is specified, the <I>start</I> parameter is ignored. This flag is optional. 

</DD><DT><B><A NAME="com_000300065b01030b">DSBPLAY_LOOPING</A></B>
</DT><DD>Once the end of the audio buffer is reached, play restarts at the beginning of the buffer. Play continues until explicitly stopped. This flag must be set when playing primary sound buffers. 

</DD><DT><B><A NAME="com_000300065b01030c">DSBSTATUS_BUFFERLOST</A></B>
</DT><DD>The buffer is lost and must be restored before it can be played or locked. 

</DD><DT><B><A NAME="com_000300065b01030d">DSBSTATUS_LOOPING</A></B>
</DT><DD>The buffer is being looped. If this value is not set, the buffer will stop when it reaches the end of the sound data. Note that if this value is set, the buffer must also be playing. 

</DD><DT><B><A NAME="com_000300065b01030e">DSBSTATUS_PLAYING</A></B>
</DT><DD>The buffer is playing. If this value is not set, the buffer is stopped. 

</DD><DT><B><A NAME="com_000300065b01030f">DSCAPS_CERTIFIED</A></B>
</DT><DD>This driver has been tested and certified by Microsoft. 

</DD><DT><B><A NAME="com_000300065b010310">DSCAPS_CONTINUOUSRATE</A></B>
</DT><DD>The device supports all sample rates between the <A HREF="DSCaps.htm#com_0003000653010011">DSCaps.minSecondarySampleRate</A> and <A HREF="DSCaps.htm#com_0003000653010010">DSCaps.maxSecondarySampleRate</A> field values. Typically, this means that the actual output rate will be within +/-10Hz of the requested frequency. 

</DD><DT><B><A NAME="com_000300065b010311">DSCAPS_EMULDRIVER</A></B>
</DT><DD>The device does not have a DirectSound driver installed, so it is being emulated through the waveform-audio functions. Performance degradation should be expected. 

</DD><DT><B><A NAME="com_000300065b010312">DSCAPS_PRIMARY16BIT</A></B>
</DT><DD>The device supports primary sound buffers with 16-bit samples. 

</DD><DT><B><A NAME="com_000300065b010313">DSCAPS_PRIMARY8BIT</A></B>
</DT><DD>The device supports primary buffers with 8-bit samples. 

</DD><DT><B><A NAME="com_000300065b010314">DSCAPS_PRIMARYMONO</A></B>
</DT><DD>The device supports monophonic primary buffers. 

</DD><DT><B><A NAME="com_000300065b010315">DSCAPS_PRIMARYSTEREO</A></B>
</DT><DD>The device supports stereo primary buffers. 

</DD><DT><B><A NAME="com_000300065b010316">DSCAPS_SECONDARY16BIT</A></B>
</DT><DD>The device supports hardware-mixed secondary sound buffers with 16-bit samples. 

</DD><DT><B><A NAME="com_000300065b010317">DSCAPS_SECONDARY8BIT</A></B>
</DT><DD>The device supports hardware-mixed secondary buffers with 8-bit samples. 

</DD><DT><B><A NAME="com_000300065b010318">DSCAPS_SECONDARYMONO</A></B>
</DT><DD>The device supports hardware-mixed monophonic secondary buffers. 

</DD><DT><B><A NAME="com_000300065b010319">DSCAPS_SECONDARYSTEREO</A></B>
</DT><DD>The device supports hardware-mixed stereo secondary buffers. 

</DD><DT><B><A NAME="com_000300065b01031a">DSSCL_EXCLUSIVE</A></B>
</DT><DD>Sets the application to the exclusive level. When it has the input focus, the application will be the only one audible (sounds from applications with the <A HREF="DirectXConstants.htm#com_000300065b010304">DSBCAPS_GLOBALFOCUS</A> flag set will be muted). With this level, it also has all the privileges of the DSSCL_PRIORITY level. DirectSound will restore the hardware format, as specified by the most recent call to the DirectSoundBuffer.<A HREF="DirectSoundBuffer.htm#com_000300064b010f00">setFormat</A> method, once the application gains the input focus. (Note that DirectSound will always restore the wave format, no matter what priority level is set.) 

</DD><DT><B><A NAME="com_000300065b01031b">DSSCL_NORMAL</A></B>
</DT><DD>Sets the application to a fully cooperative status. Most applications should use this level, because it has the smoothest multitasking and resource-sharing behavior. 

</DD><DT><B><A NAME="com_000300065b01031c">DSSCL_PRIORITY</A></B>
</DT><DD>Sets the application to the priority level. Applications with this cooperative level can call the DirectSoundBuffer.<A HREF="DirectSoundBuffer.htm#com_000300064b010f00">setFormat</A> and <A HREF="DirectSound.htm#com_0003000648010100">DirectSound.compact</A> methods. 

</DD><DT><B><A NAME="com_000300065b01031d">DSSCL_WRITEPRIMARY</A></B>
</DT><DD>This is the highest priority level. The application has write access to the primary sound buffers. No secondary sound buffers in any application can be played. 

</DD><DT><B><A NAME="com_000300065b01031e">DSSPEAKER_HEADPHONE</A></B>
</DT><DD>The speakers are headphones. 

</DD><DT><B><A NAME="com_000300065b01031f">DSSPEAKER_MONO</A></B>
</DT><DD>The speakers are monaural. 

</DD><DT><B><A NAME="com_000300065b010320">DSSPEAKER_QUAD</A></B>
</DT><DD>The speakers are quadraphonic. 

</DD><DT><B><A NAME="com_000300065b010321">DSSPEAKER_STEREO</A></B>
</DT><DD>The speakers are stereo (default value). 

</DD><DT><B><A NAME="com_000300065b010322">DSSPEAKER_SURROUND</A></B>
</DT><DD>The speakers are surround sound. 

</DD><DT><B><A NAME="com_000300065b010323">JOY_BUTTON1</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010324">JOY_BUTTON10</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010325">JOY_BUTTON11</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010326">JOY_BUTTON12</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010327">JOY_BUTTON13</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010328">JOY_BUTTON14</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010329">JOY_BUTTON15</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01032a">JOY_BUTTON16</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01032b">JOY_BUTTON17</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01032c">JOY_BUTTON18</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01032d">JOY_BUTTON19</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01032e">JOY_BUTTON2</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01032f">JOY_BUTTON20</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010330">JOY_BUTTON21</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010331">JOY_BUTTON22</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010332">JOY_BUTTON23</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010333">JOY_BUTTON24</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010334">JOY_BUTTON25</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010335">JOY_BUTTON26</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010336">JOY_BUTTON27</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010337">JOY_BUTTON28</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010338">JOY_BUTTON29</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010339">JOY_BUTTON3</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01033a">JOY_BUTTON30</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01033b">JOY_BUTTON31</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01033c">JOY_BUTTON32</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01033d">JOY_BUTTON4</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01033e">JOY_BUTTON5</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b01033f">JOY_BUTTON6</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010340">JOY_BUTTON7</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010341">JOY_BUTTON8</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010342">JOY_BUTTON9</A></B>
</DT><DD>Identifier for one of the up to 32 joystick buttons. 

</DD><DT><B><A NAME="com_000300065b010343">JOY_CAL_READ3</A></B>
</DT><DD>Reads the x, y, and z axis information, and then stores the raw values in <A HREF="JoyInfo.htm#com_0003000657010008">JoyInfo.xPos</A> , <A HREF="JoyInfo.htm#com_0003000657010009">JoyInfo.yPos</A> , and <A HREF="JoyInfo.htm#com_000300065701000a">JoyInfo.zPos</A> fields. 

</DD><DT><B><A NAME="com_000300065b010344">JOY_CAL_READ4</A></B>
</DT><DD>Reads the rudder, x, y, and z axis information, and then stores the raw values in <A HREF="JoyInfo.htm#com_0003000657010005">JoyInfo.rPos</A> , <A HREF="JoyInfo.htm#com_0003000657010008">JoyInfo.xPos</A> , <A HREF="JoyInfo.htm#com_0003000657010009">JoyInfo.yPos</A> , and <A HREF="JoyInfo.htm#com_000300065701000a">JoyInfo.zPos</A> fields. 

</DD><DT><B><A NAME="com_000300065b010345">JOY_CAL_READ5</A></B>
</DT><DD>Reads the rudder, x, y, z, and u axis information, and then stores the raw values in <A HREF="JoyInfo.htm#com_0003000657010005">JoyInfo.rPos</A> , <A HREF="JoyInfo.htm#com_0003000657010008">JoyInfo.xPos</A> , <A HREF="JoyInfo.htm#com_0003000657010009">JoyInfo.yPos</A> , <A HREF="JoyInfo.htm#com_000300065701000a">JoyInfo.zPos</A> , and <A HREF="JoyInfo.htm#com_0003000657010006">JoyInfo.uPos</A> fields. 

</DD><DT><B><A NAME="com_000300065b010346">JOY_CAL_READ6</A></B>
</DT><DD>Reads the raw v axis data if a joystick minidriver is present to provide the information. Returns 0 otherwise. 

</DD><DT><B><A NAME="com_000300065b010347">JOY_CAL_READALWAYS</A></B>
</DT><DD>Reads the joystick port even if the driver does not detect a device. 

</DD><DT><B><A NAME="com_000300065b010348">JOY_CAL_READRONLY</A></B>
</DT><DD>Reads the rudder (fouth axis) information if a joystick minidriver is present to provide the data, and then stores the raw value in the <A HREF="JoyInfo.htm#com_0003000657010005">JoyInfo.rPos</A> field. Returns 0 otherwise. 

</DD><DT><B><A NAME="com_000300065b010349">JOY_CAL_READUONLY</A></B>
</DT><DD>Reads the u axis (fifth axis) information if a joystick minidriver is present to provide the data, and then stores the raw value in the <A HREF="JoyInfo.htm#com_0003000657010006">JoyInfo.uPos</A> field. Returns 0 otherwise. 

</DD><DT><B><A NAME="com_000300065b01034a">JOY_CAL_READVONLY</A></B>
</DT><DD>Reads the v axis (sixth axis) information if a joystick minidriver is present to provide the data, and then stores the raw value in the <A HREF="JoyInfo.htm#com_0003000657010007">JoyInfo.vPos</A> field. Returns 0 otherwise. 

</DD><DT><B><A NAME="com_000300065b01034b">JOY_CAL_READXONLY</A></B>
</DT><DD>Reads the x axis information if a joystick minidriver is present to provide the data, and then stores the raw value in the <A HREF="JoyInfo.htm#com_0003000657010008">JoyInfo.xPos</A> field. 

</DD><DT><B><A NAME="com_000300065b01034c">JOY_CAL_READXYONLY</A></B>
</DT><DD>Reads the x and y axis information if a joystick minidriver is present to provide the data, and then stores the raw value in the <A HREF="JoyInfo.htm#com_0003000657010008">JoyInfo.xPos</A> and <A HREF="JoyInfo.htm#com_0003000657010009">JoyInfo.yPos</A> fields respectively. 

</DD><DT><B><A NAME="com_000300065b01034d">JOY_CAL_READYONLY</A></B>
</DT><DD>Reads the y axis information if a joystick minidriver is present to provide the data, and then stores the raw value in the <A HREF="JoyInfo.htm#com_0003000657010009">JoyInfo.yPos</A> field. 

</DD><DT><B><A NAME="com_000300065b01034e">JOY_CAL_READZONLY</A></B>
</DT><DD>Reads the z axis information if a joystick minidriver is present to provide the data, and then stores the raw value in the <A HREF="JoyInfo.htm#com_000300065701000a">JoyInfo.zPos</A> field. 

</DD><DT><B><A NAME="com_000300065b01034f">JOY_POVBACKWARD</A></B>
</DT><DD>Point-Of-View hat is pressed backward. The value 18,000 represents an orientation of 180.00 degrees. 

</DD><DT><B><A NAME="com_000300065b010350">JOY_POVCENTERED</A></B>
</DT><DD>Point-Of-View hat is in the neutral position. The value -1 means the POV hat has no angle to report. 

</DD><DT><B><A NAME="com_000300065b010351">JOY_POVFORWARD</A></B>
</DT><DD>Point-Of_View hat is pressed forward. The value 0 represents an orientation of 0.00 degrees. 

</DD><DT><B><A NAME="com_000300065b010352">JOY_POVLEFT</A></B>
</DT><DD>Point-Of-View hat is pressed to the left. The value 27,000 represents an orientation of 270.00 degrees. 

</DD><DT><B><A NAME="com_000300065b010353">JOY_POVRIGHT</A></B>
</DT><DD>Point-Of-View hat is pressed to the right. The value 9000 represents an orientation of 90.00 degrees. 

</DD><DT><B><A NAME="com_000300065b010354">JOY_RETURNALL</A></B>
</DT><DD>Equivalent to setting all of the JOY_RETURN* values except <A HREF="DirectXConstants.htm#com_000300065b01035a">JOY_RETURNRAWDATA</A>. 

</DD><DT><B><A NAME="com_000300065b010355">JOY_RETURNBUTTONS</A></B>
</DT><DD>The buttons field contains valid state information for each joystick button. 

</DD><DT><B><A NAME="com_000300065b010356">JOY_RETURNCENTERED</A></B>
</DT><DD>Centers the joystick neutral position to the middle value of each movement axis. 

</DD><DT><B><A NAME="com_000300065b010357">JOY_RETURNPOV</A></B>
</DT><DD>The pov field contains valid information about the Point-Of-View control, expressed in discrete units. 

</DD><DT><B><A NAME="com_000300065b010358">JOY_RETURNPOVCTS</A></B>
</DT><DD>The pov field contains valid information about the Point-Of-View control, expressed in continuous, one-hundredth of a degree units. 

</DD><DT><B><A NAME="com_000300065b010359">JOY_RETURNR</A></B>
</DT><DD>The <A HREF="JoyInfo.htm#com_0003000657010005">JoyInfo.rPos</A> field contains valid rudder information. This indicates the existance of a fourth axis. 

</DD><DT><B><A NAME="com_000300065b01035a">JOY_RETURNRAWDATA</A></B>
</DT><DD>Indicates that uncalibrated joystick readings are stored in this class. 

</DD><DT><B><A NAME="com_000300065b01035b">JOY_RETURNU</A></B>
</DT><DD>The <A HREF="JoyInfo.htm#com_0003000657010006">JoyInfo.uPos</A> field contains valid data for the fifth axis of the joystick. If this axis is not available, 0 is returned. 

</DD><DT><B><A NAME="com_000300065b01035c">JOY_RETURNV</A></B>
</DT><DD>The <A HREF="JoyInfo.htm#com_0003000657010007">JoyInfo.vPos</A> field contains valid data for the sixth axis of the joystick. If this axis is not available, 0 is returned. 

</DD><DT><B><A NAME="com_000300065b01035d">JOY_RETURNX</A></B>
</DT><DD>The <A HREF="JoyInfo.htm#com_0003000657010008">JoyInfo.xPos</A> field contains valid data for the x coordinate of the joystick. 

</DD><DT><B><A NAME="com_000300065b01035e">JOY_RETURNY</A></B>
</DT><DD>The <A HREF="JoyInfo.htm#com_0003000657010009">JoyInfo.yPos</A> member contains valid data for the y coordinate of the joystick. 

</DD><DT><B><A NAME="com_000300065b01035f">JOY_RETURNZ</A></B>
</DT><DD>The <A HREF="JoyInfo.htm#com_000300065701000a">JoyInfo.zPos</A> field contains valid data for the z-coordinate of the joystick. 

</DD><DT><B><A NAME="com_000300065b010360">JOY_USEDEADZONE</A></B>
</DT><DD>Expand the range for the neutral position of the joystick. The joystick driver returs a constant value for all positions in the dead zone. 

</DD><DT><B><A NAME="com_000300065b010361">JOYCAPS_HASPOV</A></B>
</DT><DD>The joystick has Point-Of-View information. 

</DD><DT><B><A NAME="com_000300065b010362">JOYCAPS_HASR</A></B>
</DT><DD>The joystick has rudder (fourth axis) information. 

</DD><DT><B><A NAME="com_000300065b010363">JOYCAPS_HASU</A></B>
</DT><DD>The joystick has u-coordinate information. 

</DD><DT><B><A NAME="com_000300065b010364">JOYCAPS_HASV</A></B>
</DT><DD>The joystick has v-coordinate information. 

</DD><DT><B><A NAME="com_000300065b010365">JOYCAPS_HASZ</A></B>
</DT><DD>The joystick has z-coordinate information 

</DD><DT><B><A NAME="com_000300065b010366">JOYCAPS_POV4DIR</A></B>
</DT><DD>The joystick Point-Of-View supports discrete values. 

</DD><DT><B><A NAME="com_000300065b010367">JOYCAPS_POVCTS</A></B>
</DT><DD>The joystick Point-Of-View supports continuous degree bearings. 

</DD><DT><B><A NAME="com_000300065b010368">JOYERR_BASE</A></B>
</DT><DD></DD><DT><B><A NAME="com_000300065b010369">JOYERR_NOCANDO</A></B>
</DT><DD>Request was not completed. 

</DD><DT><B><A NAME="com_000300065b01036a">JOYERR_NOERROR</A></B>
</DT><DD>There is no error. 

</DD><DT><B><A NAME="com_000300065b01036b">JOYERR_PARMS</A></B>
</DT><DD>Bad parameters. 

</DD><DT><B><A NAME="com_000300065b01036c">JOYERR_UNPLUGGED</A></B>
</DT><DD>The joystick is unplugged. 

</DD><DT><B><A NAME="com_000300065b01036d">JOYSTICKID1</A></B>
</DT><DD>Identifier of the joystick. 

</DD><DT><B><A NAME="com_000300065b01036e">JOYSTICKID2</A></B>
</DT><DD>Identifier of the joystick. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
