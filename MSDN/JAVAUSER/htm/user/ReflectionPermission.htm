<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class ReflectionPermission</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="ReflectionPermission.htm#com_0003000e0d010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="ReflectionPermission.htm#com_0003000e0d020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="ReflectionPermission.htm#com_0003000e0d030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="PropertyPermission.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_secp.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="ReflectionRequest.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.security.permissions</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class ReflectionPermission</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class ReflectionPermission implements <A HREF="IPermission.htm">IPermission</A>, 
            <A HREF="IEncodablePermission.htm">IEncodablePermission</A>, <A HREF="IAdjustablePermission.htm">IAdjustablePermission</A>
{
  // Fields
  public static int <A HREF="ReflectionPermission.htm#com_0003000e0d030001">ALL</A>;
  public static int <A HREF="ReflectionPermission.htm#com_0003000e0d030002">DIFFERENTLOADER</A>;
  public static int <A HREF="ReflectionPermission.htm#com_0003000e0d030003">NONE</A>;
  public static int <A HREF="ReflectionPermission.htm#com_0003000e0d030004">SAMELOADER</A>;
  public static int <A HREF="ReflectionPermission.htm#com_0003000e0d030005">SYSTEMLOADER</A>;

  // Constructors
  public <A HREF="ReflectionPermission.htm#com_0003000e0d010100">ReflectionPermission</A>();

  // Methods
  public void <A HREF="ReflectionPermission.htm#com_0003000e0d020100">adjustPermission</A> (String tag, Object adjustment);
  public void <A HREF="ReflectionPermission.htm#com_0003000e0d020200">check</A>(Object param);
  public IPermission <A HREF="ReflectionPermission.htm#com_0003000e0d020300">combine</A> (IPermission source2);
  public int <A HREF="ReflectionPermission.htm#com_0003000e0d020400">compareSet</A>(Object target);
  public IPermission <A HREF="ReflectionPermission.htm#com_0003000e0d020500">copy</A>();
  public boolean <A HREF="ReflectionPermission.htm#com_0003000e0d020600">decode</A>(String tag, InputStream data);
  public boolean <A HREF="ReflectionPermission.htm#com_0003000e0d020700">encode</A>(String tag, OutputStream out);
  public int <A HREF="ReflectionPermission.htm#com_0003000e0d020800">getAllowedAccess</A>(int accessType);
  public int <A HREF="ReflectionPermission.htm#com_0003000e0d020900">getAllowedDeclaredAccess</A>();
  public int <A HREF="ReflectionPermission.htm#com_0003000e0d020a00">getAllowedPublicAccess</A>();
  public ClassLoader <A HREF="ReflectionPermission.htm#com_0003000e0d020b00">getAssociatedLoader</A>();
  public String <A HREF="ReflectionPermission.htm#com_0003000e0d020c00">mapFormat</A>(String format);
  public void <A HREF="ReflectionPermission.htm#com_0003000e0d020d00">reset</A>();
  public void <A HREF="ReflectionPermission.htm#com_0003000e0d020e00">setAllowedDeclaredAccess</A>(int loadertypes);
  public void <A HREF="ReflectionPermission.htm#com_0003000e0d020f00">setAllowedPublicAccess</A>(int loadertypes);
  public void <A HREF="ReflectionPermission.htm#com_0003000e0d021000">setAssociatedLoader</A>(ClassLoader ldr);
  public String[] <A HREF="ReflectionPermission.htm#com_0003000e0d021100">supportedFormats</A>();
  public String <A HREF="ReflectionPermission.htm#com_0003000e0d021200">toString</A>();
}
</FONT></PRE>
<P>This class represents a permission that controls the ability to perform reflection operations. The <A HREF="StandardSecurityManager.htm">StandardSecurityManager</A> checks for this permission type when performing the <A HREF="StandardSecurityManager.htm#com_0003000d0c020e00">checkMemberAccess</A> operation. 
<P>A <B>ReflectionPermission</B> distinguishes between two different types of reflection operations: 
<DL>
<DT>Public 
 </DT><DD>Reflective access to a public member of some class. This type of access is specified by the constant <B>java.lang.reflect.Member.PUBLIC</B>. 
</DD><DT>Declared 
 </DT><DD>Reflective access to any member of a given class. This type of access is specified by the constant <B>java.lang.reflect.Member.DECLARED</B>. 
</DD></DL>
<P>A <B>ReflectionPermission</B> object further distinguishes between types of reflection operations, depending on the type of class being reflected. The types of classes that can be reflected are as follows: 
<DL>
<DT><A HREF="ReflectionPermission.htm#com_0003000e0d030004">SAMELOADER</A> 
 </DT><DD>A class from the same loader as the class initiating the reflection operation. 
</DD><DT><A HREF="ReflectionPermission.htm#com_0003000e0d030002">DIFFERENTLOADER</A> 
 </DT><DD>A non-system class from a loader other than that of the class that is initiating the reflection operation. 
</DD><DT><A HREF="ReflectionPermission.htm#com_0003000e0d030005">SYSTEMLOADER</A> 
 </DT><DD>A System class. 
</DD></DL>
<P>Also see <A HREF="ReflectionRequest.htm">com.ms.security.permissions.ReflectionRequest</A>


<H3 STYLE="color:#333366"><A NAME="com_0003000e0d010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000e0d010100">ReflectionPermission</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public ReflectionPermission();
</FONT></PRE>
<P><P>Creates a new <A HREF="ReflectionPermission.htm">ReflectionPermission</A> instance. The new instance does not allow reflective access to any classes. 

</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000e0d020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000e0d020100">adjustPermission</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void adjustPermission (String tag, Object adjustment);
</FONT></PRE>
<P><P>Adjusts the permission object with some runtime state. The <A HREF="ReflectionPermission.htm">ReflectionPermission</A> only responds to the "classloader" adjustment type. This method expects the <I>adjustment</I> parameter to be a <B>ClassLoader</B> instance. All other adjustment types are ignored. The class loader instance used for the <I>adjustment</I> parameter is the loader that <A HREF="ReflectionPermission.htm#com_0003000e0d030004">SAMELOADER</A> will refer to after this method adjusts the class loader. 
<P><B>Note</B>  The "classloader" adjustment to this permission is equivalent to an explicit <A HREF="ReflectionPermission.htm#com_0003000e0d021000">setAssociatedLoader</A> call. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The adjustment type. Every value except "classloader" is ignored. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>adjustment</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">This parameter must be an instance of <B>java.lang.ClassLoader</B> for the "classloader" tag. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020200">check</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void check(Object param);
</FONT></PRE>
<P><P>Determines whether the permission object allows the specified action. The <I>request</I> parameter represents a request to perform a particular action. The type of the parameter depends on the type of the permission object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>param</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object that represents the action for which permission is being checked. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>SecurityException</B>
 if the state of the permission object indicates that the action is not allowed. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020300">combine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IPermission combine (IPermission source2);
</FONT></PRE>
<P><P>Creates and returns a new <A HREF="ReflectionPermission.htm">ReflectionPermission</A> object that is a combination of the current permission object and the specified permission object. The new object allows access to exactly those resources allowed by either one of the permission objects that it was constructed from. 

<P><B>Return Value:</B> <P>Returns the resulting <A HREF="ReflectionPermission.htm">ReflectionPermission</A> object. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>source2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The permission object that indicates additional resources to allow access to. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020400">compareSet</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int compareSet(Object target);
</FONT></PRE>
<P><P>Compares the <A HREF="ReflectionPermission.htm">ReflectionPermission</A> instance with a specified permission object 

<P><B>Return Value:</B> <P>Returns one of the following constants: 
<UL><LI><A HREF="SetComparison.htm#com_000300141a020001">DISJOINT</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020002">EMPTY</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020006">OVERLAP</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020005">EQUAL</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020007">SUBSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020008">SUPERSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020003">EMPTY_SUBSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020004">EMPTY_SUPERSET</A> 
</UL>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The permission object that the <A HREF="ReflectionPermission.htm">ReflectionPermission</A> instance is compared with. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020500">copy</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IPermission copy();
</FONT></PRE>
<P><P>Retrieves a copy of the <A HREF="ReflectionPermission.htm">ReflectionPermission</A> instance. 

<P><B>Return Value:</B> <P>Returns the copy of the <A HREF="ReflectionPermission.htm">ReflectionPermission</A> instance. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020600">decode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean decode(String tag, InputStream data);
</FONT></PRE>
<P><P>Decodes a source according to the specified tag. This method implements the <A HREF="IEncodablePermission.htm#com_0003000d0e010100">IEncodablePermission.decode</A> method. 

<P><B>Return Value:</B> <P>Returns true if the decoding process is completed successfully; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The tag used for the decoding. It is the same tag that was used to encode the data. 

</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stream that contains the encoded permission. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020700">encode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean encode(String tag, OutputStream out);
</FONT></PRE>
<P><P>Encodes a source according to the specified tag. This method implements the <A HREF="IEncodablePermission.htm#com_0003000d0e010200">IEncodablePermission.encode</A> method. 

<P><B>Return Value:</B> <P>Returns true if the encoding process is completed successfully; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string that indicates how to encode the data. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>out</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stream to write the encoded data to. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020800">getAllowedAccess</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getAllowedAccess(int accessType);
</FONT></PRE>
<P><P>Retrieves the types of classes that the permission object allows access to, based on a reflective access type. 

<P><B>Return Value:</B> <P>Returns the types of classes that the permission object allows access to. This will be one of the following: <A HREF="ReflectionPermission.htm#com_0003000e0d030004">SAMELOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030002">DIFFERENTLOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030005">SYSTEMLOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030001">ALL</A>, or <A HREF="ReflectionPermission.htm#com_0003000e0d030003">NONE</A>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>accessType</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The reflective access type. It must be either <B>java.lang.reflect.Member.PUBLIC</B> or <B>java.lang.reflect.Member.DECLARED</B>. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the <I>accessType</I> parameter is not equal to <B>java.lang.reflect.Member.PUBLIC</B> or <B>java.lang.reflect.Member.DECLARED</B>. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020900">getAllowedDeclaredAccess</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getAllowedDeclaredAccess();
</FONT></PRE>
<P><P>Retrieves the types of classes that the permission object allows declared access to. 

<P><B>Return Value:</B> <P>Returns the types of classes that the permission object allows declared access to. This will be one of the following: <A HREF="ReflectionPermission.htm#com_0003000e0d030004">SAMELOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030002">DIFFERENTLOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030005">SYSTEMLOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030001">ALL</A>, or <A HREF="ReflectionPermission.htm#com_0003000e0d030003">NONE</A>. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020a00">getAllowedPublicAccess</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getAllowedPublicAccess();
</FONT></PRE>
<P><P>Retrieves the types of classes that the permission object allows public access to. 

<P><B>Return Value:</B> <P>Returns the types of classes that the permission object allows public access to. This will be one of the following: <A HREF="ReflectionPermission.htm#com_0003000e0d030004">SAMELOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030002">DIFFERENTLOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030005">SYSTEMLOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030001">ALL</A>, or <A HREF="ReflectionPermission.htm#com_0003000e0d030003">NONE</A>. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020b00">getAssociatedLoader</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public ClassLoader getAssociatedLoader();
</FONT></PRE>
<P><P>Retrieves the class loader associated with this permission object. 

<P><B>Return Value:</B> <P>Returns the class loader associated with the permission object. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020c00">mapFormat</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String mapFormat(String format);
</FONT></PRE>
<P><P>Retrieves a permission-specific tag when given an encoding format. The tag can be used with the encode and decode methods to specify an encoding type.  This method implements the <A HREF="IEncodablePermission.htm#com_0003000d0e010300">IEncodablePermission.mapFormat</A> method. 
<P><B>Return Value:</B> <P>Returns the tag used to encode the data in the given format. If the specified format is not supported, null is returned. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>format</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The format that the tag is requested for. If <I>format</I> is null, the default format for the class is returned. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020d00">reset</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void reset();
</FONT></PRE>
<P><P>Resets the permission object to a state in which it allows no reflection access. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020e00">setAllowedDeclaredAccess</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setAllowedDeclaredAccess(int loadertypes);
</FONT></PRE>
<P><P>Sets the types of classes that the permission object allows declared reflective access to. The classes are specified by the loader types. 
<P>For example, the following code indicates that the permission should only allow declared reflective access to classes from the same loader. 
<PRE><FONT FACE="Courier" SIZE="2">
    ...
    ReflectionPermission perm = new ReflectionPermission();
    perm.setAssociatedLoader( some loader );
    perm.setAllowedDeclaredAccess(ReflectionPermission.SAMELOADER);
    ...
</FONT></PRE>
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>loadertypes</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The types of classes that the permission object will allow declared reflective access to. This should be one of the following types: <A HREF="ReflectionPermission.htm#com_0003000e0d030004">SAMELOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030002">DIFFERENTLOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030005">SYSTEMLOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030001">ALL</A>, or <A HREF="ReflectionPermission.htm#com_0003000e0d030003">NONE</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d020f00">setAllowedPublicAccess</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setAllowedPublicAccess(int loadertypes);
</FONT></PRE>
<P><P>Sets the types of classes that the permission object allows public reflective access to. The classes are specified by the loader types. 
<P>For example, the following code indicates that the permission should allow reflective access to public members of all classes. 
<PRE><FONT FACE="Courier" SIZE="2">
    ...
    ReflectionPermission perm = new ReflectionPermission();
    perm.setAllowedPublicAccess(ReflectionPermission.ALL);
    ...
</FONT></PRE>
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>loadertypes</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The types of classes that the permission object allows public reflective access to. This should be one of the following types: <A HREF="ReflectionPermission.htm#com_0003000e0d030004">SAMELOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030002">DIFFERENTLOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030005">SYSTEMLOADER</A>, <A HREF="ReflectionPermission.htm#com_0003000e0d030001">ALL</A>, or <A HREF="ReflectionPermission.htm#com_0003000e0d030003">NONE</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d021000">setAssociatedLoader</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setAssociatedLoader(ClassLoader ldr);
</FONT></PRE>
<P><P>Sets the class loader that this permission is associated with. The associated class loader should be the class loader that loaded the classes that this permission will be assigned to. The loader access type <A HREF="ReflectionPermission.htm#com_0003000e0d030004">SAMELOADER</A> refers to the class loader set by this method. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ldr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The class loader object. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d021100">supportedFormats</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String[] supportedFormats();
</FONT></PRE>
<P><P>Retrieves a list of supported formats. This method implements the <A HREF="IEncodablePermission.htm#com_0003000d0e010400">IEncodablePermission.supportedFormats</A> method. 

<P><B>Return Value:</B> <P>Returns the supported formats. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e0d021200">toString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String toString();
</FONT></PRE>
<P><P>Converts the permission object to its string representation. 

<P><B>Return Value:</B> <P>Returns the string representation of the permission object. 

</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000e0d030000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003000e0d030001">ALL</A></B>
</DT><DD>A loader type that indicates all classes. 

</DD><DT><B><A NAME="com_0003000e0d030002">DIFFERENTLOADER</A></B>
</DT><DD>A loader type that refers to any loaders other than the one associated with this permission instance. If no loader has been associated with this permission, this loader type refers to all non-system classes. 

</DD><DT><B><A NAME="com_0003000e0d030003">NONE</A></B>
</DT><DD>A loader type that indicates no classes. 

</DD><DT><B><A NAME="com_0003000e0d030004">SAMELOADER</A></B>
</DT><DD>A loader type that refers to the loader that has been associated with this permission object with the <A HREF="ReflectionPermission.htm#com_0003000e0d021000">setAssociatedLoader</A> method. If no loader has been associated with this permission instance, this loader type has no meaning. 

</DD><DT><B><A NAME="com_0003000e0d030005">SYSTEMLOADER</A></B>
</DT><DD>A loader type that indicates system classes. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
