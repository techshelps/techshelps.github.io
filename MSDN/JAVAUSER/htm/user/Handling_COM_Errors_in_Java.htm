<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handling COM Errors in Java</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Low-Level Java/COM Integration"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Handling_COM_Errors_in_Java.htm#javacom_0008000305010000">HRESULTs</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Handling_COM_Errors_in_Java.htm#javacom_0008000305020000">Try-Catch Blocks</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Handling_COM_Errors_in_Java.htm#javacom_0008000305030000">An Error Handling Example</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="365" VALIGN="bottom"><IMG SRC="art/jnative2.gif" WIDTH="365" HEIGHT="27"  BORDER=0 ALT="Java & Native Code"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom">&nbsp;</TD><TD ALIGN="center" VALIGN="bottom"><A HREF="Type_Mappings_Between_Java_and_COM.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="javacom.htm"><IMG SRC="art/homenrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Java/Com"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="COM_Programming_in_Java.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="365" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Low-Level Java/COM Integration</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">&nbsp;</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Java/Com</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Handling COM Errors in Java</H2>
<P>This section tells you what <B>HRESULT</B>s are and how they are wrapped in <A HREF="ComFailException.htm">ComFailException</A> objects. Then try-catch blocks are explained, and an example with error handling is presented.

<H3 STYLE="color:#333366"><A NAME="javacom_0008000305010000">HRESULTs</A></H3><P>The primary way that COM methods communicate failure information back to their callers is through the <B>HRESULT</B>, which every COM interface method returns. COM methods return this value, which is a 32-bit error code, to indicate success or failure of a method call. In almost all cases, only one success code is defined (S_OK), but many failure codes are defined. For a list of the values of common system-defined <B>HRESULT</B>s, see the <A HREF="ComFailException.htm">ComFailException</A> class. For domain-specific errors, consult the documentation for the component you are using. 

<P>The documentation for many components describes errors in terms of Visual Basic <B>Err.Number</B> values rather than <B>HRESULT</B>s. However, some components use a convention where there is a correspondence between the <B>HRESULT</B> returned and the <B>Err.Number</B> value. For example, if you are using Data Access Objects (DAO) or Remote Data Objects (RDO), you can call the <A HREF="ComException.htm#com_0003000504020300">getHResult</A> method on the <A HREF="ComFailException.htm">ComFailException</A> object, take the lower 16 bits of the returned <B>HRESULT</B>, convert that value to decimal, and check it against the errors described in the DAO or RDO documentation.

<P>The Microsoft VM defines a class called com.ms.com.<A HREF="ComException.htm">ComException</A>. This class wraps the <B>HRESULT</B> error code, and is used to communicate error information from COM back to Java whenever a COM method fails. The <B>ComException</B> class defines a <A HREF="ComException.htm#com_0003000504020300">getHResult</A> method that returns the error code, in the form of a Java int, describing the specific error. You can also use the <B>getMessage</B> method (defined by the Java class <B>Throwable</B>) to retrieve the detail message.

<H3 STYLE="color:#333366"><A NAME="javacom_0008000305020000">Try-Catch Blocks</A></H3><P>The Microsoft VM throws an exception when a call to a COM interface method returns an <B>HRESULT</B> containing a failure code. To find out about errors that occur during method calls, Java programmers use try-catch blocks to catch exceptions thrown by the virtual machine. Because the <A HREF="ComException.htm">ComException</A> class is derived from the Java class <B>RuntimeException</B>, the compiler does not strictly require a throws clause in the method declaration. Nor does the compiler require try-catch blocks. Since runtime exceptions are unchecked by the compiler, you can use try-catch blocks when you decide they are needed.

<P>Because <A HREF="ComException.htm">ComException</A> is an abstract class, a <B>ComException</B> object cannot be constructed directly. However, a <A HREF="ComFailException.htm">ComFailException</A> object or a <A HREF="ComSuccessException.htm">ComSuccessException</A> object can be constructed. Typically, you try to catch <B>ComFailException</B> objects so that you know when something has gone wrong during a call to a COM method. The following example demonstrates the use of a try-catch block:

<PRE><FONT FACE="Courier" SIZE="2">
try
{
    // Call COM method.
}
catch (com.ms.com.ComFailException e)
{
    System.out.println( "COM Exception:" );
    System.out.println( e.getHResult() );
    System.out.println( e.getMessage() );
}
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="javacom_0008000305030000">An Error Handling Example</A></H3><P>The following Java code is similar to the code we saw in the <A HREF="Implementing_COM_Objects.htm">Implementing COM Objects</A> section; however, error handling has been added.
<PRE><FONT FACE="Courier" SIZE="2">
import robocorp.bots.*;
...
try
{
&#009;Robot robbie = new Robot();
&#009;robbie.GoForward(10);
&#009;robbie.Turn(-90);
}
catch(Throwable e)
{
&#009;System.out.println("Something bad happened!");
}
</FONT></PRE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Top"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
