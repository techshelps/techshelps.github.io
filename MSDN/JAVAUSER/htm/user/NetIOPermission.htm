<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class NetIOPermission</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="NetIOPermission.htm#com_0003000e08010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="NetIOPermission.htm#com_0003000e08020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="NetIOPermission.htm#com_0003000e08030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="MultimediaPermission.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_secp.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="NetIORequest.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.security.permissions</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class NetIOPermission</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class NetIOPermission implements <A HREF="IPermission.htm">IPermission</A>, 
            <A HREF="IEncodablePermission.htm">IEncodablePermission</A>, <A HREF="IAdjustablePermission.htm">IAdjustablePermission</A>
{
  // Fields
  public static final int <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e0803000e">HOSTS</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e0803000f">IPS</A>;
  public static final int <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>;

  // Constructors
  public <A HREF="NetIOPermission.htm#com_0003000e08010100">NetIOPermission</A> ();

  // Methods
  public void <A HREF="NetIOPermission.htm#com_0003000e08020100">addAddress</A> (int flags, InetAddress addr);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020200">addAddress</A> (int flags, InetAddress addr,
        IntRanges ports);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020300">addAllFormsByName</A> (int flags, String spec,
        IntRanges ports);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020400">addAllFormsByName</A> (int flags, String spec);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020500">addConnectHost</A> (String hostspec, boolean fAllow);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020600">addGlobalPortRules</A> (int flags, String spec);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020700">addGlobalPorts</A> (int flags, int start, int end);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020800">addHost</A> (int flags, String hostspec);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020900">addHost</A> (int flags, String hostspec, IntRanges ports);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020a00">addHostRules</A> (int flags, String spec);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020b00">addIP</A> (int flags, int addr);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020c00">addIP</A> (int flags, int addr, IntRanges ports);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020d00">addIP</A> (int flags, byte[] addr);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020e00">addIP</A> (int flags, byte[] addr, IntRanges ports);
  public void <A HREF="NetIOPermission.htm#com_0003000e08020f00">addIPRules</A> (int flags, String spec);
  public void <A HREF="NetIOPermission.htm#com_0003000e08021000">addIPs</A> (int flags, int s, int e, IntRanges ports);
  public void <A HREF="NetIOPermission.htm#com_0003000e08021100">addIPs</A> (int flags, int s, int e);
  public void <A HREF="NetIOPermission.htm#com_0003000e08021200">addIPs</A> (int flags, byte[] s, byte[] e,
        IntRanges ports);
  public void <A HREF="NetIOPermission.htm#com_0003000e08021300">addIPs</A> (int flags, byte[] s, byte[] e);
  public void <A HREF="NetIOPermission.htm#com_0003000e08021400">addPattern</A> (int flags, String spec);
  public void <A HREF="NetIOPermission.htm#com_0003000e08021500">addPattern</A> (int flags, String spec, IntRanges ports);
  public void <A HREF="NetIOPermission.htm#com_0003000e08021600">adjustPermission</A> (String tag, Object adjustment);
  public void <A HREF="NetIOPermission.htm#com_0003000e08021700">check</A> (Object param) throws SecurityException;
  public IPermission <A HREF="NetIOPermission.htm#com_0003000e08021800">combine</A> (IPermission source2);
  public int <A HREF="NetIOPermission.htm#com_0003000e08021900">compareSet</A> (Object target);
  public IPermission <A HREF="NetIOPermission.htm#com_0003000e08021a00">copy</A>();
  public boolean <A HREF="NetIOPermission.htm#com_0003000e08021b00">decode</A>(String tag, InputStream data);
  public boolean <A HREF="NetIOPermission.htm#com_0003000e08021c00">encode</A>(String tag, OutputStream out);
  public boolean <A HREF="NetIOPermission.htm#com_0003000e08021d00">getCanConnectToFileURLCodeBase</A>();
  public boolean <A HREF="NetIOPermission.htm#com_0003000e08021e00">getCanConnectToNonFileURLCodeBase</A>();
  public String <A HREF="NetIOPermission.htm#com_0003000e08021f00">getGlobalPortRules</A> (int flags);
  public IntRanges <A HREF="NetIOPermission.htm#com_0003000e08022000">getGlobalPorts</A> (int flags);
  public String <A HREF="NetIOPermission.htm#com_0003000e08022100">getHostRules</A> (int flags);
  public WildcardExpression <A HREF="NetIOPermission.htm#com_0003000e08022200">getHosts</A> (int flags);
  public String <A HREF="NetIOPermission.htm#com_0003000e08022300">getIPRules</A> (int flags);
  public IntRanges <A HREF="NetIOPermission.htm#com_0003000e08022400">getIPs</A> (int flags);
  public IntRanges[] <A HREF="NetIOPermission.htm#com_0003000e08022500">getPorts</A> (int flags);
  public String <A HREF="NetIOPermission.htm#com_0003000e08022600">mapFormat</A>(String format);
  public void <A HREF="NetIOPermission.htm#com_0003000e08022700">reset</A>();
  public void <A HREF="NetIOPermission.htm#com_0003000e08022800">setCanConnectToFileURLCodeBase</A> (boolean f);
  public void <A HREF="NetIOPermission.htm#com_0003000e08022900">setCanConnectToNonFileURLCodeBase</A> (boolean f);
  public String[] <A HREF="NetIOPermission.htm#com_0003000e08022a00">supportedFormats</A>();
  public String <A HREF="NetIOPermission.htm#com_0003000e08022b00">toString</A>();
}
</FONT></PRE>
<P>This class represents a permission that controls the ability to perform networking operations. A <B>NetIOPermission</B> object contains components for the following three basic types of network operations: 
<DL>
<DT><A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> 
 </DT><DD>The ability to have general communication with specific hosts. 
</DD><DT><A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> 
 </DT><DD>The ability to accept connections on specific interfaces and ports. The ability to accept a connection from a specific host is controlled by the <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> rules. 
</DD><DT><A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A> 
 </DT><DD>The ability to join specific multicast groups. Communication with specific members of the multicast group is controlled by the <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> rules. 
</DD></DL>
<P>For each type of operation, the permissions are specified as ranges of IP (Internet Protocol) addresses, hostname patterns, and ports. Ports can be specified for individual ranges or patterns, or for all ranges or patterns. The global port rules supercede any individual port rules. 
<P>All the permission's operators are incremental. The <A HREF="NetIOPermission.htm#com_0003000e08022700">reset</A> method can be used to clear an existing permission of all components. 
<P>The components of the permission can be added individually or one hostname mask/address range/port range at a time. Multiple components can also be added in string format. For example, the string ".microsoft.com;myhost.com" could be used to indicate the specific host named "myhost.com." and all host names that end in ".microsoft.com". 
<P>Address ranges have the normal dotted IP form. An asterisk (*) can be used in place of a byte to represent any valid byte. A single address can be specified, or starting and ending ranges can be delimited by a dash. 
<P>Port lists must have the same syntax accepted by the string constructors of the <A HREF="IntRanges.htm#com_0003001408000000">com.ms.util.IntRanges</A> class. For example, "80,1024-2000" is a valid port list. Ports can be specified on individual hostname patterns or addresses by appending a colon and a port range. For example, "*.microsoft.com:80" and "1.2.*.*:1024-5000" are both valid port specifications. 
<P>For hostnames, multiple addresses and address ranges are delimited by semicolons. For example, "1.2.*.*;4.5.6.7-4.5.6.50" is a valid hostname. 
<P>Some of the addXXX methods in this class take a flag parameter that consists of two values combined with a logical OR operator (|). The first value specifies the connection type by using one or more of <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>. The second value specifies <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the address, port, or hostname being added is supposed to use the exclude or include rules. An <B>IllegalArgumentException</B> is thrown by these methods if the arguments don't apply to one or more of the specified types. 
<P>The flags can be used to update multiple aspects of the permission with one method call. For example, the following code sample adds <I>"localhost"</I> as a hostname that can be both connected and bound to. 
<PRE><FONT FACE="Courier" SIZE="2">
     NetIOPermission data;
     data.addHost(NetIOPermission.ALLOWALL, "localhost");
</FONT></PRE>
<P>The getXXX methods also take a flag parameter that consists of two values combined with a logical OR operator (|). To indicate the connection type, you must specify exactly one of <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>. If more than one of these is specified, an <B>IllegalArgumentException</B> is thrown. For the second value, you should specify <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A>. 
<P>For your convenience, combination flags are provided to use for the flag parameters. With these values, you don't have to use the OR (|) operator. 
<UL><LI><A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A> 
<LI><A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A> 
<LI><A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A> 
<LI><A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A> 
<LI><A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A> 
<LI><A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A> 
<LI><A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A> 
<LI><A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A> 
</UL>
<P>The addXXX methods accept all of the flags in the previous list, but the getXXX methods do not accept the last two. 
<P>Hostname masks are input to the permission as strings and retrieved as expressions. 
<P>IP addresses are only supported in 32-bit lengths. Addresses are added as integers, byte arrays (for use with the <B>java.net.InetAddress.getAddress</B> method), or as <A HREF="IntRanges.htm#com_0003001408000000">com.ms.util.IntRanges</A>. 
<P>The <A HREF="NetIOPermission.htm#com_0003000e08022800">setCanConnectToFileURLCodeBase</A> and <A HREF="NetIOPermission.htm#com_0003000e08022900">setCanConnectToNonFileURLCodeBase</A> methods are used to control whether the permission allows connections to the host from which the classes with the permission were loaded. If set, the permission can be updated with the codebase by the <A HREF="PermissionDataSet.htm#com_0003000d03020300">com.ms.security.PermissionDataSet.adjustForCodebase</A> method. 

<H3 STYLE="color:#333366"><A NAME="com_0003000e08010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000e08010100">NetIOPermission</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public NetIOPermission ();
</FONT></PRE>
<P><P>Constructs an empty networking permission. 

</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000e08020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000e08020100">addAddress</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addAddress (int flags, InetAddress addr);
</FONT></PRE>
<P><P>Adds an <B>InetAddress</B> object to the permissions with no port rules. The permission will allow access to all ports, unless global rules have been previously specified. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the <B>InetAddress</B> object being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>addr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The Internet address that the access flags apply to. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020200">addAddress</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addAddress (int flags, InetAddress addr, IntRanges ports);
</FONT></PRE>
<P><P>Adds an <B>InetAddress</B> object to the permissions with the specified port rules. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the <B>InetAddress</B> object being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>addr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The Internet address that the access flags apply to. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ports</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ports that apply on the address. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020300">addAllFormsByName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addAllFormsByName (int flags, String spec, IntRanges ports);
</FONT></PRE>
<P><P>Adds all forms of the specified address. The address is added using the following procedure. 
<UL><LI>If the address is in dotted IP form, it will be resolved to a hostname. The hostname and all addresses will be added. If the address cannot be resolved, only the specified address is added. 
<LI>If the address is a hostname, it will be resolved to its addresses. The hostname and all addresses will be added. If the hostname cannot be resolved, only the specified hostname is added. The hostname will be added in its fully-qualified form. 
</UL>
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the address being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>spec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The textual IP or host specification. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ports</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ports that apply to the hosts or IPs. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020400">addAllFormsByName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addAllFormsByName (int flags, String spec);
</FONT></PRE>
<P><P>Adds all forms of the specified address. 
<UL><LI>If the address is in dotted IP form, it will be resolved to a hostname. The hostname and all addresses will be added. If the address cannot be resolved, only the specified address is added. 
<LI>If the address is a hostname, it will be resolved to its addresses. The hostname and all addresses will be added. If the hostname cannot be resolved, only the specified hostname is added. The hostname will be added in its fully-qualified form. 
</UL>
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the address being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>spec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The textual IP or host specification. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020500">addConnectHost</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addConnectHost (String hostspec, boolean fAllow);
</FONT></PRE>
<P><P>Adds an allowed or denied hostname pattern to the connect permissions. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hostspec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The host specification. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fAllow</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If the value is true, allow connections to the specified hosts. If the value is false, explicitly deny connections to the specified hosts. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020600">addGlobalPortRules</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addGlobalPortRules (int flags, String spec);
</FONT></PRE>
<P><P>Adds global port rules for the specified connection type. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The connection type, which consists of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the global port rules being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>spec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The port rules to add. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020700">addGlobalPorts</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addGlobalPorts (int flags, int start, int end);
</FONT></PRE>
<P><P>Adds a global port range for the specified connection types. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The connection type, which consists of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the port range being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>start</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The beginning range value. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>end</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ending range value. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020800">addHost</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addHost (int flags, String hostspec);
</FONT></PRE>
<P><P>Adds a hostname pattern to the permissions with no port rules. The permission will allow access to all ports, unless global rules have been previously specified. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the 32-bit address range being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hostspec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The host specification. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020900">addHost</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addHost (int flags, String hostspec, IntRanges ports);
</FONT></PRE>
<P><P>Adds a hostname pattern to the permissions with the specified port rules. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> to specify the connection type. The second flag should be one of <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the hostname pattern being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hostspec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The host specification. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ports</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ports that apply to the hosts. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020a00">addHostRules</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addHostRules (int flags, String spec);
</FONT></PRE>
<P><P>Adds a set of host rules and per-host port rules for the specified access types. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the rules being added indicate inclusion or exclusion. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>spec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The textual host/port specification. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020b00">addIP</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addIP (int flags, int addr);
</FONT></PRE>
<P><P>Adds a single 32-bit address to the permissions with no port rules. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the address being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>addr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The 32-bit address. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020c00">addIP</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addIP (int flags, int addr, IntRanges ports);
</FONT></PRE>
<P><P>Adds a single 32-bit address to the permissions with the specified port rules. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the 32-bit address being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>addr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The 32-bit address. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ports</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ports that apply to this rule. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020d00">addIP</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addIP (int flags, byte[] addr);
</FONT></PRE>
<P><P>Adds a single address to the permissions with no port rules. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the address being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>addr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The address. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020e00">addIP</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addIP (int flags, byte[] addr, IntRanges ports);
</FONT></PRE>
<P><P>Adds a single address to the permissions with the specified port rules. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the 32-bit address range being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>addr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The 32-bit address. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ports</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ports that apply to this rule. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08020f00">addIPRules</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addIPRules (int flags, String spec);
</FONT></PRE>
<P><P>Adds a set of IP rules and per-IP port rules from the string form for the specified access types. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the 32-bit address range being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>spec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The textual IP/port specification. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021000">addIPs</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addIPs (int flags, int s, int e, IntRanges ports);
</FONT></PRE>
<P><P>Adds a 32-bit address range to the permissions with the specified port rules and the specified access types. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> to specify the connect type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the address range being added should use the include or exclude rules. For convenience, instead of using two flags OR'd together, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The starting address in the range. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ending address in the range. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ports</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ports that apply. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021100">addIPs</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addIPs (int flags, int s, int e);
</FONT></PRE>
<P><P>Adds a 32-bit address range to the permissions with no port rules. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the 32-bit address range being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The starting address in the range. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ending address in the range. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021200">addIPs</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addIPs (int flags, byte[] s, byte[] e, IntRanges ports);
</FONT></PRE>
<P><P>Adds an address range to the permissions with the specified port rules. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags. The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the address range being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The starting address in the range. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ending address in the range. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ports</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ports that apply. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021300">addIPs</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addIPs (int flags, byte[] s, byte[] e);
</FONT></PRE>
<P><P>Adds an address range to the permissions with no port rules. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the address range being added should use the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The starting address in the range. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ending address in the range. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021400">addPattern</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addPattern (int flags, String spec);
</FONT></PRE>
<P><P>Parses a pattern and adds it to the permission as an IP or host rule, as appropriate. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030001">ALL_API_FLAGS</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the rule being added indicates inclusion or exclusion. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>spec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The textual IP/host specification. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021500">addPattern</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addPattern (int flags, String spec, IntRanges ports);
</FONT></PRE>
<P><P>Parses a pattern and adds it to the permission as an IP or host rule, as appropriate, with the specified port rules. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The access flags, which consist of two separate flags combined with a logical OR operator (|). The first flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the rule being added indicates inclusion or exclusion. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030003">ALLOWALL</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000a">DENYALL</A>, <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>spec</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The textual IP/host specification. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ports</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ports that apply to the hosts or IPs. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021600">adjustPermission</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void adjustPermission (String tag, Object adjustment);
</FONT></PRE>
<P><P>Adjusts this permission object with some runtime state. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The adjustment type. Everything but "codebase" is ignored. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>adjustment</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">This parameter must be an instance of <B>java.net.URL</B> for the "codebase" tag. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The <A HREF="NetIOPermission.htm">NetIOPermission</A> only responds to the "codebase" adjustment type, and expects the adjustment parameter to be URL in that case. All other adjustment types are ignored. 
<P>If the URL is a file:// URL, and this permission allows connection back to the localhost if the cobebase URL is a file:// URL, localhost is added to the set of hosts that this permission allows connections to. 
<P>If the URL is not a file:// URL, and this permission allows connections back to non file:// URL hosts, the host of the codebase URL is added to the set of hosts that this permission allows connections to. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021700">check</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void check (Object param) throws SecurityException;
</FONT></PRE>
<P><P>Determines whether the specified networking I/O operation is allowed by the permission object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>param</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The security request parameter. It must be an instance of <A HREF="NetIORequest.htm">NetIORequest</A>. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>SecurityException</B>
 if this permission does not allow the specified networking operation. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021800">combine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IPermission combine (IPermission source2);
</FONT></PRE>
<P><P>Creates and returns a new <A HREF="NetIOPermission.htm">NetIOPermission</A> object that is a combination of the current permission object and the specified permission object. The new object allows access to exactly those resources allowed by either one of the permission objects that it was constructed from. 

<P><B>Return Value:</B> <P>Returns the resulting <A HREF="NetIOPermission.htm">NetIOPermission</A> object. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>source2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="NetIOPermission.htm">NetIOPermission</A> to combine with. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the specified object to combine with is not an instance of <A HREF="NetIOPermission.htm">NetIOPermission</A>. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021900">compareSet</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int compareSet (Object target);
</FONT></PRE>
<P><P>Compares the <A HREF="NetIOPermission.htm">NetIOPermission</A> instance with a specified permission object. 

<P><B>Return Value:</B> <P>Returns one of the following constants: 
<UL><LI><A HREF="SetComparison.htm#com_000300141a020001">DISJOINT</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020002">EMPTY</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020006">OVERLAP</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020005">EQUAL</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020007">SUBSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020008">SUPERSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020003">EMPTY_SUBSET</A> 
<LI><A HREF="SetComparison.htm#com_000300141a020004">EMPTY_SUPERSET</A> 
</UL>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The permission object that the <A HREF="NetIOPermission.htm">NetIOPermission</A> instance is compared with. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021a00">copy</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IPermission copy();
</FONT></PRE>
<P><P>Retrieves a copy of the <A HREF="NetIOPermission.htm">NetIOPermission</A> instance. 

<P><B>Return Value:</B> <P>Returns the copy of the <A HREF="NetIOPermission.htm">NetIOPermission</A> instance. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021b00">decode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean decode(String tag, InputStream data);
</FONT></PRE>
<P><P>Decodes the contents of the specified data stream into this permission object. The <I>tag</I> parameter specifies the type of data in the stream. 

<P><B>Return Value:</B> <P>Returns true if the decoding operation succeeded; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The encoding type identifier. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The raw data to construct the object from. The type of data is specified by the <I>tag</I> parameter. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021c00">encode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean encode(String tag, OutputStream out);
</FONT></PRE>
<P><P>Encodes the contents of this permission object and sends the encoded data to the specified stream. The <I>tag</I> parameter specifies the type of encoding that should be used. 

<P><B>Return Value:</B> <P>Returns true if the encoding operation succeeded; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tag</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The encoding type identifier. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>out</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The output stream to send the encoded data to. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021d00">getCanConnectToFileURLCodeBase</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean getCanConnectToFileURLCodeBase();
</FONT></PRE>
<P><P>Returns the flag that controls whether classes that possess this permission can connect back to the local host if from a file:// URL codebase. 

<P><B>Return Value:</B> <P>Returns true if the permission allows connections back to file:// URL codebase hosts; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021e00">getCanConnectToNonFileURLCodeBase</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean getCanConnectToNonFileURLCodeBase();
</FONT></PRE>
<P><P>Retrieves the flag that controls whether classes that possess this permission can connect back to non-file:// URL codebase hosts. 

<P><B>Return Value:</B> <P>Returns true if the permission allows connections back to non-file:// URL codebase hosts; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08021f00">getGlobalPortRules</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getGlobalPortRules (int flags);
</FONT></PRE>
<P><P>Obtains the global port rules for the specified connection type in <B>String</B> form. 

<P><B>Return Value:</B> <P>Returns the port ranges in textual form. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The connection type, which consists of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the rules should be obtained using the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022000">getGlobalPorts</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IntRanges getGlobalPorts (int flags);
</FONT></PRE>
<P><P>Obtains the global ports rules for the specified connection type. 

<P><B>Return Value:</B> <P>Returns the port ranges for the connection type. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The connection type, which consists of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the rules should be obtained using the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022100">getHostRules</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getHostRules (int flags);
</FONT></PRE>
<P><P>Obtains the combined set of hostname patterns and corresponding port rules for the specified connection type, in <B>String</B> form. 

<P><B>Return Value:</B> <P>Returns a <B>String</B> that describes the hosts that apply to the specified connection type. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The connection type, which consists of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the rules should be obtained using the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022200">getHosts</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public WildcardExpression getHosts (int flags);
</FONT></PRE>
<P><P>Obtains a combined pattern that matches all the hostname patterns for the specified connection type. 

<P><B>Return Value:</B> <P>Returns a <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A> that describes the hosts that apply to the specified connection type. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The connection type, which consists of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the pattern should be obtained using the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022300">getIPRules</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getIPRules (int flags);
</FONT></PRE>
<P><P>Obtains the combined set of 32-bit IP ranges and corresponding port rules for the specified connection type, in <B>String</B> form. 

<P><B>Return Value:</B> <P>Returns the string form of the IP ranges that apply to the specified connection type. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The connection type, which consists of two separate flags combined with a logical OR operator (|). The first flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> or <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the 32-bit IP ranges should be obtained using the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022400">getIPs</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IntRanges getIPs (int flags);
</FONT></PRE>
<P><P>Obtains the combined set of 32-bit IP ranges for the specified connection type. 

<P><B>Return Value:</B> <P>Returns the IP ranges that apply to the specified connection type. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The connection type, which consists of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the IP ranges should be obtained using the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022500">getPorts</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IntRanges[] getPorts (int flags);
</FONT></PRE>
<P><P>Obtains the port rules corresponding to each of the hosts or IPs for the specified connection type. 

<P><B>Return Value:</B> <P>Returns the port ranges that apply to the hosts or IPs. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The connection type, which consists of two separate flags combined with a logical OR operator (|). The first flag should be <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, or <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A> to specify the connection type. The second flag should be either <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> or <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> to indicate whether the rules should be obtained using the include or exclude rules. For convenience, instead of using the logical OR operator with the two flags, you can use one of the combination flags: <A HREF="NetIOPermission.htm#com_0003000e08030005">ALLOWCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000c">DENYCONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030004">ALLOWBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e0803000b">DENYBIND</A>, <A HREF="NetIOPermission.htm#com_0003000e08030006">ALLOWMULTICAST</A>, or <A HREF="NetIOPermission.htm#com_0003000e0803000d">DENYMULTICAST</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022600">mapFormat</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String mapFormat(String format);
</FONT></PRE>
<P><P>Retrieves a permission-specific tag, given an encoding format. The tag is then used with the encode and decode methods to specify an encoding type. 

<P><B>Return Value:</B> <P>Returns the permission-specific tag that corresponds to the specified format. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>format</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The encoding format to retrieve the tag for. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022700">reset</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void reset();
</FONT></PRE>
<P><P>Resets the permission state to empty. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022800">setCanConnectToFileURLCodeBase</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setCanConnectToFileURLCodeBase (boolean f);
</FONT></PRE>
<P><P>Sets the flag that controls whether classes that possess this permission can connect to the local host if the codebase URL associated with the classes is a file:// URL. 
<P>
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If this value is true, the permission will allow connections back to the local host if the codebase URL is a file:// URL. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If this flag is set to true, a later "codebase" adjustment using the <A HREF="NetIOPermission.htm#com_0003000e08021600">adjustPermission</A> method will include the local host in the set of hosts that this permission can connect to. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022900">setCanConnectToNonFileURLCodeBase</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setCanConnectToNonFileURLCodeBase (boolean f);
</FONT></PRE>
<P><P>Sets the flag that controls whether classes that possess this permission can connect back to their originating host if the codebase URL is not a file:// URL. 
<P>
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If this value is true, the permission allows connections back to the originating host if the codebase URL is not a file:// URL. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If this flag is set to true, a later "codebase" adjustment using the <A HREF="NetIOPermission.htm#com_0003000e08021600">adjustPermission</A> method will include the host of the codebase URL to the set of hosts that this permission can connect to. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022a00">supportedFormats</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String[] supportedFormats();
</FONT></PRE>
<P><P>Retrieves the encoding formats that the permission type supports. 

<P><B>Return Value:</B> <P>Returns an array of the supported format identifiers. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000e08022b00">toString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String toString();
</FONT></PRE>
<P><P>Retrieves a textual representation of the permission object. 

<P><B>Return Value:</B> <P>Returns the string representation of the permission object. 

</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000e08030000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003000e08030001">ALL_API_FLAGS</A></B>
</DT><DD>A combination of the <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A>, and <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A> flags. 

</DD><DT><B><A NAME="com_0003000e08030002">ALLOW</A></B>
</DT><DD>A flag that indicates that some operation should be allowed by this permission. 

</DD><DT><B><A NAME="com_0003000e08030003">ALLOWALL</A></B>
</DT><DD>A combination of the <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, and <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> flags. 

</DD><DT><B><A NAME="com_0003000e08030004">ALLOWBIND</A></B>
</DT><DD>A combination of the <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> and <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> flags. 

</DD><DT><B><A NAME="com_0003000e08030005">ALLOWCONNECT</A></B>
</DT><DD>A combination of the <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> and <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> flags. 

</DD><DT><B><A NAME="com_0003000e08030006">ALLOWMULTICAST</A></B>
</DT><DD>A combination of the <A HREF="NetIOPermission.htm#com_0003000e08030002">ALLOW</A> and <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A> flags. 

</DD><DT><B><A NAME="com_0003000e08030007">BIND</A></B>
</DT><DD>A flag that indicates an operation that listens on a local port for network connections from other hosts. 

</DD><DT><B><A NAME="com_0003000e08030008">CONNECT</A></B>
</DT><DD>A flag that indicates a network connection operation. 

</DD><DT><B><A NAME="com_0003000e08030009">DENY</A></B>
</DT><DD>A flag that indicates that some operation should be denied by this permission. 

</DD><DT><B><A NAME="com_0003000e0803000a">DENYALL</A></B>
</DT><DD>A combination of the <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A>, <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A>, and <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> flags. 

</DD><DT><B><A NAME="com_0003000e0803000b">DENYBIND</A></B>
</DT><DD>A combination of the <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> and <A HREF="NetIOPermission.htm#com_0003000e08030007">BIND</A> flags. 

</DD><DT><B><A NAME="com_0003000e0803000c">DENYCONNECT</A></B>
</DT><DD>A combination of the <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> and <A HREF="NetIOPermission.htm#com_0003000e08030008">CONNECT</A> flags. 

</DD><DT><B><A NAME="com_0003000e0803000d">DENYMULTICAST</A></B>
</DT><DD>A combination of the <A HREF="NetIOPermission.htm#com_0003000e08030009">DENY</A> and <A HREF="NetIOPermission.htm#com_0003000e08030010">MULTICAST</A> flags. 

</DD><DT><B><A NAME="com_0003000e0803000e">HOSTS</A></B>
</DT><DD>A flag that indicates that network computers are identified by host name. 

</DD><DT><B><A NAME="com_0003000e0803000f">IPS</A></B>
</DT><DD>A flag that indicates that network computers are identified by an IP address. 

</DD><DT><B><A NAME="com_0003000e08030010">MULTICAST</A></B>
</DT><DD>A flag that indicates a multicast socket operation. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
