<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class DirectPlay2</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="DirectPlay2.htm#com_0003000646010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="DirectInput.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A href="def_dirx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="DirectPlayLobby.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.directX</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class DirectPlay2</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class DirectPlay2 implements <A HREF="IDirectPlay2.htm">IDirectPlay2</A>
{
  // Methods
  public void <A HREF="DirectPlay2.htm#com_0003000646010100">addPlayerToGroup</A>(int groupId, int playerId);
  public void <A HREF="DirectPlay2.htm#com_0003000646010200">close</A>();
  public IDirectPlay2 <A HREF="DirectPlay2.htm#com_0003000646010300">create</A>(_Guid g);
  public int <A HREF="DirectPlay2.htm#com_0003000646010400">createGroup</A>(String friendlyName, String formalName,
        byte[] data, int dataSize);
  public int <A HREF="DirectPlay2.htm#com_0003000646010500">createPlayer</A>(String friendlyName, String formalName,
        int receiveEvent, byte[] data, int dataSize);
  public void <A HREF="DirectPlay2.htm#com_0003000646010600">deletePlayerFromGroup</A>(int groupId, int playerId);
  public void <A HREF="DirectPlay2.htm#com_0003000646010700">destroyGroup</A>(int groupId);
  public void <A HREF="DirectPlay2.htm#com_0003000646010800">destroyPlayer</A>(int playerId);
  public void <A HREF="DirectPlay2.htm#com_0003000646010900">enumGroupPlayers</A>(int groupId, _Guid sessionGuid,
        IEnumPlayersCallback2 callback, IUnknown context,
        int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646010a00">enumGroups</A>(_Guid sessionGuid,
        IEnumPlayersCallback2 callback, IUnknown context,
        int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646010b00">enumPlayers</A>(_Guid sessionGuid,
        IEnumPlayersCallback2 callback, IUnknown context,
        int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646010c00">enumServiceProviders</A>(
        IEnumServiceProvidersCallback callback, IUnknown context);
  public void <A HREF="DirectPlay2.htm#com_0003000646010d00">enumSessions</A>(DPSessionDesc sessionDesc,
        _Guid sessionGuid, _Guid applicationGuid,
        String sessionName, String password, int timeOut,
        IEnumSessionsCallback2 callback, IUnknown context,
        int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646010e00">getCaps</A>(DPCaps caps, int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646010f00">getGroupData</A>(int groupId, byte[] data,
        int[] dataSize, int flags);
  public String <A HREF="DirectPlay2.htm#com_0003000646011000">getGroupFormalName</A>(int groupId);
  public String <A HREF="DirectPlay2.htm#com_0003000646011100">getGroupFriendlyName</A>(int groupId);
  public int <A HREF="DirectPlay2.htm#com_0003000646011200">getMessageCount</A>(int playerId);
  public void <A HREF="DirectPlay2.htm#com_0003000646011300">getPlayerAddress</A>(int playerId, byte[] addressData,
        int[] addressSize);
  public int <A HREF="DirectPlay2.htm#com_0003000646011400">getPlayerAddressSize</A>(int playerId);
  public void <A HREF="DirectPlay2.htm#com_0003000646011500">getPlayerCaps</A>(int playerId, DPCaps caps, int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646011600">getPlayerData</A>(int playerId, byte[] data,
        int[] dataSize, int flags);
  public String <A HREF="DirectPlay2.htm#com_0003000646011700">getPlayerFormalName</A>(int playerId);
  public String <A HREF="DirectPlay2.htm#com_0003000646011800">getPlayerFriendlyName</A>(int playerId);
  public void <A HREF="DirectPlay2.htm#com_0003000646011900">getSessionDesc</A>(DPSessionDesc sessionDesc,
        _Guid sessionGuid, _Guid applicationGuid,
        String[] sessionName, String[] password);
  public void <A HREF="DirectPlay2.htm#com_0003000646011a00">initialize</A>(_Guid guid);
  public void <A HREF="DirectPlay2.htm#com_0003000646011b00">open</A>(DPSessionDesc sessionDesc, _Guid sessionGuid,
        _Guid applicationGuid, String sessionName,
        String password, int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646011c00">receive</A>(int[] fromPlayerId, int[] toPlayerId,
        int flags, byte[] data, int[] dataSize);
  public int <A HREF="DirectPlay2.htm#com_0003000646011d00">receiveSize</A>(int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646011e00">send</A>(int fromPlayerId, int toPlayerId, int flags,
        byte[] data, int dataSize);
  public void <A HREF="DirectPlay2.htm#com_0003000646011f00">setGroupData</A>(int groupId, byte[] data, int dataSize,
        int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646012000">setGroupName</A>(int groupId, String friendlyName, String
        formalName, int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646012100">setPlayerData</A>(int playerId, byte[] data,
        int dataSize, int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646012200">setPlayerName</A>(int playerId, String friendlyName,
        String formalName, int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646012300">setSessionDesc</A>(DPSessionDesc sessionDesc,
        _Guid sessionGuid, _Guid applicationGuid,
        String sessionName, String password, int flags);
  public void <A HREF="DirectPlay2.htm#com_0003000646012400">stopEnumGroupPlayers</A>();
  public void <A HREF="DirectPlay2.htm#com_0003000646012500">stopEnumGroups</A>();
  public void <A HREF="DirectPlay2.htm#com_0003000646012600">stopEnumPlayers</A>();
  public void <A HREF="DirectPlay2.htm#com_0003000646012700">stopEnumServiceProviders</A>();
  public void <A HREF="DirectPlay2.htm#com_0003000646012800">stopEnumSessions</A>();
}
</FONT></PRE>
<P>Applications use the methods of the <B>DirectPlay2</B> class to create Microsoft&#174; DirectPlay&#174;2 objects and work with system-level variables. 
<P><B>Caution</B>  The enumeration methods provided in this class are fundamentally different from their native code counterparts. While the native code implementation return type is a boolean, the Java return type is void. This makes stopping an enumeration more difficult (you can not return false to stop the enumeration). You can use the following DirectPlay methods to stop enumerations: 
<UL><LI><A HREF="DirectPlay2.htm#com_0003000646012800">stopEnumSessions</A> 
<LI><A HREF="DirectPlay2.htm#com_0003000646012500">stopEnumGroups</A> 
<LI><A HREF="DirectPlay2.htm#com_0003000646012400">stopEnumGroupPlayers</A> 
<LI><A HREF="DirectPlay2.htm#com_0003000646012600">stopEnumPlayers</A> 
<LI><A HREF="DirectPlay2.htm#com_0003000646012700">stopEnumServiceProviders</A> 
</UL>
<P>The <A HREF="DirectPlay2.htm#com_0003000646012800">stopEnumSessions</A> is the most important method of these, because a session enumeration can proceed infinitely. 

<H3 STYLE="color:#333366"><A NAME="com_0003000646010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000646010100">addPlayerToGroup</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addPlayerToGroup(int groupId, int playerId);
</FONT></PRE>
<P><P>Adds an existing player to an existing group. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>groupId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ID of the group to be augmented. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ID of the player to be added to the group. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Groups cannot be added to other groups, but players can be members of multiple groups. A <B>DPSYS_ADDDIRECTPLAYERTOGROUP</B> system message will be generated and sent to all the other players. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010400">createGroup</A>, <A HREF="DirectPlay2.htm#com_0003000646010600">deletePlayerFromGroup</A>, <B>DPSYS_ADDDIRECTPLAYERTOGROUP</B>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010200">close</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void close();
</FONT></PRE>
<P><P>Closes a previously opened session. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>All locally created players will be destroyed, and corresponding <A HREF="DirectXConstants.htm#com_000300065b0102f0">DPSYS_DESTROYPLAYERORGROUP</A> system messages are sent to other session participants. However, groups will not be destroyed; use <A HREF="DirectPlay2.htm#com_0003000646010700">destroyGroup</A> to destroy the group. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010800">destroyPlayer</A>, <B>DPMSG_DESTROYPLAYERORGROUP</B>, <A HREF="DirectPlay2.htm#com_0003000646011b00">open</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010300">create</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IDirectPlay2 create(_Guid g);
</FONT></PRE>
<P><P>Creates a DirectPlay object. 
<P><B>Return Value:</B> <P>Returns the <B>DirectPlay</B> object if successful; null otherwise. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="dx_guid.htm">_Guid</A> object that specifies the globally unique identifier (GUID) that represents the service provider that should be created. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This function attempts to initialize a DirectPlay object. You should call the <A HREF="DirectPlay2.htm#com_0003000646010c00">enumServiceProviders</A> method immediately before initialization to determine what types of service providers are available (<B>enumServiceProviders</B> fills in the <I>g</I> parameter for <B>create</B>). 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010c00">enumServiceProviders</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010400">createGroup</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int createGroup(String friendlyName, String formalName, byte[] data,
        int dataSize);
</FONT></PRE>
<P><P>Creates a logical group of players in the current session. 
<P><B>Return Value:</B> <P>Returns a unique DirectPlay ID that identifies the new group. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>formalName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The formal name of the group. Use null to indicate that the group has no formal name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>friendlyName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The friendly name of the group. Use null to indicate that the group has no friendly name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A block of application-defined remote data to associate with the group ID. Null indicates that the group has no initial data. The data specified here is assumed to be remote data that will be propagated to all the other applications in the session as if <A HREF="DirectPlay2.htm#com_0003000646011f00">setGroupData</A> were called. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dataSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size, in bytes, of <I>data</I>. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Messages can be sent to a group, and DirectPlay will forward the message to every player in the group. The Group ID returned to the caller should be used to identify the group for message passing and data association. Player and Group identifiers assigned by DirectPlay will always be unique within the session. This method will generate a <B>DPSYS_CREATEPLAYERORGROUP</B> message that will be sent to all the other players. 
<P><B>See Also:</B> <B>DPMSG_CREATEPLAYERORGROUP</B>, <A HREF="DirectPlay2.htm#com_0003000646010700">destroyGroup</A>, <A HREF="DirectPlay2.htm#com_0003000646010a00">enumGroups</A>, <A HREF="DirectPlay2.htm#com_0003000646010900">enumGroupPlayers</A>, <A HREF="DirectPlay2.htm#com_0003000646011e00">send</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010500">createPlayer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int createPlayer(String friendlyName, String formalName,
        int receiveEvent, byte[] data, int dataSize);
</FONT></PRE>
<P><P>Creates a local player for the current session. 
<P><B>Return Value:</B> <P>Returns a unique DirectPlay ID that identifies the new player. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>formalName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The formal name of the player. Use null to indicate that the player has no formal name information. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>friendlyName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The friendly name of the player. Use null to indicate that the player has no friendly name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>receiveEvent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An event object created by the application that will be triggered by DirectPlay2 when a message addressed to this player is received. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A block of application-defined remote data to associate with the group ID. Null indicates that the group has no initial data. The data specified here is assumed to be remote data that will be propagated to all the other applications in the session as if <A HREF="DirectPlay2.htm#com_0003000646012100">setPlayerData</A> were called. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dataSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size, in bytes, of <I>data</I>. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>A single process can have multiple local players that communicate through a DirectPlay object with any number of other local or remote players running on multiple computers. The player ID returned to the caller should be used to identify the player for message passing and data association. Player and Group IDs assigned by DirectPlay will always be unique within the session. 
<P>The application can associate an initial name with the player at its creation (see <A HREF="DirectPlay2.htm#com_0003000646012200">setPlayerName</A>). The names in <I>friendlyName</I> and <I>formalName</I> are provided for human use only; they are not used internally and need not be unique. 
<P>Upon successful completion, this method sends a <B>DPSYS_CREATEPLAYERORGROUP</B> system message to all of the other players in the session announcing that a new player has joined the session. 
<P><B>See Also:</B> <B>DPMSG_CREATEPLAYERORGROUP</B>, <A HREF="DirectPlay2.htm#com_0003000646010800">destroyPlayer</A>, <A HREF="DirectPlay2.htm#com_0003000646010b00">enumPlayers</A>, <A HREF="DirectPlay2.htm#com_0003000646011c00">receive</A>, <A HREF="DirectPlay2.htm#com_0003000646011e00">send</A>, <A HREF="DirectPlay2.htm#com_0003000646012200">setPlayerName</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010600">deletePlayerFromGroup</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deletePlayerFromGroup(int groupId, int playerId);
</FONT></PRE>
<P><P>Removes a player from a group. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>groupId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The group ID of the group to be adjusted. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ID of the player to be removed from the group. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>A <B>DPSYS_DELETEPLAYERFROMGROUP</B> system message is generated to inform the other players of this change. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010100">addPlayerToGroup</A>, <B>DPMSG_DELETEPLAYERFROMGROUP</B>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010700">destroyGroup</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void destroyGroup(int groupId);
</FONT></PRE>
<P><P>Deletes a group from the session. The ID belonging to this group will not be reused during the current session. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>groupId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ID of the group being removed from the game. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>It is not necessary to empty a group before deleting it. The individual players belonging to the group are not destroyed. This method will generate a <A HREF="DirectXConstants.htm#com_000300065b0102ef">DPSYS_DELETEPLAYERFROMGROUP</A> for each player in the group, and then generate a <A HREF="DirectXConstants.htm#com_000300065b0102f0">DPSYS_DESTROYPLAYERORGROUP</A> system message. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010400">createGroup</A>, <B>DPMSG_DESTROYPLAYERORGROUP</B>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010800">destroyPlayer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void destroyPlayer(int playerId);
</FONT></PRE>
<P><P>Deletes a player from the session, removes any pending messages destined for that player from the message queue, and removes the player from any groups to which that player belonged. The player ID will not be reused during the current session. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ID of the player that is being removed from the session. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method will generate a <A HREF="DirectXConstants.htm#com_000300065b0102ef">DPSYS_DELETEPLAYERFROMGROUP</A> message for each group that the player belongs to, and then generate a <A HREF="DirectXConstants.htm#com_000300065b0102f0">DPSYS_DESTROYPLAYERORGROUP</A> system message. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010500">createPlayer</A>, <B>DPMSG_DESTROYPLAYERORGROUP</B>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010900">enumGroupPlayers</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void enumGroupPlayers(int groupId, _Guid sessionGuid,
        IEnumPlayersCallback2 callback, IUnknown context, int flags);
</FONT></PRE>
<P><P>Enumerates all of the players of a particular group existing in the current session. Use the <A HREF="DirectPlay2.htm#com_0003000646012400">stopEnumGroupPlayers</A> method to stop the enumeration. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>groupId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The Group ID, whose players are to be enumerated. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID of the DirectPlay session of interest. This parameter must be set to null unless the <A HREF="DirectXConstants.htm#com_000300065b0102ca">DPENUMPLAYERS_SESSION</A> flag is specified. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>callback</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The callback interface that contains the callback function to be called for every player in the group. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>context</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A caller-defined context that is passed to each enumeration callback. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flags to pass to the callback function. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, this method will enumerate group players by using the local player list for the current session. This method cannot be called from within an <A HREF="DirectPlay2.htm#com_0003000646010d00">enumSessions</A> enumeration. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010500">createPlayer</A>, <A HREF="DirectPlay2.htm#com_0003000646010800">destroyPlayer</A>, <A HREF="DirectPlay2.htm#com_0003000646010100">addPlayerToGroup</A>, <A HREF="DirectPlay2.htm#com_0003000646010600">deletePlayerFromGroup</A>, <A HREF="DirectPlay2.htm#com_0003000646012400">stopEnumGroupPlayers</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010a00">enumGroups</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void enumGroups(_Guid sessionGuid, IEnumPlayersCallback2 callback,
        IUnknown context, int flags);
</FONT></PRE>
<P><P>Enumerates the groups available to a session. Use the <A HREF="DirectPlay2.htm#com_0003000646012500">stopEnumGroups</A> method to stop the enumeration. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID of the DirectPlay session of interest. This parameter must be set to NULL unless the <A HREF="DirectXConstants.htm#com_000300065b0102ca">DPENUMPLAYERS_SESSION</A> flag is specified. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>callback</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The callback interface that contains the callback function to be called for every group in the session. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>context</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A caller-defined context that is passed to each enumeration callback. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value can be 0 or <A HREF="DirectXConstants.htm#com_000300065b0102ca">DPENUMPLAYERS_SESSION</A>. This flag is passed to the callback function. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, this method will enumerate using the local player list for the current session. The <A HREF="DirectXConstants.htm#com_000300065b0102ca">DPENUMPLAYERS_SESSION</A> flag can be used, along with a session instance GUID, to request that a session's host provide its list for enumeration. This method cannot be called from within an <A HREF="DirectPlay2.htm#com_0003000646010d00">enumSessions</A> enumeration. Furthermore, use of the <B>DPENUMPLAYERS_SESSION</B> flag with this method must occur after the <B>enumSessions</B> method has been called and before any calls to <A HREF="DirectPlay2.htm#com_0003000646010200">close</A> or <A HREF="DirectPlay2.htm#com_0003000646011b00">open</A>. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010400">createGroup</A>, <A HREF="DirectPlay2.htm#com_0003000646010700">destroyGroup</A>, <A HREF="DirectPlay2.htm#com_0003000646010d00">enumSessions</A>, <A HREF="DirectPlay2.htm#com_0003000646012500">stopEnumGroups</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010b00">enumPlayers</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void enumPlayers(_Guid sessionGuid, IEnumPlayersCallback2 callback,
        IUnknown context, int flags);
</FONT></PRE>
<P><P>Enumerates the players in a session. Use the <A HREF="DirectPlay2.htm#com_0003000646012600">stopEnumPlayers</A> method to stop the enumeration. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A GUID of the DirectPlay session of interest. This parameter must be set to NULL unless the <A HREF="DirectXConstants.htm#com_000300065b0102ca">DPENUMPLAYERS_SESSION</A> flag is specified. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>callback</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The callback instance that contains the callback function that will be called for every group in the session. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>context</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A caller-defined context that is passed to each enumeration callback. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One or more values of the <A HREF="DirectXConstants.htm">DPENUMPLAYERS_</A> type. The values are also passed to the callback function. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, this method will enumerate players in the current open session. Groups can also be included in the enumeration by using the <A HREF="DirectXConstants.htm#com_000300065b0102c7">DPENUMPLAYERS_GROUP</A> flag. The <A HREF="DirectXConstants.htm#com_000300065b0102ca">DPENUMPLAYERS_SESSION</A> flag can be used with a session instance GUID to request that a session host provide its list for enumeration. This method cannot be called from within an <A HREF="DirectPlay2.htm#com_0003000646010d00">enumSessions</A> enumeration. Also, use of the <B>DPENUMPLAYERS_SESSION</B> flag with this method must occur after the <B>enumSessions</B> method has been called, and before any calls to <A HREF="DirectPlay2.htm#com_0003000646010200">close</A> or <A HREF="DirectPlay2.htm#com_0003000646011b00">open</A>. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010500">createPlayer</A>, <A HREF="DirectPlay2.htm#com_0003000646010800">destroyPlayer</A>, <A HREF="DirectPlay2.htm#com_0003000646010d00">enumSessions</A>, <A HREF="DirectPlay2.htm#com_0003000646012600">stopEnumPlayers</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010c00">enumServiceProviders</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void enumServiceProviders(IEnumServiceProvidersCallback callback,
        IUnknown context);
</FONT></PRE>
<P><P>Enumerates the DirectPlay service providers installed on the system. Use the <A HREF="DirectPlay2.htm#com_0003000646012700">stopEnumServiceProviders</A> method to stop the enumeration. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>callback</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="IEnumServiceProvidersCallback.htm">IEnumServiceProvidersCallback</A> interface that contains the callback function to be called with a description of each DirectPlay service provider interface installed in the system. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>context</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The caller-defined data that is passed to the callback function each time the function is invoked. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method enumerates service providers installed in the system, even though the system may not be capable of using those service providers. For example, a TAPI service provider may be enumerated, even though the system may not have a modem installed. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646012700">stopEnumServiceProviders</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010d00">enumSessions</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void enumSessions(DPSessionDesc sessionDesc, _Guid sessionGuid,
        _Guid applicationGuid, String sessionName, String password,
        int timeOut, IEnumSessionsCallback2 callback, IUnknown context, int
        flags);
</FONT></PRE>
<P><P>Enumerates the sessions available to this DirectPlay object. Use the <A HREF="DirectPlay2.htm#com_0003000646012800">stopEnumSessions</A> method to stop the enumeration. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionDesc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="DPSessionDesc.htm">DPSessionDesc</A> object describing the sessions to be enumerated. Only those sessions that meet the criteria set in this structure will be enumerated. If a password is required, the <B>password</B> field should be set accordingly. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID of the DirectPlay session of interest. This parameter must be set to NULL unless the <A HREF="DirectXConstants.htm#com_000300065b0102ca">DPENUMPLAYERS_SESSION</A> flag is specified. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>applicationGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID of the application. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The Unicode string containing the name of the session. Use this member only if the <A HREF="IDirectPlay2.htm">IDirectPlay2</A> interface is in use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>password</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The Unicode string containing the password of the session. Use this member only if the <A HREF="IDirectPlay2.htm">IDirectPlay2</A> interface is in use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>timeOut</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The total amount of time (in milliseconds) that DirectPlay will wait for replies to the enumeration message (not the time between each enumeration). It is recommended that this parameter be set to zero, so DirectPlay can compute the default timeout appropriate for the service provider. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>callback</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The callback interface that contains the callback function to be called for each DirectPlay session responding. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>context</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A user-defined context that is passed to each enumeration callback. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A value of the <A HREF="DirectXConstants.htm">DPENUMSESSIONS_</A> type. Set to 0 or <A HREF="DirectXConstants.htm#com_000300065b0102cc">DPENUMSESSIONS_AVAILABLE</A>, to enumerate only available sessions. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is usually called immediately after the DirectPlay object is created using <B>directPlayCreate</B>. It cannot be called while connected to a session or after an application has created a session. <B>enumSessions</B> works by asking that the service provider locate one or more hosts on the network and send the hosts an enumeration request. The replies received make up the sessions that are enumerated. The amount of time DirectPlay spends listening for these replies is controlled by the <I>f1</I> parameter. When this time interval has expired, your callback will be notified with the <A HREF="DirectXConstants.htm#com_000300065b0102cd">DPESC_TIMEDOUT</A> flag. At this point, you may choose to continue the enumeration by setting <I>f1</I> to a new value and returning 1 or by returning 0 to cancel the enumeration. It is recommended that <I>f1</I> be set to 0. In that case, DirectPlay will compute a time out that is appropriate for the service provider. 
<P>Usually, only sessions that can be joined are enumerated. If the <A HREF="DirectXConstants.htm#com_000300065b0102cb">DPENUMSESSIONS_ALL</A> flag is specified, sessions will be enumerated even if the creation of new players has been disabled. Be aware that the application will still not be able to join these sessions. 
<P>If the application was not launched by a lobby, the service provider may display a dialog to obtain information from the user to perform the enumeration. For example, the Microsoft serial service provider will ask for COM port settings, the modem service provider will ask for a phone number, and the Internet service provider will ask for an IP address of the host. 
<P>Password protected sessions will not be enumerated unless you supply a correct password. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646011b00">open</A>, <A HREF="DirectPlay2.htm#com_0003000646012800">stopEnumSessions</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010e00">getCaps</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getCaps(DPCaps caps, int flags);
</FONT></PRE>
<P><P>Retrieves the capabilities of this DirectPlay object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>caps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="DPCaps.htm">DPCaps</A> object that receives the capabilities of the DirectPlay object. The <A HREF="DPCaps.htm">size</A> field of the <B>DPCaps</B> object must be filled in before using <B>getCaps</B>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If this parameter is set to 0, the capabilities will be computed for nonguaranteed messaging. 
<DL>
<DT><A HREF="DirectXConstants.htm#com_000300065b0102d0">DPGETCAPS_GUARANTEED</A> 
 </DT><DD>Retrieves the capabilities for a guaranteed message delivery. 
</DD></DL>
</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The difference between this method and <A HREF="DirectPlay2.htm#com_0003000646011500">getPlayerCaps</A> is that this method returns the capabilities of the current session and <B>getPlayerCaps</B> returns the capabilities of the requested player. 
<P><B>See Also:</B> <A HREF="DPCaps.htm">com.ms.directX.DPCaps</A>, <A HREF="DirectPlay2.htm#com_0003000646011500">getPlayerCaps</A>, <A HREF="DirectPlay2.htm#com_0003000646011e00">send</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646010f00">getGroupData</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getGroupData(int groupId, byte[] data, int[] dataSize,
        int flags);
</FONT></PRE>
<P><P>Retrieves data for a group of players. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>groupId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The group ID that data is being requested for. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The buffer where the application-specific group data is to be written. Set this parameter to NULL to request only the size of data. The <B>dataSize</B> parameter will be set to the size required to hold the data. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dataSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the buffer before the method is called. After the method returns, this parameter will be set to the size (in bytes) of the group data. If the buffer was too small (<B>DPERR_BUFFERTOOSMALL</B>), this parameter will be set to the buffer size required (see the note about passing null as an argument for other behavior regarding <B>DPERR_BUFFERTOOSMALL</B>). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If this parameter is set to 0, the remote data will be retrieved. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>DirectPlay can maintain two types of group data: local and remote. The application must specify which type of data to retrieve. Local data was set by this DirectPlay2 object by using the <A HREF="DirectXConstants.htm#com_000300065b0102eb">DPSET_LOCAL</A> flag. Remote data might have been set by any application in the session by using the <A HREF="DirectXConstants.htm#com_000300065b0102ec">DPSET_REMOTE</A> flag. 
<P>You can pass a null for the data buffer parameter to retrieve the size for the buffer. However, when you do this you must put the code into a <B>try</B>...<B>catch</B> block, because a <B>DPERR_BUFFERTOOSMALL</B> error is generated. The following example shows how you might implement a <B>try</B>...<B>catch</B> block to catch the error. 
<PRE><FONT FACE="Courier" SIZE="2">int  hr=0;
try {
      Glb.glpDPlay2.getGroupData(dpID,null, dataSize,DPGET_REMOTE);
    }
catch (ComException e){ hr= e.getHResult();}

// Check for the DPERR_BUFFERTOOSMALL error
if (hr!=DPERR_BUFFERTOOSMALL){
       //problem...
    }
</FONT></PRE>
<P><B>See Also:</B> <A HREF="DirectXConstants.htm#com_000300065b0102cf">com.ms.directX.DirectXConstants.DPGET_REMOTE</A>, <A HREF="DirectXConstants.htm#com_000300065b0102ce">com.ms.directX.DirectXConstants.DPGET_LOCAL</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011000">getGroupFormalName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getGroupFormalName(int groupId);
</FONT></PRE>
<P><P>Retrieves the formal name associated with the group. 

<P><B>Return Value:</B> <P>Returns the formal name associated with the group. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>groupId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ID of the group, whose name is being requested. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011100">getGroupFriendlyName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getGroupFriendlyName(int groupId);
</FONT></PRE>
<P><P>Retrieves the friendly name associated with the group. 

<P><B>Return Value:</B> <P>Returns the friendly name associated with the group. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>groupId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ID of the group, whose name is being requested. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011200">getMessageCount</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getMessageCount(int playerId);
</FONT></PRE>
<P><P>Queries for the number of messages in a specific local player's message receive queue. 

<P><B>Return Value:</B> <P>Returns the message count. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layer ID that the message count is requested for. The player must be local. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646011c00">receive</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011300">getPlayerAddress</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getPlayerAddress(int playerId, byte[] addressData,
        int[] addressSize);
</FONT></PRE>
<P><P>Retrieves the DirectPlay address for a player. The DirectPlay address is a network address for a player using a specific service provider. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Player ID that the address is being requested for. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>addressData</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Address of a buffer where the DirectPlay2 address is to be written. Set this parameter to NULL to request only the size of data. The <I>addressSize</I> parameter will be set to the size required to hold the data. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>addressSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the buffer before calling this method. After the method returns, this parameter will be set to the size, in bytes, of the group data. If the buffer was too small (<B>DPERR_BUFFERTOOSMALL</B>), then this parameter will be set to the buffer size that is required. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011400">getPlayerAddressSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getPlayerAddressSize(int playerId);
</FONT></PRE>
<P><P>Retrieves the DirectPlay address size for a player. 

<P><B>Return Value:</B> <P>Returns the address size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The player ID that the address size is being requested for. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011500">getPlayerCaps</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getPlayerCaps(int playerId, DPCaps caps, int flags);
</FONT></PRE>
<P><P>Obtains the current capabilities of a specified player. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The player ID that the capabilities should be computed for. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>caps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="DPCaps.htm">DPCaps</A> object that receives the capabilities of the player. The <A HREF="DPCaps.htm">size</A> field of the <B>DPCaps</B> object must contain a value before using <B>getPlayerCaps</B>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If this parameter is set to 0, the capabilities will be computed for nonguaranteed messaging. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The difference between this method and <A HREF="DirectPlay2.htm#com_0003000646010e00">getCaps</A> is that this method returns the capabilities of the requested player; <B>getCaps</B> returns the capabilities of the current session. 
<P><B>See Also:</B> <A HREF="DPCaps.htm">com.ms.directX.DPCaps</A>, <A HREF="DirectPlay2.htm#com_0003000646010e00">getCaps</A>, <A HREF="DirectPlay2.htm#com_0003000646011e00">send</A>, <A HREF="DirectXConstants.htm#com_000300065b0102d0">com.ms.directX.DirectXConstants.DPGETCAPS_GUARANTEED</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011600">getPlayerData</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getPlayerData(int playerId, byte[] data, int[] dataSize,
        int flags);
</FONT></PRE>
<P><P>Retrieves player data for the specified player ID. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ID of the player for which data is being requested. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application-specific player data. Set this parameter to null to request only the size of data. The <B>dataSize</B> parameter will be set to the size required to hold the data. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dataSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the buffer before calling this method. After the method returns, this parameter will be set to the size, in bytes, of the group data. If the buffer was too small (<B>DPERR_BUFFERTOOSMALL</B>), this parameter will be set to the buffer size required. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If this parameter is set to 0, the remote data will be retrieved. 
<DL>
<DT><A HREF="DirectXConstants.htm#com_000300065b0102cf">DPGET_REMOTE</A> 
 </DT><DD>Retrieves the current data from the remote shared data space. 
</DD><DT><A HREF="DirectXConstants.htm#com_000300065b0102ce">DPGET_LOCAL</A> 
 </DT><DD>Retrieves the local data set by this application. 
</DD></DL>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011700">getPlayerFormalName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getPlayerFormalName(int playerId);
</FONT></PRE>
<P><P>Obtains the formal name associated with a player. 

<P><B>Return Value:</B> <P>Returns the name. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Player ID number for which the name information is being requested. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646012200">setPlayerName</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011800">getPlayerFriendlyName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getPlayerFriendlyName(int playerId);
</FONT></PRE>
<P><P>Obtains the friendly name associated with a player. 

<P><B>Return Value:</B> <P>Returns the name. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Player ID number for which the name information is being requested. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646012200">setPlayerName</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011900">getSessionDesc</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void getSessionDesc(DPSessionDesc sessionDesc, _Guid sessionGuid,
        _Guid applicationGuid, String[] sessionName, String[] password);
</FONT></PRE>
<P><P>Retrieves a description of the specified session. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionDesc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="DPSessionDesc.htm">DPSessionDesc</A> object describing the sessions to be enumerated. Only those sessions that meet the criteria set in this structure will be enumerated. If a password is required, the <B>password</B> field should be set accordingly. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID of the session instance. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>applicationGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID of the application running in the session instance. It uniquely identifies the application so that DirectPlay connects only to other computers running the same application. This member can be set to <B>GUID_NULL</B> to enumerate sessions for any application. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The Unicode string containing the name of the session. Use this member only if the <A HREF="IDirectPlay2.htm">IDirectPlay2</A> interface is in use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>password</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The Unicode string containing the password of the session. Use this member only if the <A HREF="IDirectPlay2.htm">IDirectPlay2</A> interface is in use. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011a00">initialize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void initialize(_Guid guid);
</FONT></PRE>
<P><P>Initializes the <A HREF="DirectPlay2.htm">DirectPlay2</A> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>guid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID used as the interface identifier. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Since the DirectPlay2 object is initialized when it is created, calling this method will always result in no action. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011b00">open</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void open(DPSessionDesc sessionDesc, _Guid sessionGuid,
        _Guid applicationGuid, String sessionName, String password,
        int flags);
</FONT></PRE>
<P><P>Establishes a gaming session instance. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionDesc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="DPSessionDesc.htm">DPSessionDesc</A> object describing the session to be created or joined. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID of the DirectPlay session of interest. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>applicationGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID of the application running in the session instance. It uniquely identifies the application so that DirectPlay connects only to other computers running the same application. This member can be set to <B>GUID_NULL</B> to enumerate sessions for any application. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Unicode string containing the name of the session. Use this member only if the <A HREF="IDirectPlay2.htm">IDirectPlay2</A> interface is in use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>password</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Unicode string containing the password of the session. Use this member only if the <A HREF="IDirectPlay2.htm">IDirectPlay2</A> interface is in use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Can be one of the following flags: 
<DL>
<DT><A HREF="DirectXConstants.htm#com_000300065b0102d8">DPOPEN_CREATE</A> 
</DT><DT><A HREF="DirectXConstants.htm#com_000300065b0102d9">DPOPEN_JOIN</A> 
</DT></DL>
</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>An application may either create a new session (which other remote applications join) or join an existing session. <B>open</B> must be called before any local players are created. Before an application can join an existing session, it will use <A HREF="DirectPlay2.htm#com_0003000646010d00">enumSessions</A> to obtain a list of what sessions can be joined and their session descriptions. Attempting to join a session where adding new players is disabled, joining is disabled, or the player limit has been reached will result in no action. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010200">close</A>, <A HREF="DirectPlay2.htm#com_0003000646010d00">enumSessions</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011c00">receive</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void receive(int[] fromPlayerId, int[] toPlayerId, int flags, byte[]
        data, int[] dataSize);
</FONT></PRE>
<P><P>Retrieves a message from the message queue. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fromPlayerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A array that receives the player ID of the sender of the message. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>toPlayerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array that receives the player ID of the receiver of the message. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One or more values of <A HREF="DirectXConstants.htm">DPRECEIVE_</A> type. Both <A HREF="DirectXConstants.htm#com_000300065b0102df">DPRECEIVE_TOPLAYER</A> and <A HREF="DirectXConstants.htm#com_000300065b0102dd">DPRECEIVE_FROMPLAYER</A> can be specified, in which case <B>receive</B> will return whichever message is encountered first. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Array variable that receives the message data. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dataSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The length of the array assigned to the <I>data</I> parameter. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Any message received from player ID <B>DPID_SYSMSG</B> is a system message that is generated by the host. For such messages, the application should interpret <I>data</I> as a generic system message and check for the type of message before processing it. 
<P>Messages that were sent to player ID <B>DPID_SYSMSG</B> as a way to broadcast them to all players, or to a group ID to send them to all the players in the group, still appear to come from the sending player ID. An application will only receive messages directed to a local player. A player cannot receive a message where the sender and receiver IDs are the same. 
<P>If <A HREF="DirectXConstants.htm#com_000300065b0102e9">DPSESSION_NOMESSAGEID</A> is specified in the session description, the <B>LPID_FROM</B> and <B>LPID_TO</B> variables are meaningless. 
<P>All the service providers shipped with DirectPlay perform integrity checks on the data to protect against corruption. Any message received will be verified. If data corruption is detected, the message will either be thrown away (if it was sent nonguaranteed) or it will be retransmitted (if it was sent guaranteed). 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646011e00">send</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011d00">receiveSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int receiveSize(int flags);
</FONT></PRE>
<P><P>Retrieves the size of the message data associated with the next or specified message on the message queue. 

<P><B>Return Value:</B> <P>Returns the size of the message data. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Can be <A HREF="DirectXConstants.htm#com_000300065b0102dc">DPRECEIVE_ALL</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011e00">send</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void send(int fromPlayerId, int toPlayerId, int flags, byte[] data,
        int dataSize);
</FONT></PRE>
<P><P>Sends messages to other players, to a group of players, or to all players in the session. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fromPlayerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The player ID of the sending player. The player ID must correspond to one of the local players on this computer. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>toPlayerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The player ID of the player to send the message to, the group ID of the group of players to send the message to, or DPID_ALLPLAYERS to send to all players in the session. If DPSEND_OPENSTREAM or DPSEND_CLOSESTREAM flags are used, this parameter must be a player ID. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One value of <A HREF="DirectXConstants.htm">DPSEND_</A> type, indicating how the message should be sent. If this parameter is set to 0, the message is sent nonguaranteed and at normal priority. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Array variable that contains the data being sent. Set to null if there is no actual message to send. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dataSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Length of the data being sent. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>To send a message to another player, specify the target player's player ID. To send a message to a group of players, send the message to the group ID assigned to the group. To send messages to the entire session, specify the player ID DPID_ALLPLAYERS. The <B>send</B> method cannot be used inside a <A HREF="DirectDrawSurface.htm">lock</A> / <A HREF="DirectDrawSurface.htm">unlock</A> or a <A HREF="DirectDrawSurface.htm">getDC</A> / <A HREF="DirectDrawSurface.htm">releaseDC</A> method pair. 
<P>A player cannot send a message to itself. If a player sends a message to a group that it is part of or to <B>DPID_ALLPLAYERS</B>, it will not receive a copy of that message. 
<P>If DPSESSION_NOMESSAGEID was specified in the session description, it is possible for a player to receive a message that it sent to a group. Since there is no DirectPlay message ID header on the message (indicating who sent the message), it cannot filter out messages from itself when the service provider implements group sends, and the application will need to be able to evaluate this based on the content of the message. 
<P>When <A HREF="DirectXConstants.htm#com_000300065b0102e9">DPSESSION_NOMESSAGEID</A> is used, the message is sent to one of the local players on the target computer. 
<P>Messages can be sent guaranteed or nonguaranteed. By default, messages are sent nonguaranteed, which means that DirectPlay does no verification that the message reached the intended recipient. Sending a guaranteed message takes much longer, a minimum of two to three times longer than a nonguaranteed message. Applications should try to minimize sending guaranteed messages as much as possible and design the application to tolerate lost messages. 
<P>All the service providers shipped with DirectPlay perform integrity checks on the data to protect against corruption. Any message received will be verified, and if data corruption is detected, it will either be thrown away (if it was sent nonguaranteed), or it will be retransmitted (if it was sent guaranteed). 
<P><B>Note</B>  In this version of DirectPlay2, <A HREF="DirectXConstants.htm#com_000300065b0102e1">DPSEND_GUARANTEED</A> will only guarantee delivery if the service provider supports it. An application can find out if delivery will be guaranteed by calling <A HREF="DirectPlay2.htm#com_0003000646010e00">getCaps</A> and checking for the DPCAPS_GUARANTEEDSUPPORTED flag. If this flag is not set, the DPSEND_GUARANTEED flag will be ignored and the message will be sent nonguaranteed. The next version of DirectPlay will implement guaranteed delivery on nonguaranteed service providers so the guaranteed supported CAPS flag will always be present. If the application implements its own method of guaranteeing message delivery, it must be sure not to use the DPSEND_GUARANTEED flag. When testing the performance of your application, it is important to know if the service provider supports guaranteed messaging. If it does not, every place you specified DPSEND_GUARANTEED will run slower with the next version of DirectPlay. 
<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646011c00">receive</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646011f00">setGroupData</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setGroupData(int groupId, byte[] data, int dataSize, int flags);
</FONT></PRE>
<P><P>Sets data for the group specified by the group ID. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>groupId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The group ID for which data is being set. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The data to be set. Set to NULL to clear any existing group data. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dataSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Size of the data buffer. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If this parameter is set to 0, the remote group data will be set and propagated using nonguaranteed messaging. See also: 
<DL>
<DT><A HREF="DirectXConstants.htm#com_000300065b0102ec">DPSET_REMOTE</A> 
</DT><DT><A HREF="DirectXConstants.htm#com_000300065b0102eb">DPSET_LOCAL</A> 
</DT><DT><A HREF="DirectXConstants.htm#com_000300065b0102ea">DPSET_GUARANTEED</A> 
</DT></DL>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646012000">setGroupName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setGroupName(int groupId, String friendlyName,
        String formalName, int flags);
</FONT></PRE>
<P><P>Sets the name of a group after it has been created. A <A HREF="DirectXConstants.htm#com_000300065b0102f4">DPSYS_SETPLAYERORGROUPNAME</A> system message will be sent to all the other players notifying them of the change, unless <A HREF="DirectXConstants.htm#com_000300065b0102e8">DPSESSION_NODATAMESSAGES</A> is set in the session description. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>groupId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ID of the group for which the name is being set. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>friendlyName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The friendly name of the group. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>formalName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The formal name of the group. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If this parameter is set to 0, the name will be propagated to all the remote systems by using nonguaranteed message passing. See also: 
<DL>
<DT><A HREF="DirectXConstants.htm#com_000300065b0102ea">DPSET_GUARANTEED</A> 
</DT></DL>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646012100">setPlayerData</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPlayerData(int playerId, byte[] data, int dataSize,
        int flags);
</FONT></PRE>
<P><P>Associates an application-specific data block with a player ID. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ID of the player for which data is being set. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The data to be set. Set this parameter to null to clear any existing player data. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dataSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the data. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If this parameter is set to 0, the remote player data will be set and propagated by using nonguaranteed messaging. This parameter may be one or a combination of the following flags: 
<DL>
<DT><A HREF="DirectXConstants.htm#com_000300065b0102ec">DPSET_REMOTE</A> 
</DT><DT><A HREF="DirectXConstants.htm#com_000300065b0102eb">DPSET_LOCAL</A> 
</DT><DT><A HREF="DirectXConstants.htm#com_000300065b0102ea">DPSET_GUARANTEED</A> 
</DT></DL>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646012200">setPlayerName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPlayerName(int playerId, String friendlyName,
        String formalName, int flags);
</FONT></PRE>
<P><P>Sets the name of the player after it has been changed. A <A HREF="DirectXConstants.htm#com_000300065b0102f4">DPSYS_SETPLAYERORGROUPNAME</A> system message will be sent to all other players notifying them of the change, unless <A HREF="DirectXConstants.htm#com_000300065b0102e8">DPSESSION_NODATAMESSAGES</A> is set in the session description. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>playerId</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The player ID for which data is being sent. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>formalName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The formal name for the player. Use null if the player has no formal name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>friendlyName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The friendly name for the player. Use null if the player has no friendly name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If this parameter is set to 0, the name will be propagated to all the remote systems using nonguaranteed message passing. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <B>DPMSG_SETPLAYERORGROUPNAME</B>, <A HREF="DirectPlay2.htm#com_0003000646011700">getPlayerFormalName</A>, <A HREF="DirectPlay2.htm#com_0003000646011800">getPlayerFriendlyName</A>, <A HREF="DirectPlay2.htm#com_0003000646011e00">send</A>, <A HREF="DirectXConstants.htm#com_000300065b0102ea">com.ms.directX.DirectXConstants.DPSET_GUARANTEED</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646012300">setSessionDesc</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSessionDesc(DPSessionDesc sessionDesc, _Guid sessionGuid,
        _Guid applicationGuid, String sessionName, String password,
        int flags);
</FONT></PRE>
<P><P>This method is currently not supported. Changes the properties of the current session. This method works only when called on the computer that is the host of the session. 

<P><B>Return Value:</B> <P>Returns <B>DPERR_UNSUPPORTED</B>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionDesc</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="DPSessionDesc.htm">DPSessionDesc</A> object describing the session to be created or joined. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID of the DirectPlay session of interest. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>applicationGuid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The GUID of the application running in the session instance. It uniquely identifies the application so that DirectPlay connects only to other computers running the same application. This member can be set to <B>GUID_NULL</B> to enumerate sessions for any application. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sessionName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Unicode string containing the name of the session. Use this member only if the <A HREF="IDirectPlay2.htm">IDirectPlay2</A> interface is in use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>password</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Unicode string containing the password of the session. Use this member only if the <A HREF="IDirectPlay2.htm">IDirectPlay2</A> interface is in use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No flags are currently used by this method. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646012400">stopEnumGroupPlayers</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void stopEnumGroupPlayers();
</FONT></PRE>
<P><P>Stops a group players enumeration. You must use this method to stop an enumeration, because, unlike native code that has a boolean return value for enumeration methods, Java enumeration methods return void. 

<P><B>Return Value:</B> <P>No return value. 

<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010900">enumGroupPlayers</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646012500">stopEnumGroups</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void stopEnumGroups();
</FONT></PRE>
<P><P>Stops a group enumeration. You must use this method to stop an enumeration, because, unlike native code that has a boolean return value for enumeration methods, Java enumeration methods return void. 

<P><B>Return Value:</B> <P>Returns no return value. 

<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010a00">enumGroups</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646012600">stopEnumPlayers</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void stopEnumPlayers();
</FONT></PRE>
<P><P>Stops a players enumeration. You must use this method to stop an enumeration, because, unlike native code that has a boolean return value for enumeration methods, Java enumeration methods return void. 

<P><B>Return Value:</B> <P>No return value. 

<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010b00">enumPlayers</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646012700">stopEnumServiceProviders</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void stopEnumServiceProviders();
</FONT></PRE>
<P><P>Stops a service provider enumeration. You must use this method to stop an enumeration, because, unlike native code that has a boolean return value for enumeration methods, Java enumeration methods return void. 

<P><B>Return Value:</B> <P>No return value. 

<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010c00">enumServiceProviders</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000646012800">stopEnumSessions</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void stopEnumSessions();
</FONT></PRE>
<P><P>Stops a session enumeration. You must use this method to stop an enumeration, because, unlike native code that has a boolean return value for enumeration methods, Java enumeration methods return void. 

<P><B>Return Value:</B> <P>No return value. 

<P><B>See Also:</B> <A HREF="DirectPlay2.htm#com_0003000646010d00">enumSessions</A>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
