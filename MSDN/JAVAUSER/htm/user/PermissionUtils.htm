<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class PermissionUtils</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="PermissionUtils.htm#com_0003000d08010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="PermissionTreeOutput.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_psec.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="PolicyEngine.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.security</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class PermissionUtils</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class PermissionUtils
{
  // Methods
  public static String <A HREF="PermissionUtils.htm#com_0003000d08010100">ArraytoString</A> (Object o);
  public static IntRanges[] <A HREF="PermissionUtils.htm#com_0003000d08010200">combineArraysOfIntRanges</A> (
        IntRanges[] r1, IntRanges[] r2);
  public static String[] <A HREF="PermissionUtils.htm#com_0003000d08010300">combineArraysOfStrings</A> (String[] list1,
        String[] list2);
  public static WildcardExpression <A HREF="PermissionUtils.htm#com_0003000d08010400">combinePatterns</A> (
        WildcardExpression spec1, WildcardExpression spec2);
  public static Vector <A HREF="PermissionUtils.htm#com_0003000d08010500">combineVectorsOfIntRanges</A> (Vector v1, Vector
        v2);
  public static int <A HREF="PermissionUtils.htm#com_0003000d08010600">compareArraysOfStrings</A> (String[] list1,
        String[] list2, int cmp);
  public static int <A HREF="PermissionUtils.htm#com_0003000d08010700">compareBooleans</A> (boolean f1, boolean f2,
        int prevcmp);
  public static int <A HREF="PermissionUtils.htm#com_0003000d08010800">compareFlags</A> (int flags1, int flags2, int mask,
        int prevcmp);
  public static int <A HREF="PermissionUtils.htm#com_0003000d08010900">compareIncludeExcludePatterns</A> (
        WildcardExpression include1, WildcardExpression exclude1,
        WildcardExpression include2, WildcardExpression exclude2,
        int cmp );
  public static int <A HREF="PermissionUtils.htm#com_0003000d08010a00">compareInclusiveBooleans</A> (boolean f1,
        boolean f2, int prevcmp);
  public static int <A HREF="PermissionUtils.htm#com_0003000d08010b00">compareInclusiveFlags</A> (int flags1, int flags2,
        int mask, int prevcmp);
  public static int <A HREF="PermissionUtils.htm#com_0003000d08010c00">compareLimits</A> (long limit1, long limit2,
        int prevcmp);
  public static String <A HREF="PermissionUtils.htm#com_0003000d08010d00">ComparisonResulttoString</A> (int cmp);
  public static Vector <A HREF="PermissionUtils.htm#com_0003000d08010e00">concatVectors</A> (Vector v1, Vector v2);
  public static IntRanges[] <A HREF="PermissionUtils.htm#com_0003000d08010f00">copyArrayOfIntRanges</A> (IntRanges[] ap);
  public static Vector[] <A HREF="PermissionUtils.htm#com_0003000d08011000">copyArrayOfVectorsOfIntRanges</A> (
        Vector[] av);
  public static WildcardExpression[] <A HREF="PermissionUtils.htm#com_0003000d08011100">copyArrayOfWildcardExpressions</A>
        (WildcardExpression[] ap);
  public static Vector <A HREF="PermissionUtils.htm#com_0003000d08011200">copyVectorOfIntRanges</A> (Vector v);
  public static int <A HREF="PermissionUtils.htm#com_0003000d08011300">invertComparisonResult</A> (int cmp);
  public static int <A HREF="PermissionUtils.htm#com_0003000d08011400">mergeComparisonResults</A> (int cmp1, int cmp2);
  public static String[] <A HREF="PermissionUtils.htm#com_0003000d08011500">parseStringIntoArray</A>(String str,
        String delims);
}
</FONT></PRE>
<P>This class provides routines used by the permission classes. It includes several methods that assist with copying, comparing, and combining assorted types of elements of permissions. Three categories of functions describe the methods in this class: 
<UL><LI>Deep copy helpers for implementing <A HREF="IPermission.htm#com_0003000d0f010300">IPermission.copy</A>. The object returned is completely independent of the original, and changes made to the original or to the copy will not affect the other. In other words, containers return a new container, containing a clone of each element; elements that are containers recursively copy their elements. 
<LI>Comparison helpers for implementing <A HREF="SetComparison.htm#com_000300141a010100">compareSet</A>. These helper methods include methods for comparing simple types and <B>String</B> arrays. The <A HREF="PermissionUtils.htm#com_0003000d08011400">mergeComparisonResults</A> method is also included for combining the results for individual aspects of a permission into a single result for the entire permission. 
<LI>Combining helpers for implementing <A HREF="IPermission.htm#com_0003000d0f010200">IPermission.combine</A>. With one exception, which is the <A HREF="PermissionUtils.htm#com_0003000d08010e00">concatVectors</A> method, all of these methods return the concatenation of deep copies of two objects. 
</UL>
<H3 STYLE="color:#333366"><A NAME="com_0003000d08010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000d08010100">ArraytoString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String ArraytoString (Object o);
</FONT></PRE>
<P><P>Recursively constructs a string representation for an array of any type and for each of its elements. 

<P><B>Return Value:</B> <P>Returns a string representation of the specified array. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>o</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array to construct the string representation of. The component type can be any class type or any primitive type. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the specified object is not an array. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010200">combineArraysOfIntRanges</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static IntRanges[] combineArraysOfIntRanges (IntRanges[] r1,
        IntRanges[] r2);
</FONT></PRE>
<P><P>Copies two arrays of <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A> into a new array. The elements are copied using <A HREF="IntRanges.htm#com_0003001408020d00">IntRanges.copy</A>. 

<P><B>Return Value:</B> <P>Returns a new array containing copies of the elements of <I>r1</I>, followed by copies of the elements of <I>r2</I>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>r1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first array of <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A>, or null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>r2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The second array of <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A>, or null. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010300">combineArraysOfStrings</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String[] combineArraysOfStrings (String[] list1,
        String[] list2);
</FONT></PRE>
<P><P>Copies two arrays of strings into a new list. The strings in <I>list1</I> are copied first into the new list, followed by the strings in <I>list2</I>. 

<P><B>Return Value:</B> <P>Returns a new list containing copies of the strings in list1, followed by copies of the strings in list2. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>list1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first list of strings, or null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>list2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The second list of strings, or null. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010400">combinePatterns</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static WildcardExpression combinePatterns (WildcardExpression spec1,
        WildcardExpression spec2);
</FONT></PRE>
<P><P>Combines two <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A> objects. The resulting expression will first match any strings that are matched by the first expressions, followed by the strings matched by the second expression. The combined expression is independent of the original expressions; changes to the combined expression will not affect the originals and vice versa. 

<P><B>Return Value:</B> <P>Returns a new expression, matching any strings matched by <I>spec1</I> or <I>spec2</I>, in that order. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>spec1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first source expression to combine, or null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>spec2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The second source expression to combine, or null. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010500">combineVectorsOfIntRanges</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static Vector combineVectorsOfIntRanges (Vector v1, Vector v2);
</FONT></PRE>
<P><P>Combines two vectors containing <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A> objects. 

<P><B>Return Value:</B> <P>Returns a new vector containing the elements of <I>v1</I>, followed by the elements of <I>v2</I>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first <B>Vector</B> of <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A>, or null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The second <B>Vector</B> of <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A>, or null. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010600">compareArraysOfStrings</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int compareArraysOfStrings (String[] list1, String[] list2,
        int cmp);
</FONT></PRE>
<P><P>Compares two arrays of strings. 

<P><B>Return Value:</B> <P>Returns a new comparison result, merged with the specified previous comparison result using <A HREF="PermissionUtils.htm#com_0003000d08011400">mergeComparisonResults</A>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>list1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first list of strings, or null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>list2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The second list of strings, or null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cmp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A previous comparison result for other resources of the permissions. For the first resource of a permission, this is typically <A HREF="SetComparison.htm#com_000300141a020002">SetComparison.EMPTY</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010700">compareBooleans</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int compareBooleans (boolean f1, boolean f2, int prevcmp);
</FONT></PRE>
<P><P>Compares two booleans. Each boolean represents access to resources that are independent of the other resources of the permissions. 

<P><B>Return Value:</B> <P>Returns a new comparison result, merged with the previous comparison result using <A HREF="PermissionUtils.htm#com_0003000d08011400">mergeComparisonResults</A>. 
<P>The following table shows how booleans are compared by this method. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><I>f1</I>
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><I>f2</I>
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Result before merging
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">true
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">true
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020005">SetComparison.EQUAL</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">true
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">false
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020004">SetComparison.EMPTY_SUPERSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">false
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">true
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020003">SetComparison.EMPTY_SUBSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">false
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">false
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020002">SetComparison.EMPTY</A>
</FONT></TD>
</TR>
</TABLE>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, access to the resource in the first permission is granted; otherwise, access is denied. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, access to the resource in the second permission is granted; otherwise, access is denied. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>prevcmp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A previous comparison result for other resources of the permissions. For the first resource of a permission, this is typically <A HREF="SetComparison.htm#com_000300141a020002">SetComparison.EMPTY</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010800">compareFlags</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int compareFlags (int flags1, int flags2, int mask,
        int prevcmp);
</FONT></PRE>
<P><P>Compares two sets of flags. Each flag represents access to resources that are independent of other resources of the permissions. The flags to be compared are selected by a bitmask and are compared as a unit. 

<P><B>Return Value:</B> <P>Returns a new comparison result, merged with the previous comparison result using <A HREF="PermissionUtils.htm#com_0003000d08011400">mergeComparisonResults</A>. 
<P>The following table shows the results of comparing different sets of flags. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><I>flags1</I> &amp; <I>mask</I>
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><I>flags2</I> &amp; <I>mask</I>
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Result before merging
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">nonzero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">nonzero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020005">SetComparison.EQUAL</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">nonzero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">zero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020004">SetComparison.EMPTY_SUPERSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">zero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">nonzero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020003">SetComparison.EMPTY_SUBSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">zero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">zero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020002">SetComparison.EMPTY</A>
</FONT></TD>
</TR>
</TABLE>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flags that determine access to resources in the first permission 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flags that determine access to resources in the second permission. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>mask</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A bitmask that is combined with the flags (using the logical AND operator (&amp;)) to determine which resources are to be compared as a unit. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>prevcmp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A previous comparison result for other resources of the permissions. For the first resource of a permission, this is typically <A HREF="SetComparison.htm#com_000300141a020002">SetComparison.EMPTY</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010900">compareIncludeExcludePatterns</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int compareIncludeExcludePatterns (
        WildcardExpression include1, WildcardExpression exclude1,
        WildcardExpression include2, WildcardExpression exclude2, int cmp );
</FONT></PRE>
<P><P>Compares sets of resources specified by include/exclude patterns. The include pattern specifies resources for which access will be granted, and the exclude rules specify resources that are to be excluded from the include rules. 
<P>The following table lists several include/exclude pairs and specifies the result obtained by comparing each pair using this method. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Pair 1
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Pair 2
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Result
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">include *<BR>exclude *.txt
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">include *
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020007">SUBSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">include *<BR>exclude *.txt
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">include *.doc
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020008">SUPERSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">include *<BR>exclude *.txt
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">include *<BR>exclude *.doc
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020006">OVERLAP</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">include *<BR>exclude *.txt
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">include *<BR>exclude foo.txt
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020007">SUBSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">include *<BR>exclude *.txt
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">include *.txt
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020001">DISJOINT</A>
</FONT></TD>
</TR>
</TABLE>
<P><B>Return Value:</B> <P>Returns a new comparison result, merged with the previous comparison result using <A HREF="PermissionUtils.htm#com_0003000d08011400">mergeComparisonResults</A>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>include1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">For the first permission, the patterns that specify resources to grant access to, or null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>exclude1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">For the first permission, the patterns that specify resources to exclude from the include rules. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>include2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">For the second permission, the patterns that specify resources to grant access to. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>exclude2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">For the second permission, the patterns that specify resources to exclude from the include rules. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cmp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A previous comparison result for other resources of the permissions. For the first resource of a permission, this is typically <A HREF="SetComparison.htm#com_000300141a020002">SetComparison.EMPTY</A>. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if any of the exclude rules are not a subset of one or more of the include rules, or if the exclude rules are specified without the include rules. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010a00">compareInclusiveBooleans</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int compareInclusiveBooleans (boolean f1, boolean f2,
        int prevcmp);
</FONT></PRE>
<P><P>Compares two booleans that represent inclusive access to resources. A boolean value of false means that access to resources may be granted; a value of true means that more resources will be granted. Typically, this comparator is used only when the possession of the permission itself has meaning, because it becomes impossible to determine <A HREF="SetComparison.htm#com_000300141a020001">DISJOINT</A> or <A HREF="SetComparison.htm#com_000300141a020002">EMPTY</A> permissions after use of this comparator. 

<P><B>Return Value:</B> <P>Returns a new comparison result, merged with the previous comparison result using <A HREF="PermissionUtils.htm#com_0003000d08011400">mergeComparisonResults</A>. 
<P>The following table shows how booleans are compared by this method. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><I>f1</I>
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><I>f2</I>
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Result before merging
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">true
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">true
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020005">SetComparison.EQUAL</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">true
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">false
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020008">SetComparison.SUPERSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">false
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">true
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020007">SetComparison.SUBSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">false
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">false
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020005">SetComparison.EQUAL</A>
</FONT></TD>
</TR>
</TABLE>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A flag that specifies the type of access to the resource in the first permission. If false, access to the resource is not denied; if true, more privileged access to the resource is granted. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A flag that specifies the type of access to the resource in the second permission. If false, access to the resource is not denied; if true, more privileged access to the resource is granted. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>prevcmp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A previous comparison result for other resources of the permissions. For the first resource of a permission, this is typically <A HREF="SetComparison.htm#com_000300141a020002">SetComparison.EMPTY</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010b00">compareInclusiveFlags</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int compareInclusiveFlags (int flags1, int flags2, int mask,
        int prevcmp);
</FONT></PRE>
<P><P>Compares two sets of flags that represent inclusive access to resources. The flags to be compared are selected by a bitmask and are compared as a unit. A clear flag means that access to resources may be granted; a set flag means that more resources will be granted. Typically, this comparator is only used when the possession of the permission itself has meaning, because it becomes impossible to determine <A HREF="SetComparison.htm#com_000300141a020001">DISJOINT</A> or <A HREF="SetComparison.htm#com_000300141a020002">EMPTY</A> permissions after use of this comparator. 

<P><B>Return Value:</B> <P>Returns a new comparison result, merged with the previous comparison result using <A HREF="PermissionUtils.htm#com_0003000d08011400">mergeComparisonResults</A>. 
<P>The following table shows how flags are compared by this method. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><I>flags1</I> &amp; <I>mask</I>
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><I>flags2</I> &amp; <I>mask</I>
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Result before merging
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">nonzero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">nonzero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020005">SetComparison.EQUAL</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">nonzero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">zero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020008">SetComparison.SUPERSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">zero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">nonzero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020007">SetComparison.SUBSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">zero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">zero
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020005">SetComparison.EQUAL</A>
</FONT></TD>
</TR>
</TABLE>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flags that specify the type of access to the resource in the first permission. If bits are clear, access to the resource is not denied; if bits are set, more privileged access to the resource is granted. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The flags that specify the type of access to the resource in the second permission. If bits are clear, access to the resource is not denied; if bits are set, more privileged access to the resource is granted. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>mask</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A bitmask that is combined with the flags (using the logical AND operator (&amp;)) to determine which resources to compare as a unit. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>prevcmp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A previous comparison result for other resources of the permissions. For the first resource of a permission, this is typically <A HREF="SetComparison.htm#com_000300141a020002">SetComparison.EMPTY</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010c00">compareLimits</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int compareLimits (long limit1, long limit2, int prevcmp);
</FONT></PRE>
<P><P>Compares two positive numerical limits. A higher value is considered more privileged. 

<P><B>Return Value:</B> <P>Returns a new comparison result, merged with the previous comparison result using <A HREF="PermissionUtils.htm#com_0003000d08011400">mergeComparisonResults</A>. 
<P>The following table shows how limits are compared by this method. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><I>limit1</I>
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><I>limit2</I>
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Result before merging
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020002">SetComparison.EMPTY</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">&gt;0
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020004">SetComparison.EMPTY_SUPERSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">&gt;0
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020003">SetComparison.EMPTY_SUBSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">&gt;<I>limit2</I>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">&gt;0
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020008">SetComparison.SUPERSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">&gt;0
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">&gt;<I>limit1</I>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020007">SetComparison.SUBSET</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">=<I>limit2</I>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">=<I>limit1</I>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="SetComparison.htm#com_000300141a020005">SetComparison.EQUAL</A>
</FONT></TD>
</TR>
</TABLE>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>limit1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first numerical limit. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>limit2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The second numerical limit. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>prevcmp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A previous comparison result. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010d00">ComparisonResulttoString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String ComparisonResulttoString (int cmp);
</FONT></PRE>
<P><P>Converts <A HREF="SetComparison.htm#com_000300141a000000">com.ms.util.SetComparison</A> results to a string format. 

<P><B>Return Value:</B> <P>Returns one of the following result strings: 
<UL><LI>"empty" (<A HREF="SetComparison.htm#com_000300141a020002">EMPTY</A>) 
<LI>"equal" (<A HREF="SetComparison.htm#com_000300141a020005">EQUAL</A>) 
<LI>"disjoint" (<A HREF="SetComparison.htm#com_000300141a020001">DISJOINT</A>) 
<LI>"overlap" (<A HREF="SetComparison.htm#com_000300141a020006">OVERLAP</A>) 
<LI>"inclusive subset" (<A HREF="SetComparison.htm#com_000300141a020007">SUBSET</A>) 
<LI>"inclusive superset" (<A HREF="SetComparison.htm#com_000300141a020008">SUPERSET</A>) 
<LI>"empty subset" (<A HREF="SetComparison.htm#com_000300141a020003">EMPTY_SUBSET</A>) 
<LI>"empty superset" (<A HREF="SetComparison.htm#com_000300141a020004">EMPTY_SUPERSET</A>) 
</UL>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cmp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A comparison result from the <A HREF="SetComparison.htm#com_000300141a000000">SetComparison.compareSet</A> method. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010e00">concatVectors</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static Vector concatVectors (Vector v1, Vector v2);
</FONT></PRE>
<P><P>Combines two vectors by copying their contents into a new <B>Vector</B>. 
<P><B>Caution</B>  This is not a deep copy. It is only safe for use with the <A HREF="IPermission.htm#com_0003000d0f010200">IPermission.combine</A> method when the element type is immutable, such as the <B>String</B> type. 
<P><B>Return Value:</B> <P>Returns a new vector containing the elements of <I>v1</I>, followed by the elements of <I>v2</I>. If either of the vectors are null, the other non-null vector is returned. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first vector to combine, or null. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The second vector to combine, or null. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08010f00">copyArrayOfIntRanges</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static IntRanges[] copyArrayOfIntRanges (IntRanges[] ap);
</FONT></PRE>
<P><P>Returns a deep copy of an array of <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A> objects. Each element is copied using the <A HREF="IntRanges.htm#com_0003001408020d00">IntRanges.copy</A> method. 

<P><B>Return Value:</B> <P>Returns null if <I>ap</I> is null; otherwise, returns a new array that contains copies of the elements of <I>ap</I>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ap</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A>, or null. The array can contain null elements. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08011000">copyArrayOfVectorsOfIntRanges</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static Vector[] copyArrayOfVectorsOfIntRanges (Vector[] av);
</FONT></PRE>
<P><P>Returns a deep copy of an array of <B>Vector</B>s containing <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A> objects. Each <B>Vector</B> is copied using <A HREF="PermissionUtils.htm#com_0003000d08011200">copyVectorOfIntRanges</A>. 

<P><B>Return Value:</B> <P>Returns null if <I>av</I> is null; otherwise, a new array of vectors is returned that contains new vectors with copies of their elements. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>av</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of <B>Vectors</B>, or null. The elements of the array or the vectors can be null. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08011100">copyArrayOfWildcardExpressions</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static WildcardExpression[] copyArrayOfWildcardExpressions (
        WildcardExpression[] ap);
</FONT></PRE>
<P><P>Returns a deep copy of an array of <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A>s. Each expression is copied using <A HREF="WildcardExpression.htm#com_0003001415021000">WildcardExpression.copy</A>. 

<P><B>Return Value:</B> <P>Returns null if <I>ap</I> is null; otherwise, a new array is returned that contains copies of the elements of <I>ap</I>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ap</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of <A HREF="WildcardExpression.htm#com_0003001415000000">WildcardExpression</A>s, or null. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08011200">copyVectorOfIntRanges</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static Vector copyVectorOfIntRanges (Vector v);
</FONT></PRE>
<P><P>Returns a deep copy of a vector of <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A> objects. Each element is copied using the <A HREF="IntRanges.htm#com_0003001408020d00">IntRanges.copy</A> method. 

<P><B>Return Value:</B> <P>Returns a new <B>Vector</B> object containing copies of the elements of <I>v</I>, or returns null if <I>v</I> is null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The vector of <A HREF="IntRanges.htm#com_0003001408000000">IntRanges</A> to copy, or null. The vector can contain null elements. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08011300">invertComparisonResult</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int invertComparisonResult (int cmp);
</FONT></PRE>
<P><P>Inverts comparison results. 

<P><B>Return Value:</B> <P>Returns the inverted comparison result, described as follows: 
<UL><LI>If <I>cmp</I> is <A HREF="SetComparison.htm#com_000300141a020007">SUBSET</A>, <A HREF="SetComparison.htm#com_000300141a020008">SUPERSET</A> is returned. 
<LI>If <I>cmp</I> is <A HREF="SetComparison.htm#com_000300141a020008">SUPERSET</A>, <A HREF="SetComparison.htm#com_000300141a020007">SUBSET</A> is returned. 
<LI>If <I>cmp</I> is <A HREF="SetComparison.htm#com_000300141a020003">EMPTY_SUBSET</A>, <A HREF="SetComparison.htm#com_000300141a020004">EMPTY_SUPERSET</A> is returned. 
<LI>If <I>cmp</I> is <A HREF="SetComparison.htm#com_000300141a020004">EMPTY_SUPERSET</A>, <A HREF="SetComparison.htm#com_000300141a020003">EMPTY_SUBSET</A> is returned. 
</UL>
<P>Any other result is not affected by this method and is simply returned. Notice that <A HREF="SetComparison.htm#com_000300141a020005">EQUAL</A> and <A HREF="SetComparison.htm#com_000300141a020001">DISJOINT</A> are not inverted by this method. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cmp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The result to be inverted. It can be any of the following comparison results of the <B>compare</B> method: 
<UL><LI><A HREF="SetComparison.htm#com_000300141a020007">SetComparison.SUBSET</A> returns <A HREF="SetComparison.htm#com_000300141a020008">SetComparison.SUPERSET</A>. 
<LI><A HREF="SetComparison.htm#com_000300141a020008">SetComparison.SUPERSET</A> returns <A HREF="SetComparison.htm#com_000300141a020007">SetComparison.SUBSET</A>. 
<LI><A HREF="SetComparison.htm#com_000300141a020003">SetComparison.EMPTY_SUBSET</A> returns <A HREF="SetComparison.htm#com_000300141a020004">SetComparison.EMPTY_SUPERSET</A>. 
<LI><A HREF="SetComparison.htm#com_000300141a020004">SetComparison.EMPTY_SUPERSET</A> returns <A HREF="SetComparison.htm#com_000300141a020003">SetComparison.EMPTY_SUBSET</A>. 
</UL>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08011400">mergeComparisonResults</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int mergeComparisonResults (int cmp1, int cmp2);
</FONT></PRE>
<P><P>Merges the comparison results from <A HREF="SetComparison.htm#com_000300141a010100">SetComparison.compareSet</A> of two different sets into one, as though they were part of the same set. 

<P><B>Return Value:</B> <P>Returns the merged comparison result. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cmp1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first comparison result. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cmp2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The second comparison result. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000d08011500">parseStringIntoArray</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String[] parseStringIntoArray(String str,String delims);
</FONT></PRE>
<P><P>Splits a string into an array of strings at the specified delimiters. 

<P><B>Return Value:</B> <P>Returns the string that results from parsing. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>str</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string that is parsed. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>delims</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The delimiters to use when parsing. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
