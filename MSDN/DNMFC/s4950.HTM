<HTML>
<HEAD>
<meta name="PREMIUM" content="MSDN">
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta name="MS.LOCALE" content="EN-US">
<meta name="DESCRIPTION" content="This page is from the MFC Migration Kit book in the MSDN Library">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Learn the Pressure Points</TITLE><META NAME="MS-HKWD" CONTENT="Learn the Pressure Points"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<H3>  Learn the Pressure Points</H3><P>MFC is a "skeleton" application (with some flesh already on the bones). To customize this skeleton with your own code, you must learn where to attach your code to the framework. Perhaps you're familiar with the notion of "pressure points" on the human body; if a person is bleeding, you locate the appropriate pressure point, apply pressure there, and the bleeding stops. By analogy, MFC has pressure points too. </P>
<P>Every bit of functionality already built into MFC is located in one or more member functions of one or more classes. To modify the default functionality, you must locate the appropriate function(s), override them in a derived class, and supply your own functionality.</P>
<P>For example, if you want to do your own input/output rather than relying on MFC serialization, you can override the framework in several ways, as described in <A HREF="S494A.HTM">Use Document Serialization for Input/Output</A>.Determining which functions to override can be difficult. The better you understand how MFC does what it does, how each class works, and what the major subsystems and architectures in MFC are, the easier it is to make this determination. So take the time to experiment with MFC. Read the documentation. Learn to browse the sources and use the wizards. Study the source files. And talk to other MFC programmers, who are rapidly building up the lore of MFC programming. Soon you'll be writing successful MFC applications and making your own contributions to MFC lore. And you'll be using the C++ API for Windows.</P>
<P></P>
</FONT>
</BODY>
</HTML>
