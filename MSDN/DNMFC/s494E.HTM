<HTML>
<HEAD>
<meta name="PREMIUM" content="MSDN">
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta name="MS.LOCALE" content="EN-US">
<meta name="DESCRIPTION" content="This page is from the MFC Migration Kit book in the MSDN Library">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>You Can Understand MFC's Structure</TITLE><META NAME="MS-HKWD" CONTENT="You Can Understand MFC's Structure"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<H3>  You <I>Can</I> Understand MFC's Structure</H3><P>The MFC framework, and therefore any MFC application, has a very rational structure. MFC classes encapsulate key abstractions: the application as a whole, documents, frame windows, views of a document through a frame window's client area, message maps, dialog boxes, and GDI objects.</P>
<P>A running MFC application is a collection of communicating objects based on these abstractions. An object is essentially a different kind of code module whose functions you can call and whose variables you can access (unless they're protected or private). There's still a <B>WinMain</B> function that registers window classes and operates a message pump, although <B>WinMain</B> is hidden within MFC and designed so you don't normally have to touch it. Windows-based messages are still sent to windows, but the messages are handled differently. And MFC provides default (but sometimes very complete) implementations of common menu commands, such as File Open, and clean protocols for implementing other commands, such as the clipboard commands on the Edit menu.</P>
<P>For an overview of MFC's structure, see the hierarchy chart in the <I>Class Library Reference</I> or your C++ documentation.</P>
</FONT>
</BODY>
</HTML>
