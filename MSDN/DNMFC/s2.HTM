<HTML>
<HEAD>
<meta name="PREMIUM" content="MSDN">
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta name="MS.LOCALE" content="EN-US">
<meta name="DESCRIPTION" content="This page is from the MFC Migration Kit book in the MSDN Library">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Migrating from C to C++ Using the Microsoft Foundation Class Library</TITLE><META NAME="MS-HKWD" CONTENT="Migrating from C to C++ Using the Microsoft® Foundation Class Library"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<H1>    Migrating from C to C++ Using the Microsoft Foundation Class Library</H1><P>This migration guide is for the software developer with a large body of Windows&trade; code written in C. Except for your existing code, moving to C++ and the Microsoft Foundation Class Library (MFC) looks attractive. You've heard about the benefits of C++, and many developers are touting all the professional features you get with MFC. Besides that, the bar keeps getting higher with OLE and new versions of Windows to support, not to mention multiplatform opportunities. But you have all that C code.</P>
<P>Read on.</P>
<P>This migration guide tells you how to convert a C program for Windows to C++, using MFC. You can gain most of the benefits of C++ and MFC with a minimum of pasting code into MFC classes and a minimum of C-to-C++ translation. The secret? An MFC function called <B>CWnd::WindowProc</B>, which was designed precisely for this purpose.</P>
<P>
<P><B>Note</B>  This migration guide supports the Microsoft Visual C++&trade; development system, Symantec&reg; C++&trade;, Watcom&trade; C/C++&trade;, and MetaWare&reg; High C/C++&trade;, all of which supply MFC. Most of these products also supply tools to help you create the framework of your application initially and then "wire up" much of the additional functionality. Visual C++ supplies AppWizard and ClassWizard. Symantec C++ supplies AppExpress and ClassExpress. Watcom C/C++ can exploit the technology of MFC add-in tool vendors such as Visual Programmer&trade; from Blue Sky. MetaWare C/C++ can integrate with the Visual C++ shell and so can use Visual C++ tools.</P>
<P>Where it's necessary to mention one of these tools, this migration guide mentions the Visual C++ tool. Users of the Symantec, Watcom, and MetaWare tools should substitute the appropriate name and consult the related documentation.</P>
<P>
</FONT>
</BODY>
</HTML>
