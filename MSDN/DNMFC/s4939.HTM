<HTML>
<HEAD>
<meta name="PREMIUM" content="MSDN">
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta name="MS.LOCALE" content="EN-US">
<meta name="DESCRIPTION" content="This page is from the MFC Migration Kit book in the MSDN Library">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Checking for Phase 1 Leftovers</TITLE><META NAME="MS-HKWD" CONTENT="Checking for Phase 1 Leftovers"><META NAME="MS-HKWD" CONTENT="Window Registration Calls Outside WinMain"><META NAME="MS-HKWD" CONTENT="Calls to DefWindowProc and Other Non-MFC Functions"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<H3>    Checking for Phase 1 Leftovers</H3><P>If you did everything correctly in <A HREF="S4923.HTM">Phase 1</A>, the only leftover issues are possibly the following:</P>
<UL><LI>    You may have code elsewhere than in your <B>WinMain</B> function that calls <B>RegisterClass</B> to <A HREF="#sec0">register window classes</A> (the standard Windows variety, not to be confused with C++ classes).</LI><LI>    You may have calls to other functions not used in MFC. The principal one of these is <A HREF="#sec1">DefWindowProc</A>, which you don't normally call from an MFC application.</LI><LI>    You should have no remaining references to the <B>BeginPaint</B> or <B>EndPaint</B> Windows API functions. See <A HREF="S4932.HTM">Moving Your WM_PAINT Code Into the View</A>.</LI></UL><P>
<H4><A NAME="sec0"></A>  Window Registration Calls Outside WinMain</H4><P>You can search your original C source files for calls to <B>RegisterClass</B>. If any of these calls were for windows that now are equivalent to the CMainFrame and view classes, these calls should have gone away. Otherwise, you can leave them as they are. After all, migration to C++ focuses on those parts of your application that have counterparts in the MFC framework, such as the main frame window and the view (client area). Much of your code should need no further migration, aside from converting C to C++ syntax. For example, if you have a child window that is now a child window of the view (such as a control window of your own) you shouldn't need to do anything to the code for that window, including its WndProc.</P>
<H4><A NAME="sec1"></A>  Calls to DefWindowProc and Other Non-MFC Functions</H4><P>Once you've turned your application into an MFC application, you don't need to call <B>DefWindowProc</B> yourself. MFC's message map mechanism ensures that MFC handles any messages that you don't handle. </P>
<P>As you'll see later, in <A HREF="S493E.HTM">Using the MFC Message Map</A>, MFC applications don't usually use <B>WindowProc</B> and a giant <B>switch</B> statement to handle Windows-based messages. Instead, message handling code is normally placed in separate message handler functions (one per message). MFC calls these class member functions through their class's message map. When you create a handler function for a message, your handler overrides a version defined in your class's MFC base class. Instead of calling <B>DefWindowProc</B> to handle messages that you don't handle, you typically call the base-class version of the handler function, something like this:</P>
<P><BR></P><FONT FACE="COURIER" SIZE="3"><P>void CShowDibView::OnTimer(UINT nIDEvent) 
{
    // your code to handle WM_TIMER

    // then call the base-class version of OnTimer
    CView::OnTimer(nIDEvent);
}
</PRE></FONT>
<P>Notice that your WindowProc function calls <B>CView::WindowProc</B> at the end. In a message handler such as OnTimer, this gives MFC a chance to do its own processing (if any) for the message. In the case of WindowProc, calling the base class lets MFC handle any unhandled messages.</P>
</FONT>
</BODY>
</HTML>
