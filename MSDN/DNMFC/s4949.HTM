<HTML>
<HEAD>
<meta name="PREMIUM" content="MSDN">
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta name="MS.LOCALE" content="EN-US">
<meta name="DESCRIPTION" content="This page is from the MFC Migration Kit book in the MSDN Library">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Move Data Structures into Your Document Class</TITLE><META NAME="MS-HKWD" CONTENT="Move Data Structures into Your Document Class"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<H3>    Move Data Structures into Your Document Class</H3><P>In MFC's document/view architecture, documents store data and views display it. To take fuller advantage of this architecture (and of document serialization, covered later), move important data structures into the <B>CDocument</B>-derived class that AppWizard creates for you.</P>
<P>To move data into the document, create document-class member variables of the appropriate types. For example, suppose your program stores text data in an array. Create a document member variable, perhaps either a <B>CString</B> or one of MFC's array-type collection classes. Add member functions as needed to get and set the data. The following abbreviated example shows what one data structure (using a <B>CObList</B> collection object) looks like, along with several member functions to access the data.</P>
<P><BR></P><FONT FACE="COURIER" SIZE="3"><P>class CPersonDoc : public CDocument
{
    // ...
    // Attributes
    CObList    plistPersons;  // see CObList in Class Library Reference
    CPerson* GetPerson(UINT nPersonID);
    // Operations
    BOOL AddPerson(CPerson* pPerson);
    BOOL DeletePerson(UINT nPersonID);
    // ...
};
</PRE></FONT>
<P>In SHOWDIB, the most obvious data structure to move to the document is the DIB structure. You could create the appropriate DIB handle and store it in the document. Along with the data structure, move over all functions that act on the DIB. If you've already encapsulated the DIB handle within a CDIB class, that class will have the basic DIB-manipulating functions, and the document can store a CDIB or a pointer to a CDIB. </P>
</FONT>
</BODY>
</HTML>
