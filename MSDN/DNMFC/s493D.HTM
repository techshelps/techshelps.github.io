<HTML>
<HEAD>
<meta name="PREMIUM" content="MSDN">
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta name="MS.LOCALE" content="EN-US">
<meta name="DESCRIPTION" content="This page is from the MFC Migration Kit book in the MSDN Library">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Phase 2: Get Rid of Your Message-Handling Switch Statements</TITLE><META NAME="MS-HKWD" CONTENT="Phase 2: Get Rid of Your Message-Handling Switch Statements"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<H2>    Phase 2: Get Rid of Your Message-Handling Switch Statements</H2><P>You now have an MFC C++ application created from your existing code base. The application already makes use of MFC to do more than it could originally, depending on the options you chose in AppWizard. But so far the application is not very tightly integrated with MFC; as a result, there are many MFC features it still can't take advantage of.</P>
<P>
<P><B>Note</B>  Phases 2 and 3 are optional. Consider them steps that add significant value to your application but that aren't strictly necessary. These steps have not been taken in the SHOWDIB sample application. Most are illustrated in the Scribble tutorial and other Visual C++ documentation and samples. See your C++ documentation.</P>
<P>
<P>In Phase 2, you'll continue to exploit the class structure of MFC, and you'll make use of the MFC message map mechanism. At the end of Phase 1, there are two large switch statements left in your migrated application. One is in WindowProc. The other is in OnCmdMsg. The goal of Phase 2 is to systematically remove both the WindowProc and OnCmdMsg function overrides, replacing them with message-mapped calls to class member functions designed to handle specific Windows-based messages.</P>
<P>Phase 2 steps include:</P>
<P>    1.    <A HREF="S493E.HTM">Using the MFC message map</A> to handle Windows-based messages.</P>
<P>    2.    <A HREF="S493F.HTM">Using MFC's menu update mechanism</A> to update the state of menus (and other user interface objects, such as toolbar buttons).</P>
<P>    3.    <A HREF="S4940.HTM">Using class member variables to replace using the cbWndExtra and cbClsExtra members</A> of the <B>WNDCLASS</B> structure, in which Windows-based programmers usually store application-specific information.</P>
<P>
</FONT>
</BODY>
</HTML>
