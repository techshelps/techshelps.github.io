<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft Visual C++ Accessibility</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="vxmscmicrosoftvisualcaccessibility"></a>Microsoft Visual C++ Accessibility</h1>
<h2>Enlarging Toolbar Buttons</h2>
<p class=blue>
<b>To enlarge toolbar buttons</b>
<ol>
<li>
On the <b>Tools</b> menu, click <b>Customize</b>.<br><br></li>
<li>
Click <b>Toolbars</b>, and then select the <b>Large Icons</b> check box.</li>
</ol>
<h2>Enlarging Text in the Code Window</h2>
<p class=blue>
<b>To enlarge text in the Code window</b>
<ol>
<li>
On the <b>Tools</b> menu, click <b>Options</b>.<br><br></li>
<li>
Click the <b>Format</b> tab.<br><br></li>
<li>
In the <b>Colors</b> group box, select the <b>Text</b> entry in the list box, and then set the font and size you prefer.</li>
</ol>
<h2>Turning on Screen Reader Compatible Menus</h2>
<p>
Visual C++ uses a custom version of Command Bars, which does not include Microsoft Active Accessibility (MSAA) support. However, you can turn on standard Windows menus and toolbars instead, allowing your screen reader to access them.</p>
<p class=blue>
<b>To use Screen Reader Compatible Menus</b>
<ol>
<li>
On the <b>Tools</b> menu, click <b>Options</b>.<br><br></li>
<li>
Select the <b>Use Screen Reader Compatible Menus</b> check box on the <b>Workspace</b> tab.</li>
</ol>
<h2>Customizing the Keyboard</h2>
<p>
Visual C++ supports Dvorak keyboard layouts, which make the most frequently typed characters more accessible. Also, you can create your own keyboard scheme, with your own accelerators.</p>
<p class=blue>
<b>To customize your keyboard</b>
<ol>
<li>
On the <b>Tools</b> menu, click <b>Customize</b>.<br><br></li>
<li>
Click the <b>Keyboard</b> tab.</li>
</ol>
<h2>Rearranging Windows</h2>
<p>
You can select the windows you want docked by using the list on the <b>Workspace</b> tab of the <b>Options</b> dialog box, available on the <b>Tools</b> menu. When a window is not docked, it becomes an MDI child window, letting you access one window at a time. If you are blind, you may find this setting preferable.</p>
<h2>Customizing the Controls Toolbar</h2>
<p>
You can customize the Controls toolbar by adding controls to it.</p>
<p class=blue>
<b>To add a control to the Controls toolbar</b>
<ol>
<li>
On the <b>Project</b> menu, point to <b>Add to Project</b>, and then click <b>Components and Controls</b>.<br><br></li>
<li>
In the <b>Components and Controls Gallery</b> dialog box, open a subfolder and select a control.<br><br></li>
<li>
Click <b>Insert</b>.<br><br></li>
<li>
Click <b>OK</b> in the confirmation dialog box.<br><br></li>
<li>
Click <b>OK</b> in the <b>Confirm Classes</b> dialog box to accept the default names for the control classes, or modify them and then click <b>OK</b>.<br><br></li>
<li>
When you are finished adding controls, click <b>Close</b>.</li>
</ol>
<p class=indent>
<span class=blue><b>Note</b></span>&nbsp;&nbsp;&nbsp;The Controls toolbar is available within the Dialog editor. To display the Controls toolbar, right-click on an empty part of the menu bar and select <b>Controls</b> from the shortcut menu.</p>
<h2>Providing Visual Cues while Editing Code</h2>
<p>
Margin Indicators in the Code window enable you to provide visual cues to certain actions while editing your code. The Indicators appear on the left margin of the Code window. You can click to select or clear the <b>Selection Margin</b> in the <b>Editor</b> tab of the <b>Options</b> dialog box (<b>Tools</b> menu).</p>
<h2>Adding Prompts for Methods and Parameters</h2>
<p>
The Visual C++ text editor includes a new feature called Statement Completion. Statement Completion enables you to display pop-up windows in the text editor that prompt you with available members for the current object and the parameters that complete a function or statement. These pop-up windows can be helpful if you have difficulty typing. However, they do interfere with focus in the Text editor, which can be problematic for some users. You can turn off these pop-up windows by clearing the <b>Auto list members</b> and <b>Auto parameter info</b> check boxes in the <b>Editor</b> tab of the <b>Options</b> dialog box (<b>Tools</b> menu). For more information about Statement Completion, see "About Automatic Statement Completion" in the Visual C++ online documentation.</p>
</BODY>
</HTML>
