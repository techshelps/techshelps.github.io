<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CustomFormat Property</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbprocustomformatproperty"></a>CustomFormat Property</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproCustomFormatProperty_C;vbproCustomFormatPropertyC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproCustomFormatProperty_X;vbproCustomFormatPropertyX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproCustomFormatProperty_A;vbproCustomFormatPropertyA">
</object></p>
<p>
Returns or sets a value that specifies the format used by the control when displaying date/time information.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>object</i>.<b>CustomFormat</b> [= <i>string</i>]</p>
<p>
The <b>CustomFormat</b> property syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=17%><b>Part</b></td>
<td class=label width=83%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=17%><i>object</i></td>
<td width=83%>An <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectexpression">
</object><a href=JavaScript:alink_4.Click()>object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=17%><i>string</i></td>
<td width=83%>A <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defstringexpression">
</object><a href=JavaScript:alink_5.Click()>string expression</a> specifying the format of the display.</td>
</tr>
</table><br>
<p class=label>
<b>Settings</b></p>
<p>
The DateTimePicker control supports the following format characters:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>String Fragment</b></td>
<td class=label width=69%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=31%><i>d</i></td>
<td width=69%>The one- or two-digit day.</td>
</tr>
<tr valign=top>
<td width=31%><i>dd</i></td>
<td width=69%>The two-digit day. Single digit day values are preceded by a zero.</td>
</tr>
<tr valign=top>
<td width=31%><i>ddd</i></td>
<td width=69%>The three-character weekday abbreviation.</td>
</tr>
<tr valign=top>
<td width=31%><i>dddd</i></td>
<td width=69%>The full weekday name.</td>
</tr>
<tr valign=top>
<td width=31%><i>h</i></td>
<td width=69%>The one- or two-digit hour in 12-hour format.</td>
</tr>
<tr valign=top>
<td width=31%><i>hh</i></td>
<td width=69%>The two-digit hour in 12-hour format. Single digit values are preceded by a zero.</td>
</tr>
<tr valign=top>
<td width=31%><i>H</i></td>
<td width=69%>The one- or two-digit hour in 24-hour format.</td>
</tr>
<tr valign=top>
<td width=31%><i>HH</i></td>
<td width=69%>The two-digit hour in 24-hour format. Single digit values are preceded by a zero.</td>
</tr>
<tr valign=top>
<td width=31%><i>m</i></td>
<td width=69%>The one- or two-digit minute.</td>
</tr>
<tr valign=top>
<td width=31%><i>mm</i></td>
<td width=69%>The two-digit minute. Single digit values are preceded by a zero.</td>
</tr>
<tr valign=top>
<td width=31%><i>M</i></td>
<td width=69%>The one- or two-digit month number.</td>
</tr>
<tr valign=top>
<td width=31%><i>MM</i></td>
<td width=69%>The two-digit month number. Single digit values are preceded by a zero.</td>
</tr>
<tr valign=top>
<td width=31%><i>MMM</i></td>
<td width=69%>The three-character month abbreviation.</td>
</tr>
<tr valign=top>
<td width=31%><i>MMMM</i></td>
<td width=69%>The full month name.</td>
</tr>
<tr valign=top>
<td width=31%><i>s</i></td>
<td width=69%>The one- or two- digit seconds.</td>
</tr>
<tr valign=top>
<td width=31%><i>ss</i></td>
<td width=69%>The two-digit seconds. Single digit values are proceeded by a zero.</td>
</tr>
<tr valign=top>
<td width=31%><i>t</i></td>
<td width=69%>The one-letter AM/PM abbreviation (that is, "AM" is displayed as "A").</td>
</tr>
<tr valign=top>
<td width=31%><i>tt</i></td>
<td width=69%>The two-letter AM/PM abbreviation (that is, "AM" is displayed as "AM").</td>
</tr>
<tr valign=top>
<td width=31%><i>X</i></td>
<td width=69%>A callback field. The control still uses the other valid format characters, and queries the owner to fill in the "X" portion. The owner must be ready to respond to events that request information about how to fill in these fields. Multiple 'X' characters can be used in series to signify unique callback fields.</td>
</tr>
<tr valign=top>
<td width=31%><i>y</i></td>
<td width=69%>The one-digit year (that is, 1997 would be displayed as "7").</td>
</tr>
<tr valign=top>
<td width=31%><i>yy</i></td>
<td width=69%>The last two digits of the year (that is, 1997 would be displayed as "97").</td>
</tr>
<tr valign=top>
<td width=31%><i>yyy</i></td>
<td width=69%>The full year (that is, 1997 would be displayed as "1997").</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
The <b>CustomFormat</b> property acts as an input mask. To display a custom format, the <b>Format</b> property must be set to <b>dtpCustom</b></p>
<p>
You can add body text to the format string. For example, if you want the control to display the current date with the format "Today is:Friday July 25, 1997 Time: 8:34 AM", the <b>CustomFormat</b> string is "<code>'Today is:' ddddMMMMdd, yyy ' Time: 'h:mtt"</code>. Body text must be enclosed in single quotation marks.</p>
<p>
One of the custom format fields described above is a callback field. A callback field allows you to customize output by specifying certain parts of a format string as callback fields. To declare a callback field, you must include one or more 'X' characters (ASCII Code 88) anywhere in the body of the format string. Callback fields are displayed in left-to-right order.</p>
<p>
When a new date is displayed in a format that includes one or more callback fields, the Format and FormatSize events are raised for each callback field. You can use the Format event to specify a custom response string, and the FormatSize event to determine the space needed to display the string. This behavior gives you complete control of how a callback field is displayed.</p>
<p>
Each sequence of X's has a specific meaning. For example, X might mean "st/nd/rd/th" (for "1st" "2nd" "3rd" or "4th") and "XX" may mean "first" "second" "third" or "fourth". These fields do not format the user's text. They format the date into a displayable format.</p>
<p>
For example, let's say you want to display the month in Spanish as well as English in a format like this:</p>
<pre><code>July (Julio) 29</code></pre>
<p>
You would create a format string that looked like this:</p>
<pre><code>MMMM XXXX d</code></pre>
<p>
When processing the Format and FormatSize events, you can check which callback field is being called by comparing the input format sting with "XXXX". If the field string matches, an output string "(Julio)" can be built and the length of the output string can be supplied.</p>
<p>
The number of Xs is only used by an application to determine what text to supply for a callback field. When processing the FormatSize event, the size of the text can be programmatically calculated.</p>
<p>
You can create unique callback fields by repeating the "X" character. Thus, the format string "XXddddMMMdd', 'yyyXXX" contains two callback fields. Callback fields are treated as valid fields, so the application must be prepared to handle Key events.</p>
</BODY>
</HTML>
