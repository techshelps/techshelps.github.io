<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the SMS API</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bkopr_using_the_sms_api"></a>Using the SMS API</h1>
<p>
In a Microsoft® Systems Management Server (SMS) system, the database for a primary site stores the inventory and configuration information for itself and the sites below it in the site hierarchy. The SMS API provides a C-language interface that enables your application to retrieve, add, and remove data in the SMS database.</p>
<p>
You can use the SMS API to gain access to objects in an SMS database, such as sites, inventoried objects, packages, jobs, queries, machine groups, and site groups.</p>
<p>
All SMS objects are represented by the SMS API as containers, folders, and scalars. This model provides a standard interface to all types of objects within the Systems Management Server. The SMS API supports the concept of filters to regulate object selection. Filters define the criteria used to select the objects you want to find and are configured using tokens. </p>
<p>
The following topics present the issues significant to designing applications that take full advantage of the SMS API. For more information about these topics, see the Microsoft Systems Management Server documentation in the "Setup and Systems Management Services" section of the Microsoft Platform SDK.</p>
<p>&nbsp;</p></body>
</HTML>
