<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3270 Emulator Interface Architectures and Topics</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bkopr_emulator_interface_architectures_and_topics"></a>3270 Emulator Interface Architectures and Topics</h2>
<p>
Several unique architecture concepts are contained in Microsoft SNA Server to support 3270 emulation interface clients. The <i>BASE </i>is a part of each SNA Server component, such as the local 2.1 node or a link service, that provides the operating environment for the core functions of that component. The BASE passes messages between components and provides functions common to all components, such as diagnostic tracing.</p>
<p>
A BASE and the components within it (that is, an SNA Server executable program) is called a <i>locality</i>. The SNA Server system consists of one or more communicating localities with a single configuration file. Because the number of localities and their types are not configured in advance, the relationships among the localities are dynamically configured as individual localities come and go. Localities entering and leaving a system in this way are called <i>dynamic localities </i>and communicate using the DMOD (Dynamic Access Module) component.</p>
<p>
The Microsoft SNA Server SDK pertains only to the DL-BASE, which is the type of BASE used by SNA Server 3270 emulation programs. The SNA Server DL-BASE<code> </code>supports a single SNA Server component or a single user application and has entry points for initialization, sending messages, receiving messages, and termination.</p>
<p>
Microsoft SNA Server supports the concept of identifiable partners within a locality to facilitate components and applications communication. The term <i>partner </i>refers to an addressable component of a locality—that is, code to which messages can be sent. In an SNA Server system, there is generally only one partner within a locality (such as a link service or the 3270 emulation program); however, separate functions within the local 2.1 node (such as the 3270 or APPC functions) may be considered separate partners.</p>
<p>
The content of the communication between components and applications in a Microsoft SNA Server environment is called a <i>message</i>. Messages always contain fixed-format header information, such as a message type and addressing information and, generally, other header information specific to a particular message type (other data can be included also).</p>
<p>
Messages are saved in buffers. The buffers consist of the following members:
<ul>
<li>
<b>Header</b>, which contains the fixed format information and a pointer to an element.</li>
<li>
<b>Element</b>, which contains any extra data for a message and a pointer to another element (this member is not required). </li>
</ul>
<p>
</p>
<p>
A message is composed of a buffer header, and elements of contiguous (8-bit) byte sequences of any length, chained to the header. Partners communicate by establishing an LPI connection, and then passing messages to each other (each identified by an LPI address).</p>
<p>&nbsp;</p></body>
</HTML>
