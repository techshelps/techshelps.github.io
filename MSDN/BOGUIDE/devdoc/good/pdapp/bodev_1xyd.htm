<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Running as a Windows NT Server Service</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_bkopr_running_as_a_windows_nt_server_service"></a>Running as a Windows NT Server Service</h3>
<p>
A Windows NT Server service is an executable object installed in the registry database and maintained by the service control manager. The services database includes information that determines whether each installed service is started on demand, or started automatically with Windows NT Server. In either case, the service starts without user intervention. The database can contain logon and security information for a service so that it can run even though no user is logged on. The database also enables system administrators to customize security requirements for each service and thereby control access to it. </p>
<p>
Running as a Windows NT Server service allows a server application to impersonate a client while accessing objects and performing actions on behalf of the client. This capability ensures that the server application can act on behalf of a client without running with an inappropriately high privilege level. It also ensures that the server application will not be able to perform actions that would be denied the client directly. </p>
<p>
By starting automatically, a server application implemented as a service is guaranteed to be available so long as Windows NT Server is running. Moreover, related services can be started easily and, where appropriate, automatically. </p>
<p>
Finally, implementing a server application as a service allows the application to be installed and controlled using standard user and Win32® APIs. Such a service can be started and stopped both locally and remotely, providing network administrators an easy and consistent way to control the service across the network.</p>
<p>&nbsp;</p></body>
</HTML>
