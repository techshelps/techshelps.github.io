<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DL-BASE/DMOD Interface</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bkopr_dl_basefdmod_interface"></a>DL-BASE/DMOD Interface</h2>
<p>
The Microsoft SNA Server DL-BASE/DMOD Interface includes significant entry points that an application, such as a 3270 emulator, can call to send and receive messages from services such as the local 2.1 node. </p>
<p>
Several important tasks occur during proper DL-BASE/DMOD Interface operation:
<ul>
<li>
The 3270 emulator initializes the DL-BASE and then calls the Dynamic Access Module (DMOD) to obtain the necessary configuration information (this also registers the user name with the DMOD). If required, it can obtain further system information such as the SNA Server version number.</li>
<li>
The 3270 emulator inserts the message in a buffer and then calls the DL-BASE to send it. The message contains Source and Destination LPIs, which are set up when the connection is opened.</li>
<li>
When the DMOD receives a message, it calls the 3270 emulator routing procedure (registered during DMOD initialization), which then processes the message.</li>
<li>
LPI connections are opened before data is transferred.</li>
<li>
The 3270 emulator must call SBPUTERM to free DL-BASE/DMOD resources before it terminates.</li>
</ul>
<p>
</p>
<p>
Task switching, supported by MS-DOS version 5.0 and later as well as by Windows operating systems, is handled by the DMOD, and need not concern the 3270 emulator developer. However, the DMOD provides a means, using the <b>REGISTERSWITCHPROC</b> call, for the application to make use of the task switch detection. </p>
<p>
The MS-DOS–based client Network Access Protocol (NAP) provides full support for applications that allow switching between foreground and background operation (for example, terminate-and-stay-resident applications), including fully preemptive scheduling of a background thread. To avoid possible interaction problems, it is important that client applications that will support background operation make use of the facilities provided by the NAP (such as the scheduler and semaphores), rather than implementing separate scheduling mechanisms hooked from MS-DOS interrupts. </p>
<p>&nbsp;</p></body>
</HTML>
