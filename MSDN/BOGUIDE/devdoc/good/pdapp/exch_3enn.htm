<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Client Applications</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_bkopr_using_client_applications"></a>Using Client Applications</h3>
<p>
A client application is a program that runs on a user's computer and is controlled through a user interface. Most client applications interact with Microsoft Exchange Server by retrieving data from the information store, placing information in a public folder, or manipulating messages to be sent or posted. A third-party client application can perform actions similar to those of the existing Microsoft Exchange Client applications, or it can supply new functionality.</p>
<p>
It is not necessary for a client application to be accompanied by a server application. Furthermore, Microsoft Exchange Server can support client applications that run independently—whether or not a Microsoft Exchange Client is running at the same time. You take advantage of this support by setting up your client application to operate directly through MAPI and to connect its logon process to an existing MAPI-compliant Microsoft Exchange Server application session. The application can then interact with information in the Microsoft Exchange Server information store and manipulate information stored and distributed by Microsoft Exchange Server. </p>
<p>
Developing a separate client application is appropriate when:
<ul>
<li>
Your application presents users with a different user interface than that of a Microsoft Exchange Client, but provides access to Microsoft Exchange Server information.</li>
<li>
Your application presents Microsoft Exchange Server information in a way different from what users normally encounter. Microsoft Schedule+ is a good example of this type of client application. Scheduling information is stored and distributed through replication by Microsoft Exchange Server, but the context in which it is presented differs from other Microsoft Exchange Clients.</li>
</ul>
<p>
</p>
<p>
A client application uses profiles to log on to MAPI. However, unlike a server application that creates its own profile, a client application can connect on a user's existing profile, making its startup cleaner and faster. You can also set up your client application to log on and off using its own MAPI session instead of connecting to an existing session (such as a Microsoft Exchange Client session). </p>
<p>
For more information about developing client applications and application design, see the Microsoft Exchange Server documentation in the "Database and Messaging Services" section of the Microsoft Platform SDK.</p>
<p>&nbsp;</p></body>
</HTML>
