<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Other Recommendations for Development of Server Applications</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_bkopr_other_recommendations_for_development_of_server_applications"></a>Other Recommendations for Development of Server Applications</h3>
<p>
This section presents additional development techniques you can incorporate into your application design process for a BackOffice server application.</p>
<p>
<b>Messaging Server Applications</b></p>
<p>
Server applications can be developed to extend the basic functionality of messaging and workgroup software applications such as Microsoft Exchange Server. They can be used to provide a broad range of services, from mail gateways and voice mail to document management, content indexing, and electronic newspapers. Server applications communicate with Microsoft Exchange Server components through MAPI. This communication includes actions such as using the address book, accessing information stores (including public folders), and transferring messages.</p>
<p>
Most server applications are either mailbox agents or gateways. As such, a server application is represented in the Microsoft Exchange Server directory as either a Mailbox-Agent or a Mailbox-Gateway object.</p>
<p>
<b>Mailbox-Agent Objects</b></p>
<p>
A server application that has its own mailbox within Microsoft Exchange Server is a <i>mailbox agent</i>. A typical mailbox agent uses its mailbox to communicate with mail users, gather processing requests, and distribute results. There are three general Mailbox-Agent object configurations a server application can employ: 
<ul>
<li>
<b>It can use its own mailbox</b>. Most server applications are either mailbox agents or gateways, which have their own mailboxes in information stores on Microsoft Exchange Server.</li>
<li>
<b>It can use other mailboxes</b>. Server applications can use mailboxes other than their own to delegate access and for privileged access.</li>
<li>
<b>It can use no mailbox</b>. Every directory object also has a mailbox. If a server application does not need a mailbox, the server application can be configured to have no mailbox at all.</li>
</ul>
<p>
<b>Mailbox-Gateway Objects</b></p>
<p>
A <i>gateway</i> is an interface that connects electronic messaging systems that have different message and address formats. In its simplest form, a gateway receives a mail message, translates it from one messaging system's format to another, maps addresses between the two systems, and then delivers the translated message. Messages transferred by the gateway appear to come directly from the originating mail system. A gateway can translate messages between mail systems within a single organization or between an organization and an outside mail system.</p>
<p>
A Microsoft Exchange Server gateway is a client application of MAPI. This means that it uses MAPI interfaces, methods, and properties to communicate with Microsoft Exchange Server. A gateway is also a server application for Microsoft Exchange Server; as such, it should be implemented as a service of Microsoft Windows NT Server.</p>
<p>
For optimum performance, a gateway should be tightly integrated with MAPI, Windows NT Server, and the Microsoft Exchange Administrator program.</p>
<p>
<b>Open Data Services</b></p>
<p>
Microsoft Open Data Services (ODS) provides a server API that consists of C functions and macros used for creating two types of server applications: 
<ul>
<li>
Applications that are initialized as ODS servers and that support user connections and user queries.</li>
<li>
Applications called <i>extended stored procedures</i> that are added directly to SQL Server and accessed by making procedure calls to SQL Server.</li>
</ul>
<p>
Applications created with ODS can interact with SQL Server database clients, with SQL Server database servers, and with any other elements of a network environment that you define.</p>
<p>
This interaction allows you to create powerful server applications that can:
<ul>
<li>
Provide extensions to SQL Server by integrating features from your network environment whenever certain events occur within SQL Server. For example, you can create extension functions that take specific actions based on updates to SQL Server tables, launch programs that are external to SQL Server, or exchange data with an application external to SQL Server. You can even make these functions transparent to SQL Server users.</li>
<li>
Provide gateways to non-SQL Server database environments. ODS server applications can connect to relational databases to perform general-purpose data access, or to nonrelational data sources to perform application-specific tasks.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
