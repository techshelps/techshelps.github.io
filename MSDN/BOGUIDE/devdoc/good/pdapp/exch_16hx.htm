<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Optimizing Application Performance</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_bkopr_optimizing_application_performance"></a>Optimizing Application Performance</h3>
<p>
Designing a client or server application for optimum performance is a fundamental development goal. This is particularly true for Microsoft Exchange Server applications where the range between average and excellent performance is quite noticeable.</p>
<p>
Recommendations for achieving performance gains include minimizing the number of remote procedure calls (RPCs), using the most efficient MAPI calls, using the MAPI idle engine, inspecting for memory leaks, and using the appropriate data stream (<b>IStream </b>interface or buffered data stream). Other performance recommendations exist as well.</p>
<p>
You can also improve the performance of your applications by using the tools supplied by Microsoft Exchange Server and Windows NT Server, which include the Windows NT Performance Monitor and the FERNEL32 DLL. Additionally, the Network Monitor tool helps determine where network bottlenecks are occurring.</p>
<p>
For more information about optimizing application performance, see the Microsoft Exchange Server documentation in the "Database and Messaging Services" section of the Microsoft Platform SDK.</p>
<p>&nbsp;</p></body>
</HTML>
