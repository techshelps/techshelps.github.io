<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Security in a BackOffice Environment</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bkopr_about_security_in_a_backoffice_environment"></a>About Security in a BackOffice Environment</h1>
<p>
Security in the Microsoft® BackOffice® environment is provided by Microsoft® Windows NT® security subsystems and is based on the Windows NT security model. To properly incorporate security concepts into your application, you need to understand the following about the model: 
<ul>
<li>
The data structures, such as access control lists (ACLs), access control elements (ACEs), security descriptors (SDs), and security identifiers (SIDs). </li>
<li>
How the operating system itself employs security. You can think of the security API as a set of services that are provided for server applications to protect objects from unauthorized access by clients, similar to the way the event log API provides services that help device drivers and applications log errors and notification events.</li>
<li>
How BackOffice components use the security data structures and leverage the security APIs provided by the Microsoft® Win32® API to establish and protect objects.</li>
</ul>
<p>
Windows NT allows you to establish a full range of security levels, from no security to C2, the strictest application security level. The following topics describe many important concepts surrounding use of the Windows NT security features in your BackOffice server or client application. </p>
<p>&nbsp;</p></body>
</HTML>
