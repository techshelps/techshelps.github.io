<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding Constants and Conventions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_bkopr_understanding_constants_and_conventions"></a>Understanding Constants and Conventions</h3>
<p>
Microsoft SNA Server has incorporated many standard C programming conventions into the design of the SNA API. AFTP constant definitions (contained in the header file for the AFTP API) have been created for the sizes of the buffers that are passed across the SNA API. However, all buffers of the specified type must be at least the size of the defined constant to guarantee the requested call will not fail and return a buffer size error.</p>
<p>
It is important for developers to be aware of differences between the SNA Server conventions and those common to C programming. For example, all API calls receiving strings as input require both the string itself and the length of the string. Also, the AFTP API does not require input strings to be null-terminated or guarantee that the output strings are null-terminated. The AFTP API avoids complex structures and pointers to structures for type definitions. </p>
<p>&nbsp;</p></body>
</HTML>
