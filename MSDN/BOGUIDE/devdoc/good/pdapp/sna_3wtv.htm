<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Programming Considerations</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bkopr_programming_considerations"></a>Programming Considerations</h2>
<p>
Many of the programming techniques used in developing LUAs are similar to those used to write APPC applications. The following issues are important to LUA programming:
<ul>
<li>
Windows extensions, such as <b>WinRUI</b> and <b>WinRUICleanup</b>, and the <b>GetLuaReturnCode </b>function are important to efficient use of the LUA and should be used along with other Windows extensions and enhancements when possible.</li>
<li>
Specific tasks may be necessary when developing applications for the Windows NT, Windows 95, Windows version 3.<i>x</i>, MS-DOS, or OS/2 system.</li>
<li>
Several important programming techniques should be incorporated into your application such as using multiple processes and sessions, properly using an LUA LU pool, as well as specific tasks such as BIND checking, distinguishing SNA sense codes from other secondary return codes, and purging the remaining data upon receipt of a negative response. </li>
</ul>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
