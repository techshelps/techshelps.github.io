<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Microsoft Exchange Server as a Development Platform</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bkopr_using_microsoft_exchange_server_as_a_development_platform"></a>Using Microsoft Exchange Server as a Development Platform</h1>
<p>
Applications designed using Microsoft® Exchange Server can take many forms, depending on developer requirements and design objectives. Typically, there are three categories of Microsoft Exchange Server applications:
<ul>
<li>
Client applications, which use the services of a server running Microsoft Exchange Server, but reside exclusively at the user's location. </li>
<li>
Server applications, which interact with services such as the information store and directory to provide services to users, but are not associated with any user. </li>
<li>
Combined client/server applications, which include a client component associated with one or more users and a server component that is a service.</li>
</ul>
<p>
</p>
<p>
The following topics present an overview of the development issues necessary to build Microsoft Exchange Server applications. </p>
<p>&nbsp;</p></body>
</HTML>
