<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cluster Server Programming</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_wolf_cluster_server_programming"></a>Cluster Server Programming</h1>
<p>
Cluster Server programming targets two main types of development:
<ul>
<li>
Developing applications to manage clusters and cluster objects.</li>
<li>
Developing custom resource types to allow applications and services to operate as cluster resources.</li>
</ul>
<p>
Depending on the type of development that you intend to pursue, you will use one or more of the application programming interfaces (APIs) included with the Cluster Server SDK. The Cluster Server SDK has a variety of different APIs, some that are sets of functions and others that are Component Object Model (COM) interfaces. Although Cluster Server supports development in C, C++, Microsoft® Visual Basic®, and several scripting languages, not all of the APIs are meant to be used with all of the languages. The following table offers a summary description of each API.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=30%>API</th>
<th align=left width=47%>Description</th>
<th align=left width=23%>Languages</th>
</tr>
<tr valign=top>
<td width=30%>Cluster API</td>
<td width=47%>Allows a resource DLL or application to communicate with the Cluster Service and cluster database.</td>
<td width=23%>C, C++</td>
</tr>
<tr valign=top>
<td width=30%>Resource API</td>
<td width=47%>Allows the Cluster Service to communicate with a resource through the Resource Monitor.</td>
<td width=23%>C, C++</td>
</tr>
<tr valign=top>
<td width=30%>Cluster Administrator Extension API</td>
<td width=47%>Allows property pages and context menus for a custom resource type to be integrated into Cluster Administrator.</td>
<td width=23%>C, C++</td>
</tr>
<tr valign=top>
<td width=30%>Cluster Automation Server API</td>
<td width=47%>Allows an application to administer a cluster. </td>
<td width=23%>Visual Basic, scripting languages</td>
</tr>
</table><br>
<p>
The <a href="clusapi_9149.htm">Cluster API</a> is a function-based interface used by cluster-aware applications written in C or C++. The Cluster Service implements all of the functions of the Cluster API. Applications and resource DLLs make calls to these functions to access information about cluster objects. </p>
<p>
The <a href="resapi_0wdl.htm">Resource API</a> is a function-based interface that is primarily implemented by resource DLLs written in C or C++. This API also includes a few callback functions that are used by the resource DLL to report events and status. </p>
<p>
Cluster Automation Server is a COM-based dual interface used by cluster management applications written in Microsoft® Visual Basic® or one of the scripting languages. Cluster Automation Server is implemented in MSCLUS.DLL. </p>
<p>
The <a href="cluadmex_8k15.htm">Cluster Administrator Extension API</a> is a set of COM-based interfaces that are implemented and used by Cluster Administrator extension DLLs written in C or C++. Cluster Administrator extension DLLs implement interfaces for enhancing Cluster Administrator objects and invoking commands. The DLLs call other interfaces in the API to retrieve information from Cluster Administrator and to add to a Cluster Administrator property sheet, wizard, or context menu.</p>
<p>&nbsp;</p></body>
</HTML>
