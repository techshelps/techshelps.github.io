<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ClusterRegCreateKey</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_wolf_clusterregcreatekey"></a>ClusterRegCreateKey</h2>
<p>
The <b>ClusterRegCreateKey</b> function creates a specified cluster database key. If the key already exists in the database, <b>ClusterRegCreateKey</b> opens it without making changes.</p>
<pre><code><b>LONG WINAPI ClusterRegCreateKey(
  HKEY</b><i> hKey</i><b>,                                   </b>
<b>  LPCWSTR</b><i> lpszSubKey</i><b>,                          </b>
<b>  DWORD</b><i> dwOptions</i><b>,                             </b>
<b>  REGSAM</b><i> samDesired</i><b>,                           </b>
<b>  LPSECURITY_ATTRIBUTES</b><i> lpSecurityAttributes</i><b>,  </b>
<b>  PHKEY</b><i> phkResult</i><b>,                             </b>
<b>  LPDWORD</b><i> lpdwDisposition                      </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hKey</i></dt>
<dd>
[in] Handle to an open cluster database key. This parameter cannot be NULL. </dd>
<dt>
<i>lpszSubKey</i></dt>
<dd>
[in] Pointer to a NULL-terminated string specifying the name of the subkey to be created or opened. The <i>lpszSubKey</i> parameter must point to a subkey that:
<ul>
<li>
Is a child key of the key identified by <i>hKey</i>. </li>
<li>
Must not begin with the backslash character ( \ ).</li>
<li>
Must not be NULL.</li>
</ul>

<p>
The <i>lpszSubKey</i> parameter can point to an empty string, causing <b>ClusterRegCreateKey</b> to return a handle to the database key represented by <i>hKey</i>.
</dd>
<dt>
<i>dwOptions</i></dt>
<dd>
[in] Specifies special options for this key. Currently, <i>dwOptions</i> can only be set to: 
<dl>
<dt>
REG_OPTION_VOLATILE</dt>
<dd>
The opened or created key is volatile; the information is stored in memory and is not preserved when the system is restarted.</dd>
</dl>
</dd>
<dt>
<i>samDesired</i></dt>
<dd>
[in] Access mask that specifies the desired security access for the new key. Valid values are:
<dl>
<dt>
KEY_ALL_ACCESS</dt>
<dd>
Combination of KEY_QUERY_VALUE, KEY_ENUMERATE_SUB_KEYS, KEY_NOTIFY, KEY_CREATE_SUB_KEY, KEY_CREATE_LINK, and KEY_SET_VALUE access.</dd>
<dt>
KEY_CREATE_LINK</dt>
<dd>
Permission to create a symbolic link.</dd>
<dt>
KEY_ENUMERATE_SUB_KEYS</dt>
<dd>
Permission to enumerate subkeys.</dd>
<dt>
KEY_EXECUTE</dt>
<dd>
Permission for read access.</dd>
<dt>
KEY_NOTIFY</dt>
<dd>
Permission for change notification.</dd>
<dt>
KEY_QUERY_VALUE</dt>
<dd>
Permission to query subkey data.</dd>
<dt>
KEY_READ</dt>
<dd>
Combination of KEY_QUERY_VALUE, KEY_ENUMERATE_SUB_KEYS, and KEY_NOTIFY access.</dd>
<dt>
KEY_SET_VALUE</dt>
<dd>
Permission to change subkey data.</dd>
<dt>
KEY_WRITE</dt>
<dd>
Combination of KEY_SET_VALUE and KEY_CREATE_SUB_KEY access.</dd>
</dl>
</dd>
<dt>
<i>lpSecurityAttributes</i></dt>
<dd>
[in] Pointer to a <b>SECURITY_ATTRIBUTES</b> structure that contains the security descriptor for the new key in the contents of the <b>lpSecurityDescriptor</b> member or NULL. If <i>lpSecurityAttributes</i> is NULL, the key gets a default security descriptor. Since cluster database handles are not inheritable, the <b>bInheritHandle</b> member of the <b>SECURITY_ATTRIBUTES</b> structure must be FALSE.</dd>
<dt>
<i>phkResult</i></dt>
<dd>
[out] Pointer to the handle of the opened or created key.</dd>
<dt>
<i>lpdwDisposition</i></dt>
<dd>
[out] Pointer to a value that describes whether the key pointed to by <i>lpszSubKey</i> was opened or created. Valid values are:
<dl>
<dt>
REG_CREATED_NEW_KEY </dt>
<dd>
The key did not exist and was created.</dd>
<dt>
REG_OPENED_EXISTING_KEY </dt>
<dd>
The key existed and was opened.
</dd>
</dl>
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
ERROR_SUCCESS</dt>
<dd>
The operation was successful.
</dd>
</dl>
<p>
If the operation was unsuccessful, <b>ClusterRegCreateKey</b> returns a Win32 error value.</p>
<h4>Remarks</h4>
<p>
Callers should call <a href="clusapi_3rcp.htm"><b>ClusterRegCloseKey</b></a> to close the key handle created by <b>ClusterRegCreateKey</b> when they are done with it. For more information, see the related Win32 registry functions <b>RegCreateKey</b> and <b>RegCreateKeyEx</b>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Version: </b>Use Windows NT Server Enterprise Edition 4.0.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in clusapi.h.</p>
<p>&nbsp;</p></body>
</HTML>
