<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Resource API Entry Point Functions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_wolf_resource_api_entry_point_functions"></a>Resource API Entry Point Functions</h1>
<p>
The Resource API entry point functions are implemented in a resource DLL to allow a <a href="wfintro_94j6.htm">Resource Monitor</a> to manage its resources. Most of the entry point functions are required, but some are optional depending on the functionality provided by the resource. For example, the <b>Arbitrate</b> and <b>Release</b> entry point functions must be implemented for resources that can act as the cluster's <a href="wfintro_81t1.htm">quorum resource</a> and must not be implemented for non-quorum capable resources. </p>
<p>
The following table briefly describes the entry point functions in the Resource API.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Entry point function</th>
<th align=left width=59%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_9eud.htm"><b>Arbitrate</b></a></td>
<td width=59%>Allows a node to attempt to regain ownership of a quorum resource. </td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_15wl.htm"><b>Close</b></a></td>
<td width=59%>Closes a resource.</td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_43mt.htm"><b>IsAlive</b></a></td>
<td width=59%>Determines if a resource is available for use.</td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_20h1.htm"><b>LooksAlive</b></a></td>
<td width=59%>Determines if a resource appears to be available for use.</td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_15d1.htm"><b>Offline</b></a></td>
<td width=59%>Marks a resource as unavailable for use after cleanup processing is completed.</td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_44px.htm"><b>Online</b></a></td>
<td width=59%>Marks a resource as available for use.</td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_1ub2.htm"><b>Open</b></a></td>
<td width=59%>Opens a resource.</td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_5b1h.htm"><b>Release</b></a></td>
<td width=59%>Releases a quorum resource from arbitration.</td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_0w8c.htm"><b>ResourceControl</b></a></td>
<td width=59%>Performs an operation that applies to a resource.</td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_0q0c.htm"><b>ResourceTypeControl</b></a></td>
<td width=59%>Performs an operation that applies to a resource type.</td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_1kj4.htm"><b>Startup</b></a></td>
<td width=59%>Loads a resource's resource DLL and returns a structure containing a function table and version number.</td>
</tr>
<tr valign=top>
<td width=41%><a href="resapi_1xlx.htm"><b>Terminate</b></a></td>
<td width=59%>Marks a resource as unavailable for use without waiting for cleanup processing to finish.</td>
</tr>
</table><br>
<p>
The function table returned by <a href="resapi_1kj4.htm"><b>Startup</b></a> contains pointers to each of the entry point functions. <b>Startup</b> is the only entry point function that is exported. The other entry point functions are accessed through the function table.</p>
<p>
A resource DLL is non-reentrant for a given instance of a resource. That is, with one exception, resource DLL developers should expect each of their entry points to be called only once for each resource instance. The exception is <b>Terminate</b>. Calls to <b>Terminate</b> can occur at any time, even if other threads within the resource DLL are blocked waiting for an <a href="resapi_44px.htm"><b>Online</b></a> or <a href="resapi_15d1.htm"><b>Offline</b></a> call to complete.</p>
<p>
A resource DLL is reentrant with respect to resource identifiers, represented by the RESID data type. Resource identifiers are returned from the <a href="resapi_1ub2.htm"><b>Open</b></a> entry point function and supplied to all other entry points to identify a resource. Resource DLLs that handle multiple resource identifiers must be prepared to synchronize the use of any shared global data.</p>
<p>&nbsp;</p></body>
</HTML>
