<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetResourceStatus</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_wolf_setresourcestatus"></a>SetResourceStatus</h2>
<p>
The <b>SetResourceStatus</b> function is called to update the status of a resource.</p>
<pre><code><b>VOID WINAPI SetResourceStatus(
  RESOURCE_HANDLE</b><i> ResourceHandle</i><b>,</b>   
<b>  PRESOURCE_STATUS</b><i> ResourceStatus</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ResourceHandle</i></dt>
<dd>
[in] Handle identifying the resource to be updated. The <i>ResourceHandle</i> parameter should contain the same handle used for the <i>ResourceHandle</i> parameter in the <a href="resapi_1ub2.htm"><b>Open</b></a> entry point for this resource.</dd>
<dt>
<i>ResourceStatus </i></dt>
<dd>
[in] Pointer to a <a href="resapi_0fjn.htm"><b>RESOURCE_STATUS</b></a> structure that contains information about the resource's state. </dd>
</dl>
<h4>Return Values</h4>
<p>
None.</p>
<h4>Remarks</h4>
<p>
Resource DLLs call <b>SetResourceStatus</b> to update the status of a resource after their <a href="resapi_44px.htm"><b>Online</b></a> or <a href="resapi_15d1.htm"><b>Offline</b></a> entry point function has returned ERROR_IO_PENDING. It should not be called at any other time. A pointer to the function is passed to the resource's implementation of <a href="resapi_1kj4.htm"><b>Startup</b></a>. </p>
<p>
<b>SetResourceStatus</b> is implemented by the Resource Monitor and is similar to the <b>SetServiceStatus</b> function for Win32 services. </p>
<h4>Notes to Implementers</h4>
<p>
Update the current state of a resource whenever necessary after you have returned ERROR_IO_PENDING. If the resource is in one of the pending states, increment the values for the <b>CheckPoint</b> and <b>WaitHint</b> members of the <a href="resapi_0fjn.htm"><b>RESOURCE_STATUS</b></a> structure and set the <b>ResourceState</b> member to ClusterResourceOnlinePending or ClusterResourceOfflinePending before you begin calling <b>SetResourceStatus</b>. Call <b>SetResourceStatus</b> until one of the following two situations occurs:
<ul>
<li>
The resource is placed in either the ClusterResourceOnline or ClusterResourceOffline state.</li>
<li>
The time limit stored in the resource's <a href="cluprops_856b.htm">PendingTimeout</a> property has been exceeded.</li>
</ul>
<p>
There is no need to call <b>SetResourceStatus</b> to set the state of a resource to a pending state because the Resource Monitor automatically sets it to the appropriate pending state whenever <b>Online</b> or <b>Offline</b> returns ERROR_IO_PENDING.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Version: </b>Use Windows NT Server Enterprise Edition 4.0.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in resapi.h.</p>
<p>&nbsp;</p></body>
</HTML>
