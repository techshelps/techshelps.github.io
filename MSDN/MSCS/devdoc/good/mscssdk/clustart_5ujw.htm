<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering a Cluster Administrator Extension DLL</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_wolf_registering_a_cluster_administrator_extension_dll"></a>Registering a Cluster Administrator Extension DLL</h2>
<p>
To register your Cluster Administrator extension DLL, call REGCLADM.EXE followed by the complete path to the DLL as follows:</p>
<pre><code>regcladm <i>path</i>
 </code></pre>
<p>
Next, register <b>DebugEx</b> so that this extension is available to aid in debugging your resource DLL. To register <b>DebugEx</b>, enter:</p>
<pre><code>regcladm debugex.dll
 </code></pre>
<p>
If <b>DebugEx</b> has already been registered, the Debug tab will appear as one of the tabs on the property sheet of Cluster Administrator.</p>
<p>
There are two parts to the registration of a Cluster Administrator extension. </p>
<p>
The first part is registering the extension with the cluster. The <a href="cluadmex_6d2m.htm"><b>DllRegisterCluAdminExtension</b></a> entry point accomplishes this registration. <b>DllRegisterCluAdminExtension</b> causes the AdminExtensions property to be stored in the cluster database and modified if necessary. The CLSID for the extension is placed in the AdminExtensions value if it is not already present. </p>
<p>
The second part is registering the extension with COM. The <a href="cluadmex_9dpu.htm"><b>DllRegisterServer</b></a> entry point accomplishes this registration. This causes a key for the ProgId (for example, CLUADMEX.Standard) to be created below <b>HKEY_CLASSES_ROOT</b> and a key for the CLSID to be created below <b>HKEY_CLASSES_ROOT\CLSID</b>.</p>
<p>
REGCLADM calls both <b>DllRegisterCluAdminExtension</b> and <b>DllRegisterServer</b>. Setup programs that install these extensions will also need to call these two entry points. If your setup program is run on a cluster node, call both entry points. If your setup program is run on a client (for example, a non-cluster node, such as where Cluster Administrator is installed), just call <b>DllRegisterServer</b>.</p>
<p>&nbsp;</p></body>
</HTML>
