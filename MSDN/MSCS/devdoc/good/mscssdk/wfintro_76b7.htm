<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cluster Resources</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_wolf_cluster_resources"></a>Cluster Resources</h1>
<p>
A cluster resource is any physical or logical component that has the following characteristics:
<ul>
<li>
It can be brought online and taken offline.</li>
<li>
It can be managed in a cluster. </li>
<li>
It can be hosted by only one node at a time. </li>
<li>
It can be moved between nodes.</li>
</ul>
<p>
Resources are managed in the cluster environment through communication between the Cluster Service through a Resource Monitor to a resource DLL, a mainly passive translation layer that implements entry point functions defined by the <a href="resapi_0wdl.htm">Resource API</a>. In response to a Cluster Service request, the Resource Monitor calls the appropriate entry point function to check and control the resource's state. </p>
<p>
A resource DLL is loaded into the Resource Monitor's process, runs in the system account, and must be considered privileged code. All of the resource DLLs provided with Cluster Server run in a single process. Resource DLLs can use any convenient interprocess communication mechanism to interact with their resources.</p>
<p>
Cluster resources maintain pieces of information known as properties. There are <a href="cluprops_1rxv.htm">common resource properties</a> that describe all resources regardless of their type and <a href="cluprops_8mgj.htm">private resource properties</a> that describe resources of a particular type. The local restart policy, defining the desired actions in the event that the resource cannot continue on the current node, is an example of a common property. The signature of a Physical Disk resource is an example of a private property because it is irrelevant for other types of resources. Common properties are stored in the cluster database; private properties can be stored in the cluster database, in an alternate location, or generated on demand. </p>
<p>
Cluster resources also maintain a list of nodes that can act as valid hosts. For example, a Physical Disk resource may be hosted only on nodes that are physically connected to the resource. Applications can retrieve this list by calling <a href="clusapi_8pt9.htm"><b>ClusterResourceEnum</b></a> and passing CLUSTER_RESOURCE_ENUM_NODES as the <i>dwType</i> parameter. </p>
<p>
To interact with a cluster resource, applications and the Cluster Service call the Cluster API function <a href="clusapi_5hd8.htm"><b>ClusterResourceControl</b></a> and specify as a parameter a <a href="clusctl_26nn.htm">control code</a>. A control code is a 32-bit value that describes a particular operation. Some of the operations associated with resource control codes are supported by the resource DLL; others are supported by the associated Resource Monitor. </p>
<p>&nbsp;</p></body>
</HTML>
