<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Resource Monitor</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_wolf_resource_monitor"></a>Resource Monitor</h1>
<p>
The Resource Monitor is a Cluster Server component that acts as a intermediary between the <a href="wfintro_40bp.htm">Cluster Service</a> and a resource DLL. When the Cluster Service makes a request of a resource, the Resource Monitor transfers that request to the appropriate resource DLL. When a resource DLL must report status or notify the Cluster Service of an event, the Resource Monitor ensures that the information is delivered successfully. Resource Monitors do not make decisions or set policy.</p>
<p>
The Resource Monitor runs in a process separate from that of the Cluster Service for two reasons:
<ul>
<li>
To protect the Cluster Service from resource failures.</li>
<li>
To allow the Resource Monitor to take action if the Cluster Service fails. The Resource Monitor detects Cluster Service failure and responds by taking all of the resources and groups on the affected node offline. </li>
</ul>
<p>
Every cluster node runs one or more Resource Monitors. By default, the Cluster Service starts only one Resource Monitor to interact with all of the resources hosted by the node. However, this default can be overridden either by an administrator using Cluster Administrator or another management application or by the developer of a custom resource type. It is recommended that potentially problematic resource DLLs be assigned their own Resource Monitor, thereby preventing faulty behavior from affecting other resources and other Resource Monitors.</p>
<p>
Each Resource Monitor on a node has threads for polling the status of the resources for which it is responsible. Currently, the Resource Monitor creates one polling thread for every 16 resources. </p>
<p>&nbsp;</p></body>
</HTML>
