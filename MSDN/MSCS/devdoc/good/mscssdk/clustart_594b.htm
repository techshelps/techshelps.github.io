<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Installing the Microsoft Cluster Server SDK</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_wolf_installing_the_microsoft_cluster_server_sdk"></a>Installing the Microsoft Cluster Server SDK</h1>
<p>
The Microsoft® Cluster Server SDK supports Microsoft Developer Studio™ for Visual C++ version 4.2 and Microsoft Visual Studio™ for Visual C++ version 5.0. The steps for installation are slightly different depending on the development environment you elect to use. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To install the Microsoft Cluster Server SDK</h5>
<ol>
<li>
Install Microsoft Windows NT® Server network operating system version 4.0 with Service Pack 3.</li>
<li>
Install Microsoft Cluster Server, selecting either Form a New Cluster if your development machine is the first member of the cluster, or Join an Existing Cluster if another machine has already established the cluster. When asked, specify a disk on the shared SCSI bus to use as the quorum resource. <p>
Although it is possible to create cluster-aware applications and DLLs on a non-clustered system, keep in mind that you will be need a two-machine cluster for testing. Two nodes are needed to successfully test failover. Therefore, it makes sense to do your development on a machine that is a member of an active cluster. 
<p>
For more information about the installation process, see the <i>Microsoft Cluster Server Administrator's Guide</i>.
</li>
<li>
Verify that you have either Microsoft Visual C++® version 4.2 or version 5.0 with the Unicode MFC libraries and the MIDL compiler version 3.00.44 or greater. The MIDL compiler is available with the Microsoft Platform SDK.</li>
<li>
If you have Visual C++ version 4.2, download the Visual C++ 4.2b Technology Update from the Downloads and Patches area of the Visual C++ home page on the web located at http://www.microsoft.com/visualc.</li>
<li>
If you have Visual C++ version 4.2, install the Active Template Library (ATL) version 2.0 or greater. With Visual C++ version 5, ATL 2.1 is included. </li>
<li>
If you will be programming in Microsoft Visual Basic®, verify that you have Microsoft Visual Basic version 4.0 or greater on your machine. </li>
<li>
Install the Cluster Server SDK by running the SETUPSDK.EXE program from the SDK directory of the installation CD. The SETUPSDK program will ask for the location of the root directory of your Microsoft Visual C++ development environment and place its files in the appropriate subdirectory.<p>
The Cluster Server SDK contains header files, libraries, interface definition languages files, and sample code. It also contains a custom Resource Type AppWizard, accessible through the development environment of Microsoft Visual C++, that creates skeleton versions of resource and Cluster Administrator extension DLLs.
</li>
</ol>
<p>
When you have finished installing, you will notice that:
<ul>
<li>
Files that support the Cluster Service have been placed in the cluster subdirectory of your system directory.</li>
<li>
Files that you will use for Cluster Server programming have been placed in directories under the root directory of your Visual C++ development environment.</li>
<li>
Cluster Administrator is now available from the <b>Start</b> menu. </li>
</ul>
<p>
The following table describes the SDK files that are added to directories in your Visual C++ version 4.2 development environment:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=29%>Directory</th>
<th align=left width=71%>Cluster Server SDK File</th>
</tr>
<tr valign=top>
<td width=29%>BIN</td>
<td width=71%>Cluster Administrator extension registration program (REGCLADM.EXE).</td>
</tr>
<tr valign=top>
<td width=29%>HELP</td>
<td width=71%>Documentation files (MCMSDK files).</td>
</tr>
<tr valign=top>
<td width=29%>INCLUDE</td>
<td width=71%>CLUSAPI.H, RESAPI.H, CLUADMEX.H, CLUADMEX.IDL, and MSCLUS.IDL.</td>
</tr>
<tr valign=top>
<td width=29%>LIB</td>
<td width=71%>CLUADMEX, CLUSAPI, and RESUTILS libraries and the MSCLUS type library.</td>
</tr>
<tr valign=top>
<td width=29%>SAMPLES</td>
<td width=71%>SmbSmp is a resource DLL, written in C.<br>
<br>
SmbSmpEx is a Cluster Administrator extension DLL for a File Share resource, written in C++.</td>
</tr>
<tr valign=top>
<td width=29%>TEMPLATE</td>
<td width=71%>Resource Type AppWizard (RESTYPAW.DLL).</td>
</tr>
</table><br>
<p>
The following table describes the SDK files that are added to directories in your Visual C++ version 5.0 development environment:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=29%>Directory</th>
<th align=left width=71%>Cluster Server SDK File</th>
</tr>
<tr valign=top>
<td width=29%>BIN</td>
<td width=71%>Cluster Administrator extension registration program (REGCLADM.EXE).</td>
</tr>
<tr valign=top>
<td width=29%>HELP</td>
<td width=71%>Documentation files (MCMSDK files).</td>
</tr>
<tr valign=top>
<td width=29%>INCLUDE</td>
<td width=71%>CLUSAPI.H, RESAPI.H, CLUADMEX.H, CLUADMEX.IDL, and MSCLUS.IDL.</td>
</tr>
<tr valign=top>
<td width=29%>LIB</td>
<td width=71%>CLUADMEX, CLUSAPI, and RESUTILS libraries and the MSCLUS type library.</td>
</tr>
<tr valign=top>
<td width=29%>SAMPLES</td>
<td width=71%>SmbSmp is a resource DLL, written in C.<br>
SmbSmpEx is a Cluster Administrator extension DLL for a File Share resource, written in C++.</td>
</tr>
<tr valign=top>
<td width=29%>SharedIDE</td>
<td width=71%>Resource Type AppWizard (RESTYPAW.DLL).</td>
</tr>
</table><br>
<p>
SmbSmp and SmbSmpEx demonstrate how to write a basic resource DLL and a Cluster Administrator extension DLL, respectively. The sample directories contain the source code and all other supporting files needed to build these DLLs. Because these samples manage the same resource type, they are stored in a single workspace and use a single makefile.</p>
<p>
Another sample, DebugEx, is installed in the cluster directory of your system directory, typically C:\WINNT\CLUSTER. DebugEx is a Cluster Administrator extension that you can use to debug your resource DLL. To set up DebugEx, specify the debugger that you wish to use. If the resource is configured to run in its own Resource Monitor, the <a href="wfintro_40bp.htm">Cluster Service</a> will attach the specified debugger to the Resource Monitor for that resource after it has started but before any entry points in the resource DLL have been called. The common resource property, <a href="cluprops_8w8j.htm">DebugPrefix</a>, holds the path to the debugger that will be attached to the Resource Monitor for the resource.</p>
<p>&nbsp;</p></body>
</HTML>
