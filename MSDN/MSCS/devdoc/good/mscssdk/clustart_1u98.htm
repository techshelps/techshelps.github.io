<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Background Reading: Creating a Resource DLL</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_wolf_background_reading_creating_a_resource_dll"></a>Background Reading: Creating a Resource DLL</h2>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To create a resource DLL for a new resource type</h5>
<ol>
<li>
See <a href="clustart_8tlw.htm">Using the Resource Type AppWizard</a> to learn how to create a skeletal version of a resource DLL.</li>
<li>
See <a href="cluprops_1rxv.htm">Common Resource Properties</a> to determine how to use the information that is relevant to all cluster resources.</li>
<li>
If your resource type is based on an existing resource type, the discussion of the private properties for the Cluster Server resource types in <a href="cluprops_8mgj.htm">Private Resource Properties</a> should prove helpful. </li>
<li>
Start to supplement the source produced by the Resource Type AppWizard by reading <a href="clustart_9sks.htm">Customizing a Resource DLL</a>. This topic provides hints as to where additional functionality is typically needed.</li>
<li>
Use the <a href="resapi_0wdl.htm">Resource API</a> documentation to learn how to further supplement your resource DLL. The descriptions in the Resource API will help you determine if you need to implement optional entry point functions and how and when to make calls to the Resource Monitor. For example, a resource DLL that handles quorum resources has unique requirements. In addition to implementing the standard functions and calling the standard callbacks, quorum resources must implement the <a href="resapi_9eud.htm"><b>Arbitrate</b></a> and <a href="resapi_5b1h.htm"><b>Release</b></a> entry point functions and make calls to the <a href="resapi_3gdw.htm"><b>QuorumResourceLost</b></a> callback. </li>
<li>
Study the <a href="clusctl_26nn.htm">Control Codes for Resources</a> to determine which of the many control codes your <a href="resapi_0w8c.htm">ResourceControl</a> entry point function should support and to determine how to implement that support.</li>
<li>
Become familiar with the utility functions that are available for manipulating property lists by referring to <a href="clusutil_03cj.htm">Property List Utility Functions</a>.</li>
<li>
Refer to the relevant portions of the Cluster API for making calls to the Cluster Service:<p class=indent1>
<a href="clusapi_7ncj.htm">Cluster Management Functions</a> discusses functions for accessing the cluster as a whole.</p>
<p class=indent1>
<a href="clusapi_4zxv.htm">Node Management Functions</a> discusses functions for accessing cluster nodes.</p>
<p class=indent1>
<a href="clusapi_92lv.htm">Group Management Functions</a> discusses functions for accessing cluster groups.</p>
<p class=indent1>
<a href="clusapi_9t9v.htm">Resource Management Functions</a> discusses functions for accessing resources.</p>
<p class=indent1>
<a href="clusapi_54kz.htm">Cluster Database Management Functions</a> discusses functions for accessing the cluster database.</p>
</li>
<li>
When you are ready to test, refer to <a href="clustart_660c.htm">Registering a Resource DLL</a> to help with registration and <a href="clustart_1bl8.htm">Debugging a Resource DLL</a> to help with debugging.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
