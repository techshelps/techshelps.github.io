<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Cluster Database</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_wolf_using_the_cluster_database"></a>Using the Cluster Database</h1>
<p>
The cluster database is part of the Microsoft® Windows NT® registry that is resident on each cluster node. It contains information about all physical and logical elements in a cluster. </p>
<p>
The following table lists the keys under which cluster data is stored:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Cluster Database Key</th>
<th align=left width=50%>Type of Stored Data</th>
</tr>
<tr valign=top>
<td width=50%>Cluster\Parameters\Groups</td>
<td width=50%>Information about cluster groups.</td>
</tr>
<tr valign=top>
<td width=50%>Cluster\Parameters\Nodes</td>
<td width=50%>Information about cluster nodes.</td>
</tr>
<tr valign=top>
<td width=50%>Cluster\Parameters\Quorum</td>
<td width=50%>Information about the quorum resource.</td>
</tr>
<tr valign=top>
<td width=50%>Cluster\Parameters\Resources</td>
<td width=50%>Information about cluster resources.</td>
</tr>
<tr valign=top>
<td width=50%>Cluster\Parameters\ResourceTypes</td>
<td width=50%>Information about resource types.</td>
</tr>
</table><br>
<p>
The following data shows an excerpt from the information stored in the cluster database for Cluster Server's Physical Disk resource type:</p>
<pre><code>Physical Disk 
    AdminExtensions : REG_MULTI_SZ : {4EC90FB0-D0BB-11CF-B5EF-00A0C90AB505}
    DllName : REG_SZ : clusres.dll
    IsAlivePollInterval : REG_DWORD : 0xea60
    LooksAlivePollInterval : REG_DWORD : 0x1388
    Name : REG_SZ : Physical Disk
 </code></pre>
<p>
Much of the information that is stored in the cluster database is property information. For the Physical Disk resource type, <a href="cluprops_8w4z.htm">AdminExtensions</a>, <a href="cluprops_4wj7.htm">DllName</a>, <a href="cluprops_90kz.htm">IsAlivePollInterval</a>, <a href="cluprops_90z7.htm">LooksAlivePollInterval</a>, and <a href="cluprops_1a9f.htm">Name</a> are all common properties. The entries are in order by property name, followed by type and value.</p>
<p>
Individual resources often store both common and private property information in the cluster database. Whereas common properties apply to all resources regardless of their type, private properties apply only to resources of a specific type. For example, an IP Address resource requires an address, network name, and subnet mask while a Physical Disk resource requires a signature. </p>
<p>
Resources and groups store their key name as a GUID. This is the unique identifier for the resource or group. Groups store the following pieces of information in the cluster database:
<ul>
<li>
List of GUID values that identify resources that are members of the group.</li>
<li>
Name of the group such as Cluster Group or Disk Group. </li>
<li>
Numeric constant that indicates the group's operational status.</li>
</ul>
<p>
Cluster-aware applications should use the cluster database exclusively for saving state and property information; they should not use the system registry. Using the cluster database makes it easier to manage and administer the cluster and allows a resource's configuration for a specific node to be modified even when the node is offline.</p>
<p>
However, it is possible for a cluster-unaware application to use the system registry to store important information. In the event that the application is moved, it would be essential to maintain access to this information. The Cluster API includes a feature known as registry checkpointing to insure the availability of information stored on a tree in the system registry. The application establishes a registry checkpoint by calling <a href="clusapi_5hd8.htm"><b>ClusterResourceControl</b></a> with the <a href="clusctl_2vlg.htm">CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT</a> control code. Whenever anything changes on the checkpointed registry tree and the application is online, the <a href="wfintro_40bp.htm">Cluster Service</a> stores a copy of the tree in the quorum resource's log file. If the application moves to another node, the Cluster Service restores the registry tree from the log file to the system registry on the new node. </p>
<p>
To access information in the cluster database, applications should use the control code functions in the Cluster API whenever possible. The control code functions are:
<ul>
<li>
<a href="clusapi_5hd8.htm"><b>ClusterResourceControl</b></a> to access resource information.</li>
<li>
<a href="clusapi_2ld8.htm"><b>ClusterResourceTypeControl</b></a> to access resource type information.</li>
<li>
<a href="clusapi_6g18.htm"><b>ClusterGroupControl</b></a> to access group information.</li>
<li>
<a href="clusapi_5lt8.htm"><b>ClusterNodeControl</b></a> to access node information.</li>
</ul>
<p>
These functions provide access to state and property information through a variety of control codes. There is a different set of control codes that are valid for each function. For example, to access a resource's modifiable common properties, call <b>ClusterResourceControl</b> with the control code <a href="clusctl_29f7.htm">CLUSCTL_RESOURCE_GET_COMMON_PROPERTIES</a>. For a comprehensive list of the operations available with the control code functions, see one of the following topics:</p>
<p class=indent1>
For resources, see <a href="clusctl_26nn.htm">Control Codes for Resources</a>.</p>
<p class=indent1>
For resource types, see <a href="clusctl_6soj.htm">Control Codes for Resource Types</a>.</p>
<p class=indent1>
For groups, see <a href="clusctl_5pbn.htm">Control Codes for Groups</a>.</p>
<p class=indent1>
For nodes, see <a href="clusctl_9prn.htm">Control Codes for Nodes</a>.</p>
<p>
When an application requires information that is not exposed through a control code, usually one of the cluster database management functions included in the Cluster API can be called to retrieve the information. The database management functions are similar to the Microsoft Win32® registry functions, but there is one important difference. With the database management functions, changes made on one node are atomically distributed as they occur to all affected nodes in the cluster. Therefore, all members of a cluster have consistent access to the information. Because the Win32 registry functions lack this important replication feature, applications should never use them to access the cluster database.</p>
<p>&nbsp;</p></body>
</HTML>
