<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Resource API</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_wolf_resource_api"></a>Resource API</h1>
<p>
The Resource API defines functions, structures, and macros that allow the Cluster Service to communicate with resources. The communication is indirect; the Cluster Service initiates requests with a Resource Monitor and the Resource Monitor passes them on to the resource. Status and event information are passed back from the resource DLL to the Cluster Service. </p>
<p>
The following diagram shows how control flows from the Cluster Service through the Resource Monitor and a resource DLL to resources. The diagram shows four resource DLLs, three for Cluster Service resource types and one for a resource type defined by a third-party developer. </p>
<p>
<img src="images/resdll.gif" border=0></p>
<p>
The Resource API consists of:
<ul>
<li>
<a href="resapi_07hv.htm">Entry point functions</a></li>
<li>
<a href="resapi_9cab.htm">Callback functions</a></li>
<li>
<a href="resapi_8qpf.htm">Structures and macros</a></li>
</ul>
<p>&nbsp;</p></body>
</HTML>
