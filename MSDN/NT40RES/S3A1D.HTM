<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Effects of Moving and Copying Files</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Effects of Moving and Copying Files</H3><P CLASS="t">When you replace an existing file in an NTFS folder, the file might retain its compression state regardless of the compression state of the folder and the compression state of the source file. Thus, if you copy a compressed NTFS file to a compressed NTFS folder, but it replaces an uncompressed file, the resulting file will probably be uncompressed. </P>
<P CLASS="t">For example, you have a file named Testthis in two folders, To and From. The To folder has a compression state of compressed, but the file To\Testthis is uncompressed. The From folder also has a compression state of compressed, and the file From\Testthis is compressed. When you use Windows&nbsp;NT Explorer to copy From\Testthis to To\Testthis, the file To\Testthis will be uncompressed.</P>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>The effects described in this section are generally true when using Microsoft programs. Third-party utilities might function differently.</P>
<P></P>
<H4><A NAME="sec0"></A>Moving and Copying Files Within NTFS Volumes</H4><P CLASS="t">On an NTFS volume, when you move a file or folder from one folder to another, the compression attribute, like any other attribute, is retained regardless of the compression of either the target or source folder. For example, if you move an uncompressed file to a compressed folder, the file remains uncompressed after the move.</P>
<P CLASS="t">However, if you copy a file from one folder to another, the compression attribute of the file is changed to that of the target folder. For example, if you copy a compressed file to an uncompressed folder, the file is automatically uncompressed when it is copied to the folder.</P>
<H4><A NAME="sec1"></A>Moving and Copying Files Between NTFS Volumes</H4><P CLASS="t">When you move or copy a file or folder from one NTFS volume to another NTFS volume, it inherits the compression attributes of the target folder.</P>
<H4><A NAME="sec2"></A>Moving and Copying Files Between FAT and NTFS Volumes</H4><P CLASS="t">Like files copied between NTFS folders, files moved or copied from a FAT folder to an NTFS folder always inherit the compression attribute of the target folder. Moving a file from a FAT folder to an NTFS folder causes a copy of the file, followed by a delete.</P>
<P CLASS="t">Since Windows&nbsp;NT supports compression only for NTFS files, any compressed NTFS files moved or copied to a FAT volume are automatically uncompressed. Similarly, compressed NTFS files copied or moved to a floppy disk are automatically uncompressed.</P>
<H4><A NAME="sec3"></A>Adding Files to an Almost Full NTFS Volume</H4><P CLASS="t">When adding files to an NTFS volume that is almost full, you can get unexpected error messages. The philosophy behind these errors is that the NTFS file system wants to make sure it has enough disk space to write the entire file if it cannot be compressed, regardless of the degree of compression in the file when it is opened. For instance, it is possible to get a read error when you are trying to open a compressed file. </P>
<P CLASS="t">If you copy files to a compressed NTFS folder that doesn't have enough room for all of the files in their uncompressed state, you might get an error that says "...there is not enough space on the disk" even though they will all fit when compressed. Because NTFS allocates space based upon the uncompressed size of the file, you can get this error even if the files are already compressed. </P>
<P CLASS="t">This situation occurs because compression is handled asynchronously, and Windows&nbsp;NT uses lazy write (see <I>Inside the Windows&nbsp;NT File System</I> for information about lazy writes). NTFS does not wait for the compression and write of one file to complete before it begins work on subsequent files, and the system doesn't get the unused space back from compression until after the buffer is compressed.</P>
<P CLASS="t">When you are running a program and save files to a compressed folder on a volume that is almost full, the save might or might not be successful — it depends on how much the file compresses, whether the beginning of the file compresses well, and numerous other factors.</P>
<P CLASS="t">If you can't delete any files or don't have any files that you can compress, you can usually copy all of the files if you copy the largest and/or the ones that compress best first. You can also try copying them in smaller groups rather than all at one time.</P></BODY></HTML>
