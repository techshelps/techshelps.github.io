<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tips and Tricks</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Tips and Tricks</H3><P CLASS="t">You might find the following Performance Monitor tips helpful. They are collected here for ease of reference.</P>
<UL><LI><B>Check memory first</B></LI></UL><P>Lack of memory is by far the most common cause of serious performance problems in computer systems. If you suspect other problems, check Memory: Pages/sec to make sure a memory shortage is not appearing in another guise.</P>
<UL><LI><B>Logging data</B></LI></UL><P>You can log data to only one log file with each copy of Performance Monitor. To log different objects to different files, open a second copy of Performance Monitor.</P>
<UL><LI><B>Peeking at a log file</B></LI></UL><P>Opening a log that is collecting data will stop the log and clear all counter settings. You can't peek at the log from chart or report view because the views share the same data source. Changing <B>data from</B> affects all views, even the running log.</P>
<P>To peek at a running log, start a second copy of Performance Monitor, and set <B>data from</B> to the running log. You can chart or report on all data logged until the time you open it. Newly collected data will not be added to your snapshot of the log file.</P>
<UL><LI><B>Monitoring the start of a process - current activity</B></LI></UL><P>Processes and threads don't appear in Add to Chart as instances until they are started. To monitor the startup of a process or thread, start the process, select its instance in Add to Chart, and add whatever counters you'll use to monitor the startup behavior. Now, stop the process. Its counters remain on the chart and Performance Monitor continues to look for it. Start the process again. Performance Monitor recognizes any application with the same name and begins monitoring immediately.</P>
<UL><LI><B>Monitoring the start of a process - logfile data</B></LI></UL><P>Processes and threads appear in the Instances box only if the Time Window includes the time the process was active. To monitor the logged activity of a process as it starts, move the Time Window to include the active phase of the process, add the instance, then expand the Time Window.</P>
<UL><LI><B>Delay in monitoring</B></LI></UL><P>When you add a counter to a chart, you'll notice a slight delay before the chart begins to draw. The averaging counters need two data points for their first value. The chart should begin after the second data point is measured.</P>
<UL><LI><B>Responding to alerts</B></LI></UL><P>Do not start a command-line batch file from the <B>Alert</B> dialog box. (The &gt; and &lt; signs passed to the batch file will be interpreted improperly as a redirection of stdin and stdout.) Instead, create a one-line batch file that runs the program, and call the batch file from Performance Monitor.</P>
<UL><LI><B>Performance Monitor overhead</B></LI></UL><P>To determine how much disk space is consumed by each Performance Monitor log update interval, choose <B>Manual Update</B> from the log options. Take a series of snapshots and  note the change in the log file size between each snapshot. The log file size is displayed on the status bar in Log view. </P>
<P>Discard the first value (because it includes an index record that makes it larger than usual),  and average the other values. Performance Monitor writes an index record with counter names on the first snapshot and then every 100th snapshot thereafter. </P>
<P>You can also measure the cost of monitoring particular objects by recording the change in file size while adding and deleting those objects from a chart.</P>
<P>You can also monitor the Performance Monitor process by using Task Manager, PMON or PViewer, and vice versa.</P>
<UL><LI><B>Finding missing data</B></LI></UL><P>Logged data is displayed over 100 data points, whether shown in a chart, histogram, or report format. If the log file contains fewer than 100 data points,  all are displayed. However, if it contains more,  the data is compressed to show 100 points. For example, if there are 1000 data points, every 10th point is displayed. To see missing data points, shrink the Time Window until all data is displayed.</P>
<P>Exporting the data will also uncover the missing data points. When you export, Performance Monitor sends all data whether it appears in the graph or not.</P>
<UL><LI><B>Performance Monitor settings </B></LI></UL><P>The quickest way to open Performance Monitor with a settings file is to create a shortcut to the settings file and then double-click it.</P>
<P>To change the settings quickly, drag the icon of a settings file to a running copy of Performance Monitor. Remember, though, if your settings file includes a log file, starting a second instance of Performance Monitor with the same settings will stop any active logging to that file by other Performance Monitor instances. Only one Performance Monitor can write to the log file at a time.</P>
<P>You can also edit the settings file using the Setedit<B> </B>utility on the Windows&nbsp;NT Resource Kit CD-ROM.</P>
<UL><LI><B>Default settings file</B></LI></UL><P>If you don't start Performance Monitor with a settings file, it searches for the chart file, _Default.pmc. If it doesn't find it, it opens a blank Performance Monitor window. You can name your favorite settings file _Default.pmc, and it will load whenever you open a blank copy.</P>
<UL><LI><B>Monitoring disks</B></LI></UL><P>When testing disk performance, log Performance Monitor data to another disk or computer so that it doesn't interfere with the disk you are testing.</P>
<P>When using Response Probe to test disk performance, set the FILEACCESSMODE parameter in the Thread Description file (*.scr) to UNBUFFERED. This tells the system to bypass the cache and go directly to disk. When using UNBUFFERED, remember that the number of bytes in RECORDSIZE must be a multiple of the disk sector size.</P>
<UL><LI><B>Interpreting zero values</B></LI></UL><P>Performance Monitor displays a value of zero when it fails to get data it requests and when it receives unreadable or meaningless data. It is hard to distinguish this error default value from actual values of zero. However, you can configure Performance Monitor to log errors to the Event Viewer application event log. For more information, see the section titled "Troubleshooting Performance Monitor."</P>
<UL><LI><B>Tiny footprint</B></LI></UL><P>You can minimize the Performance Monitor display to keep it handy without cluttering up your work. This is a great way to monitor an application while using it. Use the <B>Options</B> menu to remove the Toolbar, Status Bar, Vertical Labels and Legend, if you wish. Select the <B>Always</B> <B>on</B> <B>Top</B> option. Then shrink the window. Use hot keys to control the window, or double-click to display the title bar. You can save this setting and place it in your Startup group.</P>
<UL><LI><B>Controlling the Time Window</B></LI></UL><P>Use the left and right arrow keys to shrink and expand the Time Window in the Input Log Timeframe dialog. This lets you change the Time Window one data point at a time. The left arrow key controls the left button on the slider bar, and the right arrow key controls the right button. Press the arrow key alone to expand the time measured, or press SHIFT+arrow key to contract it.</P>
<P></P></BODY></HTML>
