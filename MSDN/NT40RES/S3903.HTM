<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initializing the Kernel</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Initializing the Kernel</H3><P CLASS="t">You know that the Kernel is initializing when the screen turns blue, and you see text similar to the following:</P>
<P CLASS="spacing"><BR></P>
<PRE>Microsoft (R) Windows&nbsp;NT (TM) Version 4.0 (Build 1345)
1 System Processor (16 MB Memory)
</PRE>
<P CLASS="t">This means that Ntoskrnl.exe has successfully initialized and that control has passed to it. </P>
<P CLASS="t">The Kernel creates the HKEY_LOCAL_MACHINE\HARDWARE key by using the information that was passed from the boot loader. This key contains the hardware data that is computed at each system startup. The data include information about hardware components on the system board and about the interrupts hooked by specific hardware devices.</P>
<P CLASS="t">The Kernel creates the Clone control set by making a copy of the control set pointed to by the value of Current. The Clone control set is never modified, because it is intended to be an identical copy of the data used to configure the computer and should not reflect any changes made during the startup process.</P>
<H4><A NAME="sec0"></A>Loading and Initializing Device Drivers</H4><P CLASS="t">The Kernel now initializes the low-level device drivers that were loaded during the Kernel load phase. If an error occurs, the action taken is based on the HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\<I>DriverName</I>\ErrorControl value for the device driver that has a problem. See the section titled "ErrorControl Values," presented later in this chapter, for more information.</P>
<P CLASS="t">Ntoskrnl.exe now scans the Registry, this time for device drivers that have a HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\<I>DriverName</I>\Start value of 0x1. As in the Kernel load phase, the Group value for each device driver determines the order in which they are loaded. The Registry subkey HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\ServiceGroupOrder defines the loading order.</P>
<P CLASS="t">Unlike the Kernel load phase, device drivers with a Start value of 0x01 are not loaded by using BIOS or firmware calls, but by using the device drivers loaded during the Kernel load phase and just initialized. The device drivers in this second group are initialized as soon as they are loaded. Error processing for the initialization of this group of device drivers is also based on the value of the ErrorControl data item for the device driver.</P>
<P CLASS="t">The section titled "Start Values," presented later in this chapter, contains more information about when components are loaded and started.</P>
<H4><A NAME="sec1"></A>Loading Services</H4><P CLASS="t">The Session Manager (Smss.exe) starts the higher-order subsystems and services for Windows&nbsp;NT. Information for the Session Manager is in HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager. Session Manager executes the instructions under the:</P>
<UL><LI>BootExecute data item.</LI></UL><UL><LI>Memory Management key.</LI></UL><UL><LI>DOS Devices key.</LI></UL><UL><LI>Subsystems key.</LI></UL><P></P>
<H5 CLASS="h4"><A NAME="sec2"></A>BootExecute Data Item</H5><P CLASS="t">The BootExecute data item contains one or more commands that Session Manager runs before it loads any services. The default value for this item is Autochk.exe, which is the Windows&nbsp;NT version of Chkdsk.exe. The default setting is shown in this example:</P>
<P CLASS="spacing"><BR></P>
<PRE>BootExecute : REG_MULTI_SZ : autocheck autochk*
</PRE>
<P CLASS="t">Session Manager can run more than one program. This example shows the item when the Convert utility will be run to convert the x volume from FAT to NTFS on the next system startup:</P>
<P CLASS="spacing"><BR></P>
<PRE>BootExecute : REG_MULTI_SZ : autocheck autochk* autoconv \DosDevices\x: /FS:ntfs
</PRE>
<P CLASS="t">After Session Manager runs the commands, the Kernel loads the other Registry keys from <I>%systemroot%</I>\System32\Config.</P>
<H5 CLASS="h4"><A NAME="sec3"></A>Memory Management Key</H5><P CLASS="t">Next, the Session Manager creates the paging information required by the Virtual Memory Manager. The configuration information is located in these data items: </P>
<P CLASS="spacing"><BR></P>
<PRE>PagedPoolSize : REG_DWORD 0
NonPagedPoolSize : REG_DWORD 0
PagingFiles : REG_MULTI_SZ : c:\pagefile.sys 32
</PRE>
<P CLASS="t">For information about the page file, use the <B>Index</B> tab in Windows&nbsp;NT Help, and enter virtual memory.</P>
<H5 CLASS="h4"><A NAME="sec4"></A>DOS Devices Key</H5><P CLASS="t">Next, the Session Manager creates symbolic links. These links direct certain classes of commands to the correct component in the file system. The configuration information for these default items is located in: </P>
<P CLASS="spacing"><BR></P>
<PRE>PRN : REG_SZ : \DosDevices\LPT1
AUX : REG_SZ : \DosDevices\COM1
NUL : REG_SZ : \Device\Null
UNC : REG_SZ : \Device\Mup
PIPE : REG_SZ : \Device\NamedPipe
MAILSLOT : REG_SZ : \Device\MailSlot
</PRE>
<H5 CLASS="h4"><A NAME="sec5"></A>SubSystems Key</H5><P CLASS="t">Because of the messaging architecture of subsystems, the Windows subsystem (Win32) must be started. This subsystem controls all I/O and access to the video screen. The process name for this subsystem is CSRSS. The Windows&nbsp;subsystem starts the WinLogon process, which then starts several other vital subsystems.</P>
<P CLASS="t">The configuration information for required subsystems is defined by the value for Required in the Registry subkey HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\SubSystems.</P></BODY></HTML>
