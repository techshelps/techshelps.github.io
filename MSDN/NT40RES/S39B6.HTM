<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating .inf Files</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Creating .inf Files</H2><P CLASS="t">Device information (INF) files provide information used by the Windows&nbsp;NT Workstation Setup program to install software that supports a given hardware device. INF files may also be created to permit scripted installations of applications.</P>
<P CLASS="t">Some Windows&nbsp;NT Workstation 4.0 .inf files use the same format as Windows&nbsp;95 .inf files. Other .inf files use the format used in earlier versions of Windows&nbsp;NT Workstation. See the <I>Windows&nbsp;95 Resource Kit</I> for a discussion of Windows&nbsp;95-style INFs. </P>
<H3><A NAME="sec0"></A>Using Windows 95-style .inf Files</H3><P>You can use a Windows 95-style .inf file to install applications and other components into Windows&nbsp;NT. For complete details about the syntax and use of statements in Windows 95 INF files, see the <I>Win32 Software Development Kit for Windows 95 and Windows&nbsp;NT</I>.</P>
<P>The command line to invoke a Win95-style INF in Windows&nbsp;NT 4.0 is:</P>
<P CLASS="spacing"><BR></P>
<PRE>RUNDLL32 syssetup,SetupInfObjectInstallAction <I>section</I> 128 <I>inf</I>
</PRE>
<P>where: </P>
<P CLASS="term1"><B><I>section</I> </B></P>
<P CLASS="dt1">specifies the name of the section in the INF.</P>
<P CLASS="term1"><B><I>inf</I> </B></P>
<P CLASS="dt1">specifies the name of the INF file. This should be specified as a relative path to avoid invoking Setup's default INF rules, which look for an unqualified filename in the system inf directory instead of the current directory. For example, specify <B>..\newtools.inf</B>, not just <B>newtools.inf</B>.</P>
<P></P>
<P>For example if you want to install MyGame application into Windows&nbsp;NT, create a Mygame.inf file, such as the following, and place it in the $OEM$ directory.</P>
<P CLASS="spacing"><BR></P>
<PRE>  This inf is a sample win95 style INF
  mygame.inf
  installs a game program into Windows&nbsp;NT

[version]
signature="$Windows&nbsp;NT$"
ClassGUID={00000000-0000-0000-0000-000000000000}

Destination Directories for CopyFiles Sections

[DestinationDirs]
BaseCopyProgramFiles            = 24,%INSTALL_DIR%
MygameDeleteFiles                    = 24,%INSTALL_DIR%
MygameCopyFilesHelp            = 18 LDID_HELP

[BaseWinOptions]
BaseSection

[Optional Components]
Mygame

[BaseSection]
AddReg                  = BaseAddReg

[Mygame]
OptionDesc              = %MYGAME_Desc%
Tip                     = %MYGAME_TIP%
IconIndex               = 64            Windows mini-icon for dialogs
Parent                  = Games
InstallType             = 0             Manual only.
CopyFiles               = BaseCopyProgramFiles, MygameCopyFilesHelp
AddReg                  = MYGAME.AddReg
UpdateInis              = MYGAME.Inis
Uninstall               = MYGAME.Remove
Upgrade                 = MYGAME.Upgrade
Detect                  = %24%\%INSTALL_DIR%\mygame.exe

[MYGAME.Remove]
AddReg                  = MYGAME.DelReg
DelReg            = MYGAME.DelPath
DelFiles                = BaseCopyProgramFiles, MygameCopyFilesHelp, MygameDeleteFiles
UpdateInis              = MYGAME.Rem.Inis
Reboot=0

[MYGAME.Upgrade]
CopyFiles               = BaseCopyProgramFiles, MygameCopyFilesHelp
DelFiles                = MygameDeleteFiles
AddReg                  = MYGAME.AddReg

[MYGAME.Inis]
setup.ini, progman.groups,, "group15=%GAMES_DESC%"         creates folder
setup.ini, group15,, """%MYGAME_Desc%"",""""""%24%\%INSTALL_DIR%\mygame.exe"""""",,,,""%24%\%<BR>INSTALL_DIR%"""

[MYGAME.Rem.Inis]
setup.ini, progman.groups,, "group15=%GAMES_DESC%"<BR>folder
setup.ini, group15,, """%MYGAME_Desc%"""<BR>deletes link

[MYGAME.AddReg]
HKLM,%KEY_OPTIONAL%\Mygame,Installed,,"1"
HKLM,"%KEY_APP_PATH%\mygame.exe",,,"%24%\%INSTALL_DIR%\mygame.exe"

[MYGAME.DelPath]
HKLM,"%KEY_APP_PATH%\mygame.exe"

[MYGAME.DelReg]
HKLM,%KEY_OPTIONAL%\Mygame,Installed,,"0"

[BaseAddReg]
Create entries for Maint Mode Setup, set all initially to uninstalled:
HKLM,%KEY_OPTIONAL%,"Mygame",,"Mygame"
HKLM,%KEY_OPTIONAL%\Mygame,INF,,"mygame.inf"
HKLM,%KEY_OPTIONAL%\Mygame,Section,,"Mygame"
HKLM,%KEY_OPTIONAL%\Mygame,Installed,,"0"

[BaseCopyProgramFiles]
FONT.DAT
MYGAME.DAT
MYGAME.EXE
MYGAME.MID
MYGAME2.MID
SOUND1.WAV
SOUND2.WAV
SOUND3.WAV

table.bmp
wavemix.inf

[MygameDeleteFiles]
mygame.cnt
mygame.hlp
mygame.inf

[MygameCopyFilesHelp]
mygame.cnt
mygame.hlp

[Strings]
KEY_APP_PATH    = "SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths"
KEY_OPTIONAL    = "SOFTWARE\Microsoft\Windows\CurrentVersion\Setup\OptionalComponents"
GAMES_DESC      = "Accessories\Games"
MYGAME_Desc    = "Mygame"
MYGAME_TIP     = "Company X 3-D mygame game"
INSTALL_DIR     = "Program Files\Windows&nbsp;NT\Mygame"</PRE>
<P></P>
<P>To install MyGame, you would include the following command line in the $OEM$\Cmdlines.txt file on your distribution sharepoint.</P>
<P CLASS="spacing"><BR></P>
<PRE>"RUNDLL32 syssetup,SetupInfObjectInstallAction <I>Version</I> 128 ..\<I>mygame.inf</I>"
</PRE>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>All the files needed for this application should be placed in the distribution share point.</P>
<P></P></BODY></HTML>
