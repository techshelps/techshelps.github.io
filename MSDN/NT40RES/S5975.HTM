<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Access Masks</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Access Masks</H3><P CLASS="t">Each ACE includes an <I>access mask</I>, which defines all possible actions for a particular object type. Permissions are granted or denied based on this access mask.</P>
<P CLASS="t">One way to think of an access mask is as a sort of menu from which granted and denied permissions are selected:</P>
<P><img src="xwr_e05.gif"></P>
<P>Figure 6.6    Access Control Mask</P>
<P CLASS="t"><I>Specific types</I> include access options that apply specifically to this object type. Each object type can have up to 16 specific access types. Collectively, the specific access types for a particular object type are called the <I>specific access mask</I>. (These are defined when the object type is defined.) For example, Windows&nbsp;NT files have the following specific access types: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="179pt" VALIGN="TOP"><COL WIDTH="179pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>ReadData</P></TD><TD VALIGN="TOP"><P>WriteEA (Extended Attribute)</P></TD></TR><TR><TD VALIGN="TOP"><P>WriteData</P></TD><TD VALIGN="TOP"><P>Execute</P></TD></TR><TR><TD VALIGN="TOP"><P>AppendData</P></TD><TD VALIGN="TOP"><P>ReadAttributes</P></TD></TR><TR><TD VALIGN="TOP"><P>ReadEA (Extended Attribute)</P></TD><TD VALIGN="TOP"><P>WriteAttributes</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t"><I>Standard types</I> apply to all objects and consist of these access permissions:</P>
<UL><LI>SYNCHRONIZE, which is used to synchronize access and to allow a process to wait for an object to enter the signaled state</LI></UL><UL><LI>WRITE_OWNER, which is used to assign write owner</LI></UL><UL><LI>WRITE_DAC, which is used to grant or deny write access to the discretionary ACL</LI></UL><UL><LI>READ_CONTROL, which is used to grant or deny read access to the security descriptor and owner</LI></UL><UL><LI>DELETE, which is used to grant or deny delete access</LI></UL><P></P>
<P CLASS="t"><I>Generic types</I> are broad types of access whose exact implementation is determined by the application defining an object. These rights are used when protecting an object. For example, an application that defines a voice-annotation object might define specific access rights by using VOICE_PLAY and VOICE_EDIT for playing and editing the object. It might set up a generic mapping structure in which GENERIC_EXECUTE maps to VOICE_PLAY and GENERIC_WRITE maps to both VOICE_PLAY and VOICE_EDIT.</P>
<P CLASS="t">The following table shows the generic types that are mapped from specific and standard types:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="126pt" VALIGN="TOP"><COL WIDTH="221pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B></B></P>
<P CLASS="th"><B>Generic type</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B></B></P>
<P CLASS="th"><B>Mapped from these specific and standard types</B></P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>FILE_GENERIC_READ</P></TD><TD VALIGN="TOP"><P>STANDARD_RIGHTS_READ<BR>FILE_READ_DATA<BR>FILE_READ_ATTRIBUTES <BR>FILE_READ_EA<BR>SYNCHRONIZE</P></TD></TR><TR><TD VALIGN="TOP"><P>FILE_GENERIC_WRITE</P></TD><TD VALIGN="TOP"><P>STANDARD_RIGHTS_WRITE<BR>FILE_WRITE_DATA<BR>FILE_WRITE_ATTRIBUTES<BR>FILE_WRITE_EA<BR>FILE_APPEND_DATA<BR>SYNCHRONIZE</P></TD></TR><TR><TD VALIGN="TOP"><P>FILE_GENERIC_EXECUTE</P></TD><TD VALIGN="TOP"><P>STANDARD_RIGHTS_EXECUTE<BR>FILE_READ_ATTRIBUTES<BR>FILE_EXECUTE<BR>SYNCHRONIZE</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P></P>
<P CLASS="t">Specific and standard types appear in the details of the security log. Generic types do not appear in the security log. Instead, the corresponding specific and standard types are listed.</P></BODY></HTML>
