<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Process Manager</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Process Manager</H3><P CLASS="t">The <I>Process Manager</I> is the operating system component that creates and deletes processes and tracks process objects and thread objects. It also provides a standard set of services for creating and using threads and processes in a particular subsystem environment. </P>
<P CLASS="t">Beyond that, the Process Manager does little to dictate rules about threads and processes. Instead, the Windows&nbsp;NT design allows for robust environment subsystems that can define specific rules about threads and processes. For example, the Process Manager does not impose any hierarchy or grouping rules for processes, nor does it enforce any parent/child relationships.</P>
<P CLASS="t">A <I>process</I> is an application program or modular part of a program. The operating system sees a process as an address space, a set of objects, and a set of threads that run in the context of the process. The <I>process object</I> specifies the virtual address space mapping for the thread and accumulates thread run time.</P>
<P CLASS="t">A process object:</P>
<UL><LI>Includes a pointer to an address map.</LI></UL><UL><LI>Maintains a list of ready threads when the process is not in the balance set.</LI></UL><UL><LI>Maintains a list of threads that belong to the process.</LI></UL><UL><LI>Keeps track of the time accumulated by all threads executing in the process.</LI></UL><UL><LI>Records the process's base priority and default thread affinity.</LI></UL><P></P>
<P CLASS="t">A process object must be initialized before any thread objects that list that process as their parent can be initialized.</P>
<P CLASS="t">A <I>thread </I>is most the basic schedulable entity in the system. It has its own set of registers, its own kernel stack, a thread environment block, and user stack in the address space of its process.</P>
<P CLASS="t">The Windows&nbsp;NT Process Manager works with the Security Reference Monitor and the Virtual Memory Manager to provide interprocess protection. Each process is assigned a <I>security access token</I>, called the primary token of the process. This token is used by Windows&nbsp;NT access-validation routines when threads in the process reference protected objects. For more information about how Windows&nbsp;NT uses security access tokens, see Chapter 6, "Windows&nbsp;NT Security."</P></BODY></HTML>
