<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Problem Occurs After the Boot Loader Starts</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Problem Occurs After the Boot Loader Starts</H3><P CLASS="t">This section describes troubleshooting problems that might occur from the time NTLDR starts executing through the time that you successfully log onto Windows&nbsp;NT. This phase of startup begins when you see the following message:</P>
<P CLASS="spacing"><BR></P>
<PRE>NTDETECT V1.0 Checking Hardware . . .
</PRE>
<H4><A NAME="sec0"></A>Using Checked Version of NTDETECT </H4><P CLASS="t">On x86-based computers, NTDETECT detects installed hardware components.</P>
<P CLASS="t">There is a debug version of Ntdetect.com on the <I>Windows&nbsp;NT Workstation</I> product CD, called Ntdetect.chk. If Ntdetect.com fails to detect all of the hardware that you think it should find, you can use the debug version to help isolate the problem. A mouse or a disk controller are the components that typically cause problems.</P>
<P CLASS="t">To use the checked version:</P>
<UL><LI>Rename Ntdetect.com to Ntdetect.bak in the root folder of your system partition.</LI></UL><UL><LI>Copy Ntdetect.chk from Support\Debug\I386 to the root folder.</LI></UL><UL><LI>Rename Ntdetect.chk to Ntdetect.com. </LI></UL><P></P>
<P CLASS="t">The utility Installd on the <I>Windows&nbsp;NT Workstation Resource Kit </I>CD performs the same functions.</P>
<P CLASS="t">Ntdetect.com has attributes of Hidden, System, and Read Only set when you install Windows NT. You need to clear these attributes to make the file visible. You can change the attributes by using <B>My Computer</B>, <B>Windows&nbsp;NT Explorer</B>, or the command prompt.</P>
<H5 CLASS="h4"><A NAME="sec1"></A>To change file attributes by using My Computer or Windows&nbsp;NT Explorer</H5><P>    1.    On the <B>View</B> menu, click <B>Options</B>.</P>
<P>    2.    On the <B>View</B> tab, select <B>Show all files</B>. Click <B>OK</B>.</P>
<P>    3.    Click the filename NTLDR at the root of the C drive. </P>
<P>    4.    On the <B>File</B> menu, click <B>Properties</B>. </P>
<P>    5.    In the <B>Attributes</B> box of the <B>General</B> tab, clear the <B>Read Only</B> and <B>Hidden </B>check boxes, and then click <B>OK</B>. </P>
<P>To change the attributes by using the command prompt, enter:</P>
<P CLASS="spacing"><BR></P>
<PRE>attrib -s -h -r ntldr
</PRE>
<P CLASS="t">Shutdown Windows NT and restart the computer. When Ntdetect.chk executes, it displays information on the screen as it detects the hardware. This is a sample of the kind of information you might see:</P>
<P CLASS="spacing"><BR></P>
<PRE>Detecting System Component . . .
Reading BIOS date . . .
Done reading BIOS date (1/20/1994)
Detecting Bus/Adapter Component . . . 
Collecting Disk Geometry . . .
Detecting Keyboard Component . . .
</PRE>
<P CLASS="t">After it finishes displaying information about the components, press ENTER so Ntdetect.chk will continue. Ntdetect.chk next displays information about the current nodes for the controllers and peripherals. You need to press ENTER at the end of each screen of information.</P>
<P CLASS="t">When you have finished using Ntdetect.chk, you should rename Ntdetect.com to Ntdetect.chk and rename Ntdetect.bak to Ntdetect.com.</P>
<H4><A NAME="sec2"></A>Using the /maxmem Switch</H4><P CLASS="t">For x86-based computers, the Boot.ini file has a /maxmem switch that enables you to specify the maximum amount of RAM memory that Windows&nbsp;NT can use. You can use this switch to troubleshoot memory parity errors, mismatched SIMM speeds, and other memory-related problems. To use this switch, the memory must be contiguous. You should never specify a value less than 8 for Windows&nbsp;NT Workstation. </P>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>Windows&nbsp;NT Workstation can run in 8 MB RAM, although it will probably run quite slowly. </P>
<P></P>
<P CLASS="t">You include this switch at the end of the ARC path specified in the <B>[operating systems]</B> section of the Boot.ini file. This example restricts Windows&nbsp;NT Workstation to using only the first 12 MB RAM. </P>
<P CLASS="spacing"><BR></P>
<PRE>multi(0)disk(0)rdisk(0)partition(1)\winnt=Windows NT Workstation 4.0 /MAXMEM=12 
</PRE>
<P CLASS="t">Chapter 36, "General Troubleshooting," contains more information about troubleshooting memory problems.</P>
<H4><A NAME="sec3"></A>Using the /sos Switch</H4><P CLASS="t">You can add the /sos switch to the Boot.ini file to have NTLDR display the Kernel and device driver names while they are being loaded. Use this switch if Windows&nbsp;NT does not startup and you think a driver is missing or corrupted. See the section "Boot.ini Switches" in Chapter 17, "Disk and File System Basics," for information about changing Boot.ini switches.</P>
<P CLASS="t">These examples assume that you have installed Windows&nbsp;NT Workstation in the folder winnt40 on partition 2.</P>
<P CLASS="t">First, you should see this message:</P>
<P CLASS="spacing"><BR></P>
<PRE>multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\ntoskrnl.exe
</PRE>
<P CLASS="t">And then this one: </P>
<P CLASS="spacing"><BR></P>
<PRE>Press spacebar now to invoke Hardware Profile/Last Known Good Menu
</PRE>
<P CLASS="t">Regardless of whether you press the spacebar, you should see these two messages:</P>
<P CLASS="spacing"><BR></P>
<PRE>multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\hal.dll
multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\config.sys
</PRE>
<P CLASS="t">The <B>Hardware Profile/Last Known Good</B> menu displays at this time if you pressed the spacebar or you have more than one hardware profile. After NTLDR finishes processing the hardware profile information, it clears the screen and displays information such as:</P>
<P CLASS="spacing"><BR></P>
<PRE>multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\c_1252.nls
multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\c_437.nls
multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\n_intl.nls
multi(0)disk(0)rdisk(0)partition(2)\winnt40\FONTS\vgaoem.fon
multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\Drivers\Atdisk.sys
multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\Disk.sys
multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\CLASS2.SYS
multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\Diskperf.sys
multi(0)disk(0)rdisk(0)partition(2)\winnt40\System32\Ntfs.sys
</PRE>
<H4><A NAME="sec4"></A>Fatal System Error: 0x0000006B</H4><P CLASS="t">In some cases on ESDI disks with more than 1024 cylinders, Windows NT Workstation appears to have been successfully installed. However, the first time that you attempt to start from the hard disk, NTLDR loads various files and then produces a Fatal System Error: 0x0000006b with the message that Phase 1 Process Initialization failed. Following this message is a hexadecimal dump and system lockup. If you experience this problem, read the section "ESDI Hard Disk" in Chapter 17, "Disk and File System Basics," for information about the ESDI controllers that Microsoft has tested.</P>
<H4><A NAME="sec5"></A>Stop 0x0000007B — Inaccessible Boot Device</H4><P CLASS="t">This Kernel STOP error means that Windows&nbsp;NT is unable to access the Partition Boot Sector or the required information is not found. A common cause of this error is a virus.</P>
<P CLASS="t">Another cause of the problem is incompatible Logical Block Addressing (LBA). The system BIOS is designed to allow access to fixed disks that use fewer than 1024 cylinders. Many modern disks, however, exceed 1024 cylinders. LBA is used to provide support for these disks. Such support is often built into the system BIOS. However, there are potential problems with LBA:</P>
<UL><LI>If partitions were created and formatted with LBA disabled, and LBA is subsequently enabled, a STOP 0x0000007B can result. The partitions must be created and formatted while the LBA is enabled. In addition, changing LBA modes from one scheme to another can cause you to have to recreate and reformat the partitions.</LI></UL><UL><LI>Some LBA schemes are not compatible with Windows NT. When in doubt, it is best to check with your vendor.</LI></UL><P></P>
<P CLASS="t">A corrupt Partition Boot Sector can also cause this problem, depending upon what part is corrupt. This problem is like a virus, except that the corruption is caused by such things as a defective disk or controller, or a bug in a program that somehow has corrupted the Partition Boot Sector.</P></BODY></HTML>
