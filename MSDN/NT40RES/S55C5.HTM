<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding the Cache Counters</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Understanding the Cache Counters</H2><P CLASS="t">The following Performance Monitor Cache and Memory counters are used to measure cache performance and are described in this chapter. </P>
<P></P>
<P CLASS="t"><B>Important</B></P>
<P>The Hit% counters are best displayed in Chart view. Hits often appear in short bursts that are not visible in reports. Also, the average displayed for Hit% on the status bar in Chart view might not match the average displayed in Report view because they are calculated differently. In Chart view, the Hit% is an average of all changes in the counter during the test interval; in Report view, it is the average of the difference between the first and last counts during the test interval.</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="115pt" VALIGN="TOP"><COL WIDTH="233pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Counter</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Description</B></P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>Memory: Cache Bytes </P>
<P></P></TD><TD VALIGN="TOP"><P>How big is the cache?  The Virtual Memory Manager regulates the size of the cache, which varies with the amount of physical memory and the demand for memory by other processes.</P></TD></TR><TR><TD VALIGN="TOP"><P>Memory:  Cache Faults/sec</P></TD><TD VALIGN="TOP"><P>How many pages sought in the cache are not there and must be found elsewhere in memory or on the disk? </P>
<P>This counts numbers of pages, so it can be compared with other page measures, like Page Faults/sec and Pages Input/sec.</P></TD></TR><TR><TD VALIGN="TOP"><P>Copy Reads/sec</P></TD><TD VALIGN="TOP"><P>How often does the file system look in the cache for data requested by applications?</P>
<P>This is a count of all copy read calls to the cache, including hits and misses.</P>
<P>Copy reads are the usual method by which file data found in the cache is copied into an application's memory buffers. </P></TD></TR><TR><TD VALIGN="TOP"><P>Copy Read Hits %</P></TD><TD VALIGN="TOP"><P>How often do applications find what they need in the cache?  </P>
<P>Any value over 80% is excellent. Compare with Copy Reads/sec to see how many hits you are really getting. A small percentage of many calls might represent more hits than a higher percentage of an insignificant number of calls.</P>
<P>This is the percentage of copy read calls satisfied by reads from the cache out of all read calls. Performance Monitor displays the value calculated for the last time interval, not an average. It also counts numbers of reads, regardless of amount of data reads.</P></TD></TR><TR><TD VALIGN="TOP"><P>Read Aheads/sec</P></TD><TD VALIGN="TOP"><P>How often can the Cache Manager read ahead in a file?</P>
<P>Read aheads are a very efficient strategy in most cases. Sequential reading from a file lets the Cache Manager predict the pattern and read even larger blocks of data into the cache on each I/O.</P></TD></TR><TR><TD VALIGN="TOP"><P>Data Maps/sec </P></TD><TD VALIGN="TOP"><P>How often are file systems reading their directories?</P>
<P>This counts read-only access to file system directories, the File Allocation Table in the FAT file system, and the Master File Table in NTFS. </P>
<P>If this count is high, the Cache Manager might be occupied with directory operations. This is not a measure of cache use by applications.</P></TD></TR><TR><TD VALIGN="TOP"><P>Fast Reads</P></TD><TD VALIGN="TOP"><P>How often are applications able to go directly to the cache and bypass the file system? A value over 50% is excellent.</P>
<P>The alternative is to send an I/O request to the file system.</P></TD></TR><TR><TD VALIGN="TOP"><P>Data Flushes/sec </P></TD><TD VALIGN="TOP"><P>How often is cache data being written back to disk?  This counts application requests to flush data from the cache. It is an indirect indicator of the volume and frequency of application data changes.</P></TD></TR><TR><TD VALIGN="TOP"><P>Data Flush Pages/sec</P></TD><TD VALIGN="TOP"><P>How much data is the application changing?  This counter measures data flushes in numbers of pages rather than number of disk accesses.</P>
<P>Counts the number of modified pages in the cache that are written back to disk. This includes pages written by the System process when many changed pages have accumulated, pages flushed so the cache can be trimmed, and disk writes caused by an application write-through request.</P></TD></TR><TR><TD VALIGN="TOP"><P>Lazy Write Flushes/sec</P></TD><TD VALIGN="TOP"><P>How much data is an application changing?  How much memory is available to the cache?</P>
<P>Lazy write flushes are a subset of data flushes. The Lazy Writer Thread in the system process periodically writes changed pages from the modified page list back to disk and flushes them from the cache. This thread is activated more often when memory needs to be released for other uses.</P>
<P>This counter counts number of write and flush operations, regardless of the amount of data written.</P></TD></TR><TR><TD VALIGN="TOP"><P>Lazy Write Pages/sec </P></TD><TD VALIGN="TOP"><P>How much data is an application changing?  How much memory is available to the cache?</P>
<P>Lazy Write Pages are a subset of Data Flush Pages.</P>
<P>Counts the numbers of pages written back to disk by a periodic system thread. Lazy writes are an asynchronous file operation that allows the application to update and continue without waiting for the I/O to be completed.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P></BODY></HTML>
