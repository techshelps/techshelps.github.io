<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Local Procedure Call Facility</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Local Procedure Call Facility</H3><P CLASS="t">Applications and environment subsystems have a client-server relationship. That is, the client (an application) makes calls to the environment server (a subsystem) to satisfy a request for some type of system services. To allow for a client-server relationship between applications and environment subsystems, Windows&nbsp;NT provides a communication mechanism between them. The Executive implements a message-passing facility called a <I>Local Procedure Call</I> (LPC) facility. It works very much like the Remote Procedure Call (RPC) facility used for networked processing, but it is optimized for two processes running on the same computer.</P>
<P CLASS="t">For more information on RPCs, see Chapter 1, "Windows&nbsp;NT Networking Architecture," in the <I>Windows&nbsp;NT&nbsp;Server Networking Guide</I>.</P>
<P CLASS="t">Applications communicate with environment subsystems by using the LPC facility. The message-passing process is hidden from the client applications by function <I>stubs, </I>nonexecutable placeholders used by calls from the server environment. The stubs are kept in dynamic-link libraries (DLLs).</P>
<P></P>
<P></P>
<P CLASS="t">When an application makes an application program interface (API) call to an environment subsystem, the stub in the client application packages the parameters for the call and sends them to a server subsystem process which implements the call. The LPC facility allows the stub procedure to pass the data to the server process and wait for a response.</P>
<P CLASS="t">From the application's perspective, the function in the DLL satisfied the call. The application does not know that the work was actually performed by another subsystem or process or that a message was sent on its behalf.</P></BODY></HTML>
