<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Example 4: When a Custom Application Assigns Permissions</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Example 4: When a Custom Application Assigns Permissions</H3><P></P>
<P CLASS="t"><B>Important</B></P>
<P>The three preceding examples demonstrate discretionary access control for file and directory permissions that are applied using the Windows&nbsp;NT Permissions Editor, either directly or by inheritance. If your organization develops its own custom application that sets and changes permissions on files and directories, it needs to order ACEs in the same way that Windows&nbsp;NT Permissions Editor orders them, or the Windows&nbsp;NT Permissions Editor won't be able to handle the ACL.</P>
<P></P>
<P CLASS="t">The user BobMgr wants Read and Write access to the file object that has the discretionary ACL shown next. The access token for BobMgr indicates that he is a member of the groups Users, JnrMgrs, and Everyone.</P>
<P><img src="xwr_e08.gif"></P>
<P CLASS="t">In this example, a custom application has been used to update the ACL for a file, thus confusing the usual order in which the ACEs for this file are processed. Normally, all AccessDenied ACEs are processed first.</P>
<P CLASS="t">Windows&nbsp;NT evaluates this ACL as follows:</P>
<P>    1.    Windows NT reads BobMgr's desired access mask to see that he is trying to gain Read and Write access.</P>
<P>    2.    Windows&nbsp;NT reads the AccessAllowed ACE for BobMgr and finds a match to the Read permission requested in the desired access mask.</P>
<P>    3.    Windows&nbsp;NT reads the AccessAllowed ACE for Everyone and finds a match to the Write permission requested in the desired access mask.</P>
<P></P>
<P CLASS="t">BobMgr is granted Read and Write access to the file object, even though the third ACE explicitly denies JnrMgrs access to the file object.</P>
<P CLASS="t">If the Windows&nbsp;NT Permissions property sheet had been used to apply the same permissions to the file object, the AccessDenied ACE for JnrMgrs would have been evaluated first in the ACL, and BobMgr would have been denied access to the file.</P></BODY></HTML>
