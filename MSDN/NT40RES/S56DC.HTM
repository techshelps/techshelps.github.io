<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Which is Faster, FAT or NTFS?</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Which is Faster, FAT or NTFS?</H3><P CLASS="t">There are no simple answers to this question. </P>
<P CLASS="t">For small folders, the FAT file system might provide faster access to files, because:</P>
<UL><LI>The FAT structure is simpler.</LI></UL><UL><LI>The FAT folder size is smaller for an equal number of files.</LI></UL><UL><LI>FAT has no controls regarding whether a user can access a file or a folder Therefore, the system doesn't have to check permissions for an individual file or whether a specific user has access to the file or folder. However, Windows&nbsp;NT still has to determine if the file is read only, whether the file is on a FAT or NTFS volume, so the simpler controls for FAT volumes make little difference.</LI></UL><P></P>
<P CLASS="t">The NTFS file system uses a B-tree structure for all folders. This structure minimizes the number of disk accesses required to find a file, which makes access to the file faster than for a file on the FAT file system. In addition, if a folder is small enough to fit into the MFT record, you read the entire folder when you read its MFT record. </P>
<P CLASS="t">A FAT folder entry contains an index into the file allocation table, which identifies the cluster number for the first cluster of the folder. When you want to view a file, the FAT file system has to walk the folder structure to get to the file. For example, to start Disk Administrator, which is C:\Winnt40\System32\Windisk.exe, Windows&nbsp;NT finds the file on a FAT primary partition or logical drive by:</P>
<UL><LI>Reading the root folder of the C drive and searching in it for Winnt40.</LI></UL><UL><LI>Reading the starting cluster of Winnt40, and searching in that folder to find the System32 folder.</LI></UL><UL><LI>Reading the starting cluster of System32, and searching in that folder to find Windisk.exe.</LI></UL><UL><LI>Reading each of the clusters that contain parts of the file Windisk.exe.</LI></UL><P></P>
<P CLASS="t">In comparing performance on large folders having both long and short filenames, the speed of a FAT operation depends on the operation itself and the size of the folder. Creating files on a FAT folder might be faster. Opening a file might be faster on a FAT folder if the file is at the front of the folder. If the file doesn't exist, FAT has to search the entire folder to find this out. The search takes longer on FAT than on the B-tree structure used by the NTFS file system. Folder enumeration might be faster on a FAT folder. In mathematical terms, the average time to find a file on a FAT folder is a function of N/2, where N is the number of files. On an NTFS folder, the average time is a function of Log N. For small values of N, N/2 might actually be less than or equal to LogN. For larger values of N, LogN is less than N/2.</P>
<P CLASS="t">Several factors unique to the two file systems affect the speed with which Windows&nbsp;NT reads or writes a file. </P>
<UL><LI>Fragmentation of the file — if a file is badly fragmented, NTFS usually requires fewer disk accesses than FAT to find all of the fragments.</LI></UL><UL><LI>Cluster size — for both file systems, the default cluster size depends on the volume size, and is always a power of two. FAT addresses are 16 bits, and NTFS addresses are 64 bits. The default FAT cluster size is based upon the fact that the file allocation table can have at most 65,535 entries, so the cluster size is a direct function of the volume size divided by 65,535. Therefore, the default cluster size for FAT volume is almost always larger than the default cluster size for an NTFS volume of the same size. The larger cluster size for a FAT volume means that there might be less fragmentation in files on a FAT volume.</LI></UL><UL><LI>Location of small files — with the NTFS file system, the entire file is contained within the MFT record. The maximum file size that fits in the MFT record depends upon the cluster size and the number of attributes for the file.</LI></UL><P></P></BODY></HTML>
