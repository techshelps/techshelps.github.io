<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining the Minimum Working Set</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Determining the Minimum Working Set</H3><P CLASS="t">When you improve the organization of code and data references in your program, you:</P>
<UL><LI>reduce its minimum working set.</LI></UL><UL><LI>reduce the amount of physical memory it consumes.</LI></UL><UL><LI>improve its use of the file system cache (as described in Chapter 7).</LI></UL><P></P>
<P CLASS="t">To demonstrate one aspect of this improvement, measure the minimum working set of an application before and after you tune it.</P>
<P CLASS="t">To see the actual minimum working set of a process, you must reduce available memory to its minimum. This compels the Virtual Memory Manager to trim all but currently active pages from a process's working set. </P>
<P CLASS="t"><I>Clearmem</I>, a utility on the Windows NT Resource Kit 4.0 CD in the Performance Tools group (\PerfTool\MeasTool), determines the size of your computer's physical memory, allocates enough data to fill it, then references the data as quickly as possible. It also accesses files to clear the cache. This reduces memory available to other processes to a minimum. Then, Clearmem releases the allocated memory to restore normal system functions.</P>
<H4><A NAME="sec0"></A>MESMESTo find the minimum working set for a process</H4><P>    1.    Start the process, then start a Performance Monitor log to measure the Process object once per second.</P>
<P>    2.    Run Clearmem  It usually runs for less than a minute.</P>
<P>    3.    Stop the log, change to Chart view, and in the <B>Options</B> menu, set <B>Data From</B> to the log file.</P>
<P>    4.    Use the Time Window to advance the beginning time to a point when Clearmem was running. (The Clearmem process does not appear in the <B>Add to Chart</B> dialog box unless the process is active at beginning time of the Time Window). Chart Process: % Processor Time for Clearmem to show the duration of the Clearmem process. Then, enlarge the Time Window so that the display begins just after Clearmem started running and ends just before Clearmem stopped running. </P>
<P>    5.    Chart Process: Working Set for the process you are testing.</P>
<P>    6.    Read the minimum working set size from the <B>Min</B> field on the value bar.</P>
<P></P>
<P><img src="xwr_k19.gif"></P>
<P CLASS="t">In this graph, the thick, black line is the working set of Clearmem, the memory-consuming test tool. As Clearmem increases its working set (as represented by the sharply increasing curve) the working sets of all other processes are trimmed until they contain only pages currently being used and those most recently accessed. The other lines in the graph represent the working sets of other processes. The value bar shows that the minimum working set for Explorer in this test is 184,320 bytes.</P></BODY></HTML>
