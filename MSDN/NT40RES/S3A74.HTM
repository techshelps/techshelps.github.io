<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NetBIOS over TCP/IP (NetBT) Name Resolution</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>NetBIOS over TCP/IP (NetBT) Name Resolution</H3><P CLASS="t">Name resolution services for Windows&nbsp;NT fall into two general categories. Each provides similar services for clients and can operate independently or in tandem. They are</P>
<UL><LI><I>NetBIOS over TCP/IP</I> (NetBT)</LI></UL><UL><LI><I>Domain Name System</I> (DNS)</LI></UL><P></P>
<P></P>
<P CLASS="t"><I>NetBT</I> is the session-layer network service that performs name-to-IP address mapping for name resolution. Under Windows&nbsp;NT, it is implemented through the broadcast name resolution and Windows Internet Name Service (WINS) (on those networks with WINS servers). The two most important aspects of the related naming activities are <I>registration</I> and <I>resolution</I>:</P>
<UL><LI>Registration is the process used to register a unique name for each computer (node) on the network. A computer typically registers itself when it starts.</LI></UL><UL><LI>Resolution is the process used to determine the specific address for a computer name.</LI></UL><P></P>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>RFCs 1001 and 1002 specify how NetBIOS should be implemented over TCP/IP and define the name resolution modes.</P>
<P></P>
<P CLASS="t">Defined within NetBT are modes that specify how network resources are identified and accessed. The most common NetBT modes are</P>
<UL><LI><I>b-node</I>, which uses broadcast messages to resolve names</LI></UL><UL><LI><I>p-node</I>, which uses point-to-point communications with a name server to resolve names</LI></UL><UL><LI><I>m-node</I>, which first uses b-node and then — if necessary — p-node to resolve names</LI></UL><UL><LI><I>h-node</I>, which first uses p-node for name queries and then b-node if the name service is unavailable or if the name is not registered in the database</LI></UL><P></P>
<P CLASS="t">The two most common node types for client computers running Windows&nbsp;NT are h-node and b-node. The default node type is b-node.</P>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>If the Windows NT Workstation computer can access a DHCP server or WINS server, the node type is assigned by the DHCP server. If the client computer is configured to use WINS, Windows&nbsp;NT defaults to h-node. </P>
<P></P>
<P CLASS="t">In Windows&nbsp;NT, the Netbt.sys module provides the NetBT functionality that supports name registration and resolution modes. NetBT uses b-node broadcast messages to resolve names. NetBT can also use LMHOSTS files and DNS for name resolution, depending on how TCP/IP is configured on a particular computer.</P>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>When WINS servers are in place on the network, NetBT resolves names on a client computer by communicating with the WINS server, before using LMHOSTS files.</P>
<P></P>
<P CLASS="t">Windows&nbsp;NT supports all NetBT modes described in the following sections. NetBT is also used with the LAN Manager 2.<I>x</I> Server message protocol.</P>
<H4><A NAME="sec0"></A>B-Node</H4><P CLASS="t">The b-node mode uses broadcast messages for name registration and resolution. For example, if a computer named NT_PC1 wants to communicate with a computer named NT_PC2, NT_PC1 sends a broadcast message that it is looking for NT_PC2, and then it waits a specified time for NT_PC2 to respond.</P>
<P CLASS="t">B-node has two major problems:</P>
<UL><LI>In a large environment, it loads the network with broadcast messages.</LI></UL><UL><LI>Typically, routers do not forward broadcast messages, so computers on opposite sides of a router never hear the requests.</LI></UL><P></P>
<H4><A NAME="sec1"></A>P-Node</H4><P CLASS="t">The p-node mode addresses the issues that b-node does not solve. In a p-node environment, computers neither create nor respond to broadcast messages. All computers register themselves with the WINS server, which is responsible for knowing computer names and addresses and for ensuring that no duplicate names exist on the network.</P>
<P CLASS="t">In this environment, when NT_PC1 wants to communicate with NT_PC2, it queries the WINS server for the address of NT_PC2. Upon receipt of the address, NT_PC1 goes directly to NT_PC2 without broadcasting. Because the name queries go directly to the WINS server, p-node avoids loading the network with broadcast messages. Because broadcast messages are not used, and because the address is received directly, computers can be on opposite sides of routers.</P>
<P CLASS="t">The most significant problems with p-node are the following:</P>
<UL><LI>All computers must be configured to know the address of the WINS server.</LI></UL><UL><LI>If the WINS server is down, computers that rely on it to resolve addresses cannot get to any other systems on the network.</LI></UL><P></P>
<H4><A NAME="sec2"></A>M-Node</H4><P CLASS="t">The m-node mode was created primarily to solve the problems associated with b-node and p-node. In an m-node environment, a computer first attempts registration and resolution using b-node. If that fails, it switches to p-node. Advantage are as follows:</P>
<UL><LI>M-node can cross routers.</LI></UL><UL><LI>Because b-node is always tried first, computers on the same side of a router continue to operate as usual if the WINS server is down.</LI></UL><UL><LI>In theory, it should increase local area network (LAN) performance.</LI></UL><P></P>
<H4><A NAME="sec3"></A>H-Node</H4><P CLASS="t">The h-node mode solves the most significant problems associated with broadcast messages and with routed-environment operations. It is a combination of b-node and p-node that uses broadcast messages as a last effort. The h-node mode does more than change the order for using b-node and p-node: If the WINS server is down — making broadcast messages a necessity — the computer continues to poll the WINS server. When the WINS server can be reached again, the system returns to p-node. H-node can also be configured to use the LMHOSTS file after broadcast name resolution fails.</P>
<P CLASS="t">Because p-node is used first, no broadcast messages are generated if the WINS server is running, and computers can be on opposite sides of routers. If the WINS server is down, b-node is used, so computers on the same side of a router continue to operate as usual.</P>
<H4><A NAME="sec4"></A>Other Combinations</H4><P CLASS="t">Another variation, known as <I>modified b-node</I>, is also used in Microsoft networks so that messages can go across routers. Modified b<I>-node</I> does not use p-node mode or a WINS server. In this mode, b-node uses a list of computers and addresses stored in an LMHOSTS file. If a b-node attempt fails, the system looks in LMHOSTS to find a name and then uses the associated address to cross the router. However, each computer must have this list, which creates an administrative burden in maintaining and distributing the list. Both Windows for Workgroups 3.11 and LAN Manager 2.<I>x</I> used such a modified b-node system. Windows&nbsp;NT uses this method if WINS servers are not used on the network. In Windows&nbsp;NT, some extensions have been added to this file to make it easier to manage (as described in the<I> </I>"Using LMHOSTS Files" chapter in this book), but modified b-node is not an ideal solution.</P>
<P CLASS="t">Some sites might require both b-node and p-node modes. Although this configuration can work, administrators must exercise extreme caution, using it only for transition situations. Because p-node hosts disregard broadcast messages, and b-node hosts rely on broadcast messages for name resolution, the two hosts can potentially be configured with the same NetBIOS name, leading to unpredictable results. Also, if a computer configured to use b-node has a static mapping in the WINS database, a computer configured to use p-node cannot use the same computer name.</P>
<P CLASS="t">Computers running Windows&nbsp;NT can be configured as WINS proxy agents to help the transition to using WINS. Windows-based networking clients (WINS-enabled Windows&nbsp;NT, Windows&nbsp;95, or Windows for Workgroups 3.11 computers) can use WINS directly. Non-WINS computers that are b-node compatible (as described in RFCs 1001 and 1002) can access WINS through <I>proxies.</I> A WINS proxy is a WINS-enabled computer that listens for name-query broadcast messages and then respond for names that are not on the local subnet. Proxies are p-node computers.</P>
<P CLASS="t">Figure 32.3 shows a small internetwork with two local area networks connected by a router. One of the subnets has a WINS name server, which can be used by clients on both subnets. The WINS proxy computer (which must be WINS by using TCP/IP Configuration), can access the WINS server directly. The name registration and resolution broadcasts from the non-WINS enabled computers are intercepted by the WINS proxy. Proxies intercept the broadcast messages and send them directly to the WINS server on the other sub-net. </P>
<P><img src="xwrff03.gif"></P>
<P>Figure 32.3    Routed Network with WINS Server</P>
<P CLASS="t">In a WINS and broadcast name resolution environment, a WINS-enabled client computer will behave differently than a non-WINS-enabled client computer. These differences will be apparent in the way these clients handle <I>resolution</I>, <I>registration</I>, <I>release</I>, and <I>renewal</I>.</P>
<H4><A NAME="sec5"></A>Name Resolution</H4><P CLASS="t">NetBIOS computer names are resolved using two basic methods, depending on whether WINS resolution is available and enabled on the client computer. Whatever name resolution method is used, the process is transparent to the user after the system is configured.</P>
<P CLASS="t"><B>If WINS is not enabled on the client:  </B>The computer registers its name by sending <I>name registration request</I> packets (as broadcast messages) to the local subnet. To find a particular computer, the non-WINS computer sends <I>name query request</I> packets (as broadcast messages) on the local subnet. (This broadcast message cannot be passed on through IP routers.) If local name resolution fails, the local LMHOSTS file is consulted. These processes are followed whether the computer is a network server, a workstation, or other device.</P>
<P CLASS="t"><B>If WINS is enabled on the client:  </B>The computer first queries the WINS server. If that fails, it sends name registration and query requests (as broadcast messages). </P>
<H4><A NAME="sec6"></A>Name Registration</H4><P CLASS="t">Name registration ensures that the NetBIOS computer name and IP address are unique for each device.</P>
<P CLASS="t"><B>If WINS is not enabled on the client:  </B>For a non-WINS computer to register its name, a <I>name registration request </I>packet is broadcast to the local network, stating its NetBIOS computer name and IP address. Any device on the network that previously claimed that name challenges the name registration (with a <I>negative name registration response</I>), resulting in an error for the computer attempting to register the duplicate name. If the <I>name registration request</I> remains unchallenged for a specific time period, the requesting computer adopts that name and address.</P>
<P CLASS="t">After a non-WINS computer claims a name, it must challenge duplicate name registration attempts (with a <I>negative name registration response</I>) and respond positively to name queries issued on its registered name (with a <I>positive name query response</I>). The <I>positive name query response</I> contains the IP address of the computer so that the two systems can establish a session.</P>
<P CLASS="t"><B>If WINS is enabled on the client:  </B>The name registration request is sent directly to the WINS server to be added to the database. A WINS server accepts or rejects a computer name registration depending on the current contents of its database:</P>
<UL><LI>If the database contains a different address for that name, WINS challenges the current entry to determine whether that device still claims the name.</LI></UL><UL><LI>If another device is using that name, WINS rejects the new name registration request.</LI></UL><UL><LI>Otherwise, WINS accepts the entry and adds it to its local database together with a timestamp, an incremental unique version number, and other information.</LI></UL><P></P>
<H4><A NAME="sec7"></A>Name Release</H4><P CLASS="t">When a computer finishes using a particular name (such as when the Windows&nbsp;NT Workstation service or Server service is stopped), it no longer challenges other registration requests for the name. This is referred to as <I>releasing a name</I>.</P>
<P></P>
<P CLASS="t"><B>If WINS is not enabled on the client:  </B>When a non-WINS computer releases a name, a broadcast is made to allow any systems on the network that might have cached the name to remove it. Upon receiving name query packets specifying the deleted name, computers simply ignore the request, allowing other computers on the network to acquire the released name.</P>
<P CLASS="t">For non-WINS computers to be accessible from other subnets, their names must be added as static entries to the WINS database or in the LMHOSTS file(s) on the remote system(s), because they will respond only to those name queries that originate on their local subnet.</P>
<P CLASS="t"><B>If WINS is enabled on the client:  </B>Whenever a computer is shut down properly, it releases its name to the WINS server, which marks the related database entry as <I>released</I>. If the entry remains released<I> </I>for a certain period of time, the WINS server marks it as <I>extinct</I>, updates the version number, and notifies other WINS servers of the change.</P>
<UL><LI>If a name is marked released at a WINS server, and a new registration arrives using that name but a different address, the WINS server can immediately give that name to the requesting client because it knows that the old client is no longer using that name. This might happen, for example, when a DHCP-enabled laptop changes subnets.</LI></UL><UL><LI>If the computer released its name during an orderly shutdown, the WINS server does not challenge the name when the computer is reconnected. If an orderly shutdown did not occur, the name registration with a new address causes the WINS server to challenge the registration. The challenge fails and the registration succeeds, because the computer no longer has the old address.</LI></UL><P></P></BODY></HTML>
