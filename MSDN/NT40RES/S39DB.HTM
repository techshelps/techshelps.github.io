<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The FAT File System</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>The FAT File System</H3><P CLASS="t">The FAT file system is a simple file system originally designed for small disks and simple folder structures. The FAT file system is named for its method of organization, the file allocation table, which resides at the beginning of the volume. To protect the volume, two copies of the table are kept, in case one becomes damaged. In addition, the file allocation tables and the root folder must be stored in a fixed location so that the files needed to start the system can be correctly located. </P>
<P CLASS="t">A volume formatted with the FAT file system is allocated in clusters. The default cluster size is determined by the size of the volume. For the FAT file system, the cluster number must fit in 16 bits and must be a power of two. The default cluster sizes are shown in the following table. You can specify a different cluster size if you format an FAT volume by using the <B>format</B> program from the command prompt. However, the size you specify cannot be less than that shown in the table.</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="120pt" VALIGN="TOP"><COL WIDTH="115pt" VALIGN="TOP"><COL WIDTH="112pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Partition size</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Sectors per cluster</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Cluster size</B></P></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>0 MB - 32 MB</P></TD><TD VALIGN="TOP"><P>1</P></TD><TD VALIGN="TOP"><P>512 bytes</P></TD></TR><TR><TD VALIGN="TOP"><P>33 MB - 64 MB</P></TD><TD VALIGN="TOP"><P>2</P></TD><TD VALIGN="TOP"><P>1K</P></TD></TR><TR><TD VALIGN="TOP"><P>65 MB - 128 MB</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>2K</P></TD></TR><TR><TD VALIGN="TOP"><P>129 MB - 255 MB</P></TD><TD VALIGN="TOP"><P>8</P></TD><TD VALIGN="TOP"><P>4K</P></TD></TR><TR><TD VALIGN="TOP"><P>256 MB - 511 MB</P></TD><TD VALIGN="TOP"><P>16</P></TD><TD VALIGN="TOP"><P>8K</P></TD></TR><TR><TD VALIGN="TOP"><P>512 MB - 1023 MB</P></TD><TD VALIGN="TOP"><P>32</P></TD><TD VALIGN="TOP"><P>16K</P></TD></TR><TR><TD VALIGN="TOP"><P>1024 MB - 2047 MB</P></TD><TD VALIGN="TOP"><P>64</P></TD><TD VALIGN="TOP"><P>32K</P></TD></TR><TR><TD VALIGN="TOP"><P>2048 MB - 4095 MB</P></TD><TD VALIGN="TOP"><P>128</P></TD><TD VALIGN="TOP"><P>64K</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">The FAT file system is not recommended for volumes larger than 511 MB because of its overhead. You cannot use the FAT file system on volumes larger than 4<B>&nbsp;</B>GB, regardless of the cluster size.</P>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>On volumes with the number of sectors less than 32680, the cluster sizes can be up to 8 sectors per cluster. The format program, whether you format the volume by using Disk Administrator or run <B>format</B> at the command prompt, creates a 12-bit FAT. Volumes less than 16&nbsp;MB<B> </B>will usually be formatted for 12-bit FAT, but the exact size depends on the disk geometry. The disk geometry also determines the point at which a larger cluster size will be needed, because the number of clusters on the volume must fit into 16 bits. Therefore, you might have a 33&nbsp;MB volume that still has only 1 sector per cluster. </P>
<P></P>
<H4><A NAME="sec0"></A>Structure of a FAT Volume</H4><P CLASS="t">Figure 17.5 illustrates how the FAT file system organizes a volume. See the section titled "Relative Sectors and Number of Sectors Fields," presented later in this chapter, for information about the area between the Partition Boot Sector and FAT1. </P>
<P><img src="xwr_p03.gif"></P>
<P>Figure 17.5    Organization of FAT volume </P>
<P CLASS="t">The file allocation table (areas FAT1 and FAT2 in Figure 17.5) contains the following types of information about each cluster on the volume:</P>
<UL><LI>Unused</LI></UL><UL><LI>Cluster in use by a file</LI></UL><UL><LI>Bad cluster</LI></UL><UL><LI>Last cluster in a file</LI></UL><P></P>
<P CLASS="t">The root folder contains an entry for each file and folder on the root. The only difference between the root folder and other folders is that the root folder is on a specified location on the disk and has a fixed size (512 entries for a hard disk, number of entries on a floppy disk depends on the size of the disk). </P>
<P CLASS="t">Folders have a 32-byte entry for each file and folder contained in the folder. The entry includes the following information:</P>
<UL><LI>Name (eight-plus-three characters)</LI></UL><UL><LI>Attribute byte (8 bits worth of information, described later in this section)</LI></UL><UL><LI>Create time (24 bits)</LI></UL><UL><LI>Create date (16 bits)</LI></UL><UL><LI>Last access date (16 bits)</LI></UL><UL><LI>Last modified time (16 bits)</LI></UL><UL><LI>Last modified date (16 bits.)</LI></UL><UL><LI>Starting cluster number in the file allocation table (16 bits) </LI></UL><UL><LI>File size (32 bits)</LI></UL><P></P>
<P CLASS="t">There is no organization to the FAT folder structure, and files are given the first available location on the volume. The starting cluster number is the address of the first cluster used by the file. Each cluster contains a pointer to the next cluster in the file, or an indication (0xFFFF) that this cluster is the end of the file. These links and end of file indicators are shown in Figure 17.6.</P>
<P><img src="xwr_p04.gif"></P>
<P>Figure 17.6    File Allocation Table</P>
<P CLASS="t">This illustration shows three files. The file File1.txt is a file that is large enough to use three clusters. A small file, File3.txt, fits completely in one cluster. The third file, File2.txt, is a fragmented file that also requires three clusters. In each case, the folder entry points to the first cluster of the file. </P>
<P CLASS="t">The information in the folder is used by all operating systems that support the FAT file system. In addition, Windows&nbsp;NT can store additional time stamps in a FAT folder entry. These time stamps show when the file was created or last accessed and are used principally by POSIX applications.</P>
<P CLASS="t">Because all entries in a folder are the same size, the attribute byte for each entry in a folder describes what kind of entry it is. One bit indicates that the entry is for a subfolder, while another bit marks the entry as a volume label. Normally, only the operating system controls the settings of these bits. </P>
<P CLASS="t">A FAT file has four attributes bits that can be turned on or off by the user — archive file, system file, hidden file, and read-only file. </P>
<H4><A NAME="sec1"></A>Filenames on FAT Volumes </H4><P CLASS="t">Beginning with Windows&nbsp;NT 3.5, files created or renamed on FAT volumes use the attribute bits to support long filenames in a way that does not interfere with how MS-DOS or OS/2 accesses the volume. Whenever a user creates a file with a long filename, Windows&nbsp;NT creates an eight-plus-three name for the file. In addition to this conventional entry, Windows&nbsp;NT creates one or more secondary folder entries for the file, one for each 13 characters in the long filename. Each of these secondary folder entries stores a corresponding part of the long filename in Unicode. Windows&nbsp;NT sets the volume, read-only, system, and hidden file attribute bits of the secondary folder entry to mark it as part of a long filename. MS-DOS and OS/2 generally ignore folder entries with all four of these attribute bits set, so these entries are effectively invisible to these operating systems. Instead, MS-DOS and OS/2 access the file by using the conventional eight-plus-three filename contained in the folder entry for the file.</P>
<P CLASS="t">Figure 17.7 shows all of the folder entries for the file Thequi~1.fox, which has a long name of The quick brown.fox. The long name is in Unicode, so each character in the name uses two bytes in the folder entry. The attribute field for the long name entries has the value 0x0F. The attribute field for the short name is 0x20.</P>
<P><img src="xwr_p08.gif"></P>
<P>Figure 17.7    Long filename on a FAT volume</P>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>Windows&nbsp;NT and Windows&nbsp;95 use the same algorithm to create long and short filenames. On computers that dual-boot these two operating systems, files that you create when running one of the operating systems can be accessed when running the other.</P>
<P></P>
<P CLASS="t">For information about how Windows&nbsp;NT creates the short filename, see "Generating and Viewing Short Filenames," presented later in this chapter. </P>
<P CLASS="t">By default, Windows&nbsp;NT versions 3.5 and higher support long filenames on FAT volumes. You can turn off creation of long filenames by setting the Win31FileSystem parameter in the following Registry entry to 1:</P>
<P CLASS="spacing"><BR></P>
<PRE>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\FileSystem
</PRE>
<P CLASS="t">Setting this value prevents Windows&nbsp;NT from creating new long filenames on all FAT volumes, but it does not affect existing long filenames. </P>
<H4><A NAME="sec2"></A>Using the FAT File System with Windows&nbsp;NT</H4><P CLASS="t">The FAT file system works the same in Windows&nbsp;NT as it does in MS-DOS, Windows 3.1<I>x</I>, and Windows 95. In fact, you can install Windows&nbsp;NT on an existing FAT primary partition or logical drive. When running Windows&nbsp;NT, you can move or copy files between FAT and NTFS volumes.</P>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>You cannot use Windows&nbsp;NT with any compression or partitioning software that requires disk drivers to be loaded by MS-DOS. Therefore, you cannot use MS-DOS 6.0 DoubleSpace<FONT FACE="Symbol">â</FONT> or MS-DOS 6.22 DiskSpace<FONT FACE="Symbol">ä</FONT> on a FAT primary partition or logical drive that you want to access when running Windows&nbsp;NT. </P>
<P>If you have a dual-boot configuration with Windows&nbsp;95, you can create FAT partitions when running Windows&nbsp;95 that you cannot use when running Windows&nbsp;NT. See the section "System ID Field," presented later in this chapter, for details. </P>
<P></P></BODY></HTML>
