<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Windows NT Creates an Access Token</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>How Windows&nbsp;NT Creates an Access Token</H3><P CLASS="t">Before a user can do anything on a Windows&nbsp;NT system, he or she must log on to the system by supplying a username and password. Windows&nbsp;NT uses the username for identification and password for validation. The following procedure illustrates the interactive logon process for Windows NT.</P>
<P CLASS="t">The initial logon process for Windows&nbsp;NT is <I>interactive</I>, meaning that the user must type information at the keyboard in response to a dialog box the operating system displays on the screen. Windows&nbsp;NT grants or denies access based upon the information provided by the user.</P>
<P><img src="xwr_e09.gif"></P>
<P>Figure 6.3    Windows&nbsp;NT Validation Process</P>
<P CLASS="t">The following list details the steps included in the interactive logon and validation process, as illustrated in Figure 6.3:</P>
<P>    1.    The user presses Ctrl+Alt+Del to gain the attention of Windows&nbsp;NT. This key combination before logon protects against Trojan Horse-type programs that impersonate the operating system and trick users into disclosing their username and password.</P>
<P>    2.    When the user provides a username and a password, the logon process calls the Local Security Authority. </P>
<P>    3.    The Local Security Authority runs the appropriate authentication package. </P>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>Windows&nbsp;NT can support multiple authentication packages that are implemented as DLLs. This flexibility gives third-party software vendors the opportunity to integrate their own custom authentication packages with Windows&nbsp;NT. For example, a network vendor might augment the standard Windows&nbsp;NT authentication package by adding one that allows users to log onto Windows&nbsp;NT and the vendor's network simultaneously.</P>
<P></P>
<P>    4.    The authentication package checks the user accounts database to see if the account is local. If it is, the username and password are verified against those held in the user accounts database. If it is not, the requested logon is forwarded to an alternate authentication package. </P>
<P>    5.    When the account is validated, the SAM (which owns the user accounts database) returns the user's security ID and the security IDs of any global groups to which the user belongs.</P>
<P>    6.    The authentication package creates a logon session and then passes the logon session and the security IDs associated with the user to the Local Security Authority.</P>
<P>    7.    If the logon is rejected, the logon session is deleted, and an error is returned to the logon process.</P>
<P>Otherwise, an access token is created, containing the user's security ID and the security IDs of Everyone and other groups. It also contains user rights (described in the next section) assigned to the collected security IDs. This access token is returned to the logon process with a Success status.</P>
<P>    8.    The logon session calls the Win32 subsystem to create a process and attach the access token to the process, thus creating a <I>subject</I> for the user account. (Subjects are described in the section called "Subjects and Impersonation," later in this chapter.)</P>
<P>    9.    For an interactive Windows NT session, the Win32 subsystem starts the desktop for the user.</P>
<P></P>
<P CLASS="t">After the validation process, a user's shell process (that is, the process in which the desktop is started for the user) is given an access token. The information in this access token is reflected by anything the user does, or by any process that runs on the user's behalf.</P></BODY></HTML>
