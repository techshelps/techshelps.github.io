<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Boot Loader Process</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Boot Loader Process</H3><P CLASS="t">The boot loader enables you to select the operating system that you want to start, and loads the operating system files from the boot partition. Boot loader processing is different on x86-based and RISC-based computers.</P>
<H4><A NAME="sec0"></A>NTLDR Functions (x86-based Computer)</H4><P CLASS="t">NTLDR controls the operating system selection process and hardware detection prior to the Windows&nbsp;NT Kernel initialization. NTLDR must be in the root folder of your startup disk, and also requires that the following files be located in the root folder:</P>
<UL><LI>Ntdetect.com</LI></UL><UL><LI>Boot.ini</LI></UL><UL><LI>Bootsect.dos (if dual-booting)</LI></UL><UL><LI>Ntbootdd.sys (if using the scsi() syntax in the Boot.ini file)</LI></UL><P></P>
<P CLASS="t">If the path name in the Boot.ini file for your system partition uses the scsi() syntax, the file Ntbootdd.sys must be in the root folder of the system partition. For more information about the scsi() syntax and Ntbootdd.sys, see Chapter 20, "Preparing for and Performing Recovery."</P>
<P CLASS="t">When NTLDR starts executing, it clears the screen and displays the boot loader message, which is:</P>
<P CLASS="spacing"><BR></P>
<PRE>OS Loader V4.0
</PRE>
<P CLASS="t">NTLDR then performs the following steps:</P>
<UL><LI>Switches the processor into the 32-bit flat memory mode. When x86-based computers first start, they are running in real mode, like an 8088 or 8086 CPU. Because NTLDR is mostly a 32-bit program, it must switch the processor to 32-bit flat memory mode before it can perform any other functions.</LI></UL><UL><LI>Starts the appropriate minifile system. The code to access files on FAT and NTFS volumes is built into NTLDR. This code enables NTLDR to read, access, and copy files.</LI></UL><UL><LI>Reads the Boot.ini file, and displays the operating system selections. This screen is referred to as the boot loader screen.</LI></UL><UL><LI>Allows the user to select an operating system from the boot loader screen.</LI></UL><UL><LI>If the user selects an operating system other than Windows&nbsp;NT, NTLDR loads Bootsect.dos and passes control to it. The other operating system then starts up as normal, because Bootsect.dos contains the Partition Boot Sector that was on the primary partition or logical drive before you installed Windows&nbsp;NT.</LI></UL><UL><LI>If you select a Windows&nbsp;NT version, NTLDR executes Ntdetect.com to gather information about currently installed hardware.</LI></UL><UL><LI>NTLDR presents you with the choice of starting the computer in the configuration in use when Windows&nbsp;NT was last shutdown (Default), or the Last Known Good configuration. You have this option only if you press the space bar when prompted, or you have more than one hardware profile. You have approximately five seconds to select this option.</LI></UL><UL><LI>NTLDR loads and starts Ntoskrnl.exe. NTLDR passes the hardware information collected by Ntdetect.com to Ntoskrnl.exe.</LI></UL><P></P>
<H4><A NAME="sec1"></A>OSLOADER Functions (RISC-based Computers)</H4><P CLASS="t">On RISC-based computers, Osloader.exe performs all of the functions that are performed by the x86-based components NTLDR, Ntdetect.com, and Bootsect.dos. </P>
<P CLASS="t">The NVRAM contains environment variables that provide the functional equivalent of the Boot.ini file on x86-based computers.</P></BODY></HTML>
