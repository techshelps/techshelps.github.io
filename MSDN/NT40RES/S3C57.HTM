<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Feature Comparison</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Feature Comparison</H3><P CLASS="t">Because of the difference in their missions, Windows&nbsp;NT and Windows 95 support different types of additional features. An organization that includes both operating systems gains the best that computing has to offer. The following sections compares these features.</P>
<H4><A NAME="sec0"></A>DCOM support</H4><P CLASS="t">COM (Component Object Model) is the basis of OLE. COM is the standard by which software components can make use of or be used by one another, integrating features among disparate applications. For example, a user can include an illustration created with one application in a document created with another application. By linking the illustration in the document to the illustration's source file, the document's illustration is updated as its source file is edited and the link between the two is updated.</P>
<P CLASS="t">Distributed Component Object Model is network OLE—that is, COM with a longer "wire." DCOM is a new technology built into Windows&nbsp;NT 4.0 Workstation that enables software components to work with each other across a network or across the Internet. It is a fast transport for distributed applications built with COM. Existing COM applications can use DCOM. They will require only minor modification to a system's configuration, but none to the application code itself. The programming model is identical to ActiveX technologies, so integration is seamless.</P>
<P CLASS="t">With DCOM, indirect connection (a client connecting to a server to connect to another server) is eliminated. After the pointer is established at the target server, DCOM allows the pointer to be given to the client enabling direct client/server communication. </P>
<P CLASS="t">DCOM eliminates the need for objects to implement the communication protocols for accessing remote objects. DCOM centrally handles the communication for all objects.</P>
<P CLASS="t">Windows 95 plans DCOM support in the near future but currently runs DCOM applications as COM applications.</P>
<H4><A NAME="sec1"></A>Plug and Play</H4><P CLASS="t">Windows 95 supports Plug and Play, and Windows 95 applications must be aware of on-the-fly configuration changes.</P>
<P CLASS="t">Windows&nbsp;NT does support static configuration changes, but it is not aware of on-the-fly configuration changes for this release.</P>
<H4><A NAME="sec2"></A>File Compression</H4><P CLASS="t">NTFS provides file compression as part of the user interface, whereas Windows 95 relies on a separate utility for compression. By right-clicking on a file within an NTFS partition and then clicking Properties, the user can select the <B>Compressed </B>check box on the General tab to reduce the size of the file by about 50 percent.</P>
<H4><A NAME="sec3"></A>Multimedia APIs</H4><P CLASS="t">Windows&nbsp;NT supports a series of direct application programming interfaces (APIs) to promote Windows as a platform for game developers and for multimedia-based training. These DirectX APIs—DirectDraw, DirectPlay, and DirectSound—give developers a standard set of services that make game development quicker and easier.</P>
<P CLASS="t">DirectX was introduced with Windows 95. The functions are implemented differently in Windows&nbsp;NT 4.0 than in Windows 95 due to the inaccessibility of the hardware on a Windows&nbsp;NT computer. </P>
<P CLASS="t">DirectDraw for Windows&nbsp;NT supports a 32-bit API for accelerated drawing. It allows an application to manipulate video memory easily and take advantage of the capabilities of different types of video hardware without becoming device-dependent. It enables digital video playback to take advantage of several types of hardware support that are included in advanced graphics adapters.</P>
<P CLASS="t">The Windows&nbsp;NT 4.0 implementation of DirectDraw does not communicate directly with the hardware. (This is in contrast to Windows 95 DirectDraw). All functions are mediated by GDI. DirectDraw can emulate functions by reducing them into simpler tasks, much as GDI does for its clients. </P>
<P></P>
<P CLASS="t">DirectSound utilizes accelerated sound hardware features without requiring the application to query the hardware or program specifically. DirectSound takes advantage of on-card memory, sound mixing (for example, the sound of the crowd mixed with the sound of the announcer mixed with the crack of the bat in a baseball-game application), hardware mixing, and hardware sound-buffer memory. </P>
<P CLASS="t">The DirectSound API provides direct control of audio hardware and is designed to enable 3-D audio support in games. Direct sound runs in emulation mode for Windows&nbsp;NT 4.0 Workstation. API calls are converted to the existing APIs at runtime.</P>
<H5 CLASS="h4"><A NAME="sec4"></A>Platform support</H5><P CLASS="t">Windows 95 is designed for Intel ISA. It runs on <I>x</I>86, Pentium, and Pentium Pro computers. Windows&nbsp;NT supports Intel ISA, Alpha, R4X00, and PowerPC. Windows&nbsp;NT also supports multiprocessor environments with symmetric multiprocessing. Windows 95 supports single processor only.</P>
<P CLASS="t"></P></BODY></HTML>
