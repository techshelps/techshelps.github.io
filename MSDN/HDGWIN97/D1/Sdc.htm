<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hardware Acceleration for 3-D Graphics</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF"><font face="verdana,arial,helvetica" size="2">

<H3 CLASS="h2">Hardware Acceleration for 3-D Graphics</H3><P CLASS="t">This section summarizes guidelines related to Microsoft Direct3D technologies that can be implemented as hardware acceleration features. Supporting the items in this section can result in improved performance and better memory use. </P>
<P CLASS="t">Hardware acceleration for 3-D graphics is required for Entertainment PC&nbsp;97 systems, with individual items in this section marked as required or recommended for that system type.</P>
<P CLASS="t">In general, hardware acceleration for 3-D graphics is not required for Basic PC&nbsp;97 or Workstation&nbsp;PC&nbsp;97 systems. The individual items in this section are required or recommended only if a hardware manufacturer chooses to implement hardware acceleration in a graphics adapter. It is recommended that the PC system manufacturer select graphics adapters that provide 3-D hardware acceleration when designing PC systems to support high-quality graphics for use with professional graphics applications or for "multimedia" systems.</P>
<P CLASS="nt"><FONT CLASS="nh"><B>Note</B></FONT>  For specific features for Workstation PC&nbsp;97, this section assumes a workstation system designed to support a graphics-intensive use such as CAD. These requirements are not general requirements for Workstation PC&nbsp;97.</P>
<P CLASS="t">There are two broad classes of hardware suitable for OpenGL-based 3-D applications. At the low end, OpenGL can drive Direct3D devices, so any Direct3D device is in principle compatible with OpenGL. However, OpenGL has conformance requirements for rasterization, including specific requirements for subpixel precision and Z-buffer calculations, which are more precise than the Direct3D software rendering library. </P>
<P CLASS="t">Direct3D hardware designed to support OpenGL-based applications must be capable of meeting the OpenGL rasterization rules, and Direct3D drivers must report through the appropriate caps bit, whether or not the hardware actually conforms to OpenGL requirements.</P>
<P CLASS="t">There is also a class of graphics adapters designed specifically for OpenGL. Although these cards can also expose their 3-D capabilities through a Direct3D driver, they generally expose their capabilities to OpenGL through a client driver.</P>
<P CLASS="t">Information about OpenGL rasterization requirements and conformance rules is available from the OpenGL Architectural Review Board. Additional information is available on the Usenet newsgroup for OpenGL: comp.graphics.opengl.</P>
<P CLASS="t">Hardware that implements 32-bpp display modes (for example, display hardware for high-end engineering workstations) should implement RGB mode rasterization. OpenGL supports a color index mode, but most OpenGL applications require RGB mode rasterization.</P>
<P CLASS="h4"><B>24. Basic RGB rasterization, if RGB mode is supported in hardware</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP">Required</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">In RGB mode under Direct3D, shading across a surface is accomplished by independently interpolating in all color components. If 3-D hardware supports RGB mode rasterization, it must support the following features:</P>
<UL><LI><B>RGB rasterization.</B> This must use the red, green, and blue color interpolates.</LI><LI><B>Flat and Gouraud shading.</B> For flat shading, a single color is applied to a surface region based on the color of a specific point on a polygon. For Gouraud shading, more realistic color is provided by gradually filling the region using interpolated colors based on the colors of each individual vertex and the distance from the vertex.</LI><LI><B>Point-sampled, perspective-correct texturing.</B> For this method of texture mapping, the distance is computed between a pixel to be displayed and the pixels at surface vertices, plus perspective computation is carried out to ensure that the texture map includes perspective distortions that match those on the 3-D surface.</LI></UL><P CLASS="h4"><B>25. Recommended RGB rasterization features</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">If 3-D hardware supports RGB mode rasterization, the following additional features in hardware are also recommended:</P>
<UL><LI><B>Fog coloring and depth-cueing operations.</B> These are provided for depth of field visual cueing. Fog coloring provides special depth shading to a 3-D object, with a surface color mixed in proportion to the fog value. </LI><LI><B>Modulated alpha coloring.</B> With this method, the shading color and texture map are mixed together directly, with the alpha for the pixel color taken from the texture map.</LI><LI><B>Bilinear filtered textures.</B> This method ensure smooth transition of an object across a texture map by selecting color for texture map pixels based on computations that use a weighted average to mix colors for a particular texture map pixel based on color values for the nearest pixels in the texture map.</LI><LI><B>Generalized trilinear MIP-mapped textures.</B> MIP mapping uses multiple texture maps of differing resolutions and sizes to represent a texture. For trilinear averaging, the resolution is computed for the texture map, and then a weighted average is computed of nearby texture maps in all three dimensions. With this method, the texture scales smoothly as the surface increases in size.</LI></UL><P CLASS="h4"><B>26. Destination alpha blending for transparency effects</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">For destination alpha blending, transparent primitives are blended with the background behind them, updating not only the frame buffer but also a cumulative transparency for the background that can affect the rendering of subsequent primitives. This method is capable of the greatest visual accuracy but is computationally expensive, requires the hardware to support a dedicated alpha buffer, and is recommended only for high-end workstations that must support complex 3-D image compositing and volume-rendering applications.</P>
<P CLASS="h4"><B>27. Source alpha blending for transparency effects</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">For source alpha blending, transparent primitives are blended with the background, but the background transparency is not updated. This method provides good visual accuracy if there are not too many overlapping transparent objects.</P>
<P CLASS="h4"><B>28. Stippled alpha blending (screen door transparency)</B></P>

<TABLE COLS="6" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="115pt" VALIGN="TOP"><COL WIDTH="5pt" VALIGN="TOP"><COL WIDTH="109pt" VALIGN="TOP"><COL WIDTH="5pt" VALIGN="TOP"><COL WIDTH="109pt" VALIGN="TOP"><COL WIDTH="5pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD VALIGN="TOP">Optional</TD><TD VALIGN="TOP">Optional</TD><TD VALIGN="TOP">Optional</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Instead of either a source alpha blend or a full destination alpha blend, Direct3D can be switched to a mode where it uses stipple patterns keyed off the interpolated alpha value. This saves destination reads and multiplies, and does not require sorting of primitives. This mode is simple to implement, but is not visually acceptable for engineering and other professional 3-D uses. </P>
<P CLASS="h4"><B>29. Double buffer support for workstation-quality 3-D graphics</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP">Recommended</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">If hardware designed for the workstation market supports 3-D acceleration, it must also provide two 16-bpp or 24-bpp frame buffers. </P>
<P CLASS="t">Workstation applications and many games and consumer titles require smooth animation. In many cases, this requires the display hardware to support two pixel buffers, although some applications and hardware designed for the entertainment market can provide smooth animation using other techniques. </P>
<P CLASS="h4"><B>30. Hidden surface removal</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP">Recommended</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Typically, 3-D applications perform hidden surface elimination through the use of Z-buffers, although many game applications use specialized geometry and algorithms instead. If hardware targeting the workstation market supports 3-D acceleration, it must also provide at least a 16-bit Z-buffer.</P>
<P CLASS="h4"><B>31. Palettized textures</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Support for palettized textures allows for much less texture memory. Particularly useful are 4-bit and 8-bit palettized textures, each with their own palettes. </P>
<P CLASS="h4"><B>32. Support for improved parallelism between host and rasterizer</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="113pt" VALIGN="TOP"><COL WIDTH="1pt" VALIGN="TOP"><COL WIDTH="111pt" VALIGN="TOP"><COL WIDTH="3pt" VALIGN="TOP"><COL WIDTH="115pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="1pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP">Required</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Hardware that provides 3-D acceleration should take advantage of techniques available to improve parallelism between the host controller and the rasterizer, which can include use of DMA support, FIFOs, or other methods. The choice of technique is up to the manufacturer, but it should provide for good buffering of performance differences between host and rasterizer in cases where there is a mix of large and small triangles.</P>
<P CLASS="h4"><B>33. Triangle setup</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="113pt" VALIGN="TOP"><COL WIDTH="1pt" VALIGN="TOP"><COL WIDTH="111pt" VALIGN="TOP"><COL WIDTH="3pt" VALIGN="TOP"><COL WIDTH="115pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="1pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">For much 3-D hardware, passing a mass of data over the bus for each triangle creates a bottleneck. Advanced hardware can take a higher-level and more compact description of the triangle and compute this setup data on the fly. The setup is faster, and the bus transfer is also simpler. Adding triangle setup capabilities for workstation and entertainment systems is strongly recommended. </P>
<P CLASS="t">Any 3-D hardware intended to support professional 3-D markets that implements triangle setup must include subpixel correction.</P></BODY></HTML>
