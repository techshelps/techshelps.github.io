<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Plug and Play and Bus Design for Input Devices</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF"><font face="verdana,arial,helvetica" size="2">

<H3 CLASS="h2">Plug and Play and Bus Design for Input Devices</H3><P CLASS="t">The items in this section are requirements for Plug and Play capabilities.</P>
<P CLASS="h4"><B>5. Plug and Play device identifier </B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><UL><LI>For a non-bus specific system board device, there must be a device-specific identifier.</LI><LI>Each bus-specific device must provide a Plug and Play device identifier in the manner required for the bus it uses, as defined in Part 3 of this design guide. For example, a PCI device must comply with PCI 2.1 requirements and also provide a Subsystem ID and Subsystem Vendor ID, as defined in the "PCI" chapter in Part&nbsp;3 of this guide. A device that uses USB must provide a unique identifier as defined in the Universal Serial Bus Specification v. 1.0 or higher.</LI></UL><P CLASS="h4"><B>6. Automatic resource assignment and dynamic disable capabilities</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">The operating system must be capable of automatically assigning, disabling, and relocating the resources used by this device when necessary, using the method required for the related bus class. Changing or adding this device to the PC system must not require changing jumpers or switches on either the adapter or the system board. In the event of an irreconcilable conflict with other devices, the operating system must be able to disable the device to prevent the system from stalling. </P>
<P CLASS="t">If there is a conflict when more than one device of the same type is detected on the system, one of two methods can be used to resolve them:</P>
<UL><LI>The first method is to completely disable a port. For example, if an expansion card, such as a display adapter with a built-in mouse port is added to a desktop system that has a system board mouse port, the expansion card overrides the system board mouse port. Using this method, the system disables the mouse port on the system board and only accepts mouse input from the expansion card.</LI><LI>The second method allows both ports to remain active, while resolving any conflict by relocating the resources of one or both ports. For example, in a docking system, the mouse on the mobile PC and the mouse on the docking station can be allowed to share pointing responsibilities. Using this method, either mouse can be used as a pointing device, although only one mouse pointer will be used by the software.</LI></UL><P CLASS="nt"><FONT CLASS="nh"><B>Note</B></FONT>  Fixed (static) resource devices can exist to support standard devices, including the keyboard controller (8042). For an x86-based system, these fixed resources are located at I/O addresses under 100h. Standard system board devices should use their ISA-compatible addresses. For x86-based systems, this includes devices with I/O port addresses within the reserved range 0h through 0ffh. For more information about legacy resources and ISA-compatible addresses, see Appendix D, "Legacy I/O Assignments."</P></BODY></HTML>
