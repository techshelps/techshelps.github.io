<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Legacy Parallel Port Requirements</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF"><font face="verdana,arial,helvetica" size="2">

<H3 CLASS="h2">Legacy Parallel Port Requirements</H3><P CLASS="t">This section defines requirements for legacy parallel ports.</P>
<P CLASS="h4"><B>15. Flexible resource configuration for each parallel port</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">A legacy parallel port must provide flexible resource configuration following Plug and Play Parallel Port Device Specification v. 1.0b. Resource requirements must be met for each device of this type on the system. The requirements cannot be split between two ports on the system.</P>
<P CLASS="t">For non-PCI devices, these are the minimum resource requirements for each parallel port on the system:</P>
<UL><LI>Required: Support 378h, 278h, plus 3BC or a vendor-assigned I/O address. Using these standard I/O addresses facilitates proper functioning of software written for operating systems that address these locations directly. 
<P CLASS="lt1">Recommended: Also map the base I/O address to four additional locations.</P></LI><LI>Required: Support IRQ&nbsp;5 and IRQ&nbsp;7. Use of these standard IRQs ensures proper functioning of software written for operating systems that use standard IRQ signals.
<P CLASS="lt1">Recommended: Support five additional IRQ signals.</P></LI><LI>Required: Support two unique DMA channel selections, if the parallel port design supports block data transfers to memory using the DMA controllers. Notice also that the DMA function will not work on a parallel port without an IRQ, because the end of a DMA transfer is signaled by an interrupt.</LI></UL><P CLASS="t">To ensure Plug and Play support for resolution of resource conflicts, a full list of options for all possible configuration combinations must be enumerated, including:</P>
<UL><LI>Options for both ECP mode (which requires an I/O address, an IRQ, and a DMA selection) and standard LPT mode (which requires only an I/O address).</LI><LI>Options that specify only the I/O address to allow Windows to assign the IRQ and DMA channel.</LI></UL><P CLASS="t">Windows considers the parallel port base (/) address stored in the first BDA locations to be LPT1. The address stored in the second location is LPT2, and so on.</P>
<P CLASS="h4"><B>16. I/O address restrictions for EPP support</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Some Enhanced Parallel Port (EPP) implementations require eight contiguous I/O ports. If EPP support is implemented, the hardware cannot use 3BCh as a base I/O address because VGA devices require use of port 3C0h.</P>
<P CLASS="h4"><B>17. Compatibility, nibble mode, and ECP protocols compliant with IEEE 1284-1994</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Support for a parallel port must include the compatibility mode and nibble mode protocols required by the IEEE 1284-1994 specification for minimum compliance. This allows other 1284-compliant devices to be connected without problems.</P>
<P CLASS="t">The port must also support the ECP protocol as defined by IEEE 1284 to allow connections with higher speed parallel peripherals.</P>
<P CLASS="h4"><B>18. Port connectors compliant with 1284-I, at a minimum</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">IEEE 1284-I – compliant ports use a standard DB25 connector found on existing system parallel port designs, called a 1284-A connector in the specification. </P>
<P CLASS="t">IEEE 1284-II – compliant ports use a 1284-C connector. This connector is used on both the port and the peripheral device. </P>
<P CLASS="t">The parallel port design must provide enough space between the connectors and the surrounding enclosure to allow for a mating connector, the connector shell, and the latch assembly. The IEEE 1284 specification recommends a 1284-C connector for all new ports and devices.</P>
<P CLASS="h4"><B>19. Plug and Play device identifier for 1284 peripherals</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">The device identifier is described fully in the IEEE 1284 specification. All characters in the device identification string must consist only of ASCII values from 20h to 7Fh. The device identification string consists of a leading zero, a hexadecimal value that represents the length of the string, and then a set of fields, in ASCII, with a unique identification string. </P>
<P CLASS="t">For PC&nbsp;97, in addition to the requirements specified in the Plug and Play Parallel Port Device Specification v. 1.0b, the device-ID string must contain these keys at a minimum: MANUFACTURER (MFG), MODEL (MDL), CLASS (CLS), and DESCRIPTION (DES). The keys are case sensitive and can be abbreviated as indicated.</P>
<P CLASS="t">All MANUFACTURER and MODEL key values must remain unique from each manufacturer. All MANUFACTURER, MODEL, CLASS, and DESCRIPTION key values must remain static for a specific unit (that is, identifier values do not change for different hardware configurations). For example, a user simply adding a memory module to a printer should not change the MODEL key value reported as part of the device identifier. However, if the user adds memory by installing an upgrade kit that requires a different driver or requires the existing driver to behave differently, then changing the MODEL value is acceptable as part of the upgrade installation process.</P>
<P CLASS="t">The CLASS key describes the type of parallel device. The CLASS key can contain the values PRINTER, MODEM, NET, HDC, PCMCIA, MEDIA, FDC, PORTS, SCANNER, or DIGCAM. HDC refers to hard disk controller. MEDIA refers to any multimedia device. FDC refers to floppy-disk drive controller.</P>
<P CLASS="t">The DESCRIPTION key is an ASCII string of up to 128 characters that contains a&nbsp;description of the device the manufacturer wants to have presented if a device driver is not found for the peripheral.</P>
<P CLASS="t">For information about how the system determines the correct peripheral device driver, see the Windows&nbsp;95 and Windows&nbsp;NT DDKs.</P>
<P CLASS="h4"><B>20. Support CompatibleID key in the device identification string</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">The CompatibleID (CID) key can provide a value that exactly matches a peripheral name supported by a device driver shipped with Windows. The value must match a value listed in the device's INF file.</P></BODY></HTML>
