<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEEE 1394 Controller Requirements</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF"><font face="verdana,arial,helvetica" size="2">

<H2 CLASS="h1">IEEE 1394 Controller Requirements</H2><P CLASS="t">This section summarizes class specifications and standards for IEEE 1394 controllers. These requirements are in addition to those defined in "IEEE 1394 Basic Requirements" earlier in this chapter.</P>
<P CLASS="h4"><B>15. IEEE 1394 host controllers are bus-manager capable</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">IEEE 1394 host controllers must be bus-manager capable as specified in clause 8.3.1.6 of the IEEE 1394 – 1995 standard. This functionality is necessary for intelligent PC bus managers to provide a managed environment for Plug and Play and for power and isochronous data, including cycle master and isochronous resource manager.</P>
<P CLASS="t">The host controller must be capable of asserting the force root node assignment protocol necessary for an IEEE 1394-capable PC to be assigned the role of active bus manager. </P>
<P CLASS="t">Other bus management capabilities include the following:</P>
<UL><LI>Managing TOPOLOGY_MAP and SPEED_MAP registers.</LI><LI>Managing BANDWIDTH_AVAILABLE and CHANNELS_AVAILABLE registers.</LI><LI>Configuring the arbitration gap count for optimum bus performance.</LI><LI>Enabling Isochronous by ensuring that the root node is cycle-master capable.</LI><LI>Managing cable power distribution.</LI><LI>Managing device power consumption.</LI></UL><P CLASS="h4"><B>16. Host controller provides system memory protection and security </B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Host controllers must restrict access to host memory from unqualified IEEE 1394 devices. The default after a bus reset is no access to host memory for add-on IEEE 1394 devices.</P>
<P CLASS="t">Host controllers must not provide the capability to spoof either their Node ID or the Global Unique ID using any software-accessible control. </P>
<P CLASS="t">It is acceptable if the Global Unique ID is only non-spoofable for quadlet reads from IEEE 1394 devices. Those who want to read non-spoofable Global Unique IDs should use quadlet reads, not block reads. </P>
<P CLASS="t">A host controller can spoof Node IDs only if that controller provides a hardware jumper to enable the feature (for example, for debug purposes). The state of the jumper must be detectable from software and must be disabled by default. </P>
<P CLASS="t">All IEEE 1394 devices, including host controllers, must check the source ID as well as the transaction label before accepting a response packet to satisfy an outstanding request.</P></BODY></HTML>
