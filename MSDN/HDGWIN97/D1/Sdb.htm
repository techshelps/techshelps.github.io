<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hardware Acceleration for 2-D Graphics</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF"><font face="verdana,arial,helvetica" size="2">

<H3 CLASS="h2">Hardware Acceleration for 2-D Graphics</H3><P CLASS="t">This section summarizes guidelines related to 2-D DirectDraw graphics features that can be implemented as hardware acceleration features.</P>
<P CLASS="t">Hardware acceleration for 2-D graphics is required for Entertainment PC&nbsp;97 systems, with individual items in this section marked as required or recommended for that system type.</P>
<P CLASS="t">In general, hardware acceleration for 2-D graphics is not required for Basic PC&nbsp;97 or Workstation&nbsp;PC&nbsp;97 systems. The individual items in this section are required or recommended only if a hardware manufacturer chooses to implement hardware acceleration in a graphics adapter. For Workstation PC&nbsp;97, it is recommended that the PC system manufacturer select graphics adapters that provide hardware acceleration when designing PC systems to support high-quality graphics for use with professional graphics applications.</P>
<P CLASS="t">The following items for DirectDraw acceleration are presented in this section in order of importance. </P>
<P CLASS="h4"><B>17. Direct frame buffer access</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP">Required</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">It must be possible for applications to perform direct frame buffer accesses at any time, even while asynchronous accelerator operations are being executed. Without this capability, drivers cannot support DirectDraw or Direct3D on Windows NT, and operations on Windows&nbsp;95 will not be fully robust.</P>
<P CLASS="h4"><B>18. Linear-mapped low resolution modes</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Required</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Decreasing the size of the frame buffer decreases the average polygon size and increases the frame rate for a given scene. Most games currently run in 320x200x8&nbsp;bpp mode. Providing additional modes provides support for software rendering games and software Direct3D. </P>
<P CLASS="t">If you implement low-resolution support in the hardware, the following are the required low-resolution modes:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="t">320x200x16&nbsp;bpp<BR>320x200x8&nbsp;bpp</TD><TD VALIGN="TOP"><P CLASS="t">320x240x16&nbsp;bpp<BR>320x240x8&nbsp;bpp</TD><TD VALIGN="TOP"><P CLASS="t">640x400x16&nbsp;bpp<BR>640x400x8&nbsp;bpp</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">The following low-resolution modes are recommended:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="t">400x300x16&nbsp;bpp<BR>400x300x8&nbsp;bpp</TD><TD VALIGN="TOP"><P CLASS="t">512x384x16&nbsp;bpp<BR>512x384x8&nbsp;bpp</TD><TD VALIGN="TOP"><P CLASS="t"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="nt"><FONT CLASS="nh"><B>Note</B></FONT>  In Windows 95, low-resolution capabilities must not be defined in the registry so that they do not appear in the Display Control Panel. In Windows&nbsp;NT, the Control Panel automatically filters out these modes.</P>
<P CLASS="h4"><B>19. Transparent blter</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Required</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">A transparent blter can perform a blt with a source key transparent color. This assumes that the blter is asynchronous with the host processor.</P>
<P CLASS="h4"><B>20. Perform double-buffer swaps with no tearing</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP">Required</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">If the frame buffer is large enough to support double-buffering, the hardware should support a mechanism for swapping buffers without visible artifacts such as "tearing." The mechanism for doing this is at the discretion of the hardware designer, but should support tear-free double-buffering for both full-screen and windowed applications. </P>
<P CLASS="h4"><B>21. Current scan line of refresh</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Required</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">The ability to read the current scan line supports blting or writing to the screen without tearing. Also, in some contexts such as video playback, this support eliminates the need for a back buffer. </P>
<P CLASS="h4"><B>22. Programmable blter stride</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">A programmable blter stride ensures that Windows can use linear memory. Using a fixed stride forces Windows to use rectangular memory management, with all the related inefficiencies. It must be possible to specify different strides for the source and the destination on blts.</P>
<P CLASS="h4"><B>23. VGA destination color keying for video rectangle</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="5"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><I>Basic PC 97</I></TD><TD VALIGN="TOP"><I>Workstation PC 97</I></TD><TD VALIGN="TOP"><I>Entertainment PC 97</I></TD></TR><TR><TD COLSPAN="7" VALIGN="TOP"><P CLASS="t"></TD></TR><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP">Required</TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">The compositing of the video plane under the VGA plane with the VGA pixels must be independently controllable for each VGA pixel. This VGA destination color keying must function in all video modes using either a specific color/color range (on 4-,&nbsp;8-,&nbsp;16-,&nbsp;and 24-bit SVGA modes) or an additional alpha blending bits in the color plane bits (on 15- and 32-bit SVGA modes). </P>
<P CLASS="t">This color keying of the VGA will allow certain VGA pixels to be replaced by the underlying video pixels on a pixel-by-pixel basis. This feature enables VGA video overlays, controls, Windows popups, dialogs, and so on. It must also work at the same time as any vertical/horizontal scaling that is active for the underlying video.</P></BODY></HTML>
