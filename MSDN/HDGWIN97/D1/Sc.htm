<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Plug and Play and Designing for Extensibility</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF"><font face="verdana,arial,helvetica" size="2">

<H2 CLASS="h1">Plug and Play and Designing for Extensibility</H2><P CLASS="t">A key goal for PC 97 is to provide expansion capabilities "outside the box." Use of USB and IEEE 1394 are emphasized for connecting devices in PC&nbsp;97 systems, to ensure that the expansion capabilities are physically accessible to the user and to ensure that the user can take advantage of automatic device configuration and hot plugging capabilities.</P>
<P CLASS="t">A second goal is to manage resources for PC devices to ensure that it is always possible to configure resources for all devices. This means, for example, that any device which uses interrupts always has an interrupt available so that the device can be enabled. The key requirement for meeting this goal is that each bus and device following the relevant Plug and Play specifications.</P>
<P CLASS="t">For 1997, the challenge for Plug and Play is to simplify and unify the underlying mechanisms and deliver a common Plug and Play model for both Windows 95 and Windows NT. The Win32 Driver Model and the Advanced Configuration and Power Interface form the foundation for this common model. </P>
<P CLASS="t">Although VxD-based Plug and Play-compatible drivers will continue to be supported on Windows 95, WDM ensures that future Plug and Play investment is leveraged for both operating systems. In addition to enabling operating system-directed power management, ACPI provides device configuration and generic system event mechanisms for Plug and Play and also provides an operating system-independent interface for configuration control. ACPI leverages the Plug and Play BIOS data structures while providing a processor architecture-independent implementation that is compatible with both Windows 95 and Windows NT. </P>
<P CLASS="t">The previous "Designed for Microsoft Windows&nbsp;95" logo requirements emphasized Plug and Play as the central focus. For the important buses used in a PC&nbsp;97 system, the key Plug and Play design work is in place, so that very little new Plug and Play work is designated for PC 97, beyond modifications required on the system board for migration to the ACPI specification.</P>
<P CLASS="t">For PC&nbsp;97, all devices provided in the system must comply with the current Plug and Play specifications. The operating system must be able to reconfigure the system without requiring the user to restart the PC (with a few exceptions outlined in the detailed requirements in this guide).</P>
<P CLASS="t"><B>Plug and Play for extensibility. </B>A fundamental element of Plug and Play is that each device has a unique identifier. A Plug and Play device identifier is constructed from the logical device identifier structures documented in the specifications for a particular bus, as defined in Part&nbsp;3 of this guide. The following information is required to create a device identifier for each device on a particular bus:</P>
<UL><LI>USB: An identifier that follows the current guidelines defined in the Universal Serial Bus Specification and related device class specification.</LI><LI>IEEE 1394: A global unique 64-bit identifier as defined in the IEEE 1212<I> </I>Control and Status Register Format Specification.</LI><LI>PCI: A value consisting of the Vendor Identifier, Device Identifier, Class Code, Revision ID, Header Type, Subsystem ID, and Subsystem Vendor ID defined in the Configuration Space header for each PCI device, as defined in the PCI v. 2.1 specification.</LI><LI>PCMCIA: An identifier created from tuples as documented in the "PC Card" chapter in Part&nbsp;3 of this guide.</LI><LI>ISA: A 32-bit EISA-type identifier for each Plug and Play ISA device. This identifier consists of a leading zero followed by three compressed ASCII characters and a unique 16-bit identifier for each logical device design. To register a new device ID, please send e-mail to pnpid@microsoft.com.</LI><LI>Serial (COM) device: A string of up to 256 characters with five mandatory fields and ten optional fields, as defined in Section&nbsp;3 of the Plug and Play External COM Device Specification, v. 1.0.</LI><LI>Parallel (LPT) device: A string of up to 20 characters concatenated from MFG, CMD, MDL, CLS, DES, and CID fields, as defined in the Plug and Play Parallel Port Devices Specification, v. 1.0b.</LI></UL><P CLASS="t">Requirements related to Plug and Play for option ROMs are defined in the "Basic PC&nbsp;97" chapter in Part&nbsp;2 of this guide; option ROM requirements for specific devices are defined in the "SCSI" and "ATA and ATAPI" chapters in Part&nbsp;3, and also in the "Graphics Adapters" chapter in Part&nbsp;4 of this guide.</P>
<P CLASS="t"><B>Bus choices for extensibility</B>. When choosing expansion bus support for the PC system and determining which devices should use a particular bus, the PC system designer should consider the bandwidth requirements for each particular device, in addition to selecting a bus based on ease-of-use considerations.</P>
<P CLASS="t">For USB, for example, multiple devices will be using the bus. Therefore, as a general guideline, any device that consumes 30 percent or more of the available bandwidth should be implemented using a higher-speed bus such as IEEE 1394. An example for such a choice would be a digital video device such as a digital VCR or camcorder.</P>
<P CLASS="t">A PC&nbsp;97 system can provide an ISA bus to allow end users to "recycle" their old ISA devices. A PC 97 system that provides ISA support must fully implement Plug and Play boot support, IRQ sharing for ISA (if need to meet resource requirements), and other mechanisms to ensure that an ISA card added to the system can be configured and enabled. Any ISA devices provided with the system must be fully Plug and Play compatible.</P></BODY></HTML>
