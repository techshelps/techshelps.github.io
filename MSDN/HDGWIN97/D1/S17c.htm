<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Input and Controls</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF"><font face="verdana,arial,helvetica" size="2">

<H2 CLASS="h1">Input and Controls</H2><P CLASS="t">The ability to operate or use a computer depends directly on the ability to use its input devices and controls. For many people with physical or visual disabilities, using a computer depends either on the design of the input and control devices or on its ability to substitute other mechanisms for control (such as use different input devices or allow software control). Easier to operate controls are also appreciated by all users, as is the ability to connect and use alternative input devices of their preference.</P>
<P CLASS="t">Users who are blind cannot use input mechanisms that require eye-hand coordination, such as a mouse or a control with no tactile or auditory reference.</P>
<P CLASS="t">Hardware design strategies for providing greater access to input and control functions include the following:</P>
<OL><LI>Allow connection, substitution, or addition of alternative input devices (such as keyboards, pointing devices, and so on).
<P CLASS="lt1">A second serial port, for example, is helpful for those using SerialKeys software in Windows&nbsp;95 to provide alternative access as well as for blind users who typically use speech synthesizers with serial connections. As another example, for users who cannot use standard input devices (even with software extensions such as StickyKeys), the availability of an external keyboard and mouse connection on portable systems allows them to substitute specially-designed keyboards or pointing devices. </P></LI><LI>Make all controls operate from the keyboard.
<P CLASS="lt1">This allows users with restricted reach or manipulation to operate controls on the computer, monitor, and so on, that they would otherwise be unable to use. It also allows them to operate the controls from any other keyboard they might use.</P></LI><LI>Have all controls mounted on the front of the device (that is, facing the user).
<P CLASS="lt1">Allows users who have reach limitations to access the controls.</P></LI><LI>Use push buttons primarily.
<P CLASS="lt1">Assists those with reduced motor control and those using head or mouth sticks or other alternative pointing devices.</P></LI><LI>Use concave buttons (especially where sustained force is required).
<P CLASS="lt1">Assists those with reduced finger or motor control (such as tremor) and those who must use headsticks or other pointing devices to operate the buttons. Helps keep finger or pointer from slipping off the button while being pushed. </P></LI><LI>Avoid twisting motions (instead, use push buttons or edge controls).
<P CLASS="lt1">Users with some disabilities, such as cerebral palsy or arthritis, find twisting motions difficult or impossible. </P></LI><LI>Minimize the force required for operation (that is, less than 2 Newtons).
<P CLASS="lt1">Assists those with reduced strength. A maximum force of 2 Newtons for any operation is advised. For controls, use light touch or substitute manual mechanisms with power driven ones for sustained or heavy touch, and require push of less than 2 Newtons.</P></LI><LI>Make all controls operate with one hand (preferably with one finger or assistive pointing device).
<P CLASS="lt1">Allows individuals with use of only one hand or who use assistive pointing devices to operate the controls.</P></LI><LI>Avoid capacitance-based controls (that is, do not use controls that require skin contact).
<P CLASS="lt1">Capacitance-based controls require contact with the human skin. Avoiding these allows users with assistive pointing devices or artificial limbs to use the system.</P></LI><LI>Use functional grouping and layout of controls.
<P CLASS="lt1">Assists those with low vision or cognitive impairments in finding the right keys quickly. Examples of functional sets are direction keys and control keys. They can be grouped by color coding that takes account of color blindness or other design features such as shape or feel.</P></LI><LI>Make controls tactually discernible.
<P CLASS="lt1">This includes locator ridges or nibs on the home keys on the keyboard and the five key on the numeric keypad that assist those who have low vision or are blind. Also, flat membrane keypads with no tactile features should be avoided because these give no feedback on the location of the buttons.</P></LI><LI>Make the state of non-momentary controls tactually discernible.
<P CLASS="lt1">Allows those who have low vision or are blind to discern the state of a control.</P></LI><LI>Have tactile and audible actuation feedback for controls.
<P CLASS="lt1">Allows people who have low vision or who are blind to determine when a key has been pressed.</P></LI><LI>Avoid keys that cannot be read or simulated by software.
<P CLASS="lt1">Allows the use of software programs that can convert simultaneous keystrokes into sequential keystrokes. Many users rely on software programs that either detect or simulate keystrokes. For example, the StickyKeys, SlowKeys, and SerialKeys features in Windows&nbsp;95 rely on this ability when compensating for a user's difficulty with the keyboard. Blind users can also query the state of toggle keys using software. Any nonstandard keys should produce scan codes that trigger their functionality.</P></LI><LI>Maximize sizes of controls within the space available.
<P CLASS="lt1">Assists those with low vision, and also assists users with limited dexterity who might have difficulty manipulating small controls.</P></LI><LI>Make the distance between controls sufficient for tactile and visual discrimination.
<P CLASS="lt1">Facilitates access by users with visual impairments as well as assisting those with reduced motor control. On keyboards, for example, key top spacing should be approximately one half of the key width. For small controls, spacing can be higher, but functional grouping should be maintained to make it easier to avoid pressing several controls at once.</P></LI><LI>Have stable controls (for example, intended activation should not change the adjustment state of the control).
<P CLASS="lt1">Some users with reduced motor control or blindness might inadvertently change the setting of one control while activating another. Controls or input devices should be designed to avoid this.</P></LI><LI>Manufacture input guards or provide mounting for guards.
<P CLASS="lt1">Keyguards are guards that go over the keyboard and allow users to press one key at a time while resting their hand on the keyguard surface (which allows those with reduced strength and those with reduced motor control to have more control over their input). Guards can also be made for other input devices where applicable. The FilterKeys features in Windows 95 allows direct access for many users, but others benefit further from hardware guards. Manufacturers should also ensure grooves or holes are made in the edge of the device to allow for mounting of a guard.</P></LI><LI>Provide stable keyboards (for example, nonslip feet).
<P CLASS="lt1">Assists those with reduced motor control who might otherwise inadvertently move the keyboard when trying to use it. </P></LI><LI>Have no left-right bias.
<P CLASS="lt1">Assists those who have use of only one hand and those who are left-handed. Where this is not possible (for example, built-in numeric keypads) alternatives should be provided (for example, support for external numeric keypads).</P></LI></OL></BODY></HTML>
