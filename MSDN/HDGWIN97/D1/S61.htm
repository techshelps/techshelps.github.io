<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Device Command Protocol for IEEE 1394 Devices</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF"><font face="verdana,arial,helvetica" size="2">

<H2 CLASS="h1">Device Command Protocol for IEEE 1394 Devices</H2><P CLASS="t">This section summarizes command protocol requirements for integration and interoperability of the IEEE 1394 bus with IEEE 1394 peripherals such as consumer electronics devices. </P>
<P CLASS="h4"><B>10. Device command protocols conform to Win32 Device Class Interfaces</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Support in the Windows operating systems for new device classes (for example, Digital VCR) will leverage the Win32 Driver Model (WDM) so that a single device class driver binary will support the same devices on both Windows and Windows&nbsp;NT. </P>
<P CLASS="t">New Win32 device driver interfaces are based on available industry standards. Areas of standardization include generic command and protocol standards for Audio, Imaging, and Storage class interfaces, spanning multiple device types in each category. Win32 class drivers provide hardware-independent, class-specific interfaces that can be extended by hardware-specific device minidrivers. </P>
<P CLASS="t">Devices that comply with interface standards such as HCI for IEEE 1394 eliminate the need for developing and testing third-party device drivers. Other devices will require implementation of a simple minidriver to extend Microsoft-supplied generic class interfaces to support a specific device. In limited, but special cases, it might be necessary for a third party to implement both a class and a minidriver to support a new device. </P>
<P CLASS="h4"><B>11. Consumer A/V device interfaces comply with industry standards</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Required</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">These standards include Digital Interface for Consumer Electronic Audio/Video Equipment (Draft 2.1 or later) by Philips Electronics N.V., Matsushita Electric Ind. Co., Ltd, Thomson Multimedia, Sony Corporation, October, 1995 (also available from IEEE 1394 Trade Association). </P>
<P CLASS="t">This specification outlines implementation requirements for interoperability of consumer audio/video equipment over IEEE 1394. It includes a clarifying sample of a device configuration ROM and CSRs. Specific areas for compliance are summarized here:</P>
<UL><LI>Isochronous IEEE 1394 devices support Common Isochronous Packet (CIP) Header.
<P CLASS="lt1">Devices capable of isochronous data handling must support the CIP format to ensure interoperability of isochronous data between consumer A/V nodes on an IEEE 1394 bus. </P></LI><LI>Isochronous IEEE 1394 devices support Connection Management Protocol (CMP).
<P CLASS="lt1">CMP is Required to enable management of isochronous connections including swift allocation and deallocation of channels following a bus reset. Plug Control Registers (PCRs) are Required to facilitate CMP necessary for isochronous data flow management. </P></LI><LI>Consumer A/V devices support the Function Control Protocol (FCP).
<P CLASS="lt1">FCP is Required for compatibility with Microsoft-supplied consumer-A/V class device drivers. (for example, digital cameras and camcorders). </P>

<P CLASS="lt1">Part 1 defines command packet formats for the simple command-response FCP protocol for asynchronous control of digital A/V devices. Parts 2 and 3 specify packet format and transmission timing for Standard Definition (SD) and High Definition (HD) digital VCR data respectively.</P></LI></UL><P CLASS="h4"><B>12. Imaging devices support interface standards</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">The Win32 Imaging Class drivers (for cameras, camcorders, printers, scanners, and so&nbsp;on) will be based on one or more of the following standards:</P>
<UL><LI>AVC command set (available from the IEEE 1394 Trade Association)</LI><LI>Specifications for consumer-use digital VCRs using 6.3mm magnetic tape (Blue Book)</LI><LI>Digital Interface for Consumer Electronic Audio/Video Equipment (draft&nbsp;2.1 or later)</LI></UL><P CLASS="t">For more information, see the Microsoft Win32 Driver Model DDK.</P>
<P CLASS="h4"><B>13. Audio devices support interface standards</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">The Win32 Audio Class driver<B> </B>(for component audio, musical instruments, and so on) will be implemented based on one or more of the following:</P>
<UL><LI>Human Input Device Class (http://www.teleport.com/~usb)</LI><LI>USB Audio Class (http://www.teleport.com/~usb)</LI><LI>Digital Interface for Consumer Electronic Audio/Video Equipment (draft&nbsp;2.1 or later)</LI><LI>AVC Command set (available from the IEEE 1394 Trade Association)</LI><LI>Digital Audio and Performance Data Transmission Protocol and Connection Management for Electronic Musical Environment—Yamaha Corporation</LI></UL><P CLASS="t">For more information, see the Microsoft Win32 Driver Model DDK.</P>
<P CLASS="h4"><B>14. Support for SCSI-3 protocol</B></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"><COL WIDTH="25%" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Recommended</TD><TD VALIGN="TOP"></TD><TD VALIGN="TOP"></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Where feasible, designs should leverage common command protocols defined for SCSI-3. Storage devices in particular can take advantage of common commands and protocols based on Command Descriptor Blocks (CDBs):</P>
<UL><LI>SCSI-3 Serial Bus Protocol (Working Draft of X3T10 Tech. Subcommittee)
<P CLASS="lt1">SCSI-3 SBP specifies a command delivery protocol developed to extend existing parallel SCSI protocol to support new features (for example, isochronous data streaming) provided by the IEEE 1394 bus. The SCSI-3 SBP is intended for use with SCSI-3 primary commands for block I/O and multimedia devices.</P></LI><LI>SCSI-3 Multimedia Command Set (MMC) X3T10/1048D</LI></UL></BODY></HTML>
