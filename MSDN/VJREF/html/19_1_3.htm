<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>19.1.3 Problem #3: Field Declaration versus Method Declaration</title>
<META NAME=MS-HAID CONTENT="19_1_3">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h3>19.1.3	 Problem #3: Field Declaration versus Method Declaration</h3>
<a name="44526"></a>
<p>
<a name="44527"></a>
Consider the two productions (shown after problem #2 has been corrected):
<p><pre>
<i><i>FieldDeclaration:<br>
	</i>Modifiersopt<code> </code><i>Type</i><code> </code><i>VariableDeclarators</i><code> ;
</code></i></pre><p><a name="44529"></a>
and:
<p><pre>
<i>MethodHeader:<br>
	Modifiersopt<code> </code>ResultType<code> </code>MethodDeclarator<code> </code>Throwsopt
</i></pre><p><a name="44531"></a>
where <i>ResultType</i> is defined as:
<p><pre>
<i>ResultType:<br>
	Type<br>
	<code>void
</code></i></pre><p><a name="44533"></a>
Now consider the partial input:
<p><pre><a name="44534"></a>class Problem3 { int julie
</pre><p><a name="44535"></a>
Note that, in this simple example, no <i>Modifiers</i> are present. When the parser is 
considering the token <code>int</code>, with one-token lookahead to symbol <code>julie</code>, it cannot 
yet tell whether this will be a field declaration such as:
<p><pre><a name="44536"></a>int julie = 14;
</pre><p><a name="44537"></a>
or a method declaration such as:
<p><pre><a name="44538"></a>int julie(String art) { return art.length(); }
</pre><p><a name="44539"></a>
Therefore, after the parser reduces <code>int</code> to the nonterminal <i>Type</i>, it cannot tell with 
only one-token lookahead whether <i>Type</i> should be further reduced to <i>ResultType</i> 
(for a method declaration) or left alone (for a field declaration). Therefore, the 
productions shown above result in a grammar that is not LALR(1).
<p><a name="44540"></a>
The solution is to eliminate the <i>ResultType</i> production and to have separate alternatives for <i>MethodHeader</i>:<p>
<pre>
<i>MethodHeader:<br>
	Modifiersopt<code> </code>Type<code> </code>MethodDeclarator<code> </code>Throwsopt<br>
	Modifiersopt<code> void </code>MethodDeclarator<code> </code>Throwsopt
</i></pre><p><a name="44542"></a>
This allows the parser to reduce <code>int</code> to <i>Type</i> and then leave it as is, delaying the decision as to whether a field declaration or method declaration is in progress.<p>


</body></html>
