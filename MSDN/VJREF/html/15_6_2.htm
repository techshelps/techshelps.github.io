<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>15.6.2 Operands before Operation</title>
<META NAME=MS-HAID CONTENT="15_6_2">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h3>15.6.2	 Operands before Operation</h3>
<a name="18740"></a>
<p>
<a name="18749"></a>
Java also guarantees that every operand of an operator (except the conditional 
operators <code>&amp;&amp;</code>, <code>||</code>, and <code>?</code> <code>:</code>) appears to be fully evaluated before any part of the 
operation itself is performed.
<p><a name="32910"></a>
If the binary operator is an integer division <code>/</code> <a href="15_16_2.htm#5047">(&#167;15.16.2)</a> or integer remainder <code>%</code> <a href="15_16_3.htm#24956">(&#167;15.16.3)</a>, then its execution may raise an <code>ArithmeticException</code>, but this exception is thrown only after both operands of the binary operator have been evaluated and only if these evaluations completed normally.<p>
<a name="36160"></a>
So, for example, the program:<p>
<pre><a name="36161"></a>
class Test {
<a name="36162"></a>
	public static void main(String[] args) {
<a name="36163"></a>		int divisor = 0;
<a name="36164"></a>		try {
<a name="36165"></a>			int i = 1 / (divisor * loseBig());
<a name="36166"></a>		} catch (Exception e) {
<a name="36167"></a>			System.out.println(e);
<a name="36168"></a>		}
<a name="36169"></a>	}
<br><a name="36170"></a>
	static int loseBig() throws Exception {
<a name="36171"></a>		throw new Exception("Shuffle off to Buffalo!");
<a name="36172"></a>	}
<br><a name="36173"></a>}
</pre><p><a name="36174"></a>
always prints:
<p><pre><a name="36175"></a>java.lang.Exception: Shuffle off to Buffalo!
</pre><p><a name="36176"></a>
and not:
<p><pre><a name="36177"></a>java.lang.ArithmeticException: / by zero
</pre><p><a name="36178"></a>
since no part of the division operation, including signaling of a divide-by-zero 
exception, may appear to occur before the invocation of <code>loseBig</code> completes, even 
though the implementation may be able to detect or infer that the division operation would certainly result in a divide-by-zero exception.
<p>

</body></html>
