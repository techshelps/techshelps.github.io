<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>14.18.1 Execution of try-catch</title>
<META NAME=MS-HAID CONTENT="14_18_1">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h3>14.18.1	 Execution of try-catch</h3>
<a name="24134"></a>
<p>
<a name="236228"></a>
<p><i>Our supreme task is the resumption of our onward, normal way.</i><br>
<a name="238485"></a>
&#151;Warren G. Harding, Inaugural Address (1921)</p>
<a name="79320"></a>
<p>A <code>try</code> statement without a <code>finally</code> block is executed by first executing the <code>try</code> 
block. Then there is a choice:
<p><ul><a name="79321"></a>
<li>If execution of the <code>try</code> block completes normally, then no further action is taken and the <code>try</code> statement completes normally.
<a name="79322"></a>
<li>If execution of the <code>try</code> block completes abruptly because of a <code>throw</code> of a value <i>V</i>, then there is a choice:
<ul>
<a name="79323"></a>
<li>If the run-time type of <i>V</i><i></i> is assignable <a href="5_2.htm#170768">(&#167;5.2)</a> to the <i>Parameter</i> of any <code>catch</code> clause of the <code>try</code> statement, then the first (leftmost) such <code>catch</code> clause is selected. The value <i>V</i><i></i> is assigned to the parameter of the selected <code>catch</code> clause, and the <i>Block</i> of that <code>catch</code> clause is executed. If that block completes normally, then the <code>try</code> statement completes normally; if that block completes abruptly for any reason, then the <code>try</code> statement completes abruptly for the same reason.
<a name="79324"></a>
<li>If the run-time type of <i>V</i><i></i> is not assignable to the parameter of any <code>catch</code> clause of the <code>try</code> statement, then the <code>try</code> statement completes abruptly because of a <code>throw</code> of the value <i>V</i>.
</ul>
<a name="79325"></a>
<li>If execution of the <code>try</code> block completes abruptly for any other reason, then the <code>try</code> statement completes abruptly for the same reason.
</ul><p><a name="18065"></a>
In the example:
<p><pre><a name="18066"></a>class BlewIt extends Exception {
<a name="236619"></a>	BlewIt() { }
<a name="236620"></a>	BlewIt(String s) { super(s); }
<a name="236621"></a>}
<a name="236622"></a>class Test {
<a name="236623"></a>	static void blowUp() throws BlewIt { throw new BlewIt(); }
<a name="237378"></a>	public static void main(String[] args) {
</pre><p><pre><a name="236625"></a>
		try {
<a name="236626"></a>			blowUp();
<a name="236627"></a>		} catch (RuntimeException r) {
<a name="236628"></a>			System.out.println("RuntimeException:" + r);
<a name="236629"></a>		} catch (BlewIt b) {
<a name="236630"></a>			System.out.println("BlewIt");
<a name="236631"></a>		}
<a name="236632"></a>	}
<br><a name="236633"></a>}
</pre><p><a name="236651"></a>
the exception <code>BlewIt</code> is thrown by the method <code>blowUp</code>. The <code>try</code><strong>-</strong><code>catch</code> statement 
in the body of <code>main</code> has two <code>catch</code> clauses. The run-time type of the exception is 
<code>BlewIt</code> which is not assignable to a variable of type <code>RuntimeException</code>, but is 
assignable to a variable of type <code>BlewIt</code>, so the output of the example is:
<p><pre><a name="236656"></a>BlewIt
</pre><p>

</body></html>
