</Font></body></html>
<html>
<head>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>9. Interfaces</title>
<META NAME=MS-HAID CONTENT="chap09">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
</head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"> 
<hr><br>
 
<p><strong>
CHAPTER
 9 </strong></p>

<h1> Interfaces</h1>
<a name="33055"></a>
<p>
<a name="44367"></a>
<a name="18875"></a>
<meta name="MS-HKWD" content="interface">
<p><i>My apple trees will never get across<br>And eat the cones under his pines, I tell him.<br>He only says "Good Fences Make Good Neighbors."</i><br>
<a name="237096"></a>
&#151;Robert Frost, Mending Wall (1914)</p>
<p>
<a name="236346"></a>
An interface declaration introduces a new reference type whose members are 
constants and abstract methods. This type has no implementation, but otherwise 
unrelated classes can implement it by providing implementations for its abstract 
methods.
<p><a name="236347"></a>
Java programs can use interfaces to make it unnecessary for related classes to share a common abstract superclass or to add methods to <code>Object</code>.<p>
<a name="19956"></a>
An interface may be declared to be an <i>direct extension </i>of one or more other interfaces, meaning that it implicitly specifies all the abstract methods and constants of the interfaces it extends, except for any constants that it may hide.<p>
<a name="30809"></a>
A class may be declared to <i>directly implement</i> one or more interfaces, meaning that any instance of the class implements all the abstract methods specified by the interface or interfaces. A class necessarily implements all the interfaces that its direct superclasses and direct superinterfaces do. This (multiple) interface inheritance allows objects to support (multiple) common behaviors without sharing any implementation.<p>
<a name="35467"></a>
A variable whose declared type is an interface type may have as its value a reference to any object that is an instance of a class declared to implement the specified interface. It is not sufficient that the class happen to implement all the abstract methods of the interface; the class or one of its superclasses must actually be declared to implement the interface, or else the class is not considered to implement the interface.<p>


</Font></body></html>
