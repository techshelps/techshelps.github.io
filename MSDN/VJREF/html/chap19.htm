</Font></body></html>
<html>
<head>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>19. LALR(1) Grammar</title>
<META NAME=MS-HAID CONTENT="chap19">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
</head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"> 
<hr><br>
 
<p><strong>
CHAPTER
 19 </strong></p>

<h1> LALR(1) Grammar</h1>
<a name="28375"></a>
<p>
<a name="26234"></a>
<a name="28377"></a>
<p>
<a name="26238"></a>
This chapter presents a grammar for Java. The grammar has been mechanically 
checked to insure that it is LALR(1).
<p><a name="26239"></a>
The grammar for Java presented piecemeal in the preceding chapters is much better for exposition, but it cannot be parsed left-to-right with one token of lookahead because of certain syntactic peculiarities, some of them inherited from C and C++. These problems and the solutions adopted for the LALR(1) grammar are presented below, followed by the grammar itself.<p>


</Font></body></html>
