<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>15.22 Conditional-And Operator &amp;&amp;</title>
<META NAME=MS-HAID CONTENT="15_22">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>15.22	 Conditional-And Operator &amp;&amp;</h2>
<a name="5247"></a>
<p>
<a name="5248"></a>
The <code>&amp;&amp;</code> operator is like <code>&amp;</code> <a href="15_21_2.htm#5242">(&#167;15.21.2)</a>, but evaluates its right-hand operand only if 
the value of its left-hand operand is <code>true</code>. It is syntactically left-associative (it 
groups left-to-right). It is fully associative with respect to both side effects and 
result value; that is, for any expressions <i>a</i>, <i>b</i>, and <i>c</i>, evaluation of the expression 
<code>((</code><i>a</i><code>)&amp;&amp;(</code><i>b</i><code>))&amp;&amp;(</code><i>c</i><code>)</code> produces the same result, with the same side effects occurring in the same order, as evaluation of the expression <code>(</code><i>a</i><code>)&amp;&amp;((</code><i>b</i><code>)&amp;&amp;(</code><i>c</i><code>))</code>.
<p><pre>
<i>ConditionalAndExpression:<br>
	InclusiveOrExpression<br>
	ConditionalAndExpression<code> &amp;&amp; </code>InclusiveOrExpression
</i></pre><p><a name="5251"></a>
Each operand of <code>&amp;&amp;</code> must be of type <code>boolean</code>, or a compile-time error occurs. The type of a conditional-and expression is always <code>boolean</code>.<p>
<a name="41086"></a>
At run time, the left-hand operand expression is evaluated first; if its value is <code>false</code>, the value of the conditional-and expression is <code>false</code> and the right-hand operand expression is not evaluated. If the value of the left-hand operand is <code>true</code>, then the right-hand expression is evaluated and its value becomes the value of the conditional-and expression. Thus, <code>&amp;&amp;</code> computes the same result as <code>&amp;</code> on <code>boolean</code> operands. It differs only in that the right-hand operand expression is evaluated conditionally rather than always.<p>


</body></html>
