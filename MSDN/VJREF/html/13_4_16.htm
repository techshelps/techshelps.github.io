<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>13.4.16 final Methods</title>
<META NAME=MS-HAID CONTENT="13_4_16">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h3>13.4.16	 final Methods</h3>
<a name="45238"></a>
<p>
<a name="45239"></a>
Changing an instance method that is not <code>final</code> to be <code>final</code> may break compatibility with existing binaries that depend on the ability to override the method. If 
the test program:
<p><pre><a name="45240"></a>class Super { void out() { System.out.println("out"); } }
<a name="45241"></a>class Test extends Super {
</pre><p><pre><a name="45242"></a>
	public static void main(String[] args) {
<a name="45243"></a>		Test t = new Test();
<a name="45244"></a>		t.out();
<a name="45245"></a>	}
<a name="45246"></a>	void out() { super.out(); }
<a name="45247"></a>}
</pre><p><a name="45248"></a>
is compiled and executed, it produces the output:
<p><pre><a name="45249"></a>out
</pre><p><a name="45250"></a>
Suppose that a new version of class <code>Super</code> is produced:
<p><pre><a name="45251"></a>class Super { final void out() { System.out.println("!"); } }
</pre><p><a name="45252"></a>
If <code>Super</code> is recompiled but not <code>Test</code>, then running the new binary with the existing binary of <code>Test</code> results in a <code>VerifyError</code> because the class <code>Test</code> improperly 
tries to override the instance method <code>out</code>.
<p><a name="45253"></a>
Changing a class (<code>static</code>) method that is not <code>final</code> to be <code>final</code> does not break compatibility with existing binaries, because the class of the actual method to be invoked is resolved at compile time.<p>
<a name="45254"></a>
Removing the <code>final</code> modifier from a method does not break compatibility with pre-existing binaries.<p>


</body></html>
