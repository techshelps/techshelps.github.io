<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>12.3.2 Preparation of a Class or Interface Type</title>
<META NAME=MS-HAID CONTENT="12_3_2">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h3>12.3.2	 Preparation of a Class or Interface Type</h3>
<a name="47979"></a>
<p>
<a name="44510"></a>
<i>Preparation</i> involves creating the <code>static</code> fields (class variables and constants) for 
a class or interface and initializing such fields to the standard default values 
<a href="4_5_4.htm#10931">(&#167;4.5.4)</a>. This does not require the execution of any Java code; explicit initializers 
for <code>static</code> fields are executed as part of initialization <a href="12_4.htm#44557">(&#167;12.4)</a>, not preparation.
<p><a name="46216"></a>
Java implementations must detect the following error during preparation:<p>
<ul><a name="46217"></a>
<li><code>AbstractMethodError</code>: A class that is not declared to be <code>abstract</code> has an <code>abstract</code> method. This can occur, for example, if a method that is originally not <code>abstract</code> is changed to be <code>abstract</code> after another class that inherits the now <code>abstract</code> method declaration has been compiled <a href="13_4_15.htm#45214">(&#167;13.4.15)</a>.
</ul><p><a name="46228"></a>
If such an error is detected, then an instance of <code>AbstractMethodError</code> should be 
thrown at the point in the Java program that caused the class to be prepared.
<p><a name="46239"></a>
Implementations of the Java Virtual Machine may precompute additional data structures at preparation time in order to make later operations on a class or interface more efficient. One particularly useful data structure is a "method table" or other data structure that allows any method to be invoked on instances of a class without requiring a search of superclasses at invocation time.<p>


</body></html>
