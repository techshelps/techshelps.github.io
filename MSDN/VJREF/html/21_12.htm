<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>21.12 The Class java.util.Stack</title>
<META NAME=MS-HAID CONTENT="21_12">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h1>21.12	 The Class java.util.Stack</h1>
<a name="24949"></a>
<p>
<a name="24950"></a>
<p><i>. . . and from the stack a thin blue wreath of smoke<br>
Curled through the air across the ripening oats . . .</i><br>
<a name="27031"></a>
&#151;Oscar Wilde, <i>Charmides</i> (1881)</p>
<p>
<a name="23026"></a>
The class <code>Stack</code> extends <code>Vector</code> with five operations that allow a vector to be 
treated as a stack. The usual <code>push</code> and <code>pop</code> operations are provided, as well as a 
method to <code>peek</code> at the top item on the stack, a method to test for whether the stack 
is <code>empty</code>, and a method to <code>search</code> the stack for an item and discover how far it is 
from the top.
<p><pre><a name="23027"></a>public class <code><b>Stack</b></code> extends Vector {
<a name="23028"></a>	public Object <code><b>push</b></code>(Object item);
<a name="23029"></a>	public Object <code><b>pop</b></code>() throws EmptyStackException;
<a name="23030"></a>	public Object <code><b>peek</b></code>() throws EmptyStackException;
<a name="23031"></a>	public boolean <code><b>empty</b></code>();
<a name="23032"></a>	public int <code><b>search</b></code>(Object o);
<a name="23033"></a>}
</pre><p><a name="23034"></a>
When a stack is first created, it contains no items.<p>
<a name="23035"></a>
<p><strong>21.12.1	</strong> <code>public Object push(Object item)</code>
<p>
<a name="23036"></a>
The <code>item</code> is pushed onto the top of this stack. This has exactly the same effect as:
<p><pre><a name="23037"></a>addElement(item)
</pre><p><a name="23041"></a>
See method <code>addElement</code> of <code>Vector</code> <a href="21_11.htm#22408">(&#167;21.11.13)</a>.<p>
<a name="23043"></a>
<p><strong>21.12.2	</strong> <code>public Object pop() throws EmptyStackException</code>
<p>
<a name="23044"></a>
If the stack is empty, an <code>EmptyStackException</code> is thrown. Otherwise, the topmost item (last item of the <code>Vector</code>) is removed and returned.
<p><a name="23046"></a>
<p><strong>21.12.3	</strong> <code>public Object peek() throws EmptyStackException</code>
<p>
<a name="23047"></a>
If the stack is empty, an <code>EmptyStackException</code> is thrown. Otherwise, the topmost item (last item of the <code>Vector</code>) is returned but not removed.
<p><a name="23048"></a>
<p><strong>21.12.4	</strong> <code>public boolean empty()</code>
<p>
<a name="23049"></a>
The result is <code>true</code> if and only if the stack contains no items.
<p><a name="23050"></a>
<p><strong>21.12.5	</strong> <code>public int search(Object o)</code>
<p>
<a name="26478"></a>
If the object <code>o</code> occurs as an item in this <code>Stack</code>, this method returns the distance 
from the top of the stack of the occurrence nearest the top of the stack; the topmost item on the stack is considered to be at distance <code>1</code>. The <code>equals</code> method 
<a href="20_1.htm#14865">(&#167;20.1.3)</a> is used to compare <code>o</code> to the items in this <code>Stack</code>.
<p><i> . . . And overhead in circling listlessness<br>
The cawing rooks whirl round the frosted stacks . . .<br>
</i>&#151;Oscar Wilde, <i>Humanitad</i> (1881)</p>
<p>

</body></html>
