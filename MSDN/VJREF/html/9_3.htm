<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>9.3 Field (Constant) Declarations</title>
<META NAME=MS-HAID CONTENT="9_3">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>9.3	 Field (Constant) Declarations</h2>
<a name="78642"></a>
<p>
<a name="236038"></a>
<p><i>The materials of action are variable,<br>
but the use we make of them should be constant.</i><br>
<a name="237100"></a>
&#151;Epictetus (circa 60 A.D.), translated by Thomas Wentworth Higginson</p>
<pre>
<i>ConstantDeclaration:<br>
	ConstantModifiers<code> </code>Type<code> </code>VariableDeclarator
</i>
<i>ConstantModifiers: one of<br>
	<code>public&#32;static&#32;final
</code></i></pre><p><a name="40575"></a>
Every field declaration in the body of an interface is implicitly <code>public</code>, <code>static</code>, and <code>final</code>. It is permitted, but strongly discouraged as a matter of style, to redundantly specify any or all of these modifiers for such fields.<p>
<a name="40577"></a>
A constant declaration in an interface must not include any of the modifiers <code>synchronized</code>, <code>transient</code>, or <code>volatile</code>, or a compile-time error occurs.<p>
<a name="40725"></a>
It is possible for an interface to inherit more than one field with the same name <a href="8_3_3.htm#40491">(&#167;8.3.3.3)</a>. Such a situation does not in itself cause a compile-time error. However, any attempt within the body of the interface to refer to either field by its simple name will result in a compile-time error, because such a reference is ambiguous.<p>
<a name="40729"></a>
There might be several paths by which the same field declaration might be inherited from an interface. In such a situation, the field is considered to be inherited only once, and it may be referred to by its simple name without ambiguity.<p>


</Font></body></html>
