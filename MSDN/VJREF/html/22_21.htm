<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>22.21 The Class java.io.DataOutputStream</title>
<META NAME=MS-HAID CONTENT="22_21">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h1>22.21	 The Class java.io.DataOutputStream</h1>
<a name="9231"></a>
<p>
<a name="33862"></a>
A data output stream provides facilities for converting data of diverse types into 
character sequence of specific formats that are then sent to some output stream.
<p><pre><a name="9232"></a>public class <code><b>DataOutputStream</b></code> extends FilterOutputStream
<a name="23983"></a>		implements DataOutput {
<a name="9233"></a>	protected int <code><b>written</b></code>;
<a name="9234"></a>	public <code><b>DataOutputStream</b></code>(OutputStream out);
<a name="9235"></a>	public void <code><b>write</b></code>(int b) throws IOException;
<a name="9236"></a>	public void <code><b>write</b></code>(byte[] b, int off, int len)
<a name="32467"></a>		throws IOException, NullPointerException,
<a name="32468"></a>			IndexOutOfBoundsException;
<a name="9237"></a>	public void <code><b>flush</b></code>() throws IOException;
<a name="9238"></a>	public final void <code><b>writeBoolean</b></code>(boolean v) throws IOException;
<a name="9239"></a>	public final void <code><b>writeByte</b></code>(int v) throws IOException;
<a name="9240"></a>	public final void <code><b>writeShort</b></code>(int v) throws IOException;
<a name="9241"></a>	public final void <code><b>writeChar</b></code>(int v) throws IOException;
<a name="9242"></a>	public final void <code><b>writeInt</b></code>(int v) throws IOException;
<a name="9243"></a>	public final void <code><b>writeLong</b></code>(long v) throws IOException;
<a name="9244"></a>	public final void <code><b>writeFloat</b></code>(float v) throws IOException;
<a name="9245"></a>	public final void <code><b>writeDouble</b></code>(double v) throws IOException;
<a name="9246"></a>	public final void <code><b>writeBytes</b></code>(String s)
<a name="32475"></a>		throws IOException, NullPointerException;
<a name="9247"></a>	public final void <code><b>writeChars</b></code>(String s)
<a name="32476"></a>		throws IOException, NullPointerException;
<a name="9248"></a>	public final void <code><b>writeUTF</b></code>(String str)
<a name="32477"></a>		throws IOException, NullPointerException;
<a name="9249"></a>	public final int <code><b>size</b></code>();
<a name="9250"></a>}
</pre><p><a name="9251"></a>
<p><strong>22.21.1	</strong> <code>protected int written;</code>
<p>
<a name="23975"></a>
This field contains the number of bytes written to the stream so far.
<p><a name="9252"></a>
<p><strong>22.21.2	</strong> <code>public DataOutputStream(OutputStream out)</code>
<p>
<a name="23951"></a>
This constructor initializes a newly created <code>DataOutputStream</code> by saving its 
argument, the output stream <code>out</code>, for later use. The counter <code>written</code> is set to zero.
<p><a name="9253"></a>
<p><strong>22.21.3	</strong> <code>public void write(int b) throws IOException</code>
<p>
<a name="27480"></a>
The byte for this operation (the low eight bits of the argument <code>b</code>) is written to the 
contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>1</code>.
<p><a name="27492"></a>
Implements the <code>write</code> method of <code>OutputStream</code> <a href="22_15.htm#29411">(&#167;22.15.1)</a>.<p>
<a name="27481"></a>
<p><strong>22.21.4	</strong> <code>public void write(byte[] b, int off, int len)<br>throws IOException, NullPointerException,  &#32; &#32; &#32;IndexOutOfBoundsException</code>
<p>
<a name="27494"></a>
Bytes for this operation are written to the contained output stream. If no exception 
is thrown, the counter <code>written</code> is incremented by <code>len</code>.
<p><a name="27499"></a>
Overrides the <code>write</code> method of <code>OutputStream</code> <a href="22_15.htm#29426">(&#167;22.15.3)</a>.<p>
<a name="27451"></a>
<p><strong>22.21.5	</strong> <code>public void flush() throws IOException</code>
<p>
<a name="27455"></a>
The contained output stream is flushed.
<p><a name="27503"></a>
Overrides the <code>flush</code> method of <code>OutputStream</code> <a href="22_15.htm#29440">(&#167;22.15.4)</a>.<p>
<a name="27456"></a>
<p><strong>22.21.6	</strong> <code>public final void writeBoolean(boolean v)<br>throws IOException</code>
<p>
<a name="23962"></a>
See the general contract of the <code>writeBoolean</code> method of <code>DataOutput</code> <a href="22_2.htm#28974">(&#167;22.2.4)</a>.
<p><a name="23963"></a>
The byte for this operation is written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>1</code>.<p>
<a name="9257"></a>
<p><strong>22.21.7	</strong> <code>public final void writeByte(int v) throws IOException</code>
<p>
<a name="23988"></a>
See the general contract of the <code>writeByte</code> method of <code>DataOutput</code> <a href="22_2.htm#28981">(&#167;22.2.5)</a>.
<p><a name="23989"></a>
The byte for this operation is written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>1</code>.<p>
<a name="9258"></a>
<p><strong>22.21.8	</strong> <code>public final void writeShort(int v) throws IOException</code>
<p>
<a name="23996"></a>
See the general contract of the <code>writeShort</code> method of <code>DataOutput</code> <a href="22_2.htm#28988">(&#167;22.2.6)</a>.
<p><a name="23997"></a>
Bytes for this operation are written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>2</code>.<p>
<a name="9259"></a>
<p><strong>22.21.9	</strong> <code>public final void writeChar(int v) throws IOException</code>
<p>
<a name="24004"></a>
See the general contract of the <code>writeChar</code> method of <code>DataOutput</code> <a href="22_2.htm#28997">(&#167;22.2.7)</a>.
<p><a name="24094"></a>
Bytes for this operation are written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>2</code>.<p>
<a name="9260"></a>
<p><strong>22.21.10	</strong> <code>public final void writeInt(int v) throws IOException</code>
<p>
<a name="24012"></a>
See the general contract of the <code>writeInt</code> method of <code>DataOutput</code> <a href="22_2.htm#29006">(&#167;22.2.8)</a>.
<p><a name="24098"></a>
Bytes for this operation are written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>4</code>.<p>
<a name="9261"></a>
<p><strong>22.21.11	</strong> <code>public final void writeLong(long v) throws IOException</code>
<p>
<a name="24020"></a>
See the general contract of the <code>writeLong</code> method of <code>DataOutput</code> <a href="22_2.htm#29017">(&#167;22.2.9)</a>.
<p><a name="24102"></a>
Bytes for this operation are written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>8</code>.<p>
<a name="9262"></a>
<p><strong>22.21.12	</strong> <code>public final void writeFloat(float v) throws IOException</code>
<p>
<a name="24028"></a>
See the general contract of the <code>writeFloat</code> method of <code>DataOutput</code> <a href="22_2.htm#29032">(&#167;22.2.10)</a>.
<p><a name="24106"></a>
Bytes for this operation are written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>4</code>.<p>
<a name="9263"></a>
<p><strong>22.21.13	</strong> <code>public final void writeDouble(double v) throws IOException</code>
<p>
<a name="24036"></a>
See the general contract of the <code>writeDouble</code> method of <code>DataOutput</code> <a href="22_2.htm#29045">(&#167;22.2.11)</a>.
<p><a name="24110"></a>
Bytes for this operation are written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>8</code>.<p>
<a name="9264"></a>
<p><strong>22.21.14	</strong> <code>public final void writeBytes(String s)<br>throws IOException, NullPointerException,  &#32; &#32; &#32;IndexOutOfBoundsException</code>
<p>
<a name="24044"></a>
See the general contract of the <code>writeBytes</code> method of <code>DataOutput</code> <a href="22_2.htm#29058">(&#167;22.2.12)</a>.
<p><a name="24114"></a>
Bytes for this operation are written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by the length of <code>s</code>.<p>
<a name="9265"></a>
<p><strong>22.21.15	</strong> <code>public final void writeChars(String s)<br>throws IOException, NullPointerException,  &#32; &#32; &#32;IndexOutOfBoundsException</code>
<p>
<a name="24052"></a>
See the general contract of the <code>writeChars</code> method of <code>DataOutput</code> <a href="22_2.htm#29066">(&#167;22.2.13)</a>.
<p><a name="32487"></a>
Bytes for this operation are written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by twice the length of <code>s</code>.<p>
<a name="32488"></a>
<p><strong>22.21.16	</strong> <code>public final void writeUTF(String str)<br>throws IOException, NullPointerException,  &#32; &#32; &#32;IndexOutOfBoundsException</code>
<p>
<a name="32492"></a>
See the general contract of the <code>writeUTF</code> method of <code>DataOutput</code> <a href="22_2.htm#29074">(&#167;22.2.14)</a>.
<p><a name="24122"></a>
Bytes for this operation are written to the contained output stream. If no exception is thrown, the counter <code>written</code> is incremented by the total number of bytes written to the output stream. This will be at least two plus the length of <code>s</code>, and at most two plus thrice the length of <code>s</code>.<p>
<a name="9267"></a>
<p><strong>22.21.17	</strong> <code>public final int size()</code>
<p>
<a name="23976"></a>
The <code>size</code> method returns the current value of the counter <code>written</code>, the number of 
bytes written to the stream so far.
<p>

</body></html>
