<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>22.8 The Class java.io.SequenceInputStream</title>
<META NAME=MS-HAID CONTENT="22_8">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h1>22.8	 The Class java.io.SequenceInputStream</h1>
<a name="28491"></a>
<p>
<a name="28492"></a>
A <code>SequenceInputStream</code> represents the logical concatenation of other input 
streams. It starts out with an ordered collection of input streams and reads from 
the first one until end of file is reached, whereupon it reads from the second one, 
and so on, until end of file is reached on the last of the contained input streams.
<p><pre><a name="28493"></a>public class <code><b>SequenceInputStream</b></code> extends InputStream {
<a name="28494"></a>	public <code><b>SequenceInputStream</b></code>(Enumeration e);
<a name="28495"></a>	public <code><b>SequenceInputStream</b></code>(InputStream s1, InputStream s2);
<a name="28496"></a>	public int <code><b>read</b></code>() throws IOException;
<a name="28498"></a>	public int <code><b>read</b></code>(byte[] buf, int pos, int len)
<a name="28499"></a>		throws IOException, NullPointerException,
<a name="32327"></a>			IndexOutOfBoundsException;
<a name="28500"></a>	public void <code><b>close</b></code>() throws IOException;
<a name="28501"></a>}
</pre><p><a name="28502"></a>
<p><strong>22.8.1	</strong> <code>public SequenceInputStream(Enumeration e)</code>
<p>
<a name="28503"></a>
This constructor initializes a newly created <code>SequenceInputStream</code> by remembering the argument, which must be an <code>Enumeration</code> <a href="21_1.htm#23147">(&#167;21.1)</a> that produces 
objects whose run-time type is <code>InputStream</code> <a href="22_3.htm#28126">(&#167;22.3)</a>. The input streams that are 
produced by the enumeration will be read, in order, to provide the bytes to be read 
from this <code>SequenceInputStream</code>. After each input stream from the enumeration 
is exhausted, it is closed by calling its <code>close</code> method.
<p><a name="28510"></a>
<p><strong>22.8.2	</strong> <code>public SequenceInputStream(InputStream s1,<br> &#32; &#32; &#32;InputStream s2)</code>
<p>
<a name="28511"></a>
This constructor initializes a newly created <code>SequenceInputStream</code> by remembering the two arguments, which will be read in order, first <code>s1</code> and then <code>s2</code>, to provide the bytes to be read from this <code>SequenceInputStream</code>.
<p><a name="28512"></a>
<p><strong>22.8.3	</strong> <code>public int read() throws IOException</code>
<p>
<a name="28516"></a>
Implements the <code>read</code> method of <code>InputStream</code> <a href="22_3.htm#28142">(&#167;22.3.1)</a>.
<p><a name="28517"></a>
<p><strong>22.8.4	</strong> <code>public int read(byte[] buf, int pos, int len)<br>throws IOException, NullPointerException,  &#32; &#32; &#32;IndexOutOfBoundsException</code>
<p>
<a name="28521"></a>
Overrides the <code>read</code> method of <code>InputStream</code> <a href="22_3.htm#28164">(&#167;22.3.3)</a>.
<p><a name="28522"></a>
<p><strong>22.8.5	</strong> <code>public void close() throws IOException</code>
<p>
<a name="28523"></a>
This <code>SequenceInputStream</code> is closed. A closed <code>SequenceInputStream</code> cannot 
perform input operations and cannot be reopened.
<p><a name="28524"></a>
If this stream was created from an enumeration, all remaining elements are requested from the enumeration and closed before the <code>close</code> method returns.<p>
<a name="28528"></a>
Overrides the <code>close</code> method of <code>InputStream</code> <a href="22_3.htm#28187">(&#167;22.3.6)</a>.<p>


</body></html>
