<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>15.19 Relational Operators</title>
<META NAME=MS-HAID CONTENT="15_19">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>15.19	 Relational Operators</h2>
<a name="40641"></a>
<p>
<a name="139595"></a>
The <i>relational operators</i> are syntactically left-associative (they group left-to-
right), but this fact is not useful; for example, <code>a&lt;b&lt;c</code> parses as <code>(a&lt;b)&lt;c</code>, which is 
always a compile-time error, because the type of <code>a&lt;b</code> is always <code>boolean</code> and <code>&lt;</code> is 
not an operator on <code>boolean</code> values.
<p><pre>
<i>RelationalExpression:<br>
	ShiftExpression<br>
	RelationalExpression<code> &lt; </code>ShiftExpression<br>
	RelationalExpression<code> &gt; </code>ShiftExpression<br>
	RelationalExpression<code> &lt;= </code>ShiftExpression<br>
	RelationalExpression<code> &gt;= </code>ShiftExpression<br>
	RelationalExpression<code> instanceof </code>ReferenceType
</i></pre><p><a name="235261"></a>
The type of a relational expression is always <code>boolean</code>.
<p>

</body></html>
