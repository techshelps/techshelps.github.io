<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>10.6 Arrays Initializers</title>
<META NAME=MS-HAID CONTENT="10_6">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>10.6	 Arrays Initializers</h2>
<a name="11358"></a>
<p>
<a name="25749"></a>
An <i>array initializer</i> may be specified in a declaration, creating an array and providing some initial values:
<p><pre>
<i>ArrayInitializer:<br>
	<code>{ </code>VariableInitializersopt<code> ,</code>opt<code> }
</code></i>
<i>VariableInitializers:<br>
	VariableInitializer<br>
	VariableInitializers<code> , </code>VariableInitializer
</i></pre><p><a name="25741"></a>
The following is repeated from <a href="8_3.htm#40898">&#167;8.3</a> to make the presentation here clearer:
<p><pre>
<i>VariableInitializer:<br>
	Expression<br>
	ArrayInitializer
</i></pre><p><a name="25727"></a>
An array initializer is written as a comma-separated list of expressions, enclosed by braces "<code>{</code>" and "<code>}</code>".<p>
<a name="25754"></a>
The length of the constructed array will equal the number of expressions.<p>
<a name="25755"></a>
Each expression specifies a value for one array component. Each expression must be assignment-compatible <a href="5_2.htm#170768">(&#167;5.2)</a> with the array's component type, or a compile-time error results.<p>
<a name="25756"></a>
If the component type is itself an array type, then the expression specifying a component may itself be an array initializer; that is, array initializers may be nested.<p>
<a name="11390"></a>
A trailing comma may appear after the last expression in an array initializer and is ignored.<p>
<a name="25758"></a>
As an example:<p>
<pre><a name="25759"></a>
class Test {
<a name="25765"></a>	public static void main(String[] args) {
<a name="25760"></a>		int ia[][] = { {1, 2}, null };
<a name="25761"></a>		for (int i = 0; i &lt; 2; i++)
<a name="25762"></a>			for (int j = 0; j &lt; 2; j++)
<a name="25763"></a>				System.out.println(ia[i][j]);
<a name="25766"></a>	}
<a name="25764"></a>}
</pre><p><a name="25767"></a>
prints:
<p><pre><a name="25769"></a>
1
<a name="25770"></a>2
</pre><p><a name="25771"></a>
before causing a <code>NullPointerException</code> in trying to index the second component of the array <code>ia</code>, which is a null reference.
<p>

</body></html>
