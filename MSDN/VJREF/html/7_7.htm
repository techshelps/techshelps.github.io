<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>7.7 Unique Package Names</title>
<META NAME=MS-HAID CONTENT="7_7">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>7.7	 Unique Package Names</h2>
<a name="40169"></a>
<p>
<a name="60379"></a>
<p align=right><i>Did I ever tell you that Mrs. McCave<br>Had twenty-three sons and she named them all "Dave"?<br>Well, she did. And that wasn't a smart thing to do. . . .</i></p>
<a name="61554"></a>
<p align=right>-Dr. Seuss (Theodore Geisel), Too Many Daves (1961)</p>
<a name="37792"></a>
<p>Developers should take steps to avoid the possibility of two published packages 
having the same name by choosing <i>unique package names</i> for packages that are 
widely distributed. This allows packages to be easily and automatically installed 
and catalogued. This section specifies a standard convention, not enforced by a 
Java compiler, for generating such unique package names. Java systems are 
encouraged to provide automatic support for converting a set of packages from 
local and casual package names to the unique name format described here.
<p><a name="37825"></a>
If unique package names are not used, then package name conflicts may arise far from the point of creation of either of the conflicting packages. This may create &#32;a situation that is difficult or impossible for the user or programmer to resolve. The class <code>ClassLoader</code> <a href="20_14.htm#14462">(&#167;20.14)</a> of the standard Java Virtual Machine environment can be used to isolate packages with the same name from each other in those cases where the packages will have constrained interactions, but not in a way that is transparent to a naive Java program.<p>
<a name="26818"></a>
You form a unique package name by first having (or belonging to an organization that has) an Internet domain name, such as <code>Sun.COM</code>. You then reverse this name, component by component, to obtain, in this example, <code>COM.Sun</code>, and use this as a prefix for your package names, using a convention developed within your organization to further administer package names.<p>
<a name="26819"></a>
Such a convention might specify that certain directory name components be division, department, project, machine, or login names. Some possible examples:<p>
<pre><a name="26820"></a>
COM.Sun.sunsoft.DOE
<a name="26821"></a>COM.Sun.java.jag.scrabble
<a name="26822"></a>COM.Apple.quicktime.v2
<a name="26823"></a>EDU.cmu.cs.bovik.cheese
<a name="26824"></a>GOV.whitehouse.socks.mousefinder
</pre><p><a name="26825"></a>
The first component of a unique package name is always written in all-uppercase 
ASCII letters and should be one of the top-level domain names, currently <code>COM</code>, 
<code>EDU</code>, <code>GOV</code>, <code>MIL</code>, <code>NET</code>, <code>ORG</code>, or one of the English two-letter codes identifying countries as specified in ISO Standard 3166, 1981. For more information, refer to the 
documents stored at <code>ftp://rs.internic.net/rfc</code>, for example, <code>rfc920.txt</code> 
and <code>rfc1032.txt</code>.
<p><a name="26826"></a>
The name of a package is not meant to imply anything about where the package is stored within the Internet; for example, a package named <code>EDU.cmu.cs.bovik.cheese</code> is not necessarily obtainable from Internet address <code>cmu.EDU</code> or from <code>cs.cmu.EDU</code> or from <code>bovik.cs.cmu.EDU</code>. The Java convention for generating unique package names is merely a way to piggyback a package naming convention on top of an existing, widely known unique name registry instead of having to create a separate registry for Java package names.<p>
<a name="60426"></a>
If you need to get a new Internet domain name, you can get an application form from <code>ftp://ftp.internic.net</code> and submit the complete forms by E-mail to <code>domreg@internic.net</code>. To find out what the currently registered domain names are, you can <code>telnet</code> to <code>rs.internic.net</code> and use the <code>whois</code> facility.

<hr>
<p>
<br>
</font>
</Font></body></html>
