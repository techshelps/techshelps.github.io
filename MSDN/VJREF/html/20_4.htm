<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>20.4 The Class java.lang.Boolean</title>
<META NAME=MS-HAID CONTENT="20_4">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h1>20.4	 The Class java.lang.Boolean</h1>
<a name="14344"></a>
<p>
<a name="2138"></a>
Objects of type <code>Boolean</code> represent primitive values of type <code>boolean</code>.
<p><pre><a name="13812"></a>public final class <code><b>Boolean</b></code> {
<a name="3330"></a>	public static final Boolean <code><b>TRUE</b></code> = new Boolean(true);
<a name="1888"></a>	public static final Boolean <code><b>FALSE</b></code> = new Boolean(false);
<a name="1890"></a>	public <code><b>Boolean</b></code>(boolean value);
<a name="1892"></a>	public <code><b>Boolean</b></code>(String s);
<a name="1896"></a>	public String <code><b>toString</b></code>();
<a name="1897"></a>	public boolean <code><b>equals</b></code>(Object obj);
<a name="1902"></a>	public int <code><b>hashCode</b></code>();
<a name="1905"></a>	public boolean <code><b>booleanValue</b></code>();
<a name="1983"></a>	public static Boolean <code><b>valueOf</b></code>(String s);
<a name="1984"></a>	public static boolean <code><b>getBoolean</b></code>(String name);
<a name="1988"></a>}
</pre><p><a name="1985"></a>
<p><strong>20.4.1	</strong> <code>public static final Boolean TRUE = new Boolean(true);</code>
<p>
<a name="1964"></a>
The constant value of this field is a <code>Boolean</code> object corresponding to the primitive 
value <code>true</code>.
<p><a name="1968"></a>
<p><strong>20.4.2	</strong> <code>public static final Boolean FALSE = new Boolean(false);</code>
<p>
<a name="1969"></a>
The constant value of this field is a <code>Boolean</code> object corresponding to the primitive 
value <code>false</code>.
<p><a name="1970"></a>
<p><strong>20.4.3	</strong> <code>public Boolean(boolean value)</code>
<p>
<a name="1971"></a>
This constructor initializes a newly created <code>Boolean</code> object so that it represents 
the primitive value that is the argument.
<p><a name="1972"></a>
<p><strong>20.4.4	</strong> <code>public Boolean(String s)</code>
<p>
<a name="1973"></a>
This constructor initializes a newly created <code>Boolean</code> object so that it represents 
<code>true</code> if and only if the argument is not <code>null</code> and is equal, ignoring case, to the 
string <code>"true"</code>.
<p><a name="33801"></a>
Examples:<p>
<pre><a name="1974"></a>
<code>new</code> <code>Boolean("True")</code> produces a <code>Boolean</code> object that represents <code>true</code>.
<a name="1975"></a><code>new</code> <code>Boolean("yes")</code> produces a <code>Boolean</code> object that represents <code>false</code>.
</pre><p><a name="1976"></a>
<p><strong>20.4.5	</strong> <code>public boolean booleanValue()</code>
<p>
<a name="1977"></a>
The primitive <code>boolean</code> value represented by this <code>Boolean</code> object is returned.
<p><a name="4068"></a>
<p><strong>20.4.6	</strong> <code>	public String toString()</code>
<p>
<a name="4076"></a>
If this <code>Boolean</code> object represents <code>true</code>, a string equal to <code>"true"</code> is returned. If 
this <code>Boolean</code> object represents <code>false</code>, a string equal to <code>"false"</code> is returned.
<p><a name="4077"></a>
Overrides the <code>toString</code> method of <code>Object</code> <a href="20_1.htm#1152">(&#167;20.1.2)</a>.<p>
<a name="1978"></a>
<p><strong>20.4.7	</strong> <code>public boolean equals(Object obj)</code>
<p>
<a name="1979"></a>
The result is <code>true</code> if and only if the argument is not <code>null</code> and is a <code>Boolean</code> object 
that represents the same <code>boolean</code> value as this <code>Boolean</code> object.
<p><a name="4016"></a>
Overrides the <code>equals</code> method of <code>Object</code> <a href="20_1.htm#14865">(&#167;20.1.3)</a>.<p>
<a name="1957"></a>
<p><strong>20.4.8	</strong> <code>public int hashCode()</code>
<p>
<a name="1958"></a>
If this <code>Boolean</code> object represents <code>true</code>, the integer <code>1231</code> is returned. If this 
<code>Boolean</code> &#32;object represents <code>false</code>, the integer <code>1237</code> is returned.
<p><a name="4023"></a>
Overrides the <code>hashCode</code> method of <code>Object</code> <a href="20_1.htm#13784">(&#167;20.1.4)</a>.<p>
<a name="15210"></a>
<p><strong>20.4.9	</strong> <code>public static boolean valueOf(String s)</code>
<p>
<a name="15252"></a>
The result is <code>true</code> if and only if the argument is not <code>null</code> and is equal, ignoring 
case, to the string <code>"true"</code>.
<p><a name="15253"></a>
Example: <code>Boolean.valueOf("True")</code> returns <code>true</code>.<p>
<a name="15254"></a>
Example: <code>Boolean.valueOf("yes")</code> returns <code>false</code>.<p>
<a name="13824"></a>
<p><strong>20.4.10	</strong> <code>public static boolean getBoolean(String name)</code>
<p>
<a name="15267"></a>
The result is <code>true</code> if and only if the value of the system property (&#167;20.18.9)</a> named 
by the argument is equal, ignoring case, to the string <code>"true"</code>.
<p><i>This above all: to thine own self be true,<br>
And it must follow, as the night the day,<br>
Thou canst not then be false to any man.<br>
</i>&#151;William Shakespeare, <i>Hamlet</i>, Act I, scene iii</p>
<p>

</body></html>
