<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>13.4.21 Method and Constructor Body</title>
<META NAME=MS-HAID CONTENT="13_4_21">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h3>13.4.21	 Method and Constructor Body</h3>
<a name="45265"></a>
<p>
<a name="45266"></a>
Changes to the body of a method or constructor do not break compatibility with 
pre-existing binaries.
<p><a name="45267"></a>
We note that a compiler cannot inline expand a method at compile time unless, for example, either:<p>
<ul><a name="45268"></a>
<li>the method is <code>private</code> to its class
<a name="45269"></a>
<li>an entire package is guaranteed to be kept together and the method is accessible only within that package
<a name="45270"></a>
<li>a set of Java code is being compiled to a special binary format where the specified method is available only within a binary or set of binaries which are being kept together.
</ul><p><a name="45271"></a>
The keyword <code>final</code> on a method does not mean that the method can be safely 
inlined; it only means that the method cannot be overridden. Unless the compiler 
has extraordinary knowledge, it is still possible that a new version of that method 
will be provided at link time.
<p><a name="45272"></a>
In general we suggest that Java implementations use late-bound (run-time) code generation and optimization.<p>


</body></html>
