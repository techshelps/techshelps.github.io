<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>6.6.7 Example: protected Fields, Methods, and Constructors</title>
<META NAME=MS-HAID CONTENT="6_6_7">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h3>6.6.7	 Example: protected Fields, Methods, and Constructors</h3>
<a name="36191"></a>
<p>
<a name="36201"></a>
Consider this example, where the <code>point</code> package declares:
<p><pre><br><a name="36202"></a>package points;
<br></pre><p><pre><a name="36203"></a>
public class Point {
<br><a name="36322"></a>	protected int x, y;
<br><a name="36324"></a>
	void warp(threePoint.Point3d a) {
<a name="61672"></a>		if (a.z &gt; 0)						// compile-time error: cannot access a.z
<a name="61670"></a>			a.delta(this);
<a name="36332"></a>	}
<br><a name="36323"></a>}
</pre><p><a name="36204"></a>
and the <code>threePoint</code> package declares:
<p><pre><br><a name="36331"></a>package threePoint;
<br><br><a name="36205"></a>import points.Point;
<br></pre><p><pre><a name="36206"></a>
public class Point3d extends Point {
<br><a name="36315"></a>	protected int z;
<br><a name="36207"></a>
	public void delta(Point p) {
<a name="36295"></a>		p.x += this.x;						// compile-time error: cannot access p.x
<a name="36296"></a>		p.y += this.y;						// compile-time error: cannot access p.y
<a name="36297"></a>	}
<br><a name="36208"></a>
	public void delta3d(Point3d q) {
<a name="36300"></a>		q.x += this.x;
<a name="36317"></a>		q.y += this.y;
<a name="36319"></a>		q.z += this.z;
<a name="36302"></a>	}
<br><a name="36209"></a>}
</pre><p><a name="36210"></a>
which defines a class <code>Point3d</code>. A compile-time error occurs in the method <code>delta 
</code>here: it cannot access the protected members <code>x</code> and <code>y</code> of its parameter <code>p</code>, because 
while <code>Point3d</code> (the class in which the references to fields <code>x</code> and <code>y</code> occur) is a subclass of <code>Point</code> (the class in which <code>x</code> and <code>y</code> are declared), it is not involved in the 
implementation of a <code>Point</code> (the type of the parameter <code>p</code>). The method <code>delta3d</code> 
can access the protected members of its parameter <code>q</code>, because the class <code>Point3d</code> is 
a subclass of <code>Point</code> and is involved in the implementation of a <code>Point3d</code>.
<p><a name="36214"></a>
The method <code>delta</code> could try to cast (<a href="5_4.htm#176921">&#167;5.4</a>, <a href="15_15.htm#238146">&#167;15.15</a>) its parameter to be a <code>Point3d</code>, but this cast would fail, causing an exception, if the class of <code>p</code> at run time were not <code>Point3d</code>.<p>
<a name="61715"></a>
A compile-time error also occurs in the method warp: it cannot access the protected member <code>z</code> of its parameter <code>a</code>, because while the class <code>Point</code> (the class in which the reference to field <code>z</code> occurs) is involved in the implementation of a <code>Point</code> (the type of the parameter a), it is not a subclass of <code>Point</code> (the class in which <code>z</code> is declared). <p>


</Font></body></html>
