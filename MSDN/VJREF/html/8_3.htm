<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>8.3 Field Declarations</title>
<META NAME=MS-HAID CONTENT="8_3">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>8.3	 Field Declarations</h2>
<a name="40898"></a>
<p>
<a name="228349"></a>
<p><i>Poetic fields encompass me around,<br>
And still I seem to tread on classic ground.</i><br>
<a name="230301"></a>
&#151;Joseph Addison (1672-1719), <i>A Letter from Italy</i></p>
<a name="40823"></a>
<p>The variables of a class type are introduced by <i>field declarations</i>:
<p><pre>
<i><i>FieldDeclaration:<br>
	FieldModifiers</i>opt<code> </code><i>Type</i><code> </code>Variable<i>Declarators</i><code> ;
</code></i>
<i>VariableDeclarators:<br>
	VariableDeclarator<br>
	VariableDeclarators<code> , </code>VariableDeclarator
</i>
<i>VariableDeclarator:<br>
	VariableDeclaratorId<br>
	VariableDeclaratorId<code> = </code>VariableInitializer
</i>
<i>VariableDeclaratorId:<br>
	Identifier<br>
	VariableDeclaratorId<code> [ ]
</code></i>
<i>VariableInitializer:<br>
	Expression<br>
	ArrayInitializer
</i></pre><p><a name="78087"></a>
The <i>FieldModifiers</i> are described in <a href="8_3_1.htm#78091">&#167;8.3.1</a>. The <i>Identifier</i> in a <i>FieldDeclarator</i> 
may be used in a name to refer to the field. The name of a field has as its scope 
<a href="6_3.htm#33623">(&#167;6.3)</a> the entire body of the class declaration in which it is declared. More than 
one field may be declared in a single field declaration by using more than one 
declarator; the <i>FieldModifiers</i> and <i>Type</i> apply to all the declarators in the declaration. Variable declarations involving array types are discussed in <a href="10_2.htm#25891">&#167;10.2</a>.
<p><a name="29989"></a>
It is a compile-time error for the body of a class declaration to contain declarations of two fields with the same name. Methods and fields may have the same name, since they are used in different contexts and are disambiguated by the different lookup procedures <a href="6_5.htm#20569">(&#167;6.5)</a>.<p>
<a name="36999"></a>
If the class declares a field with a certain name, then the declaration of that field is said to <i>hide</i> <a href="6_3_1.htm#34133">(&#167;6.3.1)</a> any and all accessible declarations of fields with the same name in the superclasses and superinterfaces of the class.<p>
<a name="38152"></a>
If a field declaration hides the declaration of another field, the two fields need not have the same type.<p>
<a name="38148"></a>
A class inherits from its direct superclass and direct superinterfaces all the fields of the superclass and superinterfaces that are both accessible to code in the class and not hidden by a declaration in the class.<p>
<a name="37087"></a>
It is possible for a class to inherit more than one field with the same name <a href="8_3_3.htm#40491">(&#167;8.3.3.3)</a>. Such a situation does not in itself cause a compile-time error. However, any attempt within the body of the class to refer to any such field by its simple name will result in a compile-time error, because such a reference is ambiguous.<p>
<a name="37038"></a>
There might be several paths by which the same field declaration might be inherited from an interface. In such a situation, the field is considered to be inherited only once, and it may be referred to by its simple name without ambiguity.<p>
<a name="37037"></a>
A hidden field can be accessed by using a qualified name (if it is <code>static</code>) or by using a field access expression <a href="15_10.htm#41267">(&#167;15.10)</a> that contains the keyword <code>super</code> or a cast to a superclass type. See <a href="15_10_2.htm#20860">&#167;15.10.2</a> for discussion and an example.<p>


</Font></body></html>
