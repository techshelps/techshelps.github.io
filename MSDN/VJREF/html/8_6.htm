<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>8.6 Constructor Declarations</title>
<META NAME=MS-HAID CONTENT="8_6">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>8.6	 Constructor Declarations</h2>
<a name="41652"></a>
<p>
<a name="228307"></a>
<p><i>The constructor of wharves, bridges, piers, bulk-heads,<br>
floats, stays against the sea . . .</i><br>
<a name="230309"></a>
&#151;Walt Whitman, <i>Song of the Broad-Axe</i> (1856)</p>
<a name="78391"></a>
<p>A <i>constructor</i> is used in the creation of an object that is an instance of a class:
<p><pre>
<i><i>ConstructorDeclaration</i>:<br>
<i>	ConstructorModifiers</i>opt<code>&#32;</code><i>ConstructorDeclarator<br>
</i>		Throwsopt<code>&#32;</code>ConstructorBody
</i>
<i>ConstructorDeclarator:<br>
<code>	</code><i>SimpleTypeName</i><code> ( </code><i>FormalParameterList</i>opt<code> )
</code></i></pre><p><a name="30689"></a>
The <i>SimpleTypeName </i>in the <i>ConstructorDeclarator</i> must be the simple name of 
the class that contains the constructor declaration; otherwise a compile-time error 
occurs. In all other respects, the constructor declaration looks just like a method 
declaration that has no result type.
<p><a name="229249"></a>
Here is a simple example:<p>
<pre><a name="30690"></a>
class Point {
<a name="30691"></a>	int x, y;
<a name="30692"></a>	Point(int x, int y) { this.x = x; this.y = y; }
<a name="30693"></a>}
</pre><p><a name="41721"></a>
Constructors are invoked by class instance creation expressions <a href="15_8.htm#41147">(&#167;15.8)</a>, by the <code>newInstance</code> method of class <code>Class</code> <a href="20_3.htm#14342">(&#167;20.3)</a>, by the conversions and concatenations caused by the string concatenation operator + <a href="15_17_1.htm#39990">(&#167;15.17.1)</a>, and by explicit constructor invocations from other constructors <a href="8_6_5.htm#78435">(&#167;8.6.5)</a>. Constructors are never invoked by method invocation expressions <a href="15_11.htm#20448">(&#167;15.11)</a>. <p>
<a name="29483"></a>
Access to constructors is governed by access modifiers <a href="6_6.htm#33916">(&#167;6.6)</a>. This is useful, for example, in preventing instantiation by declaring an inaccessible constructor <a href="8_6_8.htm#16830">(&#167;8.6.8)</a>.<p>
<a name="39897"></a>
Constructor declarations are not members. They are never inherited and therefore are not subject to hiding or overriding.<p>


</Font></body></html>
