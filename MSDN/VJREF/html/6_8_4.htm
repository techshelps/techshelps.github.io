<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>6.8.4 Field Names</title>
<META NAME=MS-HAID CONTENT="6_8_4">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h3>6.8.4	 Field Names</h3>
<a name="9351"></a>
<p>
<a name="32831"></a>
Names of fields that are not <code>final</code> should be in mixed case with a lowercase first 
letter and the first letters of subsequent words capitalized. Note that well-designed 
Java classes have very few <code>public</code> or <code>protected</code> fields, except for fields that are 
constants (<code>final</code> <code>static</code> fields) <a href="6_8_5.htm#9367">(&#167;6.8.5)</a>.
<p><a name="56830"></a>
Fields should have names that are nouns, noun phrases, or abbreviations for nouns. Examples of this convention are the fields <code>buf</code>, <code>pos</code>, and <code>count</code> of the class <code>java.io.ByteArrayInputStream</code> <a href="22_6.htm#28355">(&#167;22.6)</a> and the field <code>bytesTransferred</code> of the class <code>java.io.InterruptedIOException</code> <a href="22_30.htm#30212">(&#167;22.30.1)</a>.<p>
<a name="13055"></a>
Hiding involving field names is rare.<p>
<ul><a name="29526"></a>
<li>If a field name hides a package name, then an <code>import</code> declaration <a href="7_5.htm#26656">(&#167;7.5)</a> can usually be used to make available the type names declared in that package.
<a name="13069"></a>
<li>If a field name hides a type name, then a fully qualified name for the type can be used.
<a name="29539"></a>
<li>Field names cannot hide method names.
<a name="9539"></a>
<li>If a field name is hidden by a declaration of a parameter or local variable, then the name of the parameter or local variable can be changed without affecting other Java code.
</ul><p>

</Font></body></html>
