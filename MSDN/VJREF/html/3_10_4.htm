<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.10.4 Character Literals</title>
<META NAME=MS-HAID CONTENT="3_10_4">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h3>3.10.4	 Character Literals</h3>
<a name="100960"></a>
<p>
<a name="100964"></a>
A <i>character literal</i> is expressed as a character or an escape sequence, enclosed in 
ASCII single quotes. (The single-quote, or apostrophe, character is <code>\u0027</code>.)
<p><a name="229640"></a>
A character literal is always of type <code>char</code>.<p>
<pre>
<i>CharacterLiteral:<br>
	<code>' </code>SingleCharacter<code> '<br>
	' </code>EscapeSequence<code> '
</code></i>
<i>SingleCharacter:<br>
	InputCharacter but not <code>'</code> or <code>\
</code></i></pre><p><a name="100967"></a>
The escape sequences are described in <a href="3_10_6.htm#101089">&#167;3.10.6</a>.
<p><a name="229112"></a>
As specified in <a href="3_4.htm#231571">&#167;3.4</a>, the characters CR and LF are never an <i>InputCharacter</i>; they are recognized as constituting a <i>LineTerminator</i>.<p>
<a name="100968"></a>
It is a compile-time error for the character following the <i>SingleCharacter</i> or <i>EscapeSequence</i> to be other than a <code>'</code>.<p>
<a name="229137"></a>
It is a compile-time error for a line terminator to appear after the opening <code>'</code> and before the closing <code>'</code>.<p>
<a name="229739"></a>
The following are examples of <code>char</code> literals:<p>
<pre><a name="231014"></a>
'a'
<a name="231016"></a>'%'
<a name="230975"></a>'\t'
<a name="231018"></a>'\\'
<a name="231020"></a>'\''
<a name="231024"></a>'\u03a9'
<a name="231026"></a>'\uFFFF'
<a name="230984"></a>'\177'
<a name="231030"></a>'<img src="chars/capomega.gif">'
<a name="231032"></a>'<img src="chars/circmult.gif">'
</pre><p><a name="230985"></a>
Because Unicode escapes are processed very early, it is not correct to write <code>'\u000a'</code> for a character literal whose value is linefeed (LF); the Unicode escape <code>\u000a</code> is transformed into an actual linefeed in translation step 1 <a href="3_3.htm#100850">(&#167;3.3)</a> and the linefeed becomes a <i>LineTerminator</i> in step 2 <a href="3_4.htm#231571">(&#167;3.4)</a>, and so the character literal is not valid in step 3. Instead, one should use the escape sequence <code>'\n'</code> <a href="3_10_6.htm#101089">(&#167;3.10.6)</a>. Similarly, it is not correct to write <code>'\u000d'</code> for a character literal whose value is carriage return (CR). Instead, use <code>'\r'</code>.<p>
<a name="229744"></a>
In C and C++, a character literal may contain representations of more than one character, but the value of such a character literal is implementation-defined. In Java, a character literal always represents exactly one character.<p>


</body></html>
