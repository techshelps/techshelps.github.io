<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>14.15 The return Statement</title>
<META NAME=MS-HAID CONTENT="14_15">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>14.15	 The return Statement</h2>
<a name="6767"></a>
<p>
<a name="124158"></a>
<meta name="MS-HKWD" content="return">
A <code>return</code> statement returns control to the invoker of a method (<a href="8_4.htm#40420">&#167;8.4</a>, <a href="15_11.htm#20448">&#167;15.11</a>) or 
constructor (<a href="8_6.htm#41652">&#167;8.6</a>, <a href="15_8.htm#41147">&#167;15.8</a>).
<p><pre>
<i>ReturnStatement:<br>
	<code>return </code>Expressionopt<code> ;
</code></i></pre><p><a name="236030"></a>
A <code>return</code> statement with no <i>Expression </i>must be contained in the body of a method that is declared, using the keyword <code>void</code>, not to return any value <a href="8_4.htm#40420">(&#167;8.4)</a>, or in the body of a constructor <a href="8_6.htm#41652">(&#167;8.6)</a>. A compile-time error occurs if a <code>return</code> statement appears within a static initializer <a href="8_5.htm#39245">(&#167;8.5)</a>. A <code>return</code> statement with no <i>Expression</i> attempts to transfer control to the invoker of the method or constructor that contains it. To be precise, a <code>return</code> statement with no <i>Expression</i> always completes abruptly, the reason being a <code>return</code> with no value.<p>
<a name="6148"></a>
A <code>return</code> statement with an <i>Expression</i> must be contained in a method declaration that is declared to return a value <a href="8_4.htm#40420">(&#167;8.4)</a> or a compile-time error occurs. The <i>Expression</i> must denote a variable or value of some type <i>T</i>, or a compile-time error occurs. The type <em>T</em> must be assignable <a href="5_2.htm#170768">(&#167;5.2)</a> to the declared result type of the method, or a compile-time error occurs.<p>
<a name="43489"></a>
A <code>return</code> statement with an <i>Expression</i> attempts to transfer control to the invoker of the method that contains it; the value of the <i>Expression</i> becomes the value of the method invocation. More precisely, execution of such a <code>return</code> statement first evaluates the <i>Expression</i>. If the evaluation of the <i>Expression</i> completes abruptly for some reason, then the <code>return</code> statement completes abruptly for that reason. If evaluation of the <i>Expression</i> completes normally, producing a value <i>V</i>, then the <code>return</code> statement completes abruptly, the reason being a <code>return</code> with value <i>V</i>.<p>
<a name="43495"></a>
It can be seen, then, that a <code>return</code> statement always completes abruptly.<p>
<a name="43508"></a>
The preceding descriptions say "attempts to transfer control" rather than just "transfers control" because if there are any <code>try</code> statements <a href="14_18.htm#79311">(&#167;14.18)</a> within the method or constructor whose <code>try</code> blocks contain the <code>return</code> statement, then any <code>finally</code> clauses of those <code>try</code> statements will be executed, in order, innermost to outermost, before control is transferred to the invoker of the method or constructor. Abrupt completion of a <code>finally</code> clause can disrupt the transfer of control initiated by a <code>return</code> statement.<p>


</body></html>
