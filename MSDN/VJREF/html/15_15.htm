<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>15.15 Cast Expressions</title>
<META NAME=MS-HAID CONTENT="15_15">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>15.15	 Cast Expressions</h2>
<a name="238146"></a>
<p>
<a name="236460"></a>
<p><i>My days among the dead are passed;<br>
<a name="236461"></a>
Around me I behold,<br>
<a name="236462"></a>
Where'er these casual eyes are cast,<br>
<a name="39817"></a>
The mighty minds of old . . .</i><br>
<a name="236465"></a>
&#151;Robert Southey (1774-1843), <i>Occasional Pieces</i>, xviii</p>
<a name="236464"></a>
<p>A cast expression converts, at run time, a value of one numeric type to a similar 
value of another numeric type; or confirms, at compile time, that the type of an 
expression is <code>boolean</code>; or checks, at run time, that a reference value refers to an 
object whose class is compatible with a specified reference type.
<p><pre>
<i>CastExpression:<br>
<code>	( </code><i>PrimitiveType</i><code> </code>Dimsopt<code> ) </code><i>UnaryExpression<br>
</i><code>	( </code>ReferenceType<code> ) </code>U<i>naryExpressionNotPlusMinus
</i></i></pre><p><a name="39813"></a>
See <a href="15_14.htm#4990">&#167;15.14</a> for a discussion of the distinction between <i>UnaryExpression</i> and <i>UnaryExpressionNotPlusMinus</i>.<p>
<a name="39826"></a>
The type of a cast expression is the type whose name appears within the parentheses. (The parentheses and the type they contain are sometimes called the <i>cast operator</i>.) The result of a cast expression is not a variable, but a value, even if the result of the operand expression is a variable.<p>
<a name="39835"></a>
At run time, the operand value is converted by casting conversion <a href="5_4.htm#176921">(&#167;5.4)</a> to the type specified by the cast operator.<p>
<a name="239827"></a>
Not all casts are permitted by the Java language. Some casts result in an error at compile time. For example, a primitive value may not be cast to a reference type. Some casts can be proven, at compile time, always to be correct at run time. For example, it is always correct to convert a value of a class type to the type of its superclass; such a cast should require no special action at run time. Finally, some casts cannot be proven to be either always correct or always incorrect at compile time. Such casts require a test at run time. A <code>ClassCastException</code> is thrown if a cast is found at run time to be impermissible.<p>


</body></html>
