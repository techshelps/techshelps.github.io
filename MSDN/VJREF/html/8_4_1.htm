<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>8.4.1 Formal Parameters</title>
<META NAME=MS-HAID CONTENT="8_4_1">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h3>8.4.1	 Formal Parameters</h3>
<a name="38698"></a>
<p>
<a name="37472"></a>
The <i>formal parameters</i> of a method, if any, are specified by a list of comma-separated parameter specifiers. Each parameter specifier consists of a type and an identifier (optionally followed by brackets) that specifies the name of the parameter:
<p><pre>
<i>FormalParameterList:<br>
	FormalParameter<br>
	FormalParameterList<code> , </code>FormalParameter
</i>
<i>FormalParameter:<br>
	Type<code> </code>VariableDeclaratorId
</i></pre><p><a name="14850"></a>
The following is repeated from <a href="8_3.htm#40898">&#167;8.3</a> to make the presentation here clearer:
<p><pre>
<i>VariableDeclaratorId:<br>
	Identifier<br>
	VariableDeclaratorId<code> [ ]
</code></i></pre><p><a name="55499"></a>
If a method has no parameters, only an empty pair of parentheses appears in the method's declaration.<p>
<a name="55500"></a>
If two formal parameters are declared to have the same name (that is, their declarations mention the same <i>Identifier</i>), then a compile-time error occurs.<p>
<a name="37477"></a>
When the method is invoked <a href="15_11.htm#20448">(&#167;15.11)</a>, the values of the actual argument expressions initialize newly created parameter variables, each of the declared <i>Type,</i> before execution of the body of the method. The <i>Identifier</i> that appears<i> </i>in the <i>DeclaratorId</i> may be used as a simple name in the body of the method to refer to the formal parameter.<p>
<a name="38643"></a>
The scope of formal parameter names is the entire body of the method. These parameter names may not be redeclared as local variables or exception parameters within the method; that is, hiding the name of a parameter is not permitted.<p>
<a name="38647"></a>
Formal parameters are referred to only using simple names, never by using qualified names <a href="6_6.htm#33916">(&#167;6.6)</a>.<p>


</Font></body></html>
