<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.4 Line Terminators</title>
<META NAME=MS-HAID CONTENT="3_4">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>3.4	 Line Terminators</h2>
<a name="231571"></a>
<p>
<a name="22634"></a>
Java implementations next divide the sequence of Unicode input characters into 
lines by recognizing <i>line terminators</i>. This definition of lines determines the line 
numbers produced by a Java compiler or other Java system component. It also 
specifies the termination of the <code>//</code> form of a comment <a href="3_7.htm#48125">(&#167;3.7)</a>.
<p><pre>
<i>LineTerminator:<br>
<code>	</code>the ASCII LF character, also known as "newline"<br>
	the ASCII CR character, also known as "return"<br>
<code>	</code>the ASCII CR character followed by the ASCII LF character
</i>
<i>InputCharacter:<br>
	UnicodeInputCharacter but not CR or LF
</i></pre><p><a name="48107"></a>
Lines are terminated by the ASCII characters CR, or LF, or CR LF. The two characters CR immediately followed by LF are counted as one line terminator, not two. The result is a sequence of line terminators and input characters, which are the terminal symbols for the third step in the tokenization process.<p>


</body></html>
