<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>9.1 Interface Declarations</title>
<META NAME=MS-HAID CONTENT="9_1">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>9.1	 Interface Declarations</h2>
<a name="35470"></a>
<p>
<a name="27727"></a>
An interface declaration specifies a new reference type:
<p><pre>
<i><i>InterfaceDeclaration:<br>
</i>	<i>InterfaceModifiers</i>opt<code> interface </code>Identifier<br>
		ExtendsInterfacesopt<code> </code>InterfaceBody
</i></pre><p><a name="235931"></a>
A compile-time error occurs if the <em>Identifier </em>naming an interface appears as the 
name of any other class or interface in the same package. A compile-time error 
also occurs if the <i>Identifier</i> naming an interface appears as the name by which a 
class or interface is to be known via a single-type-import declaration <a href="7_5_1.htm#26699">(&#167;7.5.1)</a> in 
the compilation unit containing the interface declaration. In the example:
<p><pre><br><a name="17005"></a>class Point { int x, y; }
<br><a name="17006"></a>interface Point { void move(int dx, int dy); }
</pre><p><a name="17007"></a>
a compile-time error occurs because a <code>class</code> and an <code>interface</code> in the same package cannot have the same name.
<p>

</Font></body></html>
