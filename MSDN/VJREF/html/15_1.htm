<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>15.1 Evaluation, Denotation, and Result</title>
<META NAME=MS-HAID CONTENT="15_1">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>15.1	 Evaluation, Denotation, and Result</h2>
<a name="228862"></a>
<p>
<a name="228864"></a>
When an expression in a Java program is <i>evaluated</i> (<i>executed</i>), the <i>result</i> denotes 
one of three things:
<p><ul><a name="228896"></a>
<li>A variable <a href="4_5.htm#18470">(&#167;4.5)</a> (in C, this would be called an <i>lvalue</i>)
<a name="19788"></a>
<li>A value (<a href="4_2.htm#85587">&#167;4.2</a>, <a href="4_3.htm#9317">&#167;4.3</a>)
<a name="229505"></a>
<li>Nothing (the expression is said to be <code>void</code>)
</ul><p><a name="233971"></a>
Evaluation of an expression can also produce side effects, because expressions may contain embedded assignments, increment operators, decrement operators, and method invocations.<p>
<a name="229523"></a>
An expression denotes nothing if and only if it is a method invocation <a href="15_11.htm#20448">(&#167;15.11)</a> that invokes a method that does not return a value, that is, a method declared <code>void</code> <a href="8_4.htm#40420">(&#167;8.4)</a>. Such an expression can be used only as an expression statement <a href="14_7.htm#5984">(&#167;14.7)</a>, because every other context in which an expression can appear requires the expression to denote something. An expression statement that is a method invocation may also invoke a method that produces a result; in this case the value returned by the method is quietly discarded.<p>
<a name="39859"></a>
Each expression occurs in the declaration of some (class or interface) type that is being declared: in a field initializer, in a static initializer, in a constructor declaration, or in the code for a method.<p>


</body></html>
