</Font></body></html>
<html>
<head>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4. Types, Values, and Variables</title>
<META NAME=MS-HAID CONTENT="chap04">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
</head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"> 
 
<hr><br>
 
<p><strong>
CHAPTER
 4 </strong></p>

<h1> Types, Values, and Variables</h1>
<a name="48440"></a>
<p>
<a name="44329"></a>
<a name="86524"></a>
<p><i>I send no agent or medium,<br>offer no representative of value,<br>but offer the value itself.</i><br>
<a name="87712"></a>
&#151;Walt Whitman, Carol of Occupations (1855), in Leaves of Grass</p>
<p>
<a name="45200"></a>
Java is a <i>strongly typed</i> language, which means that every variable and every 
expression has a type that is known at compile time. Types limit the values that a 
variable <a href="4_5.htm#18470">(&#167;4.5)</a> can hold or that an expression can produce, limit the operations 
supported on those values, and determine the meaning of the operations. Strong 
typing helps detect errors at compile time.
<p><a name="50743"></a>
The types of the Java language are divided into two categories: primitive types and reference types. The primitive types <a href="4_2.htm#85587">(&#167;4.2)</a> are the <code>boolean</code> type and the numeric types. The numeric types are the integral types <code>byte</code>, <code>short</code>, <code>int</code>, <code>long</code>, and <code>char</code>, and the floating-point types <code>float</code> and <code>double</code>. The reference types <a href="4_3.htm#9317">(&#167;4.3)</a> are class types, interface types, and array types. There is also a special null type. An object <a href="4_3_1.htm#12028">(&#167;4.3.1)</a> in Java is a dynamically created instance of a class type or a dynamically created array. The values of a reference type are references to objects. All objects, including arrays, support the methods of class <code>Object</code> <a href="4_3_2.htm#11055">(&#167;4.3.2)</a>. String literals are represented by <code>String</code> objects <a href="4_3_3.htm#26992">(&#167;4.3.3)</a>.<p>
<a name="50838"></a>
Types are the same <a href="4_3_4.htm#52197">(&#167;4.3.4)</a> if they have the same fully qualified names and are loaded by the same class loader. Names of types are used <a href="4_4.htm#25948">(&#167;4.4)</a> in declarations, in casts, in class instance creation expressions, in array creation expressions, and in <code>instanceof</code> operator expressions.<p>
<a name="50800"></a>
A variable <a href="4_5.htm#18470">(&#167;4.5)</a> is a storage location. A variable of a primitive type always holds a value of that exact type. A variable of a class type <i>T</i><em></em> can hold a null reference or a reference to an instance of class <i>T</i><em></em> or of any class that is a subclass of <i>T</i>. A variable of an interface type can hold a null reference or a reference to any instance of any class that implements the interface. If <i>T</i> is a primitive type, then a variable of type "array of <i>T</i><em></em>" can hold a null reference or a reference to any array of type "array of <i>T</i><em></em>"; if <i>T</i> is a reference type, then a variable of type "array of <i>T</i><em></em>" can hold a null reference or a reference to any array of type "array of <i>S</i><em></em>" such that type <i>S</i><em></em> is assignable <a href="5_2.htm#170768">(&#167;5.2)</a> to type <i>T</i><em></em>. A variable of type <code>Object</code> can hold a null reference or a reference to any object, whether class instance or array.<p>


</Font></body></html>
