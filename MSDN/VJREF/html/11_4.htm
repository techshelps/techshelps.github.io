<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>11.4 An Example of Exceptions</title>
<META NAME=MS-HAID CONTENT="11_4">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>11.4	 An Example of Exceptions</h2>
<a name="44218"></a>
<p>
<a name="44219"></a>
Consider the following example:
<p><pre><a name="46616"></a>
class TestException extends Exception {
<br><a name="46618"></a>	TestException() { super(); }
<br><br><a name="44223"></a>	TestException(String s) { super(s); }
<br><a name="44224"></a>}
<a name="46659"></a>
class Test {
<a name="44226"></a>
	public static void main(String[] args) {
<a name="44227"></a>		for (int i = 0; i &lt; args.length; i++) {
</pre><p><pre><a name="46972"></a>
			try {
<a name="44229"></a>				thrower(args[i]);
<a name="44230"></a>				System.out.println("Test \"" + args[i] +
<a name="44231"></a>					"\" didn't throw an exception");
<a name="44232"></a>			} catch (Exception e) {
<a name="44233"></a>				System.out.println("Test \"" + args[i] +
<a name="44234"></a>					"\" threw a " + e.getClass() +
<a name="44235"></a>					"\n &#32; &#32; &#32; &#32;with message: " + e.getMessage());
<a name="44236"></a>			}
<a name="44237"></a>		}
<a name="44238"></a>	}
<br><a name="44239"></a>
	static int thrower(String s) throws TestException {
<a name="44240"></a>		try {
<a name="44241"></a>			if (s.equals("divide")) {
<a name="44242"></a>				int i = 0;
<a name="44243"></a>				return i/i;
<a name="44244"></a>			}
<a name="44245"></a>			if (s.equals("null")) {
<a name="44246"></a>				s = null;
<a name="44247"></a>				return s.length();
<a name="44248"></a>			}
<a name="44249"></a>			if (s.equals("test"))
<a name="44250"></a>				throw new TestException("Test message");
<a name="44251"></a>			return 0;
<a name="44252"></a>		} finally {
<a name="44253"></a>			System.out.println("[thrower(\"" + s +
<a name="46660"></a>					"\") done]");
<a name="44254"></a>		}
<a name="44255"></a>	}
<a name="44256"></a>}
</pre><p><a name="44257"></a>
If we execute the test program, passing it the arguments:
<p><pre><a name="44258"></a>divide null not test
</pre><p><a name="44259"></a>
it produces the output:
<p><pre><a name="44260"></a>
[thrower("divide") done]
<a name="44261"></a>Test "divide" threw a class java.lang.ArithmeticException
<a name="44262"></a> &#32; &#32; &#32; &#32;with message: / by zero
<a name="44263"></a>[thrower("null") done]
<a name="44264"></a>Test "null" threw a class java.lang.NullPointerException
<a name="44265"></a> &#32; &#32; &#32; &#32;with message: null
<a name="44266"></a>[thrower("not") done]
<a name="44267"></a>Test "not" didn't throw an exception
<a name="44268"></a>[thrower("test") done]
<a name="44269"></a>Test "test" threw a class TestException
<a name="44270"></a> &#32; &#32; &#32; &#32;with message: Test message
</pre><p><a name="44271"></a>
This example declares an exception class <code>TestException</code>. The <code>main</code> method of class <code>Test</code> invokes the <code>thrower</code> method four times, causing exceptions to be thrown three of the four times. The <code>try</code> statement in method <code>main</code> catches each exception that the <code>thrower</code> throws. Whether the invocation of <code>thrower</code> completes normally or abruptly, a message is printed describing what happened.<p>
<a name="44272"></a>
The declaration of the method <code>thrower</code> must have a <code>throws</code> clause because it &#32;can throw instances of <code>TestException</code>, which is a checked exception class <a href="11_2.htm#44121">(&#167;11.2)</a>. A compile-time error would occur if the <code>throws</code> clause were omitted.<p>
<a name="44276"></a>
Notice that the <code>finally</code> clause is executed on every invocation of <code>thrower</code>, whether or not an exception occurs, as shown by the "<code>[thrower(</code>...<code>)&#32;done]</code>" output that occurs for each invocation. <p>


</body></html>
