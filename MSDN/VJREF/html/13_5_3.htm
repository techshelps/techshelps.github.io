<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>13.5.3 The Interface Members</title>
<META NAME=MS-HAID CONTENT="13_5_3">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h3>13.5.3	 The Interface Members</h3>
<a name="45347"></a>
<p>
<a name="45348"></a>
Adding a member to an interface does not break compatibility with pre-existing 
binaries.
<p><a name="45349"></a>
Deleting a member from an interface may cause linkage errors in pre-existing binaries. If the example program:<p>
<pre><a name="45350"></a>interface I { void hello(); }
<a name="45351"></a>class Test implements I {
</pre><p><pre><a name="45352"></a>
	public static void main(String[] args) {
<a name="45353"></a>		I anI = new Test();
<a name="45354"></a>		anI.hello();
<a name="45355"></a>	}
<a name="45356"></a>	public void hello() { System.out.println("hello"); }
<a name="45357"></a>}
</pre><p><a name="45358"></a>
is compiled and executed, it produces the output:
<p><pre><a name="45359"></a>hello
</pre><p><a name="45360"></a>
Suppose that a new version of interface <code>I</code> is compiled:
<p><pre><a name="45361"></a>interface I { }
</pre><p><a name="45362"></a>
If <code>I</code> is recompiled but not <code>Test</code>, then running the new binary with the existing 
binary for <code>Test</code> will result in a <code>NoSuchMethodError</code>. (In some early implementations of Java this program still executed; the fact that the method <code>hello</code> no longer 
exists in interface <code>I</code> was not correctly detected.)
<p>

</body></html>
