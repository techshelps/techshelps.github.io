</Font></body></html>
<html>
<head>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>22. The Package java.io</title>
<META NAME=MS-HAID CONTENT="chap22">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
</head>
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
 
<hr><br>
 
<a name="19875"></a>
<p><strong>
CHAPTER
 22 </strong></p>

<h1> The Package java.io</h1>
<a name="27523"></a>
<p>
<a name="27524"></a>
Input and output in Java is organized around the concept of streams. A stream 
is a sequence of items, usually 8-bit bytes, read or written over the course of time.
<p><a name="27530"></a>
In the <code>java.io</code> package, all input is done through subclasses of the abstract class <code>InputStream</code>, and all output is done through subclasses of the abstract class <code>OutputStream</code>. The one exception to this rule is the class <code>RandomAccessFile</code>, which handles files that allow random access and perhaps intermixed reading and writing of the file.<p>
<a name="27534"></a>
For an input stream, the source of data might be a file, a <code>String</code>, an array of bytes, or bytes written to an output stream (typically by another thread). There are also "filter input streams" that take data from another input stream and transform or augment the data before delivering it as input. For example, a <code>LineNumberInputStream</code> &#32;passes bytes through verbatim but counts line terminators as they are read.<p>
<a name="27537"></a>
For an output stream, the sink of data might be a file, an array of bytes, or a buffer to be read as an input stream (typically by another thread). There are also "filter output streams" that transform or augment data before writing it to some other output stream.<p>
<a name="27564"></a>
An instance of class <code>File</code> represents a path name (a string) that might identify a particular file within a file system. Certain operations on the file system, such as renaming and deleting files, are done by this class rather than through streams.<p>
<a name="27687"></a>
An instance of class <code>FileDescriptor</code> represents an abstract indication of a particular file within a file system; such file descriptors are created internally by the Java I/O system.<p>
<a name="27586"></a>
There are two interfaces, <code>DataInput</code> and <code>DataOutput</code>, that support the transfer of data other than bytes or characters, such as long integers, floating-point numbers and strings. The class <code>DataInputStream</code> implements <code>DataInput</code>; the class <code>DataOutputStream</code> implements <code>DataOutput</code>; and <code>RandomAccessFile</code> implements both <code>DataInput</code> and <code>DataOutput</code>.<p>
<a name="27588"></a>
The class <code>StreamTokenizer</code> provides some simple support for parsing bytes or characters from an input stream into tokens such as identifiers, numbers, and strings, optionally ignoring comments and optionally recognizing or ignoring line terminators.<p>
<a name="27733"></a>
The hierarchy of classes defined in package <code>java.io</code> is as follows. (Classes whose names are shown here in <code><b>boldface</b></code> are in package <code>java.io</code>; the others are in package <code>java.lang</code> and are shown here to clarify subclass relationships.)<p>

<pre><a name="27572"></a>Object	<a href="20_1.htm#14533">&#167;20.1</a>				
<a name="32844"></a>	interface<code><b> DataInput	<a href="22_1.htm#28762">&#167;22.1</a>
</b></code><a name="32849"></a>	interface<code><b> DataOutput	<a href="22_2.htm#28931">&#167;22.2</a>
</b></code><a name="32854"></a>	<code><b>InputStream	<a href="22_3.htm#28126">&#167;22.3</a>
</b></code><a name="27604"></a>		<code><b>FileInputStream	<a href="22_4.htm#28230">&#167;22.4</a>
</b></code><a name="27615"></a>		<code><b>PipedInputStream	<a href="22_5.htm#28307">&#167;22.5</a>
</b></code><a name="27577"></a>		<code><b>ByteArrayInputStream	<a href="22_6.htm#28355">&#167;22.6</a>
</b></code><a name="27578"></a>		<code><b>StringBufferInputStream	<a href="22_7.htm#28427">&#167;22.7</a>
</b></code><a name="27580"></a>		<code><b>SequenceInputStream	<a href="22_8.htm#28491">&#167;22.8</a>
</b></code><a name="27582"></a>		<code><b>FilterInputStream	<a href="22_9.htm#28534">&#167;22.9</a>
</b></code><a name="27630"></a>			<code><b>BufferedInputStream	<a href="22_10.htm#28120">&#167;22.10</a>
</b></code><a name="27599"></a>		<code><b>	DataInputStream	<a href="22_11.htm#28623">&#167;22.11</a>
</b></code><a name="27535"></a>		<code><b>	LineNumberInputStream	<a href="22_12.htm#32925">&#167;22.12</a>
</b></code><a name="27681"></a>			<code><b>PushBackInputStream	<a href="22_13.htm">&#167;22.13</a>
</b></code><a name="30359"></a>	<code><b>StreamTokenizer	<a href="22_14.htm#29287">&#167;22.14</a>
</b></code><a name="30360"></a>	<code><b>OutputStream	<a href="22_15.htm#29399">&#167;22.15</a>
</b></code><a name="30361"></a>		<code><b>FileOutputStream	<a href="22_16.htm#29496">&#167;22.16</a>
</b></code><a name="27663"></a>		<code><b>PipedOutputStream	<a href="22_17.htm#29449">&#167;22.17</a>
</b></code><a name="27664"></a>		<code><b>ByteArrayOutputStream	<a href="22_18.htm#29558">&#167;22.18</a>
</b></code><a name="27667"></a>		<code><b>FilterOutputStream	<a href="22_19.htm">&#167;22.19</a>
</b></code><a name="27668"></a>			<code><b>BufferedOutputStream	<a href="22_20.htm#9059">&#167;22.20</a>
</b></code><a name="27669"></a>			<code><b>DataOutputStream	<a href="22_21.htm#9231">&#167;22.21</a>
</b></code><a name="27670"></a>			<code><b>PrintStream	<a href="22_22.htm#29906">&#167;22.22</a>
</b></code><a name="27646"></a>	<code><b>RandomAccessFile	<a href="22_23.htm#27738">&#167;22.23</a>
</b></code><a name="27652"></a><code><b>	File	<a href="22_24.htm#29705">&#167;22.24</a>
</b></code><a name="32863"></a>	interface<code><b> FileNameFilter	<a href="22_25.htm#30147">&#167;22.25</a>
</b></code><a name="32868"></a>	<code><b>FileDescriptor	<a href="22_26.htm#29890">&#167;22.26</a>
</b></code><a name="30355"></a>	Throwable	<a href="20_22.htm#14470">&#167;20.22</a>
<a name="30356"></a>		Exception
<a name="27598"></a>			<code><b>IOException	<a href="22_27.htm#30171">&#167;22.27</a>
</b></code><a name="30143"></a>				<code><b>EOFException	<a href="22_28.htm#32995">&#167;22.28</a>
</b></code><a name="27658"></a>				<code><b>FileNotFoundException	<a href="22_29.htm#30115">&#167;22.29</a>
</b></code><a name="27656"></a>				<code><b>InterruptedIOException	<a href="22_30.htm#30205">&#167;22.30</a>
</b></code><a name="28119"></a>				<code><b>UTFDataFormatException	<a href="22_31.htm#10137">&#167;22.31</a>
</b></code></pre><p>

</Font></body></html>
