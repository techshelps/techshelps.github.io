<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>13.3 Evolution of Packages</title>
<META NAME=MS-HAID CONTENT="13_3">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>13.3	 Evolution of Packages</h2>
<a name="47338"></a>
<p>
<a name="44974"></a>
A new class or interface type may be added to a package without breaking compatibility with pre-existing binaries, provided the new type does not reuse a name 
previously given to an unrelated type. If a new type reuses a name previously 
given to an unrelated type, then a conflict may result, since binaries for both types 
could not be loaded by the same class loader.
<p><a name="44975"></a>
Changes in class and interface types that are not <code>public</code> and that are not a superclass or superinterface, respectively, of a <code>public</code> type, affect only types within the package in which they are declared. Such types may be deleted or otherwise changed, even if incompatibilities are otherwise described here, provided that the affected binaries of that package are updated together.<p>


</body></html>
