<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>15.25 Assignment Operators</title>
<META NAME=MS-HAID CONTENT="15_25">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>15.25	 Assignment Operators</h2>
<a name="5281"></a>
<p>
<a name="5282"></a>
There are 12 <i>assignment operators</i>; all are syntactically right-associative (they 
group right-to-left). Thus, <code>a=b=c</code> means <code>a=(b=c)</code>, which assigns the value of <code>c</code> to 
<code>b</code> and then assigns the value of <code>b</code> to <code>a</code>.
<p><pre>
<i>AssignmentExpression:<br>
	ConditionalExpression<br>
	Assignment
</i>
<i>Assignment:<br>
	LeftHandSide<code> </code>AssignmentOperator<code> </code>AssignmentExpression
</i>
<i>LeftHandSide:<br>
	ExpressionName<br>
	FieldAccess<br>
	ArrayAccess
</i>
<i>AssignmentOperator: one of<br>
	<code>=&#32;*=&#32;/=&#32;%=&#32;+=&#32;-=&#32;&lt;&lt;=&#32;&gt;&gt;=&#32;&gt;&gt;&gt;=&#32;&amp;=&#32;^=&#32;|=
</code></i></pre><p><a name="236643"></a>
The result of the first operand of an assignment operator must be a variable, or a compile-time error occurs. This operand may be a named variable, such as a local variable or a field of the current object or class, or it may be a computed variable, as can result from a field access <a href="15_10.htm#41267">(&#167;15.10)</a> or an array access <a href="15_12.htm#239587">(&#167;15.12)</a>. The type of the assignment expression is the type of the variable.<p>
<a name="41276"></a>
At run time, the result of the assignment expression is the value of the variable after the assignment has occurred. The result of an assignment expression is not itself a variable.<p>
<a name="41365"></a>
A variable that is declared <code>final</code> cannot be assigned to, because when an access of a <code>final</code> variable is used as an expression, the result is a value, not a variable, and so it cannot be used as the operand of an assignment operator.<p>


</body></html>
