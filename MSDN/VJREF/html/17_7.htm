<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>17.7 Rules for Volatile Variables</title>
<META NAME=MS-HAID CONTENT="17_7">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>17.7	 Rules for Volatile Variables</h2>
<a name="28330"></a>
<p>
<a name="28331"></a>
If a variable is declared <code>volatile</code>, then additional constraints apply to the actions 
of each thread. Let <i>T</i><em></em> be a thread and let <i>V</i><i></i> and <i>W</i> be volatile variables.
<p><ul><a name="28332"></a>
<li>An <i>use</i> action by <i>T</i><em></em> on <i>V</i><i></i> is permitted only if the previous action by <i>T</i><em></em> on <i>V</i><i></i> was <i>load</i>, and a <i>load</i> action by <i>T</i><em></em> on <i>V</i><i></i> is permitted only if the next action by <i>T</i><em></em> on <i>V</i><i></i> is <i>use</i>. The <i>use</i> action is said to be "associated" with the <i>read</i> action that corresponds to the <i>load</i>.
<a name="28333"></a>
<li>A <i>store</i> action by <i>T</i><em></em> on <i>V</i><i></i> is permitted only if the previous action by <i>T</i><em></em> on <i>V</i><i></i> was <i>assign</i>, and an <i>assign</i> action by <i>T</i><em></em> on <i>V</i><i></i> is permitted only if the next action by <i>T</i><em></em> on <i>V</i><i></i> is <i>store</i>. The <i>assign</i> action is said to be "associated" with the <i>write</i> action that corresponds to the <i>store</i>.
<a name="45390"></a>
<li>Let action <i>A</i> be a <i>use</i> or <i>assign</i> by thread <i>T</i><em></em> on variable <i>V</i><i></i>, let action <i>F</i> be the <i>load</i> or <i>store</i> associated with <i>A</i>, and let action <i>P</i> be the <i>read</i> or <i>write</i> of <i>V</i><i></i> that corresponds to <i>F</i>. Similarly, let action <i>B</i> be a <i>use</i> or <i>assign</i> by thread <i>T</i><em></em> on variable &#32;<i>W</i><i></i>, let action <i>G</i> be the <i>load</i> or <i>store</i> associated with <i>B</i>, and let action <i>Q</i> be the <i>read</i> or <i>write</i> of <i>V</i><i></i> that corresponds to <i>G</i><i></i>. If <i>A</i> precedes <i>B</i>, then <i>P</i> must precede <i>Q</i>. (Less formally: actions on the master copies of volatile variables on behalf of a thread are performed by the main memory in exactly the order that the thread requested.)
</ul><p>

</body></html>
