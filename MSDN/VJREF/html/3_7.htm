<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.7 Comments</title>
<META NAME=MS-HAID CONTENT="3_7">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h2>3.7	 Comments</h2>
<a name="48125"></a>
<p>
<a name="9724"></a>
Java defines three kinds of <i>comments</i>:
<p><a name="9727"></a>
 <code>/* </code><i>text</i><code> */		</code>A <i>traditional comment</i>: all the text from the ASCII characters <code>/*</code> to the ASCII characters <code>*/</code> is ignored (as in C and C++).<p>
<a name="9730"></a>
 <code>// </code><i>text		</i>A <i>single-line comment</i>: all the text from the ASCII characters <code>//</code> to the end of the line is ignored (as in C++).<p>
<a name="228965"></a>
 <code>/** </code><i>documentation</i><code> */</code>		A <i>documentation comment</i>: the text enclosed by the ASCII characters <code>/**</code> and <code>*/</code> can be processed by a separate tool to prepare automatically generated documentation of the following class, interface, constructor, or member (method or field) declaration. See <a href="chap18.htm">&#167;18</a> for a full description of how the supplied <i>documentation</i> is processed.<p>
<a name="228969"></a>
These comments are formally specified by the following productions:
<p><pre>
<i>Comment:<br>
	TraditionalComment<br>
	EndOfLineComment<br>
	DocumentationComment
</i>
<i>TraditionalComment:<br>
	<code>/ * </code>NotStar<code> </code>CommentTail
</i>
<i>EndOfLineComment:<br>
	<code>/ / </code>CharactersInLineopt<code> </code>LineTerminator
</i>
<i>DocumentationComment:<br>
	<code>/ * * </code>CommentTailStar
</i>
<i>CommentTail:<br>
	<code>* </code>CommentTailStar<br>
	NotStar<code> </code>CommentTail
</i>
<i>CommentTailStar:<br>
	<code>/<br>
	* </code>CommentTailStar<br>
	NotStarNotSlash<code> </code>CommentTail
</i>
<i>NotStar:<br>
	InputCharacter but not <code>*<br>
</code>	LineTerminator
</i>
<i>NotStarNotSlash:<br>
	InputCharacter but not <code>*</code> or <code>/<br>
</code>	LineTerminator
</i>
<i>CharactersInLine:<br>
	InputCharacter<br>
	CharactersInLine<code> </code>InputCharacter
</i></pre><p><a name="230630"></a>
These productions imply all of the following properties:
<p><ul><a name="48132"></a>
<li>Comments do not nest.
<a name="48134"></a>
<li><code>/*</code> and <code>*/</code> have no special meaning in comments that begin with <code>//</code>.
<a name="48135"></a>
<li><code>//</code> has no special meaning in comments that begin with <code>/*</code> or <code>/**</code>.
</ul><p><a name="48136"></a>
As a result, the text:
<p><pre><a name="48137"></a>/*<code> </code>this comment /* // /** ends here: */
</pre><p><a name="230885"></a>
is a single complete comment.
<p><a name="230886"></a>
The lexical grammar implies that comments do not occur within character literals <a href="3_10_4.htm#100960">(&#167;3.10.4)</a> or string literals <a href="3_10_5.htm#101083">(&#167;3.10.5)</a>.<p>
<a name="229276"></a>
Note that <code>/**/</code> is considered to be a documentation comment, while <code>/* */ </code>(with a space between the asterisks) is a traditional comment.<p>


</body></html>
