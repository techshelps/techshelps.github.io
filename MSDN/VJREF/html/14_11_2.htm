<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>14.11.2 Example</title>
<META NAME=MS-HAID CONTENT="14_11_2">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h3>14.11.2	 Example</h3>
<a name="24585"></a>
<p>
<a name="43313"></a>
The following code is one possible implementation of the <code>toHexString</code> method 
<a href="20_7.htm#7332">(&#167;20.7.14)</a> of class <code>Integer</code>:
<p><pre><a name="43303"></a>
public static String toHexString(int i) {
<a name="43304"></a>	StringBuffer buf = new StringBuffer(8);
<a name="43305"></a>	do {
<a name="43306"></a>		buf.append(Character.forDigit(i &amp; 0xF, 16));
<a name="43307"></a>		i &gt;&gt;&gt;= 4;
<a name="43308"></a>	} while (i != 0);
<a name="43309"></a>	return buf.reverse().toString();
<a name="43310"></a>}
</pre><p><a name="24586"></a>
Because at least one digit must be generated, the <code>do</code> statement is an appropriate 
control structure.
<p>

</body></html>
