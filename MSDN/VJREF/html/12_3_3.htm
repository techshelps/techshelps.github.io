<html>
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>12.3.3 Resolution of Symbolic References</title>
<META NAME=MS-HAID CONTENT="12_3_3">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></head>
<body bgcolor=#ffffff>

<h3>12.3.3	 Resolution of Symbolic References</h3>
<a name="44524"></a>
<p>
<a name="44525"></a>
A Java binary file references other classes and interfaces and their fields, methods, 
and constructors symbolically, using the fully-qualified names of the other classes 
and interfaces <a href="13_1.htm#44909">(&#167;13.1)</a>. For fields and methods, these symbolic references include 
the name of the class or interface type that declares the field or method as well as 
the name of the field or method itself, together with appropriate type information.
<p><a name="44529"></a>
Before a symbolic reference can be used it must be undergo <i>resolution</i>, wherein a symbolic reference is checked to be correct and, typically, replaced with a direct reference that can be more efficiently processed if the reference is used repeatedly.<p>
<a name="44530"></a>
If an error occurs during resolution, then an error will be thrown. Most typically, this will be an instance of one of the following subclasses of the class <code>IncompatibleClassChangeError</code>, but it may also be an instance of some other subclass of <code>IncompatibleClassChangeError</code> or even an instance of the class <code>IncompatibleClassChangeError</code> itself. This error may be thrown at any point in the program that uses a symbolic reference to the type, directly or indirectly:<p>
<ul><a name="44531"></a>
<li><code>IllegalAccessError</code>: A symbolic reference has been encountered that specifies a use or assignment of a field, or invocation of a method, or creation of an instance of a class, to which the code containing the reference does not have access because the field or method was declared <code>private</code>, <code>protected</code>, or default access (not <code>public</code>), or because the class was not declared <code>public</code>. This can occur, for example, if a field that is originally declared <code>public</code> is changed to be <code>private</code> after another class that refers to the field has been compiled <a href="13_4_6.htm#47259">(&#167;13.4.6)</a>.
<a name="44535"></a>
<li><code>InstantiationError</code>: A symbolic reference has been encountered that is used in a class instance creation expression, but an instance cannot be created because the reference turns out to refer to an interface or to an <code>abstract</code> class. This can occur, for example, if a class that is originally not <code>abstract</code> is changed to be <code>abstract</code> after another class that refers to the class in question has been compiled <a href="13_4_1.htm#44980">(&#167;13.4.1)</a>.
<a name="44539"></a>
<li><code>NoSuchFieldError</code>: A symbolic reference has been encountered that refers to a specific field of a specific class or interface, but the class or interface does not declare a field of that name (it is specifically not sufficient for it simply to be an inherited field of that class or interface). This can occur, for example, if a field declaration was deleted from a class after another class that refers to the field was compiled <a href="13_4_7.htm#45118">(&#167;13.4.7)</a>.
<a name="44543"></a>
<li><code>NoSuchMethodError</code>: A symbolic reference has been encountered that refers to a specific method of a specific class or interface, but the class or interface does not declare a method of that signature (it is specifically not sufficient for it simply to be an inherited method of that class or interface). This can occur, for example, if a method declaration was deleted from a class after another class that refers to the method was compiled <a href="13_4_12.htm#45197">(&#167;13.4.12)</a>.
</ul><p><a name="49761"></a>
Additionally, an <code>UnsatisfiedLinkError</code> (a subclass of <code>LinkageError</code>) may be thrown if a class declares a <code>native</code> method for which no implementation can be found. The error will occur if the method is used, or earlier depending on what kind of resolution strategy is being used by the virtual machine <a href="12_3.htm#44487">(&#167;12.3)</a>.<p>


</body></html>
