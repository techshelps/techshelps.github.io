<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Built-in ASP Objects</title>


<SCRIPT LANGUAGE="JavaScript">
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="cocss.css">');
</script> 


<META NAME="DESCRIPTION" CONTENT="Briefly describes the built-in objects provided with Active Server Pages; these are objects that do not require instantiation.">

<META NAME="MS-HAID"CONTENT="Built-in ASP Objects">

</head>

<body bgcolor="#FFFFFF" text="#000000"><font face="Verdana,Arial,Helvetica">

<h1><a name="H1_37775607">Built-in ASP Objects</a></h1>

<p>Active Server Pages  provides built-in objects that make it easier for you to gather information sent with a browser request, to respond to the browser, and to store information about a particular user, such as user-selected preferences.  This topic briefly describes each object.</p>

<h2><a name="H2_37776108">Application Object</a></h2>

<p>You use the <strong>Application</strong> object to share information among all users of a given application.</p>

<h2><a name="H2_37776283">Request Object</a></h2>

<p>You use the <strong>Request</strong> object to gain access to any information that is passed with an HTTP request. This includes parameters passed from an HTML form using either the <code><font face="courier" size="3">POST</font></code> method or the <code><font face="courier" size="3">GET</font></code> method, cookies, and client certificates.  The <strong>Request</strong> object also gives you access to binary data sent to the server, such as file uploads.</p>


<h2><a name="H2_37776813">Response Object</a></h2>

<p>You use the <strong>Response</strong> object to control the information you send to a user.  This includes sending information directly to the browser, redirecting the browser to another URL, or setting cookie values.</p>

<h2><a name="H2_37777094">Server Object</a></h2>

<p>The <strong>Server</strong> object provides access to methods and properties on the server.  The most frequently used method is the one that creates an instance of an ActiveX  component (<strong>Server.CreateObject</strong>).  Other methods apply URL or HTML encoding to strings, map virtual paths to physical paths, and set the timeout period for a script.</p>

<h2><a name="H2_37777518">Session Object</a></h2>

<p>You use the <strong>Session</strong> object to store information needed for a particular user session. Variables stored in the <strong>Session</strong> object are not discarded when the user jumps between pages in the application; instead, these variables persist for the entire time the user is accessing pages in your application.  You can also use <strong>Session</strong> methods to explicitly end a session and set the timeout period for an idle session.</p>

<h2><a name="H2_37778059">ObjectContext Object</a></h2>

<p>You use the <strong>ObjectContext</strong> object to either commit or abort a transaction initiated by an ASP script.</p>

<hr class="iis" size="1">


</font>
</body>
</html>

