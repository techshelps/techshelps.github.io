<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Managing Applications</title>


<SCRIPT LANGUAGE="JavaScript">
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="cocss.css">');
</script> 


<META NAME="DESCRIPTION" CONTENT="Explains how to use the Application object and how to start and stop applications.">

<META NAME="MS-HAID"CONTENT="Managing Applications">

</head>

<body bgcolor="#FFFFFF" text="#000000"><font face="Verdana,Arial,Helvetica">


<h1><a name="H1_37681682">Managing Applications</a></h1>

<p>The Windows&nbsp;NT Option Pack provides services for managing ASP applications on the Web server.  For example, Internet Service Manager gives the application developer an easy-to-use administration tool to set application properties.  In addition, Active Server Pages provides scripting features that enable your applications to store global data.  This topic briefly introduces some of these application management features and provides links to more detailed information.</p>

<h2><a name="H2_37682291">Starting and Ending an Application</a></h2>

<p>An application starts the first time the Web server receives a request for an ASP page in that application.  An application ends when the Web server is shut down or when you stop an application using the <strong>Unload</strong> button in Internet Service Manager.  You can only use the <strong>Unload</strong> button on applications that are running in a separate memory space (isolated) from the Web server process.</p>

<h2><a name="H2_37682865">Isolating an Application</a></h2>

<p>ASP applications normally run in the same memory space, or process, as the Web server.  While this improves the performance of an ASP application, it places the Web server process at risk if the application fails.  You can isolate an application by running it in a separate memory space from the Web server.  If the ASP application fails, other applications and the Web server itself are protected.</p>

<h2><a name="H2_37683410">Using Application State</a></h2>

<p>When you are writing applications, you may need to make information pertaining to an application available to all users of the application.  For example, you might want to create variables that enable system administrators to customize an application for their site by setting a different greeting or changing the title font on all ASP pages.  These changes will be seen by any user who visits the site.</p>

<p>You can make data available to all users of an application from all pages of an application in several ways.  The most frequently used is to give a variable or an object instance application scope by storing it in the ASP <strong>Application</strong> object.  Application scope is useful for global data, such as a global counter, or global application configuration information, such as information stored in the registry or metabase.   To learn how to give variables application scope, see <a href="iiwavar.htm">Using Variables</a>.  To learn how to give objects application scope, see <a href="iiwaobu.htm">Setting Object Scope</a>.</p>

<p>You may also need to write scripts that are run whenever an application starts up or shuts down.</p>

<hr class="iis" size="1">


</font>
</body>
</html>

