<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Components</title>


<SCRIPT LANGUAGE="JavaScript">
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="cocss.css">');
</script> 


<META NAME="DESCRIPTION" CONTENT="Briefly describes the ActiveX components that are provided with Active Server Pages.">

<META NAME="MS-HAID"CONTENT="ActiveX Components">

</head>

<body bgcolor="#FFFFFF" text="#000000"><font face="Verdana,Arial,Helvetica">	


<h1><a name="H1_37766751">ActiveX Components</a></h1>


<p>This section provides an overview of the  ActiveX  components included with Active Server Pages (ASP).</p>

<p>ActiveX components are designed to run on your Web server as part of a Web-based application. Components provide key functionality needed for Web applications, such as database access, so that you do not have to create and re-create the code to perform these tasks.</p>

<h2><a name="databaseaccess">Database Access</a></h2>

<p>You use the Database Access component to provide access to a database from within your Web application. You can then display the entire contents of a table, allow users to construct queries, and perform other database operations from Web pages.</p>

<h2><a name="adrotator">Ad Rotator</a></h2>

<p>You use the Ad Rotator component to alternately display a series of  images, as well as to provide a link from the displayed image to another URL. You keep a list of advertisements in a text file; the Ad Rotator component displays them according to the statements in your data file.</p>

<h2><a name="contentrotator">Content Rotator</a></h2>

<p>The Content Rotator component automates the rotation of HTML content strings on a Web page. Each time a user requests the Web page, the Content Rotator component displays a new HTML content string based upon information that you specify in a Content Schedule file.</p>

<p>Because the content strings can contain HTML tags, you can display any type of content that HTML can represent: text, images, or hyperlinks. For example, you can use this component to rotate through a list of daily quotations or hyperlinks, or to change your text and background colors each time the Web page is opened.</p>

<h2><a name="browsercapabilities">Browser Capabilities</a></h2>

<p>With the Browser Capabilities component, you can tailor the content you send to a browser based on the browser's capabilities.</p>

<h2><a name="fileaccess">File Access</a></h2>

<p>The File Access Component provides objects you can use to retrieve and modify files in a computer&#146;s file system.</p>

<h2><a name="contentlinking">Content Linking</a></h2>

<p>The Content Linking component makes it easy for you to provide logical navigation through the .asp files in an application. Rather than maintaining URL references in a number of .asp files, you can specify the sequential organization of .asp files in a single, easy-to-edit text file.</p>

<h2><a name="cdofornts">Collaboration Data Objects for Windows&nbsp;NT Server</a></h2>

<p>The Collaboration Data Objects for NTS component provides messaging objects for use by Web applications. The library lets you quickly and easily add to your application the ability to send and receive mail items. You can create programmable messaging objects, then use their properties and methods to meet the needs of your application.</p>

<h2><a name="myinfo">MyInfo, Status, System, and Tools</a></h2>

<p>The MyInfo, Status, System, and Tools components provide compatibility for applications developed on the Macintosh and deployed on computers running Microsoft Windows.</p>

<ul>
<li>The MyInfo component keeps track of personal information about the Web site owner, such as the name and address of the organization running the Web site, as well as Web site settings, such as whether the Web site has a guest book.</li>
<li>The Status component  keeps track of information about your site, such as the number of visitors or the number of HTTP connections.</li>
<li>The System component creates a status object that has properties that contain server status information. Currently this server status is only available on Personal Web Server for Macintosh. </li>
<li>The Tools component provides methods to generate a random number, check for the existence of a file, or process an HTML form.</li>
</ul>

<h2><a name="pagecounter">Page Counter</a></h2>

<p>The Page Counter component counts and displays the number of times a Web page has been requested. At regular intervals it writes the number of hits to a text file so that in the event of a server shutdown, the data is not lost.</p>

<h2><a name="permissionchecker">Permission Checker</a></h2>

<p>The Permission Checker component tests the Web user's access rights to a file or a page. You can use the Permission Checker component to customize an ASP-based page for different types of users. For example, if a Web page contained hyperlinks, you could use the Permission Checker component to test the user's permissions for the corresponding Web pages and omit or make inactive any links to pages for which  the user does not have access.</p>

<hr class="iis" size="1">


</font>
</body>
</html>

