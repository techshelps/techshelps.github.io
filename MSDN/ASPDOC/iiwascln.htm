<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Scripting Languages</title>

<SCRIPT LANGUAGE="JavaScript">
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="cocss.css">');
</script> 


<META NAME="DESCRIPTION" CONTENT="Explains how to set the primary language and how to use VBScript and JScript in ASP scripts.">

<META NAME="MS-HAID"CONTENT="Working with Scripting Languages">

</head>

<body bgcolor="#FFFFFF" text="#000000"><font face="Verdana,Arial,Helvetica">


<h1><a name="H1_37779074">Working with Scripting Languages</a></h1>

<p>Scripting languages are an intermediate stage between HTML and programming languages such as Java&#153;, C++, and Visual Basic. HTML is generally used for formatting text and linking pages. Programming languages are generally used for giving a series of complex instructions to computers.  While scripting languages can also be used to give instructions to computers, their syntax and rules are generally less rigid and intricate than those of compiled programming languages.  Scripting languages focus on formatting text or calling and using compiled components written in a programming language.</p>

<p>Active Server Pages makes it possible for the Web developer to write complete procedures by using a variety of scripting languages. In fact, several scripting languages can be used within a single .asp file. In addition, because scripts are read and processed on the server side, the client browser that requests the .asp file does not need to support scripting.</p>

<p>You can use any scripting language for which the appropriate scripting engine is installed on your Web server.  A <em>scripting engine</em> is a program that processes commands written in a particular language.  Active Server Pages comes with two scripting engines:  Microsoft Visual Basic Scripting Edition (VBScript) and Microsoft JScript.  You can install and use engines for other scripting languages, such as REXX and Perl.</p>

<p>If you are already a Visual Basic programmer, you can immediately begin using VBScript, which is a subset of Visual Basic. If you are a Java, C, or C++ programmer, you may find that JScript syntax is familiar to you, even though JScript is not related to Java or C.</p>

<p>If you are familiar with another scripting language, such as REXX or Perl, you can obtain and install the appropriate scripting engine so that you can use the language you already know.  Active Server Pages is an ActiveX scripting host; to use a language you must install a scripting engine that follows the ActiveX Scripting standard and resides as a  COM (Component Object Model) object on the Web server.</p>

<h2><a name="settingtheprimaryscriptinglanguage">Setting the Primary Scripting Language </a></h2>
 
<p>The ASP <em>primary scripting language</em> is the language used to process commands inside the &lt;% and %&gt; delimiters.  By default, the primary scripting language is VBScript.  You can use any scripting language for which you have a script engine as the primary scripting language. You can set the primary scripting language on a page-by-page basis, or for all pages in an ASP application.</p>

<h3><a name="H3_37781925">Setting the Language for a Page</a></h3>

<p>To set the primary scripting language for a single page,  add the <code><font face="courier" size=3>&lt;%@ LANGUAGE %&gt;</font></code> directive to the beginning of your .asp file. The syntax for this directive is:</p>

<pre><font face="courier" size="3">&lt;%@ LANGUAGE=<em>ScriptingLanguage </em>%&gt;</font></pre>

<p>where <code><font face="courier" size="3"><em>ScriptingLanguage</em></font></code> is the primary scripting language that you want to set for that particular page.  The setting for a page overrides the global setting for all pages in the application.</p> 

<p>Follow the guidelines for using an ASP directive; for more information, see <a href="iiwabasi.htm">Creating ASP Pages</a>.</p>

<p><strong>Note</strong>&nbsp;&nbsp;&nbsp;To use a language that does  not support the <strong>Object.Method</strong> syntax as the primary scripting language, you must first create the <strong>LanguageEngines</strong> registry key.</p>

<h3><a name="H3_37782962">Setting the Language for an Application</a></h3>

<p>To set the primary scripting language for all pages in an application, set the <strong>Default ASP Language</strong> property on the <strong>App Options</strong> tab in Internet Service Manager.</p>

<h2><a name="usingvbscriptandjscript">Using VBScript and JScript on the Server</a></h2>

<p>When using VBScript on the server with ASP, two VBScript features are disabled. Because Active Server Pages scripts are executed on the server, the VBScript statements that present user-interface elements, <strong>InputBox</strong> and <strong>MsgBox</strong>, are not supported. In addition, do not use the VBScript functions <strong>CreateObject</strong> and <strong>GetObject</strong> in server-side scripts.  Use <strong>Server.CreateObject</strong> instead so that ASP can track the object instance.  Objects created by <strong>CreateObject</strong> or <strong>GetObject</strong> cannot access the ASP built-in objects and cannot participate in transactions.  The exception to this rule is when you are using the Admin Objects, and when you are using Java monikers.  For more information, see <a href="iiwacomu.htm#H2_37772661">Creating an Instance of a Java Class</a>.</p>

<h3><a name="includingcomments">Including Comments</a></h3>

<p>Because the processing of all ASP scripts is done on the server side, there is no need to include HTML comment tags to hide the scripts from browsers that do not support scripting, as is often done with client-side scripts. All ASP commands are processed before content is sent to the browser.   You can use HTML comments to add remarks to an HTML page; comments are returned to the browser and are visible if the user views the source HTML.</p>

<h4><a name="H4_37784996">VBScript Comments</a></h4>

<p>Apostrophe-style comments are supported in VBScript. Unlike HTML comments, these are removed when the script is processed and are not sent to the browser.</p>

<pre><font face="courier" size="3">&lt;% 
'This line and the following two are comments. 
'The PrintTable function prints all 
'the elements in an array. 
Call PrintTable(myarray()) 
%&gt; </font></pre>

<p>You cannot include a comment in an output expression. For example, the first line that follows will work, but the second line will not, because it begins with <code><font face="courier" size="3">&lt;%=</font></code>.</p>

<pre><font face="courier" size="3">&lt;% i = i +1 'this increments i. This script will work. %&gt; 

&lt;%= name 'this prints the variable name. This script will fail. %&gt;</font></pre>

<h4><a name="H4_37785830">JScript Comments</a></h4>

<p>The <code><font face="courier" size="3">//</font></code> comment characters are supported in JScript. These characters should be used on each comment line.</p>

<pre><font face="courier" size="3">&lt;% Call PrintDate %&gt;
&lt;SCRIPT LANGUAGE=JScript RUNAT=Server&gt; 
// This is a definition for the procedure PrintDate. 
function PrintDate() 
{ 
  var x
  x = new Date() 
  // This line sends the current date to the browser, 
  // translated to a string.
  Response.Write(x.toString()) 
}
&lt;/SCRIPT&gt; </font></pre>

<h3><a name="H3_37786236">Case Sensitivity</a></h3>

<p>VBScript is not case sensitive.  For example, you can use either <strong>Request</strong> or <strong>request</strong> to refer to the ASP <strong>Request</strong> object.  One consequence of case-insensitivity is that you cannot distinguish variable names by case.  For example, you cannot create two separate variables named Color and color.</p>

<p>JScript <em>is</em> case sensitive.  When you use JScript keywords in scripts, you must type the keyword exactly as shown in the reference page for that keyword.  For example, using <strong>date</strong> instead of <strong>Date</strong> will cause an error.   In JScript, the names of objects must be capitalized; method and property names can be any case.  The case shown in this documentation for the ASP built-in objects will work in JScript commands.</p>

<hr class="iis" size="1">


</font>
</body>
</html>

