<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Including Files</title>

<SCRIPT LANGUAGE="JavaScript">
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="cocss.css">');
</script> 

<META NAME="DESCRIPTION" CONTENT="Explains how to include a file in an ASP file.">

<META NAME="MS-HAID"CONTENT="Including Files">

</head>

<body bgcolor="#FFFFFF" text="#000000"><font face="Verdana,Arial,Helvetica">

<h1><a name="H1_37774682">Including Files</a></h1>

<p><Em>Server-side include</Em> directives give you a way to insert the content of another file into a file before the Web server processes it. ASP implements only the <strong>#include</strong> directive of this mechanism. To insert a file into an .asp file, Use the following syntax:</p>
 
<pre><font face="courier" size="3"><strong>&lt;!--#include virtual | file ="</strong><em>filename</em><strong>"--&gt; </strong></font></pre>

<p>The <strong>virtual</strong> and <strong>file</strong>  keywords  indicate the type of path you are using to include the file, and <em>filename</em> is the path and file name of the file you want to include.</p>

<p>Included files do not require a special file name extension; however, it is considered good programming practice to give included files an .inc extension to distinguish them from other types of files.</p>

<h2><a name="usingthevirtualkeyword">Using the Virtual Keyword</a></h2>

<p>Use the <strong>virtual </strong> keyword to indicate a path beginning with a <Em>virtual directory</Em>.  For example, if a file named Footer.inc resides in a virtual directory named /Myapp, the following line would insert the contents of Footer.inc into the file containing the line:</p>

<pre><font face="courier" size="3">&lt;!--#include virtual ="/myapp/footer.inc"--&gt; </font></pre>

<h2><a name="usingthefilekeyword">Using the File Keyword</a></h2>

<p>Use the <strong>file</strong> keyword to indicate a <em>relative </em> path. A relative path begins with the directory that contains the including file. For example, if you have a file in the directory Myapp, and the file Header1.inc is in Myapp\Headers, the following line would insert Header1.inc in your file:</p>

<pre><font face="courier" size="3">&lt;!--#include file ="headers/header1.inc"--&gt;</font></pre>

<p>Note that the path to the included file, Headers/header1.inc, is relative to the including file; if the script containing this <strong>#include</strong> statement is not in the directory /Myapp, the statement would not work.</p>

<p>You can also use the <strong>file</strong> keyword with <font face="courier" size="3"><code>../</code></font> syntax to include a file from a parent, or higher-level, directory if the <strong>Enable Parent Paths</strong> option is selected in Internet Service Manager.</p>


<h2><a name="H2_37777384">Location of Included Files</a></h2>

<p>Included files can reside within a directory in your Web site or outside of your Web site.  Generally, you should keep included files within Web site directories.  If an included file resides within a directory in your Web site, changes to the included file appear the next time a browser requests the including file. If, however, the included file resides outside your Web site, changes will not appear until the ASP application is restarted or until the Web server is restarted.  ASP detects changes to any including file that is contained in the application name space (under an application starting point directory).</p>

<h2><a name="includingfilesdosanddonts">Including Files: Tips and Cautions</a></h2>

<p>An included file can, in turn, include other files. An .asp file can also include the same file more than once, provided that the <strong>#include</strong> directives do not cause a loop. For example, if the file First.asp includes the file Second.inc, Second.inc must not in turn include First.asp. Nor can a file include itself. ASP detects such loop or nesting errors, generates an error message, and stops processing the requested .asp file.</p>

<p>ASP includes files before executing script commands. Therefore, you cannot use a script command to build the name of an included file. For example, the following script would not open the file Header1.inc because ASP attempts to execute the <strong>#include</strong> directive before it assigns a file name to the variable <font face="courier" size="3"><code>name</code></font>.</p>

<pre><font face="courier" size="3">&lt;!-- This script will fail --&gt;
&lt;% name=(header1 &amp; ".inc") %&gt; 
&lt;!--#include file="&lt;%= name %&gt;"--&gt;</font></pre>

<p>Scripts commands and procedures must be entirely contained within the script delimiters &lt;% and %&gt;, the HTML tags &lt;SCRIPT&gt; and &lt;/SCRIPT&gt;, or the HTML tags &lt;OBJECT&gt; and &lt;/OBJECT&gt;. That is, you cannot open a script delimiter in an including .asp file, then close the delimiter in an included file; the script or script command must be a complete unit. For example, the following script would not work:</p>

<pre><font face="courier" size="3">&lt;!-- This script will fail --&gt;
&lt;%
For i = 1 To n
  <em>statements in main file</em>
  &lt;!--#include file="header1.inc" --&gt;
Next
%&gt; </font></pre>

<p>The following script would work:</p>

<pre><font face="courier" size="3">&lt;% 
For i = 1 to n
  <em>statements in main file</em>
%&gt; 
&lt;!--#include file="header1.inc" --&gt;
&lt;% Next %&gt; </font></pre>


<hr class="iis" size="1">

</font>
</body>
</html>

