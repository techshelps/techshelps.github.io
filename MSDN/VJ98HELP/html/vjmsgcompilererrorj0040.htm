<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error J0040</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjmsgcompilererrorj0040"></a>Compiler Error J0040</h1>
<p class=dt>
<b>Cannot define a method body for abstract/native methods</b></p>
<p>
The compiler detected a method body defined immediately following the corresponding declaration of an <b>abstract</b> or <b>native</b> method. An <b>abstract</b> method must have it's implementation code defined in a subclass. <b>Native</b> methods are implemented using code from a native language such as C++.</p>
<p>
The following example illustrates this error:</p>
<pre><code>public abstract class Simple{
 &nbsp; abstract void method1(){
 &nbsp;&nbsp;&nbsp;&nbsp; //Do something here
 &nbsp; }//error: abstract methods are implemented in subclasses
}
</code></pre>
<p>
Methods declared within an interface are implicitly <b>abstract</b>. As such, this error can also occur when you attempt to define a method body in an interface. The following code illustrates this scenario:</p>
<pre><code>public interface Simple {
 &nbsp; 
 &nbsp; public void method1() {
 &nbsp;&nbsp;&nbsp;&nbsp; // error: must define this method body
 &nbsp;&nbsp;&nbsp;&nbsp; // in a class that implements the 
 &nbsp;&nbsp;&nbsp;&nbsp; // 'Simple' interface
 &nbsp; }
}
</code></pre>
</BODY>
</HTML>
