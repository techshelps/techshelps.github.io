<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COM Classes Tab (Project Properties Dialog Box)</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjdlgcomclassestabprojectsettingsdialogbox"></a>COM Classes Tab (Project Properties Dialog Box)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjdlgCOMClassesTabProjectSettingsDialogBoxC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjdlgCOMClassesTabProjectSettingsDialogBoxT">
</object></p>
<p>
The COM Classes tab allows you to expose classes in your project as Component Object Model (COM) objects.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Settings made in this tab are defined for all builds of the project, regardless of the Configuration list setting in this dialog box.</p>
<p>
From the COM Classes tab you can:
<ul type=disc>
<li>
Create classes that can be called from other applications using COM.<br><br></li>
<li>
Create or use external type libraries with your project.</li>
</ul>
<h2>Options</h2>
<h3>Classes with COM Extensions</h3>
<p>
This list displays all the Java class definitions in your project that are capable of being exposed through COM. Selecting a check box next to a class in the list marks the class as a COM class. Visual J++ places code at the top of the class definition in the form of a comment tag, when the OK or Apply button for the dialog box is clicked. This code notifies Visual J++ to register the class as a COM object.</p>
<h3>Automatically Generate Type Library</h3>
<p>
When this option is selected, a type library is automatically generated each time you build your project. Visual J++ generates a type library for all the classes that are checked in the Classes with COM Extensions list.</p>
<h3>Options</h3>
<p>
Displays the <a href="vjdlgtypelibraryoptionsdialogbox.htm">Type Library Options</a> dialog box for setting options for the automatically created type library.</p>
<h3>Use Existing Type Library</h3>
<p>
This option allows you to specify an existing type library file. If you choose this option and select a valid type library file or a file that contains an embedded type library, such as an OCX, DLL, or EXE file, Visual J++ creates class templates for them in your project.</p>
<h3>Select</h3>
<p>
This option displays the <a href="vjdlgcomtemplatesdialogbox.htm">COM Templates</a> dialog box for selecting the pre-existing type library you want to use in your project. The type library may be a stand-alone file, or it could be embedded in a COM executable (such as an OCX, DLL, or EXE file).</p>
</BODY>
</HTML>
