<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error J0195</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjmsgcompilererrorj0195"></a>Compiler Error J0195</h1>
<p class=dt>
<b>Cannot declare 'identifier' as 'static' in inner class 'identifier'</b></p>
<p>
The compiler detected an attempt to declare a variable or method as <b>static</b> from within an inner class. Unlike regular class declarations, inner classes do not support static members. Classes defined within another class, that are declared as <b>static</b>, can have static members but the class is considered an outer class. This error can also occur if an interface was defined within an inner class.</p>
<p>
The following example illustrates this error:</p>
<pre><code>public class Simple{
 &nbsp; 
 &nbsp; //Do something meaningful here
 &nbsp; 
 &nbsp; class InnerClass{
 &nbsp; 
 &nbsp; static int var1; /* error: cannot declare static
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; members in inner class*/
 &nbsp; }
}
</code></pre>
<p>
The following example illustrates how to define a class within a class that can contain <b>static</b> members:</p>
<pre><code>public class Simple{
 &nbsp; 
 &nbsp; //Do something meaningful here
 &nbsp; 
 &nbsp; /*Because 'InnerClass' class is declared as static it is now treated
 &nbsp;&nbsp;&nbsp; as an outer class enclosed within the 'Simple' class*/
 &nbsp; static class InnerClass{
 &nbsp;&nbsp;&nbsp;&nbsp; static int var1 = 100; // This is OK as long as the class is static
 &nbsp; }
}
</code></pre>
</BODY>
</HTML>
