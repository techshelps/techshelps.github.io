<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error J0083</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjmsgcompilererrorj0083"></a>Compiler Error J0083</h1>
<p class=dt>
<b>'super()' or ‘this()’ may only be called within a constructor</b></p>
<p>
The compiler detected use of either the <b>super()</b> or <b>this()</b> keyword outside of a constructor. The <b>super()</b> keyword is used to call a superclass constructor, while the <b>this()</b> keyword is used to call one constructor from another. To reference methods in a base class you must use the <b>super.</b> keyword.</p>
<p>
The following example illustrates this error:</p>
<pre><code>public class Simple {
 &nbsp; 
 &nbsp; public void method1 () {
 &nbsp; 
 &nbsp;&nbsp;&nbsp;&nbsp; super(); // error: 'super' cannot be called
 &nbsp; }
}
</code></pre>
<p>
The following example illustrates using the <b>super.</b> keyword to reference a method in a base class:</p>
<pre><code>class NotSimple{
 &nbsp; public class method1(){
 &nbsp;&nbsp;&nbsp;&nbsp; //do something here
 &nbsp; }
}

public class Simple{
 &nbsp; public method2(){
 &nbsp;&nbsp;&nbsp;&nbsp; super.method1(); //correct way to call a method of a superclass
 &nbsp; }
}
</code></pre>
</BODY>
</HTML>
