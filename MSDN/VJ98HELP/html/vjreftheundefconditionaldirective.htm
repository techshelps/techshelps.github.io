<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The #undef Conditional Directive</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjreftheundefconditionaldirective"></a>The #undef Conditional Directive</h1>
<p>
The #undef directive, as its name implies, is used to remove an identifier from a source file. The identifier need not be defined beforehand, and can be redefined again within the source file using the #define directive. The #undef directive must be placed at the top of the source file, with only comments and other conditional directives preceding it.</p>
<p class=label>
<b>Syntax</b></p>
<p>
#undef &lt;<i>identifier</i>&gt;</p>
<p>
The identifier shown above can be up to 1024 characters in length. By convention, identifiers are usually composed of uppercase characters to clarify their usage.</p>
<p>
The following example illustrates use of the #undef directive in a Java application:</p>
<pre><code>&nbsp;&nbsp;&nbsp;&nbsp;#undef DEBUG&nbsp; // DEBUG evaluates to false
 &nbsp;&nbsp; 
 &nbsp;&nbsp; #if DEBUG&nbsp;&nbsp;&nbsp; // now set to false.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // lines extracted at compile-time
 &nbsp;&nbsp; #endif
</code></pre>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>The Visual J++ build process does not allow per-file build settings. This means that in order to turn on and off conditional identifiers within a single source file, the #define and #undef directives must be explicitly declared within each file.</p>
</BODY>
</HTML>
