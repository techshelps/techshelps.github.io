<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The #define Conditional Directive</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjrefthedefineconditionaldirective"></a>The #define Conditional Directive</h1>
<p>
The #define directive is used to include a conditional identifier into a source file. When defined, the identifier can be used in all the classes contained within the source file. The directive must be placed at the top of the source file, with only comments and other conditional compilation directives preceding it.</p>
<p>
By convention, the value of the identifier declared by the #define directive will always be true.</p>
<p class=label>
<b>Syntax</b></p>
<p>
#define &lt;<i>identifier</i>&gt;</p>
<p>
The identifier shown above can be up to 1024 characters in length. By convention, identifiers are composed of uppercase characters to clarify their usage.</p>
<p>
The following example illustrates use of the #define directive in a Java application:</p>
<pre><code>&nbsp;&nbsp;&nbsp;&nbsp;#define DEBUG&nbsp; // DEBUG evaluates as true.
 &nbsp;&nbsp; 
 &nbsp;&nbsp; #if DEBUG
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // code to be included
 &nbsp;&nbsp; #endif
</code></pre>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>The Visual J++ build process does not allow per-file build settings. This means that in order to turn on and off conditional identifiers within a single source file, the #define and #undef directives must be explicitly declared within each file.</p>
</BODY>
</HTML>
