<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Warning J5016</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjmsgcompilerwarningj5016"></a>Compiler Warning J5016</h1>
<p class=dt>
<b>This 'instanceof' operator will always be true</b></p>
<p>
The compiler determined that the specified <b>instanceof</b> expression will always evaluate to true. This can occur when <b>instanceof</b> is used to determine if a subclass instance is a member of a base class or an implemented interface. Although it is not an error to use the <b>instanceof</b> operator in this fashion, it's not particularly useful since the expression will always evaluate to true.</p>
<p>
The following example illustrates this warning:</p>
<pre><code>interface I {}
class X {}
class Y extends X implements I {}

public class Simple{
 &nbsp; void f()
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; Y y = new Y();
 &nbsp;&nbsp;&nbsp;&nbsp; X x = new X();
 &nbsp;&nbsp;&nbsp;&nbsp; Object o;

 &nbsp;&nbsp;&nbsp;&nbsp; // These statements give J5016 warnings...
 &nbsp;&nbsp;&nbsp;&nbsp; if (y instanceof X){
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // y is of type Y, which extends X, so this is always true
 &nbsp;&nbsp;&nbsp;&nbsp; }
 &nbsp;&nbsp;&nbsp;&nbsp; if (y instanceof I){
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // type Y implements I, so this is always true.
 &nbsp;&nbsp;&nbsp;&nbsp; }
 &nbsp;&nbsp;&nbsp;&nbsp; if (x instanceof Object){
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // everything is of type Object
 &nbsp;&nbsp;&nbsp;&nbsp; }
 &nbsp; }
}
</code></pre>
</BODY>
</HTML>
