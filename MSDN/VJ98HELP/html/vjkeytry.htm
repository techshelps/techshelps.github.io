<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>try</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjkeytry"></a>try</h1>
<p>
The <b>try</b> keyword is used to indicate a block of code in which an exception might occur. For each try statement, there must be at least one corresponding <a href="vjkeycatch.htm">catch</a> clause. If the exception occurs, the catch clause parameter is evaluated to determine whether it is capable of handling the exceptional condition. If the exceptional condition cannot be handled by any of the catch clauses corresponding to the try statement, then control is transferred up the chain of method calls and all the previous exception types are evaluated until one capable of handling the condition is found.</p>
<p>
Note that if the try statement has a corresponding <a href="vjkeyfinally.htm">finally</a> clause, then the body of the finally clause will be executed no matter whether the try block completes normally or abruptly, and no matter whether a catch clause is first given control.</p>
<p>
The following example shows a typical try/catch/finally construct:</p>
<pre><code>try
{
 &nbsp;&nbsp; // code within this block may cause an exception.
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
}
catch( Exception1 e1 )
{
 &nbsp;&nbsp; // code within this block is executed only 
 &nbsp;&nbsp; // when an exception of type Exception1 occurs,
 &nbsp;&nbsp; // otherwise it is skipped over.
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
}
catch( Exception2 e2 )
{
 &nbsp;&nbsp; // code within this block is executed only 
 &nbsp;&nbsp; // when an exception of type Exception2 occurs,
 &nbsp;&nbsp; // otherwise it too is skipped over.
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
}
finally 
{

 &nbsp;&nbsp; // code within this block is always executed, 
 &nbsp;&nbsp; // regardless whether an exception within the 
 &nbsp;&nbsp; // try block occurs or not. This block is 
 &nbsp;&nbsp; // typically used for cleaning up.
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
}
</code></pre>
</BODY>
</HTML>
