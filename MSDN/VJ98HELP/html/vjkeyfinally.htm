<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>finally</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjkeyfinally"></a>finally</h1>
<p>
The <b>finally</b> keyword is used to define a block of code following a try/catch exception block. The finally block is optional, and appears after the <a href="vjkeytry.htm">try</a> block and after any <u>catch</u> blocks. The code in a finally block is always executed once, regardless of how the code in a try block executes. In normal execution, control reaches the end of the try block and then proceeds to the finally block, which typically performs any necessary cleanup.</p>
<p>
Note that if control leaves the try block because of a <a href="vjkeyreturn.htm">return</a>, <a href="vjkeycontinue.htm">continue</a>, or <a href="vjkeybreak.htm">break</a> statement, the contents of the finally block are still executed before control transfers out of the try block.</p>
<p>
If an exception occurs in the try block, and there is an associated catch block to handle the exception within the method, control transfers first to the catch block, and then to the finally block. If there is not a local catch block to handle the exception, control transfers first to the finally block, and then moves up the series of prior method calls until the exception can be handled.</p>
</BODY>
</HTML>
