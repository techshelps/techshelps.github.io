<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error J0114</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjmsgcompilererrorj0114"></a>Compiler Error J0114</h1>
<p class=dt>
<b>Cannot reference 'this' in constructor call</b></p>
<p>
The compiler detected an improper reference to <b>this</b> in a constructor. The <b>this</b> statement is usually used in a constructor to access methods and fields of the constructor's class. Usage of <b>this(this)</b> or <b>super(this)</b> in a constructor will cause this error to occur because the instance of the class has not yet been created and thus cannot be passed to another constructor.</p>
<p>
The following example illustrates this error:</p>
<pre><code>class SuperSimple {
 &nbsp; SuperSimple(){}
 &nbsp; SuperSimple(Object o) { }
}

public class Simple extends SuperSimple {
 &nbsp; int x;
 &nbsp; public Simple()
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; this(10); //this is OK; calls another constructor
 &nbsp;&nbsp;&nbsp;&nbsp; super(this);
 &nbsp;&nbsp;&nbsp;&nbsp; //error: cannot pass this to a super constructor
 &nbsp;&nbsp;&nbsp;&nbsp; this.x = 1; //this is OK
 &nbsp;&nbsp;&nbsp;&nbsp; this.method1(); //this is OK too
 &nbsp; }
 &nbsp; public Simple(int arg1){
 &nbsp;&nbsp;&nbsp;&nbsp; this.x = arg1; //this is OK
 &nbsp; }
 &nbsp; public void method1(){}
}
</code></pre>
</BODY>
</HTML>
