<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>abstract</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjkeyabstract"></a>abstract</h1>
<p>
The <b>abstract</b> keyword can be used in the declaration of classes and methods. Use of the keyword in a class declaration typically means that one or more of the methods within the class body are declared as abstract. If the keyword is left off the class declaration, and a method within the body of the class is declared using the abstract keyword, then the class is implicitly defined to be abstract. In other words, the keyword abstract need not be provided as part of the class declaration in this circumstance, and the code will compile successfully. (For readability it is recommended that abstract class declarations include the keyword to make the class intention clear.)</p>
<p>
Classes declared to be abstract cannot be instantiated. Instead, abstract classes force the programmer to provide a body for each abstract method within a new derived class. The following example shows a simple abstract class and a class derived from it:</p>
<pre><code>public abstract class FruitClass 
{

 &nbsp;&nbsp; public boolean isPeelable( );

 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
}

public class BananaClass extends FruitClass 
{

 &nbsp;&nbsp; private boolean bPeel;

 &nbsp;&nbsp; public boolean isPeelable( ) {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return bPeel;
 &nbsp;&nbsp; }

}
</code></pre>
<p>
The derived class (BananaClass) may be instantiated, and any non-abstract methods of the abstract class (FruitClass) will be inherited unless they are overridden. </p>
<p>
Note that a class declaration cannot use abstract and <a href="vjkeyfinal.htm">final</a>.</p>
<p>
The abstract keyword can also be used to define methods. As already shown above, a class containing abstract methods is then also (either implicitly or explicitly) defined as abstract and must be subclassed in order to be instantiated. An abstract method cannot have the implementation defined within the abstract class. Rather, it is declared with arguments and a return type as usual, but the body that is enclosed in curly braces is replaced with a semicolon.</p>
<p>
Consider the following example declaration of an abstract method:</p>
<pre><code>abstract public int someMethod( int arg1, int arg2);
</code></pre>
<p>
Note that a method declared with the keyword abstract cannot be declared with the keywords <a href="vjkeystatic.htm">static</a>, <a href="vjkeyprivate.htm">private</a>, or final.</p>
</BODY>
</HTML>
