<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>J/Direct Call Builder</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjwizwin32callbuilder"></a>J/Direct Call Builder</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjwizWin32CallBuilderC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjwizWin32CallBuilderT">
</object></p>
<p>
J/Direct Call Builder is a graphical tool for automating the process of calling the Win32 API from within Java programs.</p>
<p>
With the J/Direct Call Builder you can:
<ul type=disc>
<li>
View a list of methods, structures, and constants from the Win32 API to add to your project.<br><br></li>
<li>
Choose the target class in which to add the API usage code.<br><br></li>
<li>
Add the code necessary to use a specific API method, structure, or constant to a class in your project.</li>
</ul>
<h2>Options</h2>
<h3>Source</h3>
<p>
This dialog box allows you to select the API text file that you wish to use with the J/Direct Call Builder. The default option is the WIN32.TXT file, which allows you to import Win32 API methods, structures, and constants.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The J/Direct Call Builder only provides API listings for the GDI32, Kernel32, User32, Shell32, Advapi32, Spoolss and Winmm Win32 API Libraries.</p>
<h3>Target</h3>
<p>
A non-editable text box that displays the class that the J/Direct Call Builder will add code to. The default value for the text box is a class called Win32. If this class does not exist when you select an API to import, you will be prompted to create the class in a Java source file called Win32.java. To choose a different class in which to add your API imports, click the button located next to the Target text box. This displays the <a href="vjdlgselectclassdialogbox.htm">Select Class</a> dialog box, which allows you to select a class from your project or the Clipboard. Choosing the Clipboard as the target for class imports allows you to paste the import into any class you choose. Since structures are defined as classes in Java, when a structure is selected from the API Elements list, the structure's class is created as a nested class of the class selected in the Target text box.</p>
<h3>API Elements List</h3>
<p>
This contains a list of the Win32 API elements found in the text file specified in the Source text box. This list can be filtered using the Method, Structs, or Constants check boxes located at the top of the window. You can get help on any Win32 API element by right-clicking on the API element and choosing the Display API Help menu item from the shortcut menu. To add a selected API element to your project you can either select the element in the list and then click the Copy to Target button, or double-click the element in the list. This will add the necessary code to the class file specified in the Target text box. The Find text box located above the list allows you to type a string of text to search for a specific element in the list. Multiple API elements can be selected from the list by holding down the CTRL key and clicking on the list items that you want to add. A display area below the list shows the code that will be added for the currently selected API elements. You can determine the type of API element based on the associated icon. The list below illustrates each icon that can be displayed in the list and its meaning.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Icon</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><img src="vj4rp81.gif" border=0></td>
<td width=50%>Method</td>
</tr>
<tr valign=top>
<td width=50%><img src="vj4rp82.gif" border=0></td>
<td width=50%>Constant</td>
</tr>
<tr valign=top>
<td width=50%><img src="vj4rp83.gif" border=0></td>
<td width=50%>Struct (Structure)</td>
</tr>
</table><br>
<h3>Methods</h3>
<p>
When this option is selected, any methods contained in the currently selected API are displayed in the API Elements list. The default value for this option is true.</p>
<h3>Structs</h3>
<p>
When this option is selected, any structures contained in the currently selected API are displayed in the API Elements list. The default value for this option is true.</p>
<h3>Constants</h3>
<p>
When this option is selected, any constants contained in the currently selected API are displayed in the API Elements list. The default value for this option is true.</p>
<h3>Copy to Target</h3>
<p>
This copies the specified API elements to the class specified in the Target text box.</p>
</BODY>
</HTML>
