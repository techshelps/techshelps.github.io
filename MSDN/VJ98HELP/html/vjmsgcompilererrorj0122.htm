<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error J0122</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjmsgcompilererrorj0122"></a>Compiler Error J0122</h1>
<p class=dt>
<b>Exception 'identifier' not caught or declared by 'identifier'</b></p>
<p>
The compiler detected an exception that was thrown but never caught within the exception class. This error usually occurs when a method calls another method that is declared to throw an exception. In order for a method to call another method that throws an exception, the method must either be declared to throw the exception or handle the error using a <b>try/catch</b> combination.</p>
<p>
The following example illustrates this error:</p>
<pre><code>class SimpleException extends Exception {
 &nbsp; // do something meaningful
}

class Simple {
 &nbsp; 
 &nbsp; void method1() throws SimpleException { }
 &nbsp; void method2() { method1(); } 
 &nbsp; // error: exception not declared for method2
}
</code></pre>
<p>
The following examples illustrates how to call a method that is declared to throw an exception:</p>
<pre><code>/*This example illustrates handling by declaring the other method as
throwing an exception duplicate to the method it is calling.*/
class SimpleException extends Exception{
 &nbsp; //do something here
}

public class Simple{
 &nbsp; void method1() throws SimpleException{
 &nbsp;&nbsp;&nbsp;&nbsp; //do something here
 &nbsp; }
 &nbsp; void method2() throws SimpleException{
 &nbsp;&nbsp;&nbsp;&nbsp; method1(); //caller of method2 now is forced to handle exception
 &nbsp; }
}

/*This example illustrates handling the exception using a try/catch
  combination.*/
class SimpleException extends Exception{
 &nbsp; //do something here
}

public class Simple{
 &nbsp; void method1() throws SimpleException{
 &nbsp;&nbsp;&nbsp;&nbsp; //do something here
 &nbsp; }
 &nbsp; void method2(){
 &nbsp;&nbsp;&nbsp;&nbsp; try{
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; method1();
 &nbsp;&nbsp;&nbsp;&nbsp; }
 &nbsp;&nbsp;&nbsp;&nbsp; catch(SimpleException e){
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //handle exception here
 &nbsp;&nbsp;&nbsp;&nbsp; }
 &nbsp; }
}
</code></pre>
</BODY>
</HTML>
