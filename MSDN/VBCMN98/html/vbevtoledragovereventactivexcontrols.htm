<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLEDragOver Event (ActiveX Controls)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbevtoledragovereventactivexcontrols"></a>OLEDragOver Event (ActiveX Controls)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbevtOLEDragOverEventActiveXControls_C;vbevtOLEDragOverEventActiveXControlsC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbevtOLEDragOverEventActiveXControls_X;vbevtOLEDragOverEventActiveXControlsX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbevtOLEDragOverEventActiveXControls_A;vbevtOLEDragOverEventActiveXControlsA">
</object></p>
<p>
Occurs when one component is dragged over another.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>Private Sub</b> <i>object</i><b>_OLEDragOver</b>(<i>data</i> <b>As</b> <b>DataObject</b>, <i>effect</i> <b>As Long</b>, <i>button</i> <b>As Integer</b>, <i>shift</i> <b>As Integer</b>, <i>x</i> <b>As Single</b>, <i>y</i> <b>As Single</b>, <i>state</i> <b>As Integer</b>)</p>
<p>
The OLEDragOver event syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=20%><b>Part</b></td>
<td class=label width=80%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=20%><i>object</i></td>
<td width=80%>An <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectexpression">
</object><a href=JavaScript:alink_4.Click()>object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=20%><i>data</i></td>
<td width=80%>A <b>DataObject</b> object containing formats that the source will provide and, in addition, possibly the data for those formats. If no data is contained in the <b>DataObject</b>, it is provided when the control calls the <b>GetData</b> method. The <b>SetData</b> and <b>Clear</b> methods cannot be used here.</td>
</tr>
<tr valign=top>
<td width=20%><i>effect</i></td>
<td width=80%>A long integer initially set by the source object identifying all effects it supports. This parameter must be correctly set by the target component during this event. The value of <i>effect</i> is determined by logically <b>Or</b>'ing together all active effects (as listed in Settings). The target component should check these effects and other parameters to determine which actions are appropriate for it, and then set this parameter to one of the allowable effects (as specified by the source) to specify which actions will be performed if the user drops the selection on the component. The possible values are listed in Settings.</td>
</tr>
<tr valign=top>
<td width=20%><i>button</i></td>
<td width=80%>An integer which acts as a bit field corresponding to the state of a mouse button when it is depressed. The left button is bit 0, the right button is bit 1, and the middle button is bit 2. These bits correspond to the values 1, 2, and 4, respectively. It indicates the state of the mouse buttons; some, all, or none of these three bits can be set, indicating that some, all, or none of the buttons are depressed.</td>
</tr>
<tr valign=top>
<td width=20%><i>shift</i></td>
<td width=80%>An integer which acts as a bit field corresponding to the state of the <small>shift</small>, <small>ctrl</small>, and <small>alt</small> keys when they are depressed. The <small>shift</small> key is bit 0, the <small>ctrl</small> key is bit 1, and the <small>alt</small> key is bit 2. These bits correspond to the values 1, 2, and 4, respectively. The <i>shift</i> parameter indicates the state of these keys; some, all, or none of the bits can be set, indicating that some, all, or none of the keys are depressed. For example, if both the <small>ctrl</small> and <small>alt</small> keys are depressed, the value of <i>shift</i> would be 6.</td>
</tr>
<tr valign=top>
<td width=20%><i>x,y</i></td>
<td width=80%>A number that specifies the current horizontal (<i>x</i>) and vertical (<i>y</i>) position of the mouse pointer within the target form or control. The <i>x</i> and <i>y</i> values are always expressed in terms of the coordinate system set by the <b>ScaleHeight</b>, <b>ScaleWidth</b>, <b>ScaleLeft</b>, and <b>ScaleTop</b> properties of the object.</td>
</tr>
<tr valign=top>
<td width=20%><i>state</i></td>
<td width=80%>An integer that corresponds to the transition state of the control being dragged in relation to a target form or control. The possible values are listed in Settings.</td>
</tr>
</table><br>
<p class=label>
<b>Settings</b></p>
<p>
The settings for <i>effect</i> are:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=34%><b>Constant</b></td>
<td class=label width=22%><b>Value</b></td>
<td class=label width=44%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=34%><b>vbDropEffectNone</b></td>
<td width=22%>0</td>
<td width=44%>Drop target cannot accept the data.</td>
</tr>
<tr valign=top>
<td width=34%><b>vbDropEffectCopy</b></td>
<td width=22%>1</td>
<td width=44%>Drop results in a copy of data from the source to the target. The original data is unaltered by the drag operation.</td>
</tr>
<tr valign=top>
<td width=34%><b>vbDropEffectMove</b></td>
<td width=22%>2</td>
<td width=44%>Drop results in data being moved from drag source to drop source. The drag source should remove the data from itself after the move.</td>
</tr>
<tr valign=top>
<td width=34%><b>vbDropEffectScroll</b></td>
<td width=22%>-2147483648<p>
(&amp;H80000000)</p>
</td>
<td width=44%>Scrolling is occurring or about to occur in the target component. This value is used in conjunction with the other values.<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Use only if you are performing your own scrolling in the target component.</p>
</td>
</tr>
</table><br>
<p>
The settings for <i>state</i> are:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=16%><b>Constant</b></td>
<td class=label width=12%><b>Value</b></td>
<td class=label width=72%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=16%><b>vbEnter</b></td>
<td width=12%>0</td>
<td width=72%>Source component is being dragged within the range of a target.</td>
</tr>
<tr valign=top>
<td width=16%><b>vbLeave</b></td>
<td width=12%>1</td>
<td width=72%>Source component is being dragged out of the range of a target.</td>
</tr>
<tr valign=top>
<td width=16%><b>vbOver</b></td>
<td width=12%>2 </td>
<td width=72%>Source component has moved from one position in the target to another.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If the <i>state</i> parameter is <b>vbLeave</b>, indicating that the mouse pointer has left the target, then the <i>x</i> and <i>y</i> parameters will contain zeros.</p>
<p>
The source component should always mask values from the <i>effect</i> parameter to ensure compatibility with future implementations of ActiveX components. Presently, only three of the 32 bits in the <i>effect</i> parameter are used. In future versions of Visual Basic, however, these other bits may be used. Therefore, as a precaution against future problems, drag sources and drop targets should mask these values appropriately before performing any comparisons.</p>
<p>
For example, a source component should not compare an <i>effect</i><b> </b>against, for example, <b>vbDropEffectCopy</b>, such as:</p>
<pre><code>If Effect = vbDropEffectCopy... 
</code></pre>
<p>
Instead, the source component should mask for the value or values being sought, as here:</p>
<pre><code>If Effect And vbDropEffectCopy = vbDropEffectCopy... 
</code></pre>
<p class=tl>
-or-</P><pre><code>If (Effect And vbDropEffectCopy)... 
</code></pre>
<p>
This allows for the definition of new drop effects in future versions of Visual Basic while preserving backwards compatibility with your existing code.</p>
<p>
Most components support manual OLE drag and drop events, and some support automatic OLE drag and drop events.</p>
</BODY>
</HTML>
