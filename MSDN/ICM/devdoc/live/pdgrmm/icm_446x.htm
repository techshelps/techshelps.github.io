<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetPS2ColorSpaceArray</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getps2colorspacearray"></a>GetPS2ColorSpaceArray</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>GetPS2ColorSpaceArray</b> function retrieves the PostScript Level 2 <a href="icmglsry_6ysj.htm#_win32_icm_2.0_glossary_color_space_gloss">color space</a> array from a profile. </p>
<pre><code><b>BOOL WINAPI GetPS2ColorSpaceArray(
  HPROFILE </b><i>hProfile</i><b>,</b>
<b>  DWORD </b><i>dwIntent</i><b>,</b>
<b>  DWORD </b><i>dwCSAType</i><b>,</b>
<b>  PBYTE </b><i>pBuffer</i><b>,</b>
<b>  PDWORD </b><i>pcbSize</i><b>,</b>
<b>  PBOOL </b><i>pbBinary</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hProfile</i></dt>
<dd>
Specifies a handle to the profile from which to retrieve the PostScript Level 2 color space array.</dd>
<dt>
<i>dwIntent</i></dt>
<dd>
Specifies the desired rendering intent for the color space array. This field may take one of the following values:
<pre><code>INTENT_PERCEPTUAL
INTENT_SATURATION
INTENT_RELATIVE_COLORIMETRIC
INTENT_ABSOLUTE_COLORIMETRIC
 </code></pre>

<p>
For more information, see <a href="icm_3ng3.htm">Rendering Intents</a>.
</dd>
<dt>
<i>dwCSAType</i></dt>
<dd>
Specifies the type of color space array. Can take one of the following constant values:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=24%>Constant</th>
<th align=left width=76%>Meaning</th>
</tr>
<tr valign=top>
<td width=24%>CSA_A</td>
<td width=76%>Get a CIEBasedA color space array from the monochrome profile.</td>
</tr>
<tr valign=top>
<td width=24%>CSA_GRAY</td>
<td width=76%>Get a CIEBasedA color space array from the monochrome profile.</td>
</tr>
<tr valign=top>
<td width=24%>CSA_ABC</td>
<td width=76%>Get a CIEBasedABC color space array from the RGB or L<sup>*</sup>a<sup>*</sup>b<sup>*</sup> profile.</td>
</tr>
<tr valign=top>
<td width=24%>CSA_DEF</td>
<td width=76%>Get a CIEBasedDEF color space array from the RGB or L<sup>*</sup>a<sup>*</sup>b<sup>*</sup> profile.</td>
</tr>
<tr valign=top>
<td width=24%>CSA_RGB</td>
<td width=76%>Get a CIEBasedDEF color space array followed by a CIEBasedABC color space array from the RGB profile. On execution, if the printer doesn't support CIEBasedDEF color spaces, the function uses the CIEBasedABC definition.</td>
</tr>
<tr valign=top>
<td width=24%>CSA_Lab</td>
<td width=76%>Gets a CIEBasedABC color space array from the L<sup>*</sup>a<sup>*</sup>b<sup>*</sup> profile.</td>
</tr>
<tr valign=top>
<td width=24%>CSA_DEFG</td>
<td width=76%>Get a CIEBasedDEFG color space array from the CMYK profile.</td>
</tr>
<tr valign=top>
<td width=24%>CSA_CMYK</td>
<td width=76%>Get a CIEBasedCMYK color space array from the CMYK profile.</td>
</tr>
</table><br>

</dd>
<dt>
<i>pBuffer</i></dt>
<dd>
Pointer to a buffer in which the color space array is to be placed. If the <i>pBuffer</i> pointer is set to NULL, the function returns the required size of the buffer in the memory location pointed to by <i>pcbSize</i>.</dd>
<dt>
<i>pcbSize</i></dt>
<dd>
Pointer to a variable containing the size of the buffer in bytes. On return, it contains the number of bytes copied into the buffer.</dd>
<dt>
<i>pbBinary</i></dt>
<dd>
Pointer to a Boolean variable. If set to TRUE, the data copied could be binary. If set to FALSE, data should be encoded as ASCII85. On return, the memory location pointed to by <i>pbBinary</i> indicates whether the data returned actually is binary (TRUE) or ASCII85 (FALSE).
</dd>
</dl>
<h4>Return Values</h4>
<p>
If this function succeeds, the return value is TRUE. If this function succeeds, the return value is TRUE. It also returns TRUE if the <i>pBuffer</i> parameter is NULL and the size required for the buffer is copied into <i>pcbSize.</i></p>
<p>
If this function fails, the return value is FALSE. For extended error information, call <b>GetLastError</b>.</p>
<h4>Remarks</h4>
<p>
If the color space array is not available in the profile, the <b>GetPS2ColorSpaceArray</b> function builds a PostScript Level 2 color space array using the profile contents. This array can then be used as the operand for the PostScript Level2 setcolorspace operator.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in icm.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use mscms.lib.</p>
<h4>See Also</h4>
<p>
<a href="icm_156c.htm">Color Management Overview</a>, <a href="icm_4f77.htm">ICM 2.0 Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
