<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CMGetPS2ColorRenderingDictionary</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_cmgetps2colorrenderingdictionary"></a>CMGetPS2ColorRenderingDictionary</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>CMGetPS2ColorRenderingDictionary</b> function retrieves the PostScript Level 2 color rendering dictionary for a given <a href="icmglsry_8sky.htm#_win32_icm_2.0_glossary_rendering_intent_gloss">rendering intent</a> from a given profile.</p>
<pre><code><b>BOOL WINAPI CMGetPS2ColorRenderingDictionary(
  HPROFILE </b><i>hProfile</i><b>, </b>
<b>  DWORD </b><i>dwIntent</i><b>, </b>
<b>  LPBYTE </b><i>lpBuffer</i><b>, </b>
<b>  LPDWORD </b><i>lpcbSize</i><b>, </b>
<b>  LPBOOL </b><i>lpbBinary</i> 
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hProfile</i></dt>
<dd>
Specifies the profile to use.</dd>
<dt>
<i>dwIntent</i></dt>
<dd>
Specifies the rendering intent. Can be one of the following values:
<pre><code>INTENT_PERCEPTUAL
INTENT_SATURATION
INTENT_RELATIVE_COLORIMETRIC
INTENT_ABSOLUTE_COLORIMETRIC
 </code></pre>

<p>
For more information, see <a href="icm_3ng3.htm">Rendering Intents</a>.
</dd>
<dt>
<i>lpBuffer</i></dt>
<dd>
Pointer to a buffer in which the color rendering dictionary is to be placed. If the pointer is NULL, the function returns the size required for this buffer in the memory location pointed to by <i>lpcbSize</i>.</dd>
<dt>
<i>lpcbSize</i></dt>
<dd>
Pointer to a variable specifying the size of the buffer. On return, the variable contains the number of bytes actually copied to the buffer.</dd>
<dt>
<i>lpbBinary</i></dt>
<dd>
Points to a Boolean variable. If its value is TRUE, data returned could be binary, or if FALSE, the data should be ASCII85 encoded. On return, the value pointed to by <i>lpbBinary</i> indicates whether the data returned actually is binary or ASCII85.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If this function succeeds, the return value is TRUE. It also returns TRUE if it is called with <i>lpBuffer</i> set to NULL and the size of the required buffer is copied into <i>lpcbSize</i>.</p>
<p>
If this function fails, the return value is FALSE. When this occurs, the CMM should call <b>SetLastError</b> to set the last error to a valid error value defined in Winerror.h.</p>
<h4>Remarks</h4>
<p>
This function is optional for all CMMs.</p>
<p>
If a CMM does not support this function, Windows uses the default CMM to create the color rendering dictionary.</p>
<p>
If the color rendering dictionary tag is not present in the profile indicated by <i>hProfile</i>, the CMM creates the color rendering dictionary from the profile contents. The resulting color rendering dictionary can be used as the operand for the PostScript Level 2 <b>setcolorrendering</b> operator.</p>
<p>
This function fails if the profile indicated by <i>hProfile</i> does not have LUT tags associated with it. For more information on LUT tags, see the ICC Profile Format Specification available at www.color.org.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wingdi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use gdi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="icm_156c.htm">Color Management Overview</a>, <a href="icm_4f77.htm">ICM 2.0 Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
