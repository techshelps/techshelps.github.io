<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LS_CHALLENGE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_ls_challenge_str"></a>LS_CHALLENGE</h1>
<p>
<b>Notice:</b>This is preliminary documentation for technology that will be supported in future releases of Microsoft Windows.</p>
<p>
The <b>LS_CHALLENGE</b> structure is used for both the challenge and the response of the <a href="lsapi_36lw.htm"><b>LSRequest</b></a> and <a href="lsapi_1wpx.htm"><b>LSUpdate</b></a><b> </b>license service functions. It is the main structure in the challenge/response mechanism, and it is supported by all challenge/response protocols. </p>
<pre><code>typedef struct _LS_CHALLENGE { 
    LS_ULONG Protocol; 
    LS_ULONG Size; 
    LS_CHALLDATA ChallengeData; 
} LS_CHALLENGE; 
 
Members</code></pre>
<dl>
<dt>
<b>Protocol</b></dt>
<dd>
Specifies the protocol setting for license authentication. </dd>
<dt>
<b>Size</b></dt>
<dd>
Specifies the size, in bytes, of the <b>ChallengeData</b> (<a href="lsapi_88he.htm"><b>LS_CHALLDATA</b></a><b>) </b>structure. </dd>
<dt>
<b>ChallengeData</b></dt>
<dd>
Structure that contains the challenge that the application passes to the license system, and the response the license system returns to the application. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
Use the <a href="lsapi_88he.htm"><b>LS_CHALLDATA</b></a> structure to pass the challenge to the license system. The license system also returns the challenge response in the <b>LS_CHALLDATA</b> structure. Therefore, the number of bytes specified in the <b>Size</b> member on entry must be large enough to accommodate the challenge response. If the structure is not large enough to accommodate it, the error LS_BUFFER_TOO_SMALL is returned. </p>
<p>
Because the <b>LS_CHALLDATA</b> structure can vary depending on the protocol specified in the <b>Protocol</b> member, this<b> </b>structure must be a single contiguous entity in memory, and must not exceed the number of bytes specified in the <b>Size</b> member. It cannot contain any pointers. </p>
<p>
LSAPI passes the <b>Protocol</b>, the <b>Size</b> of the <a href="lsapi_88he.htm"><b>LS_CHALLDATA</b></a> structure, and the actual data contained in the structure to the license system. The license system, in turn, casts the byte sequence into the appropriate structure based on the <b>Protocol</b> specified. </p>
<p>
The constant value LS_BASIC_PROTOCOL specifies a standard basic challenge protocol that is supported by all LSAPI-compliant license systems. When the <b>Protocol</b> specified is LS_OUT_OF_BAND_PROTOCOL, there is no challenge and no response. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.51 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in lsapi.h.</p>
<h4>See Also</h4>
<p>
<a href="lsapi_8co5.htm">License Service Application Programming Interface Overview</a>, <a href="lsapi_7n3n.htm">LSAPI Structures</a>, <a href="lsapi_88he.htm"><b>LS_CHALLDATA</b></a>,<b> <a href="lsapi_91f6.htm">LS_MSG_DIGEST</a></b></p>
<p>&nbsp;</p></body>
</HTML>
