<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetVersion</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getversion"></a>GetVersion</h1>
<p>
The <b>GetVersion</b> function returns the current version number of the operating system. </p>
<p>
This function has been superseded by <a href="sysinfo_49iw.htm"><b>GetVersionEx</b></a>, which is the preferred method for obtaining system version number information. New applications should use <b>GetVersionEx</b>. The <b>GetVersionEx</b> function was developed because many existing applications err when examining the <b>DWORD </b>return value of a <b>GetVersion </b>function call, transposing the major and minor version numbers packed into that <b>DWORD</b>. The <b>GetVersionEx </b>function forces applications to explicitly examine each element of version information, and allows for future enhancements to that information.</p>
<pre><b><code>DWORD GetVersion(VOID)
 </code></b></pre>
<h4>Parameters</h4>
<p>
This function has no parameters. </p>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a <b>DWORD</b> value that contains the major and minor version numbers of the operating system in the low order word, and information about the operating system platform in the high order word. </p>
<p>
For all platforms, the low order word contains the version number of the operating system. The low-order byte of this word specifies the major version number, in hexadecimal notation. The high-order byte specifies the minor version (revision) number, in hexadecimal notation. </p>
<p>
To distinguish between operating system platforms, use the high order bit and the low order byte, as shown in the following table:</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=19%>Platform</th>
<th align=left width=24%>High order bit</th>
<th align=left width=57%>Low order byte (major version number)</th>
</tr>
<tr valign=top>
<td width=19%>Windows NT</td>
<td width=24%>zero</td>
<td width=57%>3 or 4</td>
</tr>
<tr valign=top>
<td width=19%>Windows 95 and Windows 98</td>
<td width=24%>1 </td>
<td width=57%>4</td>
</tr>
<tr valign=top>
<td width=19%>Win32s with Windows 3.1</td>
<td width=24%>1</td>
<td width=57%>3</td>
</tr>
</table><br>
<p>
For Windows NT and Win32s, the remaining bits in the high order word specify the build number. </p>
<p>
For Windows 95 and Windows 98, the remaining bits of the high order word are reserved.</p>
<h4>Remarks</h4>
<p>
This function does <i>not</i> return the current version number of MS-DOS. </p>
<p>
The following code fragment illustrates how to extract information from the <b>GetVersion</b> return value:</p>
<pre><code>
dwVersion = GetVersion();
 
// Get major and minor version numbers of Windows
dwWindowsMajorVersion =  (DWORD)(LOBYTE(LOWORD(dwVersion)));
dwWindowsMinorVersion =  (DWORD)(HIBYTE(LOWORD(dwVersion)));
// Get build numbers for Windows NT or Win32s
if (dwVersion &lt; 0x80000000)                // Windows NT
    dwBuild = (DWORD)(HIWORD(dwVersion));
else if (dwWindowsMajorVersion &lt; 4)        // Win32s
    dwBuild = (DWORD)(HIWORD(dwVersion) &amp; ~0x8000);
else         // Windows 95 -- No build numbers provided
    dwBuild =  0;
 </code></pre>
<h4>See Also</h4>
<p>
<a href="sysinfo_2jam.htm">System Information Overview</a>, <a href="sysinfo_8stv.htm">System Information Functions</a>, <a href="sysinfo_49iw.htm"><b>GetVersionEx</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
