<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VerInstallFile</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_verinstallfile"></a>VerInstallFile</h1>
<p>
The <b>VerInstallFile</b> function attempts to install the specified file based on information returned from the <a href="finstlib_3bz9.htm"><b>VerFindFile</b></a> function. <b>VerInstallFile</b> decompresses the file, if necessary, assigns a unique filename, and checks for errors, such as outdated files. </p>
<p>
As with the other file installation functions, <b>VerInstallFile</b> works only with Win32 file images. It does not work with 16-bit Windows file images. </p>
<pre><code><b>DWORD VerInstallFile(
  DWORD</b><i> uFlags</i><b>,          </b>// bit flags that condition function 
                         // behavior
<b>  LPTSTR</b><i> szSrcFileName</i><b>,  </b>// file to install
<b>  LPTSTR</b><i> szDestFileName</i><b>, </b>// new name of file to install
<b>  LPTSTR</b><i> szSrcDir</i><b>,       </b>// source directory of file to install
<b>  LPTSTR</b><i> szDestDir</i><b>,      </b>// directory in which to install file
<b>  LPTSTR</b><i> szCurDir</i><b>,       </b>// directory where file is currently 
                         // installed
<b>  LPTSTR</b><i> szTmpFile</i><b>,      </b>// receives name of temporary copy of file 
                         // used during installation
<b>  PUINT</b><i> lpuTmpFileLen</i>    // size of string in szTmpFile
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>uFlags</i></dt>
<dd>
Contains a bitmask of flags. This parameter can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=39%>Flag</th>
<th align=left width=61%>Description</th>
</tr>
<tr valign=top>
<td width=39%>VIFF_FORCEINSTALL</td>
<td width=61%>Installs the file regardless of mismatched version numbers. The function checks only for physical errors during installation.</td>
</tr>
<tr valign=top>
<td width=39%>VIFF_DONTDELETEOLD</td>
<td width=61%>Installs the file without deleting the previously installed file, if the previously installed file is not in the destination directory.</td>
</tr>
</table><br>


<p>
All other values are reserved. 
</dd>
<dt>
<i>szSrcFileName</i></dt>
<dd>
Pointer to the name of the file to be installed. This is the filename in the directory pointed to by the <i>szSrcDir</i> parameter; the filename can include only the filename and extension, not a path. </dd>
<dt>
<i>szDestFileName</i></dt>
<dd>
Pointer to the name <b>VerInstallFile</b> will give the new file upon installation. This filename may be different from the filename in the <i>szSrcFileName</i> directory. The new name should include only the filename and extension, not a path. </dd>
<dt>
<i>szSrcDir</i></dt>
<dd>
Pointer to a buffer that contains the name of the directory where the new file is found. </dd>
<dt>
<i>szDestDir</i></dt>
<dd>
Pointer to a buffer that contains the name of the directory where the new file should be installed. <a href="finstlib_3bz9.htm"><b>VerFindFile</b></a> returns this value in its <i>szDestDir</i> parameter. </dd>
<dt>
<i>szCurDir</i></dt>
<dd>
Pointer to a buffer that contains the name of the directory where the preexisting version of this file is found. <b>VerFindFile</b> returns this value in its <i>szCurDir</i> parameter. </dd>
<dt>
<i>szTmpFile</i></dt>
<dd>
Pointer to a buffer that should be empty upon the initial call to <b>VerInstallFile</b>. The function fills the buffer with the name of a temporary copy of the source file. The buffer should be at least _MAX_PATH characters long, although this is not required. </dd>
<dt>
<i>lpuTmpFileLen</i></dt>
<dd>
Pointer to a variable that contains the length of the <i>szTmpFile</i> buffer. This pointer must not be NULL. 
<p>
When the function returns, <i>lpuTmpFileLen</i> contains the size, in characters, of the data returned in <i>szTmpFile</i>, including the terminating null character. If the buffer is too small to contain all the data, <i>lpuTmpFileLen</i> will be the size of the buffer required to hold the data. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value is a bitmask that indicates exceptions. It can be one or more of the following values: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=38%>Value</th>
<th align=left width=62%>Meaning</th>
</tr>
<tr valign=top>
<td width=38%>VIF_TEMPFILE</td>
<td width=62%>The temporary copy of the new file is in the destination directory. The cause of failure is reflected in other flags.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_MISMATCH</td>
<td width=62%>The new and preexisting files differ in one or more attributes. This error can be overridden by calling <b>VerInstallFile</b> again with the VIFF_FORCEINSTALL flag set.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_SRCOLD</td>
<td width=62%>The file to install is older than the preexisting file. This error can be overridden by calling <b>VerInstallFile</b> again with the VIFF_FORCEINSTALL flag set.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_DIFFLANG</td>
<td width=62%>The new and preexisting files have different language or code-page values. This error can be overridden by calling <b>VerInstallFile</b> again with the VIFF_FORCEINSTALL flag set.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_DIFFCODEPG</td>
<td width=62%>The new file requires a code page that cannot be displayed by the version of the system currently running. This error can be overridden by calling <b>VerInstallFile</b> with the VIFF_FORCEINSTALL flag set.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_DIFFTYPE</td>
<td width=62%>The new file has a different type, subtype, or operating system from the preexisting file. This error can be overridden by calling <b>VerInstallFile</b> again with the VIFF_FORCEINSTALL flag set.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_WRITEPROT</td>
<td width=62%>The preexisting file is write-protected. This error can be overridden by calling <b>VerInstallFile</b> again with the VIFF_FORCEINSTALL flag set.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_FILEINUSE</td>
<td width=62%>The preexisting file is in use by the system and cannot be deleted.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_OUTOFSPACE</td>
<td width=62%>The function cannot create the temporary file due to insufficient disk space on the destination drive.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_ACCESSVIOLATION</td>
<td width=62%>A read, create, delete, or rename operation failed due to an access violation.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_SHARINGVIOLATION</td>
<td width=62%>A read, create, delete, or rename operation failed due to a sharing violation.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_CANNOTCREATE</td>
<td width=62%>The function cannot create the temporary file. The specific error may be described by another flag.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_CANNOTDELETE</td>
<td width=62%>The function cannot delete the destination file, or cannot delete the existing version of the file located in another directory. If the VIF_TEMPFILE bit is set, the installation failed, and the destination file probably cannot be deleted.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_CANNOTDELETECUR</td>
<td width=62%>The existing version of the file could not be deleted and VIFF_DONTDELETEOLD was not specified.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_CANNOTRENAME</td>
<td width=62%>The function cannot rename the temporary file, but already deleted the destination file.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_OUTOFMEMORY</td>
<td width=62%>The function cannot complete the requested operation due to insufficient memory. Generally, this means the application ran out of memory attempting to expand a compressed file.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_CANNOTREADSRC</td>
<td width=62%>The function cannot read the source file. This could mean that the path was not specified properly.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_CANNOTREADDST</td>
<td width=62%>The function cannot read the destination (existing) files. This prevents the function from examining the file's attributes.</td>
</tr>
<tr valign=top>
<td width=38%>VIF_BUFFTOOSMALL</td>
<td width=62%>The <i>szTmpFile</i> buffer was too small to contain the name of the temporary source file. When the function returns, <i>lpuTmpFileLen</i> contains the size of the buffer required to hold the filename.</td>
</tr>
</table><br>
<p>
All other values are reserved. </p>
<h4>Remarks</h4>
<p>
<b>VerInstallFile</b> copies the file from the source directory to the destination directory. If <i>szCurDir</i> indicates that a previous version of the file exists on the system, <b>VerInstallFile</b> compares the files' version stamp information. If the previously installed version of the file is more recent than the new version, or if the files' attributes are significantly different, for example, if they are in different languages, then <b>VerInstallFile</b> returns with one or more recoverable error codes. </p>
<p>
<b>VerInstallFile</b> leaves the temporary file in the destination directory. The application can either override the error or delete the temporary file. If the application overrides the error, <b>VerInstallFile</b> deletes the previously installed version and renames the temporary file with the original filename. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winver.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use version.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="finstlib_57y1.htm">File Installation Library Overview</a>, <a href="finstlib_0agj.htm">File Installation Library Functions</a>, <a href="finstlib_3bz9.htm"><b>VerFindFile</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
