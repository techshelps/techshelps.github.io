<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Policy Editors and Downloaders</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_policy_editors_and_downloaders"></a>Policy Editors and Downloaders</h2>
<p>
There are two administrative components involved in specifying policies: a policy editor and a policy downloader. A policy editor is an application that lets administrators specify registry settings for particular computers, users, and user groups, and a policy downloader is a small program installed on every client computer that merges the administrator's settings into the local registry. </p>
<p>
The policy editor uses a template file, which is a text file describing registry settings and specifying how the settings should appear in the policy editor's user interface. The policy editor creates a policy file, which is a single file containing policy settings for a number of computers, users, and user groups. The policy file is a registry hive that is created and manipulated using the Win32 API. Windows 95, Windows 98, Windows NT Server versions 4.0 and later, and the <i>Microsoft Windows NT Resource Kit</i> ship with a policy editor, the System Policy Editor (POLEDIT.EXE). You can create their own policy editors, but the editors must be able to read template files and be able to read and write policy files.</p>
<p>
Windows NT versions 4.0 and later, Windows 95, and Windows 98 provide a policy downloader. Developers can also create their own policy downloaders. Policy downloaders may be installed so that the system will call the installed component to do the downloading rather than doing so itself. Because the policy file format allows for extensions, developers may provide additional functionality.</p>
<p>&nbsp;</p></body>
</HTML>
