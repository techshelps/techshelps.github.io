<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ExpandEnvironmentStrings</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_expandenvironmentstrings"></a>ExpandEnvironmentStrings</h1>
<p>
The <b>ExpandEnvironmentStrings</b> function expands environment-variable strings and replaces them with their defined values. </p>
<pre><code><b>DWORD ExpandEnvironmentStrings(
  LPCTSTR</b><i> lpSrc</i><b>, </b>// pointer to string with environment variables
<b>  LPTSTR</b><i> lpDst</i><b>,  </b>// pointer to string with expanded environment 
                 // variables
<b>  DWORD</b><i> nSize</i>    // maximum characters in expanded string
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpSrc</i></dt>
<dd>
Pointer to a null-terminated string that might contain references to environment-variable strings of the form:
<pre><code>%variableName% 
 </code></pre>

<p>
For each such reference, the <b>%</b><i>variableName</i><b>%</b> portion is replaced with the current value of that environment variable. 

<p>
The replacement rules are the same as those used by the command interpreter. Case is ignored when looking up the environment-variable name. If the name is not found, the <b>%</b><i>variableName</i><b>%</b> portion is left undisturbed. 
</dd>
<dt>
<i>lpDst</i></dt>
<dd>
Pointer to a buffer to receive a copy of the source buffer, after all environment-variable name substitutions have been performed. </dd>
<dt>
<i>nSize</i></dt>
<dd>
Specifies the maximum number of characters that can be stored in the buffer pointed to by the <i>lpDst</i> parameter, including the terminating null character. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the number of bytes (ANSI version) or characters (Unicode version) stored in the destination buffer, including the terminating null character. If the destination buffer is too small to hold the expanded string, the return value is the required buffer size, in bytes or characters. </p>
<p>
If the function fails, the return value is zero. To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="sysinfo_2jam.htm">System Information Overview</a>, <a href="sysinfo_8stv.htm">System Information Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
