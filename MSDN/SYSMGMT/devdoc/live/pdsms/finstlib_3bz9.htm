<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VerFindFile</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_verfindfile"></a>VerFindFile</h1>
<p>
The <b>VerFindFile</b> function determines where to install a file based on whether it locates another version of the file in the system. The values <b>VerFindFile</b> returns in the specified buffers are used in a subsequent call to the <a href="finstlib_1z39.htm"><b>VerInstallFile</b></a> function. </p>
<p>
As with the other file installation functions, <b>VerFindFile</b> works only with Win32 file images. It does not work with 16-bit Windows file images. </p>
<pre><code><b>DWORD VerFindFile(
  DWORD</b><i> dwFlags</i><b>,      </b>// bit flags that condition function behavior
<b>  LPTSTR</b><i> szFileName</i><b>,  </b>// file to be installed
<b>  LPTSTR</b><i> szWinDir</i><b>,    </b>// Windows directory
<b>  LPTSTR</b><i> szAppDir</i><b>,    </b>// directory where related files are being 
                      // installed
<b>  LPTSTR</b><i> szCurDir</i><b>,    </b>// receives path of directory where file is 
                      // currently installed
<b>  PUINT</b><i> lpuCurDirLen</i><b>, </b>// size of string in szCurDir
<b>  LPTSTR</b><i> szDestDir</i><b>,   </b>// receives path of recommended destination 
                      // directory
<b>  PUINT</b><i> lpuDestDirLen</i> 
                      // size of string in szDestDir
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwFlags</i></dt>
<dd>
Contains a bitmask of flags. This parameter can be the following value: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=36%>Flag</th>
<th align=left width=64%>Description</th>
</tr>
<tr valign=top>
<td width=36%>VFFF_ISSHAREDFILE</td>
<td width=64%>The source file can be shared by multiple applications. An application can use this information to determine where the file should be copied.</td>
</tr>
</table><br>


<p>
All other values are reserved. 
</dd>
<dt>
<i>szFileName</i></dt>
<dd>
Pointer to the name of the file to be installed. The filename can include only the filename and extension, not a path. </dd>
<dt>
<i>szWinDir</i></dt>
<dd>
Pointer to the directory in which Windows is running or will be run. This string is returned by the <a href="sysinfo_4k55.htm"><b>GetWindowsDirectory</b></a> function. </dd>
<dt>
<i>szAppDir</i></dt>
<dd>
Pointer to the directory where the installation program is installing a set of related files. If the installation program is installing an application, this is the directory where the application will reside. This parameter also points to the application's current directory unless otherwise specified. </dd>
<dt>
<i>szCurDir</i></dt>
<dd>
Pointer to a buffer that receives the path to a current version of the file being installed. The path is a zero-terminated string. If a current version is not installed, the buffer will contain a zero-length string. The buffer should be at least _MAX_PATH characters long, although this is not required. </dd>
<dt>
<i>lpuCurDirLen</i></dt>
<dd>
Pointer to a variable that contains the length of the <i>szCurDir</i> buffer. This pointer must not be NULL. 
<p>
When the function returns, <i>lpuCurDirLen</i> contains the size, in characters, of the data returned in <i>szCurDir</i>, including the terminating null character. If the buffer is too small to contain all the data, <i>lpuCurDirLen</i> will be the size of the buffer required to hold the path. 
</dd>
<dt>
<i>szDestDir</i></dt>
<dd>
Pointer to a buffer that receives the path to the installation location recommended by <b>VerFindFile</b>. The path is a zero-terminated string. The buffer should be at least _MAX_PATH characters long, although this is not required. </dd>
<dt>
<i>lpuDestDirLen</i></dt>
<dd>
Pointer to a variable that contains the length of the <i>szDestDir</i> buffer. This pointer must not be NULL. 
<p>
When the function returns, <i>lpuDestDirLen</i> contains the size, in characters, of the data returned in <i>szDestDir</i>, including the terminating null character. If the buffer is too small to contain all the data, <i>lpuDestDirLen</i> will be the size of the buffer needed to hold the path. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value is a bitmask that indicates the status of the file. It can be one or more of the following values: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=33%>Value</th>
<th align=left width=67%>Meaning</th>
</tr>
<tr valign=top>
<td width=33%>VFF_CURNEDEST</td>
<td width=67%>The currently installed version of the file is not in the recommended destination.</td>
</tr>
<tr valign=top>
<td width=33%>VFF_FILEINUSE</td>
<td width=67%>The system is using the currently installed version of the file; therefore, the file cannot be overwritten or deleted.</td>
</tr>
<tr valign=top>
<td width=33%>VFF_BUFFTOOSMALL</td>
<td width=67%>At least one of the buffers was too small to contain the corresponding string. An application should check the output buffers to determine which buffer was too small.</td>
</tr>
</table><br>
<p>
All other values are reserved. </p>
<h4>Remarks</h4>
<p>
<b>VerFindFile</b> searches for a copy of the specified file by using the <b>OpenFile</b> function. However, it determines the system directory from the specified Windows directory, or searches the path. </p>
<p>
If the <i>dwFlags</i> parameter indicates that the file is private to this application (not VFFF_ISSHAREDFILE), <b>VerFindFile</b> recommends installing the file in the application's directory. Otherwise, if the system is running a shared copy of the system, the function recommends installing the file in the Windows directory. If the system is running a private copy of the system, the function recommends installing the file in the system directory. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winver.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use version.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="finstlib_57y1.htm">File Installation Library Overview</a>, <a href="finstlib_0agj.htm">File Installation Library Functions</a>, <a href="sysinfo_4k55.htm"><b>GetWindowsDirectory</b></a>, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_openfile">
</object><a href=JavaScript:alink_1.Click()><b>OpenFile</b></a>, <a href="finstlib_1z39.htm"><b>VerInstallFile</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
