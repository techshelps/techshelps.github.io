<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft SQL Server OLE DB Provider</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="mdrefsqlprovspec"></a>Microsoft SQL Server OLE DB Provider</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdrefSQLProvSpec_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdrefSQLProvSpec_S">
</object></p>
<p>
The Microsoft<sup>®</sup> SQL Server OLE DB Provider, SQLOLEDB, allows ADO to access Microsoft<sup>®</sup> SQL Server™.</p>
<p class=label>
<b>Connection String Parameters</b></p>
<p>
To connect to this provider, set the <i>Provider</i> argument to the <b>ConnectionString</b> property to:</p>
<pre><code>SQLOLEDB
</code></pre>
<p>
This value can also be set or read using the <b>Provider</b> property.</p>
<p>
The provider supports several provider-specific connection parameters in addition to those defined by ADO. As with the ADO connection properties, these provider-specific properties can be set via the <b>Properties</b> collection of a <b>Connection</b> or can be set as part of the <b>ConnectionString</b>.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Parameter</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%>Trusted Connection</td>
<td width=50%>User authentication mode. This can be set to <b>True</b> or <b>False</b>. The default value is <b>False</b>. If this property is set to <b>True</b> then SQLOLEDB uses Microsoft<sup>®</sup> Windows NT<sup>®</sup> Authentication Mode to authorize user access to the SQL Server database specified by the <b>Location</b> and <b>Datasource</b> property values. If this property is set to <b>False</b> then SQLOLEDB uses Mixed Mode to authorize user access to the SQL Server database. The SQL Server login and password are specified in the <b>User Id</b> and <b>Password</b> properties.</td>
</tr>
<tr valign=top>
<td width=50%>Current Language</td>
<td width=50%>A SQL Server language name. Identifies the language used for system message selection and formatting. The language must be installed on the SQL Server or opening the connection will fail.</td>
</tr>
<tr valign=top>
<td width=50%>Network Address</td>
<td width=50%>The network address of the SQL Server specified by the <b>Location</b> property.</td>
</tr>
<tr valign=top>
<td width=50%>Network Library</td>
<td width=50%>The name of the Net-Library (DLL) used to communicate with the SQL Server. The name should not include the path or the .dll file name extension. The default is provided by the SQL Server client configuration.</td>
</tr>
<tr valign=top>
<td width=50%>Use Procedure for Prepare</td>
<td width=50%>SQL Server stored procedure use. Defines the use of SQL Server temporary stored procedures to when Commands are prepared.</td>
</tr>
<tr valign=top>
<td width=50%>Auto Translate</td>
<td width=50%>OEM/ANSI character conversion. This property can be set to <b>True</b> or <b>False</b>. The default value is <b>True</b>. If this property is set to <b>True</b> then SQLOLEDB performs OEM/ANSI character conversion when multibyte character strings are retrieved from, or sent to, the SQL Server. If this property is set to <b>False</b> then SQLOLEDB does not perform OEM/ANSI character conversion on multibyte character string data.</td>
</tr>
<tr valign=top>
<td width=50%>Packet Size</td>
<td width=50%>A network packet size in bytes. The packet size property value must be between 512 and 32767. The default SQLOLEDB network packet size is 4096.</td>
</tr>
<tr valign=top>
<td width=50%>Application Name</td>
<td width=50%>The client application name.</td>
</tr>
<tr valign=top>
<td width=50%>Workstation ID</td>
<td width=50%>A string identifying the workstation.</td>
</tr>
</table><br>
<p class=label>
<b>Command Object Usage</b></p>
<p>
SQLOLEDB accepts an amalgam of ODBC, ANSI, and SQL Server-specific Transact-SQL as valid syntax. For example, the following SQL statement uses an ODBC SQL escape sequence to specify the LCASE string function:</p>
<pre><code>SELECT customerid={fn LCASE(CustomerID)} FROM Customers
  </code></pre>
<p>
LCASE returns a character string, converting all uppercase characters to their lowercase equivalents. The ANSI SQL string function LOWER performs the same operation, so the following SQL statement is an ANSI equivalent to the ODBC statement presented above:</p>
<pre><code>SELECT customerid=LOWER(CustomerID) FROM Customers
  </code></pre>
<p>
SQLOLEDB successfully processes either form of the statement when specified as text for a command.</p>
<p class=label>
<b>Stored Procedures</b></p>
<p>
When executing an SQL Server stored procedure using an SQLOLEDB command, use the ODBC procedure call escape sequence in the command text. SQLOLEDB then uses the remote procedure call mechanism of SQL Server to optimize command processing. For example, the following ODBC SQL statement is preferred command text over the Transact-SQL form:</p>
<p class=label>
<b>ODBC SQL</b></p>
<pre><code>{call SalesByCategory('Produce', '1995')}
  </code></pre>
<p class=label>
<b>Transact-SQL</b></p>
<pre><code>EXECUTE SalesByCategory 'Produce', '1995'
 </code></pre>
<p class=label>
<b>Recordset Behavior</b></p>
<p>
SQLOLEDB cannot use SQL Server cursors to support the multiple-rowsets result generated by many commands. If a consumer requests a recordset requiring SQL Server cursor support, an error occurs if the command text used generates more than a single recordset as its result. </p>
<p>
Scrollable SQLOLEDB recordsets are supported by SQL Server cursors. SQL Server imposes limitations on cursors that are sensitive to changes made by other users of the database. Specifically, the rows in some cursors cannot be ordered, and attempting to create a rowset using a command containing an SQL ORDER BY clause can fail. </p>
<p>
<B><b>See Also&nbsp;&nbsp;&nbsp;</b></B>For specific implementation details and functional information about the Microsoft SQL Server OLE DB Provider, consult the Microsoft SQL Server OLE DB Provider documentation in the Data Access SDK.</p>
</font></BODY>
</HTML>
