<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADO Tutorial</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h2><a name="mdhowadotutorial"></a>ADO Tutorial</h2>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowADOTutorial_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowADOTutorial_S">
</object></p>
<p>
This tutorial illustrates using the ADO programming model to query and update a data source. First, it describes the steps necessary to accomplish this task. Then the tutorial is repeated in Microsoft<sup>®</sup> Visual Basic<sup>®</sup>; Microsoft<sup>®</sup> Visual C++<sup>®</sup>, featuring VC++ Extensions; Microsoft<sup>®</sup> Visual Basic<sup>®</sup>, Scripting Edition; and Microsoft<sup>®</sup> Visual J++™, featuring ADO for Windows Foundation Classes (ADO/WFC). </p>
<p>
This tutorial is coded in different languages for two reasons:
<ul type=disc>
<li>
The documentation for ADO assumes the reader codes in Visual Basic. This makes the documentation convenient for Visual Basic programmers, but less useful for programmers who use other languages. <br><br></li>
<li>
If you are uncertain about a particular ADO feature and you know a little of another language, you may be able to resolve your question by looking for the same feature expressed in another language.</li>
</ul>
<p class=label>
<b>How the Tutorial is Presented</b></p>
<p>
This tutorial is based on the ADO programming model. It discusses each step of the programming model individually. In addition, it illustrates each step with a fragment of Visual Basic code. At the end, it restates and integrates the code fragments as a Visual Basic example.</p>
<p>
The code example is repeated in other languages, however, without the discussion. Each step in a given programming language tutorial is marked with the corresponding step in the programming model and descriptive tutorial. Use the number of the step to refer to the discussion in the descriptive tutorial.</p>
<p>
Because this tutorial consists of several small fragments of code, you cannot execute the code as written. </p>
<p>
The ADO programming model is restated below. Use it as a roadmap as you proceed through the tutorial. </p>
<p class=label>
<b>ADO Programming Model with Objects</b>
<ul type=disc>
<li>
Make a connection to a data source (<b>Connection</b>). Optionally, begin a transaction.<br><br></li>
<li>
Optionally, create an object to represent an SQL command (<b>Command</b>).<br><br></li>
<li>
Optionally, specify columns, tables, and values in the SQL command as variable parameters (<b>Parameter</b>).<br><br></li>
<li>
Execute the command (<b>Command</b>, <b>Connection</b>, or <b>Recordset</b>).<br><br></li>
<li>
If the command is row-returning, store the rows in a storage object (<b>Recordset</b>).<br><br></li>
<li>
Optionally, create a view of the storage object so you can sort, filter, and navigate the data (<b>Recordset</b>).<br><br></li>
<li>
Edit the data, either adding, deleting, or changing rows and columns (<b>Recordset</b>).<br><br></li>
<li>
If appropriate, update the data source with changes from the storage object (<b>Recordset</b>).<br><br></li>
<li>
If a transaction was used, accept or reject the changes made during the transaction. End the transaction (<b>Connection</b>).</li>
</ul>
<p>
<B><b>Next&nbsp;&nbsp;&nbsp;</b></B><a href="mdatut03_7tm6.htm">Step 1</a></p>
</font></BODY>
</HTML>
