<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 2: Create a Command (ADO Tutorial)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h3><a name="mdhowcreatecommand"></a>Step 2: Create a Command (ADO Tutorial)</h3>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowCreateCommand_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowCreateCommand_S">
</object></p>
<p class=label>
<b>You are Here...</b>
<ul type=disc>
<li>
Make a connection to a data source.<br><br></li>
<li>
<b>Optionally, create an object to represent an SQL query command.</b><br><br></li>
<li>
<b>Optionally, specify values in the SQL command as variable parameters.</b><br><br></li>
<li>
Execute the command. If the command is row-returning, store the rows in a storage object.<br><br></li>
<li>
Optionally, navigate, examine, manipulate, and edit the data.<br><br></li>
<li>
If appropriate, update the data source with changes from the storage object. Optionally, embed the update in a transaction.<br><br></li>
<li>
If a transaction was used, accept or reject the changes made during the transaction. End the transaction.</li>
</ul>
<p class=label>
<b>Discussion</b></p>
<p>
A query command requests that the data source return a <b>Recordset</b> object containing rows of requested information. Commands are typically written in SQL. 
<ol>
<li>
As mentioned, operands such as a <i>command string </i>can be represented as:<ul type=disc>
<li>
A literal string or a variable that represents the string. This tutorial could query for all the information in the <b>authors</b> table of the <b><i>pubs</i></b> database with the command string <code>"SELECT * from authors".</code><br><br></li>
<li>
An object that represents the command string. In this case, the value of a <b>Command</b> object <b>CommandText</b> property set to the command string.<pre><code>Command cmd = New ADODB.Command;
cmd.CommandText = "SELECT * from authors"
</code></pre>
</li>
</ul>
</li>
<li>
Specify a parameterized command string with the '<b>?</b>' placeholder.<p class=tl>
The content of an SQL string is fixed. However, you can create a <i>parameterized</i> command where '<b>?</b>' placeholder substrings can be replaced with parameters when a command is executed. </P><p class=tl>
You can optimize the performance of parameterized commands with the <b>Prepared</b> property. You can issue them repeatedly, changing only their parameters each time. </P><p class=tl>
For example, the following command string issues a query for all the authors whose last name is "Ringer": </P><pre><code>Command cmd = New ADODB.Command
cmd.<span class=cfe><b>CommandText</b></span> = "SELECT * from authors WHERE au_lname = ?"
</code></pre>
</li>
<li>
Specify a <b>Parameter</b> object. Append it to the <b>Parameters</b> collection.<p class=tl>
Each '<b>?</b>' placeholder is replaced by the value of a corresponding <b>Parameter</b> object in the <b>Command</b> object <b>Parameters</b> collection. Create a <b>Parameter</b> object with <i>Ringer</i> as the value, then append it to the <b>Parameters</b> collection:</P><pre><code>Parameter prm = New ADODB.Parameter
prm.Name = "au_lname"
prm.Type = adVarChar
prm.Direction = adInput
prm.Size = 40
prm.Value = "Ringer"
cmd.Parameters.Append prm
</code></pre>
</li>
<li>
Specify and append a <b>Parameter</b> object with the <b>CreateParameter</b> method.<p class=tl>
ADO now offers a convenient alternative means to create a <b>Parameter</b> object and append it to the <b>Parameters</b> collection in one step.</P><pre><code>cmd.Parameters.Append cmd.CreateParameter _
"au_lname", adVarChar, adInput, 40, "Ringer"
</code></pre>
<p class=tl>
However, this tutorial won't use a parameterized command, because you must use the <b>Command.Execute</b> method to substitute the parameters for the ‘<b>?</b>’ placeholders. But that method wouldn't allow us to specify <b>Recordset</b> cursor type and lock options. For that reason, use this code:</P><pre><code>Command cmd = New ADODB.Command;
cmd.CommandText = "SELECT * from authors"
</code></pre>
</li>
</ol>
<p>
For your information, this is the schema of the <b><i>authors</i></b> table:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=34%><b>Column Name</b></td>
<td class=label width=43%><b>Data Type(length)</b></td>
<td class=label width=23%><b>Nullable</b></td>
</tr>
<tr valign=top>
<td width=34%>au_id</td>
<td width=43%>ID (11)</td>
<td width=23%>no</td>
</tr>
<tr valign=top>
<td width=34%>au_lname</td>
<td width=43%>varchar(40)</td>
<td width=23%>no</td>
</tr>
<tr valign=top>
<td width=34%>au_fname</td>
<td width=43%>varchar(20)</td>
<td width=23%>no</td>
</tr>
<tr valign=top>
<td width=34%>phone</td>
<td width=43%>char(12)</td>
<td width=23%>no</td>
</tr>
<tr valign=top>
<td width=34%>address</td>
<td width=43%>varchar(40)</td>
<td width=23%>yes</td>
</tr>
<tr valign=top>
<td width=34%>city</td>
<td width=43%>varchar(20)</td>
<td width=23%>yes</td>
</tr>
<tr valign=top>
<td width=34%>state</td>
<td width=43%>char(2)</td>
<td width=23%>yes</td>
</tr>
<tr valign=top>
<td width=34%>zip</td>
<td width=43%>char(5)</td>
<td width=23%>yes</td>
</tr>
<tr valign=top>
<td width=34%>contract</td>
<td width=43%>bit</td>
<td width=23%>no</td>
</tr>
</table><br>
<p>
<B><b>Next&nbsp;&nbsp;&nbsp;</b></B><a href="mdatut03_7kv8.htm">Step 3</a></p>
</font></BODY>
</HTML>
