<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Solutions for Local Data Access</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="mdmsctheadoproblem"></a>Solutions for Local Data Access</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscTheADOProblem_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscTheADOProblem_S">
</object></p>
<h3>The Issue</h3>
<p>
You want a simple, consistent application programming interface (API) that enables applications to gain access to and modify a wide variety of data sources. A data source may be as simple as a text file, complex as a cluster of heterogeneous databases, or something yet to be invented. Furthermore, the API should not presume the means of gaining access to and manipulating the data source. </p>
<p>
Although these are your specific requirements, the typical data source is a relational database that supports the Open Database Connectivity (ODBC) standard and is manipulated with commands written in Structured Query Language (SQL).</p>
<p>
The general solution Microsoft offers to this problem is OLE DB, a set of Component Object Model (COM) interfaces that provide uniform access to data stored in diverse information sources. However, the OLE DB application programming interface is designed to provide optimal functionality in a wide variety of applications; it does not meet the requirement for simplicity. </p>
<p>
You need an API that is a bridge between the application and OLE DB. ActiveX<sup>®</sup> Data Objects (ADO) is that bridge.</p>
<h3>The Solution</h3>
<p>
ADO defines a programming model—the sequence of activities necessary to gain access to and update a data source. The programming model summarizes the entire functionality of ADO.&nbsp; </p>
<p>
The programming model suggests an object model—the set of <i>objects</i> that correspond to and implement the programming model. Objects possess <i>methods</i> that perform some operation on data, and <i>properties</i> that either represent some attribute of the data or control the behavior of some object method. </p>
<p>
Associated with objects are <i>events</i>, which are notifications that some operation has occurred, or is about to occur.</p>
<p>
<B><b>Next </b></B>… <a href="mdoverview_5tws.htm">Basic ADO Programming Model</a>.</p>
</font></BODY>
</HTML>
