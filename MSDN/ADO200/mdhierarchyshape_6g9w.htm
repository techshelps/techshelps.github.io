<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Shape Compute Command</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="mdmscshapecomputecommand"></a>Shape Compute Command</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscShapeComputeCommand_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscShapeComputeCommand_S">
</object></p>
<p>
A Shape <i>COMPUTE</i> command executes an aggregate function on the rows of the child <b>Recordset</b> to generate a parent <b>Recordset</b>, then assigns the child <b>Recordset</b> to the <b>Value</b> property of <b>Field</b> objects in the generated parent <b>Recordset</b>. </p>
<p class=label>
<b>Syntax</b></p>
<p>
"SHAPE {<i>child-command</i>} [[AS] <i>table-alias</i>]</p>
<p>
COMPUTE <i>aggregate-command-field-list</i></p>
<p>
[BY <i>grp-field-list</i>]"</p>
<p class=label>
<b>Description of parts</b></p>
<p>
The parts of this command are:
<ul type=disc>
<li>
<i>child-command</i>—A query command that returns a <b>Recordset</b> object. The command is issued to the underlying data provider, and its syntax depends on the requirements of that provider. This will typically be Structured Query Language (SQL), although ADO doesn't require any particular query language.<br><br></li>
<li>
<i>table-alias</i>—An alias used to refer to the <b>Recordset</b> returned by the <i>child-command.</i><br><br></li>
<li>
<i>aggregate-command-field-list</i>—A list of fields operated on by an aggregate function. The <b>Recordset</b> may be referred to by its <i>table-alias</i> in the aggregate function. You can also create a column to use as you desire, with the NEW operator. </li>
</ul>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Aggregate Function</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%>SUM(&lt;alias&gt;.&lt;child-field-name&gt;)</td>
<td width=50%>Calculates the sum of all values in the specified field.</td>
</tr>
<tr valign=top>
<td width=50%>AVG(&lt;alias&gt;.&lt;child-field-name&gt;)</td>
<td width=50%>Calculates the average of all values in the specified field.</td>
</tr>
<tr valign=top>
<td width=50%>MAX(&lt;alias&gt;.&lt;child-field-name&gt;)</td>
<td width=50%>Calculates the maximum value in the specified field.</td>
</tr>
<tr valign=top>
<td width=50%>MIN(&lt;alias&gt;.&lt;child-field-name&gt;)</td>
<td width=50%>Calculates the minimum value in the specified field.</td>
</tr>
<tr valign=top>
<td width=50%>COUNT(&lt;alias&gt;[.&lt;child-field-name&gt;])</td>
<td width=50%>Counts the number of rows in the specified field.</td>
</tr>
<tr valign=top>
<td width=50%>STDEV(&lt;alias&gt;.&lt;child-field-name&gt;)</td>
<td width=50%>Calculates the standard deviation in the specified field.</td>
</tr>
<tr valign=top>
<td width=50%>ANY(&lt;alias&gt;.&lt;child-Field-name&gt;)</td>
<td width=50%>The value of a column (where the value of the column is the same for all rows).</td>
</tr>
<tr valign=top>
<td width=50%>CALC(expression)</td>
<td width=50%>Calculates an arbitrary expression, but only on the current row.</td>
</tr>
<tr valign=top>
<td width=50%>NEW (field type [(width | scale [,precision])]</td>
<td width=50%>Adds an empty column of the specified type to the <b>Recordset</b>.</td>
</tr>
</table><br>
<ul type=disc>
<li>
<i>grp-field-list</i>—A list of columns specifying the order of rows in the child <b>Recordset</b>. If the <b>BY</b> clause is not specified, then only the result of the aggregate function will be returned. If the <b>BY</b> clause is specified, the child <b>Recordset</b> will be appended to the generated parent Recordset.</li>
</ul>
<p class=label>
<b>Operation</b></p>
<p>
The Client Cursor Engine will issue the <i>child-command</i> to the provider, which will return a child <b>Recordset</b>. </p>
<p>
The COMPUTE<b> </b>clause specifies an aggregate operation to be executed on specified columns (<i>aggregate-command-field-list</i>) of the child <b>Recordset</b>, such as summing all the values in a column, or finding the maximum value in a column. The aggregate operation creates a parent <b>Recordset</b>.</p>
<p>
If there is no <b>BY</b> clause, then the Shape command concludes. If there is a <b>BY</b> clause, the child <b>Recordset </b>will be appended to the parent <b>Recordset</b>. The rows of the child <b>Recordset</b> will be arranged in groups as specified in the <i>grp-field-list</i>.</p>
<p>
For example, assume you have a table, Demographics, consisting of State, City, and Population fields (the population figures are solely for illustration).</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=33%><b>State</b></td>
<td class=label width=33%><b>City</b></td>
<td class=label width=34%><b>Population</b></td>
</tr>
<tr valign=top>
<td width=33%>WA</td>
<td width=33%>Seattle</td>
<td width=34%>700,000</td>
</tr>
<tr valign=top>
<td width=33%>OR</td>
<td width=33%>Medford</td>
<td width=34%>200,000</td>
</tr>
<tr valign=top>
<td width=33%>OR</td>
<td width=33%>Portland</td>
<td width=34%>600,000</td>
</tr>
<tr valign=top>
<td width=33%>CA</td>
<td width=33%>Los Angeles</td>
<td width=34%>900,000</td>
</tr>
<tr valign=top>
<td width=33%>CA</td>
<td width=33%>San Diego</td>
<td width=34%>400,000</td>
</tr>
<tr valign=top>
<td width=33%>WA</td>
<td width=33%>Tacoma</td>
<td width=34%>500,000</td>
</tr>
<tr valign=top>
<td width=33%>OR</td>
<td width=33%>Corvallis</td>
<td width=34%>300,000</td>
</tr>
</table><br>
<p>
Now, issue this Shape command:</p>
<pre><code>&nbsp;&nbsp;&nbsp;&nbsp;rst.Open    "SHAPE&nbsp; {select * from demographics} 
               COMPUTE (SUM(population)) AS chapter 
               BY state", 
               connection
</code></pre>
<p>
This command opens a parent <b>Recordset</b>. Because you specified the <b>BY</b> clause, a hidden column was appended, with references to <b>Recordset</b> objects that provide detail for each row in the parent <b>Recordset</b>. </p>
<p>
The child <b>Recordset</b> detail rows will be grouped, but not in any particular order. That is, the groups will not automatically be in alphabetical or numerical order. </p>
<p>
An arbitrary name will be generated for the appended column. </p>
<p>
You can now navigate the opened parent <b>Recordset</b>, and access the child detail <b>Recordset </b>objects. See <a href="mdhierarchyshape_7zuc.htm">Accessing Rows in a Hierarchical Recordset</a>.</p>
<p class=label>
<b>Resultant Parent and Child Detail Recordsets</b></p>
<p class=label>
<b>Parent</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=33%><b>State</b></td>
<td class=label width=33%><b>SUM (Population)</b></td>
<td class=label width=34%><b>(Appended field)</b></td>
</tr>
<tr valign=top>
<td width=33%>CA</td>
<td width=33%>1,300,000</td>
<td width=34%>Reference to child1</td>
</tr>
<tr valign=top>
<td width=33%>WA</td>
<td width=33%>1,200,000</td>
<td width=34%>Reference to child2</td>
</tr>
<tr valign=top>
<td width=33%>OR</td>
<td width=33%>1,100,000</td>
<td width=34%>Reference to child3</td>
</tr>
</table><br>
<p class=label>
<b>Child1</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=33%><b>State</b></td>
<td class=label width=33%><b>City</b></td>
<td class=label width=34%><b>Population</b></td>
</tr>
<tr valign=top>
<td width=33%>CA</td>
<td width=33%>Los Angeles</td>
<td width=34%>900,000</td>
</tr>
<tr valign=top>
<td width=33%>CA</td>
<td width=33%>San Diego</td>
<td width=34%>400,000</td>
</tr>
</table><br>
<p class=label>
<b>Child2</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=33%><b>State</b></td>
<td class=label width=33%><b>City</b></td>
<td class=label width=34%><b>Population</b></td>
</tr>
<tr valign=top>
<td width=33%>WA</td>
<td width=33%>Seattle</td>
<td width=34%>700,000</td>
</tr>
<tr valign=top>
<td width=33%>WA</td>
<td width=33%>Tacoma</td>
<td width=34%>500,000</td>
</tr>
</table><br>
<p class=label>
<b>Child3</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=33%><b>State</b></td>
<td class=label width=33%><b>City</b></td>
<td class=label width=34%><b>Population</b></td>
</tr>
<tr valign=top>
<td width=33%>OR</td>
<td width=33%>Medford</td>
<td width=34%>200,000</td>
</tr>
<tr valign=top>
<td width=33%>OR</td>
<td width=33%>Portland</td>
<td width=34%>600,000</td>
</tr>
<tr valign=top>
<td width=33%>OR</td>
<td width=33%>Corvallis</td>
<td width=34%>300,000</td>
</tr>
</table><br>
</font></BODY>
</HTML>
