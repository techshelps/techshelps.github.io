<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>State Property Example</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="mdprostatex"></a>State Property Example</h1>
<p>
This example uses the <b>State</b> property to display a message while asynchronous connections are opening and asynchronous commands are executing.</p>
<pre><code>Public Sub StateX()

   Dim cnn1 As ADODB.Connection
   Dim cnn2 As ADODB.Connection
   Dim cmdChange As ADODB.Command
   Dim cmdRestore As ADODB.Command
   Dim strCnn As String
   
   ' Open two asynchronous connections, displaying
   ' a message while connecting.
   Set cnn1 = New ADODB.Connection
   Set cnn2 = New ADODB.Connection
   strCnn = "Provider=sqloledb;" &amp; _
      "Data Source=srv;Initial Catalog=pubs;User Id=sa;Password=; "
      
   cnn1.Open strCnn, , , adAsyncConnect
   While (cnn1.<i>State</i> = adStateConnecting)
      Debug.Print "Opening first connection...."
   Wend
   
   cnn2.Open strCnn, , , adAsyncConnect
   While (cnn2.<i>State</i> = adStateConnecting)
      Debug.Print "Opening second connection...."
   Wend
   
   ' Create two command objects.
   Set cmdChange = New ADODB.Command
   cmdChange.ActiveConnection = cnn1
   cmdChange.CommandText = "UPDATE titles SET type = 'self_help' " &amp; _
      "WHERE type = 'psychology'"
   
   Set cmdRestore = New ADODB.Command
   cmdRestore.ActiveConnection = cnn2
   cmdRestore.CommandText = "UPDATE titles SET type = 'psychology' " &amp; _
      "WHERE type = 'self_help'"
   
   ' Executing the commands, displaying a message
   ' while they are executing.
   cmdChange.Execute , , adAsyncExecute
   While (cmdChange.<i>State</i> = adStateExecuting)
      Debug.Print "Change command executing...."
   Wend
   
   cmdRestore.Execute , , adAsyncExecute
   While (cmdRestore.<i>State</i> = adStateExecuting)
      Debug.Print "Restore command executing...."
   Wend
   
   cnn1.Close
   cnn2.Close

End Sub</code></pre>
</font></BODY>
</HTML>
