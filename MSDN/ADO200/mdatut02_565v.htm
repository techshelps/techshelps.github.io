<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Address Book Command Buttons</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="mdhowabcombuttons"></a>Address Book Command Buttons</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowABComButtons_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowABComButtons_S">
</object></p>
<p>
The Address Book application includes the following command buttons:
<ul type=disc>
<li>
A <a href="#mdhowfindbutton">Find</a> button to submit a query to the database.<br><br></li>
<li>
A <a href="#mdhowclear">Clear</a> button to clear the text boxes before starting a new search.<br><br></li>
<li>
An <a href="#mdhowupdateprofile">Update Profile</a> button to save changes to an employee record.<br><br></li>
<li>
A <a href="#mdhowcancelchanges">Cancel Changes</a> button to discard changes. </li>
</ul>

<h3><a name="mdhowfindbutton"></a>Find Button</h3>
<p>
The following HTML statement defines the <b>Find</b> button. This HTML statement appears before the VBScript section of the program. Copy and paste this control just following the comment for HTML command buttons.</p>
<pre><code>&lt;INPUT TYPE=BUTTON NAME="Find"    VALUE="Find"&gt;
</code></pre>

<h4><a name="mdhowfindonclick"></a>Find_OnClick Sub Procedure</h4>
<p>
Clicking the <b>Find </b>button activates the VBScript Find_OnClick Sub procedure, which builds and sends the SQL query. When you complete the project, click this button to fill the data grid.</p>
<p class=label>
<b>Building the SQL Query</b></p>
<p>
The first part of the Find_OnClick Sub procedure builds the SQL query, one phrase at a time, by appending text strings to a global SQL SELECT statement. It begins by setting the variable <code>myQuery</code> to an SQL SELECT statement that requests all rows of data from the data source table. Copy and paste this code beneath the opening SCRIPT tag.</p>
<pre><code>Sub Find_OnClick

myQuery = "Select FirstName, LastName, Title, Type, Email, " _
   &amp; "ManagerEmail, Building, Room, Phone from Employee"
</code></pre>
<p>
Next, the Sub procedure scans each of the four <a href="mdatut02_2n8z.htm">input boxes</a> of the Address Book. Copy and paste this code within the Find subroutine.</p>
<pre><code>   If (SFirst.Value &lt;&gt; "") Then
      myQuery = myQuery + " where FirstName like '" + SFirst.Value + "%'"
   End If

   IF (SLast.Value &lt;&gt; "") Then
      myQuery = myQuery + " where LastName like '" + SLast.Value + "%'"
   End If

   If (STitle.Value &lt;&gt; "") Then
      myQuery = myQuery + " where Title like '" + STitle.Value + "%'"
   End If

   If (SEmail.Value &lt;&gt; "") Then
      myQuery = myQuery + " where Email like '" + SEmail.Value + "%'"
   End If
</code></pre>
<p>
Each <b>If</b> statement scans its corresponding text box for text. If the text box contains text, the <b>Then </b>statement executes, appending the quoted text to the global SELECT statement contained in the variable <code>myQuery</code>. Because the program uses the word <code>like</code> in building the SQL statements, the queries are substring searches rather than exact matches.</p>
<p>
For example, if the <b>Last Name</b> box contained the entry "Berge" and the <b>Title</b> box contained the entry "Program Manager", the SQL statement (value of <code>myQuery</code>) would read:</p>
<pre><code>Select FirstName, LastName, Title, Email, Building, Room, Phone from Employee where lastname like 'Berge%' and title like 'Program Manager%'
</code></pre>
<p>
If the query was successful, all persons with a last name containing the text "Berge" (such as Berge and Berger), with a title containing the words "Program Manager" (for example, Program Manager, Advanced Technologies) are displayed in the <a href="mdatut02_3rc4.htm">data grid</a>.</p>
<p class=label>
<b>Preparing and Sending the Query</b></p>
<p>
The last part of the Find_OnClick Sub procedure consists of two statements. The first statement assigns the <a href="mdapro06_2ka8.htm">SQL</a> query property of the <a href="mdaobj01_1hyk.htm">RDS.DataControl</a> object equal to the dynamically built SQL query. The second statement causes the <b>RDS.DataControl </b>object (<code>SControl</code>) to query the database, and then display the new results of the query in the grid. Copy and paste this code into the Find subroutine.</p>
<pre><code>   SControl.SQL = myQuery
   SControl.Refresh
End Sub
</code></pre>

<h3><a name="mdhowclear"></a>Clear Button</h3>
<p>
The following HTML statement defines the <b>Clear</b> button. This HTML statement appears before the VBScript section of the program. Copy and paste this code just following the <b>Find HTML</b> button.</p>
<pre><code>&lt;INPUT TYPE=BUTTON NAME="Clear"    VALUE="Clear"&gt;
</code></pre>
<p>
The INPUT tag defines an element, such as a button, option button, check box, or text. You use the <b><i>TYPE</i></b> parameter to specify the element, which in this case, is a button. The <b><i>NAME</i></b> parameter defines what the button will be called in code. The <b><i>VALUE</i></b> parameter specifies the labels associated with the button (<b>Clear</b>) that will be displayed on the page.</p>

<h4><a name="mdhowclearonclick"></a>Clear_OnClick Sub Procedure</h4>
<p>
Clicking the <b>Clear</b> button activates the VBScript Clear_OnClick Sub procedure. Copy and paste this code between the SCRIPT and /SCRIPT tags.</p>
<pre><code>Sub Clear_OnClick
   SFirst.Value=""
   SLast.Value=""
   STitle.Value=""
   SEmail.Value=""
End Sub
</code></pre>
<p>
When the Sub procedure is executed, it initializes each of the four HTML <a href="mdatut02_2n8z.htm">input boxes</a>, which it identifies by the <b><i>NAME</i></b> parameter of the ID tag. The property <code>.Value</code> indicates characters in the text box object that are displayed on the Web page. The procedure replaces any text with a zero length string ("") in preparation for a new find.</p>

<h3><a name="mdhowupdateprofile"></a>Update Profile Button</h3>
<p>
The following code defines the <b>Update Profile</b> button. This HTML statement appears before the VBScript section of the program. Copy and paste this HTML control just following the <b>Clear</b> button.</p>
<pre><code>&lt;INPUT TYPE=BUTTON NAME="Update"    VALUE="Update Profile"&gt;
</code></pre>
<p>
The INPUT tag defines an element, such as a button, option button, check box, or text. The <b><i>NAME</i></b> parameter defines what the button will be called in code. You use the <b><i>TYPE</i></b> parameter to specify the type of form element—in this case, a button. The <b><i>VALUE</i></b> parameter specifies the label associated with the button (<b>Update Profile</b>).</p>

<h4><a name="mdhowupdateonclick"></a>Update_OnClick Sub Procedure</h4>
<p>
Clicking the <b>Update Profile</b> button activates the VBScript Update_OnClick Sub procedure, which executes the <a href="mdaobj01_1hyk.htm">RDS.DataControl</a> object's (<code>SControl</code>) <a href="mdamth03_3a5v.htm">SubmitChanges</a> and <a href="mdamth03_0rag.htm">Refresh</a> methods. Copy and paste this code between the SCRIPT and /SCRIPT tags.</p>
<pre><code>Sub Update_OnClick
   SControl.SubmitChanges
   SControl.Refresh
End Sub
</code></pre>
<p>
When <code>SControl.SubmitChanges</code> executes, the program packages all the update information and sends it to the server via HTTP. The update is all-or-nothing; if a part of the update isn't successful, none of the changes is made, and a status message is returned. <code>SControl.Refresh </code>isn't necessary after <b>SubmitChanges </b>with Remote Data Service 1.5, but it ensures fresh data. </p>

<h3><a name="mdhowcancelchanges"></a>Cancel Changes Button</h3>
<p>
The following code defines the <b>Cancel Changes </b>button. This HTML statement appears before the VBScript section of the program. Copy and paste this HTML control just following the <b>Update</b> button.</p>
<pre><code>&lt;INPUT TYPE=BUTTON NAME="Cancel"    VALUE="Cancel Changes"&gt;
</code></pre>

<h4><a name="mdhowcancelonclick"></a>Cancel_OnClick Sub Procedure</h4>
<p>
Clicking <b>Cancel Changes</b> activates the VBScript Cancel_OnClick Sub procedure, which executes the <b>RDS.DataControl</b> object's (<code>SControl)</code> <a href="mdamth01_6cf8.htm">CancelUpdate</a> method. Copy and paste this code between the SCRIPT and /SCRIPT tags.</p>
<pre><code>Sub Cancel_OnClick
     SControl.CancelUpdate
End Sub
</code></pre>
<p>
When<code> SControl.CancelUpdate</code> executes, it discards any edits that a user has made to an employee record on the <a href="mdatut02_3rc4.htm">data grid</a> since the last query or update. It restores the original values. </p>
</font></BODY>
</HTML>
