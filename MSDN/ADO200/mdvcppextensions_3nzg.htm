<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADO VC++ Extensions</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="mdmscadovcextensionsdetail"></a>ADO VC++ Extensions</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscADOVCExtensionsDetail_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscADOVCExtensionsDetail_S">
</object></p>
<p>
Programmers using Microsoft<sup>®</sup> Visual C++<sup>®</sup> to retrieve data with ADO must tediously convert data returned as a VARIANT data type into a C++ data type, then store the converted data in a class or structure. The process of retrieving C++ data through a VARIANT data type is cumbersome and diminishes performance.</p>
<p>
Version 2.0 of ADO provides an interface that supports retrieving data into native C/C++ data types without going through a VARIANT. In addition, preprocessor macros that simplify using the interface are provided. </p>
<p>
The result is a tool that is flexible, easier to use, and has great performance.</p>
<p class=label>
<b>ADO Without Extensions</b></p>
<p>
A common C/C++ client scenario is to bind a record in a <b>Recordset</b> to a C/C++ struct/class containing native C/C++ types. When going through VARIANTs, this involves writing conversion code from VARIANT to C/C++ native types. The ADO VC++ Extensions are targeted at making this scenario much easier for the VC++ programmer.</p>
<p>
See <a href="mdvcppextensions_4flf.htm">Example: ADO Without Extensions</a> as an example of how fetching data through VARIANTs is cumbersome in C or C++.</p>
</font></BODY>
</HTML>
