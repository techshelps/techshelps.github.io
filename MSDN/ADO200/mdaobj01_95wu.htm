<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Connection Object (ADO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="mdobjconnection"></a>Connection Object (ADO)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdobjConnection_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Collections">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdobjConnection_CO">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdobjConnection_X">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdobjConnection_P">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdobjConnection_M">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdobjConnection_S">
</object></p>
<p>
A <b>Connection</b> object represents an open connection to a data source.</p>
<p>
<img src="objconn.gif" border=0><br>
<img src="parmult.gif" border=0><a href="mdaobj02_9pwz.htm"><img src="colerror.gif" border=0></a><br>
<img src="parmult.gif" border=0><a href="mdaobj01_9mn8.htm"><img src="objcomma.gif" border=0></a><br>
<img src="parchild.gif" border=0><a href="mdaobj01_2zdv.htm"><img src="objrecor.gif" border=0></a></p>
<p class=label>
<b>Remarks</b></p>
<p>
A <b>Connection</b> object represents a unique session with a data source. In the case of a client/server database system, it may be equivalent to an actual network connection to the server. Depending on the functionality supported by the provider, some collections, methods, or properties of a <b>Connection</b> object may not be available.</p>
<p>
Using the collections, methods, and properties of a <b>Connection</b> object, you can do the following:
<ul type=disc>
<li>
Configure the connection before opening it with the <b>ConnectionString</b>, <b>ConnectionTimeout</b>, and <b>Mode</b> properties.<br><br></li>
<li>
Set the <b>CursorLocation</b> property to invoke the Client Cursor Provider, which supports batch updates.<br><br></li>
<li>
Set the default database for the connection with the <b>DefaultDatabase</b> property.<br><br></li>
<li>
Set the level of isolation for the transactions opened on the connection with the <b>IsolationLevel</b> property.<br><br></li>
<li>
Specify an OLE DB provider with the <b>Provider</b> property.<br><br></li>
<li>
Establish, and later break, the physical connection to the data source with the <b>Open</b> and <b>Close</b> methods.<br><br></li>
<li>
Execute a command on the connection with the <b>Execute</b> method and configure the execution with the <b>CommandTimeout</b> property.<br><br></li>
<li>
Manage transactions on the open connection, including nested transactions if the provider supports them, with the <b>BeginTrans</b>, <b>CommitTrans</b>, and <b>RollbackTrans</b> methods and the <b>Attributes</b> property.<br><br></li>
<li>
Examine errors returned from the data source with the <b>Errors</b> collection.<br><br></li>
<li>
Read the version from the ADO implementation in use with the <b>Version</b> property.<br><br></li>
<li>
Obtain schema information about your database with the <b>OpenSchema</b> method.</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To execute a query without using a <b>Command</b> object, pass a query string to the <b>Execute</b> method of a <b>Connection</b> object. However, a <b>Command</b> object is required when you want to persist the command text and re-execute it, or use query parameters.</p>
<p>
You can create <b>Connection</b> objects independently of any other previously defined object.</p>
<p class=indent>
<b>Note</b>&nbsp;&nbsp;&nbsp;You can execute commands or stored procedures as if they were native methods on the <b>Connection</b> object. </p>
<p class=indent>
To execute a command, give the command a name using the <b>Command</b> object <b>Name</b> property. Set the <b>Command</b> object’s <b>ActiveConnection</b> property to the connection. Then issue a statement where the command name is used as if it were a method on the <b>Connection</b> object, followed by any parameters, followed by a <b>Recordset</b> object if any rows are returned. Set the <b>Recordset</b> properties to customize the resulting recordset. For example:</p>
<pre><code>Dim cnn As New ADODB.Connection
Dim cmd As New ADODB.Command
Dim rst As New ADODB.Recordset
...
cnn.Open "..."
cmd.Name = "yourCommandName"
cmd.ActiveConnection = cnn
...
'Your command name, any parameters, and an optional Recordset.
cnn.<span class=cfe><b>yourCommandName</b></span> "parameter", rst</code></pre>
<p class=indent>
</p>
<p class=indent>
To execute a stored procedure, issue a statement where the stored procedure name is used as if it were a method on the <b>Connection</b> object, followed by any parameters. ADO will make a "best guess" of parameter types. For example:</p>
<pre><code>Dim cnn As New ADODB.Connection
...
'Your stored procedure name and any parameters.
cnn.<span class=cfe><b>sp_yourStoredProcedureName</b></span> "parameter"</code></pre>
</font></BODY>
</HTML>
