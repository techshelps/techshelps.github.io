<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 6: Conclude the Update (ADO Tutorial)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h3><a name="mdhowconcludeupdate"></a>Step 6: Conclude the Update (ADO Tutorial)</h3>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowConcludeUpdate_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowConcludeUpdate_S">
</object></p>
<p class=label>
<b>You are Here...</b>
<ul type=disc>
<li>
Make a connection to a data source.<br><br></li>
<li>
Optionally, create an object to represent an SQL query<b> </b>command.<br><br></li>
<li>
Optionally, specify values in the SQL command as variable parameters.<br><br></li>
<li>
Execute the command. If the command is row-returning, store the rows in a storage object.<br><br></li>
<li>
Optionally, navigate, examine, manipulate, and edit the data.<br><br></li>
<li>
If appropriate, update the data source with changes from the storage object. Optionally, embed the update in a transaction.<br><br></li>
<li>
<b>If a transaction was used, accept or reject the changes made during the transaction. End the transaction.</b></li>
</ul>
<p class=label>
<b>Discussion</b></p>
<p>
Imagine that the batch update concluded with errors. How you resolve the errors depends on the nature and severity of the error and the logic of your application. However, if the database is shared with other users, one typical error is that someone else modifies the field before you do. This type of error is called a <i>conflict. </i>ADO detects this situation and reports an error. </p>
<p>
In this tutorial, this step has two parts: If there are no update errors, <i>commit</i> the transaction. This concludes the update.</p>
<p>
If there are errors, they will be trapped in an error-handling routine. Filter the <b>Recordset</b> with the <b>adFilterConflictingRecords</b> constant so only the conflicting rows are visible. The error-resolution strategy is merely to print the author's first and last names (<b>au_fname</b> and <b>au_lname</b> ). Then <i>roll back</i> the transaction, discarding the successful updates. This concludes the update.</p>
<pre><code>...
conn.CommitTrans
...
On Error
rs.Filter = adFilterConflictingRecords
rs.MoveFirst
Do While Not rs.EOF
   Debug.Print "Conflict: Name: " &amp; rs!au_fname " " &amp; rs!au_lname
   rs.MoveNext
Loop
conn.Rollback
Resume Next
...
</code></pre>
<p>
<b>This is the end of the tutorial. </b></p>
</font></BODY>
</HTML>
