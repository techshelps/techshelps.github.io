<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Execute, Requery, and Clear Methods Example</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="mdmthexecutex"></a>Execute, Requery, and Clear Methods Example</h1>
<p>
This example demonstrates the <b>Execute</b> method when run from both a <b>Command</b> object and a <b>Connection</b> object. It also uses the <b>Requery</b> method to retrieve current data in a recordset, and the <b>Clear</b> method to clear the contents of the <b>Errors</b> collection. The ExecuteCommand and PrintOutput procedures are required for this procedure to run.</p>
<pre><code>Public Sub ExecuteX()

   Dim strSQLChange As String
   Dim strSQLRestore As String
   Dim strCnn As String
   Dim cnn1 As ADODB.Connection
   Dim cmdChange As ADODB.Command
   Dim rstTitles As ADODB.Recordset
   Dim errLoop As ADODB.Error

   ' Define two SQL statements to execute as command text.
   strSQLChange = "UPDATE Titles SET Type = " &amp; _
      "'self_help' WHERE Type = 'psychology'"
   strSQLRestore = "UPDATE Titles SET Type = " &amp; _
      "'psychology' WHERE Type = 'self_help'"

   ' Open connection.
      strCnn = "Provider=sqloledb;" &amp; _
      "Data Source=srv;Initial Catalog=pubs;User Id=sa;Password=; "
   Set cnn1 = New ADODB.Connection
   cnn1.Open strCnn

   ' Create command object.
   Set cmdChange = New ADODB.Command
   Set cmdChange.ActiveConnection = cnn1
   cmdChange.CommandText = strSQLChange
   
   ' Open titles table.
   Set rstTitles = New ADODB.Recordset
   rstTitles.Open "titles", cnn1, , , adCmdTable

   ' Print report of original data.
   Debug.Print _
      "Data in Titles table before executing the query"
   PrintOutput rstTitles

   ' Clear extraneous errors from the Errors collection.
   cnn1.Errors.Clear

   ' Call the ExecuteCommand subroutine to execute cmdChange command.
   ExecuteCommand cmdChange, rstTitles
   
   ' Print report of new data.
   Debug.Print _
      "Data in Titles table after executing the query"
   PrintOutput rstTitles

   ' Use the Connection object's execute method to 
   ' execute SQL statement to restore data. Trap for 
   ' errors, checking the Errors collection if necessary.
   On Error GoTo Err_Execute
   cnn1.Execute strSQLRestore, , adExecuteNoRecords
   On Error GoTo 0

   ' Retrieve the current data by requerying the recordset.
   rstTitles.Requery

   ' Print report of restored data.
   Debug.Print "Data after executing the query " &amp; _
      "to restore the original information"
   PrintOutput rstTitles

   rstTitles.Close
   cnn1.Close
   
   Exit Sub
   
Err_Execute:

   ' Notify user of any errors that result from
   ' executing the query.
   If Errors.Count &gt; 0 Then
      For Each errLoop In Errors
         MsgBox "Error number: " &amp; errLoop.Number &amp; vbCr &amp; _
            errLoop.Description
      Next errLoop
   End If
   
   Resume Next

End Sub

Public Sub ExecuteCommand(cmdTemp As ADODB.Command, _
   rstTemp As ADODB.Recordset)

   Dim errLoop As Error
   
   ' Run the specified Command object. Trap for 
   ' errors, checking the Errors collection if necessary.
   On Error GoTo Err_Execute
   cmdTemp.Execute
   On Error GoTo 0

   ' Retrieve the current data by requerying the recordset.
   rstTemp.Requery
   
   Exit Sub

Err_Execute:

   ' Notify user of any errors that result from
   ' executing the query.
   If Errors.Count &gt; 0 Then
      For Each errLoop In Errors
         MsgBox "Error number: " &amp; errLoop.Number &amp; vbCr &amp; _
            errLoop.Description
      Next errLoop
   End If
   
   Resume Next

End Sub

Public Sub PrintOutput(rstTemp As ADODB.Recordset)

   ' Enumerate Recordset.
   Do While Not rstTemp.EOF
      Debug.Print "&nbsp; " &amp; rstTemp!Title &amp; _
         ", " &amp; rstTemp!Type
      rstTemp.MoveNext
   Loop

End Sub
</code></pre>
<h2>VBScript Version</h2>
<p>
Here is the same example written in VBScript to be used in an Active Server Page (ASP). To view this fully functional example, you need to create a system Data Source Name (DSN) called AdvWorks using the data source AdvWorks.mdb installed with IIS and located at C:\InetPub\ASPSamp\AdvWorks. This is a Microsoft Access database file. Use <b>Find</b> to locate the file Adovbs.inc and place it in the directory you plan to use. Cut and paste the following code to Notepad or another text editor and save it as Execute.asp. You can view the result in any client browser.</p>
<pre><code>&lt;!-- #Include file="ADOVBS.INC" --&gt;
&lt;HTML&gt;&lt;HEAD&gt;
&lt;TITLE&gt;ADO Execute Method&lt;/TITLE&gt;&lt;/HEAD&gt;

&lt;BODY&gt; 
&lt;FONT FACE="MS SANS SERIF" SIZE=2&gt;
&lt;Center&gt;&lt;H3&gt;ADO Execute Method&lt;/H3&gt;&lt;H4&gt;Recordset Retrieved Using Connection Object&lt;/H4&gt;
&lt;TABLE WIDTH=600 BORDER=0&gt;
&lt;TD VALIGN=TOP ALIGN=LEFT COLSPAN=3&gt;&lt;FONT SIZE=2&gt;

&lt;!--- Recordsets retrieved using Execute method of Connection and Command Objects--&gt;
&lt;% 
Set OBJdbConnection = Server.CreateObject("ADODB.Connection") 
OBJdbConnection.Open "AdvWorks" 
SQLQuery = "SELECT * FROM Customers" 
'First Recordset RSCustomerList
Set RSCustomerList = OBJdbConnection.Execute(SQLQuery) 

Set OBJdbCommand = Server.CreateObject("ADODB.Command")
OBJdbCommand.ActiveConnection = OBJdbConnection
SQLQuery2 = "SELECT * From Products"
OBJdbCommand.CommandText = SQLQuery2
Set RsProductList = OBJdbCommand.Execute

%&gt;
&lt;TABLE COLSPAN=8 CELLPADDING=5 BORDER=0&gt;

&lt;!-- BEGIN column header row for Customer Table--&gt;

&lt;TR&gt;&lt;TD ALIGN=CENTER BGCOLOR="#008080"&gt;
&lt;FONT STYLE="ARIAL NARROW" COLOR="#ffffff" SIZE=1&gt;Company Name&lt;/FONT&gt;
&lt;/TD&gt;
&lt;TD ALIGN=CENTER BGCOLOR="#008080"&gt;
&lt;FONT STYLE="ARIAL NARROW" COLOR="#ffffff" SIZE=1&gt;Contact Name&lt;/FONT&gt;
&lt;/TD&gt;
&lt;TD ALIGN=CENTER WIDTH=150 BGCOLOR="#008080"&gt;
&lt;FONT STYLE="ARIAL NARROW" COLOR="#ffffff" SIZE=1&gt;E-mail address&lt;/FONT&gt;
&lt;/TD&gt;
&lt;TD ALIGN=CENTER BGCOLOR="#008080"&gt;
&lt;FONT STYLE="ARIAL NARROW" COLOR="#ffffff" SIZE=1&gt;City&lt;/FONT&gt;
&lt;/TD&gt;
&lt;TD ALIGN=CENTER BGCOLOR="#008080"&gt;
&lt;FONT STYLE="ARIAL NARROW" COLOR="#ffffff" SIZE=1&gt;State/Province&lt;/FONT&gt;
&lt;/TD&gt;&lt;/TR&gt;

&lt;!--Display ADO Data from Customer Table--&gt;
&lt;% Do While Not RScustomerList.EOF %&gt;
  &lt;TR&gt;
  &lt;TD BGCOLOR="f7efde" ALIGN=CENTER&gt; 
  &lt;FONT STYLE="ARIAL NARROW" SIZE=1&gt; 
  &lt;%= RSCustomerList("CompanyName")%&gt; 
  &lt;/FONT&gt;&lt;/TD&gt;
  &lt;TD BGCOLOR="f7efde" ALIGN=CENTER&gt;
  &lt;FONT STYLE="ARIAL NARROW" SIZE=1&gt; 
  &lt;%= RScustomerList("ContactLastName") &amp; ", " %&gt; 
  &lt;%= RScustomerList("ContactFirstName") %&gt; 
  &lt;/FONT&gt;&lt;/TD&gt;
  &lt;TD BGCOLOR="f7efde" ALIGN=CENTER&gt;
  &lt;FONT STYLE="ARIAL NARROW" SIZE=1&gt;
 &nbsp; 
  &lt;%= RScustomerList("ContactLastName")%&gt; 
 &lt;/FONT&gt;&lt;/TD&gt;
  &lt;TD BGCOLOR="f7efde" ALIGN=CENTER&gt;
  &lt;FONT STYLE="ARIAL NARROW" SIZE=1&gt; 
  &lt;%= RScustomerList("City")%&gt; 
  &lt;/FONT&gt;&lt;/TD&gt;
  &lt;TD BGCOLOR="f7efde" ALIGN=CENTER&gt;
  &lt;FONT STYLE="ARIAL NARROW" SIZE=1&gt; 
  &lt;%= RScustomerList("StateOrProvince")%&gt; 
  &lt;/FONT&gt;&lt;/TD&gt;
  &lt;/TR&gt; 
&lt;!-Next Row = Record Loop and add to html table--&gt;
&lt;% 
RScustomerList.MoveNext 
Loop 
RScustomerList.Close

%&gt;

&lt;/TABLE&gt;&lt;HR&gt;
&lt;H4&gt;Recordset Retrieved Using Command Object&lt;/H4&gt;
&lt;TABLE COLSPAN=8 CELLPADDING=5 BORDER=0&gt;

&lt;!-- BEGIN column header row for Product List Table--&gt;

&lt;TR&gt;&lt;TD ALIGN=CENTER BGCOLOR="#800000"&gt;
&lt;FONT STYLE="ARIAL NARROW" COLOR="#ffffff" SIZE=1&gt;Product Type&lt;/FONT&gt;
&lt;/TD&gt;
&lt;TD ALIGN=CENTER BGCOLOR="#800000"&gt;
&lt;FONT STYLE="ARIAL NARROW" COLOR="#ffffff" SIZE=1&gt;Product Name&lt;/FONT&gt;
&lt;/TD&gt;
&lt;TD ALIGN=CENTER WIDTH=350 BGCOLOR="#800000"&gt;
&lt;FONT STYLE="ARIAL NARROW" COLOR="#ffffff" SIZE=1&gt;Product Description&lt;/FONT&gt;
&lt;/TD&gt;
&lt;TD ALIGN=CENTER BGCOLOR="#800000"&gt;
&lt;FONT STYLE="ARIAL NARROW" COLOR="#ffffff" SIZE=1&gt;Unit Price&lt;/FONT&gt;
&lt;/TD&gt;&lt;/TR&gt;

&lt;!-- Display ADO Data Product List--&gt;
&lt;% Do While Not RsProductList.EOF %&gt;
  &lt;TR&gt;
  &lt;TD BGCOLOR="f7efde" ALIGN=CENTER&gt; 
  &lt;FONT STYLE="ARIAL NARROW" SIZE=1&gt; 
  &lt;%= RsProductList("ProductType")%&gt; 
  &lt;/FONT&gt;&lt;/TD&gt;
  &lt;TD BGCOLOR="f7efde" ALIGN=CENTER&gt; 
  &lt;FONT STYLE="ARIAL NARROW" SIZE=1&gt; 
  &lt;%= RsProductList("ProductName")%&gt; 
  &lt;/FONT&gt;&lt;/TD&gt;
  &lt;TD BGCOLOR="f7efde" ALIGN=CENTER&gt;
  &lt;FONT STYLE="ARIAL NARROW" SIZE=1&gt;
 &nbsp; &lt;%= RsProductList("ProductDescription")%&gt; 
 &lt;/FONT&gt;&lt;/TD&gt;

  &lt;TD BGCOLOR="f7efde" ALIGN=CENTER&gt;
  &lt;FONT STYLE="ARIAL NARROW" SIZE=1&gt; 
  &lt;%= RsProductList("UnitPrice")%&gt; 
  &lt;/FONT&gt;&lt;/TD&gt;
  
&lt;!--&nbsp; Next Row = Record --&gt;
&lt;% 
RsProductList.MoveNext 
Loop 
'Remove objects from memory to free resources
RsProductList.Close
OBJdbConnection.Close
Set ObJdbCommand = Nothing
Set RsProductList = Nothing
Set OBJdbConnection = Nothing
%&gt;
&lt;/TABLE&gt;&lt;/FONT&gt;&lt;/Center&gt;&lt;/BODY&gt;&lt;/HTML&gt;
</code></pre>
</font></BODY>
</HTML>
