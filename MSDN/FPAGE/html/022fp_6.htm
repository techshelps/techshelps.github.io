<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Saving the Active Server Page</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="savingactiveserverpage"></a>Saving the Active Server Page</h2>
<p>
Before you can use the formatted results page, you must save it as an Active Server Page, which is a file with an .asp extension.</p>
<p>
On the FrontPage Editor’s <b>File</b> menu, choose <b>Save&nbsp;As</b>. In the <b>Save&nbsp;As</b> dialog box, type the file name for this page is the <b>URL</b> field, but be sure to retain the .asp file extension. For this example, name the page “results.asp.” In the <b>Title</b> field, enter a descriptive page title, such as “Database Query Results,” then click <b>OK</b> to save the page.</p>
<p>
You must also enable the folder containing the results page to run queries and Active Server Page code when the page is fetched. To do this, select the <b>Folders</b> View in the FrontPage Explorer, then click the folder that contains the “results.asp” page. On the FrontPage Explorer’s <b>Edit</b> menu, choose <b>Properties</b>. In the folder’s <b>Properties</b> dialog box, select the <b>Allow scripts to be run</b> or <b>Allow scripts or programs to be run</b> option and click <b>OK</b>.</p>
<p>
<b>Note </b>Allowing programs to be run inside your FrontPage web may make your Web server less secure. Check with your server administrator or Internet Service Provider before allowing programs to be run.</p>
<h3>Preparing for Criteria</h3>
<p>
You will now modify the query to accept search criteria. To filter the query by specific criteria, each database field value must be entered into the query’s SQL. For example, the Sales by Category query used in the Northwind Traders example includes all products. It is more useful to be able to view only those products in the category the user is interested in seeing, such as a list of products with the classification “Beverages.” In order to achieve this, a criteria parameter is added to the category name.</p>
<p>
SQL queries support criteria by using <code>WHERE</code> statements to restrict what database records are returned. You must edit the SQL text to contain a <code>WHERE</code> statement that references the name of a database field in an HTML form. This form will be used to enter a parameter value, which will be sent to the query.</p>
<p>
In this example, we will define the form field to be the product category. Entering a category into the form field will return product name and product sales information for all products in the specified category.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To Add a Parameter Form Field for the Product Category</b>
<ol>
<li>
On the results page, right-click the placeholder icon for the database region and choose <b>Database Region Properties</b> from the shortcut menu.<br><br></li>
<li>
Click <b>Next</b> to proceed to the <b>Enter the SQL String for the Query</b> input field, then locate the <code>WHERE</code> statement in the SQL text.<p>
If you followed the previous examples by pasting the SQL query from Microsoft Access, the text should read:</p>
<pre>WHERE (((Orders.OrderDate) Between #1/1/95# And #12/31/95#))
</pre>
</li>
<li>
Add an additional criteria value by manually editing the <code>WHERE</code> statement, as shown below. Be sure to include the single quote where shown:<pre>WHERE ((Categories.CategoryName = '((Orders.OrderDate) Between #1/1/95# And #12/31/95#))
</pre>
</li>
<li>
Next, position the insertion point after the single quote you just typed and click the <b>Insert Form Field Parameter</b> button.<br><br></li>
<li>
Type a name for the form field that you are going to create.<p>
To avoid confusion, it is helpful to use a form field name that is similar or the same as the database field name. For this example, type in <b>CategoryName</b>. Make a note of the name that you have chosen since you will use it later.</p>
</li>
<li>
Click <b>OK</b>.<p>
The SQL text will be automatically modified to include the field name:</p>
<pre>WHERE ((Categories.CategoryName = '%%CategoryName%% ((Orders.OrderDate) Between #1/1/95# And #12/31/95#))
</pre>
</li>
<li>
Complete the criteria by typing a closing single quote and an <code>AND</code> operator after the parameter that was added in the previous step:<pre>WHERE ((Categories.CategoryName = '%%CategoryName%%') AND ((Orders.OrderDate) Between #1/1/95# And #12/31/95#))
</pre>
</li>
<li>
Click <b>Finish</b> to apply the changes.</li>
</ol>
<p>
When you are finished modifying the query, save your changes to the page. Remember to save the page as an Active Server Page by retaining the .asp file extension.</p>
<p>
<b>Note </b>Some database management tools may generate SQL text with double quotes. If you are pasting SQL text containing double quotes into the Database Region Wizard, you will need to manually change them to single quotes before closing the wizard.</p>
</font></BODY>
</HTML>
