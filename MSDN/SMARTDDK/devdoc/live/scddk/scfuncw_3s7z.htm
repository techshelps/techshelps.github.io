<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SmartcardDeviceControl (WDM)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ntfunc_smartcarddevicecontrol_wdm_"></a>SmartcardDeviceControl (WDM)</h1>
<p>
The <b>SmartcardDeviceControl</b> function is the main entry function for the smart card driver library. It performs parameter checking and completes calls that do not require I/O with the reader.</p>
<pre><code><b>NTSTATUS 
SmartcardDeviceControl(
  IN PSMARTCARD_EXTENSION </b><i>SmartcardExtension</i><b>,</b>
<b>  IN PIRP </b><i>Irp</i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>SmartcardExtension</i></dt>
<dd>
Points to the smart card structure of the driver.</dd>
<dt>
<i>Irp</i></dt>
<dd>
Points to the requesting IRP.
</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>SmartcardDeviceControl</b> returns the NTSTATUS value of the called routine.</p>
<h4>Remarks</h4>
<p>
The driver's <b>DeviceControl</b> routine must call this function to let the library check parameters and complete calls that do not need to do I/O with the reader. </p>
<p>
The smart card driver library checks the version of the <a href="scstruct_50a6.htm"><b>SMARTCARD_EXTENSION</b></a> structure. Before calling <b>SmartcardDeviceControl</b>, the driver must assign to the <b>Version</b> member of <b>SMARTCARD_EXTENSION </b>the value SMCLIB_VERSION. This is usually done in the <b>DriverEntry</b> routine.</p>
<p>
A <b>DeviceControl</b> function should look like the following:</p>
<pre><code>NTSTATUS 
DeviceControl(
    PDEVICE_OBJECT <i>DeviceObject</i>,
    PIRP <i>Irp</i>
    )
{
    PDEVICE_EXTENSION deviceExtension = DeviceObject-&gt;DeviceExtension;

    // Let the library check parameters 
    // If the library requires the help of the driver it'll call
    // the driver using a call back mechanism
    return SmartcardDeviceControl(
        &amp;(deviceExtension-&gt;SmartcardExtension),
        Irp
        );
}
 </code></pre>
<p>
For information on the <b>SmartcardDeviceControl</b> function for VxD drivers, see <a href="scfunc_9wpr.htm"><b>SmartcardDeviceControl</b> (VxD)</a>.</p>
<p>&nbsp;</p></body>
</HTML>
