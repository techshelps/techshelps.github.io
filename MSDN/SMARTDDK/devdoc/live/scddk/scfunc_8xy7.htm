<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SmartcardT0Request (VxD)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ntfunc_smartcardt0request_vxd_"></a>SmartcardT0Request (VxD)</h1>
<p>
The <b>SmartcardT0Request</b> function copies data from the user buffer to the send buffer that the driver uses to transmit data to the reader.</p>
<pre><code><b>NTSTATUS 
SmartcardT0Request(
  PSMARTCARD_EXTENSION </b><i>SmartcardExtension</i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>SmartcardExtension</i></dt>
<dd>
Points to the smart card extension of the device.
</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>SmartcardT0Request</b> returns an NTSTATUS value. Possible values are the following.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=46%>Value</th>
<th align=left width=54%>Meaning</th>
</tr>
<tr valign=top>
<td width=46%>STATUS_SUCCESS</td>
<td width=54%>Buffer successfully set up.</td>
</tr>
<tr valign=top>
<td width=46%>STATUS_BUFFER_OVERFLOW</td>
<td width=54%>The internal buffer is too small to hold the data to send to the smart card. To fix this error, allocate a larger send buffer. See <b>SmartcardInitialize</b> for details.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
This function copies data from the user buffer to <i>SmartcardExtension-&gt;SmartcardRequest.Buffer</i> and adjusts <i>SmartcardExtension-&gt;SmartcardRequest.BufferLength</i> to the number of bytes to be transmitted to the smart card. The driver then simply writes this buffer to the card and reads the bytes coming from the card into <i>SmartcardExtension-&gt;SmartcardReply.Buffer</i>, as described in <a href="scfunc_1fxb.htm"><b>SmartcardT0Reply</b> (VxD)</a>. </p>
<p>
If your driver needs to send header data to the reader before the actual T=0 data, set <i>SmartcardExtension-&gt;SmartcardRequest.BufferLength </i>to the number of bytes you need for your header before you call this function. The packet will look like this:</p>
<p>
<img src="images/scfunc1.gif" border=0></p>
<p>
You can copy your header data to the buffer either before or after a call to <b>SmartcardT0Request</b>, depending on which is easier to do in your driver.</p>
<p>
A usual T=0 transmission can be done in the following way:</p>
<pre><code>// Copy data from user buffer to SmartcardExtension-&gt;SmartcardRequest.Buffer
status = SmartcardT0Request(
        SmartcardExtension
        );
if (status != STATUS_SUCCESS)
    return status;

// Transmit SmartcardExtension-&gt;SmartcardRequest.Buffer to smart card
status = DriverSendDataToSmartcard(…);
if (status != STATUS_SUCCESS)
return status;

// Receive data from smart card into SmartcardExtension-&gt;SmartcardReply.Buffer
status = DriverReceiveDataFromSmartcard(…);
if (status != STATUS_SUCCESS)
    return status;

// Copy data from SmartcardExtension-&gt;SmartcardReply.Buffer back to user buffer
// and return to caller
return SmartcardT0Reply(
SmartcardExtension
);
</code></pre>
<p>
<b>SmartcardT0Reply</b> does not handle the T=0 protocol data exchange for&nbsp; VxD drivers. Refer to the driver example scrcp8t.c, which is part of the Microsoft® Windows NT® DDK, or refer to ISO 7816 part 3, section 8.</p>
<p>
For information on the <b>SmartcardT0Request</b> function for WDM drivers, see <a href="scfuncw_2tgf.htm"><b>SmartcardT0Request</b> (WDM)</a>.</p>
<p>&nbsp;</p></body>
</HTML>
