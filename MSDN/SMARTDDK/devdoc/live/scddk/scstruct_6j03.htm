<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SCARD_READER_CAPABILITIES</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ntstruct_scard_reader_capabilities"></a>SCARD_READER_CAPABILITIES</h1>
<p>
The <b>SCARD_READER_CAPABILITIES</b> structure holds state information about the reader. It must be completely maintained by the driver. </p>
<pre><code>typedef struct _SCARD_READER_CAPABILITIES {

    //
    // Supported protocol by the reader/driver
    //
    struct {

        ULONG    Async;
        ULONG     Sync;

    } SupportedProtocols;

    //
    // Type of reader (Serial/USB/PCMCIA/Keyboard etc.)
    //
    ULONG    ReaderType;

    //
    // Mechanical characteristics like SCARD_READER_SWALLOWS etc.
    //
    ULONG    MechProperties;

    //
    // Current state of reader (card present/removed/activated)
    //
    ULONG     CurrentState;

    //
    // The channel ID the reader uses depending on the type of reader:
    //     - Port number for serial reader
    //    - Port number for par reader
    //    - Scsi id for scsi reader
    //    - 0 for keyboard reader
    //    - device number for USB
    //
    ULONG    Channel;

    //
    // Clock rates in KHz encoded as little endian
    // (I.e. 3.58MHz is encoded as 3580)
    //
    struct {
         
        ULONG Default;
        ULONG Max;

    } CLKFrequency;

    //
    // Data rates in bps encoded as little endian
    //
    struct {
         
        ULONG Default;
        ULONG Max;

    } DataRate;

    //
    // Maximum IFSD supported by IFD
    //
    ULONG   MaxIFSD;              

    //
    // Type of power management the card supports
    // (0 = IFD does not support power management)
    //
    ULONG   PowerMgmtSupport;

    //
    // Reserved, do not use
    //
    ULONG   Reserved[25];

} SCARD_READER_CAPABILITIES, *PSCARD_READER_CAPABILITIES;
 </code></pre>
<h4>Members</h4>
<p>
The following members must be maintained by the driver:
<dl>
<dt>
<b>SupportedProtocols</b></dt>
<dd>
Mandatory. Must be set to a bit mask that reflects the protocols that this driver/reader supports (in hardware <i>and </i>software).</dd>
<dt>
<b>ReaderType</b></dt>
<dd>
Mandatory. The type of this reader.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=56%>Type</th>
<th align=left width=44%>Meaning</th>
</tr>
<tr valign=top>
<td width=56%>SCARD_READER_TYPE_SERIAL</td>
<td width=44%>Serial reader.</td>
</tr>
<tr valign=top>
<td width=56%>SCARD_READER_TYPE_PCMCIA</td>
<td width=44%>PCMCIA reader.</td>
</tr>
<tr valign=top>
<td width=56%>SCARD_READER_TYPE_KEYBOARD</td>
<td width=44%>Keyboard attached reader.</td>
</tr>
<tr valign=top>
<td width=56%>SCARD_READER_TYPE_USB</td>
<td width=44%>USB reader.</td>
</tr>
</table><br>

</dd>
<dt>
<b>CurrentState</b></dt>
<dd>
Mandatory. Contains the status of the card.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=38%>Status</th>
<th align=left width=62%>Meaning</th>
</tr>
<tr valign=top>
<td width=38%>SCARD_UNKNOWN</td>
<td width=62%>The reader does not know the status.</td>
</tr>
<tr valign=top>
<td width=38%>SCARD_ABSENT</td>
<td width=62%>No card is currently inserted.</td>
</tr>
<tr valign=top>
<td width=38%>SCARD_PRESENT</td>
<td width=62%>A card is inserted.</td>
</tr>
<tr valign=top>
<td width=38%>SCARD_SWALLOWED</td>
<td width=62%>A card is inserted and the reader has swallowed it.</td>
</tr>
<tr valign=top>
<td width=38%>SCARD_POWERED</td>
<td width=62%>The card is powered, but the reader does not know its mode.</td>
</tr>
<tr valign=top>
<td width=38%>SCARD_NEGOTIABLE</td>
<td width=62%>A card is inserted and awaits protocol negotiation.</td>
</tr>
<tr valign=top>
<td width=38%>SCARD_SPECIFIC</td>
<td width=62%>A card is inserted and a protocol has been selected.</td>
</tr>
</table><br>

</dd>
<dt>
<b>MechProperties</b></dt>
<dd>
Optional. Contains a mask of reader properties combined with the bitwise OR operator:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=52%>Property</th>
<th align=left width=48%>Meaning</th>
</tr>
<tr valign=top>
<td width=52%>SCARD_READER_SWALLOWS</td>
<td width=48%>Reader has a swallowing mechanism.</td>
</tr>
<tr valign=top>
<td width=52%>SCARD_READER_EJECTS</td>
<td width=48%>Reader is able to eject the card.</td>
</tr>
<tr valign=top>
<td width=52%>SCARD_READER_CONFISCATES</td>
<td width=48%>Reader is able to capture the card.</td>
</tr>
</table><br>

</dd>
<dt>
<b>Channel</b></dt>
<dd>
Mandatory. Contains the logical channel number according to Part 3 of the <i>Interoperability Specification for ICCs and Personal Computer Systems</i> (see <i>Documents</i> at <a href="http://www.smartcardsys.com/">http://www.smartcardsys.com/</a>).</dd>
<dt>
<b>ClkFrequency.Default</b></dt>
<dd>
Mandatory. This is the standard clock frequency that the reader runs at, in KHz.</dd>
<dt>
<b>ClkFrequency.Max</b></dt>
<dd>
Mandatory. This is the maximum clock frequency that the reader can run at, in KHz.</dd>
<dt>
<b>DataRate.Default</b></dt>
<dd>
Mandatory. This is the standard data rate of the reader, in bps.</dd>
<dt>
<b>DataRate.Max</b></dt>
<dd>
Mandatory. This is the maximum data rate of the reader, in bps.</dd>
<dt>
<b>MaxIFSD</b></dt>
<dd>
Mandatory. This is the maximum buffer size of the reader. This value is used to inform the smart card at the beginning of a T=1 transmission about the maximum number of bytes that can be received in one packet.
</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
