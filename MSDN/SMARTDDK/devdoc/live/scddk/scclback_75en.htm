<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RDF_CARD_TRACKING (Mandatory)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ntclback_rdf_card_tracking_mandatory_"></a>RDF_CARD_TRACKING (Mandatory)</h1>
<h2>WDM driver version:</h2>
<p>
The <b>RDF_CARD_TRACKING</b> callback function installs an event handler to track card insertions and removals.</p>
<pre><code><b>NTSTATUS 
(*ReaderFunction[RDF_CARD_TRACKING])(
  PSMARTCARD_EXTENSION </b><i>SmartcardExtension</i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>SmartcardExtension</i></dt>
<dd>
Points to the smart card extension of the device.</dd>
</dl>
<h4>Input Values for WDM Device Drivers</h4>
<dl>
<dt>
<i>SmarcardExtension-&gt;OsData-&gt;NotificationIrp</i></dt>
<dd>
Contains the IRP that is to be informed of the insertion/removal event.</dd>
</dl>
<h4>Input Values for VxD device Drivers</h4>
<dl>
<dt>
<i>SmarcardExtension-&gt;OsData-&gt;NotificationOverlappedData</i></dt>
<dd>
Points to the overlapped structure of the caller to be informed of the insertion/removal event.</dd>
</dl>
<h4>Return Values</h4>
<p>
This function returns an NTSTATUS value. Possible values for WDM and VxD device drivers are the following.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Value</th>
<th align=left width=46%>Meaning</th>
</tr>
<tr valign=top>
<td width=54%>STATUS_PENDING</td>
<td width=46%>Card tracking has been started.</td>
</tr>
<tr valign=top>
<td width=54%>STATUS_INVALID_DEVICE_STATE</td>
<td width=46%>The device cannot accept the request.</td>
</tr>
<tr valign=top>
<td width=54%>STATUS_SUCCESS</td>
<td width=46%>Card status matches the requested tracking call.</td>
</tr>
<tr valign=top>
<td width=54%>STATUS_DEVICE_BUSY</td>
<td width=46%>A card tracking event is already pending.</td>
</tr>
</table><br>
<h4>Remarks for WDM Device Drivers</h4>
<p>
Before the library calls <b>RDF_CARD_TRACKING</b>, it checks if the status already matches the current card status. (That is, a card is inserted and the caller sends an IOCTL_SMARTCARD_IS_PRESENT code.) In this case, the library returns STATUS_SUCCESS without calling this function. </p>
<p>
Otherwise, the driver will be called and it should start card tracking. The smart card library fills <i>SmarcardExtension-&gt;OsData-&gt;NotificationIrp</i> in its extension because this is the IRP that will be informed of insertions or removals. Usually, the driver returns STATUS_PENDING to this call since the current card status does not match the status to check for. The driver must complete this call as soon as it detects the insertion or removal. This is done by a call to <b>IoCompleteRequest</b>. After the call to <b>IoCompleteRequest</b>, you must set the member <b>NotificationIrp</b> back to NULL. This tells the smart card library that your driver can accept further card-tracking requests. </p>
<p class=indent1>
<b>Note</b>  It is important to mark this IRP as cancelable, because this call can be of an indefinite duration and the caller can terminate before this call can be satisfied.</p>
<h4>Remarks for VxD Device Drivers</h4>
<p>
Before the library calls <b>RDF_CARD_TRACKING</b>, it checks if the status already matches the current card status. (That is, a card is inserted and the caller sends an IOCTL_SMARTCARD_IS_PRESENT code.) In this case, the library returns STATUS_SUCCESS without calling this function. Otherwise, the driver will be called and it should start card tracking.</p>
<p class=indent1>
<b>Note</b>  Since this function will be called only when the current card status is the opposite of the status the caller wants to be informed of, your driver only needs to return STATUS_PENDING. In your driver function that is used to supervise the card, use the structure member <i>OsData-&gt;NotificationOverlappedData</i> and check it for a non-NULL value. If the value is non-NULL, call <a href="scfunc_9vmn.htm"><b>SmartcardCompleteCardTracking</b> (VxD)</a> to inform the caller of the card insertion/removal event. </p>
<p>
Following is some sample code:</p>
<pre><code>MyDriverCardSupervision(
SmartcardExtension, 
OtherParameters)
//
//    This function is called whenever the card status changes
//    For example, card has been inserted or card has been removed
//
{
    //
    // Do some other tasks here
    //
    if (SmartcardExtension-&gt;OsData-&gt;NotificationOverlappedData != NULL){

        SmartcardCompleteCardTracking(SmartcardExtension);
    }
    //
    // Do additional tasks
    //
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
