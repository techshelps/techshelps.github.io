<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SmartcardT1Request (VxD)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ntfunc_smartcardt1request_vxd_"></a>SmartcardT1Request (VxD)</h1>
<p>
The <b>SmartcardT1Request</b> function copies data from the user buffer to a send buffer and checks the T=1 protocol status.</p>
<pre><code><b>NTSTATUS 
SmartcardT1Request(
  PSMARTCARD_EXTENSION </b><i>SmartcardExtension</i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>SmartcardExtension</i></dt>
<dd>
Points to the smart card extension of the device.
</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>SmartcardT1Request</b> returns an NTSTATUS value. Possible values are the following.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=46%>Value</th>
<th align=left width=54%>Meaning</th>
</tr>
<tr valign=top>
<td width=46%>STATUS_SUCCESS</td>
<td width=54%>Buffer successfully set up.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Do not change any members of the <a href="scstruct_8wkh.htm"><b>T1_DATA</b></a> structure. They will be initialized automatically. The only member that can be safely modified is the NAD value. Changing any member might lead to protocol errors.</p>
<p>
<b>SmartcardT1Request</b> copies the data from the user buffer to <i>SmartcardExtension-&gt;SmartcardRequest.Buffer</i> embedded in a T=1 protocol frame and adjusts <i>SmartcardExtension-&gt;SmartcardRequest.BufferLength</i>. The driver must send this buffer to the smart card and read the answer of the card into <i>SmartcardExtension-&gt;SmartcardReply.Buffer</i>. The driver must then call <a href="scfunc_67z3.htm"><b>SmartcardT1Reply</b> (VxD)</a>, which checks the incoming protocol frame. </p>
<p>
You can copy your header data to the buffer either before or after a call to <b>SmartcardT1Request</b>, depending on which is easier to do in your driver. If your driver needs to send header data to the reader before the actual T=1 data, you should set <i>SmartcardExtension-&gt;SmartcardRequest.BufferLength </i>to the number of bytes you need for your header before you call this function. The packet will look like this:</p>
<p>
<img src="images/scfunc2.gif" border=0></p>
<p>
A usual T=1 transmission can be done in the following way:</p>
<pre><code>// Run this loop as long as the protocol requires to send data
do {
    // Copy data to <i>SmartcardExtension-&gt;SmartcardRequest.Buffer </i>
    // embedded in a T=1 frame 
    status = SmartcardT1Request(SmartcardExtension);
    if (status != STATUS_SUCCESS)
        return status;

    // Send T=1 frame to smart card
    status = DriverSendDataToSmartcard(…);
    if (status != STATUS_SUCCESS)
        return status;

// Now set appropiate timeout (This example calculates. the time-out in ms)
// Timeout = SmartcardExtension-&gt;CardCapabilities.T1.BWT *                 
//    (SmartcardExtension-&gt;T1.Wtx ? SmartcardExtension-&gt;T1.Wtx : 1);

    
    // receive T=1 frame from smart card
    status = DriverReceiveDataFromSmartcard(…);
    if (status != STATUS_SUCCESS)
        return status;
    
    // Check T=1 protocol status and copy any data back to user buffer
    status = SmartcardT1Reply(SmartcardExtension);

} while (status == STATUS_MORE_PROCESSING_REQUIRED);

return status;
 </code></pre>
<p>
<b>SmartcardT1Request</b> functions the same for WDM and VxD drivers.</p>
<p>&nbsp;</p></body>
</HTML>
