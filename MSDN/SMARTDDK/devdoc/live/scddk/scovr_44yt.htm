<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Smart Card Driver IOCTL Calling Scheme</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ntovr_smart_card_driver_ioctl_calling_scheme"></a>Smart Card Driver IOCTL Calling Scheme</h2>
<p>
The following figure shows the calling scheme of an IOCTL call:</p>
<p>
<img src="images/memnum3.gif" border=0></p>
<p>
This is the process that takes place in the calling scheme:</p>
<p>
The resource manager calls the driver (1). The driver calls the library (2). The library checks the parameters of this call. If the driver's help is not needed to satisfy the call, the library returns the requested data, or an error code, to the caller (3a). If the driver's help is needed to satisfy the call, for example if I/O is required or if this is a vendor-specific call, the library calls the driver with all parameters set up correctly (3b). The driver performs I/O and uses support functions of the library (4 and 5). The driver then completes the request and returns the call to the resource manager (6).</p>
<p>
The smart card library synchronizes access to your driver. No two callback functions will be called at the same time. However, card insertion and removal event handling must be processed asynchronously. </p>
<p>&nbsp;</p></body>
</HTML>
