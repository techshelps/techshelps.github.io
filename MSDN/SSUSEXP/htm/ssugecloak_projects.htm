<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cloak Projects</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="ssugecloak_projects"></a>Cloak Projects</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ssugeShadow_Folders">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
Cloaking is a way of designating projects that you generally do not work on, and which you therefore do not necessarily want to keep local copies of. If a project is cloaked, <b>Get</b>, <b>Check In</b>, <b>Check Out</b>, <b>Undo Check Out</b>, and <b>Project Difference</b> commands do not apply to the project when attempted indirectly (as part of a <a href="ssugglossary.htm#gloss_recursiveoperation">recursive</a> operation). Direct commands (with the cloaked project selected in VSS Explorer) still work normally.</p>
<p>
As an example: suppose that you work on a project called $/OurApp. In this project there are subprojects called Code and Tests that you need and another subproject called Docs, which you never use. You might find yourself recursively getting $/OurApp, and then deleting the Docs subfolder from your hard disk, in order to obtain the configuration you need.</p>
<p>
The solution is to cloak $/OurApp/Docs. Even though the project is cloaked, you can still get this project or its files at any time. However, when you recursively <b>Get</b> $/OurApp, the Docs project (and its subprojects) will be ignored. In other words, cloaking a project says, "Ignore this project when I act on higher-level projects recursively."</p>
<p>
When you cloak a project, its subprojects are implicitly cloaked when you use a recursive operation on the cloaked project or on a higher project in the project list. In other words, a cloak says, "When something recursive happens above me, stop here." </p>
<p>
For information on how to cloak projects, refer to:
<ul type=disc>
<li>
<a href="ssugehow_to_cloak_projects.htm">How to Cloak Projects</a></li>
</ul>
</BODY>
</HTML>
