<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using VSS to Work on Multiple Versions of a Product at the Same Time</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="ssugeusing_vss_to_work_on_multiple_versions_of_a_product_at_the_same_time"></a>Using VSS to Work on Multiple Versions of a Product at the Same Time</h1>
<p>
Two scenarios may occur in the ongoing development of a project.&nbsp; The first is where you don't expect to change many files and the second is where you may be changing several files, potentially several times.&nbsp; In the first scenario, use VSS' new Label-Promotion feature.&nbsp; In the second scenario, use Share/ Pin/ Branch.</p>
<p>
Label Promotion is the best method to use when your development is done in the same project tree and bug fixes are routinely performed before other changes have been made in the project.&nbsp; A common example is when working on a major release with several milestones, such as Beta 1 and Beta 2.&nbsp; In this instance, you'd label the project when you believe you've hit Beta 1, then continue working toward Beta 2. If few fixes are needed for Beta 1, at this point use the Label-Promotion feature.&nbsp; For details, see <a href="ssuge%20maintain_multiple_versions_of_a_project.htm">Maintaining Multiple Versions of a Project</a>.</p>
<p>
Share/ Pin/ Branch is the best method to use for parallel development on a project over an extended period of time.&nbsp; A common example is when you're working on two releases that share code, both of which have milestones.&nbsp; For example, you've shipped Version 1.0, and now you're working on Version 2.0, however an interim patch for several bug fixes is needed. This patch will be released as Version 1.1.&nbsp; In this instance, you'd work on Version 2.0 and Version 1.1 in different project trees, then merge changes between them as necessary.&nbsp; For details, see <a href="ssugeshare_pin_and_branch_to_create_service_pack_projects.htm">Share, Pin and Branch to Create Service Pack Projects (Bug Fixes)</a>.</p>
</BODY>
</HTML>
