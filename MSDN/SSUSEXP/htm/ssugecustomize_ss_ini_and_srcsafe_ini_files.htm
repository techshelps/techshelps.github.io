<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Customize SS.INI and SRCSAFE.INI Files</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h2><a name="ssugecustomize_ss_ini_and_srcsafe_ini_files"></a>Customize SS.INI and SRCSAFE.INI Files</h2>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ssugeSet_a_Working_Folder_in_SS_INI; ssugeUse_Project_Headers_in_SS_INI">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
You can customize the SS.INI and SRCSAFE.INI files in two ways, either by using the options dialog boxes or a text editor.</p>
<p class=label>
<b>Using Options Dialog boxes </b></p>
<p>
You can set most SS.INI initialization variables directly in VSS in the <b>Options</b> dialog box on the <b>Tools</b> menu. Only administrators should set SRCSAFE.INI variables, using the VSS Administrator <b>Options</b> dialog box. When you use the <b>Options</b> dialog box, note that VSS saves your changes in memory, but does not write the changes to the file until you quit VSS or open a different database. Therefore, if you start a second VSS session before exiting the first, your changes are not yet in effect.</p>
<p class=label>
<b>Using a Text Editor </b></p>
<p>
You can read and modify initialization files with any text editor. There is a limit of 511 characters on an initialization file line, although this maximum may be restricted by specific variable requirements (such as project path limitations).</p>
<p class=label>
<b>Location of SS.INI File</b></p>
<p>
Usually, SS.INI is located in the Users subfolder of the folder in which VSS is installed, for example, SS\Users\Username. You can move your SS.INI file from this location, provided you tell VSS of the change by editing the Users.txt file appropriately (see your VSS administrator).</p>
<p>
The SRCSAFE.INI file is usually placed in the main VSS folder of the server installation.</p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>Initialization variables set in SS.INI override settings in SRCSAFE.INI.</p>
<p class=label>
<b>The Format</b></p>
<p>
There are three kinds of lines in SS.INI and SRCSAFE.INI. 
<ul type=disc>
<li>
Initialization variables, which are the functional lines, take the following format:<pre><code>Initialization variable = value
</code></pre>
<p class=tl>
Boolean variables can be set with "Yes", "No", "True", or "False."</P></li>
<li>
Comments begin with a semicolon:<pre><code>; Here I am, JP.
</code></pre>
<p class=tl>
VSS ignores all comments.</P></li>
<li>
Headers are provided in brackets:<pre><code>[$/Word]
</code></pre>
<p class=tl>
Most headers specify particular project paths. Other headers, such as [Keyword Comments], are used for specific purposes. </P></li>
</ul>
<p>
The order of variables inside an initialization file does not matter at all; however, the header under which a variable is placed matters a great deal. If a variable is placed under the wrong header <img src="emdash.gif" border=0> for instance, if a general-purpose variable is placed under [Keyword Comments] <img src="emdash.gif" border=0> it is ignored.</p>
<p class=label>
<b>SS.INI on Multiple Platforms</b></p>
<p>
If you are running a multi-platform VSS installation, you may want certain variables to have different values on the different platforms or on different computers. You can therefore place a platform or computer name in parentheses after the variable, to indicate that the variable applies only on that platform. For example:</p>
<pre><code>Use_ReadOnly (WIN) = Yes
Comment_Editor (JOE1)= c:\MSOFFICE\WINWORD\WINWORD.EXE
</code></pre>
<p>
The setting in the first example applies only under Microsoft Windows. The setting in the second example applies only to a computer named JOE1. Other possible settings include Win, UNIX, UI, CL, NT, MAC, and PC <img src="emdash.gif" border=0> the last is a catchall for Intel operating systems.</p>
<p>
Every variable in SRCSAFE.INI can be followed by a platform specifier, that is, a computer name, in parentheses. This specifier enables one variable to have different settings on different platforms. Not all variables recognize different computer names, but many do. Only 10 platform specifiers are allowed per user, or 10 per each SS.INI file.</p>
<p>
Different versions of VSS look for different specifiers. For example, the VSS interface on a Windows NT computer looks for the platform specifiers in following order:</p>
<p>
JOE1, NT, Win, PC, UI</p>
<p>
This looks for a variable set for Joe's computer named JOE1; if it does not find that, it looks for Windows NT; then Win, then PC, then UI, and finally, for a variable with no platform specifier.</p>
<p>
However, you can override this setting by setting the environment variable <b>SSiniENV</b>. For example:</p>
<pre><code>Set SSiniENV = Ragiv, MS-DOS, PC, CL
</code></pre>
<p>
Then VSS would look for variables specified for Ragiv before looking for MS-DOS, PC, CL, or no specifier. If the following two lines were in the SRCSAFE.INI:</p>
<pre><code>Data_Path (Ragiv) = R:\SS\DATA
Data_Path (Kim) = R:\SS2\DATA
</code></pre>
<p>
VSS would use the first setting and ignore the second. If <b>SSiniENV</b> were set to Kim, VSS would use the second string and ignore the first. Hence, by setting the <b>SSiniENV</b> variable appropriately, you can control which <b>Data_Path</b> variable VSS reads and which DATA folder is used.</p>
</BODY>
</HTML>
