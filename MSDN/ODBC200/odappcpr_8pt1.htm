<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Procedure Call Escape Sequence</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h2><a name="odbcprocedure_call_escape_sequence"></a>Procedure Call Escape Sequence</h2>
<p>
ODBC uses escape sequences for procedure calls. The syntax of this escape sequence is as follows: </p>
<p>
<b>{</b>[?=]<b>call</b> <i>procedure-name</i>[<b>(</b>[<i>parameter</i>][,[<i>parameter</i>]]...<b>)</b>]<b>}</b></p>
<p>
In BNF notation, the syntax is as follows:</p>
<p>
<i>ODBC-procedure-escape</i> ::=<br>
  | <i>ODBC-esc-initiator</i> [?=] call <i>procedure ODBC-esc-terminator</i></p>
<p>
<i>procedure</i> ::= <i>procedure-name</i> | <i>procedure-name</i> (<i>procedure-parameter-list</i>)</p>
<p>
<i>procedure-identifier</i> ::= <i>user-defined-name</i></p>
<p>
<i>procedure-name</i> ::= <i>procedure-identifier</i><br>
  | <i>owner-name</i>.<i>procedure-identifier</i><br>
  | <i>catalog-name catalog-separator</i> <i>procedure-identifier</i><br>
  | <i>catalog-name catalog-separator</i> [<i>owner-name</i>].<i>procedure-identifier</i></p>
<p>
(The third syntax is valid only if the data source does not support owners.)</p>
<p>
<i>owner-name</i> ::= <i>user-defined-name</i></p>
<p>
<i>catalog-name</i> ::= <i>user-defined-name</i></p>
<p>
<i>catalog-separator</i> ::= {<i>implementation-defined</i>}<i><br>
</i>(The catalog separator is returned through <b>SQLGetInfo </b>with the SQL_CATALOG_NAME_SEPARATOR information option.)</p>
<p>
<i>procedure-parameter-list</i> ::= <i>procedure-parameter</i><br>
  | <i>procedure-parameter</i>, <i>procedure-parameter-list</i></p>
<p>
<i>procedure-parameter</i> ::= <i>dynamic-parameter</i> | <i>literal</i> | <i>empty-string</i></p>
<p>
<i>empty-string </i>::= </p>
<p>
<i>ODBC-esc-initiator </i>::= {</p>
<p>
<i>ODBC-esc-terminator </i>::= }</p>
<p>
(If a procedure parameter is an empty string, the procedure uses the default value for that parameter.)</p>
<p>
To determine if the data source supports procedures and the driver supports the ODBC procedure invocation syntax, an application can call <b>SQLGetInfo</b> with the SQL_PROCEDURES information type.</p>
</font></BODY>
</HTML>
