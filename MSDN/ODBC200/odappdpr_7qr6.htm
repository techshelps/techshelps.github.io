<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL to C: Character</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcsql_to_c__character"></a>SQL to C: Character</h1>
<p>
The identifiers for the character ODBC SQL data types are:</p>
<p>
SQL_CHAR<br>
SQL_VARCHAR<br>
SQL_LONGVARCHAR<br>
SQL_WCHAR<br>
SQL_WVARCHAR<br>
SQL_WLONGVARCHAR</p>
<p>
The following table shows the ODBC C data types to which character SQL data may be converted. For an explanation of the columns and terms in the table, see “<a href="odappdpr_4o4z.htm">Converting Data from SQL to C Data Types</a>” earlier in this appendix.</p>
<table border=1 cellpadding=5 cols=5 frame=below rules=rows width=600>
<tr valign=top>
<td class=label width=26%><b><br>
C type identifier</b></td>
<td class=label width=25%><b><br>
Test</b></td>
<td class=label width=19%><b><br>
*<i>TargetValuePtr</i></b></td>
<td class=label width=17%><b>*<i>StrLen_or<br>
_IndPtr</i></b></td>
<td class=label width=13%><b>SQL-<br>
STATE</b></td>
</tr>
<tr valign=top>
<td width=26%>SQL_C_CHAR</td>
<td width=25%>Byte length of data &lt; <i>BufferLength.</i><p>
Byte length of data &gt;= <i>BufferLength.</i></p>
</td>
<td width=19%>Data<br>
<p>
Truncated data</p>
</td>
<td width=17%>Length of data in bytes<p>
Length of data in bytes</p>
</td>
<td width=13%>n/a<br>
<p>
01004</p>
</td>
</tr>
<tr valign=top>
<td width=26%>SQL_C_WCHAR</td>
<td width=25%>Character length of data &lt; <i>BufferLength.</i><p>
Character length of data &gt;= <i>BufferLength.</i></p>
</td>
<td width=19%>Data<br>
<p>
Truncated data</p>
</td>
<td width=17%>Length of data in characters<p>
Length of data in characters</p>
</td>
<td width=13%>n/a<br>
<p>
01004</p>
</td>
</tr>
<tr valign=top>
<td width=26%>SQL_C_STINYINT<br>
SQL_C_UTINYINT<br>
SQL_C_TINYINT <br>
SQL_C_SBIGINT<br>
SQL_C_UBIGINT<br>
SQL_C_SSHORT<br>
SQL_C_USHORT<br>
SQL_C_SHORT <br>
SQL_C_SLONG<br>
SQL_C_ULONG<br>
SQL_C_LONG <br>
SQL_C_NUMERIC</td>
<td width=25%>Data converted without truncation. [b]<br>
<p>
Data converted with truncation of fractional digits. [a]</p>
<p>
Conversion of data would result in loss of whole (as opposed to fractional) digits. [a]</p>
<p>
Data is not a <i>numeric-literal.</i> [b]</p>
</td>
<td width=19%>Data<br>
<br>
<p>
Truncated data<br>
<br>
</p>
<p>
Undefined<br>
<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=17%>Number of bytes of the C data type<p>
Number of bytes of the C data type</p>
<p>
Undefined<br>
<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=13%>n/a<br>
<br>
<p>
01S07<br>
<br>
</p>
<p>
22003<br>
<br>
<br>
</p>
<p>
22018</p>
</td>
</tr>
<tr valign=top>
<td width=26%>SQL_C_FLOAT<br>
SQL_C_DOUBLE</td>
<td width=25%>Data is within the range of the data type to which the number is being converted. [a]<p>
Data is outside the range of the data type to which the number is being converted. [a]</p>
<p>
Data is not a <i>numeric-literal.</i> [b]</p>
</td>
<td width=19%>Data<br>
<br>
<br>
<p>
Undefined<br>
<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=17%>Size of the C data type<br>
<br>
<p>
Undefined<br>
<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=13%>n/a<br>
<br>
<br>
<p>
22003<br>
<br>
<br>
</p>
<p>
22018</p>
</td>
</tr>
<tr valign=top>
<td width=26%>SQL_C_BIT</td>
<td width=25%>Data is 0 or 1.<p>
Data is greater than 0, less than 2, and not equal to 1.</p>
<p>
Data is less than 0 or greater than or equal to 2.</p>
<p>
Data is not a <i>numeric-literal.</i></p>
</td>
<td width=19%>Data<p>
Truncated data<br>
</p>
<p>
Undefined<br>
</p>
<p>
Undefined</p>
</td>
<td width=17%>1 [b]<p>
1 [b]<br>
</p>
<p>
Undefined<br>
</p>
<p>
Undefined</p>
</td>
<td width=13%>n/a<p>
01S07<br>
</p>
<p>
22003<br>
</p>
<p>
22018</p>
</td>
</tr>
<tr valign=top>
<td width=26%>SQL_C_BINARY</td>
<td width=25%>Byte length of data &lt;= <i>BufferLength.</i><p>
Byte length of data &gt; <i>BufferLength.</i></p>
</td>
<td width=19%>Data<br>
<p>
Truncated data</p>
</td>
<td width=17%>Length of data in bytes<p>
Length of data</p>
</td>
<td width=13%>n/a<br>
<p>
01004</p>
</td>
</tr>
<tr valign=top>
<td width=26%>SQL_C_TYPE_DATE</td>
<td width=25%>Data value is a valid <i>date-value.</i> [a]<p>
Data value is a valid <i>timestamp-value</i>; time portion is zero. [a]</p>
<p>
Data value is a valid <i>timestamp-value</i>; time portion is non-zero. [a], [c]</p>
<p>
Data value is not a valid <i>date-value</i> or <i>timestamp-value.</i> [a] </p>
</td>
<td width=19%>Data<br>
<p>
Data<br>
<br>
</p>
<p>
Truncated data<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=17%>6 [b]<br>
<p>
6 [b]<br>
<br>
</p>
<p>
6 [b]<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=13%>n/a<br>
<p>
n/a<br>
<br>
</p>
<p>
01S07<br>
<br>
</p>
<p>
22018</p>
</td>
</tr>
<tr valign=top>
<td width=26%>SQL_C_TYPE_TIME</td>
<td width=25%>Data value is a valid <i>time-value and the fractional seconds value is 0.</i> [a]<p>
Data value is a valid <i>timestamp-value or a valid time-value</i>; fractional seconds portion is zero. [a], [d]</p>
<p>
Data value is a valid <i>timestamp-value</i>; fractional seconds portion is non-zero. [a], [d], [e]</p>
<p>
Data value is not a valid <i>time-value</i> or <i>timestamp-value.</i> [a] </p>
</td>
<td width=19%>Data<br>
<br>
<p>
Data<br>
<br>
<br>
<br>
</p>
<p>
Truncated data<br>
<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=17%>6 [b]<br>
<br>
<p>
6 [b]<br>
<br>
<br>
<br>
</p>
<p>
6 [b]<br>
<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=13%>n/a<br>
<br>
<p>
n/a<br>
<br>
<br>
<br>
</p>
<p>
01S07<br>
<br>
<br>
</p>
<p>
22018</p>
</td>
</tr>
<tr valign=top>
<td width=26%>SQL_C_TYPE_<br>
TIMESTAMP</td>
<td width=25%>Data value is a valid <i>timestamp-value or a valid time-value</i>; fractional seconds portion not truncated. [a]<p>
Data value is a valid <i>timestamp-value or a valid time-value</i>; fractional seconds portion<br>
 truncated. [a]</p>
<p>
Data value is a valid <i>date-value.</i> [a]</p>
<p>
Data value is a valid <i>time-value</i>. [a] </p>
<p>
Data value is not a valid <i>date-value</i>, <i>time-value</i>, or <i>timestamp-value.</i> [a] </p>
</td>
<td width=19%>Data<br>
<br>
<br>
<br>
<p>
Truncated data<br>
<br>
<br>
<br>
</p>
<p>
Data [f]<br>
</p>
<p>
Data [g]<br>
</p>
<p>
Undefined</p>
</td>
<td width=17%>16 [b]<br>
<br>
<br>
<br>
<p>
16 [b]<br>
<br>
<br>
<br>
</p>
<p>
16 [b]<br>
</p>
<p>
16 [b]<br>
</p>
<p>
Undefined</p>
</td>
<td width=13%>n/a<br>
<br>
<br>
<br>
<p>
01S07<br>
<br>
<br>
<br>
</p>
<p>
n/a<br>
</p>
<p>
n/a<br>
</p>
<p>
22018</p>
</td>
</tr>
<tr valign=top>
<td width=26%>All C interval types</td>
<td width=25%>Data value is a valid <i>interval value</i>; no truncation.<p>
Data value is a valid <i>interval value</i>; truncation of one or more trailing fields.</p>
<p>
Data is valid interval; leading field significant precision is lost.</p>
<p>
The data value is not a valid interval value.</p>
</td>
<td width=19%>Data<br>
<br>
<p>
Truncated data<br>
<br>
<br>
</p>
<p>
Undefined<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=17%>Length of data in bytes<br>
<p>
Length of data in bytes<br>
<br>
</p>
<p>
Undefined<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=13%>n/a<br>
<br>
<p>
01S07<br>
<br>
<br>
</p>
<p>
22015<br>
<br>
</p>
<p>
22018</p>
</td>
</tr>
</table><br>
<p class=mini>
[a]The value of <i>BufferLength</i> is ignored for this conversion. The driver assumes that the size of <br>
*<i>TargetValuePtr</i> is the size of the C data type.</p>
<p class=mini>
[b]This is the size of the corresponding C data type.</p>
<p class=mini>
[c]The time portion of the <i>timestamp-value</i> is truncated.</p>
<p class=mini>
[d]The date portion of the <i>timestamp-value</i> is ignored.</p>
<p class=mini>
[e]The fractional seconds portion of the timestamp is truncated.</p>
<p class=mini>
[f]The time fields of the timestamp structure are set to zero.</p>
<p class=mini>
[g]The date fields of the timestamp structure are set to the current date.</p>
<p>
When character SQL data is converted to numeric, date, time, timestamp, or interval C data, leading and trailing spaces are ignored.</p>
</font></BODY>
</HTML>
