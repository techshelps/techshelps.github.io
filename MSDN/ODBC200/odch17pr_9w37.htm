<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Calling SQLSetPos</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbccalling_sqlsetpos"></a>Calling SQLSetPos</h1>
<p>
In ODBC 2.<i>x</i>, the pointer to the row status array was an argument to <b>SQLExtendedFetch</b>. The row status array was later updated by a call to <b>SQLSetPos</b>. Some drivers have relied on the fact that this array does not change between <b>SQLExtendedFetch</b> and <b>SQLSetPos</b>. In ODBC 3.<i>x</i>, the pointer to the status array is a descriptor field and so the application can easily change it to point to a different array. This can be a problem when an ODBC 3.<i>x</i> application is working with an ODBC 2.<i>x</i> driver, but is calling <b>SQLSetStmtAttr</b> to set the array status pointer and is calling <b>SQLFetchScroll</b> to fetch data. The Driver Manager maps it as a sequence of calls to <b>SQLExtendedFetch</b>. In the following code, an error would normally be raised when the Driver Manager maps the second <b>SQLSetStmtAttr</b> call when working with an ODBC 2<i>.x</i> driver:</p>
<pre><code>SQLSetStmtAttr(hstmt, SQL_ATTR_ROW_STATUS_PTR, rgfRowStatus, 0);
SQLFetchScroll(hstmt, fFetchType, iRow);
SQLSetStmtAttr(hstmt, SQL_ATTR_ROW_STATUS_PTR, rgfRowStat1, 0);
SQLSetPos(hstmt, iRow, fOption, fLock);
</code></pre>
<p>
The error would be raised if there were no way to change the row status pointer in ODBC 2.<i>x </i>between calls to <b>SQLExtendedFetch</b>. Instead, the Driver Manager performs the following steps when working with an ODBC 2<i>.x</i> driver:
<ol>
<li>
Initializes an internal Driver Manager flag <i>fSetPosError</i> to TRUE.<br><br></li>
<li>
When an application calls <b>SQLFetchScroll</b>, the Driver Manager sets <i>fSetPosError</i> to FALSE. <br><br></li>
<li>
When the application calls <b>SQLSetStmtAttr</b> to set SQL_ATTR_ROW_STATUS_PTR, the Driver Manager sets <i>fSetPosError </i>equal to<i> </i>TRUE.<br><br></li>
<li>
When the application calls <b>SQLSetPos</b>, with <i>fSetPosError</i> equal to TRUE, the Driver Manager raises SQL_ERROR with SQLSTATE HY011 (Attribute cannot be set now) to indicate that the application attempted to call <b>SQLSetPos</b> after changing the row status pointer, but prior to calling <b>SQLFetchScroll</b>. </li>
</ol>
</font></BODY>
</HTML>
