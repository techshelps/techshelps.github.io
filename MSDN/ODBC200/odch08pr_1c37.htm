<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Outer Joins</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h2><a name="odbcouter_joins"></a>Outer Joins</h2>
<p>
ODBC supports the SQL92 left, right, and full outer join syntax. The escape sequence for outer joins is:</p>
<p>
<b>{oj</b> <i>outer-join</i><b>}</b></p>
<p>
where <i>outer-join</i> is:</p>
<p>
<i>table-reference</i> {<b>LEFT | RIGHT | FULL} OUTER JOIN</b><br>
 {<i>table-reference</i> | <i>outer-join</i>} <b>ON</b> <i>search-condition</i></p>
<p>
<i>table-reference</i> specifies a table name, and <i>search-condition</i> specifies the join condition between the <i>table-references</i>.</p>
<p>
An outer join request must appear after the <b>FROM</b> keyword and before the <b>WHERE</b> clause (if one exists). For complete syntax information, see “<a href="odappcpr_8crp.htm">Outer Join Escape Sequence</a>” in Appendix C, “SQL Grammar.”</p>
<p>
For example, the following SQL statements create the same result set that lists all customers and shows which has open orders. The first statement uses the escape-sequence syntax. The second statement uses the native syntax for Oracle and is not interoperable.</p>
<pre><code>SELECT Customers.CustID, Customers.Name, Orders.OrderID, Orders.Status
 FROM {oj Customers LEFT OUTER JOIN Orders ON Customers.CustID=Orders.CustID}
 WHERE Orders.Status='OPEN'

SELECT Customers.CustID, Customers.Name, Orders.OrderID, Orders.Status
 FROM Customers, Orders
 WHERE (Orders.Status='OPEN') AND (Customers.CustID= Orders.CustID(+))
</code></pre>
<p>
To determine the types of outer joins that a data source and driver support, an application calls <b>SQLGetInfo</b> with the SQL_OJ_CAPABILITIES flag. The types of outer joins that might be supported are left, right, full, or nested outer joins; outer joins in which the column names in the <b>ON</b> clause do not have the same order as their respective table names in the <b>OUTER JOIN </b>clause; inner joins in conjunction with outer joins; and outer joins using any ODBC comparison operator. If the SQL_OJ_CAPABILITIES information type returns 0, no outer join clause is supported.</p>
</font></BODY>
</HTML>
