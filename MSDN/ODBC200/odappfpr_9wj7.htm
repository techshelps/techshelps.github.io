<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Executing Positioned Update and Delete Statements</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcexecuting_positioned_update_and_delete_statements"></a>Executing Positioned Update and Delete Statements</h1>
<p>
After an application has fetched a block of data with <b>SQLFetchScroll</b>, it can update or delete the data in the block. To execute a positioned update or delete, the application:
<ol>
<li>
Calls <b>SQLSetPos</b> to position the cursor on the row to be updated or deleted.<br><br></li>
<li>
Constructs a positioned update or delete statement with the following syntax:<p class=tl>
<b>UPDATE</b> <i>table-name</i> <br>
<b>SET </b><i>column-identifier</i> <b>=</b> {<i>expression</i> | <b>NULL</b>}<br>
  [<b>, </b><i>column-identifier</i> <b>=</b> {<i>expression</i> | <b>NULL</b>}]<br>
<b>WHERE CURRENT OF </b><i>cursor-name</i></P><p class=tl>
<b>DELETE FROM</b> <i>table-name</i> <b>WHERE CURRENT OF </b><i>cursor-name</i></P><p class=tl>
The easiest way to construct the <b>SET</b> clause in a positioned update statement is to use parameter markers for each column to be updated and use <b>SQLBindParameter</b> to bind these to the rowset buffers for the row to be updated. In this case, the C data type of the parameter will be the same as the C data type of the rowset buffer.</P></li>
<li>
Updates the rowset buffers for the current row if it will execute a positioned update statement. After successfully executing a positioned update statement, the cursor library copies the values from each column in the current row to its cache.<p class=atl>
<B><b>Caution&nbsp;&nbsp;&nbsp;</b></B>If the application does not correctly update the rowset buffers before executing a positioned update statement, the data in the cache will be incorrect after the statement is executed.</p></li>
<li>
Executes the positioned update or delete statement using a different statement than the statement associated with the cursor.</li>
</ol>
<p class=indent>
<B><b>Caution&nbsp;&nbsp;&nbsp;</b></B>The <b>WHERE</b> clause constructed by the cursor library to identify the current row can fail to identify any rows, identify a different row, or identify more than one row. For more information, see “<a href="odappfpr_701f.htm">Constructing Searched Statements</a>” later in this appendix.</p>
<p>
All positioned update and delete statements require a cursor name. To specify the cursor name, an application calls <b>SQLSetCursorName</b> before the cursor is opened. To use the cursor name generated by the driver, an application calls <b>SQLGetCursorName</b> after the cursor is opened.</p>
<p>
After the cursor library executes a positioned update or delete statement, the status array, rowset buffers, and cache maintained by the cursor library contain the values shown in the following table.</p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=22%><b><br>
Statement used</b></td>
<td class=label width=34%><b><br>
Value in row status array</b></td>
<td class=label width=22%><b>Values in<br>
rowset buffers</b></td>
<td class=label width=22%><b>Values in<br>
cache buffers</b></td>
</tr>
<tr valign=top>
<td width=22%>Positioned update</td>
<td width=34%>SQL_ROW_UPDATED</td>
<td width=22%>New values [1]</td>
<td width=22%>New values [1]</td>
</tr>
<tr valign=top>
<td width=22%>Positioned delete</td>
<td width=34%>SQL_ROW_DELETED</td>
<td width=22%>Old values</td>
<td width=22%>Old values</td>
</tr>
</table><br>
<p class=mini>
[1]The application must update the values in the rowset buffers before executing the positioned update statement; after executing the positioned update statement, the cursor library copies the values in the rowset buffers to its cache.</p>
</font></BODY>
</HTML>
