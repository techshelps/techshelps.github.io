<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Standard Database Access Architectures</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h2><a name="odbcstandard_database_access_architectures"></a>Standard Database Access Architectures</h2>
<p>
In looking at the database access components described in the previous section, it turns out that two of them—programming interfaces and data stream protocols—are good candidates for standardization. The other two components—IPC mechanism and network protocols—not only reside at too low a level, they are both highly dependent on the network and operating system. There is also a third approach—gateways—that provides possibilities for standardization.</p>
</font></BODY>
</HTML>
