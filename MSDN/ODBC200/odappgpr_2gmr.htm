<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What the Driver Does</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h2><a name="odbcwhat_the_driver_does"></a>What the Driver Does</h2>
<p>
The following table summarizes what functions and statement attributes an ODBC 3.x driver should implement for block and scrollable cursors.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=32%><b>Function or<br>
statement attribute</b></td>
<td class=label width=68%><b><br>
Comments</b></td>
</tr>
<tr valign=top>
<td width=32%>SQL_ATTR_ROW_<br>
STATUS_PTR</td>
<td width=68%>Sets the address of the row status array filled by <b>SQLFetch</b> and <b>SQLFetchScroll</b>. This array is also filled by <b>SQLSetPos</b> if <b>SQLSetPos</b> is called in statement state S6. If <b>SQLSetPos</b> is called in state S7, this array is not filled, but the array pointed to by the <i>RowStatusArray</i> argument of <b>SQLExtendedFetch</b> is filled. For more information, see “<a href="odappbpr_99f7.htm">Statement Transitions</a>” in Appendix B, “ODBC State Transition Tables.”</td>
</tr>
<tr valign=top>
<td width=32%>SQL_ATTR_ROWS_<br>
FETCHED_PTR</td>
<td width=68%>Sets the address of the buffer in which <b>SQLFetch</b> and <b>SQLFetchScroll</b> return the number of rows fetched. If <b>SQLExtendedFetch</b> is called, this buffer is not filled, but the <i>RowCountPtr</i> argument points to the number of rows fetched.</td>
</tr>
<tr valign=top>
<td width=32%>SQL_ATTR_<br>
ROW_ARRAY_SIZE</td>
<td width=68%>Sets the rowset size used by <b>SQLFetch</b> and <b>SQLFetchScroll</b>.</td>
</tr>
<tr valign=top>
<td width=32%>SQL_ROWSET_SIZE</td>
<td width=68%>Sets the rowset size used by <b>SQLExtendedFetch</b>. ODBC 3.x drivers implement this if they want to work with ODBC 2.<i>x</i> applications that call <b>SQLExtendedFetch</b> or <b>SQLSetPos</b>.</td>
</tr>
<tr valign=top>
<td width=32%><b>SQLBulkOperations</b></td>
<td width=68%>If an ODBC 3.x driver should work with ODBC 2.<i>x</i> applications that use <b>SQLSetPos</b> with an <i>Operation</i> of SQL_ADD, then the driver must support <b>SQLSetPos</b> with an <i>Operation</i> of SQL_ADD in addition to <b>SQLBulkOperations</b> with an <i>Operation</i> of SQL_ADD.</td>
</tr>
<tr valign=top>
<td width=32%><b>SQLExtendedFetch</b></td>
<td width=68%>Returns the specified rowset. ODBC 3.x drivers implement this if they want to work with ODBC 2.<i>x</i> applications that call <b>SQLExtendedFetch</b> or <b>SQLSetPos</b>. The following are implementation details:<ul type=disc>
<li>
The driver retrieves the rowset size from the value of the SQL_ROWSET_SIZE statement attribute.<br><br></li>
<li>
The driver retrieves the address of the row status array from the <i>RowStatusArray</i> argument, not the SQL_ATTR_ROW_STATUS_PTR statement attribute. The <i>RowStatusArray</i> argument in a call to <b>SQLExtendedFetch</b> must not be a null pointer. (Note that in ODBC 3.x, the SQL_ATTR_ROW_STATUS_PTR statement attribute can be a null pointer.)<br><br></li>
<li>
The driver retrieves the address of the rows fetched buffer from the <i>RowCountPtr</i> argument, not the SQL_ATTR_ROWS_FETCHED_PTR statement attribute. <br><br></li>
<li>
The driver returns SQLSTATE 01S01 (Error in row) to indicate that an error has occurred while rows were fetched by a call to <b>SQLExtendedFetch</b>. An ODBC 3.x driver should return SQLSTATE 01S01 (Error in row) only when <b>SQLExtendedFetch</b> is called, not when <b>SQLFetch</b> or <b>SQLFetchScroll</b> is called. When SQLSTATE 01S01 (Error in row) is returned by <b>SQLExtendedFetch</b>, the Driver Manager does not order status records in the error queue according to the rules stated in the “Sequence of Status Records” section of <a href="odch21gpr_009w.htm">SQLGetDiagField</a>, to preserve backward compatibility.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=32%><b>SQLFetch</b></td>
<td width=68%>Returns the next rowset. The following are implementation details:<ul type=disc>
<li>
The driver retrieves the rowset size from the value of the SQL_ATTR_ROW_ARRAY_SIZE statement attribute.<br><br></li>
<li>
The driver retrieves the address of the row status array from the SQL_ATTR_ROW_STATUS_PTR statement attribute.<br><br></li>
<li>
The driver retrieves the address of the rows fetched buffer from the SQL_ATTR_ROWS_FETCHED_PTR statement attribute.<br><br></li>
<li>
The application can mix calls between <b>SQLFetchScroll</b> and <b>SQLFetch</b>.<br><br></li>
<li>
<b>SQLFetch</b> returns bookmarks if column 0 is bound.<br><br></li>
<li>
<b>SQLFetch</b> can be called to return more than one row. <br><br></li>
<li>
The driver does not return SQLSTATE 01S01 (Error in row) to indicate that an error has occurred while rows were fetched by a call to <b>SQLFetch</b>.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=32%><b>SQLFetchScroll</b></td>
<td width=68%>Returns the specified rowset. The following are implementation details:<ul type=disc>
<li>
The driver retrieves the rowset size from the SQL_ATTR_ROW_ARRAY_SIZE statement attribute.<br><br></li>
<li>
The driver retrieves the address of the row status array from the SQL_ATTR_ROW_STATUS_PTR statement attribute.<br><br></li>
<li>
The driver retrieves the address of the rows fetched buffer from the SQL_ATTR_ROWS_FETCHED_PTR statement attribute.<br><br></li>
<li>
The application can mix calls between <b>SQLFetchScroll</b> and <b>SQLFetch</b>. <br><br></li>
<li>
The driver does not return SQLSTATE 01S01 (Error in row) to indicate that an error has occurred while rows were fetched by a call to <b>SQLFetchScroll</b>.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=32%><b>SQLSetPos</b></td>
<td width=68%>Performs various positioned operations. The following are implementation details:<ul type=disc>
<li>
This can be called in statement states S6 or S7. For more details, see “<a href="odappbpr_99f7.htm">Statement Transitions</a>” in Appendix B, “ODBC State Transition Tables.”<br><br></li>
<li>
If this is called in statement state S5 or S6, the driver retrieves the rowset size from the SQL_ATTR_ROWS_FETCHED_PTR statement attribute and the address of the row status array from the SQL_ATTR_ROW_STATUS_PTR statement attribute.<br><br></li>
<li>
If this is called in statement state S7, the driver retrieves the rowset size from the SQL_ROWSET_SIZE statement attribute and the address of the row status array from the <i>RowStatusArray</i> argument of <b>SQLExtendedFetch</b>. <br><br></li>
<li>
The driver only returns SQLSTATE 01S01 (Error in row) to indicate that an error has occurred while rows were fetched by a call to <b>SQLSetPos</b> to perform a bulk operation when the function is called in state S7. If SQLSTATE 01S01 (Error in row) is returned by <b>SQLSetPos</b>, the Driver Manager does not order status records in the error queue according to the rules stated in the “Sequence of Status Records” section of <a href="odch21gpr_009w.htm">SQLGetDiagField</a>, to preserve backward compatibility.<br><br></li>
<li>
If the driver should work with ODBC 2.<i>x</i> applications that call <b>SQLSetPos</b> with an <i>Operation</i> argument of SQL_ADD, the driver must support <b>SQLSetPos</b> with an <i>Operation</i> argument of SQL_ADD.</li>
</ul>
</td>
</tr>
</table><br>
</font></BODY>
</HTML>
