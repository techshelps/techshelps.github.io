<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL to C: Numeric</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcsql_to_c__numeric"></a>SQL to C: Numeric</h1>
<p>
The identifiers for the numeric ODBC SQL data types are:</p>
<p>
SQL_DECIMALSQL_BIGINT<br>
SQL_NUMERICSQL_REAL<br>
SQL_TINYINTSQL_FLOAT<br>
SQL_SMALLINTSQL_DOUBLE<br>
SQL_INTEGER</p>
<p>
The following table shows the ODBC C data types to which numeric SQL data may be converted. For an explanation of the columns and terms in the table, see “<a href="odappdpr_4o4z.htm">Converting Data from SQL to C Data Types</a>.”</p>
<table border=1 cellpadding=5 cols=5 frame=below rules=rows width=594>
<tr valign=top>
<td class=label width=27%><b><br>
C type identifier</b></td>
<td class=label width=28%><b><br>
Test</b></td>
<td class=label width=19%><b><br>
*<i>TargetValuePtr</i></b></td>
<td class=label width=14%><b>*<i>StrLen_or<br>
_IndPtr</i></b></td>
<td class=label width=12%><b>SQL-<br>
STATE</b></td>
</tr>
<tr valign=top>
<td width=27%>SQL_C_CHAR</td>
<td width=28%>Character byte length &lt; <i>BufferLength</i><p>
Number of whole (as opposed to fractional) digits &lt; <i>BufferLength</i></p>
<p>
Number of whole (as opposed to fractional) digits &gt;= <i>BufferLength</i></p>
</td>
<td width=19%>Data<br>
<p>
Truncated data<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=14%>Length of data in bytes<p>
Length of data in bytes<br>
</p>
<p>
Undefined</p>
</td>
<td width=12%>n/a<br>
<p>
01004<br>
<br>
</p>
<p>
22003</p>
</td>
</tr>
<tr valign=top>
<td width=27%>SQL_C_WCHAR</td>
<td width=28%>Character length &lt; <i>BufferLength</i><p>
Number of whole (as opposed to fractional) digits &lt; <i>BufferLength</i></p>
<p>
Number of whole (as opposed to fractional) digits &gt;= <i>BufferLength</i></p>
</td>
<td width=19%>Data<br>
<p>
Truncated data<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=14%>Length of data in characters<p>
Length of data in characters<br>
</p>
<p>
Undefined</p>
</td>
<td width=12%>n/a<br>
<p>
01004<br>
<br>
</p>
<p>
22003</p>
</td>
</tr>
<tr valign=top>
<td width=27%>SQL_C_STINYINT<br>
SQL_C_UTINYINT<br>
SQL_C_TINYINT <br>
SQL_C_SBIGINT<br>
SQL_C_UBIGINT<br>
SQL_C_SSHORT<br>
SQL_C_USHORT<br>
SQL_C_SHORT <br>
SQL_C_SLONG<br>
SQL_C_ULONG<br>
SQL_C_LONG <br>
SQL_C_NUMERIC</td>
<td width=28%>Data converted without truncation [a]<br>
<p>
Data converted with truncation of fractional digits [a]</p>
<p>
Conversion of data would result in loss of whole (as opposed to fractional) digits [a]</p>
</td>
<td width=19%>Data<br>
<br>
<p>
Truncated data<br>
<br>
</p>
<p>
Undefined</p>
</td>
<td width=14%>Size of the C data type<br>
<p>
Size of the C data type<br>
</p>
<p>
Undefined</p>
</td>
<td width=12%>n/a<br>
<br>
<p>
01S07<br>
<br>
</p>
<p>
22003</p>
</td>
</tr>
<tr valign=top>
<td width=27%>SQL_C_FLOAT<br>
SQL_C_DOUBLE</td>
<td width=28%>Data is within the range of the data type to which the number is being converted [a]<p>
Data is outside the range of the data type to which the number is being converted [a]</p>
</td>
<td width=19%>Data<br>
<br>
<p>
Undefined</p>
</td>
<td width=14%>Size of the C data type<br>
<p>
Undefined</p>
</td>
<td width=12%>n/a<br>
<br>
<p>
22003</p>
</td>
</tr>
<tr valign=top>
<td width=27%>SQL_C_BIT</td>
<td width=28%>Data is 0 or 1 [a]<p>
Data is greater than 0, less than 2, and not equal to 1 [a]</p>
<p>
Data is less than 0 or greater than or equal to 2 [a]</p>
</td>
<td width=19%>Data<p>
Truncated data<br>
</p>
<p>
Undefined</p>
</td>
<td width=14%>1 [b]<p>
1 [b]<br>
</p>
<p>
Undefined</p>
</td>
<td width=12%>n/a<p>
01S07<br>
</p>
<p>
22003</p>
</td>
</tr>
<tr valign=top>
<td width=27%>SQL_C_BINARY</td>
<td width=28%>Byte length of data &lt;= <i>BufferLength</i><p>
Byte length of data &gt; <i>BufferLength</i></p>
</td>
<td width=19%>Data<br>
<p>
Undefined</p>
</td>
<td width=14%>Length of data<p>
Undefined</p>
</td>
<td width=12%>n/a<br>
<p>
22003</p>
</td>
</tr>
<tr valign=top>
<td width=27%>SQL_C_INTERVAL_<br>
MONTH [c] <br>
SQL_C_INTERVAL_<br>
YEAR [c] <br>
SQL_C_INTERVAL_<br>
DAY [c] <br>
SQL_C_INTERVAL_<br>
HOUR [c] <br>
SQL_C_INTERVAL_<br>
MINUTE [c] <br>
SQL_C_INTERVAL_<br>
SECOND [c]</td>
<td width=28%>Data not truncated<br>
<p>
Fractional seconds portion truncated</p>
<p>
Whole part of number truncated</p>
</td>
<td width=19%>Data<br>
<p>
Truncated data<br>
</p>
<p>
Undefined</p>
</td>
<td width=14%>Length of data in bytes<p>
Length of data in bytes</p>
<p>
Undefined</p>
</td>
<td width=12%>n/a<br>
<p>
01S07<br>
</p>
<p>
22015<br>
</p>
</td>
</tr>
<tr valign=top>
<td width=27%>SQL_C_INTERVAL_<br>
YEAR_TO_MONTH<br>
SQL_C_INTERVAL_<br>
DAY_TO_HOUR<br>
SQL_C_INTERVAL_<br>
DAY_TO_MINUTE<br>
SQL_C_INTERVAL_<br>
DAY_TO_SECOND<br>
SQL_C_INTERVAL_<br>
HOUR_TO_MINUTE<br>
SQL_C_INTERVAL_<br>
HOUR_TO_SECOND</td>
<td width=28%>Whole part of number truncated</td>
<td width=19%>Undefined</td>
<td width=14%>Undefined</td>
<td width=12%>22015<br>
</td>
</tr>
</table><br>
<p class=mini>
[a]The value of <i>BufferLength</i> is ignored for this conversion. The driver assumes that the size of *<i>TargetValuePtr</i> is the size of the C data type.</p>
<p class=mini>
[b]This is the size of the corresponding C data type. </p>
<p class=mini>
[c]This conversion is supported only for the exact numeric data types (SQL_DECIMAL, SQL_NUMERIC, SQL_TINYINT, SQL_SMALLINT, SQL_INTEGER, and SQL_BIGINT). It is not supported for the approximate numeric data types (SQL_REAL, SQL_FLOAT, or SQL_DOUBLE). </p>
</font></BODY>
</HTML>
