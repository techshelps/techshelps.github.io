<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLSetStmtOption Mapping</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h2><a name="odbcsqlsetstmtoption_mapping"></a>SQLSetStmtOption Mapping</h2>
<p>
When an application calls <b>SQLSetStmtOption</b> through an ODBC 3.x driver, the call to:</p>
<pre><code>SQLSetStmtOption (StatementHandle, fOption, vParam)
</code></pre>
<p>
will result in:
<ul type=disc>
<li>
If <i>fOption</i> indicates an ODBC-defined statement attribute that is a string, then the Driver Manager calls:<pre><code>SQLSetStmtAttr (StatementHandle, fOption, ValuePtr, SQL_NTS)</code></pre>
</li>
</ul>
<pre></pre>
<ul type=disc>
<li>
If <i>fOption</i> indicates an ODBC-defined statement attribute that returns a 32-bit integer value:<pre><code>SQLSetStmtAttr (StatementHandle, fOption, ValuePtr, 0)</code></pre>
</li>
</ul>
<pre></pre>
<ul type=disc>
<li>
If <i>fOption</i> indicates a driver-defined statement attribute, then the Driver Manager calls:<pre><code>SQLSetStmtAttr (StatementHandle, fOption, ValuePtr, BufferLength)</code></pre>
</li>
</ul>
<pre></pre>
<p>
In these three cases, the <b>StatementHandle</b> argument is set to the value in <i>hstmt</i>, the <i>Attribute</i> argument is set to the value in <i>fOption</i>, and the <i>ValuePtr</i> argument is set to the value as <i>vParam</i>.</p>
<p>
Because the Driver Manager does not know whether the driver-defined statement attribute needs a string or 32-bit integer value, it has to pass in a valid value for the <i>StringLength</i> argument of <b>SQLSetStmtAttr</b>. If the driver has defined special semantics for driver-defined statement attributes and needs to be called using <b>SQLSetStmtOption</b>, then it must support <b>SQLSetStmtOption</b>.</p>
<p>
If an application calls <b>SQLSetStmtOption</b> to set a driver-specific statement option in an ODBC 3.x driver, and the option was defined in an ODBC 2.<i>x</i> version of the driver, a new manifest constant should be defined for the option in the ODBC 3.x driver. If the old manifest constant is used in the call to <b>SQLSetStmtOption</b>, the Driver Manager will call <b>SQLSetStmtAttr</b> with the <i>StringLength</i> argument set to 0.</p>
<p>
When an application calls <b>SQLSetStmtAttr</b> to set SQL_ATTR_USE_BOOKMARKS to SQL_UB_ON in an ODBC 3.x driver, the SQL_ATTR_USE_BOOKMARKS statement attribute is set to SQL_UB_FIXED. SQL_UB_ON is the same constant as SQL_UB_FIXED. The Driver Manager passes SQL_UB_FIXED through to the driver. SQL_UB_FIXED has been deprecated in ODBC 3.x, but an ODBC 3.x driver must implement it to work with ODBC 2.<i>x</i> applications that use fixed-length bookmarks.</p>
<p>
For an ODBC 3.x driver, the Driver Manager no longer checks to see if <i>Option</i> is in between SQL_STMT_OPT_MIN and SQL_STMT_OPT_MAX, or is greater than SQL_CONNECT_OPT_DRVR_START.</p>
</font></BODY>
</HTML>
