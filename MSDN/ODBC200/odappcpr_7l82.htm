<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Minimum Grammar</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcsql_minimum_grammar"></a>SQL Minimum Grammar</h1>
<p>
This section describes the minimum SQL syntax that an ODBC driver must support. The syntax described in this section is a subset of the Entry level syntax of SQL92. </p>
<p>
An application can use any of the syntax in this section, and be assured that any ODBC-compliant driver will support that syntax. To determine whether additional features of SQL92 not in this section are supported, the application should call <b>SQLGetInfo</b> with the SQL_SQL_CONFORMANCE information type. Even if the driver does not conform to any SQL92 conformance level, an application can still use the syntax described in this section. If a driver conforms to an SQL92 level, on the other hand, it supports all syntax included in that level. This includes the syntax in this section because the minimum grammar described here is a pure subset of the lowest SQL92 conformance level. Once the application knows the SQL92 level supported, it can determine if a higher-level feature is supported (if any) by calling <b>SQLGetInfo</b> with the individual information type corresponding to that feature. </p>
<p>
Drivers that work only with read-only data sources may not support those parts of the grammar included in this section that deal with changing data. An application can determine if a data source is read-only by calling <b>SQLGetInfo</b> with the SQL_DATA_SOURCE_READ_ONLY information type.</p>
<p class=label>
<b>Statement</b></p>
<table border=1 cellpadding=5 cols=1 frame=below rules=rows width=587>
<tr valign=top>
<td width=100%><i>create-table-statement</i> ::=<br>
  CREATE TABLE <i>base-table-name</i><br>
  (<i>column-identifier data-type</i> [<i>,column-identifier data-type</i>]<i>…</i>)<i> </i></td>
</tr>
<tr valign=top>
<td class=indent width=100%><B><b>Important&nbsp;&nbsp;&nbsp;</b></B>As a <i>data-type</i> in a <i>create-table-statement</i>, applications must use a data type from the TYPE_NAME column of the result set returned by <b>SQLGetTypeInfo</b>.</td>
</tr>
<tr valign=top>
<td width=100%><i>delete-statement-searched</i> ::=<br>
  DELETE FROM <i>table-name</i> [WHERE <i>search-condition</i>]</td>
</tr>
<tr valign=top>
<td width=100%><i>drop-table-statement</i> ::=<br>
  DROP TABLE <i>base-table-name</i> </td>
</tr>
<tr valign=top>
<td width=100%><i>insert-statement</i> ::=<br>
  INSERT INTO <i>table-name</i> [( <i>column-identifier</i> [, <i>column-identifier</i>]...)]<br>
  VALUES (<i>insert-value</i>[, <i>insert-value</i>]... )</td>
</tr>
<tr valign=top>
<td width=100%><i>select-statement</i> ::=<br>
  SELECT [ALL | DISTINCT] <i>select-list</i><br>
  FROM <i>table-reference-list</i><br>
  [WHERE <i>search-condition</i>]<br>
  [<i>order-by-clause</i>]</td>
</tr>
<tr valign=top>
<td width=100%><i>statement</i> ::= <i>create-table-statement</i><br>
  | <i>delete-statement-searched</i><br>
  | <i>drop-table-statement</i><br>
  | <i>insert-statement</i><br>
  | <i>select-statement</i><br>
  | <i>update-statement-searched</i></td>
</tr>
<tr valign=top>
<td width=100%><i>update-statement-searched</i><br>
  UPDATE <i>table-name</i><br>
  SET <i>column-identifier</i> = {<i>expression</i> | NULL }<br>
 &nbsp;&nbsp;&nbsp; [, <i>column-identifier</i> = {<i>expression</i> | NULL}]...<br>
  [WHERE <i>search-condition</i>]</td>
</tr>
</table><br>
</font></BODY>
</HTML>
