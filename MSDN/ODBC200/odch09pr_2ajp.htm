<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Allocating a Statement Handle</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcallocating_a_statement_handle"></a>Allocating a Statement Handle</h1>
<p>
Before the application can execute a statement, it must allocate a statement handle. To do this:
<ol>
<li>
The application declares a variable of type HSTMT. It then calls <b>SQLAllocHandle</b> and passes the address of this variable, the handle of the connection in which to allocate the statement, and the SQL_HANDLE_STMT option. For example:<pre><code>SQLHSTMT hstmt1;

SQLAllocHandle(SQL_HANDLE_STMT, hdbc1, &amp;hstmt1);
</code></pre>
</li>
<li>
The Driver Manager allocates a structure in which to store information about the statement and calls <b>SQLAllocHandle</b> in the driver with the SQL_HANDLE_STMT option.<br><br></li>
<li>
The driver allocates its own structure in which to store information about the statement and returns the driver statement handle to the Driver Manager.<br><br></li>
<li>
The Driver Manager returns the Driver Manager statement handle to the application in the application variable.</li>
</ol>
<p>
The statement handle identifies which statement to use when calling ODBC functions. For more information about statement handles, see “<a href="odch04pr_0zzn.htm">Statement Handles</a>” in Chapter 4, “ODBC Fundamentals.” </p>
</font></BODY>
</HTML>
