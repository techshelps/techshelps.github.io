<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLGetData and Block Cursors</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h3><a name="odbcsqlgetdata_and_block_cursors"></a>SQLGetData and Block Cursors</h3>
<p>
<b>SQLGetData</b> operates on a single column of a single row and cannot fetch an array containing data from multiple rows. The reason for this is that the primary use of <b>SQLGetData</b> is to fetch long data in parts, and there is little or no reason to do this for more than one row at a time.</p>
<p>
To use <b>SQLGetData</b> with a block cursor, an application first calls <b>SQLSetPos</b> to position the cursor on a single row. It then calls <b>SQLGetData</b> for a column in that row. However, this behavior is optional. To determine if a driver supports the use of <b>SQLGetData</b> with block cursors, an application calls <b>SQLGetInfo</b> with the SQL_GETDATA_EXTENSIONS option.</p>
</font></BODY>
</HTML>
