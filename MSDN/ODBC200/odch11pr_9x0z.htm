<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Block Cursors</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h2><a name="odbcusing_block_cursors"></a>Using Block Cursors</h2>
<p>
Support for block cursors is built into ODBC 3.x. <b>SQLFetch</b> can be used only for multirow fetches when called in ODBC 3.x; if an ODBC 2.<i>x</i> application calls <b>SQLFetch</b>, it will open only a single-row, forward-only cursor. When an ODBC 3.x application calls <b>SQLFetch</b> in an ODBC 2.<i>x</i> driver, it returns a single row unless the driver supports <b>SQLExtendedFetch</b>. For more information, see Appendix G, “<a href="odappgpr_6u0p.htm">Driver Guidelines for Backward Compatibility</a>.”</p>
<p>
To use block cursors, the application sets the rowset size, binds the rowset buffers (as described in the previous section), optionally sets the SQL_ATTR_ROWS_FETCHED_PTR and SQL_ATTR_ROW_STATUS_PTR statement attributes, and calls <b>SQLFetch</b> or <b>SQLFetchScroll</b> to fetch a block of rows. Note that the application can change the rowset size and bind new rowset buffers (by calling <b>SQLBindCol</b> or specifying a bind offset) even after rows have been fetched.</p>
</font></BODY>
</HTML>
