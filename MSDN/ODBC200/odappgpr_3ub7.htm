<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What the Driver Manager Does</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h2><a name="odbcwhat_the_driver_manager_does"></a>What the Driver Manager Does</h2>
<p>
The following table summarizes how the ODBC 3.x Driver Manager maps calls to ODBC 2.<i>x</i> and ODBC 3.x drivers.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=31%><b>Function or<br>
statement attribute</b></td>
<td class=label width=69%><b><br>
Comments</b></td>
</tr>
<tr valign=top>
<td width=31%>SQL_ATTR_FETCH<br>
_BOOKMARK_PTR</td>
<td width=69%>Points to the bookmark to use with <b>SQLFetchScroll</b>. The following are implementation details:<ul type=disc>
<li>
When an application sets this in an ODBC 2.<i>x</i> driver, the ODBC 3.x Driver Manager caches it. It dereferences the pointer and passes the value to the ODBC 2.<i>x</i> driver in the <i>FetchOffset</i> argument of <b>SQLExtendedFetch</b>,<b> </b>when<b> SQLFetchScroll</b> is later called by the application.<br><br></li>
<li>
When an application sets this in an ODBC 3.x driver, the ODBC 3.x Driver Manager passes the call to the driver.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=31%>SQL_ATTR_ROW_<br>
STATUS_PTR</td>
<td width=69%>Points to the row status array filled by <b>SQLFetch</b>, <b>SQLFetchScroll</b>, <b>SQLBulkOperations</b>, and <b>SQLSetPos</b>. The following are implementation details:<ul type=disc>
<li>
When an application sets this in an ODBC 2.<i>x</i> driver, the ODBC 3.x Driver Manager caches its value. It passes this value to the ODBC 2.<i>x</i> driver in the <i>RowStatusArray</i> argument of <b>SQLExtendedFetch </b>when<b> SQLFetchScroll </b>or<b> SQLFetch </b>is called.<br><br></li>
<li>
When an application sets this in an ODBC 3.x driver, the ODBC 3.x Driver Manager passes the call to the driver.<br><br></li>
<li>
In state S6, if an application sets SQL_ATTR_ROW_STATUS_PTR, and then calls <b>SQLBulkOperations</b> (with an <i>Operation</i> of SQL_ADD) or <b>SQLSetPos</b> without first calling <b>SQLFetch</b> or <b>SQLFetchScroll</b>, SQLSTATE HY011 (Attribute cannot be set now) is returned.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=31%>SQL_ATTR_ROWS_<br>
FETCHED_PTR</td>
<td width=69%>Points to the buffer in which <b>SQLFetch</b> and <b>SQLFetchScroll</b> return the number of rows fetched. The following are implementation details:<ul type=disc>
<li>
When an application sets this in an ODBC 2.<i>x</i> driver, the ODBC 3.x Driver Manager caches its value. It passes this value to the ODBC 2.<i>x</i> driver in the <i>RowCountPtr</i> argument of <b>SQLExtendedFetch</b>,<b> </b>when<b> SQLFetch </b>or<b> SQLFetchScroll </b>is called by the application.<br><br></li>
<li>
When an application sets this in an ODBC 3.x driver, the ODBC 3.x Driver Manager passes the call to the driver.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=31%>SQL_ATTR_<br>
ROW_ARRAY_SIZE</td>
<td width=69%>Sets the rowset size. The following are implementation details:<ul type=disc>
<li>
When an application sets this in an ODBC 2.<i>x</i> driver, the ODBC 3.x Driver Manager maps it to the SQL_ROWSET_SIZE statement attribute.<br><br></li>
<li>
When an application sets this in an ODBC 3.x driver, the ODBC 3.x Driver Manager passes the call to the driver. <br><br></li>
<li>
When an application working with an ODBC 3.x driver calls <b>SQLSetScrollOptions</b>, SQL_ROWSET_SIZE is set to the value in the <i>RowsetSize</i> argument if the underlying driver does not support <b>SQLSetScrollOptions</b>.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=31%>SQL_ROWSET_SIZE</td>
<td width=69%>Sets the rowset size used by <b>SQLExtendedFetch when SQLExtendedFetch </b>is called by an ODBC 2.x application. The following are implementation details.<ul type=disc>
<li>
When an application sets this, the ODBC 3.x Driver Manager passes the call to the driver, regardless of driver version.<br><br></li>
<li>
When an application working with an ODBC 2.<i>x</i> driver calls <b>SQLSetScrollOptions</b>, SQL_ROWSET_SIZE is set to the value in the <b>RowsetSize</b> argument.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=31%><b>SQLBulkOperations</b></td>
<td width=69%>Performs an insert operation, or update, delete, or fetch by bookmark operations. The following are implementation details:<ul type=disc>
<li>
When an application calls <b>SQLBulkOperations</b> with an <i>Operation</i> of SQL_ADD in an ODBC 2.<i>x</i> driver, the ODBC 3.x Driver Manager maps it to <b>SQLSetPos</b> with an <i>Operation</i> of SQL_ADD.<br><br></li>
<li>
When working with an ODBC 2.<i>x</i> driver that does not support <b>SQLSetPos</b> with an <i>Operation</i> of SQL_ADD, the ODBC 3.x Driver Manager does not map <b>SQLSetPos</b> with an <i>Operation</i> of SQL_ADD to <b>SQLBulkOperations</b> with an <i>Operation</i> of SQL_ADD. This is because <b>SQLBulkOperations</b> cannot be called in state S7, which in ODBC 2.<i>x</i> was the only state in which <b>SQLSetPos</b> could be called.<br><br></li>
<li>
If the application calls <b>SQLBulkOperations</b> with an <i>Operation</i> of SQL_ADD in an ODBC 2.<i>x</i> driver before calling <b>SQLFetchScroll</b>, the ODBC 3.x Driver Manager returns an error.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=31%><b>SQLExtendedFetch</b></td>
<td width=69%>Returns the specified rowset. The following are implementation details:<ul type=disc>
<li>
Except for the restriction just noted, the ODBC 3.x Driver Manager passes calls to <b>SQLExtendedFetch</b> to the driver, regardless of the driver version.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=31%><b>SQLFetch</b></td>
<td width=69%>Returns the next rowset. The following are implementation details:<ul type=disc>
<li>
When an application calls <b>SQLFetch</b> in an ODBC 2.<i>x</i> driver, the ODBC 3.x Driver Manager maps it to<b> SQLExtendedFetch</b>. The <i>FetchOrientation</i> argument of <b>SQLExtendedFetch</b> is set to SQL_FETCH_NEXT. The Driver Manager uses the cached value of the SQL_ATTR_ROW_STATUS_PTR statement attribute for the <i>RowStatusArray</i> argument and the cached value of the SQL_ATTR_ROWS_FETCHED_PTR statement attribute for the <i>RowCountPtr</i> argument.<br><br></li>
<li>
An ODBC 3.x application can mix calls to <b>SQLFetch</b> and <b>SQLFetchScroll</b> in an ODBC 2.<i>x</i> driver, because the ODBC 3.x Driver Manager maps <b>SQLFetch</b> to <b>SQLExtendedFetch</b> when an application calls it in an ODBC 2.<i>x</i> driver.<br><br></li>
<li>
If an ODBC 2.<i>x</i> driver does not support <b>SQLExtendedFetch</b>, the ODBC 3.x Driver Manager does not map <b>SQLFetch</b> or <b>SQLFetchScroll</b> to <b>SQLExtendedFetch</b> when an application calls it in that driver. If the application attempts to set SQL_ATTR_ROW_ARRAY_SIZE to a value greater than 1, SQLSTATE HYC00 (Optional feature not implemented) is returned.<br><br></li>
<li>
Except for the restrictions just noted, the ODBC 3.x Driver Manager passes calls to <b>SQLFetch</b> to the driver, regardless of the driver version.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=31%><b>SQLFetchScroll</b></td>
<td width=69%>Returns the specified rowset. The following are implementation details:<ul type=disc>
<li>
When an application calls <b>SQLFetchScroll</b> in an ODBC 2.<i>x</i> driver, the ODBC 3.x Driver Manager maps it to <b>SQLExtendedFetch</b>. It uses the cached value of the SQL_ATTR_ROW_STATUS_PTR statement attribute for the <i>RowStatusArray</i> argument and the cached value of the SQL_ATTR_ROWS_FETCHED_PTR statement attribute for the <i>RowCountPtr</i> argument. If the <i>FetchOrientation</i> argument in <b>SQLFetchScroll</b> is SQL_FETCH_BOOKMARK, it uses the cached value of the SQL_ATTR_FETCH_BOOKMARK_PTR statement attribute for the <i>FetchOffset</i> argument and returns an error if the <i>FetchOffset</i> argument of <b>SQLFetchScroll</b> is not 0.<br><br></li>
<li>
When an application calls this in an ODBC 3.x driver, the ODBC 3.x Driver Manager passes the call to the driver.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=31%><b>SQLSetPos</b></td>
<td width=69%>Performs various positioned operations. The ODBC 3.x Driver Manager passes calls to <b>SQLSetPos</b> to the driver, regardless of the driver version.</td>
</tr>
<tr valign=top>
<td width=31%><b>SQLSetScrollOptions</b></td>
<td width=69%>When the Driver Manager maps <b>SQLSetScrollOptions</b> for an application working with an ODBC 3.x driver that does not support <b>SQLSetScrollOptions</b>, the Driver Manager sets the SQL_ROWSET_SIZE statement option, not the SQL_ATTR_ROW_ARRAY_SIZE statement attribute, to the <i>RowsetSize</i> argument in <b>SQLSetScrollOption</b>. As a result, <b>SQLSetScrollOptions</b> cannot be used by an application when fetching multiple rows by a call to <b>SQLFetch</b> or <b>SQLFetchScroll</b>. It can only be used when fetching multiple rows by a call to <b>SQLExtendedFetch</b>.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
