<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Return Codes</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcreturn_codes"></a>Return Codes</h1>
<p>
Each function in ODBC returns a code, known as its <i>return code</i>, which indicates the overall success or failure of the function. Program logic is generally based on return codes.</p>
<p>
For example, the following code calls <b>SQLFetch</b> to retrieve the rows in a result set. It checks the return code of the function to determine if the end of the result set was reached (SQL_NO_DATA), if any warning information was returned (SQL_SUCCESS_WITH_INFO), or if an error occurred (SQL_ERROR).</p>
<pre><code>SQLRETURN rc;
SQLHSTMT&nbsp; hstmt;

while ((rc=SQLFetch(hstmt)) != SQL_NO_DATA) {
 if (rc == SQL_SUCCESS_WITH_INFO) {
  // Call function to display warning information.
 } else if (rc == SQL_ERROR) {
  // Call function to display error information.
  break;
 }
 // Process row.
}
</code></pre>
<p>
The return code SQL_INVALID_HANDLE always indicates a programming error and should never be encountered at run time. All other return codes provide run-time information, although SQL_ERROR may indicate a programming error.</p>
<p>
The following table defines the return codes.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=40%><b>Return code</b></td>
<td class=label width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%>SQL_SUCCESS</td>
<td width=60%>Function completed successfully. The application calls <b>SQLGetDiagField</b> to retrieve additional information from the header record.</td>
</tr>
<tr valign=top>
<td width=40%>SQL_SUCCESS_WITH_INFO</td>
<td width=60%>Function completed successfully, possibly with a nonfatal error (warning). The application calls <b>SQLGetDiagRec</b> or <b>SQLGetDiagField</b> to retrieve additional information.</td>
</tr>
<tr valign=top>
<td width=40%>SQL_ERROR</td>
<td width=60%>Function failed. The application calls <b>SQLGetDiagRec</b> or <b>SQLGetDiagField</b> to retrieve additional information. The contents of any output arguments to the function are undefined.</td>
</tr>
<tr valign=top>
<td width=40%>SQL_INVALID_HANDLE</td>
<td width=60%>Function failed due to an invalid environment, connection, statement, or descriptor handle. This indicates a programming error. No additional information is available from <b>SQLGetDiagRec</b> or <b>SQLGetDiagField</b>. This code is returned only when the handle is a null pointer or is the wrong type, such as when a statement handle is passed for an argument that requires a connection handle.</td>
</tr>
<tr valign=top>
<td width=40%>SQL_NO_DATA</td>
<td width=60%><p>
No more data was available. The application calls <b>SQLGetDiagRec</b> or <b>SQLGetDiagField</b> to retrieve additional information. One or more driver-defined status records in class 02xxx may be returned.</p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>In ODBC 2.<i>x</i>, this return code was named SQL_NO_DATA_FOUND.</p>
</td>
</tr>
<tr valign=top>
<td width=40%>SQL_NEED_DATA</td>
<td width=60%>More data is needed, such as when parameter data is sent at execution time or additional connection information is required. The application calls <b>SQLGetDiagRec</b> or <b>SQLGetDiagField</b> to retrieve additional information, if any.</td>
</tr>
<tr valign=top>
<td width=40%>SQL_STILL_EXECUTING</td>
<td width=60%>A function that was started asynchronously is still executing. The application calls <b>SQLGetDiagRec</b> or <b>SQLGetDiagField</b> to retrieve additional information, if any.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
