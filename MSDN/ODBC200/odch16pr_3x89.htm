<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interoperability</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcinteroperability"></a>Overview of Interoperability</h1>
<p>
<i>Interoperability</i> is the ability of a single application to operate with many different DBMSs. The need to write generic, interoperable applications was one of the major factors leading to the development of ODBC. However, interoperability is not a simple path followed from “not interoperable” to “completely interoperable.” The path has many branches and each requires tradeoffs among features, speed, code complexity, and development time.</p>
<p>
The process of writing an interoperable application follows several steps:
<ol>
<li>
Deciding whether the application will use ODBC.<br><br></li>
<li>
Choosing a level of interoperability and deciding which tradeoffs are necessary to reach that level.<br><br></li>
<li>
Writing interoperable code and testing it as fully as possible.</li>
</ol>
<p>
Before continuing, it should be noted that interoperability is primarily the domain of the application writer. Drivers are designed to work with a single DBMS and, by definition, are not interoperable. They play a role in interoperability by correctly implementing and exposing ODBC over a single DBMS.</p>
</font></BODY>
</HTML>
