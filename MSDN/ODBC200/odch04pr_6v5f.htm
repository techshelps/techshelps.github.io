<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Connection Handles</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h2><a name="odbcconnection_handles"></a>Connection Handles</h2>
<p>
A <i>connection</i> consists of a driver and a data source. A connection handle identifies each connection. The connection handle defines not only which driver to use, but which data source to use with that driver. Within a piece of code that implements ODBC (the Driver Manager or a driver), the connection handle identifies a structure that contains connection information, such as:
<ul type=disc>
<li>
The connection’s state<br><br></li>
<li>
The current connection-level diagnostics<br><br></li>
<li>
The handles of statements and descriptors currently allocated on the connection<br><br></li>
<li>
The current settings of each connection attribute</li>
</ul>
<p>
ODBC does not prevent multiple simultaneous connections, if the driver supports them. Thus, in a particular ODBC environment, multiple connection handles might point to a variety of drivers and data sources, the same driver and a variety of data sources, or even multiple connections to the same driver and data source. Some drivers limit the number of active connections they support; the SQL_MAX_DRIVER_CONNECTIONS option in <b>SQLGetInfo</b> specifies how many active connections a particular driver supports.</p>
<p>
Connection handles are used primarily when connecting to the data source (<b>SQLConnect</b>, <b>SQLDriverConnect</b>, or <b>SQLBrowseConnect</b>), disconnecting from the data source (<b>SQLDisconnect</b>), getting information about the driver and data source (<b>SQLGetInfo</b>), retrieving diagnostics (<b>SQLGetDiagField</b> and <b>SQLGetDiagRec</b>) and performing transactions (<b>SQLEndTran</b>). They are also used when setting and getting connection attributes (<b>SQLSetConnectAttr</b> and <b>SQLGetConnectAttr</b>) and when getting the native format of an SQL statement (<b>SQLNativeSql</b>).</p>
<p>
Connection handles are allocated with <b>SQLAllocHandle</b> and freed with <b>SQLFreeHandle</b>.</p>
</font></BODY>
</HTML>
