<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLDisconnect</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcsqldisconnect"></a>SQLDisconnect</h1>
<p class=label>
<b>Conformance</b></p>
<p>
Version Introduced:ODBC 1.0<br>
Standards Compliance:ISO 92</p>
<p class=label>
<b>Summary</b></p>
<p>
<b>SQLDisconnect</b> closes the connection associated with a specific connection handle.</p>
<p class=label>
<b>Syntax</b></p>
<p>
SQLRETURN <b>SQLDisconnect</b>(<br>
SQLHDBC<i>ConnectionHandle</i>);</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>ConnectionHandle</i></p>
<p class=indent>
[Input]<br>
Connection handle.</p>
<p class=label>
<b>Returns</b></p>
<p>
SQL_SUCCESS, SQL_SUCCESS_WITH_INFO, SQL_ERROR, or SQL_INVALID_HANDLE.</p>
<p class=label>
<b>Diagnostics</b></p>
<p>
When <b>SQLDisconnect</b> returns SQL_ERROR or SQL_SUCCESS_WITH_INFO, an associated SQLSTATE value may be obtained by calling <b>SQLGetDiagRec</b> with a <i>HandleType</i> of SQL_HANDLE_DBC and a <i>Handle</i> of <i>ConnectionHandle</i>. The following table lists the SQLSTATE values commonly returned by <b>SQLDisconnect</b> and explains each one in the context of this function; the notation “(DM)” precedes the descriptions of SQLSTATEs returned by the Driver Manager. The return code associated with each SQLSTATE value is SQL_ERROR, unless noted otherwise.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=22%><b>SQLSTATE</b></td>
<td class=label width=26%><b>Error</b></td>
<td class=label width=52%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=22%>01000</td>
<td width=26%>General warning</td>
<td width=52%>Driver-specific informational message. (Function returns SQL_SUCCESS_WITH_INFO.)</td>
</tr>
<tr valign=top>
<td width=22%>01002</td>
<td width=26%>Disconnect error</td>
<td width=52%>An error occurred during the disconnect. However, the disconnect succeeded. (Function returns SQL_SUCCESS_WITH_INFO.)</td>
</tr>
<tr valign=top>
<td width=22%>08003</td>
<td width=26%>Connection does not exist</td>
<td width=52%>(DM) The connection specified in the argument <i>ConnectionHandle</i> was not open.</td>
</tr>
<tr valign=top>
<td width=22%>25000</td>
<td width=26%>Invalid transaction state</td>
<td width=52%>There was a transaction in process on the connection specified by the argument <i>ConnectionHandle</i>. The transaction remains active.</td>
</tr>
<tr valign=top>
<td width=22%>HY000</td>
<td width=26%>General error</td>
<td width=52%>An error occurred for which there was no specific SQLSTATE and for which no implementation-specific SQLSTATE was defined. The error message returned by <b>SQLGetDiagRec</b> in the <i>*MessageText</i> buffer describes the error and its cause.</td>
</tr>
<tr valign=top>
<td width=22%>HY001</td>
<td width=26%>Memory allocation error</td>
<td width=52%>The driver was unable to allocate memory required to support execution or completion of the function.</td>
</tr>
<tr valign=top>
<td width=22%>HY010</td>
<td width=26%>Function sequence error</td>
<td width=52%>(DM) An asynchronously executing function was called for a <i>StatementHandle</i> associated with the <i>ConnectionHandle</i> and was still executing when <b>SQLDisconnect</b> was called.<p>
(DM) <b>SQLExecute</b>, <b>SQLExecDirect</b>, <b>SQLBulkOperations</b>, or <b>SQLSetPos</b> was called for a <i>StatementHandle</i> associated with the <i>ConnectionHandle</i> and returned SQL_NEED_DATA. This function was called before data was sent for all data-at-execution parameters or columns.</p>
</td>
</tr>
<tr valign=top>
<td width=22%>HY013</td>
<td width=26%>Memory management error</td>
<td width=52%>The function call could not be processed because the underlying memory objects could not be accessed, possibly because of low memory conditions.</td>
</tr>
<tr valign=top>
<td width=22%>HYT01</td>
<td width=26%>Connection timeout expired</td>
<td width=52%>The connection timeout period expired before the data source responded to the request, and the connection is still active. The connection timeout period is set through <b>SQLSetConnectAttr</b>, SQL_ATTR_CONNECTION_TIMEOUT.</td>
</tr>
<tr valign=top>
<td width=22%>IM001</td>
<td width=26%>Driver does not support this function</td>
<td width=52%>(DM) The driver associated with the <i>ConnectionHandle</i> does not support the function.</td>
</tr>
</table><br>
<p class=label>
<b>Comments</b></p>
<p>
If an application calls <b>SQLDisconnect</b> after <b>SQLBrowseConnect</b> returns SQL_NEED_DATA and before it returns a different return code, the driver cancels the connection browsing process and returns the connection to an unconnected state.</p>
<p>
If an application calls <b>SQLDisconnect</b> while there is an incomplete transaction associated with the connection handle, the driver returns SQLSTATE 25000 (Invalid transaction state), indicating that the transaction is unchanged and the connection is open. An incomplete transaction is one that has not been committed or rolled back with <b>SQLEndTran</b>.</p>
<p>
If an application calls <b>SQLDisconnect</b> before it has freed all statements associated with the connection, the driver frees those statements, and all descriptors that have been explicitly allocated on the connection, after it successfully disconnects from the data source. However, if one or more of the statements associated with the connection are still executing asynchronously, <b>SQLDisconnect</b> returns SQL_ERROR with a SQLSTATE value of HY010 (Function sequence error).</p>
<p>
For information about how an application uses <b>SQLDisconnect</b>, see “<a href="odch06pr_5hv6.htm">Disconnecting from a Data Source or Driver</a>” in Chapter 6, “Connecting to a Data Source or Driver.”</p>
<h1>Disconnecting From a Pooled Connection</h1>
<p>
If connection pooling is enabled for a shared environment, and an application calls <b>SQLDisconnect</b> on a connection in that environment, the connection is returned to the connection pool, and is still available to other components using the same shared environment.</p>
<p class=label>
<b>Code Example</b></p>
<p>
See <a href="odch21bpr_15bo.htm">SQLBrowseConnect</a><b> </b>and <a href="odch21cpr_7stw.htm">SQLConnect</a>.</p>
<p class=label>
<b>Related Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=48%><b>For information about</b></td>
<td class=label width=52%><b>See</b></td>
</tr>
<tr valign=top>
<td width=48%>Allocating a handle</td>
<td width=52%><a href="odch21bpr_689x.htm">SQLAllocHandle</a></td>
</tr>
<tr valign=top>
<td width=48%>Connecting to a data source</td>
<td width=52%><a href="odch21cpr_7stw.htm">SQLConnect</a></td>
</tr>
<tr valign=top>
<td width=48%>Connecting to a data source using a connection string or dialog box</td>
<td width=52%><a href="odch21dpr_4ed0.htm">SQLDriverConnect</a></td>
</tr>
<tr valign=top>
<td width=48%>Executing a commit or rollback operation</td>
<td width=52%><a href="odch21dpr_6gby.htm">SQLEndTran</a></td>
</tr>
<tr valign=top>
<td width=48%>Freeing a connection handle</td>
<td width=52%><a href="odch21fpr_2ed0.htm">SQLFreeConnect</a></td>
</tr>
</table><br>
</font></BODY>
</HTML>
