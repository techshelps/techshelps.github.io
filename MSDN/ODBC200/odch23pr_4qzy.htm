<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLReadFileDSN</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcsqlreadfiledsn"></a>SQLReadFileDSN</h1>
<p class=label>
<b>Conformance</b></p>
<p>
Version Introduced: ODBC 3.0</p>
<p class=label>
<b>Summary</b></p>
<p>
<b>SQLReadFileDSN</b> reads information from a File DSN.</p>
<p class=label>
<b>Syntax</b></p>
<p>
BOOL <b>SQLReadFileDSN(</b><br>
&nbsp;&nbsp;&nbsp;LPCSTR&nbsp;&nbsp;&nbsp;<i>lpszFileName,<br>
</i>&nbsp;&nbsp;&nbsp;LPCSTR&nbsp;&nbsp;&nbsp;<i>lpszAppName,<br>
</i>&nbsp;&nbsp;&nbsp;LPCSTR&nbsp;&nbsp;&nbsp;<i>lpszKeyName,<br>
</i>&nbsp;&nbsp;&nbsp;LPSTR&nbsp;&nbsp;&nbsp;<i>lpszString,<br>
</i>&nbsp;&nbsp;&nbsp;WORD&nbsp;&nbsp;&nbsp;<i>cbString,<br>
</i>&nbsp;&nbsp;&nbsp;WORD *&nbsp;&nbsp;&nbsp;<i>pcbString</i>);</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>lpszFileName</i></p>
<p class=indent>
[Input]<br>
Pointer to the data buffer containing the name of the .dsn file. A .dsn extension is appended to all file names that do not already have a .dsn extension. The value in <i>*lpszFileName</i> must be a null-terminated string.</p>
<p class=dt>
<i>lpszAppName</i></p>
<p class=indent>
[Input]<br>
Pointer to the data buffer containing the name of the application. This is “ODBC” for the ODBC section. The value in <i>*lpszAppName</i> must be a null-terminated string.</p>
<p class=dt>
<i>lpszKeyName</i></p>
<p class=indent>
[Input]<br>
Pointer to the data buffer containing the name of the key to be read. See “Comments” for reserved keywords. The value in <i>*lpszAppName</i> must be a null-terminated string.</p>
<p class=dt>
<i>lpszString</i></p>
<p class=indent>
[Output]<br>
Pointer to the data buffer containing the string associated with the key to be read.</p>
<p class=tl>
If <i>*lpszFileName</i> is a valid .dsn file name, but the <i>lpszAppName</i> argument is a null pointer and the <i>lpszKeyName</i> argument is a null pointer, then <i>*lpszString</i> contains a list of valid applications. If <i>*lpszFileName</i> is a valid .dsn file name, and <i>*lpszAppName</i> is a valid application name, but the <i>lpszKeyName</i> argument is a null pointer, then <i>*lpszString</i> contains a list of valid reserved keywords in the appropriate section of the DSN file, delimited by semicolons. If <i>*lpszFileName</i> is a valid .dsn file name, but <i>*lpszAppName</i> is a null pointer, and the <i>lpszKeyName</i> argument is a null pointer, then <i>*lpszString</i> contains a list of the sections in the DSN file, delimited by semicolons.</P><p class=dt>
<i>cbString</i></p>
<p class=indent>
[Input]<br>
Length of the <i>*lpszString</i> buffer.</p>
<p class=dt>
<i>pcbString</i></p>
<p class=indent>
[Output]<br>
Total number of bytes available to return in <i>*lpszString</i>. If the number of bytes available to return is greater than or equal to <i>cbString</i>, the output string in <i>*lpszString</i> is truncated to <i>cbString</i> minus the null-termination character. The <i>pcbString</i> argument can be a null pointer.</p>
<p class=label>
<b>Returns</b></p>
<p>
The function returns TRUE if it is successful, FALSE if it fails.</p>
<p class=label>
<b>Diagnostics</b></p>
<p>
When <b>SQLReadFileDSN</b> returns FALSE, an associated <i>*pfErrorCode</i> value may be obtained by calling <b>SQLInstallerError</b>. The following table lists the <i>*pfErrorCode</i> values that can be returned by <b>SQLInstallerError </b>and explains each one in the context of this function.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=27%><b><i>*pfErrorCode</i></b></td>
<td class=label width=24%><b>Error</b></td>
<td class=label width=49%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=27%>ODBC_ERROR_<br>
GENERAL_ERR</td>
<td width=24%>General installer error</td>
<td width=49%>An error occurred for which there was no specific installer error.</td>
</tr>
<tr valign=top>
<td width=27%>ODBC_ERROR_<br>
INVALID_BUFF_<br>
LEN</td>
<td width=24%>Invalid buffer length</td>
<td width=49%>The <i>lpszString</i> argument was NULL.<p>
The <i>cbString</i> argument was less than or equal to 0. </p>
</td>
</tr>
<tr valign=top>
<td width=27%>ODBC_ERROR_<br>
INVALID_<br>
PATH</td>
<td width=24%>Invalid install path</td>
<td width=49%>The path of the file name specified in the <i>lpszFileName</i> argument was invalid.</td>
</tr>
<tr valign=top>
<td width=27%>ODBC_ERROR_<br>
INVALID_<br>
REQUEST_TYPE</td>
<td width=24%>Invalid type of request</td>
<td width=49%>The <i>lpszAppName</i> argument was NULL while the <i>lpszKeyName</i> argument was valid.</td>
</tr>
<tr valign=top>
<td width=27%>ODBC_ERROR_<br>
OUT_OF_MEM</td>
<td width=24%>Out of memory</td>
<td width=49%>The installer could not perform the function because of a lack of memory.</td>
</tr>
<tr valign=top>
<td width=27%>ODBC_ERROR_<br>
OUTPUT_<br>
STRING_<br>
TRUNCATED</td>
<td width=24%>Output string truncated</td>
<td width=49%>The string returned in <i>*lpszString</i> was truncated because the value in <i>cbString</i> was less than or equal to the value in <i>*pcbString</i>.</td>
</tr>
<tr valign=top>
<td width=27%> ODBC_ERROR<br>
REQUEST_<br>
FAILED</td>
<td width=24%>Request failed</td>
<td width=49%>The keyword did not exist in the file DSN.</td>
</tr>
</table><br>
<p class=label>
<b>Comments</b></p>
<p>
ODBC reserves the section name [ODBC] in which to store the connection information. The reserved keywords for this section are the same as those reserved for a connect string in <b>SQLDriverConnect</b> (for more information, see the <a href="odch21dpr_4ed0.htm">SQLDriverConnect</a> function description).</p>
<p>
Applications may use these reserved keywords to read the information in a File DSN. If an applications wants to find out the DSN-less connection string associated with a File DSN, it can call <b>SQLReadFileDSN</b> for any of the reserved connection string keywords in the [ODBC] section. The full connection string passed in a DSN-less connection is a combination of all of the keywords (reserved and driver-specific) in the [ODBC] section.</p>
<p class=label>
<b>Related Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=48%><b>For information about</b></td>
<td class=label width=52%><b>See</b></td>
</tr>
<tr valign=top>
<td width=48%>Writing information to a File DSN</td>
<td width=52%><a href="odch23pr_86y6.htm">SQLWriteFileDSN</a></td>
</tr>
</table><br>
</font></BODY>
</HTML>
