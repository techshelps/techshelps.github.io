<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLGetEnvAttr</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcsqlgetenvattr"></a>SQLGetEnvAttr</h1>
<p class=label>
<b>Conformance</b></p>
<p>
Version Introduced:ODBC 3.0<br>
Standards Compliance:ISO 92</p>
<p class=label>
<b>Summary</b></p>
<p>
<b>SQLGetEnvAttr</b> returns the current setting of an environment attribute.</p>
<p class=label>
<b>Syntax</b></p>
<p>
SQLRETURN <b>SQLGetEnvAttr</b>(<br>
SQLHENV<i>EnvironmentHandle</i>,<br>
SQLINTEGER<i>Attribute</i>,<br>
SQLPOINTER<i>ValuePtr</i>,<br>
SQLINTEGER<i>BufferLength</i>,<br>
SQLINTEGER *<i>StringLengthPtr</i>);</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>EnvironmentHandle</i></p>
<p class=indent>
[Input]<br>
Environment handle. </p>
<p class=dt>
<i>Attribute</i></p>
<p class=indent>
[Input]<br>
Attribute to retrieve. </p>
<p class=dt>
<i>ValuePtr</i></p>
<p class=indent>
[Output]<br>
Pointer to a buffer in which to return the current value of the attribute specified by <i>Attribute</i>.</p>
<p class=dt>
<i>BufferLength</i></p>
<p class=indent>
[Input]<br>
If <i>ValuePtr</i> points to a character string, this argument should be the length of *<i>ValuePtr</i>. If *<i>ValuePtr</i> is an integer, <i>BufferLength</i> is ignored. If <i>*ValuePtr</i> is a Unicode string (when calling <b>SQLGetEnvAttrW</b>), the <i>BufferLength</i> argument must be an even number. If the attribute value is not a character string, <i>BufferLength</i> is unused.</p>
<p class=dt>
<i>StringLengthPtr</i></p>
<p class=indent>
[Output]<br>
A pointer to a buffer in which to return the total number of bytes (excluding the null-termination character) available to return in <i>*ValuePtr</i>. If <i>ValuePtr </i>is a null pointer, no length is returned. If the attribute value is a character string, and the number of bytes available to return is greater than or equal to <i>BufferLength</i>, the data in *<i>ValuePtr</i> is truncated to <i>BufferLength</i> minus the length of a null-termination character and is null-terminated by the driver.</p>
<p class=label>
<b>Returns</b></p>
<p>
SQL_SUCCESS, SQL_SUCCESS_WITH_INFO, SQL_NO_DATA, SQL_ERROR, or SQL_INVALID_HANDLE.</p>
<p class=label>
<b>Diagnostics</b></p>
<p>
When <b>SQLGetEnvAttr</b> returns SQL_ERROR or SQL_SUCCESS_WITH_INFO, an associated SQLSTATE value can be obtained by calling <b>SQLGetDiagRec</b> with a <i>HandleType</i> of SQL_HANDLE_ENV and a <i>Handle</i> of <i>EnvironmentHandle</i>. The following table lists the SQLSTATE values commonly returned by <b>SQLGetEnvAttr</b> and explains each one in the context of this function; the notation “(DM)” precedes the descriptions of SQLSTATEs returned by the Driver Manager. The return code associated with each SQLSTATE value is SQL_ERROR, unless noted otherwise.</p>
<table border=1 cellpadding=5 cols=5 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=25%><b>SQLSTATE</b></td>
<td class=label colspan=2 width=24%><b>Error</b></td>
<td class=label colspan=2 width=51%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=25%>01000</td>
<td colspan=2 width=24%>General warning</td>
<td colspan=2 width=51%>Driver-specific informational message. (Function returns SQL_SUCCESS_WITH_INFO.)</td>
</tr>
<tr valign=top>
<td width=25%>01004</td>
<td colspan=2 width=24%>String data, right truncated</td>
<td colspan=2 width=51%>The data returned in *<i>ValuePtr</i> was truncated to be <i>BufferLength</i> minus the null-termination character. The length of the untruncated string value is returned in *<i>StringLengthPtr</i>. (Function returns SQL_SUCCESS_WITH_INFO.)</td>
</tr>
<tr valign=top>
<td width=25%>HY000</td>
<td colspan=2 width=24%>General error</td>
<td colspan=2 width=51%>An error occurred for which there was no specific SQLSTATE and for which no implementation-specific SQLSTATE was defined. The error message returned by <b>SQLGetDiagRec</b> in the <i>*MessageText</i> buffer describes the error and its cause.</td>
</tr>
<tr valign=top>
<td width=25%>HY001</td>
<td colspan=2 width=24%>Memory allocation error</td>
<td colspan=2 width=51%>The driver was unable to allocate memory required to support execution or completion of the function.</td>
</tr>
<tr valign=top>
<td width=25%>  HY013</td>
<td width=20%>Memory management error</td>
<td colspan=2 width=41%>The function call could not be processed because the underlying memory objects could not be accessed, possibly because of low memory conditions.</td>
</tr>
<tr valign=top>
<td width=25%>HY092</td>
<td colspan=2 width=24%>Invalid attribute/option identifier</td>
<td colspan=2 width=51%>The value specified for the argument <i>Attribute</i> was not valid for the version of ODBC supported by the driver.</td>
</tr>
<tr valign=top>
<td width=25%>HYC00</td>
<td colspan=2 width=24%>Optional feature not implemented</td>
<td colspan=2 width=51%>The value specified for the argument <i>Attribute</i> was a valid ODBC environment attribute for the version of ODBC supported by the driver, but was not supported by the driver.</td>
</tr>
<tr valign=top>
<td width=25%>IM001</td>
<td colspan=2 width=24%>Driver does not support this function</td>
<td colspan=2 width=51%>(DM) The driver corresponding to the <i>EnvironmentHandle</i> does not support the function.</td>
</tr>
</table><br>
<p class=label>
<b>Comments</b></p>
<p>
For a list of attributes, see <a href="odch21jpr_1gtu.htm">SQLSetEnvAttr</a>. There are no driver-specific environment attributes. Note that if <i>Attribute</i> specifies an attribute that returns a string, <i>ValuePtr</i> must be a pointer to a buffer in which to return the string. The maximum length of the string, including the null-termination byte, will be <i>BufferLength</i> bytes.</p>
<p>
<b>SQLGetEnvAttr</b> can be called at any time between the allocation and the freeing of an environment handle. All environment attributes successfully set by the application for the environment persist until <b>SQLFreeHandle</b> is called on the <i>EnvironmentHandle</i> with a <i>HandleType</i> of SQL_HANDLE_ENV. More than one environment handle can be allocated simultaneously in ODBC 3.x. An environment attribute on one environment is not affected when another environment has been allocated.</p>
<p class=indent>
<B><b>Note</b></B> The SQL_ATTR_OUTPUT_NTS environment attribute is supported by standards-compliant applications. When <b>SQLGetEnvAttr</b> is called, the ODBC 3.x Driver Manager always returns SQL_TRUE for this attribute. SQL_ATTR_OUTPUT_NTS can only be set to SQL_TRUE by a call to <b>SQLSetEnvAttr</b>.</p>
<p class=label>
<b>Related Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=49%><b>For information about</b></td>
<td class=label width=51%><b>See</b></td>
</tr>
<tr valign=top>
<td width=49%>Returning the setting of a connection attribute</td>
<td width=51%><a href="odch21fpr_0j1u.htm">SQLGetConnectAttr</a></td>
</tr>
<tr valign=top>
<td width=49%>Returning the setting of a statement attribute</td>
<td width=51%><a href="odch21hpr_9uya.htm">SQLGetStmtAttr</a></td>
</tr>
<tr valign=top>
<td width=49%>Setting a connection attribute</td>
<td width=51%><a href="odch21jpr_4zn6.htm">SQLSetConnectAttr</a></td>
</tr>
<tr valign=top>
<td width=49%>Setting an environment attribute</td>
<td width=51%><a href="odch21jpr_1gtu.htm">SQLSetEnvAttr</a></td>
</tr>
<tr valign=top>
<td width=49%>  Setting a statement attribute</td>
<td width=51%><a href="odch21kpr_77jm.htm">SQLSetStmtAttr</a></td>
</tr>
</table><br>
</font></BODY>
</HTML>
