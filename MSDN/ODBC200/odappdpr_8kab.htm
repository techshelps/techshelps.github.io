<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Data Types</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcdata_types"></a>Overview of Data Types</h1>
<p>
ODBC defines two sets of data types: SQL data types and C data types. SQL data types indicate the data type of data stored at the data source. C data types indicate the data type of data stored in application buffers.</p>
<p>
SQL data types are defined by each DBMS in accordance with the SQL92 standard. For each SQL data type specified in the SQL92 standard, ODBC defines a type identifier, which is a <b>#define</b> value that is passed as an argument in ODBC functions or returned in the metadata of a result set. The only SQL92 data types not supported by ODBC are BIT (the ODBC SQL_BIT type has different characteristics), BIT_VARYING, TIME_WITH_TIMEZONE, TIMESTAMP_WITH_TIMEZONE, and NATIONAL_CHARACTER. Drivers are responsible for mapping data source&nbsp;–&nbsp;specific SQL data types to ODBC SQL data type identifiers and driver-specific SQL data type identifiers. The SQL data type is specified in the SQL_DESC_CONCISE_TYPE field of an implementation descriptor.</p>
<p>
ODBC defines the C data types and their corresponding ODBC type identifiers. An application specifies the C data type of the buffer that will receive result set data by passing the appropriate C type identifier in the <i>TargetType</i> argument in a call to <b>SQLBindCol</b> or <b>SQLGetData</b>. It specifies the C type of the buffer containing a statement parameter by passing the appropriate C type identifier in the <i>ValueType</i> argument in a call to <b>SQLBindParameter</b>. The C data type is specified in the SQL_DESC_CONCISE_TYPE field of an application descriptor. </p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>There are no driver-specific C data types.</p>
<p>
Each SQL data type corresponds to an ODBC C data type. Before returning data from the data source, the driver converts it to the specified C data type. Before sending data to the data source, the driver converts it from the specified C data type.</p>
<p>
This appendix discusses the following:
<ul type=disc>
<li>
ODBC SQL data types<br><br></li>
<li>
ODBC C data types<br><br></li>
<li>
Interval data types<br><br></li>
<li>
Numeric literals<br><br></li>
<li>
Data type identifiers, including pseudo-type identifiers, transferring data in its binary form, and information on descriptors<br><br></li>
<li>
Column size, decimal digits, transfer octet length, and display size of SQL data types<br><br></li>
<li>
Converting data from SQL to C data types<br><br></li>
<li>
Converting data from C to SQL data types</li>
</ul>
<p>
For an explanation of ODBC data types, see “<a href="odch04pr_8l7n.htm">Data Types in ODBC</a>” in Chapter 4, “ODBC Fundamentals.” For information about driver-specific SQL data types, see the driver’s documentation.</p>
</font></BODY>
</HTML>
