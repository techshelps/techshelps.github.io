<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLGetStmtAttr</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcsqlgetstmtattr"></a>SQLGetStmtAttr</h1>
<p class=label>
<b>Conformance</b></p>
<p>
Version Introduced:ODBC 3.0<br>
Standards Compliance:ISO 92</p>
<p class=label>
<b>Summary</b></p>
<p>
<b>SQLGetStmtAttr</b> returns the current setting of a statement attribute.</p>
<p class=indent>
<B><b>Note</b></B> For more information about what the Driver Manager maps this function to when an ODBC 3.<i>x</i> application is working with an ODBC 2<i>.x</i> driver, see “<a href="odch17pr_6mpf.htm">Mapping Replacement Functions for Backward Compatibility of Applications</a>” in Chapter 17, “Programming Considerations.”</p>
<p class=label>
<b>Syntax</b></p>
<p>
SQLRETURN <b>SQLGetStmtAttr</b>(<br>
SQLHSTMT<i>StatementHandle</i>,<br>
SQLINTEGER<i>Attribute</i>,<br>
SQLPOINTER<i>ValuePtr</i>,<br>
SQLINTEGER<i>BufferLength</i>,<br>
SQLINTEGER *<i>StringLengthPtr</i>);</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>StatementHandle</i></p>
<p class=indent>
[Input]<br>
Statement handle. </p>
<p class=dt>
<i>Attribute</i></p>
<p class=indent>
[Input]<br>
Attribute to retrieve. </p>
<p class=dt>
<i>ValuePtr</i></p>
<p class=indent>
[Output]<br>
Pointer to a buffer in which to return the value of the attribute specified in <i>Attribute</i>.</p>
<p class=dt>
<i>BufferLength</i></p>
<p class=indent>
[Input]<br>
If <i>Attribute</i> is an ODBC-defined attribute and<i> ValuePtr</i> points to a character string or a binary buffer, this argument should be the length of *<i>ValuePtr</i>. If <i>Attribute</i> is an ODBC-defined attribute and *<i>ValuePtr</i> is an integer, <i>BufferLength</i> is ignored. If the value returned in <i>*ValuePtr</i> is a Unicode string (when calling <b>SQLGetStmtAttrW</b>), the <i>BufferLength</i> argument must be an even number </p>
<p class=tl>
If <i>Attribute</i> is a driver-defined attribute, the application indicates the nature of the attribute to the Driver Manager by setting the <i>BufferLength</i> argument. <i>BufferLength</i> can have the following values:</P><ul type=disc>
<li>
If <i>*ValuePtr</i> is a pointer to a character string, then <i>BufferLength</i> is the length of the string or SQL_NTS.<br><br></li>
<li>
If <i>*ValuePtr</i> is a pointer to a binary buffer, then the application places the result of the SQL_LEN_BINARY_ATTR(<i>length</i>) macro in <i>BufferLength</i>. This places a negative value in <i>BufferLength</i>.<br><br></li>
<li>
If <i>*ValuePtr</i> is a pointer to a value other than a character string or binary string, then <i>BufferLength</i> should have the value SQL_IS_POINTER. <br><br></li>
<li>
If <i>*ValuePtr</i> is contains a fixed-length data type, then <i>BufferLength</i> is either SQL_IS_INTEGER or SQL_IS_UINTEGER, as appropriate.</li>
</ul>
<p class=dt>
<i>StringLengthPtr</i></p>
<p class=indent>
[Output]<br>
A pointer to a buffer in which to return the total number of bytes (excluding the null-termination character) available to return in <i>*ValuePtr</i>. If <i>ValuePtr</i> is a null pointer, no length is returned. If the attribute value is a character string, and the number of bytes available to return is greater than or equal to <i>BufferLength</i>, the data in <i>*ValuePtr</i> is truncated to <i>BufferLength</i> minus the length of a null-termination character and is null-terminated by the driver.</p>
<p class=label>
<b>Returns</b></p>
<p>
SQL_SUCCESS, SQL_SUCCESS_WITH_INFO, SQL_ERROR, or SQL_INVALID_HANDLE.</p>
<p class=label>
<b>Diagnostics</b></p>
<p>
When <b>SQLGetStmtAttr</b> returns SQL_ERROR or SQL_SUCCESS_WITH_INFO, an associated SQLSTATE value may be obtained by calling <b>SQLGetDiagRec</b> with a <i>HandleType</i> of SQL_HANDLE_STMT and a <i>Handle</i> of <i>StatementHandle</i>. The following table lists the SQLSTATE values commonly returned by <b>SQLGetStmtAttr</b> and explains each one in the context of this function; the notation “(DM)” precedes the descriptions of SQLSTATEs returned by the Driver Manager. The return code associated with each SQLSTATE value is SQL_ERROR, unless noted otherwise.</p>
<table border=1 cellpadding=5 cols=6 frame=below rules=rows width=587>
<tr valign=top>
<td class=label colspan=2 width=21%><b>SQLSTATE</b></td>
<td class=label colspan=2 width=27%><b>Error</b></td>
<td class=label colspan=2 width=52%><b>Description</b></td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>01000</td>
<td colspan=2 width=27%>General warning</td>
<td colspan=2 width=52%>Driver-specific informational message. (Function returns SQL_SUCCESS_WITH_INFO.)</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>01004</td>
<td colspan=2 width=27%>String data, right truncated</td>
<td colspan=2 width=52%>The data returned in <i>*ValuePtr</i> was truncated to be <i>BufferLength</i> minus the length of a null-termination character. The length of the untruncated string value is returned in *<i>StringLengthPtr</i>. (Function returns SQL_SUCCESS_WITH_INFO.)</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>24000</td>
<td colspan=2 width=27%>Invalid cursor state</td>
<td colspan=2 width=52%>The argument <i>Attribute</i> was SQL_ATTR_ROW_NUMBER and the cursor was not open, or the cursor was positioned before the start of the result set or after the end of the result set.</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>HY000</td>
<td colspan=2 width=27%>General error</td>
<td colspan=2 width=52%>An error occurred for which there was no specific SQLSTATE and for which no implementation-specific SQLSTATE was defined. The error message returned by <b>SQLGetDiagRec</b> in the argument <i>MessageText</i> describes the error and its cause.</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>HY001</td>
<td colspan=2 width=27%>Memory allocation error</td>
<td colspan=2 width=52%>The driver was unable to allocate memory required to support execution or completion of the function.</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>HY010</td>
<td colspan=2 width=27%>Function sequence error</td>
<td colspan=2 width=52%>(DM) An asynchronously executing function was called for the <i>StatementHandle</i> and was still executing when this function was called.<p>
(DM) <b>SQLExecute</b>, <b>SQLExecDirect</b>, <b>SQLBulkOperations</b>, or <b>SQLSetPos</b> was called for the <i>StatementHandle</i> and returned SQL_NEED_DATA. This function was called before data was sent for all data-at-execution parameters or columns.</p>
</td>
</tr>
<tr valign=top>
<td width=18%>HY013</td>
<td colspan=2 width=21%>Memory management error</td>
<td colspan=2 width=52%>The function call could not be processed because the underlying memory objects could not be accessed, possibly because of low memory conditions.</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>HY090</td>
<td colspan=2 width=27%>Invalid string or buffer length</td>
<td colspan=2 width=52%><i>(DM) *ValuePtr</i> is a character string, and BufferLength was less than zero, but not equal to SQL_NTS.</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>HY092</td>
<td colspan=2 width=27%>Invalid attribute/option identifier</td>
<td colspan=2 width=52%>The value specified for the argument <i>Attribute</i> was not valid for the version of ODBC supported by the driver.</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>HY109</td>
<td colspan=2 width=27%>Invalid cursor position</td>
<td colspan=2 width=52%>The <i>Attribute</i> argument was SQL_ATTR_ROW_NUMBER and the row had been deleted or could not be fetched.</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>HYC00</td>
<td colspan=2 width=27%>Optional feature not implemented</td>
<td colspan=2 width=52%>The value specified for the argument <i>Attribute</i> was a valid ODBC statement attribute for the version of ODBC supported by the driver, but was not supported by the driver.</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>HYT01</td>
<td colspan=2 width=27%>Connection timeout expired</td>
<td colspan=2 width=52%>The connection timeout period expired before the data source responded to the request. The connection timeout period is set through <b>SQLSetConnectAttr</b>, SQL_ATTR_CONNECTION_TIMEOUT.</td>
</tr>
<tr valign=top>
<td colspan=2 width=21%>IM001</td>
<td colspan=2 width=27%>Driver does not support this function</td>
<td colspan=2 width=52%>(DM) The driver corresponding to the <i>StatementHandle</i> does not support the function.</td>
</tr>
</table><br>
<p class=label>
<b>Comments</b></p>
<p>
For general information about statement attributes, see “<a href="odch09pr_6zzn.htm">Statement Attributes</a>” in Chapter 9, “Executing Statements.”</p>
<p>
A call to <b>SQLGetStmtAttr</b> returns in <i>*ValuePtr</i> the value of the statement attribute specified in <i>Attribute</i>. That value can either be a 32-bit value or a null-terminated character string. If the value is a null-terminated string, the application specifies the maximum length of that string in the <i>BufferLength</i> argument, and the driver returns the length of that string in the <i>*StringLengthPtr</i> buffer. If the value is a 32-bit value, the <i>BufferLength</i> and <i>StringLengthPtr</i> arguments are not used.</p>
<p>
To allow applications calling <b>SQLGetStmtAttr</b> to work with ODBC 2<i>.x</i> drivers, a call to <b>SQLGetStmtAttr</b> is mapped in the Driver Manager to <b>SQLGetStmtOption</b>.</p>
<p>
The following statement attributes are read-only, so can be retrieved by <b>SQLGetStmtAttr</b>, but not set by <b>SQLSetStmtAttr</b>. For a list of attributes that can be set and retrieved, see <b>SQLSetStmtAttr</b>.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td width=50%>SQL_ATTR_IMP_PARAM_DESC</td>
<td width=50%>SQL_ATTR_ROW_NUMBER</td>
</tr>
<tr valign=top>
<td width=50%>SQL_ATTR_IMP_ROW_DESC</td>
<td width=50%></td>
</tr>
</table><br>
<p class=label>
<b>Related Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>For information about</b></td>
<td class=label width=50%><b>See</b></td>
</tr>
<tr valign=top>
<td width=50%>Returning the setting of a connection attribute</td>
<td width=50%><b>SQLGetConnectAttr</b></td>
</tr>
<tr valign=top>
<td width=50%>Setting a connection attribute</td>
<td width=50%><b>SQLSetConnectAttr</b></td>
</tr>
<tr valign=top>
<td width=50%>Setting a statement attribute</td>
<td width=50%><b>SQLSetStmtAttr</b></td>
</tr>
</table><br>
</font></BODY>
</HTML>
