<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Display Size</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcdisplay_size"></a>Display Size</h1>
<p>
The display size of a column is the maximum number of characters needed to display data in character form. The following table defines the display size for each ODBC SQL data type.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=594>
<tr valign=top>
<td class=label width=40%><b>SQL type identifier</b></td>
<td class=label width=60%><b>Display size</b></td>
</tr>
<tr valign=top>
<td width=40%>All character types [a]</td>
<td width=60%>The defined (for fixed types) or maximum (for variable types) number of characters needed to display the data in character form.</td>
</tr>
<tr valign=top>
<td width=40%>SQL_DECIMAL<br>
SQL_NUMERIC</td>
<td width=60%>The precision of the column plus 2 (a sign, <i>precision</i> digits, and a decimal point). For example, the display size of a column defined as NUMERIC(10,3) is 12.</td>
</tr>
<tr valign=top>
<td width=40%>SQL_BIT</td>
<td width=60%>1 (1 digit).</td>
</tr>
<tr valign=top>
<td width=40%>SQL_TINYINT</td>
<td width=60%>4 if signed (a sign and 3 digits) or 3 if unsigned (3 digits).</td>
</tr>
<tr valign=top>
<td width=40%>SQL_SMALLINT</td>
<td width=60%>6 if signed (a sign and 5 digits) or 5 if unsigned (5 digits).</td>
</tr>
<tr valign=top>
<td width=40%>SQL_INTEGER</td>
<td width=60%>11 if signed (a sign and 10 digits) or 10 if unsigned (10 digits).</td>
</tr>
<tr valign=top>
<td width=40%>SQL_BIGINT</td>
<td width=60%>20 (a sign and 19 digits if signed or 20 digits if unsigned).</td>
</tr>
<tr valign=top>
<td width=40%>SQL_REAL</td>
<td width=60%>14 (a sign, 7 digits, a decimal point, the letter E, a sign, and 2 digits).</td>
</tr>
<tr valign=top>
<td width=40%>SQL_FLOAT<br>
SQL_DOUBLE</td>
<td width=60%>24 (a sign, 15 digits, a decimal point, the letter E, a sign, and 3 digits).</td>
</tr>
<tr valign=top>
<td width=40%>All binary types [a]</td>
<td width=60%>The defined or maximum (for variable types) length of the column times 2 (each binary byte is represented by a 2-digit hexadecimal number). </td>
</tr>
<tr valign=top>
<td width=40%>SQL_TYPE_DATE</td>
<td width=60%>10 (a date in the format yyyy-mm-dd).</td>
</tr>
<tr valign=top>
<td width=40%>SQL_TYPE_TIME</td>
<td width=60%>8 (a time in the format hh:mm:ss)<p>
or 9 + s (a time in the format hh:mm:ss[.fff…], where s is the fractional seconds precision).</p>
</td>
</tr>
<tr valign=top>
<td width=40%>SQL_TYPE_TIMESTAMP</td>
<td width=60%>19 (for a timestamp in the yyyy-mm-dd hh:mm:ss format)<p>
or 20 + s (for a timestamp in the yyyy-mm-dd hh:mm:ss[.fff…] format, where s is the fractional seconds precision).</p>
</td>
</tr>
<tr valign=top>
<td width=40%>All interval data types</td>
<td width=60%>See the “<a href="odappdpr_3qp4.htm">Interval Data Type Length”</a> section earlier in this appendix.</td>
</tr>
</table><br>
<p class=mini>
[a]If the driver cannot determine the column or parameter length of variable types, it returns SQL_NO_TOTAL.</p>
</font></BODY>
</HTML>
