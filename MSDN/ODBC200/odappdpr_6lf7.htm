<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C to SQL: Year-Month Intervals</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcc_to_sql__year_month_intervals"></a>C to SQL: Year-Month Intervals</h1>
<p>
The identifiers for the year-month interval ODBC C data types are:</p>
<p>
SQL_C_INTERVAL_MONTH<br>
SQL_C_INTERVAL_YEAR<br>
SQL_C_INTERVAL_YEAR_TO_MONTH</p>
<p>
The following table shows the ODBC SQL data types to which year-month interval C data may be converted. For an explanation of the columns and terms in the table, see “<a href="odappdpr_744z.htm">Converting Data from C to SQL Data Types</a>.”</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=594>
<tr valign=top>
<td class=label width=40%><b><br>
SQL type identifier</b></td>
<td class=label width=44%><b><br>
Test</b></td>
<td class=label width=16%><b><br>
SQLSTATE</b></td>
</tr>
<tr valign=top>
<td width=40%>SQL_CHAR [a]<br>
SQL_VARCHAR [a]<br>
SQL_LONGVARCHAR [a]</td>
<td width=44%>Column byte length &gt;= Character byte length.<p>
Column byte length &lt; Character byte length. [a]</p>
<p>
Data value is not a valid interval literal.</p>
</td>
<td width=16%>n/a<br>
<p>
22001<br>
</p>
<p>
22015</p>
</td>
</tr>
<tr valign=top>
<td width=40%>SQL_WCHAR<sup> </sup>[a]<br>
SQL_WVARCHAR<sup> </sup>[a]<br>
SQL_WLONGVARCHAR<sup> </sup>[a]</td>
<td width=44%>Column character length &gt;= Character length of data.<p>
Column character length &lt; Character length of data. [a]</p>
<p>
Data value is not a valid interval literal.</p>
</td>
<td width=16%>n/a<br>
<p>
22001<br>
</p>
<p>
22015</p>
</td>
</tr>
<tr valign=top>
<td width=40%>SQL_TINYINT [b]<br>
SQL_SMALLINT [b]<br>
SQL_INTEGER [b]<br>
SQL_BIGINT [b]<br>
SQL_NUMERIC [b]<br>
SQL_DECIMAL [b]</td>
<td width=44%>Conversion of a single-field interval did not result in truncation of whole digits.<p>
Conversion resulted in truncation of whole digits.</p>
</td>
<td width=16%>n/a<br>
<p>
22003</p>
</td>
</tr>
<tr valign=top>
<td width=40%>SQL_INTERVAL_MONTH <br>
SQL_INTERVAL_YEAR <br>
SQL_INTERVAL_YEAR_TO<br>
_MONTH</td>
<td width=44%>Data value was converted without truncation of any fields.<p>
One or more fields of data value were truncated during conversion.</p>
</td>
<td width=16%>n/a<br>
<p>
22015</p>
</td>
</tr>
</table><br>
<p class=mini>
[a]All C interval data types can be converted to a character data type.</p>
<p class=mini>
[b]If the type field in the interval structure is such that the interval is a single field, (SQL_YEAR or SQL_MONTH), then the interval C type can be converted to any exact numeric (SQL_TINYINT, SQL_SMALLINT, SQL_INTEGER, SQL_BIGINT, SQL_DECIMAL, or SQL_NUMERIC). </p>
<p>
The default conversion of an interval C type is to the corresponding year-month interval SQL type.</p>
<p>
The driver ignores the length/indicator value when converting data from the interval C data type and assumes that the size of the data buffer is the size of the interval C data type. The length/indicator value is passed in the <i>StrLen_or_Ind</i> argument in <b>SQLPutData</b> and in the buffer specified with the <i>StrLen_or_IndPtr</i> argument in <b>SQLBindParameter</b>. The data buffer is specified with the <i>DataPtr</i> argument in <b>SQLPutData</b> and the <i>ParameterValuePtr</i> argument in <b>SQLBindParameter</b>.</p>
</font></BODY>
</HTML>
