<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>File-Based Drivers</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h3><a name="odbcfile_based_drivers"></a>File-Based Drivers</h3>
<p>
File-based drivers are used with data sources such as dBASE that do not provide a stand-alone database engine for the driver to use. These drivers access the physical data directly and must implement a database engine to process SQL statements. Generally, the database engines in file-based drivers implement the subset of ODBC SQL defined by the <i>Minimum SQL conformance level</i>; for a list of the SQL statements in this conformance level, see Appendix C, “<a href="odappcpr_0mcy.htm">SQL Grammar</a>.”</p>
<p>
In comparing file-based and DBMS-based drivers, file-based drivers are harder to write because of the database engine component, less complicated to configure because there are no network pieces, and less powerful because few people have the time to write database engines as powerful as those produced by database companies.</p>
<p>
The next figure shows two different configurations of file-based drivers, one in which the data resides locally and the other in which it resides on a network file server.</p>
<p>
<img src="pr06.gif" border=0></p>
<p class=label>
<b>Configuration of file-based drivers</b></p>
</font></BODY>
</HTML>
