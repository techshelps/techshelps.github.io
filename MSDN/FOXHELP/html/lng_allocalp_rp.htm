<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_Alloca( ) API Library Routine</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lng_allocalp_rp"></a><sup></sup>_Alloca(&nbsp;) API Library Routine</h1>
<p>
<a href="lng_allocalp_rpx.htm">Example</a></p>
<p>
Allocates a block of stack space for the calling routine.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>void FAR * _Alloca</b>(<b>unsigned int </b><i>size</i>)<br>
<b>unsigned int </b><i>size</i>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Size of stack space to allocate in bytes. */</p>
<p class=label>
<b>Remarks</b></p>
<p>
_Alloca(&nbsp;) returns a pointer to the block if the block is successfully allocated, or returns zero if the block isn't allocated. _Alloca(&nbsp;) automatically frees memory when the routine ends, so no corresponding release routine is necessary.</p>
<p class=indent>
<B><b>Caution</b></B>&nbsp;&nbsp;&nbsp;Some C compilers, such as MPW C, do not support memory allocation from the stack; calls to _Alloca(&nbsp;) using such compilers will have unpredictable results. Instead, use local variables, or calls to _AllocHand(&nbsp;) and _FreeHand(&nbsp;), in your code to reserve memory.</p>
<p>
For more information on how to create an API library and integrate it with Visual FoxPro, see Chapter 28, <a href="dgaccessing_the_visual_foxpro_api.htm">Accessing the Visual FoxPro API</a>, in the <i>Programmer's Guide</i>.</p>
</BODY>
</HTML>
