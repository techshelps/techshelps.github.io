<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUILD PROJECT Command</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngbuild_project"></a><sup></sup>BUILD PROJECT Command</h1>
<p>
<a href="lngbuild_projectsa.htm">See Also</a></p>
<p>
Creates and builds a project file.</p>
<p class=label>
<b>Syntax</b></p>
<p>
BUILD PROJECT <i>ProjectFileName</i> [RECOMPILE]<br>
 &nbsp; [FROM <i>ProgramName1</i> | <i>MenuName1</i> | <i>ReportName1</i> | <i>LabelName1</i><br>
 &nbsp;&nbsp;&nbsp;&nbsp; | <i>FormName1</i> | <i>LibraryName1</i><br>
 &nbsp; [, <i>ProgramName2</i> | <i>MenuName2</i> | <i>ReportName2</i> | <i>LabelName2</i><br>
 &nbsp;&nbsp;&nbsp;&nbsp; | <i>FormName2</i> | <i>LibraryName2</i> ...]]</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>ProjectFileName</i></p>
<p class=indent>
Specifies the name of the project table to be created.</p>
<p class=dt>
RECOMPILE</p>
<p class=indent>
Compiles all files in the project. If RECOMPILE is omitted, only the files that have been modified are compiled when the project is built.</p>
<p class=dt>
FROM <i>ProgramName1</i> | <i>MenuName1</i> | <i>ReportName1</i> | <i>LabelName1</i><br>
| <i>FormName1</i> | <i>LibraryName1</i></p>
<p class=indent>
Specifies the files to include in the project. You can specify one or more program, menu, report, label, form, or library files and the project will keep track of these files, as well as the dependencies, references, and connections among them.</p>
<p class=tl>
The first executable program or menu file in the FROM clause is the master program file in the project by default.</P><p class=label>
<b>Remarks</b></p>
<p>
BUILD PROJECT automatically creates a project table with a .pjx file name extension by opening and processing one or more program, menu, report, label, form, or library files that you specify. You can use the project file to create one of two program types: an application file with an .app extension or an executable file with an .exe extension. The project table keeps track of all the files required to create an application, as well as the dependencies, references, and connections among the files. Once you specify the pieces in the project, Visual FoxPro makes sure that the application is based on the latest source files.</p>
<p>
For more information on building projects, see Chapter 13, <a href="dgcompiling_an_application.htm">Compiling an Application</a>, in the <i>Programmer's Guide</i>.</p>
<p>
When Visual FoxPro encounters a program, menu, or form file while creating a project file from BUILD PROJECT, it finds its compiled file and compares the time and date stamp of the two files. If the time and date stamp of the source file is later than that of the compiled file, Visual FoxPro recompiles the source file.</p>
<p>
Each project file contains a time and date stamp so you can refresh the project file when you make changes to files in the project or when dependencies change. This practice helps to guarantee that any applications created from a project file will always use the most recent source files. To refresh a project file, issue BUILD PROJECT without the optional FROM clause. Visual FoxPro then updates the specified project.</p>
<p>
When you issue BUILD PROJECT, unresolved references and other errors are reported but do not prevent the project file from being created. This enables you to build a project even when all the necessary pieces aren't actually created or available at the time the project is built. Unresolved references or other problems can be corrected by refreshing the project file at a later date, or by manually modifying the information stored in the project file with MODIFY PROJECT.</p>
</BODY>
</HTML>
