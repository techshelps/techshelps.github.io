<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SYS(2335) - Unattended Server Mode</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngsyslp2335rp___unattended_server_mode"></a><sup></sup>SYS(2335) – Unattended Server Mode</h1>
<p>
<a href="lngsyslp2335rp___unattended_server_modesa.htm">See Also</a></p>
<p>
Enables or disables modal states for distributable Visual FoxPro .exe automation servers.</p>
<p class=label>
<b>Syntax</b></p>
<p>
SYS(2335 [, 0 | 1])</p>
<p class=label>
<b>Returns</b></p>
<p>
Character</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
0</p>
<p class=indent>
Enables unattended mode. When unattended mode is enabled, a Visual FoxPro error is generated whenever a modal state occurs. Your .exe automation server can trap for these errors with an ON ERROR routine.</p>
<p class=dt>
1</p>
<p class=indent>
(Default) Disables unattended mode. Modal states which require user intervention can occur. Unattended mode is disabled at startup.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Use SYS(2335) to enable or disable modal states in Visual FoxPro .exe automation servers. Automation servers are created with the Project Manager. For additional information about using Visual FoxPro to create .exe automation servers, see Chapter 16, <a href="dgadding_ole.htm">Adding OLE</a>, in the <i>Programmer's Guide</i>.</p>
<p>
Modal states occur when dialogs or errors messages are displayed, requiring input from a user to exit the dialog or error message and continue program execution. Modal states can be undesirable in .exe servers that are deployed remotely, possibly without intervention from a user. Program execution is halted, and requires intervention for program execution to continue.</p>
<p>
The following table lists some typical examples of modal states that can occur in an .exe server.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Modal State</b></td>
<td class=label width=50%><b>Examples</b></td>
</tr>
<tr valign=top>
<td width=50%>WAIT command or MESSAGEBOX(&nbsp;) function</td>
<td width=50%>Can occur in program code.</td>
</tr>
<tr valign=top>
<td width=50%>Visual FoxPro errors such as “File access is denied” or “Allowed DO nesting level exceeded”</td>
<td width=50%>Can occur in program code.</td>
</tr>
<tr valign=top>
<td width=50%>Open dialog boxes</td>
<td width=50%>Can occur when files included in a SQL statement cannot be located.</td>
</tr>
<tr valign=top>
<td width=50%>SQL Connection Login dialog box</td>
<td width=50%>Can occur after a connection cannot be established.</td>
</tr>
</table><br>
<p>
SYS(2335 ,0) should be executed as soon as possible in unattended .exe automation server program code because a modal state can occur anytime after program execution begins.</p>
<p>
Note that SYS(2335) applies only to .exe automation servers for which the StartMode property equals two. Unattended mode is always enabled for in-process .dll automation servers (for which the StartMode property equals three).</p>
<p>
Issuing SYS(2335) without an argument in a runtime application returns its current setting.</p>
</BODY>
</HTML>
