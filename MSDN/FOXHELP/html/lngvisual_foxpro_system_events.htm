<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Visual FoxPro System Events (API library routines)</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngvisual_foxpro_system_events"></a><sup></sup>Visual FoxPro System Events (API Library Construction)</h1>
<p>
<a href="lngvisual_foxpro_system_eventssa.htm">See Also</a></p>
<p>
In this table, each Visual FoxPro event is listed along with the layout of its event record fields and a description of when the event occurs.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=20%><b>Event</b></td>
<td class=label width=29%><b>EventRec Fields</b></td>
<td class=label width=51%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=20%>nullEvent</td>
<td width=29%>what = nullEvent<br>
where.h = horizontal mouse location<br>
where.v = vertical mouse location<br>
when = ticks since startup</td>
<td width=51%>Occurs when no other events <br>
are pending. This is the most frequently occurring event and, for performance reasons, should be used sparingly.</td>
</tr>
<tr valign=top>
<td width=20%>mouseDownEvent</td>
<td width=29%>what = mouseDownEvent<br>
where.h = horizontal mouse location<br>
where.v = vertical mouse location<br>
mbState = left mouse button<br>
when = ticks since startup </td>
<td width=51%>Occurs whenever the left mouse button is pressed. Trap for the mouseDownEvent and use this in combination with the where point and _FindWindow function to see if the user clicked on the close menu box or on other parts of a window. (A closeEvent is not generated when you click on the close menu box of a window.)</td>
</tr>
<tr valign=top>
<td width=20%>keyDownEvent</td>
<td width=29%>what = keyDownEvent<br>
where.h = horizontal mouse location<br>
where.v = vertical mouse location<br>
message = key code <br>
(see Appendix A)<br>
modifier = modifier key<br>
when = ticks since startup</td>
<td width=51%>Occurs whenever a key is pressed on the keyboard or whenever the keyboard buffer is played.</td>
</tr>
<tr valign=top>
<td width=20%>deactivateEvent</td>
<td width=29%>what = deactivateEvent<br>
where.h = horizontal mouse location<br>
where.v = vertical mouse location<br>
message = WHANDLE to window<br>
when = ticks since startup</td>
<td width=51%>Occurs whenever a window becomes deactivated by clicking on the close menu box, activating another window or using the DEACTIVATE WINDOW command. A deactivateEvent is usually followed by an activateEvent.</td>
</tr>
<tr valign=top>
<td width=20%>activateEvent</td>
<td width=29%>what = activateEvent<br>
where.h = horizontal mouse location<br>
where.v = vertical mouse location<br>
message = WHANDLE to window<br>
when = ticks since startup</td>
<td width=51%>Occurs whenever a window is activated. This includes system and user windows as well as dialogs, so it is suggested that whenever you receive this type of event, you check to see if it pertains to your window. An activateEvent is usually preceded by a deactivateEvent.</td>
</tr>
<tr valign=top>
<td width=20%>menuHitEvent</td>
<td width=29%>what = menuHitEvent<br>
misc = MENUID<br>
misc2 = BAR #<br>
when = ticks since startup<br>
modifier = modifier key</td>
<td width=51%>Occurs when a user makes a selection from a menu-type item. Menu-type items include menus, popups and scrollable lists. Because menuHitEvents occur very often, it is best to use the _OnSelection function to do a certain task upon a menu selection so you can eliminate a lot of extra event checking.</td>
</tr>
<tr valign=top>
<td width=20%>closeEvent</td>
<td width=29%>what = closeEvent<br>
message = WHANDLE to window<br>
when = ticks since startup</td>
<td width=51%>Occurs when a window is removed from memory with the RELEASE WINDOW command or by exiting Visual FoxPro. To check if a user closed a window by clicking on the close menu box, check for a mouseDownEvent.</td>
</tr>
<tr valign=top>
<td width=20%>hideEvent</td>
<td width=29%>what = hideEvent<br>
when = ticks since startup</td>
<td width=51%>Occurs when a window is hidden with the HIDE WINDOW command.</td>
</tr>
<tr valign=top>
<td width=20%>showEvent</td>
<td width=29%>what = showEvent<br>
when = ticks since startup</td>
<td width=51%>Occurs when a window is shown with the SHOW WINDOW command.</td>
</tr>
<tr valign=top>
<td width=20%>hotkeyEvent</td>
<td width=29%>what = hotkeyEvent<br>
where.h = horizontal mouse location<br>
where.v = vertical mouse location<br>
message = key code<br>
(see FoxPro Key Codes chapter)<br>
modifier = modifier key<br>
when = ticks since startup</td>
<td width=51%>Occurs when the user presses a key that has actions assigned to it with the ON KEY LABEL command.</td>
</tr>
<tr valign=top>
<td width=20%>sizeEvent</td>
<td width=29%>what = sizeEvent<br>
when = ticks since startup</td>
<td width=51%>Occurs only when a ZOOM WINDOW or SIZE WINDOW command is issued. To check for an instance of a user clicking on the size control of a window, check for a mouseDownEvent.</td>
</tr>
<tr valign=top>
<td width=20%>zoomEvent</td>
<td width=29%>what = zoomEvent<br>
when = ticks since startup</td>
<td width=51%>Occurs only when the ZOOM WINDOW command is executed. To check for the instance of a user clicking on the zoom control, check for a mouseDownEvent.</td>
</tr>
</table><br>
</BODY>
</HTML>
