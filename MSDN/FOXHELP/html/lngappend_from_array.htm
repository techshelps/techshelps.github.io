<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>APPEND FROM ARRAY Command</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngappend_from_array"></a><sup></sup>APPEND FROM ARRAY Command</h1>
<p>
<a href="lngappend_from_arrayx.htm">Example</a> &nbsp; <a href="lngappend_from_arraysa.htm">See Also</a></p>
<p>
Adds one record to the currently selected table for each row in an array and fills each record with data from the corresponding array row.</p>
<p class=label>
<b>Syntax</b></p>
<p>
APPEND FROM ARRAY <i>ArrayName</i><br>
 &nbsp; [FOR <i>lExpression</i>]<br>
 &nbsp; [FIELDS <i>FieldList</i><br>
 &nbsp; | FIELDS LIKE <i>Skeleton</i><br>
 &nbsp; | FIELDS EXCEPT <i>Skeleton</i>]</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>ArrayName</i></p>
<p class=indent>
Specifies the name of the array that contains the data to be copied to the new records. New records are added to the table until all rows in the array are appended.</p>
<p class=dt>
FOR <i>lExpression</i></p>
<p class=indent>
Specifies a condition for appending records from the array. <i>lExpression</i> must contain the name of a target field in its conditional expression.</p>
<p class=tl>
Before a row of the array is appended to a record in the table, the array element corresponding to the target field specified in <i>lExpression</i> is checked to determine whether that array element meets the condition in <i>lExpression</i>. If the array element satisfies the condition, a record is appended.</P><p class=tl>
If the array element does not satisfy the condition, the array row is not appended and the next row in the array is checked to determine whether it meets the condition.</P><p class=dt>
FIELDS <i>FieldList</i></p>
<p class=indent>
Specifies that only the fields in <i>FieldList</i> are updated from the array. The first field in the list is updated with the contents of the first element in the array, the second field is updated from the second element, and so on.</p>
<p class=dt>
FIELDS LIKE <i>Skeleton</i></p>
<p class=indent>
Specifies that fields that match the field skeleton <i>Skeleton</i> are updated from the array.</p>
<p class=dt>
FIELDS EXCEPT <i>Skeleton</i></p>
<p class=indent>
Specifies that all fields except those that match the field skeleton <i>Skeleton</i> are updated from the array.</p>
<p class=tl>
The field skeleton <i>Skeleton</i> supports wildcards. For example, to specify that all fields that begin with the letters A and P are updated from the array, use the following:</P><pre><code>APPEND FROM ARRAY aMyArray FIELDS LIKE A*,P*
</code></pre>
<p class=tl>
The LIKE clause can be combined with the EXCEPT clause:</P><pre><code>APPEND FROM ARRAY aMyArray FIELDS LIKE A*,P* EXCEPT PARTNO*
</code></pre>
<p class=label>
<b>Remarks</b></p>
<p>
Memo and general fields are ignored in APPEND FROM ARRAY. When a table is open for shared use, APPEND FROM ARRAY locks the table header while records are being added.</p>
<p>
If the array is one-dimensional, APPEND FROM ARRAY adds one record to the table. The contents of the first array element fill the first field of the newly added record, the contents of the second element of the array fill the second field of the record, and so on.</p>
<p>
If the one-dimensional array has more elements than the table has fields, the additional elements are ignored. If the table has more fields than the array has elements, the additional fields are initialized to the default empty value. Here are the default empty values for each field type:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=26%><b>Field type</b></td>
<td class=label width=74%><b>Default value</b></td>
</tr>
<tr valign=top>
<td width=26%>Character</td>
<td width=74%>Spaces</td>
</tr>
<tr valign=top>
<td width=26%>Numeric</td>
<td width=74%>0</td>
</tr>
<tr valign=top>
<td width=26%>Currency</td>
<td width=74%>0</td>
</tr>
<tr valign=top>
<td width=26%>Float</td>
<td width=74%>0</td>
</tr>
<tr valign=top>
<td width=26%>Integer</td>
<td width=74%>0</td>
</tr>
<tr valign=top>
<td width=26%>Double</td>
<td width=74%>0</td>
</tr>
<tr valign=top>
<td width=26%>Date</td>
<td width=74%>Empty Date (e.g. CTOD(""))</td>
</tr>
<tr valign=top>
<td width=26%>DateTime</td>
<td width=74%>Empty DateTime (e.g. CTOT(""))</td>
</tr>
<tr valign=top>
<td width=26%>Logical</td>
<td width=74%>False (.F.)</td>
</tr>
<tr valign=top>
<td width=26%>Memo</td>
<td width=74%>Empty (no contents)</td>
</tr>
</table><br>
<p>
If the array is two-dimensional, APPEND FROM ARRAY adds a new record to the table for each row in the array. For example, if the array has four rows, four new records are appended to the table.</p>
<p>
The contents of the first array column fill the first field of the newly added records, the second array column fills the second field of the new records, and so on. For example, if the array has four rows and three columns, elements from the first array column fill the first field in each of the four new records appended to the table.</p>
<p>
If the two-dimensional array has more columns than the table has fields, the additional columns are ignored. If the table has more fields than the array has columns, the additional fields are initialized to empty values.</p>
<p>
APPEND FROM ARRAY can fill a field even if the data type of the corresponding array element doesn't match the data type of the field, provided that the array element data is compatible with the data type of the corresponding field. If the data isn't compatible, the field is initialized to an empty value. </p>
</BODY>
</HTML>
