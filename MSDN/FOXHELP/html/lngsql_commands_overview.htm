<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Commands Overview</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngsql_commands_overview"></a><sup></sup>SQL Commands Overview</h1>
<p>
<a href="lngsql_commands_overviewsa.htm">See Also</a></p>
<p>
Visual FoxPro supports Structured Query Language (SQL) commands. Visual FoxPro's SQL commands make use of Rushmore technology to optimize performance, and a single SQL command can be used to replace multiple Visual FoxPro commands.</p>
<p>
Visual FoxPro supports the following SQL commands:</p>
<p class=dt>
<a href="lngselect___sql.htm">SELECT - SQL</a></p>
<p class=indent>
Specifies the criteria on which a query is based and issues the query. Visual FoxPro interprets the query and retrieves the specified data from the table(s). The SELECT command is built into Visual FoxPro like any other Visual FoxPro command. You can create a SELECT command query in these areas:
<ul type=disc>
<li>
In the Command window.<br><br></li>
<li>
In a Visual FoxPro program (like any other Visual FoxPro command).<br><br></li>
<li>
In the Query Designer.</li>
</ul>
<p class=dt>
<a href="lngalter_table___sql.htm">ALTER TABLE - SQL</a></p>
<p class=indent>
Modifies an existing table. You can modify the name, type, precision, scale, null value support, and referential integrity rules for each field in the table.</p>
<p class=dt>
<a href="lngcreate_cursor___sql.htm">CREATE CURSOR - SQL</a></p>
<p class=indent>
Creates a temporary table. Each field in the temporary table is defined with a name, type, precision, scale, null value support, and referential integrity rules. These definitions can be obtained from the command itself or from an array.</p>
<p class=dt>
<a href="lngcreate_table___sql.htm">CREATE TABLE -SQL</a></p>
<p class=indent>
Creates a table. Each new table field is defined with a name, type, precision, scale, null value support, and referential integrity rules. These definitions can be obtained from the command itself or from an array.</p>
<p class=dt>
<a href="lngdelete___sql.htm">DELETE - SQL</a></p>
<p class=indent>
Marks records in a table for deletion using SQL syntax.</p>
<p class=dt>
<a href="lnginsert___sql.htm">INSERT - SQL</a></p>
<p class=indent>
Appends a new record to the end of an existing table. The new record contains data listed in the INSERT command or from an array.</p>
<p class=dt>
<a href="lngupdate___sql.htm">UPDATE - SQL</a></p>
<p class=indent>
Updates records in a table. The records can be updated based on the results of a SELECT - SQL statement.</p>
</BODY>
</HTML>
