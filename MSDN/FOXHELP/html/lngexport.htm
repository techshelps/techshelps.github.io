<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EXPORT Command</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngexport"></a><sup></sup>EXPORT Command</h1>
<p>
<a href="lngexportsa.htm">See Also</a></p>
<p>
Copies data from a Visual FoxPro table to a file in a different format.</p>
<p class=label>
<b>Syntax</b></p>
<p>
EXPORT TO <i>FileName</i><br>
 &nbsp; [TYPE] DIF | MOD | SYLK <br>
 &nbsp;&nbsp;&nbsp;&nbsp; | WK1 | WKS | WR1 | WRK | XLS | XL5<br>
 &nbsp; [FIELDS <i>FieldList</i>]<br>
 &nbsp; [<i>Scope</i>]<br>
 &nbsp; [FOR <i>lExpression1</i>]<br>
 &nbsp; [WHILE <i>lExpression2</i>]<br>
 &nbsp; [NOOPTIMIZE]<br>
 &nbsp; [AS <i>nCodePage</i>]</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>FileName</i></p>
<p class=indent>
Specifies the name of the file to which Visual FoxPro exports data. If you do not include an extension with the file name, the default extension for the specified file type is assigned.</p>
<p class=dt>
TYPE</p>
<p class=indent>
Specifies the type of file to be created. The TYPE keyword is optional, but you must specify one of the following file types.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>File type</b></td>
<td class=label width=72%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=28%>DIF</td>
<td width=72%>Each field from a Visual FoxPro table becomes a vector (column) and each record becomes a tuple (row) in a DIF (Data Interchange Format) file, used by VisiCalc. The new file name is assigned a .DIF extension if an extension isn't included in <i>FileName</i>.</td>
</tr>
<tr valign=top>
<td width=28%>MOD</td>
<td width=72%>Use the MOD clause to export to a file in Microsoft Multiplan version 4.01 MOD format. The new file name is assigned a .MOD extension if you don't include an extension in <i>FileName</i>.</td>
</tr>
<tr valign=top>
<td width=28%>SYLK</td>
<td width=72%>A Symbolic Link interchange format (used by Microsoft Multiplan) in which each field from a Visual FoxPro table becomes a column in the spreadsheet and each record becomes a row. By default, SYLK file names have no extension.</td>
</tr>
<tr valign=top>
<td width=28%>WK1</td>
<td width=72%>Include this option to create a Lotus 1-2-3 spreadsheet from a Visual FoxPro table. A .WK1 extension is assigned to the spreadsheet file name for use with Lotus 1-2-3 revision 2.x. Each field from the table becomes a column in the new spreadsheet, and each record in the table becomes a spreadsheet row.</td>
</tr>
<tr valign=top>
<td width=28%>WKS</td>
<td width=72%>Include this option to create a Lotus 1-2-3 spreadsheet from a Visual FoxPro table. A .WKS extension is assigned to the spreadsheet file name for use with Lotus 1-2-3 revision 1-A. Each field from the table becomes a column in the new spreadsheet, and each record becomes a row in the spreadsheet.</td>
</tr>
<tr valign=top>
<td width=28%>WR1</td>
<td width=72%>Include this option to create a Lotus Symphony spreadsheet from a Visual FoxPro table. A .WR1 extension is assigned to the spreadsheet for use with Symphony version 1.01. Each field from the table becomes a column in the new spreadsheet, and each record in the table becomes a row in the spreadsheet.</td>
</tr>
<tr valign=top>
<td width=28%>WRK</td>
<td width=72%>Include this option to create a Lotus Symphony spreadsheet from a Visual FoxPro table. A .WRK extension is assigned to the spreadsheet file name for use with Symphony version 1.10. Each field from the table becomes a column in the new spreadsheet, and each record in the table becomes a row in the spreadsheet.</td>
</tr>
<tr valign=top>
<td width=28%>XLS</td>
<td width=72%>Include this option to create a Microsoft Excel worksheet from a Visual FoxPro table. Each field in the selected table becomes a column in the worksheet, and each table record becomes a row. An .XLS file name extension is assigned to the newly created worksheet file unless you specify a different extension.</td>
</tr>
<tr valign=top>
<td width=28%>XL5</td>
<td width=72%>Include this option to create a Microsoft Excel version 5.0 worksheet file from a Visual FoxPro table. Each field from the currently selected table becomes a column in the spreadsheet and each record becomes a row. An .XLS extension is assigned to the new worksheet if you do not include a file extension.</td>
</tr>
</table><br>
<p class=dt>
FIELDS <i>FieldList</i></p>
<p class=indent>
Specifies which fields are copied to the new file. If you omit the FIELDS clause, all fields are copied to the new file. Memo and general fields are not copied to the new file even if their names are included in the field list.</p>
<p class=dt>
<i>Scope</i></p>
<p class=indent>
Specifies a range of records to copy to the new file. <i>Scope</i> Specifies a range of records to copy to the new file. Only the records that fall within the range are copied to the new file. The scope clauses are: ALL, NEXT <i>nRecords</i>, RECORD <i>nRecordNumber</i>, and REST. </p>
<p class=tl>
For more information on scope clauses, see the <a href="tblscope_clauses.htm">Scope Clauses</a> online topic. Commands that include <i>Scope</i> operate only on the table in the active work area.</P><p class=tl>
The default scope for EXPORT is all records.</P><p class=dt>
FOR <i>lExpression1</i></p>
<p class=indent>
Specifies that only records that satisfy the logical condition <i>lExpression1</i> are copied to the new file. Using this argument allows you to filter out undesired records.</p>
<p class=tl>
Rushmore optimizes an EXPORT&nbsp;...&nbsp;FOR <i>lExpression1</i> command if <i>lExpression1</i> is an optimizable expression. For best performance, use an optimizable expression in the FOR clause. </P><p class=tl>
For more information, see <a href="lngset_optimize.htm">SET OPTIMIZE</a> and "Understanding Rushmore Technology" in Chapter 15, <a href="dgoptimizing_applications.htm">Optimizing Applications</a>, in the <i>Programmer's Guide</i>.</P><p class=dt>
WHILE <i>lExpression2</i></p>
<p class=indent>
Specifies a condition whereby records are copied to the new file for as long as the logical expression <i>lExpression2</i> evaluates to true (.T.).</p>
<p class=dt>
NOOPTIMIZE</p>
<p class=indent>
Disables Rushmore optimization of EXPORT.</p>
<p class=tl>
For more information, see <a href="lngset_optimize.htm">SET OPTIMIZE</a> and "Understanding Rushmore Technology" in Chapter 15, <a href="dgoptimizing_applications.htm">Optimizing Applications</a>, in the <i>Programmer's Guide</i>.</P><p class=dt>
AS <i>nCodePage</i></p>
<p class=indent>
Specifies the code page for the file EXPORT creates. Visual FoxPro copies the contents of the currently selected table, and, as it copies the data, automatically converts the data to the code page you specify for the new file. If possible, Visual FoxPro marks the newly created file with the code page you specify.</p>
<p class=tl>
If you specify a value for <i>nCodePage</i> that is not supported, Visual FoxPro generates an error message. You can use GETCP(&nbsp;) for <i>nCodePage</i> to display the Code Page dialog box, allowing you to specify a code page for the file Visual FoxPro creates.</P><p class=tl>
If you omit AS <i>nCodePage</i>, no code page conversion occurs. If possible, Visual FoxPro marks the newly created file with the code page of the table from which the data is copied.</P><p class=tl>
If <i>nCodePage</i> is 0, no code page conversion occurs and the newly created file is not marked with a code page.</P><p class=label>
<b>Remarks</b></p>
<p>
Use EXPORT to use Visual FoxPro data in other software packages.</p>
<p>
If the table you are exporting from is indexed, the new file is created in the indexed order.</p>
</BODY>
</HTML>
