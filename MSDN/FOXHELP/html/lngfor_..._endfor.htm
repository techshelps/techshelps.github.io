<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FOR...ENDFOR Command</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngfor_..._endfor"></a><sup></sup>FOR&nbsp;...&nbsp;ENDFOR Command</h1>
<p>
<a href="lngfor_..._endforx.htm">Example</a> &nbsp; <a href="lngfor_..._endforsa.htm">See Also</a></p>
<p>
Executes a set of commands a specified number of times.</p>
<p class=label>
<b>Syntax</b></p>
<p>
FOR <i>Var</i> = <i>nInitialValue</i> TO <i>nFinalValue</i> [STEP <i>nIncrement</i>] <br>
 &nbsp; <i>Commands</i><br>
 &nbsp; [EXIT]<br>
 &nbsp; [LOOP]<br>
ENDFOR | NEXT</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>Var</i></p>
<p class=indent>
Specifies a variable or an array element that acts as the counter. The variable or array element doesn't have to exist before FOR&nbsp;...&nbsp;ENDFOR is executed.</p>
<p class=dt>
<i>nInitialValue</i> TO <i>nFinalValue</i></p>
<p class=indent>
<i>nInitialValue</i> is the initial value of the counter; <i>nFinalValue</i> is the final value of the counter.</p>
<p class=dt>
STEP <i>nIncrement</i></p>
<p class=indent>
<i>nIncrement</i> is the amount the counter is incremented or decremented. If <i>nIncrement</i> is negative, the counter is decremented. If you omit STEP, the counter is incremented by 1.</p>
<p class=dt>
<i>Commands</i></p>
<p class=indent>
Specifies the Visual FoxPro commands to be executed. <i>Commands</i> can include any number of commands.</p>
<p class=dt>
EXIT</p>
<p class=indent>
Transfers control from within the FOR&nbsp;...&nbsp;ENDFOR loop to the command immediately following ENDFOR. You can place EXIT anywhere between FOR and ENDFOR.</p>
<p class=dt>
LOOP</p>
<p class=indent>
Returns control directly back to the FOR clause without executing the statements between LOOP and ENDFOR. The counter is incremented or decremented as if ENDFOR were reached. LOOP can be placed anywhere between FOR and ENDFOR.</p>
<p class=label>
<b>Remarks</b></p>
<p>
A variable or an array element is used as a counter to specify how many times the Visual FoxPro commands inside the FOR&nbsp;...&nbsp;ENDFOR loop are executed.</p>
<p>
The Visual FoxPro commands after FOR are executed until ENDFOR or NEXT is reached. The counter <i>MemVarName</i> is then incremented by the value of <i>nIncrement</i>. If you omit the STEP clause, the counter is incremented by 1. The counter is then compared with <i>nFinalValue</i>. If the counter is less than or equal to <i>nFinalValue</i>, the commands following the FOR clause are executed again. If the counter is greater than <i>nFinalValue</i>, the FOR&nbsp;...&nbsp;ENDFOR loop is exited and program execution continues with the first command following ENDFOR or NEXT.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The values of <i>nInitialValue</i>, <i>nFinalValue</i>, and <i>nIncrement</i> are only read initially. However, changing the value of the counter <i>MemVarName</i> inside the loop affects the number of times the loop is executed.</p>
<p>
If the value of <i>nIncrement</i> is negative and the initial value <i>nInitialValue</i> is greater than the final value <i>nFinalValue</i>, the counter is decremented each time through the loop.</p>
</BODY>
</HTML>
