<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating .DBF-Style Help</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="dgcreating__dbf_style_help"></a><sup></sup>Chapter 24: Creating .DBF-Style Help</h1>
<p>
.DBF-style Help is simple to create and uses standard Visual FoxPro tables that port easily to other Visual FoxPro platforms. If you want a simple solution to providing help, if you're developing cross-platform applications, or if you prefer to maintain a backward-compatible help file, you can provide .DBF-style help for your users.</p>
<p>
This chapter discusses:</p>
<ul type=disc>
<li>
<a href="#dgdesigning_dbf_style_help">Designing .DBF-Style Help</a></li>
<li>
<a href="#dgviewing_the_sample_dbf_style_help_file">Viewing the Sample .DBF-Style Help File</a></li>
<li>
<a href="#dgusing_dbf_style_help">Using .DBF-Style Help</a></li>
<li>
<a href="#dgcustomizing_dbf_style_help">Customizing .DBF-Style Help</a></li>
</ul>

<h2><a name="dgdesigning_dbf_style_help"></a>Designing .DBF-Style Help</h2>
<p>
.DBF-style Help files, or Help tables, are <a href="glsfree_table.htm">free tables</a> that are displayed in the Help window. With this style of Help, your users can:</p>
<ul type=disc>
<li>
Get context-sensitive Help for the current dialog box, menu command, or object by pressing F1.</li>
<li>
Jump to related topics within the Help file by selecting a topic from the See Also drop-down list.</li>
<li>
Select a keyword or phrase in the middle of a topic and jump to it by clicking the Look Up button.</li>
<li>
Copy any selected text in the Help window to the clipboard.</li>
</ul>
<p>
A sample .DBF-style Help file, Ttrade.dbf, is included in Visual FoxPro and is located in the Visual Studio …\Samples\Vfp98\Tastrade\Help directory. The following sections use the Ttrade.dbf sample to describe designing and navigating .DBF-style Help.</p>

<h2><a name="dgviewing_the_sample_dbf_style_help_file"></a>Viewing the Sample .DBF-Style Help File</h2>
<p class=label>
<b>To view the Ttrade.dbf sample Help file</b></p>
<ul type=disc>
<li>
In the <b>Command</b> window, with the default directory set to the directory containing Ttrade.dbf, type:<pre><code>SET HELP TO TTRADE.DBF
HELP
</code></pre>
<p class=tl>
Visual FoxPro displays the Ttrade .DBF-style Help in its own window.</P></li>
</ul>
<p>
The .DBF Help window has two modes, Topics and Details. The Topics mode displays a list of all the topics in the Help file. Note that the font for the .DBF Help window is MS Sans Serif and cannot be changed.</p>
<p class=label>
<b>.DBF Help window in Topics mode</b></p>
<p>
<img src="afd23001.gif" border=0></p>
<p>
When you double-click a topic, the contents of that topic appear in Details mode.</p>
<p class=label>
<b>.DBF Help window in Details mode</b></p>
<p>
<img src="afd23002.gif" border=0></p>
<h3>Help Table Requirements</h3>
<p>
Help tables hold a maximum of 32,767 records and must contain at least two fields. The table may have an optional first field for context sensitivity. The following example shows you the setup of a typical Help table:</p>
<p class=label>
<b>TTRADE table in Browse mode</b></p>
<p>
<img src="afd23003.gif" border=0></p>
<p>
There are no requirements for the field names. The field types are, in order:</p>
<p>
<B><b>Numerical</b></B>&nbsp;&nbsp;&nbsp;This field is optional and contains the Help context ID used with context-sensitive Help.</p>
<p>
<B><b>Character</b></B>&nbsp;&nbsp;&nbsp;This is the topic name that appears in the Topics mode of the Help window.</p>
<p>
<B><b>Memo</b></B>&nbsp;&nbsp;&nbsp;This field holds the information displayed in the Details mode of the Help window.</p>
<p>
Beyond these requirements, you can add as many additional fields as you wish.</p>
<h3>Understanding Ttrade.dbf</h3>
<p>
Ttrade.dbf is a small example of a .DBF-style Help file. You can pattern your Help file after Ttrade.dbf, or you can create your own design. Because a Help file is a table, you can create your own Help file by creating a new table or by copying and changing an existing one.</p>
<p>
To view or edit the Ttrade.dbf table, open it and browse through it as you would any other table. If you've previously run the command SET HELP TO TTRADE.DBF, you must first use the <a href="lngset_help.htm">SET HELP OFF</a> command before opening Ttrade.dbf.</p>
<h4>TTRADE Topics</h4>
<p>
Several kinds of topics are included in Ttrade.dbf, including:</p>
<ul type=disc>
<li>
Step-by-step instructions.</li>
<li>
Interface topics for context-sensitive Help, including menu commands and dialog boxes.</li>
<li>
General information.</li>
</ul>
<p>
You might consider these and other categories for your own Help file.</p>
<h4>TTRADE Details</h4>
<p>
When a user selects a topic from the Topics mode, the Help window displays the contents of the memo field named Details.</p>
<h4>TTRADE Cross-References</h4>
<p>
See Also cross-references appear at the end of the Details information for most Help topics. These references are displayed automatically in the See Also box and act as direct links to related topics.</p>
<p class=label>
<b>To create a See Also cross-reference</b>
<ol>
<li>
At the end of the memo field, type <b>See Also</b> followed by a colon and optional spaces.<br><br></li>
<li>
On the same line, type a comma-delimited list of the desired topics.<br><br></li>
<li>
Enter a carriage return to signal the end of the list.</li>
</ol>
<p>
Case doesn't matter in the See Also list, and Visual FoxPro trims leading and trailing spaces from each referenced topic. For example, cross-references for the Overview topic appear in the following illustration.</p>
<p class=label>
<b>Contents of the Overview topic’s memo field</b></p>
<p>
<img src="afd23004.gif" border=0></p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Add lines above and below your See Also section at the end of your topic to separate it visually from the contents of the topic.</p>
<p>
When locating a topic in the See Also box, Visual FoxPro tries to match the user’s selection with the first Help topic that consists of or begins with the same text string. If Visual FoxPro cannot find a match, it displays “No help found for <i>topicname</i>” in the status bar.</p>

<h2><a name="dgusing_dbf_style_help"></a>Using .DBF-Style Help</h2>
<p>
Your user will be able to easily access Help if you include a Contents command on your Help menu that uses the HELP command. When a user chooses the Contents command, the Help window appears in Topics mode. The user can either scroll through the list to find the desired topic or type a letter to select the first topic starting with that letter. Once a topic is selected, there are three ways to display information about the topic:</p>
<ul type=disc>
<li>
Double-click the topic in the list.</li>
<li>
Click the Help button.</li>
<li>
Press ENTER.</li>
</ul>

<h2><a name="dgcustomizing_dbf_style_help"></a>Customizing .DBF-Style Help</h2>
<p>
In your application code, you specify which Help file is used, which and when topics are displayed, and other optional settings. If you include context-sensitive Help, your users can easily get Help on demand from your application’s dialog boxes and menu commands.</p>
<h3>Specifying a Help Table</h3>
<p>
Specify your Help table by issuing the command <a href="lngset_help.htm">SET HELP</a> TO <i>filename.</i> This closes the current Help table if one is already open and opens <i>filename</i> as the new Help table.</p>
<p>
In a typical programming scenario, save the name of the current Help file in a variable and specify the name of your Help file in your initialization code, as in the following example:</p>
<pre><code>cUserHlp = SET("HELP", 1)
SET HELP TO MYHELP.DBF
</code></pre>
<p>
When the application exits, you can restore the original Help file:</p>
<pre><code>SET HELP TO (cUserHlp)
</code></pre>
<h3>Displaying Topics in the Help Window</h3>
<p>
After specifying the Help table, you can specify which topics you want to display in these ways:</p>
<ul type=disc>
<li>
For topic selection by topic name, use either the <a href="lnghelp.htm">HELP Topic</a> or the <a href="lngset_topic.htm">SET TOPIC TO cHelpTopicName</a> commands.</li>
<li>
For context-sensitive topics, use the <a href="lnghelpcontextid_property.htm">HelpContextID</a> property.</li>
<li>
To display a subset of topics, use the <a href="lngset_helpfilter.htm">SET HELPFILTER</a> command.</li>
</ul>
<h4>Selecting Topics by Topic Name</h4>
<p>
To select topics by name, use the <a href="lnghelp.htm">HELP Topic</a> command. When you use this command, Visual FoxPro searches the Help table to find the record whose topic field matches <i>Topic</i>. The search is case-insensitive.</p>
<p>
When Visual FoxPro finds a match, it displays the contents of the Details memo field in the Details mode of the Help window. If Visual FoxPro cannot find a match, it displays all the topics in a list in the Help Topics dialog box with the closest match highlighted.</p>
<h4>Enabling Context-Sensitive Help</h4>
<p>
You can design your application so that your user is able to get context-sensitive Help in two ways:</p>
<ul type=disc>
<li>
By pressing F1 at any time.</li>
<li>
By clicking a Help button that you include in your forms and dialog boxes.</li>
</ul>
<h4>Reserving F1</h4>
<p>
When a user presses F1 in your application, Visual FoxPro can display a context-sensitive Help topic. To do this, assign a Help context ID to a topic in your Help table and assign the same value to the <a href="lnghelpcontextid_property.htm">HelpContextID</a> property of your form or control. When the form or control has the focus and the user presses F1, Visual FoxPro displays the matching topic.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;F1 is enabled for context-sensitive Help by default. Because this is a recognized standard for Help, redefining this key is not recommended.</p>
<h4>Including Help Buttons in Forms</h4>
<p>
If you add Help buttons to your forms, users can access Help more easily. You should especially consider adding a Help button if your user is a novice.</p>
<p class=label>
<b>To create a context-sensitive Help topic</b>
<ol>
<li>
In the first field of a record in your Help table, enter a numerical value.<br><br></li>
<li>
Fill in the record’s Topic and Details fields.</li>
</ol>
<p>
Now you're ready to map the Help topic to your form. It's a good idea to map a Help button, the form, and its objects to the same Help topic.</p>
<p class=label>
<b>To set context-sensitivity and add a Help button</b>
<ol>
<li>
In the <a href="lnginit_event.htm">Init</a> event for your form, set the <a href="lnghelpcontextid_property.htm">HelpContextID</a> property for all the form’s objects to the same value you assigned to the Help topic. For example, if the value is 7, you can use the following command:<pre><code>THIS.SetAll("HelpContextID", 7)
</code></pre>
</li>
<li>
Add a command button to your form.<br><br></li>
<li>
Set the <a href="lngcaption_property.htm">Caption</a> property of the command button to Help.<br><br></li>
<li>
In the <a href="lngclick_event.htm">Click</a> event of the command button, add the following command:<pre><code>HELP ID THIS.HelpContextID
</code></pre>
<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Save the Help button as a class so that you can easily add it to any form. In the <a href="wndform_designer.htm">Form Designer</a>, choose Save As Class from the File menu. For more information about saving objects as classes, see Chapter 9, <a href="dgcreating_forms.htm">Creating Forms</a>.</p></li>
</ol>
<h3>Controlling the Location of the Help Window</h3>
<p>
To specify a location for your Help, you must create your own window using the <a href="lngdefine_window.htm">DEFINE WINDOW</a> command. Use this command in your initialization code to specify the size and location of the window and then display the window by activating or showing it.</p>
<p>
For example, the following commands define a window named <code>test</code> and display the current Help table within that window:</p>
<pre><code>DEFINE WINDOW test FROM 1,1 TO 35,60 SYSTEM 
ACTIVATE WINDOW test 
HELP IN WINDOW test 
</code></pre>
<h3>Tailoring Help to Your Application</h3>
<p>
Because you can add any number of fields to a Help table and can use any logical expression to select Help topics, only your imagination limits the kind of Help system you can create.</p>
<p>
For example, you can:</p>
<ul type=disc>
<li>
Define one or many program variables that control the behavior of your Help system and then assign values to these variables based on the operating mode of your program.</li>
<li>
Provide more detail in Help files for novice users than you provide in files for experienced users.</li>
<li>
Permit users to access Help only if they enter an appropriate password.</li>
</ul>
</BODY>
</HTML>
