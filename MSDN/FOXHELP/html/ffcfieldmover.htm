<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Field Mover (VFP Foundation Class)</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="ffcfieldmover"></a><sup></sup>Field Mover</h1>
<p>
<a href="ffcfieldmoversa.htm">See Also</a></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Category</b></td>
<td width=67%>Movers</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Default Catalog</b></td>
<td width=67%>Visual&nbsp;FoxPro&nbsp;Catalog\Foundation&nbsp;Classes\User&nbsp;Controls</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Class</b></td>
<td width=67%>_fieldmover</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Base Class</b></td>
<td width=67%>Container</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Class Library</b></td>
<td width=67%>_mover.vcx</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Parent Class</b></td>
<td width=67%>_supermover</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Sample</b></td>
<td width=67%>...\Samples\Vfp98\Solution\Ffc\movers.scx</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
This is a <a href="ffcsupermover.htm">super mover</a> list box class that automatically loads fields from the current data source when you drop it on a form.</p>
<p>
To use, drop the class on a project or form or, from the Component Gallery <a href="newitem_shortcut_menu.htm">Item Shortcut menu</a>, select <b>Add to Project</b> or <b>Add to Form</b>. When you add the class to a form, Visual FoxPro opens a builder so you can accept or specify the appropriate <i>SkipGeneral</i>, <i>SkipMemo</i>, and <i>AllowReadOnly</i> values. When you drop the class on a project, you can choose between adding the class or creating a subclass.</p>
<p>
See <a href="ffcusing_visual_foxpro_foundation_classes.htm">Guidelines for Using Visual FoxPro Foundation Classes</a> for more information on using foundation classes.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Properties, Events, Methods</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%>AllowReadOnly property</td>
<td width=50%>Allows for a read-only datasource.<br>
<B><b>Default:</b></B> .F.</td>
</tr>
<tr valign=top>
<td width=50%>AutoInit property</td>
<td width=50%>Automatically run when loaded.<br>
<B><b>Default: </b>.</B>T.</td>
</tr>
<tr valign=top>
<td width=50%>CurrentAlias property</td>
<td width=50%>The current alias determined by <a href="lngaliaslp_rp.htm">ALIAS(&nbsp;)</a>.<br>
<B><b>Default:</b></B> ""</td>
</tr>
<tr valign=top>
<td width=50%>CurrentDBC property</td>
<td width=50%>The current database file.<br>
<B><b>Default:</b></B> ""</td>
</tr>
<tr valign=top>
<td width=50%>CursorType property</td>
<td width=50%>Specifies the type of cursor. <p class=tl>
1 = local view<br>
2 = remote view<br>
3 = table</P><p>
<B><b>Default: </b></B>3</p>
</td>
</tr>
<tr valign=top>
<td width=50%>DBCTable property</td>
<td width=50%>Name of the table in the database.<br>
<B><b>Default:</b></B> ""</td>
</tr>
<tr valign=top>
<td width=50%>MultiTable property</td>
<td width=50%>Specifies whether to support multiple tables.<br>
<B><b>Default:</b></B> .F.</td>
</tr>
<tr valign=top>
<td width=50%>SkipGeneral property</td>
<td width=50%>Specifies whether General fields are included in the list.<br>
<B><b>Default:</b></B> .F.</td>
</tr>
<tr valign=top>
<td width=50%>SkipMemo property</td>
<td width=50%>Specifies whether Memo fields are included in the list.<br>
<B><b>Default:</b></B> .F.</td>
</tr>
<tr valign=top>
<td width=50%>TableType property</td>
<td width=50%>Returns the table type - <a href="lngsyslp2029rp___table_type.htm">SYS(2029)</a>.<br>
<B><b>Default: </b></B>0</td>
</tr>
<tr valign=top>
<td width=50%>AcolScan method</td>
<td width=50%>Scans a specific column in the array.<br>
<B><b>Syntax:</b></B> AcolScan(@<i>wztarr</i>,<i> wztexpr</i>,<i> wztcol</i>)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: <br>
</b></B><i>wztarr</i> specifies the array to scan.<br>
<i>wztexpr </i>specifies the target expression for which to scan.<br>
<i>wztcol</i> specifies the column to scan.</td>
</tr>
<tr valign=top>
<td width=50%>AddToArray method</td>
<td width=50%>Adds <i>sContents</i> to the array, <i>aAddToArray</i>, at <i>iRow</i>.<br>
<B><b>Syntax:</b></B> AddToArray(@<i>aAddToArray</i>,<i> sContents</i>,<i> iRow</i>)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: <br>
</b></B><i>aAddToArray</i> specifies the array to which to add an item.<br>
<i>sContents </i>specifies the addition to the array.<br>
<i>iRow</i> specifies in which array row to insert <i>sContents</i>.</td>
</tr>
<tr valign=top>
<td width=50%>Alert method</td>
<td width=50%>Displays a messagebox.<br>
<B><b>Syntax:</b></B> Alert(<i>pMessage</i>)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: <br>
</b></B><i>pMessage</i> specifies the message to be displayed by MESSAGEBOX(&nbsp;).</td>
</tr>
<tr valign=top>
<td width=50%>FieldChange method</td>
<td width=50%>Triggered when fields selected changes.<br>
<B><b>Syntax: </b></B>FieldChange(<i>nButton</i>)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: <br>
</b></B><i>nButton</i> specifies the button pressed.</td>
</tr>
<tr valign=top>
<td width=50%>GetTableData method</td>
<td width=50%>Retrieves fields from a table. <i>aWizFlist</i> contains the list of fields, <i>aCalcFields</i> contains the list of calculated fields, <i>aPickFields</i> contains the list of selected fields.<br>
<B><b>Syntax: </b></B>GetTableData(&nbsp;)<br>
<B><b>Return:</b></B> <i>aWizFList</i>,<i> aCalcFields</i>,<i> aPickFields</i><br>
<B><b>Arguments: </b></B> none</td>
</tr>
<tr valign=top>
<td width=50%>InitData method</td>
<td width=50%>Initializes data.<br>
<B><b>Syntax:</b></B> InitData(&nbsp;)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: </b></B> none</td>
</tr>
<tr valign=top>
<td width=50%>InitVars method</td>
<td width=50%>Initializes variables used by movers.<br>
<B><b>Syntax: </b></B>InitVars(&nbsp;)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: </b></B> none</td>
</tr>
<tr valign=top>
<td width=50%>JustStem method</td>
<td width=50%>Retrieves the filename stem.<br>
<B><b>Syntax: </b></B>JustStem(<i>m.filename</i>)<br>
<B><b>Return:</b></B> <i>m.filename</i><br>
<B><b>Arguments: <br>
</b></B><i>m.filename</i> specifies the filename from which the stem is extracted. </td>
</tr>
<tr valign=top>
<td width=50%>SetDataProps method</td>
<td width=50%>Sets data properties of the data source.<br>
<B><b>Syntax:</b></B> SetDataProps(&nbsp;)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: </b></B> none </td>
</tr>
<tr valign=top>
<td width=50%>UpdateStatusbar method</td>
<td width=50%>Internal to the class. </td>
</tr>
</table><br>
</BODY>
</HTML>
