<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LOCK( ) Function</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lnglocklp_rp"></a><sup></sup>LOCK(&nbsp;) Function</h1>
<p>
<a href="lnglocklp_rpx.htm">Example</a> &nbsp; <a href="lnglocklp_rpsa.htm">See Also</a></p>
<p>
Attempts to lock one or more records in a table.</p>
<p class=label>
<b>Syntax</b></p>
<p>
LOCK([<i>nWorkArea</i> | <i>cTableAlias</i>]<br>
| [<i>cRecordNumberList</i>, <i>nWorkArea</i> | <i>cTableAlias</i>])</p>
<p class=label>
<b>Returns</b></p>
<p>
Logical</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>nWorkArea</i> | <i>cTableAlias</i></p>
<p class=indent>
Attempts a lock on the current record in a table open in a specific work area. <i>nWorkArea</i> specifies the work area number and <i>cTableAlias</i> specifies the table alias. If you don't specify a work area or table alias, LOCK(&nbsp;) attempts to lock the current record in the table in the current work area.</p>
<p class=dt>
<i>cRecordNumberList</i></p>
<p class=indent>
Specifies a list of one or more record numbers which you must include to attempt to lock multiple records. SET MULTILOCKS must be ON and you must include the work area or alias of the table for which you are attempting to place multiple record locks.</p>
<p class=tl>
LOCK(&nbsp;) attempts to lock all of the records you specify. The record numbers specified with <i>cRecordNumberList</i> are separated by commas. For example, to attempt record locks on the first four records in a table, <i>cRecordNumberList</i> must contain 1,2,3,4.</P><p class=tl>
You can also lock multiple records by moving the record pointer to the record you would like to lock, issuing LOCK(&nbsp;) or RLOCK(&nbsp;) and then repeating these steps for each additional record.</P><p class=tl>
In Visual FoxPro, you can specify 0 as a record number. Specifying 0 lets you attempt to lock the table header.</P><p class=atl>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Keep the table header locked for as short a time as possible because other users cannot add records to the table when the table header is locked.</p><p class=tl>
Release the table header lock with UNLOCK RECORD 0, UNLOCK or UNLOCK ALL.</P><p class=tl>
If all the records specified in <i>cRecordNumbers</i> are successfully locked, LOCK(&nbsp;) returns true (.T.). If even one of the records specified with <i>cRecordNumbers</i> can't be locked, LOCK(&nbsp;) returns false (.F.) and none of the records are locked. However, any existing record locks remain in place. Multiple record locking is an additive process. Placing additional record locks doesn't release locks on other records.</P><p class=tl>
The maximum number of records that can be locked in each work area is approximately 8,000. It is always faster to lock the entire table rather than even a small number of records.</P><p class=label>
<b>Remarks</b></p>
<p>
LOCK(&nbsp;) is identical to RLOCK(&nbsp;).</p>
<p>
If the lock or locks are successfully placed, LOCK(&nbsp;) returns true (.T.). Locked records are available for both read and write access to the user who placed the locks; they are available for read-only access to all other users on the network.</p>
<p>
Executing LOCK(&nbsp;) doesn't guarantee that the record lock or locks will be successfully placed. A record lock can't be placed on a record already locked by another user or in a table locked by another user. If the record lock or locks can't be placed for any reason, LOCK(&nbsp;) returns false (.F.).</p>
<p>
By default, LOCK(&nbsp;) makes one attempt to lock a record. Use SET REPROCESS to automatically retry a record lock when the first attempt fails. SET REPROCESS determines the number of lock attempts or the length of time during which lock attempts are made when the initial lock attempt is unsuccessful. For more information, see <a href="lngset_reprocess.htm">SET REPROCESS</a>.</p>
<p>
SET MULTILOCKS determines whether you can lock multiple records in a table. If SET MULTILOCKS is OFF (the default), you can lock only a single record in a table. When SET MULTILOCKS is ON, you can lock multiple records in a table. For more information, see <a href="lngset_multilocks.htm">SET MULTILOCKS</a>.</p>
<p>
<b>Unlocking Records</b>&nbsp;&nbsp;&nbsp;A table record can be unlocked only by the user who placed the lock. You can release record locks by issuing UNLOCK, closing the table, or exiting Visual FoxPro.</p>
<p>
UNLOCK can be used to release record locks in the current work area, a specific work area, or in all work areas. For more information, see <a href="lngunlock.htm">UNLOCK</a>.</p>
<p>
Switching SET MULTILOCKS from ON to OFF or from OFF to ON implicitly performs UNLOCK ALL — all record locks in all work areas are released.</p>
<p>
Tables can be closed with USE, CLEAR ALL, or CLOSE DATABASES.</p>
<p>
For more information about record and file locking and sharing tables on a network, see Chapter 17, <a href="dgprogramming_for_shared_access.htm">Programming for Shared Access</a>, in the <i>Programmer's Guide</i>.</p>
</BODY>
</HTML>
