<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DragOver Event</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngdragover_event"></a><sup></sup>DragOver Event</h1>
<p>
<a href="lngdragover_eventat.htm">Applies To</a> &nbsp; <a href="lngdragover_eventsa.htm">See Also</a></p>
<p>
Occurs when a control is being dragged over a target object.</p>
<p class=label>
<b>Syntax</b></p>
<p>
PROCEDURE <i>Object</i>.DragOver<br>
LPARAMETERS [<i>nIndex,</i>] <i>oSource, nXCoord</i>, <i>nYCoord, nState</i></p>
<p class=label>
<b>Arguments</b></p>
<p>
You must include an LPARAMETERS or PARAMETERS statement in the event procedure and specify a name for each parameter; otherwise an error occurs. Visual FoxPro passes the DragOver event four or five parameters in the following order:</p>
<p class=dt>
<i>nIndex</i></p>
<p class=indent>
Uniquely identifies a control if it is in a control array.</p>
<p class=dt>
<i>oSource</i></p>
<p class=indent>
Contains a reference to the control being dragged. You can refer to properties and methods of the control with this parameter.</p>
<p class=dt>
<i>nXCoord</i>, <i>nYCoord</i></p>
<p class=indent>
Contains the current horizontal (<i>nXCoord</i>) and vertical (<i>nYCoord</i>) position of the mouse pointer within the target form or control. The coordinates are always expressed in terms of the target's coordinate system in the unit of measurement determined by the ScaleMode property.</p>
<p class=dt>
<i>nState</i></p>
<p class=indent>
Contains a number that represents the transition state of the control being dragged in relation to the target object:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=16%><b>Setting</b></td>
<td class=label width=84%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=16%>0</td>
<td width=84%>Enter. The control is being dragged within the range of a target.</td>
</tr>
<tr valign=top>
<td width=16%>1</td>
<td width=84%>Leave. The control is being dragged out of the range of a target.</td>
</tr>
<tr valign=top>
<td width=16%>2</td>
<td width=84%>Over. The control has moved from one position in the target to another.</td>
</tr>
</table><br>
<p>
Use <i>nState</i> to determine actions at key transition points. For example, you can highlight a possible target on <i>nState</i> = 0 (Enter) and restore the object's appearance on <i>nState</i> = 1 (Leave).</p>
<p>
When an object receives a DragOver event with <i>nState</i> = 0 (Enter):
<ul type=disc>
<li>
A DragDrop event is triggered if the source control is dropped on a target object.<br><br></li>
<li>
Another DragOver event is triggered with <i>nState</i> = 1 (Leave) if the source control is not dropped on a valid target.</li>
</ul>
<p class=label>
<b>Remarks</b></p>
<p>
The object under the drag icon is the target object and responds to the DragOver event. You can use this event to monitor when the mouse pointer enters, leaves, or is directly over a target object.</p>
<p>
Use a DragOver event to determine what happens after dragging is initiated and before a control is dropped onto a target. For example, you can verify a valid target range by highlighting the target, by setting the BackColor, or ForeColor property or by displaying a special pointer.</p>
</BODY>
</HTML>
