<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error Object (VFP Foundation Class)</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="ffcerror_object"></a><sup></sup>Error Object</h1>
<p>
<a href="ffcerror_objectsa.htm">See Also</a></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Category</b></td>
<td width=67%>Application</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Default Catalog</b></td>
<td width=67%>Visual&nbsp;FoxPro&nbsp;Catalog\Foundation&nbsp;Classes\Application</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Class</b></td>
<td width=67%>_error</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Base Class</b></td>
<td width=67%>Custom</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Class Library</b></td>
<td width=67%>_app.vcx</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Parent Class</b></td>
<td width=67%>_custom</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Sample</b></td>
<td width=67%>...\Samples\Vfp98\Solution\Ffc\error.scx</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
This class is a generic error handler that works for both object and procedural code. This class is used with an application framework generated by the Application Wizard.</p>
<p>
To use, drop the class on a project or form or, from the Component Gallery <a href="newitem_shortcut_menu.htm">Item Shortcut menu</a>, select <b>Add to Project</b> or <b>Add to Form</b>. When you add the class to a form, Visual FoxPro places the class icon on the form. You can then specify the appropriate property values and access its functionality from input and output objects. When you drop the class on a project, you can choose between adding the class or creating a subclass.</p>
<p>
See <a href="ffcusing_visual_foxpro_foundation_classes.htm">Guidelines for Using Visual FoxPro Foundation Classes</a> for more information on using foundation classes.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=48%><b>Properties, Events, Methods</b></td>
<td class=label width=52%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=48%>GetMessageBoxTitle method</td>
<td width=52%>Returns the truly active control, <i>loRealActiveControl</i>, in cases where the current active control is a Grid.<br>
<B><b>Syntax:</b></B> GetActiveControlRef(<i>toActiveControl</i>)<br>
<B><b>Return:</b></B> <i>ERROR_MESSAGEBOX_TITLE_LOC</i><br>
<B><b>Arguments: </b></B> none</td>
</tr>
<tr valign=top>
<td width=48%>cCurrentMessage property. </td>
<td width=52%>Specifies the error message.<br>
<B><b>Default:</b></B> ""</td>
</tr>
<tr valign=top>
<td width=48%>cCurrentMethod property</td>
<td width=52%>Specifies the method in which the error occurred.<br>
<B><b>Default:</b></B> ""</td>
</tr>
<tr valign=top>
<td width=48%>iCurrentError property</td>
<td width=52%>Specifies the error number.<br>
<B><b>Default: </b></B>0</td>
</tr>
<tr valign=top>
<td width=48%>iCurrentLine property</td>
<td width=52%>Specifies the line in which the error occurred.<br>
<B><b>Default: </b></B>0</td>
</tr>
<tr valign=top>
<td width=48%>cCurrentClassproperty</td>
<td width=52%>Specifies the error classification that the error object specifies for this particular error number.<br>
<B><b>Default:</b></B> ""</td>
</tr>
<tr valign=top>
<td width=48%>lServer property</td>
<td width=52%>Checks _VFP.StartMode to determine whether any sort of modal feedback should be avoided because of the way Visual FoxPro was started.<br>
<B><b>Default: </b></B>(BETWEEN(_VFP.StartMode,1,3)))</td>
</tr>
<tr valign=top>
<td width=48%>cLogAlias property</td>
<td width=52%>Specifies the name of the log alias.<br>
<B><b>Default:</b></B> ""</td>
</tr>
<tr valign=top>
<td width=48%>cLogDBF property</td>
<td width=52%>Specifies the name of log file (DBF) that is built by the _error object.<br>
<B><b>Default:</b></B> ""</td>
</tr>
<tr valign=top>
<td width=48%>lUserCancelled property</td>
<td width=52%>Allows the outside program to perform any necessary cleanup operations before release.<br>
<B><b>Default:</b></B> .F.</td>
</tr>
<tr valign=top>
<td width=48%>HandleMain method</td>
<td width=52%>The routine that handles the error.<br>
<B><b>Syntax:</b></B> HandleMain(<i>tiError</i>,<i> tcMethod</i>,<i> tiLine</i>)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: <br>
</b></B><i>tiError </i>specifies the error number.<i><br>
tcMethod</i> specifies the name of the current method.<br>
<i>tiLine</i> specifies the number of the current line.</td>
</tr>
<tr valign=top>
<td width=48%>OKToReport method</td>
<td width=52%>Abstract class to evaluate whether to report error.<br>
<B><b>Syntax: </b></B>OKToReport(&nbsp;)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: </b></B> none</td>
</tr>
<tr valign=top>
<td width=48%>isTrivial method</td>
<td width=52%>Specifies whether an error is a trivial error.<br>
<B><b>Syntax:</b></B>IsTrivial(<i>tlWantDialog</i>)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: <br>
</b></B><i>tlWantDialog</i> specifies an optional dialog to display.</td>
</tr>
<tr valign=top>
<td width=48%>isFatal method</td>
<td width=52%>Specifies whether an error is a fatal error.<br>
<B><b>Syntax:</b></B>(&nbsp;)<br>
<B><b>Return:</b></B> <br>
<B><b>Arguments: <br>
</b></B><i>tlWantDialog</i> specifies an optional dialog to display.</td>
</tr>
<tr valign=top>
<td width=48%>GetMessageBoxTitle method</td>
<td width=52%>This is meant for your subclass or instance to fill out with application-specific information.<br>
<B><b>Syntax: </b></B>GetMessageBoxTitle(&nbsp;)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: </b></B> none</td>
</tr>
<tr valign=top>
<td width=48%>DisplayErrorLog method</td>
<td width=52%>Displays the error log.<br>
<B><b>Syntax:</b></B> DisplayErrorLog(&nbsp;)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: </b></B> none</td>
</tr>
<tr valign=top>
<td width=48%>OKToContinue method</td>
<td width=52%>Evaluates an error to determine whether to continue program execution.<br>
<B><b>Syntax: </b></B>OKToContinue(&nbsp;)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: </b></B> none</td>
</tr>
<tr valign=top>
<td width=48%>SetLog method</td>
<td width=52%>Determines the name of or creates the error log table and alias.<br>
<B><b>Syntax: </b></B>SetLog(&nbsp;)<br>
<B><b>Return:</b></B> <i>cLogAlias<br>
The error log table has the following format:<br>
CREATE TABLE (THIS.cLogDBF) ;<br>
(errstamp t, ;<br>
listingm,;<br>
usernotesm)</i><br>
<B><b>Arguments: </b></B> none</td>
</tr>
<tr valign=top>
<td width=48%>cCurrentErrorParam property</td>
<td width=52%>Internal to the class.</td>
</tr>
<tr valign=top>
<td width=48%>aErrorClass[1,3] property</td>
<td width=52%>Internal to the class.</td>
</tr>
<tr valign=top>
<td width=48%>aErrors[1,6] property</td>
<td width=52%>Internal to the class.</td>
</tr>
<tr valign=top>
<td width=48%>*FillArrays.</td>
<td width=52%>Internal to the class.</td>
</tr>
<tr valign=top>
<td width=48%>LogErrorReport method</td>
<td width=52%>Internal to the class.</td>
</tr>
<tr valign=top>
<td width=48%>GetErrorAttribute method</td>
<td width=52%>Internal to the class</td>
</tr>
<tr valign=top>
<td width=48%>isGoodErrorLog method</td>
<td width=52%>Internal to the class.</td>
</tr>
<tr valign=top>
<td width=48%>UserHandlesError method</td>
<td width=52%>Internal to the class.</td>
</tr>
<tr valign=top>
<td width=48%>UserCancelled method</td>
<td width=52%>Internal to the class.</td>
</tr>
<tr valign=top>
<td width=48%>FillLogRecord method</td>
<td width=52%>Internal to the class.</td>
</tr>
<tr valign=top>
<td width=48%>DoErrorLogUI method</td>
<td width=52%>Internal to the class.</td>
</tr>
</table><br>
</BODY>
</HTML>
