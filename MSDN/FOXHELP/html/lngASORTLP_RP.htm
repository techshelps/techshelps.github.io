<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ASORT( ) Function</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngasortlp_rp"></a><sup></sup>ASORT(&nbsp;) Function</h1>
<p>
<a href="lngasortlp_rpx.htm">Example</a> &nbsp; <a href="lngasortlp_rpsa.htm">See Also</a></p>
<p>
Sorts elements in an array in ascending or descending order.</p>
<p class=label>
<b>Syntax</b></p>
<p>
ASORT(<i>ArrayName</i> [, <i>nStartElement</i> [, <i>nNumberSorted</i> [, <i>nSortOrder</i>]]])</p>
<p class=label>
<b>Returns</b></p>
<p>
Numeric</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>ArrayName</i></p>
<p class=indent>
Specifies the name of the array to sort.</p>
<p class=dt>
<i>nStartElement</i></p>
<p class=indent>
Specifies the starting element of the sort. If you omit <i>nStartElement</i>, the array is sorted starting with the first array element by default. If the array is one-dimensional, the sort includes <i>nStartElement</i>. If the array is two-dimensional, the starting element <i>nStartElement</i> determines both the row where the sort begins and the column that determines the sort order of the rows.</p>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can refer to an element in a two-dimensional array in one of two ways. The first method uses two subscripts to specify the row and column position of the element in the array; the other method uses an element number. This function and others that manipulate two-dimensional arrays require element numbers (in ASORT(&nbsp;) the numeric expressions <i>nStartElement</i> and <i>nNumberSorted</i>). You can use AELEMENT(&nbsp;) to return the element number from row and column subscripts in a two-dimensional array.</p><p class=tl>
The following example illustrates that the starting element <i>nStartElement</i> determines how the rows in a two-dimensional array are sorted. A small array named <code>gaArray</code> is created and sorted twice. The first sort begins with the first element of <code>gaArray</code>; the rows are sorted based on the values contained in the first column of the array. The second sort begins with the fourth element of <code>gaArray</code>; the rows are sorted based on the values contained in the second column.</P><p class=tl>
The first sort begins with the first row. The second sort begins with the second row. You can use DISPLAY MEMORY to display the contents of the array; in these examples tables are used to graphically display the results of the sorts.</P><p class=tl>
These commands create the array named <code>gaArray</code>:</P><pre><code>DIMENSION gaArray(3,2)
gaArray(1) = 'G'
gaArray(2) = 'A'
gaArray(3) = 'C'
gaArray(4) = 'Z'
gaArray(5) = 'B'
gaArray(6) = 'N'
</code></pre>
<p class=tl>
<code>gaArray</code> looks like this:</P><table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=30%></td>
<td class=label width=35%><b>Column 1</b></td>
<td class=label width=35%><b>Column 2</b></td>
</tr>
<tr valign=top>
<td width=30%>Row 1</td>
<td width=35%>G</td>
<td width=35%>A</td>
</tr>
<tr valign=top>
<td width=30%>Row 2</td>
<td width=35%>C</td>
<td width=35%>Z</td>
</tr>
<tr valign=top>
<td width=30%>Row 3</td>
<td width=35%>B</td>
<td width=35%>N</td>
</tr>
</table><br>
<p class=tl>
The array is then sorted by ASORT(&nbsp;) starting with the first element (1,1) in the array. The elements in the first column are placed in ascending order by rearranging the rows of the array.</P><pre><code>=ASORT(gaArray,1)
</code></pre>
<p class=tl>
Note the new order of the rows:</P><table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=30%></td>
<td class=label width=35%><b>Column 1</b></td>
<td class=label width=35%><b>Column 2</b></td>
</tr>
<tr valign=top>
<td width=30%>Row 1</td>
<td width=35%>B</td>
<td width=35%>N</td>
</tr>
<tr valign=top>
<td width=30%>Row 2</td>
<td width=35%>C</td>
<td width=35%>Z</td>
</tr>
<tr valign=top>
<td width=30%>Row 3</td>
<td width=35%>G</td>
<td width=35%>A</td>
</tr>
</table><br>
<p class=tl>
The array is then sorted starting with the fourth element (2,2) in the array. The elements in the second column are placed in order by rearranging the array rows.</P><pre><code>=ASORT(gaArray,4)
</code></pre>
<p class=tl>
Note the difference in the order of the rows:</P><table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=30%></td>
<td class=label width=35%><b>Column 1</b></td>
<td class=label width=35%><b>Column 2</b></td>
</tr>
<tr valign=top>
<td width=30%>Row 1</td>
<td width=35%>B</td>
<td width=35%>N</td>
</tr>
<tr valign=top>
<td width=30%>Row 2</td>
<td width=35%>G</td>
<td width=35%>A</td>
</tr>
<tr valign=top>
<td width=30%>Row 3</td>
<td width=35%>C</td>
<td width=35%>Z</td>
</tr>
</table><br>
<p class=dt>
<i>nNumberSorted</i></p>
<p class=indent>
Specifies the number of elements that are sorted in a one-dimensional array, or the number of rows that are sorted in a two-dimensional array. For example, if the array is one-dimensional and <i>nStartElement</i> is 2, indicating that the sort starts with the second array element, and <i>nNumberSorted</i> is 3, indicating that the sort should include three elements, the second, third and fourth array elements are sorted. If <i>nNumberSorted</i> is –1 or is omitted, all array elements from the starting element <i>nStartElement</i> through the last element in the array are sorted.</p>
<p class=tl>
If the array is two-dimensional, <i>nNumberSorted</i> designates the number of rows to sort, beginning with the row containing the starting element <i>nStartElement</i>. For example, if <i>nStartElement</i> is 2 and <i>nNumberSorted</i> is 3, the row containing the second array element and the following two rows are sorted. If <i>nNumberSorted</i> is –1 or is omitted, all array rows beginning with the row containing the starting element <i>nStartElement</i> through the last array row are sorted.</P><p class=dt>
<i>nSortOrder</i></p>
<p class=indent>
Specifies the sort order (ascending or descending) for the elements in the array. By default, array elements are sorted in ascending order. If <i>nSortOrder</i> is 0 or is omitted, the array elements are sorted in ascending order. If <i>nSortOrder</i> is 1 or any nonzero value, the array elements are sorted in descending order.</p>
<p class=label>
<b>Remarks</b></p>
<p>
All elements included in the sort must be of the same data type. One-dimensional arrays are sorted by their elements; two-dimensional arrays are sorted by their rows. When a two-dimensional array is sorted, the order of the rows in the array is changed so that the elements in a column of the array are in ascending or descending order.</p>
<p>
If the sort is successful, 1 is returned; otherwise –1 is returned.</p>
</BODY>
</HTML>
