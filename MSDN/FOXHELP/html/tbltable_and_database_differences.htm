<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Table and Database Differences</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="tbltable_and_database_differences"></a><sup></sup>Table and Database Differences</h1>
<p>
<a href="tbltable_and_database_differencessa.htm">See Also</a></p>
<p>
Visual FoxPro distinguishes between <a href="glstable.htm">tables</a> and <a href="glsdatabase.htm">databases.</a> Although FoxPro 2.6 tables are fully functional in Visual FoxPro, if you modify the table structure of FoxPro tables, they are saved as Visual FoxPro tables.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=45%><b>FoxPro 2.6 feature or functionality</b></td>
<td class=label width=55%><b>Visual FoxPro feature or functionality</b></td>
</tr>
<tr valign=top>
<td width=45%>Character field with<br>
<a href="lngset_nocptrans.htm">NOCPTRANS</a> characteristic</td>
<td width=55%>Character (BINARY) field type. See <a href="condata_and_field_types.htm">Data and Field Types.</a></td>
</tr>
<tr valign=top>
<td width=45%>Date fields</td>
<td width=55%><a href="condate_data_type.htm">Date</a> data type, <br>
<a href="condatetime_data_type.htm">DateTime</a> data type</td>
</tr>
<tr valign=top>
<td width=45%>General field size</td>
<td width=55%>Now 4 bytes. See <a href="congeneral_field_type.htm">General Field Type.</a></td>
</tr>
<tr valign=top>
<td width=45%>Memo field size</td>
<td width=55%>Now 4 bytes. See <a href="conmemo_field_type.htm">Memo Field Type.</a></td>
</tr>
<tr valign=top>
<td width=45%>Memo field with<br>
<a href="lngset_nocptrans.htm">NOCPTRANS</a> characteristic</td>
<td width=55%>Memo (BINARY) field type. See <a href="condata_and_field_types.htm">Data and Field Types.</a></td>
</tr>
<tr valign=top>
<td width=45%>Numeric fields</td>
<td width=55%><a href="concurrency_data_type.htm">Currency</a> data type, <br>
<a href="condouble_field_type.htm">Double</a> field type, <a href="confloat_field_type.htm">Float</a> field type, <a href="coninteger_field_type.htm">Integer</a> field type, or <a href="connumeric_data_type.htm">Numeric</a> data type</td>
</tr>
<tr valign=top>
<td width=45%>OLE data in a General field</td>
<td width=55%><a href="ctlole_bound_control.htm">OLE Bound</a> control</td>
</tr>
</table><br>
<p>
Visual FoxPro tables can accept <a href="glsnull_value.htm">null values.</a> To prevent errors generated by attempts to store null values to FoxPro 2.6 variables or to Visual FoxPro controls, initialize variables or arrays. To prevent users from attempting to store null values to tables, you can disable the NULL entry key combination by using the following statement:</p>
<pre><code>ON KEY LABEL CTRL+0 *
</code></pre>
<p>
The structure of Visual FoxPro project (.pjx), screen (.scx), report (.frx), menu (.mnx) and label (.lbx) files differ from the structure of FoxPro 2.6 files. For details on the structure of Visual FoxPro table files created in the <a href="wndproject_manager.htm">Project Manager,</a> <a href="wndform_designer.htm">Form Designer,</a> <a href="wndreport_designer.htm">Report Designer,</a> and <a href="wndlabel_designer.htm">Label Designer,</a> see <a href="contable_structures_of_table_files.htm">Table Structures of Table Files.</a> For details on changes made to converted and saved record files, see <a href="conchecking_converted_foxpro_2.6_reports_and_labels.htm">Checking Converted FoxPro 2.6 Reports and Labels.</a></p>
<h3>Views in Visual FoxPro</h3>
<p>
Visual FoxPro allows you to use views as you would tables or queries. If you build a view in Visual FoxPro without qualifying the table name to a database, you’ll get an error when you try to modify the view in the <a href="wndquery_designer.htm">View Designer.</a> To ensure that you can use or modify views in all versions of Visual FoxPro, use <a href="lngcreate_sql_view.htm">CREATE SQL VIEW</a> with the following clause:</p>
<pre><code>   FROM testdata!products      &amp;&amp; testdata is the database name
                              &amp;&amp; products is the table name
</code></pre>
<p>
When you specify the source this way, Visual FoxPro searches for the table both in the open database list, including the current and any non-current databases, and in the default search path for the table.</p>
<p>
For more information on views, see&nbsp; “Entering Null Values in Fields” in Chapter 7, <a href="dgworking_with_tables.htm">Working with Tables,</a> as well as Chapter 8, “<a href="dgcreating_views.htm">Creating Views,</a>” both in the <i>Programmer’s Guide.</i></p>
</BODY>
</HTML>
