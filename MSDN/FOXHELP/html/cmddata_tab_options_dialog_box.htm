<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Data Tab, Options Dialog Box</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="cmddata_tab_options_dialog_box"></a><sup></sup>Data Tab, Options Dialog Box</h1>
<p>
<a href="cmddata_tab_options_dialog_boxsa.htm">See Also</a></p>
<p>
Contains options for controlling data in tables.</p>
<p>
When you choose <b>Set As Default</b> — which appears on every tab in the dialog box — Visual FoxPro saves all the options on all tabs.</p>
<h3>Tab Options</h3>
<p class=dt>
<b>Open exclusive</b></p>
<p class=indent>
Specifies whether Visual FoxPro opens tables and databases exclusively, so that no one else can view or modify them while you are working on them. Opening files exclusively can result in better performance. Use this option when processing large numbers of records under circumstances when other users do not need access to data (such as at night). This option corresponds to the <a href="lngset_exclusive.htm">SET EXCLUSIVE</a> command.</p>
<p class=dt>
<b>Show field names</b></p>
<p class=indent>
Specifies whether Visual FoxPro displays a field name as a column heading above each field in the output of the <a href="lngaverage.htm">AVERAGE</a>, <a href="lngcalculate.htm">CALCULATE</a>, <a href="lngdisplay.htm">DISPLAY</a>, <a href="lnglist.htm">LIST</a>, and <a href="lngsum.htm">SUM</a> commands. This option corresponds to the <a href="lngset_headings.htm">SET HEADINGS</a> command.</p>
<p class=dt>
<b>Prompt for code page</b></p>
<p class=indent>
Specifies whether Visual FoxPro prompts you to attach a code page when you open tables that do not already have one attached. This option corresponds to the <a href="lngset_cpdialog.htm">SET CPDIALOG</a> command.</p>
<p class=dt>
<b>Ignore deleted records</b></p>
<p class=indent>
Specifies whether Visual FoxPro ignores records marked for deletion when executing commands that use a scope clause. If this option is cleared, Visual FoxPro includes the marked records. This option corresponds to the <a href="lngset_deleted.htm">SET DELETED</a> command.</p>
<p class=dt>
<b>Rushmore optimization</b></p>
<p class=indent>
Specifies whether Visual FoxPro uses Rushmore optimization when executing commands that include a FOR clause. This option corresponds to the <a href="lngset_optimize.htm">SET OPTIMIZE</a> command. For more information, see Chapter 15, <a href="dgoptimizing_applications.htm">Optimizing Applications</a> in the <i>Programmer’s Guide</i>.</p>
<p class=dt>
<b>Unique records in indexes</b></p>
<p class=indent>
Specifies whether Visual FoxPro allows records with duplicate index key values in an index file. If you choose this option, only the first record containing the original key index is indexed. This option corresponds to the <a href="lngset_unique.htm">SET UNIQUE</a> command.</p>
<p class=dt>
<b>Collating sequence</b></p>
<p class=indent>
Specifies a collation sequence (sort order) for character fields in indexing and sorting operations. This option corresponds to the <a href="lngset_collate.htm">SET COLLATE</a> command.</p>
<p class=dt>
<b>Record counter interval</b></p>
<p class=indent>
Specifies how many records should be processed during commands such as COPY TO before Visual FoxPro updates the record counter display in the status line. The range is from 1 to 32,767 records. The higher the number you specify, the longer the delay between updates, but the command can run faster. You must choose the <b>Status Bar</b> option on the <b>View</b> tab for this option to have effect. This option corresponds to the <a href="lngset_odometer.htm">SET ODOMETER</a> command.</p>
<p class=dt>
<b>Memo block size (bytes)</b></p>
<p class=indent>
Specifies the block size in which disk space for memo fields is allocated. The value you enter specifies the minimum disk space required for a memo field, and the size by which memo fields increase as data is added to them. If you specify a value between 1 and 32, Visual FoxPro multiplies your value by 512, and then allocates disk space in a block of that size. If you specify a value greater than 32, Visual FoxPro allocates blocks of only that size; specifying a number greater than 32 can therefore save disk space. This option corresponds to the <a href="lngset_blocksize.htm">SET BLOCKSIZE</a> command.</p>
<p class=dt>
<b>Browse refresh interval (sec)</b></p>
<p class=indent>
Specifies how often Visual FoxPro updates the display of records in an active <b>Browse</b> window, which is useful in a multiuser environment. Possible values are 0 to 3600. Set this value to 0 to prevent updates. Set this value to a high number to update the <b>Browse</b> window less often, which can increase performance. This option corresponds to the <a href="lngset_refresh.htm">SET REFRESH</a> command.</p>
<p class=dt>
<b>Table refresh interval (sec)</b></p>
<p class=indent>
Specifies how often Visual FoxPro should update the display of an active table, which is useful in a multiuser environment. Possible values are 0 to 3600. Set this value to 0 to prevent updates; set this value to a high number to update the table less often, which can increase performance. This option corresponds to the <a href="lngset_refresh.htm">SET REFRESH</a> command.</p>
<h4>String comparisons</h4>
<p class=dt>
<b>SET NEAR on</b></p>
<p class=indent>
Specifies that Visual FoxPro positions the record pointer on the closest matching record after an unsuccessful FIND or SEEK command. This option corresponds to the <a href="lngset_near.htm">SET NEAR</a> command.</p>
<p class=dt>
<b>SET EXACT on</b></p>
<p class=indent>
Specifies that Visual FoxPro uses the full length of both string expressions (except for trailing blanks) when using the comparison operator (=). If you clear this option, Visual FoxPro stops comparing two strings when the end of the expression on the right side of the comparison operator (=) is reached. This option corresponds to the <a href="lngset_exact.htm">SET EXACT</a> command.</p>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This setting has no effect on the results of the = operator.</p><p class=dt>
<b>SET ANSI on</b></p>
<p class=indent>
Specifies whether Visual FoxPro pads strings when comparing them with the SQL = operator, which compares character by character until the shorter string is finished. If you choose this option, Visual FoxPro pads the shorter string with spaces, so a SQL comparison fails (“Tommy” is not equivalent to “Tom&nbsp; ”). If you clear this option, the shorter string is not padded, so strings of unequal length can be equivalent (“Tommy” is equivalent to “Tom”). This option corresponds to the <a href="lngset_ansi.htm">SET ANSI</a> command.</p>
<h4>Locking and buffering</h4>
<p class=dt>
<b>Automatic file locking</b></p>
<p class=indent>
Specifies that Visual FoxPro automatically <a href="glslocked.htm">locks</a> files for certain commands that do not change data including AVERAGE, COPY TO, INDEX, REPORT, SORT, and TOTAL. If you clear this option, the file is not locked during these commands, and other users can change records while your command is being executed. This option corresponds to the <a href="lngset_lock.htm">SET LOCK</a> command.</p>
<p class=dt>
<b>Multiple record locks</b></p>
<p class=indent>
Specifies whether Visual FoxPro locks multiple records concurrently. If you clear this option, Visual FoxPro clears all current locks and allows you to lock only one record at a time; the current record is unlocked when you lock the next one. This option corresponds to the <a href="lngset_multilocks.htm">SET MULTILOCKS</a> command.</p>
<p class=dt>
<b>Buffering</b></p>
<p class=indent>
Specifies for multiuser environments whether to buffer record changes locally, and if so, whether to do so <a href="glsoptimistic_buffering.htm">optimistically</a> or <a href="glspessimistic_buffering.htm">pessimistically</a>. Buffering can improve performance and provide greater concurrency control. You must choose the <b>Multiple Record Locks</b> option for this option to have effect. It corresponds to the <a href="lngcursorsetproplp_rp.htm">CURSORSETPROP(&nbsp;)</a> function. Options are:
<ul type=disc>
<li>
<b>Off</b> Changes are not buffered, and record updates are made immediately to disk. This mode is recommended only when working in a single-user environment.<br><br></li>
<li>
<b>Record (Pessimistic)</b> The current record is locked when the user makes a change to it, and changes are buffered. Other users can read but not change the record on disk. When the record pointer moves to another record, the current record is written back automatically from the buffer to the source table, and then unlocked. Pessimistic record locking is useful for interactive editing in a table subject to many updates by other users.<br><br></li>
<li>
<b>Record (Optimistic)</b> Changes for a single record are buffered but not locked when the user moves the record pointer to the record. Other users can read and change the record on disk. When the user moves the record pointer to another record, Visual FoxPro checks changes in the current record against the record on disk. If the record on disk has been changed, Visual FoxPro offers options to discard current changes or overwrite the record on disk. Optimistic record buffering is recommended primarily when updating tables in which there is little activity.<br><br></li>
<li>
<b>Table (Pessimistic)</b> Record changes are buffered and locked when the user moves the record pointer to them, and remain so until <a href="lngtableupdatelp_rp.htm">TABLEUPDATE(&nbsp;)</a> is called. Pessimistic table buffering is the safest mode for updating multiple records in a table, but because it locks every changed record, it can limit other users’ access to the data. It is therefore recommended only to help speed data entry when users will be entering new records in batches, or when it is essential for the application that all currently used records be held exclusively by the application.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When using table buffering, you must issue TABLEUPDATE(&nbsp;) to write buffered record changes to the disk. If you don’t, the changed records are discarded when the user quits Visual FoxPro.</p></li>
<li>
<b>Table (Optimistic)</b> Record changes are buffered, but not locked, when the user moves the record pointer to the record. Other users can read and change the records on disk. When TABLEUPDATE(&nbsp;) is issued, Visual FoxPro checks for changes in each record as the record is written to disk; records that have changed are not written. Optimistic table buffering is useful for optimizing update performance in tables in which there is little activity. When using this option, issue TABLEUPDATE(&nbsp;) often so that the chances of buffered records changing on disk is minimized.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When using table buffering, you must issue TABLEUPDATE(&nbsp;) to write buffered record changes to the disk. If you don’t, the changed records are discarded when the user quits Visual FoxPro.</p></li>
</ul>
<p class=dt>
<b>Reprocessing</b></p>
<p class=indent>
Specifies how many times or for how long Visual FoxPro attempts to lock a record or table that is already locked by another user. This option corresponds to the <a href="lngset_reprocess.htm">SET REPROCESS</a> command. Choices are:
<ul type=disc>
<li>
<b>Attempt Lock (Default)</b>. Attempts to lock one time only.<br><br></li>
<li>
<b>Attempt Lock (Automatic)</b>. Continues to attempt the lock until successful or until the user cancels the attempt by pressing ESC. Equivalent to SET REPROCESS TO AUTO.<br><br></li>
<li>
<b>Wait for Lock</b>. Continues to attempt a lock until the record becomes available. This option does not provide a way for the user to stop trying to lock the record. Equivalent to SET REPROCESS TO -1.<br><br></li>
<li>
<b>Retry Attempts</b>. Attempts to lock the record or table the specified number of times. If the lock is still unsuccessful, an error message is displayed. SET REPROCESS TO <i>n</i>, where <i>n</i> is the number of retry attempts.<br><br></li>
<li>
<b>Retry Seconds</b>. Attempts to lock the record or table for the specified number of seconds. If the lock is still unsuccessful, an error message is displayed.&nbsp; SET REPROCESS TO <i>n</i> SECONDS, where <i>n</i> is the number of seconds to retry.</li>
</ul>
</BODY>
</HTML>
