<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_HLock( ) API Library Routine Example</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<p class=label>
<b><a name="lng_hlocklp_rpx"></a><sup></sup>_HLock(&nbsp;) API Library Routine Example</b></p>
<p>
The following example displays its character parameter on the screen. It uses _HandToPtr(&nbsp;) to translate the memory handle of the API parameter to a C pointer. Because Visual FoxPro may decide to reorganize memory during the call to _PutStr(&nbsp;), to insure proper execution, the example locks the memory handle with _HLock(&nbsp;). The example also calls _HUnLock(&nbsp;) at the end, because the performance of Visual FoxPro can be adversely affected by locked memory handles.</p>
<h4>Visual FoxPro Code</h4>
<pre><code>SET LIBRARY TO HLOCK 
= HLOCK("Hello, world.") &amp;&amp; displays "Hello, world" on screen
</code></pre>
<h4>C Code</h4>
<pre><code>#include &lt;pro_ext.h&gt;

void NullTerminate(Value FAR *cVal)
{
 &nbsp; if (!_SetHandSize(cVal-&gt;ev_handle, cVal-&gt;ev_length + 1)) 
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; _Error(182); // "Insufficient memory"
 &nbsp; }
 &nbsp; ((char FAR *) _HandToPtr(cVal-&gt;ev_handle))[cVal-&gt;ev_length] = '\0';
}

FAR Example(ParamBlk FAR *parm)
{
 &nbsp; NullTerminate(&amp;parm-&gt;p[0].val);
 &nbsp; <span class=cfe><b>_HLock(</b></span>parm-&gt;p[0].val.ev_handle<span class=cfe><b>)</b></span>;
 &nbsp; _PutStr(_HandToPtr(parm-&gt;p[0].val.ev_handle));
 &nbsp; _HUnLock(parm-&gt;p[0].val.ev_handle);
}

FoxInfo myFoxInfo[] = {
 &nbsp; {"HLOCK", (FPFI) Example, 1, "C"},
};
FoxTable _FoxTable = {
 &nbsp; (FoxTable FAR *) 0, sizeof(myFoxInfo)/sizeof(FoxInfo), myFoxInfo
};
</code></pre>
</BODY>
</HTML>
