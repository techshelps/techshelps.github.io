<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CLEAR Commands</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngclear"></a><sup></sup>CLEAR Commands</h1>
<p>
<a href="lngclearsa.htm">See Also</a></p>
<p>
Releases the specified item or items from memory.</p>
<p class=label>
<b>Syntax</b></p>
<p>
CLEAR<br>
 &nbsp; [ALL | CLASS <i>ClassName</i> | CLASSLIB <i>ClassLibraryName</i> | DEBUG<br>
 &nbsp; | DLLS | EVENTS | FIELDS | GETS | MACROS | MEMORY<br>
 &nbsp; | MENUS | POPUPS&nbsp;&nbsp; | PROGRAM | PROMPT | READ [ALL]<br>
 &nbsp; | RESOURCES [<i>FileName</i>] | TYPEAHEAD | WINDOWS]</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
ALL</p>
<p class=indent>
Releases from memory all variables and arrays and the definitions of all user-defined menu bars, menus, and windows. CLOSE ALL also closes any tables, including all associated index, format and memo files, and selects work area 1. CLEAR ALL also releases&nbsp; from memory all external shared library functions registered with DECLARE - DLL.</p>
<p class=tl>
CLEAR ALL does not release system variables, and does not clear the compiled program buffer. Use CLEAR PROGRAM to clear the compiled program buffer.</P><p class=tl>
Issuing CLEAR ALL within an event or method for an active control or object generates a Visual FoxPro error message. An object type variable cannot be released from memory when its associated control or object is active.</P><p class=dt>
CLASS <i>ClassName</i></p>
<p class=indent>
Clears a class definition from memory. When an instance of a class is created, Visual FoxPro keeps the class definition in memory after the instance is released. Use CLEAR CLASS to clear a class definition from memory after its instance is released.</p>
<p class=dt>
CLASSLIB <i>ClassLibraryName</i></p>
<p class=indent>
Clears from memory all class definitions contained in a visual class library. If instances of classes in the class library exist, the class definitions are not cleared from memory. However, all class definitions that do not have instances are cleared from memory.</p>
<p class=dt>
DEBUG</p>
<p class=indent>
Clears all breakpoints in the Debugger and restores the Debugger windows (Call Stack, Trace, Watch, etc.) to their default positions.</p>
<p class=tl>
If Clear Debug is issued when the Debugger is closed, the Debugger is opened with the Debugger windows in their default positions.</P><p class=dt>
</p>
<p class=indent>
Works in either fox or debugger frame mode.</p>
<p class=dt>
DLLS</p>
<p class=indent>
Clears from memory all external shared libraries registered with DECLARE - DLL. See <a href="lngdeclare___dll.htm">DECLARE -DLL</a> for more information about registering external shared library functions.</p>
<p class=dt>
EVENTS</p>
<p class=indent>
Stops event processing started with READ EVENTS. When CLEAR EVENTS is executed, program execution continues on the program line immediately following READ EVENTS.</p>
<p class=dt>
FIELDS</p>
<p class=indent>
Releases a list created with SET FIELDS and executes SET FIELDS OFF. CLEAR FIELDS differs from SET FIELDS TO in that it releases all field lists for all work areas, not just the field list for the current work area. Also, SET FIELDS TO does not implicitly issue a SET FIELDS OFF.</p>
<p class=dt>
GETS</p>
<p class=indent>
Releases all pending @&nbsp;...&nbsp;GET controls. Issuing CLEAR also releases all pending @&nbsp;...&nbsp;GET controls.</p>
<p class=dt>
MACROS</p>
<p class=indent>
Releases from memory all keyboard macros, including any SET FUNCTION key assignments. Macros can be saved to a macro file or to a memo field with SAVE MACROS and restored later with RESTORE MACROS. You can also restore the default macros with RESTORE MACROS.</p>
<p class=dt>
MEMORY</p>
<p class=indent>
Releases from memory all public and private memory variables and arrays. System variables aren't released.</p>
<p class=dt>
MENUS</p>
<p class=indent>
Releases all menu bar definitions from memory.</p>
<p class=dt>
POPUPS</p>
<p class=indent>
Releases from memory all menu definitions created with DEFINE POPUP.</p>
<p class=dt>
PROGRAM</p>
<p class=indent>
Clears the compiled program buffer. Visual FoxPro keeps a buffer of the most recently executed programs. In rare cases, Visual FoxPro might not recognize changes made to program files on disk. CLEAR PROGRAM forces Visual FoxPro to read the programs from disk, rather than from the program buffer. The most common reason Visual FoxPro might not recognize changes made to program files is your using an external or terminate-and-stay-resident (TSR) editor to modify a program file. With this exception, you should not have to use CLEAR PROGRAM.</p>
<p class=dt>
PROMPT</p>
<p class=indent>
Releases menu items created with @&nbsp;...&nbsp;PROMPT.</p>
<p class=dt>
READ [ALL]</p>
<p class=indent>
Included for backward compatibility. Use CLEAR EVENTS instead.</p>
<p class=dt>
RESOURCES [<i>FileName</i>]</p>
<p class=indent>
Specifies the name of a cached bitmap, picture, font, cursor, or icon file to be cleared from memory. If no file name is specified, all bitmap, picture, font, cursor and icon files are removed from memory.</p>
<p class=tl>
When Visual FoxPro displays a bitmap, picture, cursor, icon, or font resource, the resource is cached to optimized performance. If a resource of the same name is used (for example, a different bitmap with the same name as one already cached), Visual FoxPro does not reload the resource.</P><p class=tl>
Clearing a resource file is therefore particularly useful for removing a graphic image from memory and forcing Visual FoxPro to reload an image of the same name from disk. For example, a report might display graphic images from a database, all of which are named TEMP; however, because they all have the same name, Visual FoxPro will not reload each new graphic unless the existing one has been cleared from memory using the CLEAR RESOURCES command.</P><p class=dt>
TYPEAHEAD</p>
<p class=indent>
Clears the keyboard type-ahead buffer. CLEAR TYPEAHEAD is useful when you want to prevent input into a field or prevent a response to a prompt before the field or prompt is displayed.</p>
<p class=dt>
WINDOWS</p>
<p class=indent>
Releases from memory all user-defined window definitions and clears the windows from the main Visual FoxPro window or the active user-defined window. Use SAVE WINDOW to save window definitions in a file or memo field for later use.</p>
<p class=tl>
Issuing CLEAR WINDOWS releases any system variable references to forms. For example, the following commands create a system variable reference for a form, and then displays information about the variable:</P><pre><code>goMyForm = CREATEOBJECT('FORM')
DISPLAY MEMORY LIKE goMyForm&nbsp; &amp;&amp; Displays GOMYFORM&nbsp; O&nbsp; FORM
</code></pre>
<p class=tl>
Issuing CLEAR WINDOWS releases the system variable reference and the variable now contains the null value:</P><pre><code>CLEAR WINDOWS
DISPLAY MEMORY LIKE goMyForm&nbsp; &amp;&amp; Displays GOMYFORM&nbsp; O&nbsp; .NULL.
</code></pre>
<p class=label>
<b>Remarks</b></p>
<p>
CLEAR erases the main Visual FoxPro window or the current user-defined window, and releases from memory all pending @&nbsp;...&nbsp;GET controls. You can include CLEAR in format files.</p>
</BODY>
</HTML>
