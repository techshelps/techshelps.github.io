<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TRANSFORM( ) Function</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngtransformlp_rp"></a><sup></sup>TRANSFORM(&nbsp;) Function</h1>
<p>
<a href="lngtransformlp_rpx.htm">Example</a> &nbsp; <a href="lngtransformlp_rpsa.htm">See Also</a></p>
<p>
Returns a character string from an expression in a format determined by a format code.</p>
<p class=label>
<b>Syntax</b></p>
<p>
TRANSFORM(<i>eExpression</i>, [<i>cFormatCodes</i>])</p>
<p class=label>
<b>Returns</b></p>
<p>
Character</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>eExpression</i></p>
<p class=indent>
Specifies the character, currency, date, or numeric expression to format.</p>
<p class=dt>
<i>cFormatCodes</i></p>
<p class=indent>
Specifies one or more format codes that determine how the expression is formatted. The following table lists the available format codes.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=30%><b>Format Codes</b></td>
<td class=label width=70%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=30%>@C</td>
<td width=70%>CR is appended to positive currency or numeric values to indicate a credit.</td>
</tr>
<tr valign=top>
<td width=30%>@D</td>
<td width=70%>Date and DateTime values are converted to the current SET DATE format.</td>
</tr>
<tr valign=top>
<td width=30%>@E</td>
<td width=70%>Date and DateTime values are converted to a BRITISH date format.</td>
</tr>
<tr valign=top>
<td width=30%>@R</td>
<td width=70%>The transformation uses a format mask. The mask characters are not stored to the transformed value. Use only with character or numeric data. Mask characters include:<p>
9 or #Represents a character or number.</p>
<p>
!Converts lower-case letters to upper-case letters.</p>
</td>
</tr>
<tr valign=top>
<td width=30%>@T</td>
<td width=70%>Leading and trailing spaces are trimmed from character values.</td>
</tr>
<tr valign=top>
<td width=30%>@X</td>
<td width=70%>DB is appended to negative currency or numeric values to indicate a debit.</td>
</tr>
<tr valign=top>
<td width=30%>@Z</td>
<td width=70%>If 0, currency or numeric values are converted to spaces.</td>
</tr>
<tr valign=top>
<td width=30%>@(</td>
<td width=70%>Encloses negative currency or numeric values in parentheses.</td>
</tr>
<tr valign=top>
<td width=30%>@^</td>
<td width=70%>Converts currency or numeric values to scientific notation.</td>
</tr>
<tr valign=top>
<td width=30%>@0</td>
<td width=70%>Converts numeric or currency values to their hexadecimal equivalents. The numeric or currency value must be positive and less than 4,294,967,296.</td>
</tr>
<tr valign=top>
<td width=30%>@!</td>
<td width=70%>Converts an entire character string to uppercase.</td>
</tr>
<tr valign=top>
<td width=30%>@$</td>
<td width=70%>Adds the current currency symbol specified by SET CURRENCY to currency and numeric values. By default, the symbol is placed immediately before or after the value. However, the currency symbol and its placement (specified with SET CURRENCY), the separator character (specified with SET SEPARATOR) and the decimal character (specified with SET POINT) can all be changed.</td>
</tr>
<tr valign=top>
<td width=30%>X</td>
<td width=70%>Specifies the width of character values. For example, if <i>cFormatCodes</i> is 'XX', 2 characters are returned.</td>
</tr>
<tr valign=top>
<td width=30%>Y</td>
<td width=70%>Converts logical true (.T.) and false (.F.) values to Y and N, respectively.</td>
</tr>
<tr valign=top>
<td width=30%>!</td>
<td width=70%>Converts a lowercase character to uppercase in the corresponding position in a character string.</td>
</tr>
<tr valign=top>
<td width=30%>.</td>
<td width=70%>Specifies the decimal point position in currency and numeric values.</td>
</tr>
<tr valign=top>
<td width=30%>,</td>
<td width=70%>Separates digits to the left of the decimal point in currency and numeric values.</td>
</tr>
</table><br>
<p>
If you omit <i>cFormatCodes</i>, Visual FoxPro performs a default transformation on <i>eExpression</i>. The following table describes the transformation performed for each data type <i>eExpression</i> can assume:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=30%><b>Data Type</b></td>
<td class=label width=70%><b>Transformation Description</b></td>
</tr>
<tr valign=top>
<td width=30%>Character</td>
<td width=70%>No transformation is performed.</td>
</tr>
<tr valign=top>
<td width=30%>Currency</td>
<td width=70%>Transformation is determined by the settings specified in the Regional tab of the Options dialog box.</td>
</tr>
<tr valign=top>
<td width=30%>Date</td>
<td width=70%>A DTOC(&nbsp;) transformation is performed on the date.</td>
</tr>
<tr valign=top>
<td width=30%>DateTime</td>
<td width=70%>A TTOC(&nbsp;) transformation is performed on the date time.</td>
</tr>
<tr valign=top>
<td width=30%>Logical</td>
<td width=70%>Logical true (.T.) and false (.F.) values are transformed to the character strings ".T." and ".F." respectively.</td>
</tr>
<tr valign=top>
<td width=30%>Numeric (includes Double, Float, or Integer data types)</td>
<td width=70%>Trailing zeros are removed from the decimal portion of a numeric value. If the numeric value is a whole number, a decimal point is not included in the transformed value (for example, 4.0 is transformed to 4). If the numeric value is less than one but greater than negative one, zero is included before the decimal point (for example, .4 is transformed to 0.4).</td>
</tr>
<tr valign=top>
<td width=30%>General</td>
<td width=70%>"Gen" is returned if the general field contains an object; "gen" is returned if the general field doesn't contain an object.</td>
</tr>
<tr valign=top>
<td width=30%>Memo</td>
<td width=70%>No transformation is performed.</td>
</tr>
</table><br>
</BODY>
</HTML>
