<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>THIS Object Reference</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngthis_object_reference"></a><sup></sup>THIS Object Reference</h1>
<p>
<a href="lngthis_object_referencex.htm">Example</a> &nbsp; <a href="lngthis_object_referencesa.htm">See Also</a></p>
<p>
Provides a reference to the current object in event code or in a class definition.</p>
<p class=label>
<b>Syntax</b></p>
<p>
THIS.<i>PropertyName</i> | <i>ObjectName</i></p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>PropertyName</i></p>
<p class=indent>
Specifies a property to set or get for the object.</p>
<p class=dt>
<i>ObjectName</i></p>
<p class=indent>
Specifies an object in the class.</p>
<p class=label>
<b>Remarks</b></p>
<p>
THIS provides a convenient way of referring to the current object when writing event-handling programs in a form. For example, this Click Event program for a command button sets the button's caption to the current time:</p>
<pre><code>this.caption = time()
</code></pre>
<p>
Using THIS instead of explicitly referring to the current object by name (for example, <code>thisform.command1.caption</code>) makes program code portable between objects, because it avoids the object's name, and automatically encapsulates the object's parent class.</p>
<p>
THIS also allows you to reference a property or an object in a class definition. Methods in a class definition block can use THIS to specify a property or object that will exist when the class is created.</p>
<p>
Because multiple instances of objects share the same method code, THIS always refers to the instance in which the code is executing. If there are multiple instances of an object, and one of the object's methods is called, THIS refers to the correct object.</p>
</BODY>
</HTML>
