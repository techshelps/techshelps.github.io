<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_BreakPoint( ) API Library Routine</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lng_breakpointlp_rp"></a><sup></sup>_BreakPoint(&nbsp;) API Library Routine</h1>
<p>
<a href="lng_breakpointlp_rpx.htm">Example</a></p>
<p>
_BreakPoint(&nbsp;) is a macro that generates the debugger breakpoint instruction, INT 3. This can be helpful for debugging external routines.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>void _BreakPoint</b>(<b>void </b><i>any</i>)<br>
<b>void </b><i>any</i>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Pointer. */</p>
<p class=label>
<b>Remarks</b></p>
<p>
When a _BreakPoint(&nbsp;) call is encountered, control transfers to your debugger. Most debuggers return control to the program line that includes the INT3 instruction, and you have to manually increment the instruction pointer (IP) past this instruction. At that time you can use your debugger to set additional breakpoints. Always remove any breakpoints before exiting the external routine. For more information about debugging, see Chapter 28, <a href="dgaccessing_the_visual_foxpro_api.htm">Accessing the Visual FoxPro API</a>, in the <i>Programmer's Guide</i>.</p>
</BODY>
</HTML>
