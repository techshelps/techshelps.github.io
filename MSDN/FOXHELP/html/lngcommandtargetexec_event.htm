<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CommandTargetExec Event</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngcommandtargetexec_event"></a><sup></sup>CommandTargetExec Event</h1>
<p>
<a href="lngcommandtargetexec_eventat.htm">Applies To</a> &nbsp; <a href="lngcommandtargetexec_eventsa.htm">See Also</a></p>
<p>
Occurs when an Active Document host notifies an Active Document of the command to be executed.</p>
<p class=label>
<b>Syntax</b></p>
<p>
PROCEDURE <i>Object</i>.CommandTargetExec<br>
[LPARAMETERS <i>nCommandID</i>, <i>nExecOption</i>, <i>eArgIn</i>, <i>eArgOut</i>]</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nCommandID</i></p>
<p class=indent>
A parameter passed by the Active Document’s host to the CommandTargetExec event that indicates the command to be executed. The following table lists the values passed to the event that Visual FoxPro can process and the corresponding command to be executed.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=20%><b><i>nCommandID</i></b></td>
<td class=label width=41%><b>FOXPRO.H Constant</b></td>
<td class=label width=39%><b>Command</b></td>
</tr>
<tr valign=top>
<td width=20%>1</td>
<td width=41%>CMDID_OPEN</td>
<td width=39%>File menu <b>Open</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>2</td>
<td width=41%>CMDID_NEW</td>
<td width=39%>File menu <b>New</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>3</td>
<td width=41%>CMDID_SAVE</td>
<td width=39%>File menu <b>Save</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>4</td>
<td width=41%>CMDID_SAVEAS</td>
<td width=39%>File menu <b>Save As</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>5</td>
<td width=41%>CMDID_SAVECOPYAS</td>
<td width=39%>File menu <b>Save Copy As</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>6</td>
<td width=41%>CMDID_PRINT</td>
<td width=39%>File menu <b>Print</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>7</td>
<td width=41%>CMDID_PRINTPREVIEW</td>
<td width=39%>File menu <b>Print Preview</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>8</td>
<td width=41%>CMDID_PAGESETUP</td>
<td width=39%>File menu <b>Page Setup</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>9</td>
<td width=41%>CMDID_SPELL</td>
<td width=39%>Tools menu <b>Spelling</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>10</td>
<td width=41%>CMDID_PROPERTIES</td>
<td width=39%>File menu <b>Properties</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>11</td>
<td width=41%>CMDID_CUT</td>
<td width=39%>Edit menu <b>Cut</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>12</td>
<td width=41%>CMDID_COPY</td>
<td width=39%>Edit menu <b>Copy</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>13</td>
<td width=41%>CMDID_PASTE</td>
<td width=39%>Edit menu <b>Paste</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>14</td>
<td width=41%>CMDID_PASTESPECIAL</td>
<td width=39%>Edit menu <b>Paste Special</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>15</td>
<td width=41%>CMDID_UNDO</td>
<td width=39%>Edit menu <b>Undo</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>16</td>
<td width=41%>CMDID_REDO</td>
<td width=39%>Edit menu <b>Redo</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>17</td>
<td width=41%>CMDID_SELECTALL</td>
<td width=39%>Edit menu <b>Select All</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>18</td>
<td width=41%>CMDID_CLEARSELECTION</td>
<td width=39%>Edit menu <b>Clear</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>19</td>
<td width=41%>CMDID_ZOOM</td>
<td width=39%>View menu <b>Zoom</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>20</td>
<td width=41%>CMDID_GETZOOMRANGE</td>
<td width=39%>Retrieves zoom range applicable to the View menu <b>Zoom</b> command.</td>
</tr>
<tr valign=top>
<td width=20%>21</td>
<td width=41%>CMDID_UPDATECOMMANDS</td>
<td width=39%>Notifies the Active Document of state changes.</td>
</tr>
<tr valign=top>
<td width=20%>22</td>
<td width=41%>CMDID_REFRESH</td>
<td width=39%>Asks the Active Document to refresh its display. Implemented by the Active Document.</td>
</tr>
<tr valign=top>
<td width=20%>23</td>
<td width=41%>CMDID_STOP</td>
<td width=39%>Asks the Active Document to stop its processing.</td>
</tr>
<tr valign=top>
<td width=20%>24</td>
<td width=41%>CMDID_HIDETOOLBARS</td>
<td width=39%>Asks the Active Document to hide its toolbars. Implemented by the Active Document.</td>
</tr>
<tr valign=top>
<td width=20%>25</td>
<td width=41%>CMDID_SETPROGRESSMAX</td>
<td width=39%>Sets the maximum value of the progress indicator.</td>
</tr>
<tr valign=top>
<td width=20%>26</td>
<td width=41%>CMDID_SETPROGRESSPOS</td>
<td width=39%>Sets the current value of the progress indicator.</td>
</tr>
<tr valign=top>
<td width=20%>27</td>
<td width=41%>CMDID_PROGRESSTEXT</td>
<td width=39%>Sets the text contained in the progress indicator.</td>
</tr>
<tr valign=top>
<td width=20%>28</td>
<td width=41%>CMDID_SETTITLE</td>
<td width=39%>Sets the title bar text.</td>
</tr>
<tr valign=top>
<td width=20%>29</td>
<td width=41%>CMDID_DOWNLOADSTATE</td>
<td width=39%>Sent by the host when its download state changes.</td>
</tr>
<tr valign=top>
<td width=20%>30</td>
<td width=41%>CMDID_STOPDOWNLOAD</td>
<td width=39%>Stops the download when executed.</td>
</tr>
<tr valign=top>
<td width=20%>31</td>
<td width=41%>CMDID_ONTOOLBARACTIVATED</td>
<td width=39%>One of the container’s toolbars has received the focus.</td>
</tr>
<tr valign=top>
<td width=20%>36</td>
<td width=41%>CMDID_ENABLE_INTERACTION</td>
<td width=39%>Sent by the Active Document host to tell the Active Document to either pause or resume any multimedia (audio or animation) in the Active Document.<p>
Returns a true (.T.) value to <i>eArgIn</i> if a multimedia file running in a control in the Active Document should be resumed, or false (.F.) if the multimedia file should be paused.</p>
<p>
Internet Explorer 4.0 uses this command to inform an Active Document when it is minimized or completely covered by another window so that the Active Document can pause playing of multimedia information.</p>
</td>
</tr>
<tr valign=top>
<td width=20%>37</td>
<td width=41%>CMDID_ONUNLOAD</td>
<td width=39%>Sent by the Active Document host before navigation to another site is initiated or the host is closed. Set <i>eArgOut</i> to false (.F.) to prevent an Active Document from being closed by its host. Set <i>eArgOut</i> to true (.T.) to allow an Active Document to be closed by its host.</td>
</tr>
</table><br>
<p class=dt>
<i>nExecOption</i></p>
<p class=indent>
A parameter passed to the CommandTargetExec event that indicates the default action desired for the specified command.</p>
<p class=indent>
The following table lists the values for <i>nExecOption</i> and the actions that are performed.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=19%><b><i>nExecOption</i></b></td>
<td class=label width=45%><b>FOXPRO.H Constant</b></td>
<td class=label width=36%><b>Action</b></td>
</tr>
<tr valign=top>
<td width=19%>0</td>
<td width=45%>CMDEXECOPT_DODEFAULT</td>
<td width=36%>Use the default behavior, whether prompting the user for input or not.</td>
</tr>
<tr valign=top>
<td width=19%>1</td>
<td width=45%>CMDEXECOPT_PROMPTUSER</td>
<td width=36%>Execute the command after obtaining user input.</td>
</tr>
<tr valign=top>
<td width=19%>2</td>
<td width=45%>CMDEXECOPT_DONTPROMPTUSER</td>
<td width=36%>Execute the command without prompting the user. For example, clicking the Print toolbar button causes a document to be immediately printed without user input</td>
</tr>
<tr valign=top>
<td width=19%>3</td>
<td width=45%>CMDEXECOPT_SHOWHELP</td>
<td width=36%>Show help for the corresponding command, but do not actually execute the command.</td>
</tr>
</table><br>
<p class=dt>
<i>eArgIn</i></p>
<p class=indent>
A parameter passed from the Active Document host to the CommandTargetExec event. This parameter is typically the null value, with the notable exception of when <i>nCommandID</i> is 36. When <i>nCommandID</i> is 36, <i>eArgIn</i> contains a value. See the table in the <i>nCommandID</i> parameter description above for more information about the logical value passed to <i>eArgIn</i>.</p>
<p class=dt>
<i>eArgOut</i></p>
<p class=indent>
An output parameter returned from the CommandTargetExec event to Active Document host. This parameter is typically the null value, with the notable exception of when <i>nCommandID</i> is 37. When <i>nCommandID</i> is 37 (indicating the Active Document host is about to close or navigate to another site), you can set <i>eArgOut</i> to false (.F.) to prevent the Active Document from being closed by its host. Set <i>eArgOut</i> to true (.T.) to allow the Active Document to be closed by its host.</p>
<p class=label>
<b>Remarks</b></p>
<p>
The CommandTargetExec event allows an Active Document to perform custom actions based on commands sent to the Active Document by its host. These commands may be sent in response to the user choosing a menu or toolbar item or triggering an event in the Active Document host. The value returned from the CommandTargetExec event notifies the Active Document host if you handled the command. If you didn’t handle the command, the Active Document host may perform its own default processing of the command.</p>
<p>
The following table lists the appropriate values to return from the CommandTargetExec event.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=17%><b>Return Value</b></td>
<td class=label width=26%><b>FOXPRO.H Constant</b></td>
<td class=label width=57%><b>Command Action</b></td>
</tr>
<tr valign=top>
<td width=17%>0</td>
<td width=26%>CMD_OK</td>
<td width=57%>Command handled okay by the Active Document.<p>
Return this value when the Active Document has handled the command identified with <i>nCommandID</i>. For example, if the Open command on the File menu on the host is chosen, your Active Document can determine in its CommandTargetExec event that <i>nCommandID</i> is 1 and then execute its own Open file routine, perhaps using the Visual FoxPro <a href="lnggetfilelp_rp.htm">GETFILE(&nbsp;) function</a>.</p>
</td>
</tr>
<tr valign=top>
<td width=17%>2</td>
<td width=26%>CMD_NOTSUPPORTED</td>
<td width=57%>Command not supported by the Active Document.<p>
Return this value when the command identified with <i>nCommandID</i> is not recognized as a command that can be handled by the Active Document.</p>
</td>
</tr>
<tr valign=top>
<td width=17%>3</td>
<td width=26%>CMD_DISABLED</td>
<td width=57%>Command disabled for the Active Document. <p>
Return this value when the command identified with <i>nCommandID</i> is currently disabled and cannot be executed by the Active Document.</p>
</td>
</tr>
<tr valign=top>
<td width=17%>4</td>
<td width=26%>CMD_NOHELP</td>
<td width=57%>No help available for the command from the Active Document.<p>
Return this value when the Active Document doesn’t support help for the command identified with <i>nCommandID</i>.</p>
</td>
</tr>
<tr valign=top>
<td width=17%>5</td>
<td width=26%>CMD_CANCELED</td>
<td width=57%>The user canceled the execution of command.<p>
Return this value when the Active Document attempted to handle the command identified with <i>nCommandID</i> but the user canceled the operation.</p>
</td>
</tr>
</table><br>
<p>
If the CommandTargetExec event contains no user code, 2 (command not supported by the Active Document) is returned to the Active Document host. If the CommandTargetExec event contains user code but doesn’t include a RETURN statement, 0 (command handled okay by the Active Document) is returned to the Active Document host.</p>
<p>
Visual FoxPro utilizes the IOleCommandTarget interface for the CommandTargetExec and CommandTargetQuery events. Search for IOleCommandTarget in the MSDN library for additional information about how these events are implemented.</p>
</BODY>
</HTML>
