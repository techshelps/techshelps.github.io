<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADIR() Function</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngadirlp_rp"></a><sup></sup>ADIR(&nbsp;) Function</h1>
<p>
<a href="lngadirlp_rpx.htm">Example</a> &nbsp; <a href="lngadirlp_rpsa.htm">See Also</a></p>
<p>
Places information about files into an array and then returns the number of files.</p>
<p class=label>
<b>Syntax</b></p>
<p>
ADIR(<i>ArrayName</i> [, <i>cFileSkeleton</i> [, <i>cAttribute</i>]])</p>
<p class=label>
<b>Returns</b></p>
<p>
Numeric</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>ArrayName</i></p>
<p class=indent>
Specifies the name of the array. If the array you include doesn't exist, Visual FoxPro automatically creates the array. If the array exists and isn't large enough to contain all the information, Visual FoxPro automatically increases the size of the array to accommodate the information. If the array is larger than necessary, Visual FoxPro truncates the array. If the array exists and ADIR(&nbsp;) returns 0 because no matching files are found, the array remains unchanged. If the array doesn't exist and ADIR(&nbsp;) returns 0, the array isn't created.</p>
<p class=tl>
The following table describes the contents and data type of each column in the array:</P><table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=22%><b>Column</b></td>
<td class=label width=34%><b>Array contents</b></td>
<td class=label width=44%><b>Data type</b></td>
</tr>
<tr valign=top>
<td width=22%>1</td>
<td width=34%>File names</td>
<td width=44%>Character</td>
</tr>
<tr valign=top>
<td width=22%>2</td>
<td width=34%>File sizes</td>
<td width=44%>Numeric</td>
</tr>
<tr valign=top>
<td width=22%>3</td>
<td width=34%>Dates last modified</td>
<td width=44%>Date</td>
</tr>
<tr valign=top>
<td width=22%>4</td>
<td width=34%>Times last modified</td>
<td width=44%>Character</td>
</tr>
<tr valign=top>
<td width=22%>5</td>
<td width=34%>File attributes</td>
<td width=44%>Character</td>
</tr>
</table><br>
<p class=tl>
The last array column contains the file attributes of the matching files. Each file attribute is expressed by a letter; a file can have more than one attribute. The following table indicates the file attribute represented by each letter:</P><table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=22%><b>Letter</b></td>
<td class=label width=78%><b>Attribute</b></td>
</tr>
<tr valign=top>
<td width=22%>A</td>
<td width=78%>Archive – Read/Write </td>
</tr>
<tr valign=top>
<td width=22%>H</td>
<td width=78%>Hidden</td>
</tr>
<tr valign=top>
<td width=22%>R</td>
<td width=78%>Read-only</td>
</tr>
<tr valign=top>
<td width=22%>S</td>
<td width=78%>System</td>
</tr>
<tr valign=top>
<td width=22%>D</td>
<td width=78%>Directory</td>
</tr>
</table><br>
<p class=dt>
<i>cFileSkeleton</i></p>
<p class=indent>
Specifies a file skeleton so you can store information about files with names or extensions that match a search criterion. For example, the criterion can be all tables, all text files, all files with names that have A as their first letter, and so on. Such general searches are done by including the wildcards * and ? in <i>cFileSkeleton</i>. A question mark represents a single character; an asterisk represents any number of characters. You can use any number of wildcards in any position within the file skeleton.</p>
<p class=tl>
You can specify a drive and/or directory to search in for matching file names. If you don't specify a drive and directory, Visual FoxPro places information about files in the current directory into the array.</P><p class=dt>
<i>cAttribute</i></p>
<p class=indent>
Specifies the inclusion of subdirectories and hidden or system files.</p>
<p class=tl>
<i>cAttribute</i> can contain any combination of D, H, and S. Including D returns subdirectory names of the current directory in addition to file names that match the file skeleton specified in <i>cFileSkeleton</i>. Including H returns information about hidden files that match the file skeleton specified in <i>cFileSkeleton</i>. Including S returns information about system files that match the file skeleton specified in <i>cFileSkeleton</i>.</P><p class=tl>
Include an empty string in <i>cFileSkeleton</i> to return just subdirectory names, hidden files or system files.</P><p class=tl>
You can include V in <i>cAttribute</i> to return the volume name of the current drive. Only the volume name is returned to the array if V is included with D, H, or S. The volume name is stored in the first array element and the remainder of the array is truncated.</P><p class=label>
<b>Remarks</b></p>
<p>
For each file, ADIR(&nbsp;) places into the array the file name, size, date last modified, time last modified, and attributes.</p>
</BODY>
</HTML>
