<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Server Upsizing Wizard: Step 8 - Upsizing Options</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><sup><a name="wizsql_server_upsizing_wizard_step_8"></a></sup>SQL Server Upsizing Wizard: Step 8 – Set Upsizing Options</h1>
<p>
<a href="wizsql_server_upsizing_wizard_step_8sa.htm">See Also</a></p>
<p>
In Step 8, you can control how the <b>SQL Server Upsizing Wizard</b> exports your tables. You can also specify the changes you want the <b>SQL Server Upsizing Wizard</b> to make to the local database. You can create upsizing reports, redirect views to use remote data, create new remote views on tables that are upsized, and save passwords with views.</p>
<h4>Specifying Table Attributes to Upsize</h4>
<p>
By default, the <b>SQL Server Upsizing Wizard</b> exports a table's structure and its data. Along with field names and data types, you can also export:
<ul type=disc>
<li>
Indexes<br><br></li>
<li>
Defaults<br><br></li>
<li>
Relationships (referential integrity constraints)<br><br></li>
<li>
Validation rules</li>
</ul>
<p>
The <b>SQL Server Upsizing Wizard</b> can export additional table properties and create timestamp columns on certain SQL Server tables. The <b>SQL Server Upsizing Wizard</b> can also modify your Visual FoxPro database so that your queries, forms, and reports use the data in your new SQL Server tables, rather than the data in the local Visual FoxPro database.</p>
<p>
Visual FoxPro indexes and defaults become SQL Server indexes and defaults. If you choose to export validation rules, the <b>SQL Server Upsizing Wizard</b> attempts to export field- and row-level validation rules to SQL Server, where they become stored procedures called from SQL Server triggers. Exported table relationships also become part of the triggers.</p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If you export table relationships, be sure to export indexes as well or you might experience mediocre performance.</p>
<h3>Options</h3>
<h4>Table Attributes to Upsize</h4>
<p class=dt>
<b>Indexes</b></p>
<p class=indent>
Select to upsize Visual FoxPro .cdx indexes.</p>
<p class=dt>
<b>Defaults</b></p>
<p class=indent>
Select to upsize default values for table fields.</p>
<p class=dt>
<b>Relationships</b></p>
<p class=indent>
Select to upsize relationships stored in the database you are upsizing.</p>
<p class=dt>
<b>Validation rules</b></p>
<p class=indent>
Select to upsize field and table validation rules. </p>
<p class=dt>
<b>Structure only, no data</b></p>
<p class=indent>
Select to upsize the empty table structure, without copying table data to the SQL Server data source.</p>
<p class=dt>
<b>Use declarative referential integrity</b></p>
<p class=indent>
Enabled when upsizing to a SQL Server version 6.<i>x</i> database. Select to create SQL constraints to enforce referential integrity.</p>
<p class=dt>
<b>Null Mapping</b></p>
<p class=indent>
Select the fields that can accept .NULL.</p>
<h4>Changes to Make Locally</h4>
<p class=dt>
<b>Create upsizing report</b></p>
<p class=indent>
Creates a series of reports documenting the results of the upsizing process.</p>
<p class=dt>
<b>Redirect views to remote data</b></p>
<p class=indent>
Changes the definition of local views in the database you are upsizing to remote views that use the upsized server tables as base tables. Your queries, forms, and reports then use views on the data in the new SQL Server data source rather than the original Visual FoxPro data.</p>
<p class=dt>
<b>Create remote views on tables</b></p>
<p class=indent>
When you upsize a local table, you need a remote view to access the upsized table on the remote server. The <b>SQL Server Upsizing Wizard</b> can create new, remote views as you upsize. As the <b>SQL Server Upsizing Wizard</b> creates new remote views, it renames all local versions of tables by adding the suffix "_local" to the table name.</p>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Creating remote views on tables as you upsize is not recommended, because these unoptimized views select all the data in the table rather than selecting only the information your application needs. The preferred method is to create parameterized views. You can either create a local parameterized view, which you then upsize by choosing <b>Redirect views to remote data</b>, or create a new parameterized remote view on the table after you've completed the upsizing process. For information on creating parameterized views, see Chapter 8, <a href="dgcreating_views.htm">Creating Views</a>, in the <i>Programmer's Guide</i>.</p><p class=dt>
<b>Save password with views</b></p>
<p class=indent>
By default, you must enter your password and login ID when opening a remote view in a new session with Visual FoxPro. Select this option to store your password locally with the remote view definition in your database.</p>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This check box is automatically checked for you and disabled if you used a named connection in <a href="wizsql_server_upsizing_wizard_step_2.htm">Step 2 - Select Data Source</a> to access your data source, and that named connection includes a password. This prevents the password from being removed from the connection definition.</p><h4>Creating Upsizing Reports</h4>
<p>
When you select <b>Create Upsizing Report</b>, Visual FoxPro generates upsizing reports that document the tables, views, fields, indexes, and referential integrity constraints the <b>SQL Server Upsizing Wizard</b> creates on SQL Server. The <b>SQL Server Upsizing Wizard</b> places the reports in a new project, using the following report names:
<ul type=disc>
<li>
RptErrors<br><br></li>
<li>
RptField<br><br></li>
<li>
RptIndex<br><br></li>
<li>
RptRels<br><br></li>
<li>
RptTable<br><br></li>
<li>
RptViews</li>
</ul>
<p>
The upsizing reports include information about any devices and databases that are created, information about any errors encountered during the upsizing process, and a complete explanation of the way in which each Visual FoxPro object is mapped to a SQL Server object. You can view or print these reports after upsizing is complete.</p>
<h4>Upsizing All Tables Used By a Local View</h4>
<p>
If you upsize all the tables used by a local view, the local view is renamed by adding the suffix "_local" to the existing local view name. The <b>SQL Server Upsizing Wizard</b> creates a new view based on the SQL statement of the local view, substituting the remote table names for the local table names. The KeyField and other update properties of the view are preserved.</p>
<h4>Upsizing Some of the Tables Used By a Local View</h4>
<p>
If you upsize only some of the tables used by a local view, the <b>SQL Server Upsizing Wizard</b> does not rename the local views. Instead, it renames the Visual FoxPro tables you export with the suffix "_local." For example, if you export a table named "Employees," the table is renamed "Employees_local" in your database. The <b>SQL Server Upsizing Wizard</b> then creates a remote view for each of the tables you exported. Each view selects all fields and all records from the remote table.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Visual FoxPro handles local and remote data in different ways. The data access design of an application using local data may become very inefficient when applied as is to remote data.</p>
</BODY>
</HTML>
