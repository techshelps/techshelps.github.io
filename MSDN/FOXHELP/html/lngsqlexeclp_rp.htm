<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLEXEC( ) Function</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngsqlexeclp_rp"></a><sup></sup>SQLEXEC(&nbsp;) Function</h1>
<p>
<a href="lngsqlexeclp_rpx.htm">Example</a> &nbsp; <a href="lngsqlexeclp_rpsa.htm">See Also</a></p>
<p>
Sends a SQL statement to the data source, where the statement is processed.</p>
<p class=label>
<b>Syntax</b></p>
<p>
SQLEXEC(<i>nConnectionHandle</i>, [<i>cSQLCommand</i>, [<i>CursorName</i>]])</p>
<p class=label>
<b>Returns</b></p>
<p>
Numeric</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>nConnectionHandle</i></p>
<p class=indent>
Specifies the connection handle to the data source returned by SQLCONNECT(&nbsp;).</p>
<p class=dt>
<i>cSQLCommand</i></p>
<p class=indent>
Specifies the SQL statement passed to the data source.</p>
<p class=tl>
The SQL statement can contain a parameterized WHERE clause which creates a parameterized view. All parameters in the WHERE clause must be defined before SQLEXEC(&nbsp;) is issued. For example, if the parameters are variables, the variables must be created and initialized before SQLEXEC(&nbsp;) is issued. </P><p class=tl>
For additional information about creating parameterized views, see Chapter 8, <a href="dgcreating_views.htm">Creating Views</a>, in the <i>Programmer's Guide</i>.</P><p class=dt>
<i>CursorName</i></p>
<p class=indent>
Specifies the name of the Visual FoxPro cursor to which the result set is sent. If you don't include a cursor name, Visual FoxPro uses the default name SQLRESULT.</p>
<p class=tl>
For multiple result sets, new cursor names are derived by appending an incremented number to the name of the first cursor.</P><p class=label>
<b>Remarks</b></p>
<p>
SQLEXEC(&nbsp;) returns the number of result sets if there is more than one. SQLEXEC(&nbsp;) returns 0 if it is still executing and returns 1 when it has finished executing. SQLEXEC(&nbsp;) returns –1 if a connection level error occurs.</p>
<p>
If SQLEXEC(&nbsp;) is used to execute a SQL statement prepared with SQLPREPARE(&nbsp;), only the connection handle argument <i>nConnectionHandle</i> is required. The <i>cSQLCommand</i> and <i>CursorName</i> arguments should be omitted.</p>
<p>
If the SQL statement generates one result set, SQLEXEC(&nbsp;) stores the result set to the specified Visual FoxPro cursor. If the SQL statement generates two or more result sets and SQLSETPROP(&nbsp;) is set to 1 (batch mode), you can name each result set by setting the SQLSETPROP(&nbsp;) BatchMode option to 0 and changing the cursor name each time you call SQLMORERESULTS(&nbsp;).</p>
<p>
SQLEXEC(&nbsp;) is one of the four functions that you can execute either synchronously or asynchronously. The Asynchronous setting of SQLSETPROP(&nbsp;) determines whether these functions execute synchronously or asynchronously. In asynchronous mode, you must call SQLEXEC(&nbsp;) repeatedly until it returns a value other than 0 (still executing).</p>
</BODY>
</HTML>
