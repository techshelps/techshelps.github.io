<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NEWOBJECT( ) Function</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngnewobjectlp_rp"></a><sup></sup>NEWOBJECT(&nbsp;) Function</h1>
<p>
<a href="lngnewobjectlp_rpsa.htm">See Also</a></p>
<p>
Creates a new class or object directly from a .vcx visual class library or program.</p>
<p class=label>
<b>Syntax</b></p>
<p>
NEWOBJECT(<i>cClassName</i> [, <i>cModule</i> [, <i>cInApplication</i><br>
 &nbsp; [, <i>eParameter1</i>, <i>eParameter2</i>, ...]]])</p>
<p class=label>
<b>Returns</b></p>
<p>
Object</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>cClassName</i></p>
<p class=indent>
Specifies the class or object from which the new class or object is created.</p>
<p class=indent>
OLE objects are created with the following syntax for <i>cClassName</i>:</p>
<pre><code>ApplicationName.Class
</code></pre>
<p class=indent>
For example, to create a Microsoft Excel worksheet (which supports Automation), you can use the following syntax:</p>
<pre><code>oExcelSheet = NEWOBJECT('Excel.Sheet')
</code></pre>
<p class=dt>
<i>cModule</i></p>
<p class=indent>
Specifies a .vcx visual class library or Visual FoxPro program (.prg, .mpr, .app, .exe, and so on) containing the class or object specified with <i>cClassName</i>. The default is a .vcx visual class library; you must include an extension if you specify a program. </p>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;A class library can have an alias. To specify a class or object from a class library with an alias, include the class library alias followed by a period and the object name.</p><p class=indent>
If <i>cModule</i> is omitted, or is the empty string or the null value, Visual FoxPro searches for the class or object in the following order:
<ol>
<li>
Visual FoxPro base classes.<br><br></li>
<li>
User-defined class definitions in memory in the order they were loaded.<br><br></li>
<li>
Classes in the current program.<br><br></li>
<li>
Class libraries opened with SET CLASSLIB.<br><br></li>
<li>
Classes in procedure files opened with SET PROCEDURE.<br><br></li>
<li>
Classes in the Visual FoxPro program execution chain.<br><br></li>
<li>
The OLE registry if SET OLEOBJECT is ON.</li>
</ol>
<p class=dt>
<i>cInApplication</i></p>
<p class=indent>
Specifies the Visual FoxPro application (.exe, or .app) containing the .vcx visual class library you specify with <i>cClassLibName</i>. You must include an extension for the application. <i>CInApplication</i> is ignored if <i>cModule</i> is omitted, or if <i>cInApplication</i> is the empty string or the null value.</p>
<p class=dt>
<i>eParameter1</i>, <i>eParameter2</i>, ...</p>
<p class=indent>
Specifies optional parameters that are passed to the Init event procedure for the class or object.</p>
<p class=label>
<b>Remarks</b></p>
<p>
NEWOBJECT(&nbsp;) allows you to create a new class or object without opening a .vcx visual class library or procedure file.</p>
<p>
Use = or STORE to assign the object reference returned by NEWOBJECT(&nbsp;) to a variable or array element. If an object assigned to a variable or array element is released, the variable or array element contains the null value. Use RELEASE to remove the variable or array element from memory.</p>
</BODY>
</HTML>
