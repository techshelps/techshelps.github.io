<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Querying and Updating Multiple Tables</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="ugquerying_and_updating_multiple_tables"></a><sup></sup>Chapter 6: Querying and Updating Multiple Tables</h1>
<p>
With Visual FoxPro, you can query multiple tables and views, and combine remote and local data into a view. This capability is useful when the data you need is stored in two or more tables, or split between local tables and tables on a remote data source.</p>
<p>
For information about setting up simple one-table queries and views, see Chapter 4, <a href="ugretrieving_data.htm">Retrieving Data</a>, and Chapter 5, <a href="ugupdating_data_with_views.htm">Updating Data with Views</a>, For more information about joins, see Chapter 7, <a href="dgworking_with_tables.htm">Working with Tables</a>, in the <i>Programmer’s Guide</i>.</p>
<p>
This chapter discusses:</p>
<ul type=disc>
<li>
<a href="#ugquerying_multiple_tables_and_views">Querying Multiple Tables and Views</a></li>
<li>
<a href="#ugusing_multiple_tables_in_views">Using Multiple Tables in Views</a></li>
<li>
<a href="#ugusing_multiple_remote_tables_in_a_view">Using Multiple Remote Tables in a View</a></li>
<li>
<a href="#ugcombining_local_and_remote_data_in_a_view">Combining Local and Remote Data in a View</a></li>
</ul>

<h2><a name="ugquerying_multiple_tables_and_views"></a>Querying Multiple Tables and Views</h2>
<p>
When you need access to information stored in two or more tables, just add all the relevant tables to your query and join them on common fields. Then you can search the records in all the tables for the information you need. You can use any combination of database tables, free tables, and local or remote views in your queries.</p>
<p class=label>
<b>Using multiple tables or views in a query</b></p>
<p>
<img src="afu06001.gif" border=0></p>
<p>
Because the term “view” can refer to both an input source or the object you are creating, the term “table” is used for both tables and views used as input sources. The term “view” is used for the object you create with the View Designer.</p>
<h3>Adding Views and Tables to a Query</h3>
<p>
When you add tables or views to your query, Visual FoxPro suggests a possible join between the tables or views, based on matching field names.</p>
<p>
For example, if you add the Customer table in the Visual Studio …\Samples\Vfp98\Data directory to the Query Designer, and then add the Orders table, Visual FoxPro suggests a join between the tables based on the matching fields Customer.cust_id and Orders.cust_id.</p>
<p class=label>
<b>Suggested join between tables</b></p>
<p>
<img src="afu06002.gif" border=0></p>
<p>
If you are using a database that contains persistent relationships defined between the views or tables within it, Visual FoxPro uses the existing relationships as default joins.</p>
<p>
If you want to add database tables or views to your query, you may need to open the appropriate database to make them available.</p>
<p class=label>
<b>To add a table or view to a query</b>
<ol>
<li>
In the <b>Query Designer</b> toolbar, choose <b>Add Table</b>.<br><br></li>
<li>
In the <a href="cmdadd_table_or_view_dialog_box.htm">Add Table or View dialog box</a>, select the database you want to use, choose <b>Tables</b> or <b>Views</b>, select the table or view you want to add, and choose <b>OK</b>.<p class=tl>
-or-</P><p class=tl>
If you want to add a table that is not part of the database, choose <b>Other</b>, locate the table in the <b>Open</b> dialog box, and choose <b>OK</b>.</P></li>
<li>
In the <a href="cmdjoin_condition_dialog_box.htm">Join Condition dialog box</a>, verify the suggested join.<p class=tl>
If Visual FoxPro cannot suggest a likely match between fields, select the matching fields in the <b>Join Condition</b> dialog box yourself.</P></li>
<li>
Choose <b>OK</b>.</li>
</ol>
<h3>Controlling Record Selection with Joins</h3>
<p>
With multiple tables in your query, you can control which records your query selects by altering or adding joins. Using the Join Condition dialog box, you can change the join type set between the tables.</p>
<p>
Joins appear automatically when you add the tables. However, if the field names of related fields do not match, you might have to create your own joins between tables. You can create additional joins by dragging between the fields of tables in the Query Designer, or by choosing the Add Join button in the Query Designer toolbar to display the <a href="cmdjoin_condition_dialog_box.htm">Join Condition dialog box</a>.</p>
<p class=label>
<b>Join Condition dialog box</b></p>
<p>
<img src="afu06003.gif" border=0></p>
<p>
When you add or alter a join, you can select a type of join to expand or narrow your results. The easiest way to create a join is by using the Join Condition dialog box.</p>
<p class=label>
<b>To create a join between tables</b>
<ol>
<li>
Add two or more tables to a query.<br><br></li>
<li>
In the <b>Query Designer</b> toolbar, choose <b>Add Join</b>.<br><br></li>
<li>
In the <b>Join Condition</b> dialog box, select the related field names in the two tables.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Join columns only if they have the same size and data type.</p></li>
<li>
Select a join type:<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=56%><b>To retrieve…</b></td>
<td class=label width=44%><b>Use…</b></td>
</tr>
<tr valign=top>
<td width=56%>Only records from both tables that match the join criteria, the most common type of join</td>
<td width=44%>Inner Join</td>
</tr>
<tr valign=top>
<td width=56%>All records from the table on the left side of the join criteria and only records that match the join criteria from the table on the right side of the join criteria</td>
<td width=44%>Left Join</td>
</tr>
<tr valign=top>
<td width=56%>All records from the table on the right side of the join criteria and only records that match the join criteria from the table on the left side of the join criteria</td>
<td width=44%>Right Join</td>
</tr>
<tr valign=top>
<td width=56%>All records from both tables whether or not they match the join criteria</td>
<td width=44%>Full Join</td>
</tr>
</table><br>
</li>
<li>
Choose <b>OK</b>.</li>
</ol>
<p>
For more information about joins, see Chapter 8, <a href="dgcreating_views.htm">Creating Views</a>, in the <i>Programmer’s Guide.</i></p>
<p>
You can also delete or modify existing joins. Although you can still run a query without the joins, the results usually have little practical value and may require large amounts of time to process.</p>
<p class=label>
<b>To delete a join</b>
<ul type=disc>
<li>
Select the join line in the <b>Query Designer</b> and choose <b>Remove Join Condition</b> from the <b>Query</b> menu.<p class=tl>
-or-</P><p class=tl>
In the <b>Join</b> tab, select the join condition and choose <b>Remove</b>.</P></li>
</ul>
<p>
Besides filters and join types, you can control your results by changing the criteria used in the join. Joins do not have to be based on an exact match of fields; you can set up different join relationships based on Like, Exactly Like, More Than, or Less Than criteria.</p>
<p>
Join criteria are similar to filter criteria; they both compare values and then include records that match the criteria. Unlike a filter which compares a field value to a filter value, the join criteria compares the field value from one table to the field value of the other table.</p>
<p>
For example, when you query two tables joined on their respective customer ID fields (Customer.cust_id = Orders.cust_id), the query retrieves only the records in which these two fields match, and which also meet any other filter you set in the query.</p>
<p class=label>
<b>To modify a join</b>
<ol>
<li>
In the <b>Join</b> tab, select the join you want to modify.<br><br></li>
<li>
Change the join conditions as needed.</li>
</ol>
<p>
For more information about logical operators used in join criteria, see <a href="tbllogical_operators.htm">Logical Operators</a>.</p>

<h2><a name="ugusing_multiple_tables_in_views"></a>Using Multiple Tables in Views</h2>
<p>
You can also combine two or more local tables in a local view. The process of defining a multi-table view is similar to working with multiple tables in a query. But using views gives you the added capability to update the source tables when working with the output of the view.</p>
<p>
For example, you can join the Customer and Orders tables, from the Visual Studio …\Samples\Vfp98\Data directory, in a view, and set criteria to select a subset of the combined records. As you update the results in a Browse window or in a form, the updates you make can be sent back to update the source tables.</p>
<p class=label>
<b>Combining tables in a view</b></p>
<p>
<img src="afu06004.gif" border=0></p>
<p class=label>
<b>To join tables in a view</b>
<ol>
<li>
Add a table in the <b>View Designer</b>.<br><br></li>
<li>
Choose <b>Add Join</b>, change the join conditions if you wish, and choose <b>OK</b>.</li>
</ol>
<p class=label>
<b>To enable updating of the source tables</b>
<ol>
<li>
In the View Designer, select the <b>Update Criteria</b> tab.<br><br></li>
<li>
Select <b>Send SQL updates</b>.<p class=atl>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>To activate the Send SQL updates option you must first set a key field in one of the tables.</p></li>
</ol>
<p>
For more information about controlling updates to tables, see Chapter 17, <a href="dgprogramming_for_shared_access.htm">Programming for Shared Access</a>, in the <i>Programmer’s Guide</i>.</p>

<h2><a name="ugusing_multiple_remote_tables_in_a_view"></a>Using Multiple Remote Tables in a View</h2>
<p>
When you connect to a remote data source, you can gain access to many related tables. You can select the tables you need and adjust the relationships between them, if necessary, to get the information you need.</p>
<p>
For example, suppose you are connected to a publications database, which contains many interrelated tables. If you are searching for information about titles and authors, you could use three related tables: Authors, Titles, and Titleauthor.</p>
<p class=label>
<b>Multiple tables in a remote view</b></p>
<p>
<img src="afu06005.gif" border=0></p>
<p class=label>
<b>To create a multitable remote view</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>New</b>, select <b>Remote View</b>, and choose <b>New File</b>.<br><br></li>
<li>
In the <a href="cmdselect_connection_or_datasource_dialog_box.htm">Select Connection or Data Source dialog box</a>, select a predefined connection or an available data source.<br><br></li>
<li>
If required, log on to the server.<br><br></li>
<li>
In the <b>Open</b> dialog box, select the tables you want to use.<br><br></li>
<li>
In the <b>Join Condition</b> dialog box, accept the default join, or set up a join as needed.</li>
</ol>
<p>
As with local views, you can use the options in the Update Criteria tab in the View Designer to control how updates are made to the source tables.</p>

<h2><a name="ugcombining_local_and_remote_data_in_a_view"></a>Combining Local and Remote Data in a View</h2>
<p>
If data you need is stored on a remote data source, and is related to information in a local table, you can combine the local and remote data in a view.</p>
<p>
First, you can create a remote view to select only the relevant records you want to work with from the remote server; then, using a local view, you can join the remote view with the related local table.</p>
<p>
For example, suppose you have a large master customer database on a server and a local table that stores country code information. You can create a remote view, connect to the server, and select customer records of interest; then create a local view and add the remote view and the local table to it.</p>
<p>
As you work with the records in the local view to enter new orders, you can choose to update the remote view and the local table. If you close the local view and then close the remote view, the remote view will update the table on the remote customer database.</p>
<p class=label>
<b>Remote view and local table in a local view</b></p>
<p>
<img src="afu06006.gif" border=0></p>
<p class=label>
<b>To combine remote and local data in a view</b>
<ol>
<li>
Create a remote view and add one or more tables from the remote server.<br><br></li>
<li>
Create a new local view and add the remote view you just created to it.<br><br></li>
<li>
Add the related local table to the view and join them on a common field.<br><br></li>
<li>
Set a filter in the local view and run it.<br><br></li>
<li>
Update the view results to update both the local table and the remote view.<br><br></li>
<li>
Close the local view and then the remote view to update the data on the remote server.</li>
</ol>
<p>
For more information about working with views within other views, see “Combining Views” in Chapter 8, <a href="dgcreating_views.htm">Creating Views</a>, in the <i>Programmer’s Guide</i>.</p>
</BODY>
</HTML>
