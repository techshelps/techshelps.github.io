<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RLOCK( ) Function</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngrlocklp_rp"></a><sup></sup>RLOCK(&nbsp;) Function</h1>
<p>
<a href="lngrlocklp_rpx.htm">Example</a> &nbsp; <a href="lngrlocklp_rpsa.htm">See Also</a></p>
<p>
Attempts to lock a table record or records.</p>
<p class=label>
<b>Syntax</b></p>
<p>
RLOCK([<i>nWorkArea</i> | <i>cTableAlias</i>] <br>
| [<i>cRecordNumberList</i>, <i>nWorkArea</i> | <i>cTableAlias</i>])</p>
<p class=label>
<b>Returns</b></p>
<p>
Logical</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>nWorkArea</i> | <i>cTableAlias</i></p>
<p class=indent>
Specifies the work area number or table alias for a table open in another work area. If you don't specify a work area or alias, RLOCK(&nbsp;) attempts to lock the current record in the table in the currently selected work area. </p>
<p class=dt>
<i>cRecordNumberList</i></p>
<p class=indent>
Specifies that RLOCK(&nbsp;) attempts to lock multiple records. The character expression <i>cRecordNumberList</i> specifies one or more record numbers, separated by commas, that RLOCK(&nbsp;) attempts to lock. For example, to attempt record locks on the first four records in a table, <i>cRecordNumberList</i> should contain 1, 2, 3, 4. </p>
<p class=tl>
To lock multiple records, you must have SET MULTILOCKS on and you must include the work area number (<i>nWorkArea</i>) or alias (<i>cTableAlias</i>) of the table in which you attempt to lock multiple records.</P><p class=tl>
You can also lock multiple records by moving the record pointer to the record you would like to lock, issuing RLOCK(&nbsp;) or LOCK(&nbsp;) and then repeating this process for additional records.</P><p class=tl>
In Visual FoxPro, you can specify 0 as a record number. Specifying 0 lets you attempt to lock the table header.</P><p class=atl>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Keep the table header locked for as short a time as possible because other users cannot add records to the table when the table header is locked.</p><p class=tl>
Release the table header lock with UNLOCK RECORD 0, UNLOCK, or UNLOCK ALL.</P><p class=tl>
If all the records specified in <i>cRecordNumberList</i> are successfully locked, RLOCK(&nbsp;) returns true (.T.). If one or more of the records specified in <i>cRecordNumberList</i> cannot be locked, RLOCK(&nbsp;) returns false (.F.) and locks none of the records. In either case, existing record locks remain in place. Multiple record locking is an additive process — placing additional record locks doesn't release existing record locks.</P><p class=tl>
From a performance perspective, it is always faster to lock the entire table than to lock even a small number of records.</P><p class=label>
<b>Remarks</b></p>
<p>
RLOCK(&nbsp;) is identical to LOCK(&nbsp;).</p>
<p>
If the lock or locks are successfully placed, RLOCK(&nbsp;) returns true (.T.). Locked records are available for both read and write access by the user who placed the locks and for read-only access to all other users on the network.</p>
<p>
Executing RLOCK(&nbsp;) doesn't guarantee that the attempted record lock or locks are successfully placed. A record lock cannot be placed on a record already locked by another user or in a table locked by another user. If the record lock or locks cannot be placed for any reason, RLOCK(&nbsp;) returns false (.F.).</p>
<p>
By default, RLOCK(&nbsp;) makes one attempt to lock a record. Use SET REPROCESS to automatically retry a record lock when the first attempt fails. SET REPROCESS controls the number of lock attempts or the length of time lock attempts are made when the initial lock attempt is unsuccessful. For more information about SET REPROCESS and table locking, see <a href="lngset_reprocess.htm">SET REPROCESS</a>.</p>
<p>
SET MULTILOCKS determines whether you can lock multiple records in a table. If SET MULTILOCKS is off (the default), you can lock only a single record in a table. If SET MULTILOCKS is on, you can lock multiple records in a table. For more information, see <a href="lngset_multilocks.htm">SET MULTILOCKS</a>.</p>
<p>
A table record can be unlocked only by the user who placed the lock. Record locks can be released by issuing UNLOCK, closing the table, or exiting Visual FoxPro.</p>
<p>
UNLOCK can be used to release record locks in the current work area, a specific work area or in all work areas. For more information, see <a href="lngunlock.htm">UNLOCK</a>.</p>
<p>
Switching SET MULTILOCKS from ON to OFF or from OFF to ON implicitly performs UNLOCK ALL. All record locks in all work areas are released.</p>
<p>
To close tables, use USE, CLEAR ALL, or CLOSE DATABASES.</p>
<p>
For more information about record and file locking and sharing tables on a network, see Chapter 17, <a href="dgprogramming_for_shared_access.htm">Programming for Shared Access</a>, in the <i>Programmer's Guide</i>.</p>
</BODY>
</HTML>
