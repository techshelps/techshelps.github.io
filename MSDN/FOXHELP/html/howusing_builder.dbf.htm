<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Builder.dbf</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="howusing_builder.dbf"></a><sup></sup>Using Builder.dbf</h1>
<p>
<a href="howusing_builder.dbfsa.htm">See Also</a></p>
<p>
You can use the Builder.dbf table to specify a builder application. Each record contains fields that represent the name of a builder, optionally, a description of the builder, and a field called Type that identifies the Class or Base Class property that invokes the custom builder. For instance, the Type entry for a <b>Command</b> <b>Button</b> is <i>Commandbutton</i> and the Type entry for the Autoformat builder is <i>Multiselect</i> because it runs against multiple selected controls.</p>
<p>
The following table describes a BUILDER table record.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Field Name</b></td>
<td class=label width=34%><b>Field Type</b></td>
<td class=label width=35%><b>Width (comment)</b></td>
</tr>
<tr valign=top>
<td width=31%>NAME</td>
<td width=34%>Character</td>
<td width=35%>45 (Builder name)</td>
</tr>
<tr valign=top>
<td width=31%>DESCRIPT</td>
<td width=34%>Memo</td>
<td width=35%>4</td>
</tr>
<tr valign=top>
<td width=31%>BITMAP (unused)</td>
<td width=34%>Memo</td>
<td width=35%>4</td>
</tr>
<tr valign=top>
<td width=31%>TYPE</td>
<td width=34%>Character</td>
<td width=35%>20</td>
</tr>
<tr valign=top>
<td width=31%>PROGRAM</td>
<td width=34%>Memo</td>
<td width=35%>4 (Builder application)</td>
</tr>
<tr valign=top>
<td width=31%>CLASSLIB</td>
<td width=34%>Memo</td>
<td width=35%>4 (Class Library name)</td>
</tr>
<tr valign=top>
<td width=31%>CLASSNAME</td>
<td width=34%>Memo</td>
<td width=35%>4 (Builder Class)</td>
</tr>
<tr valign=top>
<td width=31%>PARMS</td>
<td width=34%>Memo</td>
<td width=35%>4 (passed parameter list)</td>
</tr>
</table><br>
<p>
The named builder application compares the value in the Type field and the Class of the object and starts if there is a match. If more than one match is found, a selection dialog displays.</p>
<p>
By default, the Builder.app application passes three parameters, listed in the PARMS field of Builder.dbf, to a builder program:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=30%><b>PARMS Entry</b></td>
<td class=label width=70%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=30%>wbReturnValue</td>
<td width=70%>Variable containing a value to be returned to the Builder.app.</td>
</tr>
<tr valign=top>
<td width=30%>&lt;character string&gt;</td>
<td width=70%>A literal string to pass to Register table.</td>
</tr>
<tr valign=top>
<td width=30%>&lt;optional value&gt;</td>
<td width=70%>A keyword or other value to pass to Builder.app</td>
</tr>
</table><br>
<p class=label>
<b>To create a custom builder</b>
<ol>
<li>
Write an application that provides an interface and modifies the selected control or controls.<br><br></li>
<li>
Save the application in the Wizards folder.<br><br></li>
<li>
Open the Builders.dbf table and append a new record.<br><br></li>
<li>
Enter values for the Name, Descript, Type, and Program fields.<p class=tl>
If your custom builder uses additional values, you can also enter values for the remaining fields.</P></li>
</ol>
<p>
After you complete all entries and close the Browse, the new builder is registered. For example, if you create a program that changes the fonts of selected controls, then save the program in a file called Chgfont.prg, the following table shows the entries for Builder.dbf.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=27%><b>Field Name</b></td>
<td class=label width=73%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=27%>NAME</td>
<td width=73%>The Builder That Changes Fonts</td>
</tr>
<tr valign=top>
<td width=27%>DESCRIPT</td>
<td width=73%>This builder modifies the font of all selected controls</td>
</tr>
<tr valign=top>
<td width=27%>TYPE</td>
<td width=73%>MULTISELECT</td>
</tr>
<tr valign=top>
<td width=27%>PROGRAM</td>
<td width=73%>Chgfont.prg</td>
</tr>
</table><br>
<p>
When you use the builder, Visual FoxPro displays the Builder Selection dialog box because there are now two builders of the Multiselect type. When you choose the "The Builder that Changes Fonts" option, Builder.app runs the program you saved as Chgfont.prg.</p>
</BODY>
</HTML>
