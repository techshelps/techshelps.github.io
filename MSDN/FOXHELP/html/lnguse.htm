<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>USE Command</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lnguse"></a><sup></sup>USE Command</h1>
<p>
<a href="lngusex.htm">Example</a> &nbsp; <a href="lngusesa.htm">See Also</a></p>
<p>
Opens a table and its associated index files, or a SQL view.</p>
<p class=label>
<b>Syntax</b></p>
<p>
USE [[<i>DatabaseName</i>!]<i>Table</i> | <i>SQLViewName</i> | ?]<br>
 &nbsp; [IN <i>nWorkArea</i> | <i>cTableAlias</i>]<br>
 &nbsp; [ONLINE]<br>
 &nbsp; [ADMIN]<br>
 &nbsp; [AGAIN]<br>
 &nbsp; [NOREQUERY [<i>nDataSessionNumber</i>]]<br>
 &nbsp; [NODATA]<br>
 &nbsp; [INDEX <i>IndexFileList</i> | ?<br>
 &nbsp; [ORDER [<i>nIndexNumber</i> | <i>IDXFileName</i><br>
 &nbsp; | [TAG] <i>TagName</i> [OF <i>CDXFileName</i>]<br>
 &nbsp;&nbsp;&nbsp;&nbsp; [ASCENDING | DESCENDING]]]]<br>
 &nbsp; [ALIAS <i>cTableAlias</i>]<br>
 &nbsp; [EXCLUSIVE]<br>
 &nbsp; [SHARED]<br>
 &nbsp; [NOUPDATE]</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
[<i>DatabaseName</i>!]<i>TableName</i></p>
<p class=indent>
Specifies the name of the table to open. Because spaces are significant in file names in Microsoft Windows 95 and Windows NT, avoid using extraneous spaces in <i>TableName</i>. If a table name contains spaces, enclose the table name in quotation marks (“ ” or ‘ ’)</p>
<p class=tl>
To open a table not in the current database, qualify the table name with the database name, using an exclamation point (!) to separate the database and tables names. If you don't qualify a table with a database name, Microsoft Visual FoxPro can open tables only in the current database. If the database name or table name or both contains spaces, enclose the database and table name in quotation marks (“ ” or ‘ ’)</P><p class=dt>
<i>SQLViewName</i></p>
<p class=indent>
Specifies the name of a SQL view in the current database to open. A SQL view is created with <a href="lngcreate_sql_view.htm">CREATE SQL VIEW</a>. <i>SQLViewName</i> can also be the name of an offline view created with CREATEOFFLINE(&nbsp;).</p>
<p class=dt>
?</p>
<p class=indent>
Displays the Use dialog, from which you can choose a table to open.</p>
<p class=dt>
IN <i>nWorkArea</i></p>
<p class=indent>
Specifies the work area in which the table is opened. You can close a table in a specific work area by issuing USE with the IN clause and the work area number.</p>
<p class=tl>
The IN clause supports 0 as a work area. Including 0 opens a table in the lowest available work area. For example, if tables are open in work areas 1 through 10, the following command opens the <code>customer</code> table in work area 11:</P><pre><code>USE customer IN 0
</code></pre>
<p class=dt>
IN <i>cTableAlias</i></p>
<p class=indent>
Specifies that the table is opened in the work area of a table that is currently open. The alias of the open table is specified with <i>cTableAlias</i>.</p>
<p class=tl>
If you omit <i>nWorkArea</i> and <i>cTableAlias</i>, the table is opened in the currently selected work area.</P><p class=dt>
ONLINE</p>
<p class=indent>
Opens an offline view created with CREATEOFFLINE(&nbsp;). Specify the name of the offline view in <i>SQLViewName</i>. Use TABLEUPDATE(&nbsp;) to update data on the server.</p>
<p class=tl>
The offline view must be opened exclusively. Include the EXCLUSIVE clause in USE or SET EXCLUSIVE to ON before opening the offline view with USE.</P><p class=dt>
ADMIN</p>
<p class=indent>
Opens an offline view created with CREATEOFFLINE(&nbsp;), but does not update the data on the server with the changes made to the offline view. Opening an offline view with the ADMIN keyword allows you to make changes to the offline view without updating the data on the server.</p>
<p class=dt>
AGAIN</p>
<p class=indent>
To open a table concurrently in multiple work areas, you can do one of the following:
<ul type=disc>
<li>
Select another work area and issue USE with the table name and the AGAIN clause.<br><br></li>
<li>
Issue USE with the table name and the AGAIN clause, and specify a different work area with the IN clause.<p class=tl>
When you open a table again in another work area, the table in the new work area takes on the attributes of the table in the original work area. For example, if a table is opened for read-only or exclusive access and is opened again in another work area, the table is opened for read-only or exclusive access in the new work area.</P><p class=tl>
Index files opened for the original table are available for the table you open again if you don't open indexes when you open the table again. The index order is set to 0 in the work areas where the table is opened again.</P><p class=tl>
You can open indexes that weren't opened with the original table. This sets the index order to 0 for the original table.</P><p class=tl>
A table opened again is assigned the default alias of the work area. You can include an alias every time you open a table in multiple work areas as long as the aliases are unique.</P><p class=tl>
In Visual FoxPro for Windows, opening a table again in another work area doesn't consume an additional file handle.</P></li>
</ul>
<p class=dt>
NOREQUERY [<i>nDataSessionNumber</i>]</p>
<p class=indent>
Specifies that data from a remote SQL view is not downloaded again. NOREQUERY is available only for SQL views and is typically used when you open a SQL view again by including the AGAIN clause. Including the NOREQUERY clause increases performance for large data sets because the data does not need to be downloaded again.</p>
<p class=tl>
<i>nDataSessionNumber</i> can be included to specify that data for a remote SQL view in a specific data session isn't downloaded again. If <i>nDataSessionNumber</i> is omitted, data isn't downloaded for the view open in the current data session.</P><p class=tl>
For additional information about the NOREQUERY clause, see Chapter 8, <a href="dgcreating_views.htm">Creating Views,</a> in the <i>Programmer's Guide</i>.</P><p class=dt>
NODATA</p>
<p class=indent>
Specifies that only the structure of a SQL view is downloaded. The SQL view's data isn't downloaded. NODATA provides the fastest method for determining a SQL view's structure. </p>
<p class=tl>
For additional information about the NODATA clause, see Chapter 8, <a href="dgcreating_views.htm">Creating Views</a>, in the <i>Programmer's Guide</i>.</P><p class=dt>
INDEX <i>IndexFileList</i></p>
<p class=indent>
Specifies a set of indexes to open with the table. If a table has a structural compound index file, the index file is automatically opened with the table.</p>
<p class=tl>
<i>IndexFileList</i> can contain any combination of names of single-entry .idx and compound .cdx index files. You don't have to include the file name extensions for index files unless an .idx and a .cdx index file in the index file list have the same name.</P><p class=tl>
The first index file named in the index file list is the master controlling index file, which controls how records in the table are accessed and displayed. However, if the first index file is a .cdx compound index file, records in the table are displayed and accessed in physical record order.</P><p class=dt>
INDEX ?</p>
<p class=indent>
Displays the Open dialog with a list of available index files to choose from.</p>
<p class=dt>
ORDER [<i>nIndexNumber</i>]</p>
<p class=indent>
Specifies a master controlling single-entry .idx index file or compound .cdx index file tag other than the first index file or index tag specified in <i>IndexFileList</i>.</p>
<p class=tl>
.Idx index files are numbered first, in the order in which they appear in the index file list. Tags in the structural compound index file (if one exists) are then numbered in the order in which the tags were created. Finally, tags in any independent compound index files are numbered in the order in which they were created. You can also use SET ORDER to specify the controlling index file or tag. See <a href="lngset_order.htm">SET ORDER</a> for a further discussion of the numbering of index files and tags.</P><p class=tl>
If <i>nIndexNumber</i> is 0, records in the table are displayed and accessed in physical record order, and the indexes remain open. Including ORDER 0 enables open index files to be updated while presenting the file in record number order. Including ORDER without <i>nIndexNumber</i> is identical to including ORDER 0.</P><p class=dt>
ORDER [<i>IDXFileName</i>]</p>
<p class=indent>
Specifies a single-entry .idx index file as the master controlling index file.</p>
<p class=dt>
ORDER [TAG <i>TagName</i>] [OF <i>CDXFileName</i>]</p>
<p class=indent>
Specifies a master controlling tag in a compound .cdx index file. The tag name can be from the structural compound index file or any open compound index file. If identical tag names exist in open compound index files, include OF <i>CDXFileName</i> and specify the name of the compound index file containing the desired tag.</p>
<p class=dt>
ASCENDING</p>
<p class=indent>
Specifies that the table records are accessed and displayed in ascending order.</p>
<p class=dt>
DESCENDING</p>
<p class=indent>
Specifies that the table records are accessed and displayed in descending order.</p>
<p class=tl>
Including ASCENDING or DESCENDING doesn't change the index file or tag; it alters only the order in which records are displayed and accessed.</P><p class=dt>
ALIAS <i>cTableAlias</i></p>
<p class=indent>
Creates an alias for the table. You can refer to a table by its alias in commands and functions that require or support an alias.</p>
<p class=tl>
When a table is opened, it is automatically assigned an alias, which is the table name if ALIAS isn't included. You can create a different alias for the table by including ALIAS and a new alias. In Visual FoxPro, an alias can contain up to 254 letters, digits or underscores and must begin with a letter or an underscore. In other FoxPro versions, an alias can contain up to 10 letters, digits or underscores and must begin with a letter or an underscore.</P><p class=tl>
A default alias is assigned automatically if you use AGAIN to open a single table simultaneously in multiple work areas and you don't specify an alias when you open the table in each work area.</P><p class=tl>
A default alias is also assigned if a conflict occurs. For example:</P><pre><code>CLOSE DATABASES
OPEN DATABASE (HOME(2) + 'Data\testdata')
ACTIVATE WINDOW View&nbsp; &amp;&amp; Open the Data Session Window
USE customer ALIAS orders IN 1&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; Alias is ORDERS
USE orders IN 3&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; Conflict; alias is C
</code></pre>
<p class=dt>
EXCLUSIVE</p>
<p class=indent>
Opens a table for exclusive use on a network. For more information on the exclusive use of tables, see <a href="lngset_exclusive.htm">SET EXCLUSIVE</a>.</p>
<p class=dt>
SHARED</p>
<p class=indent>
Opens a table for shared use on a network. SHARED allows you to open a table for shared use even when EXCLUSIVE is set ON.</p>
<p class=dt>
NOUPDATE</p>
<p class=indent>
Prevents changes to the table and its structure.</p>
<p class=label>
<b>Remarks</b></p>
<p>
If USE is issued without a table name and a table file is open in the currently selected work area, the table is closed. Also, a table is closed when another table is opened in the same work area. You can't have more than one table open in a work area at one time.</p>
</BODY>
</HTML>
