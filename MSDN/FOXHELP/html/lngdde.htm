<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DDE Functions</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngdde"></a><sup></sup>DDE Functions</h1>
<p>
<a href="lngddesa.htm">See Also</a></p>
<p>
Exchange data between Visual FoxPro and other Microsoft Windows-based applications.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Visual FoxPro can act as both a server and a client to send and receive data to and from other Microsoft Windows-based applications.</p>
<p>
The following naming conventions are used in applications that support DDE (dynamic data exchange).</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=34%><b>Name</b></td>
<td class=label width=66%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=34%>Service Name</td>
<td width=66%>A name that the server responds to when a client tries to access the server. A server can support many service names.</td>
</tr>
<tr valign=top>
<td width=34%>Topic Name</td>
<td width=66%>A name that specifies a logical set of data. For file-based applications, topic names are usually file names. In other applications, topic names are application-specific. To access the server, the client must specify a topic name in addition to the server's service name.</td>
</tr>
<tr valign=top>
<td width=34%>Item Name</td>
<td width=66%>A name that specifies a unit of data that the server can pass to the client requesting the data.</td>
</tr>
</table><br>
<p>
To request data from another application, create a Visual FoxPro program that establishes Visual FoxPro as a client. Here is a brief outline for creating a simple Visual FoxPro program that requests data from another application:
<ul type=disc>
<li>
Establish a link to the server application with DDEInitiate(&nbsp;).<br><br></li>
<li>
If the link is successfully established, use DDERequest(&nbsp;) to request data from the server application. DDERequest(&nbsp;) can be issued repeatedly to request additional data.<br><br></li>
<li>
After the data has been received, issue DDETerminate(&nbsp;) to terminate the link to the server application to free up system resources.</li>
</ul>
<p>
The functions above establish a cold link. A cold link exists when the client initiates all the communications between the applications. For a discussion of other types of links, see <a href="lngddeadviselp_rp.htm">DDEAdvise(&nbsp;)</a>.</p>
<p>
The following is a brief outline for a program that establishes Visual FoxPro as a server:
<ul type=disc>
<li>
Use DDESetService(&nbsp;) to create a service and specify the type of service.<br><br></li>
<li>
Use DDESetTopic(&nbsp;) to create a service topic and specify the procedure to execute when the topic is specified in a client request.<br><br></li>
<li>
Create the procedure specified in DDESetTopic(&nbsp;) to accept the parameters passed to the procedure.<br><br></li>
<li>
Within the procedure, process the request and, if appropriate, return the requested data to the client.</li>
</ul>
<p>
Note that these DDE functions differ from previous Visual FoxPro function conventions in the following ways:
<ul type=disc>
<li>
The first four characters of these functions are not unique.<br><br></li>
<li>
The function names exceed 10 characters and cannot be abbreviated.</li>
</ul>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=27%><b>DDE Function</b></td>
<td class=label width=73%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddeaborttranslp_rp.htm">DDEAbortTrans(&nbsp;)</a></td>
<td width=73%>Ends an asynchronous DDE transaction.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddeadviselp_rp.htm">DDEAdvise(&nbsp;)</a></td>
<td width=73%>Creates a notify link or an automatic link used in DDE.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddeenabledlp_rp.htm">DDEEnabled(&nbsp;)</a></td>
<td width=73%>Enables or disables DDE processing or returns the status of DDE processing.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddeexecutelp_rp.htm">DDEExecute(&nbsp;)</a></td>
<td width=73%>Using DDE, sends a command to another application.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddeinitiatelp_rp.htm">DDEInitiate(&nbsp;)</a></td>
<td width=73%>Establishes a DDE channel between Visual FoxPro and another Microsoft Windows-based application.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddelasterrorlp_rp.htm">DDELastError(&nbsp;)</a></td>
<td width=73%>Returns an error number for the last DDE function.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddepokelp_rp.htm">DDEPoke(&nbsp;)</a></td>
<td width=73%>Sends data between client and server applications in a DDE conversation.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngdderequestlp_rp.htm">DDERequest(&nbsp;)</a></td>
<td width=73%>Requests data from a server application in a dynamic DDE conversation.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddesetoptionlp_rp.htm">DDESetOption(&nbsp;)</a></td>
<td width=73%>Changes or returns DDE settings.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddesetservicelp_rp.htm">DDESetService(&nbsp;)</a></td>
<td width=73%>Creates, releases, or modifies service names and settings in Visual FoxPro.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddesettopiclp_rp.htm">DDESetTopic(&nbsp;)</a></td>
<td width=73%>In a DDE conversation, creates or releases a topic name from a service name.</td>
</tr>
<tr valign=top>
<td width=27%><a href="lngddeterminatelp_rp.htm">DDETerminate(&nbsp;)</a></td>
<td width=73%>Closes a DDE channel established with DDEInitiate(&nbsp;).</td>
</tr>
</table><br>
</BODY>
</HTML>
