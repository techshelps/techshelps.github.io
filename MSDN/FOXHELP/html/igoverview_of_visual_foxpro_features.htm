<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview of Visual FoxPro Features</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="igoverview_of_visual_foxpro_features"></a><sup></sup>Chapter 2: Overview of Visual FoxPro Features</h1>
<p>
Visual FoxPro gives you more of everything you've come to expect in a database management system (DBMS) — speed, power, and flexibility. And Visual FoxPro leads you into the next generation by providing object and event models that help you create and modify applications faster than ever before.</p>
<p>
This section is meant to walk you through some of the major features in Visual FoxPro. For information on the newest enhancements in Visual FoxPro 6.0, see <a href="newwhats_new_in_visual_foxpro.htm">What's New in Visual FoxPro</a>. </p>
<p>
This chapter discusses:
<ul type=disc>
<li>
<a href="#igsummary_of_new_features">Summary of Features</a><br><br></li>
<li>
<a href="#igcreating_applications_rapidly">Creating Applications Rapidly</a><br><br></li>
<li>
<a href="#igtaking_advantage_of_more_power">Taking Advantage of More Power</a><br><br></li>
<li>
<a href="#igworking_with_multiple_developers">Working with Several Developers</a><br><br></li>
<li>
<a href="#iginteracting_with_other_applications">Interacting with Other Applications</a><br><br></li>
<li>
<a href="#igdeveloping_client_server_solutions">Developing Client/Server Solutions</a><br><br></li>
<li>
<a href="#igupgrading_from_earlier_versions">Upgrading from Earlier Versions</a></li>
</ul>

<h2><a name="igsummary_of_new_features"></a>Summary of Features</h2>
<p>
Visual FoxPro brings you expanded capabilities to help you in every area of application and database development. You can see improvements in performance, system resource use, and design environment. For information about changes to the language, see <a href="dgprogramming_improvements.htm#newnew_and_enhanced_language_elements">New and Enhanced Language Elements</a>.</p>
<h4>Enhanced Project and Database Management</h4>
<p>
In this version, you have greater control over your projects and databases. You can use source code control products, such as Microsoft Visual SourceSafe™, and see the status of components in the <a href="wndproject_manager.htm">Project Manager</a>. You can also manage project events through the <a href="ctlprojecthook_object.htm">ProjectHook class</a> provided when you issue CREATE CLASS, CREATEOBJECT(&nbsp;) or NEWOBJECT(&nbsp;) commands, or use the Application Builder. The database container allows several users to simultaneously create and modify objects within the same database. An on-demand refresh feature lets you update your view of a database or project. Find and Arrange features in the <a href="wnddatabase_designer.htm">Database Designer</a> allow you to quickly change your view of the objects in your database. Also, keyboard accessibility is available in the <a href="wndproject_manager.htm">Project Manager</a> and icons in the Project Manager, and Database Designer help you to identify objects quickly.</p>
<p>
The engine now supports changes to values that violate rules. Pessimistic buffering handles record locking more efficiently. NULL is a recognized keyword and can be used in place of “.NULL.”</p>
<h4>Easier Application Development</h4>
<p>
Visual FoxPro adds a new <a href="wizapplication_wizard_6.htm">Application Wizard</a> that provides the new <a href="ctlprojecthook_object.htm">ProjectHook class</a> and <a href="dgapplication_development_and_developer_productivity.htm#newenhanced_application_framework">Enhanced Application Framework</a> features to make your applications more effective, but we also added features to enhance the development experience and to make it easier to add effective functionality to your applications.
<ul type=disc>
<li>
The <a href="ffcvisual_foxpro_foundation_classes.htm">Visual FoxPro Foundation Classes</a> make it easier to add nearly 100 features to your application.<br><br></li>
<li>
The <a href="dgapplication_development_and_developer_productivity.htm#newcomponent_gallery_overview">Component Gallery</a> makes it easy to manage Visual FoxPro classes and documents, and other documents or files you might want add to your project or application. <br><br></li>
<li>
The new <a href="cmdapplication_builder.htm">Application Builder</a> enables you to add a database, and to create, add, or modify tables, reports, and forms and compile and run an application right away.</li>
</ul>
<h4>Improved Debugging Tools</h4>
<p>
You can debug and monitor your application components more easily in this version of Visual FoxPro. You have the option of opening the debugging tools inside the main Visual FoxPro window where they can be displayed along with your application interface, or in a separate window so they don't interfere with your application work space. The debugger offers tools for setting breakpoints, tracking events, and logging execution code, and is similar in appearance to the Visual C debugging environment. In the <a href="wndwatch_window.htm">Watch</a> window and the <a href="wndlocals_window.htm">Locals</a> window, you can drill down to see the property settings or objects and the values of array elements. To see the current value of a variable, you just place your cursor over the variable name in the <a href="wndtrace_window.htm">Trace</a> window. The <a href="wnddebug_output_window.htm">Output</a> window gives you a convenient way to display interactive or coded information requests and direct the results to a window apart from the application window.</p>
<p>
This version of Visual FoxPro also includes an enhanced <a href="dgapplication_development_and_developer_productivity.htm#newcoverage_profiler_application">Coverage Profiler Application</a> that you can use to analyze programs, applications, or projects for code that is actually run. The Coverage Profiler engine itself is customizable as is the interface provided in Visual FoxPro.</p>
<h4>Easier Table Design and Expanded Data Dictionary</h4>
<p>
In this version of the <a href="wndtable_designer.htm">Table Designer,</a> you can easily add indexes as you create fields and specify a greater variety of defaults that make designing forms faster and easier. You can define a regular index on the same tab and row where you specify a field. A Table tab gives you direct access to the table-level validation rules, triggers and statistics. The default class and library properties allow you to assign a control type to a field: when you add the field to a form, you create the exact control you want in one easy step. In addition, InputMask and Format properties help you control how your data is displayed.</p>
<p>
A <a href="wndconnection_designer.htm">Connection Designer</a> works seamlessly with the ODBC Administrator to make connection creation easier. The designer also provides additional properties for optimizing connections.</p>
<h4>Enhanced Query and View Design</h4>
<p>
You can now create outer joins, specify aliases for columns, or select the top number or percentage of records, right in the <a href="wndquery_designer.htm">Query</a> and <a href="wndquery_designer.htm">View Designers.</a> Also, using the View Designer, you can specify the same extended properties on view fields that you can on table fields. For example, you can specify a default control class, input mask, or format.</p>
<h4>Increased Form Functionality and Easier Design</h4>
<p>
Along with enhancements to the data dictionary that help with form design, the <a href="wndform_designer.htm">Form Designer</a> itself is easier to use and offers more functionality. The Form Designer supports <a href="glssdi.htm">Single Document Interface (SDI)</a> as well as <a href="glsmdi.htm">Multiple Document Interface (MDI)</a> options so your application can function exactly the way you want. Using SDI, you can create application windows that are children of the Windows desktop. A <a href="wndmenu_designer.htm">Shortcut Menu Designer</a> helps you create shortcut menus you can use in a control's RightClick event. Forms and controls have additional properties and methods to help you control the look and feel of each part of your form. For a list of properties and methods, see Help.</p>
<p>
You can select a group of controls and see common properties, or change them, in the <a href="wndproperties_window.htm">Properties</a> window. If you need more space to view or alter property settings, you can use the Property Zoom feature. Horizontal and vertical centering, and other placement, is easy too, with the alignment tools. Keyboard navigation, a common request for many developers, is available in the Properties window, and lets you move from object to object using the CTRL key in conjunction with the PAGE UP, PAGE DOWN, HOME, or END keys. If you need to change something in a running form, the Design button on the toolbar gives you quick access to design mode again.</p>
<p>
The editor makes coding easier with options to format programs, color coding, and enhanced Find and Replace features. Shortcut menus and keyboard accessibility are available throughout the product: use the right mouse button to explore the actions possible for any given element.</p>
<h4>More and Better Wizards</h4>
<p>
Two wizards help you to create applications:
<ul type=disc>
<li>
The <a href="wizapplication_wizard_6.htm">Application Wizard</a> creates an <a href="dgapplication_development_and_developer_productivity.htm#newenhanced_application_framework">Enhanced Application Framework</a> for your project, and opens Application Builder<b>.</b> <br><br></li>
<li>
The <a href="wizoracle_upsizing_wizard.htm">Oracle Upsizing Wizard</a> helps you move your databases, tables, and views to an Oracle server.</li>
</ul>
<p>
Updates to other wizards and samples give you added capabilities, such as accessing index tags for sorting. The <a href="wizform_wizard.htm">Form Wizard</a> allows you to add a page frame to display more fields on additional pages. The <a href="wizpivottable_wizard.htm">PivotTable Wizard</a> can use <a href="glsopen_database_connectivity_odbc_.htm">Open Database Connectivity (ODBC)</a> to populate a pivot table. The <a href="wizsql_server_upsizing_wizard.htm">SQL Server Upsizing Wizard</a> supports declarative referential integrity. The <a href="wizcrosstab_wizard.htm">Cross-Tab Wizard</a> now supports displaying null values. In addition, a wizard provided as a utility lets you create Web pages for querying and displaying your database records.</p>
<h4>Tighter OLE and ActiveX Integration</h4>
<p>
Visual FoxPro is an Automation server, so other applications can tap into the power of Visual FoxPro. ISimpleFrame capabilities extend support for a wider variety of ActiveX controls. Visual FoxPro also provides the capability to create your own Automation servers that you can deploy locally or remotely.</p>
<h4>Practical Samples of Application Components</h4>
<p>
Solutions sample, located in the Visual Studio …\Samples\Vfp98\Solution directory, is a collection of application components that show how you can use the features of Visual FoxPro to solve real-world challenges. You can use the sample components and their code directly in your applications. For more information about Visual FoxPro samples, see <A HREF="vfpsamppage.htm">Explore the samples</A>.</p>

<h2><a name="igcreating_applications_rapidly"></a>Creating Applications Rapidly</h2>
<p>
You can develop applications rapidly with help from Visual FoxPro wizards, builders, toolbars, and designers. And, with the Visual FoxPro object and event model, you can create prototypes and implement applications quickly.</p>
<h3>Getting Quick Results with Wizards and Builders</h3>
<p>
Using wizards and builders, you can have all or any component of your application completed in a matter of minutes. Plus, if any component you create with a wizard or builder does not fully meet your needs, you can alter the component using a designer.</p>
<h4>Creating an Application Now</h4>
<p>
For quick results, wizards are the answer. They provide step-by-step prompts for common tasks you perform in Visual FoxPro. For example, the <a href="wiztable_wizard.htm">Table Wizard</a> guides you through the process of creating a table, the <a href="wizform_wizard.htm">Form Wizard</a> creates a form, and the <a href="wizwww_search_page_wizard.htm">World Wide Web Search Page</a> utility helps you create a Web page that searches your tables.</p>
<p>
Take a look at what you can do:
<ul type=disc>
<li>
<B><b>Develop Instant Applications</b></B> Using the <a href="wizapplication_wizard_6.htm">Application Wizard</a>, you can quickly create an application by using your tables and forms, or by using a sample set of application components.<br><br></li>
<li>
<B><b>Create an Internet Web Page</b></B> You can create a Web page that provides Web surfers with search and retrieval access to your tables.<br><br></li>
<li>
<B><b>Add Page Frames to Forms</b></B> If you choose more fields than can fit on the form, you can add a page frame to display the additional fields on additional pages.<br><br></li>
<li>
<B><b>Populate Pivot Tables Through ODBC</b></B> The <a href="wizpivottable_wizard.htm">PivotTable Wizard</a> uses the Visual FoxPro ODBC driver.<br><br></li>
<li>
<B><b>Show Nulls in a Cross-Tab Report</b></B> The <a href="wizcrosstab_wizard.htm">Cross-Tab Wizard</a> now supports displaying null values.<br><br></li>
<li>
<B><b>Move Your Data to a Back-End Server</b></B> You can move Visual FoxPro databases, tables, and views from your system to a back-end server with the <a href="wizsql_server_upsizing_wizard.htm">SQL Server Upsizing Wizard</a> or the <a href="wizoracle_upsizing_wizard.htm">Oracle Upsizing Wizard.</a></li>
</ul>
<p>
If you are in a hurry, use the table in <a href="wizwizards_overview.htm">Wizards Overview</a> to select a wizard, and begin creating your application or component.</p>
<p>
If you do not want to experiment with your own data and application components, use the samples provided with Visual FoxPro. You can work in the sample database Testdata.dbc, located in the Visual Studio …\Samples\Vfp98\Data directory.</p>
<p class=label>
<b>The Table Wizard helps you create tables faster.</b></p>
<p>
<img src="afi02012.gif" border=0></p>
<p>
For details about wizards that are new or enhanced in this version, see <a href="dgapplication_development_and_developer_productivity.htm#newnew_and_enhanced_wizards">New and Enhanced Wizards</a>.</p>
<h3>Taking Shortcuts with Toolbars</h3>
<p>
Like other Microsoft applications, Visual FoxPro includes toolbars containing buttons that represent common tasks you perform or objects you use frequently. To perform a specific task or use a particular object, choose the appropriate button.</p>
<p class=label>
<b>The Standard toolbar collects common functionality in one place.</b></p>
<p>
<img src="afi02013.gif" border=0></p>
<p>
You can customize the toolbars that come with Visual FoxPro. You can also define custom toolbars for the applications you write. For more information about toolbars, see Chapter 3, <a href="igconfiguring_visual_foxpro.htm">Configuring Visual FoxPro</a>, or see Chapter 11, <a href="dgdesigning_menus_and_toolbars.htm">Designing Menus and Toolbars</a>, in the <i>Programmer’s Guide</i>.</p>
<h3>Building Controls Quickly</h3>
<p>
Just as wizards can help to create reports and forms, builders are visual tools that help you design controls to your specifications. Builders can save you time when you are setting up many forms or prototyping applications. All you do is start the builder and answer a series of questions. Using your answers, the builder sets properties for the control you are adding.</p>
<p class=label>
<b>Builders make it easy to add controls to forms.</b></p>
<p>
<img src="afi02011.gif" border=0></p>
<p>
<B><b>Add a Combo Box to Your Form</b></B> Suppose you want to enhance a simple form you created by adding the ability to select field values from a list, rather than moving through all the records with VCR buttons and viewing the values in a text box. Just replace the current text box with a combo box and use a builder to set the properties.</p>
<p>
<B><b>Modify Existing Controls with a Builder</b></B> If you want to change an existing control, you can select the control and use a builder to help you set the control's properties.</p>
<p>
For example, the Combo Box Builder is a tabbed dialog box that helps you design a combo box on a form. A combo box gives you the same view of a value as a text box control, but allows you to choose from a list like a list box control. With this builder, you can set properties of a combo box. As you set each property, the control on the form changes to match the settings.</p>
<p class=label>
<b>The Builder Lock button and Combo Box button</b></p>
<p>
<img src="afi02009.gif" border=0></p>
<p class=label>
<b>The tabs in the Combo Box Builder dialog box</b></p>
<p>
<img src="afi02010.gif" border=0></p>
<p>
<B><b>Build a Grid Control</b></B> To display a small spreadsheet-like view of your data, you can use a grid control. Even if you aren't familiar with all the properties of a grid control, you can still take advantage of their functionality using a builder. The builder helps you choose the fields for your grid, select a style and layout, and establish relationships between tables bound to the grid control. As you make changes in the builder, they are reflected in the <a href="wndform_designer.htm">Form Designer.</a></p>
<p>
Visual FoxPro offers a wide selection of builders.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=48%><b>To</b></td>
<td class=label width=52%><b>Use this builder</b></td>
</tr>
<tr valign=top>
<td width=48%>Format a group of controls</td>
<td width=52%><a href="cmdautoformat_builder.htm">AutoFormat Builder</a></td>
</tr>
<tr valign=top>
<td width=48%>Build a combo box</td>
<td width=52%><a href="cmdcombo_box_builder.htm">Combo Box Builder</a></td>
</tr>
<tr valign=top>
<td width=48%>Build a command group</td>
<td width=52%><a href="cmdcommand_group_builder.htm">Command Group Builder</a></td>
</tr>
<tr valign=top>
<td width=48%>Build an edit box</td>
<td width=52%><a href="cmdedit_box_builder.htm">Edit Box Builder</a></td>
</tr>
<tr valign=top>
<td width=48%>Create and edit expressions</td>
<td width=52%><a href="wndexpression_builder_dialog_box.htm">Expression Builder</a></td>
</tr>
<tr valign=top>
<td width=48%>Build a form</td>
<td width=52%><a href="cmdform_builder.htm">Form Builder</a></td>
</tr>
<tr valign=top>
<td width=48%>Build a grid</td>
<td width=52%><a href="cmdgrid_builder.htm">Grid Builder</a></td>
</tr>
<tr valign=top>
<td width=48%>Build a list box</td>
<td width=52%><a href="cmdlist_box_builder.htm">List Box Builder</a></td>
</tr>
<tr valign=top>
<td width=48%>Build an option group</td>
<td width=52%><a href="cmdoption_group_builder.htm">Option Group Builder</a></td>
</tr>
<tr valign=top>
<td width=48%>Ensure referential integrity</td>
<td width=52%><a href="cmdreferential_integrity_builder.htm">Referential Integrity Builder</a></td>
</tr>
<tr valign=top>
<td width=48%>Build a text box</td>
<td width=52%><a href="cmdtext_box_builder.htm">Text Box Builder</a></td>
</tr>
</table><br>
<p>
For more information, see Chapter 1, <a href="uggetting_started.htm">Getting Started,</a> in the <i>User's Guide</i>.</p>
<h2>Managing Your Work with the Project Manager</h2>
<p>
With the <a href="wndproject_manager.htm">Project Manager</a>, you can create and manage everything in an application from a central interface. For example, you can create or update tables and databases, design or change forms and reports, define or change class libraries, and compile or rebuild your applications. In addition, you can access all the wizards, builders, toolbars, and other tools that make Visual FoxPro so easy to use. If you add a source code control product, you can also see if the components are checked out, locked, or shared.</p>
<p class=label>
<b>The Project Manager provides a central location for managing your work.</b></p>
<p>
<img src="afi02014.gif" border=0></p>
<p>
<B><b>Organize Your Application Components</b></B> The Project Manager helps you organize your data, whether you are running a query or designing a complete application. With a few clicks of the mouse, you can keep track of your tables and queries, and organize related forms, reports, labels, code, bitmaps, and other files.</p>
<p>
To see the Project Manager in action with a sample database, start Visual FoxPro, create a project, and add a database to it. To do this, select Databases, choose Add, and locate Testdata.dbc in the Visual Studio …\Samples\Vfp98\Data directory.</p>
<p class=label>
<b>Use the Project Manager to organize your files.</b></p>
<p>
<img src="afi02015.gif" border=0></p>
<p>
<B><b>Use a Familiar Interface</b></B> The Project Manager interface is similar to the Microsoft Windows Explorer interface. Lines connecting the icons show the hierarchy between items in the project. You can expand and collapse the outline view of your project to see the level of detail you need — from databases down to individual fields in a table. You can also assign custom icons to container classes, and access source code control features. Using the keyboard, you can navigate through the Project Manager.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=48%><b>To</b></td>
<td class=label width=52%><b>Do this</b></td>
</tr>
<tr valign=top>
<td width=48%>Look at different categories of files and objects in your project</td>
<td width=52%>Choose a tab.</td>
</tr>
<tr valign=top>
<td width=48%>Expand the outline view</td>
<td width=52%>Click a plus sign.</td>
</tr>
<tr valign=top>
<td width=48%>Collapse the outline</td>
<td width=52%>Click a minus sign.</td>
</tr>
<tr valign=top>
<td width=48%>Add files to the project</td>
<td width=52%>Choose <b>Add</b>.</td>
</tr>
<tr valign=top>
<td width=48%>Access build options</td>
<td width=52%>Choose <b>Build</b>.</td>
</tr>
</table><br>
<p>
<B><b>Modify or Browse Tables</b></B> You can set the Project Manager so that double-clicking a file displays the table in the Table Designer, where you can modify the table's structure, or in a Browse window. Choose Options from the Tools menu, and then set the Project double-click action option in the Projects tab.</p>
<p>
<B><b>Set File Descriptions</b></B> You can track your files more easily by setting the file descriptions that appear in the Project Manager. Select the file, click the right mouse button, and then choose Edit Description.</p>
<p>
<B><b>Dock or Use Tear-Off Tabs</b></B> To make more space available on your screen, you can collapse the Project Manager, dock it like a toolbar, and tear off the tabs you need to work with.</p>
<p class=label>
<b>The Project Manager allows you to customize your workspace.</b></p>
<p>
<img src="afi02016.gif" border=0></p>
<p>
<B><b>Work as a Team</b></B> To control changes to application objects, your team can use a source code control product, such as Microsoft Visual Source Safe. Source code control is managed through the Project Manager. After you enable the source control application in the Options dialog box, you can add your files to the source control project using the source code options on the Project menu. As you add and modify files, the Project Manager tabs display icons next to the files to indicate each file's status.</p>
<p>
Try organizing your own tables, databases, queries, and reports in the Project Manager, or use the Project Manager to track the components of an application.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=43%><b>For more information about</b></td>
<td class=label width=57%><b>See</b></td>
</tr>
<tr valign=top>
<td width=43%>The Project Manager</td>
<td width=57%>Chapter 1, <a href="uggetting_started.htm">Getting Started,</a> in the <i>User's Guide.</i></td>
</tr>
<tr valign=top>
<td width=43%>Developing applications with the Project Manager</td>
<td width=57%>Chapter 2, <a href="dgdeveloping_an_application.htm">Developing an Application,</a> in the <i>Programmer’s Guide.</i></td>
</tr>
<tr valign=top>
<td width=43%>Team development</td>
<td width=57%>Chapter 29, <a href="dgdeveloping_in_teams.htm">Developing in Teams,</a> in the <i>Programmer’s Guide.</i></td>
</tr>
</table><br>
<h2>Customizing Your Application Easily with Designers</h2>
<p>
If you want more control than you get with wizards and builders, use the Visual FoxPro designers. Designers provide a graphical interface through which you can create and customize the components of your application. For example, you can define a form with the Form Designer or design a table with the Table Designer.</p>
<p class=label>
<b>The Table Designer gives you complete control over creating tables.</b></p>
<p>
<img src="afi02017.gif" border=0></p>
<p>
You can start a component using a wizard, and then modify the component using a designer.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=64%><b>To</b></td>
<td class=label width=36%><b>Use this designer</b></td>
</tr>
<tr valign=top>
<td width=64%>Create tables and set indexes on tables</td>
<td width=36%><a href="wndtable_designer.htm">Table Designer</a></td>
</tr>
<tr valign=top>
<td width=64%>Run queries on local tables</td>
<td width=36%><a href="wndquery_designer.htm">Query Designer</a></td>
</tr>
<tr valign=top>
<td width=64%>Run queries on remote data sources; create updatable queries</td>
<td width=36%><a href="wndquery_designer.htm">View Designer</a></td>
</tr>
<tr valign=top>
<td width=64%>Create a form for viewing and editing data in you tables</td>
<td width=36%><a href="wndform_designer.htm">Form Designer</a></td>
</tr>
<tr valign=top>
<td width=64%>Create a report for displaying and printing your data</td>
<td width=36%><a href="wndreport_designer.htm">Report Designer</a></td>
</tr>
<tr valign=top>
<td width=64%>Create a label layout for printing labels</td>
<td width=36%><a href="wndlabel_designer.htm">Label Designer</a></td>
</tr>
<tr valign=top>
<td width=64%>Set up a database; view and create relationships between tables</td>
<td width=36%><a href="wnddatabase_designer.htm">Database Designer</a></td>
</tr>
<tr valign=top>
<td width=64%>Create a connection for remote views</td>
<td width=36%><a href="wndconnection_designer.htm">Connection Designer</a></td>
</tr>
<tr valign=top>
<td width=64%>Create a menu bar or shortcut menu</td>
<td width=36%><a href="wndmenu_designer.htm">Menu Designer</a></td>
</tr>
</table><br>
<p>
For more information, see Chapter 1, <a href="uggetting_started.htm">Getting Started,</a> in the <i>User's Guide</i>.</p>
<h3>Designing a Database</h3>
<p>
Now with Visual FoxPro, it’s easy to create a relational database. You can quickly define a set of tables and link them with relationships that persist whenever you use the tables.</p>
<p>
Take a look at the sample database. To open the database in the Database Designer, choose Open from the File menu, and locate Testdata.dbc in the Visual Studio …\Samples\Vfp98\Data directory.</p>
<p class=label>
<b>The Database Designer shows the relationships between tables.</b></p>
<p>
<img src="afi02018.gif" border=0></p>
<h4>Getting the Most Out of a Database</h4>
<p>
Using the Visual FoxPro database features, you can:</p>
<p>
<B><b>Create and Edit Relationships</b></B> Relationships are easy to define and edit in the <a href="wnddatabase_designer.htm">Database Designer.</a></p>
<p class=label>
<b>Double-click a relationship line to edit the relationship between two tables.</b></p>
<p>
<img src="afi02019.gif" border=0></p>
<p>
<B><b>Enforce Data Integrity</b></B> Tables in a database have additional properties that let you validate data and use rules and triggers to control data entry.</p>
<p>
<B><b>Make Data Entry More Efficient</b></B> Set table properties to control default values, identify default control type, and specify descriptive captions for your fields.</p>
<p>
<B><b>Pass Parameters to Remote Stored Procedures</b></B> If you are comfortable using code to do your work, you can now pass parameters by reference to a stored procedure on a back-end server, as well as obtain return values from the stored procedure. Input/output parameters are available only when using SQL pass-through; they cannot be used in views. If you use input/output parameters in views, they will be treated as input parameters.</p>
<h4>Working with Database Objects</h4>
<p>
The Database Designer provides a graphical interface for manipulating your database objects such as tables, local views, and remote views.</p>
<p>
<B><b>Identify Tables and Views Easily</b></B> In the database layout, you can quickly identify local views and remote views by the icons displayed in the title window for each object.</p>
<p>
<B><b>Locate Database Objects Quickly</b></B> If your layout is crowded, you can still locate database objects quickly using the Find Object option on the Database menu.</p>
<p>
<B><b>Make Connections from the Toolbar</b></B> You can now create connections to ODBC data sources from the Database Designer toolbar.</p>
<p>
<B><b>Customize Your Database Layout</b></B> You can show or hide database objects using the Properties option. You can also arrange objects by name and type, or align objects horizontally and vertically using the Arrange option. If your tables are different sizes and widths, you can clean up the layout by resizing objects to the default height and width using the Arrange option.</p>
<p>
Explore the common tasks for creating and maintaining a database.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=45%><b>To</b></td>
<td class=label width=55%><b>Do this</b></td>
</tr>
<tr valign=top>
<td width=45%>Add a table to a database</td>
<td width=55%>Drag the table from the <b>Project Manager</b> or choose the <b>Add Table</b> button.</td>
</tr>
<tr valign=top>
<td width=45%>Remove a table from a database</td>
<td width=55%>Select a table and choose <b>Remove Table</b>.</td>
</tr>
<tr valign=top>
<td width=45%>Create a persistent relationship</td>
<td width=55%>Drag from the primary or candidate index in a table to the index of another table.</td>
</tr>
<tr valign=top>
<td width=45%>Set properties for a database table</td>
<td width=55%>Select a table and choose <b>Modify</b> from the <b>Database</b> menu to display the Table Designer.</td>
</tr>
<tr valign=top>
<td width=45%>Collapse the view to see more tables</td>
<td width=55%>Select <b>Database Designer</b> and choose <b>Collapse All</b> from the shortcut menu.</td>
</tr>
<tr valign=top>
<td width=45%>Rearrange the tables</td>
<td width=55%>Drag tables by their names.<br>
Use <b>Arrange</b> on the <b>Database</b> menu.</td>
</tr>
<tr valign=top>
<td width=45%>Build referential integrity</td>
<td width=55%>Use the <b>Referential Integrity Builder</b>.</td>
</tr>
</table><br>
<p>
<B><b>Build Referential Integrity</b></B> The Referential Integrity Builder handles setting up referential integrity code to cascade changes into a child table, thereby preventing “orphan” records. To try it, just double-click the join line between two tables in a database and choose the Referential Integrity option in the Edit Relationship dialog box.</p>
<p class=label>
<b>The Referential Integrity Builder helps you control data consistency.</b></p>
<p>
<img src="afi02020.gif" border=0></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=42%><b>For more information about</b></td>
<td class=label width=58%><b>See</b></td>
</tr>
<tr valign=top>
<td width=42%>Creating and joining tables or setting indexes for tables</td>
<td width=58%>Chapter 2, <a href="ugcreating_tables_and_indexes.htm">Creating Tables and Indexes,</a> in the <i>User's Guide</i></td>
</tr>
<tr valign=top>
<td width=42%>Setting up databases</td>
<td width=58%>Chapter 3, <a href="ugcollecting_tables_into_a_database.htm">Collecting Tables into a Database,</a> in the <i>User's Guide</i></td>
</tr>
<tr valign=top>
<td width=42%>Setting database table properties and referential integrity</td>
<td width=58%>Chapter 7, <a href="dgworking_with_tables.htm">Working with Tables,</a> in the <i>Programmer’s Guide</i></td>
</tr>
</table><br>
<h3>Creating Tables and Indexes</h3>
<p>
In Visual FoxPro, creating tables is easy using the <a href="wndtable_designer.htm">Table Designer.</a> The designer's three tabs provide you with all the options you need to define fields, specify indexes, and view table information.</p>
<p class=label>
<b>The Table Designer creates Database Tables or Free Tables.</b></p>
<p>
<img src="afi02021.gif" border=0></p>
<p>
Using the Visual FoxPro Table Designer, you can:</p>
<p>
<B><b>Create a Database or Free Table</b></B> Make a table in a database with additional properties and relationships to other tables, or make a free table that doesn't need extended properties or relationships.</p>
<p>
<B><b>Modify an Existing Table</b></B> Select the table in the Project Manager and choose Modify to display the table in the Table Designer.</p>
<p>
<B><b>Create an Index to Order Data</b></B> Add a regular index while creating a field or choose the Index tab in the Table Designer.</p>
<p>
<B><b>Enter Data Easily</b></B> After you create your table, you can display and edit data in a Browse window and add data. For easier data entry, put the Browse window into Edit mode by choosing Edit from the View menu, and then put the table into Append Mode.</p>
<h4>Using the Properties of a Database Table</h4>
<p>
By adding your tables to a database, you increase your ability to manage how your data is displayed or entered into fields.</p>
<p>
<B><b>Set a Default Value for a Field</b></B> It's easy to set default values that appear in a field whenever you add a record to a table.</p>
<p>
<B><b>Save Time on Forms</b></B> While defining a field, you can set a default class for each field so that when you drag the field onto a form, it automatically becomes the exact class of control you wanted to represent the data. After creating the table, you can drag its fields from the Data Environment Designer, the Database Designer, or the Project Manager onto a form to create the control.</p>
<h4>Leveraging Your Legacy Data</h4>
<p>
You don't have to start with data to start a database and tables.</p>
<p>
<B><b>Convert Existing Tables</b></B> If you have existing files from previous versions of FoxPro, just open them and the Visual FoxPro Conversion dialog box appears.</p>
<p>
<B><b>Move Other Sources into a Visual FoxPro Table</b></B> If you have data in spreadsheets or text files, you can import the data into Visual FoxPro tables so that you don't have to retype it. The Import Wizard converts the source file into a Visual FoxPro table, and lets you set column titles, data types, and other options so you can use the resulting table directly in your databases or applications.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=42%><b>For more information about</b></td>
<td class=label width=58%><b>See</b></td>
</tr>
<tr valign=top>
<td width=42%>Any wizard</td>
<td width=58%>Pressing F1 from any wizard you use.</td>
</tr>
<tr valign=top>
<td width=42%>The Table Designer</td>
<td width=58%><a href="wndtable_designer.htm">Table Designer</a>.</td>
</tr>
<tr valign=top>
<td width=42%>Browsing tables and <br>
setting indexes for tables</td>
<td width=58%>Chapter 2, <a href="ugcreating_tables_and_indexes.htm">Creating Tables and Indexes,</a> in the <i>User's Guide</i>.</td>
</tr>
<tr valign=top>
<td width=42%>Importing data</td>
<td width=58%>Chapter 9, <a href="ugimporting_and_exporting_data.htm">Importing and Exporting Data,</a> in the <i>User's Guide</i>.</td>
</tr>
</table><br>
<h3>Creating Queries</h3>
<p>
It's easier than ever to set up a query to retrieve the information you need using the <a href="wndquery_designer.htm">Query Designer.</a> Under every query lies a SQL SELECT statement; however, you don't need to know SQL to create a Visual FoxPro query. Just use the tabs in the Query Designer to define the clauses of your statement.</p>
<p class=label>
<b>Use the Query Designer to define your SQL SELECT Statement.</b></p>
<p>
<img src="afi02022.gif" border=0></p>
<p>
Using the Visual FoxPro query design features, you can:</p>
<p>
<B><b>Set Up a Two-Table Query</b></B> Add two sample tables from Testdata.dbc, or use your own .dbf files to explore the Query Designer.</p>
<p>
<B><b>Change Query Output Destinations</b></B> Choose the Query Destination button on the Query toolbar to choose from a variety of destinations for your query output.</p>
<p>
<img src="b036.gif" border=0></p>
<p class=label>
<b>Query destinations allow a variety of ways to use results.</b></p>
<p>
<img src="afi02023.gif" border=0></p>
<p>
<B><b>Use Expanded Record Selection Functionality</b></B> You can now use SQL functionality for Top N and ANSI-standard joins, including left-outer joins, right-outer joins, full-outer joins, and so on. This functionality is supported via the <a href="lngselect___sql.htm">SELECT - SQL</a> command, the <a href="wndquery_designer.htm">Query Designer,</a> and the <a href="wizquery_wizard.htm">Query Wizard.</a></p>
<p>
<B><b>Preview SQL Select Statements</b></B> If you are familiar with SQL, you might find it useful to preview the SQL select statement the Query Designer builds based on your choices. Choose the SQL button to show the SQL window.</p>
<p>
<img src="b113.gif" border=0></p>
<p class=label>
<b>The SQL Statement window shows the code that defines your query.</b></p>
<p>
<img src="afi02024.gif" border=0></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=42%><b>For more information about</b></td>
<td class=label width=58%><b>See</b></td>
</tr>
<tr valign=top>
<td width=42%>Designing queries,<br>
query expressions, and<br>
choosing query destinations</td>
<td width=58%>Chapter 4, <a href="ugretrieving_data.htm">Retrieving Data,</a> in the <i>User's Guide.</i></td>
</tr>
</table><br>
<h3>Creating Views</h3>
<p>
Have you ever wanted to select a set of records from two different tables and have the changes you make to the records fed back to the original tables? Now you can, with the <a href="wndquery_designer.htm">View Designer.</a></p>
<p class=label>
<b>Views can display records and allow updates to your source tables.</b></p>
<p>
<img src="afi02025.gif" border=0></p>
<p>
Using the Visual FoxPro view design features, you can:</p>
<p>
<B><b>Update Data Through a View</b></B> Try creating a view like the example in the following paragraphs. The view in the example uses the Orders and Orditems tables from Testdata.dbc. This view selects orders made between two dates.</p>
<p>
You can make the view updatable with the options on the Update Criteria tab in the View Designer and display the results in a Browse window. Updates you make in the view results are sent back to the two source tables.</p>
<p class=label>
<b>Updates can be enabled for some or all fields in a view.</b></p>
<p>
<img src="afi02026.gif" border=0></p>
<p>
<B><b>Use View Wizards</b></B> Two different view wizards can help you set up local and remote views. You can use the <a href="wizremote_view_wizard.htm">Remote View Wizard</a> if you have a remote server (such as Microsoft SQL Server) that you can connect to.</p>
<p>
<B><b>Set Up a View that Prompts for Values</b></B> You can even set up a view that prompts you for values when you run it. For example, try setting up a view that prompts you for a range of order dates.</p>
<p class=label>
<b>Views can prompt for parameters.</b></p>
<p>
<img src="afi02027.gif" border=0></p>
<p>
<B><b>Work with Offline Data</b></B> If you need to work with your data while disconnected from the host data source, you can use the language to create a view and work with offline data, and then return the data to update the host data source.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=42%><b>For more information about</b></td>
<td class=label width=58%><b>See</b></td>
</tr>
<tr valign=top>
<td width=42%>View Wizards</td>
<td width=58%>Help by pressing F1 from the wizard.</td>
</tr>
<tr valign=top>
<td width=42%>Creating views</td>
<td width=58%>Chapter 5, <a href="ugupdating_data_with_views.htm">Updating Data with Views,</a> in the <i>User's Guide</i>.</td>
</tr>
<tr valign=top>
<td width=42%>Remote views or<br>
working off line</td>
<td width=58%>Chapter 8, <a href="dgcreating_views.htm">Creating Views,</a> in the <i>Programmer’s Guide.</i></td>
</tr>
</table><br>
<h2>Creating Interfaces without Programming</h2>
<p>
Visual FoxPro provides powerful controls that you add with the <a href="wndform_designer.htm">Form Designer,</a> giving you interfaces that require little or no coding. For example, the grid control, linked to one of your tables, makes developing one-to-many forms easy. Just drag a table onto a form to create the grid control. For consistency with other applications, you can also create tabbed dialog boxes or your own builder interfaces with the page frame control.</p>
<h3>Creating a One-to-Many Form</h3>
<p>
Visual FoxPro makes it easy to set up forms to display records from related tables. Using the <a href="wndproject_manager.htm">Project Manager</a> and the <a href="wndform_designer.htm">Form Designer,</a> you can just “drag and drop” the fields you need to set up a form.</p>
<p class=label>
<b>One-to-many forms display data from related tables.</b></p>
<p>
<img src="afi02028.gif" border=0></p>
<p>
Try setting up a one-to-many form using two related tables, such as the Customers and Orders tables from Testdata.dbc.</p>
<p class=label>
<b>After four steps, one-to-many forms are…</b></p>
<p>
<img src="afi02001.gif" border=0></p>
<p>
<img src="afi02002.gif" border=0></p>
<p>
<img src="b041.gif" border=0></p>
<p class=label>
<b>…ready to run.</b></p>
<p>
<img src="afi02004.gif" border=0></p>
<p>
<B><b>Specify Tables and Views for Your Form in the Data Environment</b></B> You can use the data environment for your form or a report to specify the tables or views used by your form. After you have added the tables and views that have the records you want to display in your form, you can drag the fields to the <a href="wndform_designer.htm">Form Designer.</a></p>
<p>
<B><b>Create Grids by Selecting Multiple Fields</b></B> You can select multiple fields and drag them to a form to create a grid object. If you select multiple fields and drag them with the right mouse button, you can choose between a grid or multiple controls. You can also click the Fields item in a table and drag it onto a form to create a grid incorporating all fields in the table. If you right-click a single field and drag it onto a form, you can create a different object class than the one that is assigned as the default object class.</p>
<h3>Giving Your Form a Professional Look</h3>
<p>
Be creative and customize your forms with layout, colors, shapes, and graphics.</p>
<p>
<B><b>Align Controls Exactly</b></B> Use the Layout toolbar to quickly line up controls and space them evenly on the form.</p>
<p>
<B><b>Change the Background Color</b></B> Use the Color Palette toolbar.</p>
<p>
<B><b>Add Graphics and Pictures</b></B> Use the Line, Shape, and Image buttons on the Form Controls toolbar.</p>
<p>
<B><b>Control Display and Data Entry in a Combo Box</b></B> You can set the <a href="lngformat_property.htm">Format</a> and <a href="lnginputmask_property.htm">InputMask</a> properties for a Combo Box control.</p>
<p>
<B><b>Remove a Border on a Combo Box or Spinner</b></B> You can use the <a href="lngborderstyle_property.htm">BorderStyle</a> property to remove a border from the control. For example, if you are using combo box or spinner controls in a grid, you can clean up the display by removing the extra lines the border adds to the grid.</p>
<p>
<B><b>Use Current Windows Colors for Form Colors</b></B> You can set an additional option on the <a href="lngcolorsource_property.htm">ColorSource</a> property that lets you set the form colors based on the current Windows color scheme.</p>
<h3>Setting the Properties on Controls</h3>
<p>
You can enhance your user interface with the control properties in Visual FoxPro. Using the <a href="wndproperties_window.htm">Properties</a> window, you can see and set the properties associated with each object in your form to determine how a form control looks and behaves.</p>
<p>
<B><b>Use Data Binding with ActiveX Controls</b></B> To bind data to ActiveX controls, you can use the <a href="lngcontrolsource_property.htm">ControlSource</a> property (if the control supports it) in the Properties window to specify a field or variable to which the control is bound.</p>
<p>
<B><b>Control Navigation in Page Frames</b></B> By setting the tab order on your page frame, you can control the order that pages are displayed. This also adds the ability to navigate to the different pages in a page frame with the right and left arrow keys.</p>
<p>
<B><b>Control Item Selection in List Box and Combo Box Controls</b></B> To collect the actual value of the selected item in the control, you can set the <a href="lngboundto_property.htm">BoundTo</a> property to True. To collect the item's list index number, set the BoundTo property to False.</p>
<p>
<B><b>Select More Than 60 Items in a List Box</b></B> You can now select an unlimited number of multiple items in a <a href="ctllistbox_control.htm">ListBox</a> control.</p>
<p>
<B><b>Create Hidden Properties and Methods</b></B> You can set accessibility properties on the properties and methods you create to Public, Protected, or Hidden. To change the accessibility of properties and methods, use the <a href="cmdmembers_tab_class_info_dialog_box.htm">Members</a> tab in the <a href="cmdclass_info_dialog_box.htm">Class Info</a> dialog box.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=42%><b>For more information about</b></td>
<td class=label width=58%><b>See</b></td>
</tr>
<tr valign=top>
<td width=42%>Creating forms</td>
<td width=58%>Chapter 8, <a href="ugmanaging_data_through_forms.htm">Managing Data Through Forms,</a> in the <i>User's Guide</i>.</td>
</tr>
<tr valign=top>
<td width=42%>Using form wizards</td>
<td width=58%>Help by pressing F1 from the wizard.</td>
</tr>
<tr valign=top>
<td width=42%>Using builders</td>
<td width=58%>Help by pressing F1 from the builder.</td>
</tr>
<tr valign=top>
<td width=42%>Using controls</td>
<td width=58%>Help by searching on the control name or<br>
Chapter 10, <a href="dgusing_controls.htm">Using Controls,</a> in the <i>Programmer’s Guide.</i></td>
</tr>
<tr valign=top>
<td width=42%>Using forms in applications</td>
<td width=58%>Chapter 9, <a href="dgcreating_forms.htm">Creating Forms,</a> in the <i>Programmer’s Guide.</i></td>
</tr>
</table><br>
<h3>Customizing Your Form Designer</h3>
<p>
To make your work easier, you can customize the Form Designer to match your work style and needs.</p>
<p>
<B><b>Save Changes Automatically</b></B> You can set options so Visual FoxPro saves your forms automatically when you quit the Form Designer. In the <a href="cmdforms_tab_options_dialog_box.htm">Forms</a> tab of the Options dialog box, you can choose the option to Save Changes Before Running Form. If you select this option, you skip the confirmation dialog box, and the changes you made to the current form are saved automatically.</p>
<p>
<B><b>Change the Font in the Properties Window</b></B> You can choose one of three font settings from the Properties window shortcut menu.</p>
<p>
<B><b>Use the Keyboard in the Property Window</b></B> The Properties window supports keyboard navigation for scrolling through the hierarchy of objects, controls, and tab orders. Use CTRL+PGUP and CTRL+PGDN to move up and down through the list.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=42%><b>For more information about</b></td>
<td class=label width=58%><b>See</b></td>
</tr>
<tr valign=top>
<td width=42%>The Form Designer and form controls</td>
<td width=58%><a href="wndform_designer.htm">Form Designer</a> or <a href="tlsform_controls_toolbar.htm">Form Controls Toolbar</a>.</td>
</tr>
<tr valign=top>
<td width=42%>Creating forms</td>
<td width=58%>Chapter 8, <a href="ugmanaging_data_through_forms.htm">Managing Data Through Forms,</a> in the <i>User's Guide.</i></td>
</tr>
</table><br>
<h3>Add Controls from a Class Library</h3>
<p>
When you need to add controls to a form so you can navigate through the records in it, you can choose from a library of controls, drag in the controls you need, and run the form. It's that simple.</p>
<h4>Adding VCR Controls to a One-to-Many Form</h4>
<p>
You can use the following example to see how easy it is to streamline your work using controls from class libraries.</p>
<p class=label>
<b>Store complicated control sets in a class library for reuse.</b></p>
<p>
<img src="afi02028.gif" border=0></p>
<p>
<B><b>Add VCR Controls to a Form</b></B> By opening the sample button class library (Buttons.vcx) supplied with Visual FoxPro, you can easily add a set of VCR-style navigation control buttons to your form. The sample libraries are in the Visual Studio …\Samples\Vfp98\Classes directory.</p>
<p class=label>
<b>A class for VCR controls can be added to your toolbar.</b></p>
<p>
<img src="afi02005.gif" border=0></p>
<p class=label>
<b>Controls are easy to add to your form.</b></p>
<p>
<img src="afi02006.gif" border=0></p>
<p>
<B><b>Set the SkipTable Property</b></B> Because this is a one-to-many form, you need to specify that the next record in the main table is selected when you choose the Next button. To do this, open the <a href="wndproperties_window.htm">Properties</a> window and set the SkipTable property so that it refers to the main table.</p>
<p class=label>
<b>The SkipTable property adds the final functionality to your control.</b></p>
<p>
<img src="afi02008.gif" border=0></p>
<h4>Expanding Your Class Libraries</h4>
<p>
You don't have to wait for someone else to sell you their control classes and libraries; you can make your own.</p>
<p>
<B><b>Create Your Own Classes</b></B> You can create your own controls and save them in class libraries. You can start with standard Visual FoxPro classes and customize them to create your own version, or you can create your own classes.</p>
<p>
<B><b>Point to Classes in Compiled Applications</b></B> You can use the <a href="lngset_classlib.htm">SET CLASSLIB</a> command to point to a class included in a compiled application.</p>
<p>
<B><b>Add and Keep Classes on the Forms Control Toolbar</b></B> When you add a class to the Forms Control toolbar, the class remains on the toolbar until you click the View Classes button again and select Standard.</p>
<p>
<B><b>View detailed information about your classes</b></B> Using the <a href="cmdclass_browser_window.htm">Class Browser</a>, you can view the entire hierarchy of classes and objects in a class library or form.</p>
<p>
<B><b>Create your own subclasses of ActiveX controls</b></B> You can create subclasses of all the ActiveX controls shipped with Visual FoxPro.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=40%><b>For more information about</b></td>
<td class=label width=60%><b>See</b></td>
</tr>
<tr valign=top>
<td width=40%>Using the Class Designer</td>
<td width=60%>Help by pressing F1 from the Class Designer.</td>
</tr>
<tr valign=top>
<td width=40%>Setting properties</td>
<td width=60%>Chapter 9, <a href="dgcreating_forms.htm">Creating Forms,</a> in the <i>Programmer’s Guide.</i></td>
</tr>
<tr valign=top>
<td width=40%>Creating classes and using class libraries</td>
<td width=60%>Chapter 3, <a href="dgobject_oriented_programming.htm">Object-Oriented Programming,</a> in the <i>Programmer’s Guide.</i></td>
</tr>
</table><br>
<h3>Creating a Menu Bar and Shortcut Menus</h3>
<p>
You can use the <a href="wndmenu_designer.htm">Menu Designer</a> to add a menu bar and menus to forms in your application. With the <a href="wndmenu_designer.htm">Shortcut Designer</a>, you can create shortcut menus and menus for SDI forms.</p>
<p>
When you create a menu, you have the option to add a menu to the menu bar or create a shortcut menu. The Shortcut Designer presents the familiar Menu Designer interface, but allows you to design shortcut menus rather than menu bars and menus.</p>
<p>
After you have generated your shortcut menu, you can attach it to any control by running the menu in the control's <a href="lngrightclick_event.htm">RightClick</a> event.</p>
<h3>Creating Reports</h3>
<p>
When it's time to print out important data, you don't want to spend a lot of time formatting reports. That's why Visual FoxPro provides report wizards to streamline the reporting process. With report wizards, you can select the data you want from your tables and views, and present it in your choice of professional looking formats.</p>
<p class=label>
<b>It's easy to combine information from two different tables in a one-to-many report.</b></p>
<p>
<img src="afi02030.gif" border=0></p>
<p>
Using the Visual FoxPro report design features, you can:</p>
<p>
<B><b>Use the Preview Button</b></B> The last screen of a report wizard has a Preview button, so you can quickly see if your report is the way you like it. If not, use the Back button in the wizard and make the necessary adjustments.</p>
<p>
<B><b>Use Quick Report for Fast Results</b></B> If you're setting up your own report in the <a href="wndreport_designer.htm">Report Designer,</a> choose Quick Report from the Report menu to add selected fields from a table to a report.</p>
<p>
<B><b>Use Query or View Results in a Report</b></B> Want to print out the results of a query? Choose the Report option in the <a href="cmdquery_destination_dialog_box.htm">Query Destination</a> dialog box. You can send the query results to a pre-formatted report or send the query to a report wizard.</p>
<p>
<B><b>Create a One-To-Many Report</b></B> The <a href="wizone_to_many_report_wizard.htm">One-To-Many Report Wizard</a> makes it easy to set up a report that shows fields from two tables joined in a one-to-many relationship. For example, try using the wizard to create a report from two related tables in Testdata.dbc.</p>
<p class=label>
<b>Report Wizards retrieve records and format the report layout.</b></p>
<p>
<img src="afi02031.gif" border=0></p>
<p>
<B><b>Use Other Report Wizards</b></B> Try using the other report wizards. For simple one-table reports or summary reports with totals, choose <a href="wizreport_wizard.htm">Report Wizard</a>.</p>
<p>
<B><b>Use the Report Designer</b></B> If you want to customize your wizard-generated report further, just open it in the <a href="wndreport_designer.htm">Report Designer</a> and add the enhancements you need.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=42%><b>For more information about</b></td>
<td class=label width=58%><b>See</b></td>
</tr>
<tr valign=top>
<td width=42%>Report Wizards</td>
<td width=58%>Help by pressing F1 from the wizard.</td>
</tr>
<tr valign=top>
<td width=42%><a href="wndreport_designer.htm">Report Designer</a></td>
<td width=58%>Chapter 7, <a href="ugdesigning_reports_and_labels.htm">Designing Reports and Labels,</a> in the <i>User's Guide</i>.</td>
</tr>
</table><br>
<h3>Providing a Help System</h3>
<p>
You can add value to your application by creating a Help system. Using the Help compiler included with Visual FoxPro, you can turn your document files into a graphical Help system to distribute with your applications. If you prefer to use a Visual FoxPro table to store your help information, you can create .DBF-style help. You can find a sample, Ttrade.dbf, in the Visual Studio …\Samples\Vfp98\Taztrade\Help directory. For more information about creating Winhelp and HTML Help, see Chapter 23, <a href="dgcreating_graphical_help.htm">Creating Graphical Help,</a> or Chapter 24, <a href="dgcreating__dbf_style_help.htm">Creating .DBF-Style Help,</a> in the <i>Programmer’s Guide.</i></p>

<h2><a name="igtaking_advantage_of_more_power"></a>Taking Advantage of More Power</h2>
<p>
Visual FoxPro is much more powerful than its predecessors. Object-oriented programming speeds up application development through features such as subclassing. The Visual FoxPro event model eliminates the need to use foundation READ or write event handlers. Optimizing your system settings and implementing Rushmore<sup>™</sup> technology improves the performance of Visual FoxPro.</p>
<h3>Harnessing the Power of Object-Oriented Programming</h3>
<p>
Although Visual FoxPro still supports standard procedural programming, it now also provides true object-oriented programming. Using the Visual FoxPro object model, you can employ all the features of object-oriented programming including inheritance, encapsulation, polymorphism, and subclassing. For details about object-oriented programming with Visual FoxPro, see Chapter 3, <a href="dgobject_oriented_programming.htm">Object-Oriented Programming,</a> in the <i>Programmer’s Guide</i>.</p>
<p>
You can speed up application development by using classes. For example, you can create a basic form, toolbar, or page frame by using the form, toolbar, or page frame base class provided with Visual FoxPro.</p>
<p>
Then, you can reuse your code and forms by subclassing the classes you defined. For example, you can subclass the Form base class to create a custom class that automatically gives all the forms in your application the look and feel you want.</p>
<p class=label>
<b>The Class Designer helps you create custom classes.</b></p>
<p>
<img src="afi02032.gif" border=0></p>
<p>
The Visual FoxPro class model gives you extensive control over the objects in your application. You have as much control of the appearance and behavior of objects on forms at runtime as you do in the Form Designer at design time.</p>
<p>
With Visual FoxPro, you can create classes visually with the <a href="wndclass_designer.htm">Class Designer</a> or programmatically with the <a href="lngdefine_class.htm">DEFINE CLASS</a> command. For more information, see Chapter 3, <a href="dgobject_oriented_programming.htm">Object-Oriented Programming,</a> in the <i>Programmer’s Guide</i>.</p>
<h3>Handling Events with Ease</h3>
<p>
With Visual FoxPro, you can create fully event-driven applications. You can access all standard Windows events, such as mouse movements that permit dragging or dropping objects. You can control events visually through the Properties window or programmatically through the Visual FoxPro language. For more information about the event model, see Chapter 4, <a href="dgunderstanding_the_event_model.htm">Understanding the Event Model,</a> in the <i>Programmer’s Guide</i>.</p>
<h3>Testing and Debugging Immediately</h3>
<p>
Using the debug environment, you can test and debug your code at the same time you design each component of your application and write the code. The Visual FoxPro language has been enhanced to include support for debugging capabilities, collection properties, checking the lock status of files and the current record, Value tips, and more. Also, the debugging tools work independently from the main application and do not interfere with the interface you are trying to test.</p>
<p>
<B><b>Test as You Design</b></B> The enhanced Visual FoxPro development environment gives you more power to test your component design and code. For example, if you are designing a form, you can click the Run button to run the code. If you want to change something, just click the Design button and make your changes.</p>
<p>
<B><b>Catch Syntax Errors Early</b></B> The editor now features color-coded editing: you can specify colors for syntax, normal text, variables, comments, and more in the <a href="cmdedit_properties_dialog_box.htm">Edit Properties</a> dialog box. If you mistype a command or keyword, you'll know right away because it's the wrong color.</p>
<p>
<b>Debug with Power</b></p>
<p>
You can debug and monitor your application components more easily in this version of Visual FoxPro using the <a href="wnddebugger_window.htm">Debugger</a> window.
<ul type=disc>
<li>
<B><b>View Properties of an Object</b></B> In the debugger, you can view the elements within a collection or array using the <a href="wndwatch_window.htm">Watch</a> window to show a hierarchical display of an object's properties.<br><br></li>
<li>
<B><b>Trace the Execution Process of Your Code</b></B> In the <a href="wndtrace_window.htm">Trace</a> window, you can see each line of code as it executes and check the values of all variables, properties, and environment settings.<br><br></li>
<li>
<B><b>Control Execution with Breakpoints</b></B> Using breakpoints, you can control when execution stops using one of four types of breakpoints. You can stop at a particular line, when a certain values change, if a condition evaluates to true, or if a condition for a certain line is true.<br><br></li>
<li>
<B><b>Set Asserts and Display Assert Messages</b></B> You can use the <a href="lngassertcommand.htm">ASSERT</a> command to specify conditions that verify that the code is running properly. When an error occurs, the <a href="wnddebug_output_window.htm">Debug Output</a> window records the message.<br><br></li>
<li>
<B><b>Check the Current Value of a Variable</b></B> To quickly check values, you can place the cursor over a variable in the <a href="wndtrace_window.htm">Trace</a> Window to display a Value Tip.<br><br></li>
<li>
<B><b>Watch and Change Values</b></B> In the <a href="wndwatch_window.htm">Watch</a> window and <a href="wndlocals_window.htm">Locals</a> window, you can change values for properties or variables while you run the code.<br><br></li>
<li>
<B><b>Display Output from Message Requests</b></B> In the <a href="wnddebug_output_window.htm">Debug Output</a> window, you can conveniently display interactive or coded information requests in a separate window from the active window or screen.<br><br></li>
<li>
<B><b>Use a Coverage Log File</b></B> In the <a href="wnddebugger_window.htm">Debugger</a> window, you can use the coverage option to log the execution information about your code; such as how long the line took to execute, the line number, and more.</li>
</ul>
<p>
For more information about testing and debugging your application, see Chapter 14, <a href="dgtesting_and_debugging_applications.htm">Testing and Debugging Applications.</a> in the <i>Programmer’s Guide</i>.</p>
<h3>Optimizing Your System</h3>
<p>
Visual FoxPro brings you improved performance across all these product areas:
<ul type=disc>
<li>
Engine<br><br></li>
<li>
Form/Object<br><br></li>
<li>
OLE<br><br></li>
<li>
Client/Server<br><br></li>
<li>
Wizards/Builders<br><br></li>
<li>
Language</li>
</ul>
<p>
You can also improve performance by enhancing startup speed and optimizing SET commands. For more information about optimizing your system, see Chapter 4, <a href="igoptimizing_your_system.htm">Optimizing Your System.</a> in this book.</p>
<h3>Optimizing Applications with Rushmore Technology</h3>
<p>
You can dramatically improve the performance of queries by using Rushmore technology. Rushmore is an exclusive technology for rapidly selecting sets of records from tables. It can reduce query response times from hours or minutes to seconds. For more information about using the Rushmore technology, see Chapter 15, <a href="dgoptimizing_applications.htm">Optimizing Applications,</a> in the <i>Programmer’s Guide</i>.</p>

<h2><a name="igworking_with_multiple_developers"></a>Working with Several Developers</h2>
<p>
If you have several developers working on your applications, you can use Visual FoxPro's ability to allow simultaneous access to database components. Also, for tracking and protecting changes to your source code, you can use source control programs with the Project Manager.</p>
<p>
<B><b>Let Several People Work on Database Objects</b></B> You can now modify tables and view definitions, without exclusive access to the database. Use the Refresh option on the Database menu – this reloads the database object definition to reflect any changes made by other users.</p>
<p>
<B><b>Use Source Code Control</b></B> You can use a source code control program such as Microsoft Visual SourceSafe, to coordinate and manage changes to applications you develop in Visual FoxPro. The Project Manager provides access to source code control on the Project menu.</p>
<p>
For more information about working with several developers, see Chapter 29, <a href="dgdeveloping_in_teams.htm">Developing in Teams</a> in the <i>Programmer’s Guide.</i></p>

<h2><a name="iginteracting_with_other_applications"></a>Interacting with Other Applications</h2>
<p>
With Visual FoxPro, you can share data with other applications, such as Microsoft Excel and Word, use objects from other applications, and control other applications using Automation.</p>
<h3>Sharing Data with Other Applications</h3>
<p>
You can take advantage of all the software tools on your desktop with Visual FoxPro.</p>
<p>
<B><b>Use Your FoxPro Data in Other Applications</b></B> Sharing data with other applications is easy – for example, you can share Visual FoxPro data with Microsoft Excel by using the PivotTable Wizard or with Microsoft Word by using the Mail Merge Wizard.</p>
<p>
<B><b>Display or Store Objects from Other Applications</b></B> You can include objects from another application by linking or embedding them in tables or in forms. Then, you can edit the objects directly, without leaving Visual FoxPro.</p>
<p class=label>
<b>Editing included objects is easy in Visual FoxPro.</b></p>
<p>
<img src="afu10007.gif" border=0></p>
<p>
For details about sharing data, see Chapter 10, <a href="ugsharing_information_with_other_applications.htm">Sharing Information with Other Applications,</a> in the <i>User's Guide</i>.</p>
<h3>Importing and Exporting Data</h3>
<p>
You can import and export data between Visual FoxPro and many other applications using a variety of file formats: text, spreadsheets, and tables, to name a few. The data can be appended to or copied from existing tables easily. The Import Wizard helps you make decisions about the structure you want the data to take in Visual FoxPro.</p>
<p>
For more information, see Chapter 9, <a href="ugimporting_and_exporting_data.htm">Importing and Exporting Data,</a> in the <i>User's Guide</i>.</p>
<h3>Integrating with Automation</h3>
<p>
With Visual FoxPro, you have the power to fully integrate your application with other applications.</p>
<p>
<B><b>Control Other Applications</b></B> You can extend the power of your application by controlling other applications programmatically. For example, you can direct Microsoft Excel to perform some calculations, instruct Microsoft Graph to chart the results, and then store the chart in a General field of a Visual FoxPro table, all from Visual FoxPro code. Or, you can add ActiveX controls that you or someone else developed.</p>
<p>
<B><b>Optimize Automation Requests</b></B> You can determine how long your system uses on requests and when messages appear for your user. For example, you can control how much time your system spends retrying Automation requests before displaying a “server busy” message.</p>
<p>
You can also control the number of milliseconds that pass between user input while an Automation request is pending, such as using the mouse or keyboard, and a “busy” message appearing.</p>
<p>
<B><b>Control Visual FoxPro from Other Applications</b></B> Using Visual FoxPro as an Automation server, you can create references to Visual FoxPro objects, execute Visual FoxPro commands, and run Visual FoxPro programs from other applications.</p>
<p>
For more information on Automation, see Chapter 16, <a href="dgadding_ole.htm">Adding OLE,</a> in the <i>Programmer’s Guide</i>.</p>

<h2><a name="igdeveloping_client_server_solutions"></a>Developing Client/Server Solutions</h2>
<p>
You can use Visual FoxPro as a front end for developing robust client/server applications. Visual FoxPro combines the higher-level support of updatable views of server data with direct access to native server syntax, using SQL pass-through. This gives you a solid foundation on which to build versatile client/server solutions. A full-featured data dictionary, local and remote views, null support, transactions, international application support, and access to any ODBC data source all contribute to the features you need for client/server development.</p>
<h3>Increasing Client/Server Performance</h3>
<p>
You can increase the performance of your client/server application using the properties and ODBC driver provided in Visual FoxPro.</p>
<h3>Controlling Performance with Properties</h3>
<p>
You can increase performance by using the following cursor and remote view properties:
<ul type=disc>
<li>
CompareMemo<br><br></li>
<li>
FetchAsNeeded<br><br></li>
<li>
Prepared</li>
</ul>
<p>
You can display these properties using the <a href="lngdbgetproplp_rp.htm">DBGETPROP(&nbsp;)</a> and <a href="lngcursorgetproplp_rp.htm">CURSORGETPROP(&nbsp;)</a> functions, or set the properties with the <a href="lngdbsetproplp_rp.htm">DBSETPROP(&nbsp;)</a> and <a href="lngcursorsetproplp_rp.htm">CURSORSETPROP(&nbsp;)</a> functions.</p>
<p>
<B><b>Include or Exclude Memo Fields in Update Detection</b></B> You can use the CompareMemo property to control when memo fields are used to detect update conflicts. This view and cursor property determines whether memo fields (types M or G) are included in the update WHERE clause. The default setting, true (.T.), means that memo fields are included in the WHERE clause. If you set this property to false (.F.), memo fields don't participate in the update WHERE clause, regardless of the settings of UpdateType.</p>
<p>
Optimistic conflict detection on Memo fields is disabled when CompareMemo is set to false (.F.). For conflict detection on memo values, CompareMemo should be set to true (.T.).</p>
<p>
<B><b>Fine Tune Record Fetching</b></B> Use the FetchAsNeeded property to specify if all rows are fetched progressively or only those within the row set determined by the FetchSize property. If you want to fetch all of the rows in the result set using the Visual FoxPro idle loop, use the default setting, False (.F.). If you want to fetch only when the user scrolls beyond the row set determined by the FetchSize property, set FetchAsNeeded to True (.T.) to fetch the next row set.</p>
<p>
<B><b>Speed Up Re-query Operations on Parameterized Views</b></B> Using the Prepared property, you can set whether the query for the view is prepared before it is executed. If you set this property to true (.T.), Visual FoxPro sends a request to the ODBC driver to prepare, or compile, the SQL query that defines the view. If the ODBC driver for your back-end data source supports the use of prepared statements, subsequent re-queries on the open view are executed faster.</p>
<h3>Using ODBC for Quick Access to Visual FoxPro Data</h3>
<p>
The Visual FoxPro ODBC Driver provides quick access to Visual FoxPro data. End users and developers of many applications, including Microsoft Access, Microsoft Excel, Visual C++, and Visual Basic, can use this driver to retrieve, manipulate and update Visual FoxPro data. For more information about the Visual FoxPro ODBC Driver, see the Drvvfp.hlp file.</p>
<h3>Defining Rules with the Data Dictionary</h3>
<p>
Visual FoxPro databases (.dbc files) provide a data dictionary that allows you to add rules, views, triggers, persistent relationships, and connections to every table in a database.</p>
<p>
Within a database, you can define:
<ul type=disc>
<li>
Field-level or record-level rules that Visual FoxPro enforces wherever the table is used in an application.<br><br></li>
<li>
Primary and candidate index keys.<br><br></li>
<li>
Local and remote views.<br><br></li>
<li>
Triggers.<br><br></li>
<li>
Persistent relationships between database tables.<br><br></li>
<li>
Connections to remote data sources.<br><br></li>
<li>
Stored procedures.<br><br></li>
<li>
Default values on fields.<br><br></li>
<li>
Long table and field names.</li>
</ul>
<p>
In addition, you can enforce referential integrity for every persistent relationship by using the Referential Integrity Builder to define rules for inserts, updates, and deletes.</p>
<p>
Visual FoxPro also supports null values in tables, greatly improving compatibility and connectivity with other data sources, such as Microsoft Access, Visual Basic, and SQL-based servers. For details about null values, search for “null” and “null values”.</p>
<p>
Each Visual FoxPro database is completely user-extensible, with access through language enhancements and the visual designers. For more information about databases and data dictionaries, see Chapter 6, <a href="dgcreating_databases.htm">Creating Databases,</a> in the <i>Programmer’s Guide</i>.</p>
<p>
<B><b>View Local, Remote, and Offline Data</b></B> You can design and test a client/server application on your local computer using data from remote, local, or multiple-table heterogeneous views. Local views use tables on your local computer rather than tables on a remote server and multiple table views use related data from separate tables. You can create parameterized views to minimize the amount of data you download from the server, take the data on the road, or update remote data from your Visual FoxPro application. For more information about views, see Chapter 8, <a href="dgcreating_views.htm">Creating Views,</a> in the <i>Programmer’s Guide</i>.</p>
<p>
<B><b>Manage Shared Access with Transactions</b></B> You can design your application to provide shared access to data. Shared access involves sharing data among users and restricting access when necessary. Transactions and buffering — pessimistic or optimistic, record-level or table-level — mean less programming for you. Built-in batch processing and detailed control over handling update conflicts simplifies updating data in a multiuser environment. For details about designing your application for shared access, see Chapter 17, <a href="dgprogramming_for_shared_access.htm">Programming for Shared Access,</a> in the <i>Programmer’s Guide</i>.</p>
<p>
<B><b>Develop International Applications</b></B> Visual FoxPro provides several areas of support for developing international applications. For example, Visual FoxPro supports several code pages. The code pages for Greek and Russian are supported on MS-DOS, Microsoft Windows, and Macintosh platforms. Visual FoxPro also supports double-byte character sets for languages such as Japanese, Korean, Traditional Chinese, and Simplified Chinese. In addition, Visual FoxPro supports collation sequences for languages such as Japanese, German, Traditional Chinese, and Icelandic. For more information about international applications, see Chapter 18, <a href="dgdeveloping_international_applications.htm">Developing International Applications,</a> in the <i>Programmer’s Guide</i>.</p>
<p>
<B><b>Implement a Client/Server Application</b></B> In addition to using views for client/server development, you can send any native server syntax you want directly to a server with Visual FoxPro SQL pass-through functions. These functions permit additional server access and control beyond the capability of views. For details about SQL pass-through, see Chapter 21, <a href="dgimplementing_a_client_server_application.htm">Implementing a Client/Server Application,</a> in the <i>Programmer’s Guide</i>.</p>
<p>
After designing your application locally, you can <a href="glsupsizing.htm">upsize</a> and implement it against a back-end data source. Upsizing applies the benefits of client/server architecture to the local application and allows you to create a remote server database with the same table structure and data as the original Visual FoxPro tables. When you upsize, you choose which tables move to the server and which remain locally for more immediate access. For details about upsizing, see Chapter 20, <a href="dgupsizing_visual_foxpro_databases.htm">Upsizing Visual FoxPro Databases,</a> in the <i>Programmer’s Guide</i>.</p>

<h2><a name="igupgrading_from_earlier_versions"></a>Upgrading from Earlier Versions</h2>
<p>
Visual FoxPro protects your investment in applications built in previous versions of FoxPro. In Visual FoxPro, you can run FoxPro applications without changing them. You can change applications using the Visual FoxPro language — knowing that extensions to the language don't affect backward compatibility. You can also convert FoxPro screens, projects, and reports to Visual FoxPro format.</p>
<p>
If you choose to convert your FoxPro files to the Visual FoxPro format, you can take advantage of the unique features of Visual FoxPro.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=43%><b>For more information about</b></td>
<td class=label width=57%><b>See</b></td>
</tr>
<tr valign=top>
<td width=43%>Version differences</td>
<td width=57%><a href="refdifferences.htm">Differences Between Visual FoxPro and Previous Versions</a></td>
</tr>
<tr valign=top>
<td width=43%>Upgrading from earlier versions of FoxPro</td>
<td width=57%><a href="conconverting_from_other_versions_of_foxpro.htm">Converting From Previous Versions of FoxPro</a></td>
</tr>
<tr valign=top>
<td width=43%>Switching from dBASE</td>
<td width=57%><a href="conswitching_from_dbase_overview.htm">Switching from dBASE</a></td>
</tr>
</table><br>
</BODY>
</HTML>
