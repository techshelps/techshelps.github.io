<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetData Method</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lnggetdata_method"></a><sup></sup>GetData Method</h1>
<p>
<a href="lnggetdata_methodat.htm">Applies To</a> &nbsp; <a href="lnggetdata_methodsa.htm">See Also</a></p>
<p>
Retrieves data from the OLE drag-and-drop DataObject object. Available at run time only.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>oDataObject</i>.GetData(<i>nFormat</i> | <i>cFormat</i> [, @<i>ArrayName</i>])</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>nFormat</i> | <i>cFormat</i></p>
<p class=indent>
Specifies the format of the data to retrieve. The following table lists the values for each data format and a description of each format. The DataObject automatically supports the following formats (more formats are available, but these may require additional programming to use). For more information about the data formats available, see the documentation for Visual C++ on the Microsoft Developer Network.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=45%><b>Data format*</b></td>
<td class=label width=19%><b><i>nFormat</i><br>
| <i>cFormat</i></b></td>
<td class=label width=36%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=45%>CF_TEXT</td>
<td width=19%>1</td>
<td width=36%>Text format.</td>
</tr>
<tr valign=top>
<td width=45%>CF_OEMTEXT</td>
<td width=19%>7</td>
<td width=36%>Text format containing characters in the OEM character set.</td>
</tr>
<tr valign=top>
<td width=45%>CF_UNICODETEXT</td>
<td width=19%>13</td>
<td width=36%>Unicode text format, available only under Windows NT. </td>
</tr>
<tr valign=top>
<td width=45%>CF_FILES or CF_HDROP</td>
<td width=19%>15</td>
<td width=36%>A handle that identifies a list of files, such as a set of files dragged from the Windows Explorer.</td>
</tr>
<tr valign=top>
<td width=45%>CF_LOCALE</td>
<td width=19%>16</td>
<td width=36%>A handle to the locale identifier associated with text on the clipboard.</td>
</tr>
<tr valign=top>
<td width=45%>CFSTR_OLEVARIANTARRAY</td>
<td width=19%>"OLE Variant Array"</td>
<td width=36%>A Visual FoxPro array. Multiple values can be transferred in a single drag and drop operation with this format.<p>
For example, this format can be used to drag a set of items in a list box to another list box.</p>
</td>
</tr>
<tr valign=top>
<td width=45%>CFSTR_OLEVARIANT</td>
<td width=19%>"OLE Variant"</td>
<td width=36%>A Visual FoxPro variant. All data types in Visual FoxPro are represented as variants. This format can be used to drag and drop Visual FoxPro data without losing the data type.</td>
</tr>
<tr valign=top>
<td width=45%>CFSTR_VFPSOURCEOBJECT</td>
<td width=19%>"VFP Source Object"</td>
<td width=36%>A reference to a Visual FoxPro object.</td>
</tr>
</table><br>
<p class=mini>
* Defined in FOXPRO.H.</p>
<p class=dt>
<i>@ArrayName</i></p>
<p class=indent>
Specifies the name of the array in which the data is stored when the data can contain multiple values. The only data formats in which the data can contain multiple values are CF_FILES, CF_HDROP, and CFSTR_OLEVARIANTARRAY. For example, you can drag a set of files from the Windows Explorer onto a Visual FoxPro list box. Use the GetData method in the OLEDragDrop event of the list box to place the names of the files into an array, then use the AddItem method in a FOR&nbsp;…&nbsp;ENDFOR loop to add the contents of the array to the list box.</p>
<p class=indent>
The array must exist before you can specify its name in the GetData method. If the array exists and isn't large enough to contain the data, Visual FoxPro automatically increases the size of the array. If the array is larger than necessary, Visual FoxPro truncates the array. </p>
<p class=label>
<b>Remarks</b></p>
<p>
The value returned by the GetData method is determined by the format of the data specified with <i>nFormat</i> or <i>cFormat</i>. False (.F.) is returned if the DataObject doesn't contain data in the format you specify with <i>nFormat</i> or <i>cFormat</i>. True (.T.) is returned when the data is in a multiple value format such as CF_FILES, CF_HDROP, or CFSTR_OLEVARIANTARRAY. The data on the DataObject is returned when the data is in a single value format such as CF_TEXT, CFSTR_OLEVARIANT, or CFSTR_VFPSOURCEOBJECT.</p>
<p>
The OLESetData event for a drag source is triggered if the data format you specify with <i>nFormat</i> or <i>cFormat</i> exists, but there is no data in the DataObject for that format. (The SetFormat method can be used to specify a data format before the corresponding data is placed on the DataObject with the SetData method.)</p>
</BODY>
</HTML>
