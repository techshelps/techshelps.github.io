<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_EdScrollToPos( ) API Library Routine Example</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<p class=label>
<b><a name="lng_edscrolltoposlp_rpx"></a><sup></sup>_EdScrollToPos(&nbsp;) API Library Routine Example</b></p>
<p>
The following example opens for editing a file specified by a parameter. After scrolling to the top of the file by calling _EdScrollToPos(&nbsp;), the procedure calls _EdPosInView(&nbsp;) to check whether the top of file and bottom of file are in view, and prints the results on the screen. Then it scrolls to the bottom of the file by calling _EdScrollToPos(&nbsp;), and again calls _EdPosInView(&nbsp;) to check whether the top of file and bottom of file are in view.</p>
<h4>Visual FoxPro Code</h4>
<pre><code>SET LIBRARY TO EDSCTOPO
= POSINVIEW("x")
</code></pre>
<h4>C Code</h4>
<pre><code>#include &lt;pro_ext.h&gt;

void putLong(long n)
{
 &nbsp; Value val;

 &nbsp; val.ev_type = 'I';
 &nbsp; val.ev_long = n;
 &nbsp; val.ev_width = 10;

 &nbsp; _PutValue(&amp;val);
}

FAR Example(ParamBlk FAR *parm)
{
#define pFILENAME ((char FAR *) _HandToPtr(parm-&gt;p[0].val.ev_handle))

 &nbsp; WHANDLE wh;
 &nbsp; EDENV EdEnv;

 &nbsp; if (!_SetHandSize(parm-&gt;p[0].val.ev_handle, 
 &nbsp;&nbsp;&nbsp;&nbsp; parm-&gt;p[0].val.ev_length+1)) {
 &nbsp;&nbsp;&nbsp;&nbsp; _Error(182); // "Insufficient memory"
 &nbsp; }
 &nbsp; pFILENAME[parm-&gt;p[0].val.ev_length] = '\0';

 &nbsp; _HLock(parm-&gt;p[0].val.ev_handle);
 &nbsp; wh = _EdOpenFile(pFILENAME, FO_READONLY);
 &nbsp; _HUnLock(parm-&gt;p[0].val.ev_handle);

 &nbsp; _EdGetEnv(wh, &amp;EdEnv);

 &nbsp; <span class=cfe><b>_EdScrollToPos(</b></span>wh, 0, FALSE<span class=cfe><b>)</b></span>;
 &nbsp; _PutStr("\n_EdScrollToPos(wh, 0)");
 &nbsp; _PutStr("\n_EdPosInView(wh, 0) =");
 &nbsp; putLong(_EdPosInView(wh, 0));
 &nbsp; _PutStr("\n_EdPosInView(wh, EdEnv.length) =");
 &nbsp; putLong(_EdPosInView(wh, EdEnv.length));

 &nbsp; <span class=cfe><b>_EdScrollToPos(</b></span>wh, EdEnv.length, FALSE<span class=cfe><b>)</b></span>;
 &nbsp; _PutStr("\n_EdScrollToPos(wh, EdEnv.length)");
 &nbsp; _PutStr("\n_EdPosInView(wh, 0) =");
 &nbsp; putLong(_EdPosInView(wh, 0));
 &nbsp; _PutStr("\n_EdPosInView(wh, EdEnv.length) =");
 &nbsp; putLong(_EdPosInView(wh, EdEnv.length));
}

FoxInfo myFoxInfo[] = {
 &nbsp; {"POSINVIEW", (FPFI) Example, 1, "C"},
};
FoxTable _FoxTable = {
 &nbsp; (FoxTable FAR *) 0, sizeof(myFoxInfo)/sizeof(FoxInfo), myFoxInfo
};
</code></pre>
</BODY>
</HTML>
