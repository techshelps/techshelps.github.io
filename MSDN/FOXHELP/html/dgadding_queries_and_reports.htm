<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Queries and Reports</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="dgadding_queries_and_reports"></a><sup></sup>Chapter 12: Adding Queries and Reports</h1>
<p>
Once you create tables and forms for your application, you can add queries and reports to select and display data for your users. Your queries can be directed to a variety of destinations so that you can use them in the other components of your application. You can also run reports separately without using a query. This chapter highlights some of the ways you can use queries, add reports, and expose queries and reports to the user.</p>
<p>
When you use a query or a view in your application, you are actually using a <a href="lngselect___sql.htm">SELECT&nbsp;-&nbsp;SQL</a> statement. This chapter describes how you can use a SELECT&nbsp;-&nbsp;SQL statement in your application whether you create it through a query defined in the Query Designer, a view defined in the View Designer, or code entered for an event or procedure. For detailed information about views, see Part 2, <a href="ugfinding_information.htm">Finding Information</a>, in the <i>User’s Guide</i>.</p>
<p>
This chapter discusses:</p>
<ul type=disc>
<li>
<a href="#dgadding_queries">Adding Queries</a></li>
<li>
<a href="#dgadding_reports_and_labels">Adding Reports and Labels</a></li>
<li>
<a href="#dgintegrating_queries_and_reports">Integrating Queries and Reports</a></li>
</ul>

<h2><a name="dgadding_queries"></a>Adding Queries</h2>
<p>
When you add queries to your application, you can combine a variety of data sources, finely filter records, manipulate data, and sort the results — all with the SELECT - SQL statement. By using the SQL statement, you have complete control over the results your query produces and where the results are stored.</p>
<p class=label>
<b>A query is a SELECT - SQL statement.</b></p>
<p>
<img src="afd12001.gif" border=0></p>
<p>
You can add SELECT -&nbsp; SQL statements to procedures or to event code. For more information about events, see Chapter 4, <a href="dgunderstanding_the_event_model.htm">Understanding the Event Model</a>.</p>
<h3>Creating SELECT - SQL Statements</h3>
<p class=label>
<b>To create a SELECT - SQL statement</b>
<ul type=disc>
<li>
Use the <a href="wndquery_designer.htm">Query Designer</a> or the <a href="wndquery_designer.htm">View Designer</a> to build the statement, then copy the contents of the SQL window into a code window.<p class=tl>
-or-</P></li>
<li>
In a code window, type the <a href="lngselect___sql.htm">SELECT - SQL</a> statement.</li>
</ul>
<p>
For example, you can select all the records from the <code>Customer</code> table in the <code>TasTrade</code> database where the <code>country</code> field contains the value “Canada”:</p>
<pre><code>SELECT * ;
 &nbsp; FROM tastrade!customer ;
 &nbsp; WHERE customer.country = "Canada"
</code></pre>
<p>
To execute the command immediately, you can enter the statement in the <a href="wndcommand_window.htm">Command</a> window. If you want each clause to appear on a separate line within the window, end each line except the last one with a semicolon so that Visual FoxPro processes the command only after the last line.</p>
<h3>Selecting a Number or Percentage of Records</h3>
<p>
If you only need a certain number or percentage of records from the result set that your query would return, you can use the Top property on the Miscellaneous tab in the Query or View Designers or you can add a TOP clause to your <a href="lngselect___sql.htm">SELECT - SQL</a> statement. The number you provide in a TOP clause can range from 1 to 32,767. For a percentage, you can use from 0.001 to 99.99.</p>
<p>
For example, if you want to select the top 10 customers with the highest order amounts, you can specify a GROUP BY on CUST_ID to show one aggregate record for each customer and sort by ORDER_AMT in the ORDER BY clause. To get a true TOP 10, you need to specify a descending sort on the ORDER_AMT so that the records with the highest order amounts appear first in the results. If you use an ascending sort, the result records are ordered from the least order amount to the most. The top records you select from the result set would actually have the lowest values.</p>
<pre><code>SELECT TOP 10 *;
FROM testdata!customer INNER JOIN testdata!orders ;
ON Customer.cust_id = Orders.cust_id;
GROUP BY Customer.cust_id;
ORDER BY Orders.order_amt DESC
</code></pre>
<h3>Specifying Destinations for Query Results</h3>
<p>
By using clauses of the <a href="lngselect___sql.htm">SELECT - SQL</a> statement, you can specify several destinations to store your query results.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=45%><b>To send results to this destination</b></td>
<td class=label width=55%><b>Use this clause</b></td>
</tr>
<tr valign=top>
<td width=45%>Separate table</td>
<td width=55%>INTO TABLE mytable</td>
</tr>
<tr valign=top>
<td width=45%>Array</td>
<td width=55%>INTO ARRAY aMyArray</td>
</tr>
<tr valign=top>
<td width=45%>Temporary table</td>
<td width=55%>INTO CURSOR mycursor</td>
</tr>
<tr valign=top>
<td width=45%>Active window</td>
<td width=55%>TO SCREEN</td>
</tr>
<tr valign=top>
<td width=45%>Browse window</td>
<td width=55%>The default if no other destination is specified.</td>
</tr>
</table><br>
<p>
Once the results are stored, you can use commands to control how the stored results are integrated for display or printing. </p>
<h4>Storing Results in a Table, Array, or Cursor</h4>
<p>
You can store your query results in a table, array, or cursor for other uses such as populating forms and printing reports and labels. If you want to store the results only temporarily, send the results to an array or cursor. If you want to store the results permanently, send the results to a table.</p>
<p class=label>
<b>To specify a table as the destination</b>
<ul type=disc>
<li>
Use the INTO clause of the <a href="lngselect___sql.htm">SELECT - SQL</a> statement to specify a destination.</li>
</ul>
<p>
The following example shows an INTO clause for a table:</p>
<pre><code>SELECT * ;
 &nbsp; FROM tastrade!customer ;
 &nbsp; WHERE customer.country = "Canada" ;
 &nbsp; INTO TABLE mytable
</code></pre>
<p class=label>
<b>To specify an array as the destination</b>
<ul type=disc>
<li>
Use the INTO clause of the <a href="lngselect___sql.htm">SELECT - SQL</a> statement to specify a destination.</li>
</ul>
<p>
The following example shows an INTO clause for an array:</p>
<pre><code>SELECT * ;
 &nbsp; FROM tastrade!customer ;
 &nbsp; WHERE customer.country = "Canada" ;
 &nbsp; INTO ARRAY aMyArray
</code></pre>
<p class=label>
<b>To specify a cursor as the destination</b>
<ul type=disc>
<li>
Use the INTO clause of the <a href="lngselect___sql.htm">SELECT - SQL</a> statement to specify a destination.</li>
</ul>
<p>
The following example shows an INTO clause for a cursor named <code>mycursor</code>:</p>
<pre><code>SELECT * ;
 &nbsp; FROM tastrade!customer ;
 &nbsp; WHERE customer.country = "Canada" ;
 &nbsp; INTO CURSOR mycursor
</code></pre>
<p>
If you create a table or an array, you can use it like any other table or array in Visual FoxPro. If you create a cursor, you can browse through its contents. The cursor is opened in the lowest available work area. You can access it by using the name you gave it in the SELECT - SQL statement.</p>
<p>
The following two procedures describe two common ways to include query results stored in tables and cursors into an application.</p>
<h4>Populating a Form Control</h4>
<p>
If you want to display your query results in a form, you can use a table, array, or cursor to populate a grid, list box, or combo box.</p>
<p class=label>
<b>To populate a list box or combo box control with a table or cursor</b>
<ol>
<li>
In the <a href="wndform_designer.htm">Form Designer</a>, modify the form that has the control you want to populate.<br><br></li>
<li>
Set the <a href="lngrowsourcetype_property.htm">RowSourceType</a> property to 3 - <b>SQL Statement</b>.<br><br></li>
<li>
In the control’s <a href="lngrowsource_property.htm">RowSource</a> property, enter a <a href="lngselect___sql.htm">SELECT - SQL</a> statement that includes an INTO TABLE or INTO CURSOR clause.</li>
</ol>
<p class=label>
<b>To populate a grid control with a table or cursor</b>
<ol>
<li>
In the <a href="wndform_designer.htm">Form Designer</a>, modify the form that has the control you want to populate.<br><br></li>
<li>
In the form’s <a href="lngload_event.htm">Load</a> event, enter a <a href="lngselect___sql.htm">SELECT - SQL</a> statement that includes an INTO TABLE or INTO CURSOR clause.<br><br></li>
<li>
Set the grid’s <a href="lngrecordsource_property.htm">RecordSource</a> property to the name of the table or cursor you created in Step 2.<br><br></li>
<li>
Set the grid’s <a href="lngrecordsourcetype_property.htm">RecordSourceType</a> property to <b>0</b> – <b>Table</b> (for a table) or <b>1</b> – <b>Alias</b> (for a cursor).</li>
</ol>
<h4>Printing Results in a Report or Label</h4>
<p>
If your report or label includes groups or you otherwise need to order the data, you can use the various clauses of the SELECT - SQL statement to get the exact results you need.</p>
<p class=label>
<b>To send results to an existing report or label</b>
<ul type=disc>
<li>
Use the <a href="lngselect___sql.htm">SELECT - SQL</a> statement with a REPORT or LABEL command.<p class=tl>
The following example uses the GROUP BY and ORDER BY clauses as well as the <a href="lngreport.htm">REPORT FORM</a> command:</P><pre><code>SELECT * ;
FROM tastrade!customer ;
WHERE customer.country = "Canada" ;
GROUP BY customer.region ;
ORDER BY customer.postal_code, customer.company_name ;
INTO CURSOR MyCursor
REPORT FORM MYREPORT.FRX
</code></pre>
<p class=tl>
The following example uses a <a href="lnglabel.htm">LABEL FORM</a> command:</P><pre><code>SELECT * ;
FROM tastrade!customer ;
WHERE customer.country = "Canada" ;
GROUP BY customer.region ;
ORDER BY customer.postal_code, customer.company_name ;
INTO CURSOR mycursor
LABEL FORM MYLABEL.LBX
</code></pre>
</li>
</ul>
<p>
While the SELECT - SQL statement is the most flexible method for populating your report or label, it is not the only method. For more information about setting report data sources, see the section <a href="#dgcontrolling_data_sources">Controlling Data Sources</a> later in this chapter. For more information about integrating the report destinations into your application, see <a href="#dgintegrating_queries_and_reports">Integrating Queries and Reports</a> later in this chapter.</p>
<h4>Displaying Results in a Window</h4>
<p>
If you want to display the results of your SELECT - SQL statement, you can send the results to a window. The Browse window is the default destination for query results and you don't need to include a destination clause. You can also send the results to the main Visual FoxPro window or another active window.</p>
<p class=label>
<b>To display results in the main Visual FoxPro window</b>
<ul type=disc>
<li>
Use the TO SCREEN clause of a <a href="lngselect___sql.htm">SELECT - SQL</a> statement.</li>
</ul>
<p class=label>
<b>To display results in another active window</b>
<ul type=disc>
<li>
Define a window, show it to activate it, and then run a SQL query or other command that displays results in a window.</li>
</ul>
<p>
This code example shows the definition for a temporary window titled “Top Customers” that displays the names of companies with more than $5,000 in total orders for the year.</p>
<p class=label>
<b>Displaying query results in a window</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=58%><b>Code</b></td>
<td class=label width=42%><b>Comment</b></td>
</tr>
<tr valign=top>
<td width=58%><pre><code>frmMyForm=createobj("form")
frmMyForm.Left = 1
frmMyForm.Top = 1 
frmMyForm.Width = 130
frmMyForm.Height = 25
frmMyForm.Caption = "Top Customers"
frmMyForm.Show</code></pre>
</td>
<td width=42%>Create and start a temporary window object.</td>
</tr>
<tr valign=top>
<td width=58%><pre><code>SELECT customer.company_name,
  SUM(orders.freight) ;
  FROM tastrade!customer,
  tastrade!orders ;
  WHERE customer.customer_id =
  orders.customer_id ;
  GROUP BY customer.company_name ;
  HAVING SUM(orders.freight) &gt; 5000 ;
  ORDER BY 2 DESC</code></pre>
</td>
<td width=42%>Enter a SELECT - SQL statement.</td>
</tr>
</table><br>

<h2><a name="dgadding_reports_and_labels"></a>Adding Reports and Labels</h2>
<p>
After you collect and organize your data, you can add reports or labels to your application to print the data or display it on the screen. You can control the data in your report through the data sources you choose, and manipulate and combine raw data with report variables. <i>Report variables</i> store values that are calculated and used in a report.</p>

<h3><a name="dgcontrolling_data_sources"></a>Controlling Data Sources</h3>
<p>
To control the data sources for a report, you can define a data environment that is stored with the report or you can activate specific data sources in code each time you run a report. For more information about using the Data Environment Designer, see Chapter 9, <a href="dgcreating_forms.htm">Creating Forms</a>.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=39%><b>To</b></td>
<td class=label width=61%><b>Add</b></td>
</tr>
<tr valign=top>
<td width=39%>Always use the same data sources.</td>
<td width=61%>Tables or views to the report’s data environment.</td>
</tr>
<tr valign=top>
<td width=39%></td>
<td width=61%><a href="lngdo.htm">DO</a> <i>query</i> or <a href="lngselect___sql.htm">SELECT - SQL</a> to the <a href="lnginit_event.htm">Init</a> event of the report’s data environment.</td>
</tr>
<tr valign=top>
<td width=39%>Use separate sets of data sources.</td>
<td width=61%><a href="lnguse.htm">USE</a> <i>table</i>, USE <i>view</i>, DO <i>query</i>, or SELECT - SQL to the <a href="lngclick_event.htm">Click</a> event or other code that precedes a REPORT or LABEL command.</td>
</tr>
</table><br>
<p>
If you use a table as the data source, use aliases on the fields in the report only if you don't plan to use the report with any other data source than the table itself. If you use a view or query as the data source and aliases are included in the report controls, the report might display the same record repeatedly on the report page.</p>
<h4>Controlling Record Order</h4>
<p>
You can use the data sources used by the report to control the order the records print in your report. The records are processed and printed in the order they appear in the table, view, or query. To order the records in a table, you can set an index in code or as part of the report's data environment. For a query, view, or SELECT – SQL code, you can use the ORDER BY clause. If you don't order the records using the data sources, the only way to use just the report to order the records is through the ORDER property on a cursor in the data environment.</p>
<h4>Controlling Record Selection</h4>
<p>
In addition to the order records appear in the report, you can select which records are printed by using the data source, the report printing options, or a combination of both.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=39%><b>To use</b></td>
<td class=label width=61%><b>Add</b></td>
</tr>
<tr valign=top>
<td width=39%>View or query</td>
<td width=61%>Conditions in the <a href="cmdquery_and_view_designers_filter_tab.htm">Filter</a> tab</td>
</tr>
<tr valign=top>
<td width=39%><a href="lngselect___sql.htm">SELECT - SQL</a></td>
<td width=61%>WHERE or HAVING clause</td>
</tr>
<tr valign=top>
<td width=39%><a href="wndreport_designer.htm">Report Designer</a></td>
<td width=61%>Setting in the <a href="cmdprint_options_dialog_box.htm">Print Options</a> dialog box</td>
</tr>
<tr valign=top>
<td width=39%><a href="lngreport.htm">REPORT</a> command</td>
<td width=61%>Scope, FOR, or WHILE expressions</td>
</tr>
<tr valign=top>
<td width=39%>Table</td>
<td width=61%>Filtered index</td>
</tr>
</table><br>
<h4>Protecting a Report's Data Session</h4>
<p>
To prevent your report's data session from being affected by the global data session as a result of changes made in other designers, you can set the report's data session to Private.</p>
<p class=label>
<b>To set a private data session</b>
<ul type=disc>
<li>
From the <b>Report</b> menu, choose <b>Private Data Session</b>.</li>
</ul>
<p>
For more information about using the <a href="wnddata_environment_designer.htm">Data Environment Designer</a>, see Chapter 9, <a href="dgcreating_forms.htm">Creating Forms</a>. For more information about data sessions, see Chapter 17, <a href="dgprogramming_for_shared_access.htm">Programming for Shared Access</a>.</p>
<p>
If you want to display your query results in a graph, you can use the <a href="wizgraph_wizard.htm">Graph Wizard</a>, the <a href="wndquery_designer.htm">Query Designer</a>, or a <a href="lngselect___sql.htm">SELECT - SQL</a> command. To use the Query Designer or a SELECT - SQL command, follow the steps below. You need to include at least one numeric field in your result set to create a graph. After completing the query, you can select one of six types of graphs, each with two variations.</p>
<p class=label>
<b>To modify the graph</b>
<ol>
<li>
Browse the table containing the graph.<br><br></li>
<li>
Double-click the general field to display the graph.<br><br></li>
<li>
Double-click the graph to open Microsoft Graph and display the Microsoft Graph toolbar.<br><br></li>
<li>
Modify the graph in Microsoft Graph.</li>
</ol>
<h3>Refining Page Layout</h3>
<p>
You can refine the layout of your report pages by defining multiple columns and changing the area of the page reserved for a band by changing the height of each band.</p>
<h4>Defining Multiple Columns on a Page</h4>
<p>
To create phone directories, mailing labels, or other types of listings, you can define multiple columns per page.</p>
<p class=label>
<b>To define a multi-column report</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Page Setup</b>.<p class=label>
<b>Page Setup dialog box with columns defined</b>
<p>
<img src="afd12003.gif" border=0></P></li>
<li>
In the <b>Columns</b> area, enter the number of columns for the page. This is the same as the number of records you want to print across the page.<br><br></li>
<li>
In the <b>Width</b> box, enter a value for column width.<br><br></li>
<li>
In the <b>Spacing</b> box, enter a value for the space you want to appear between each column.<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If you're printing groups set to start on a new page, don't use the Print Order option.</p></li>
<li>
Choose <b>OK</b>.<p class=tl>
The <b>Report Designer</b> reflects your changes.</P></li>
</ol>
<p>
If your layout already contained report controls in the Detail band, you may need to move or resize them to fit within the boundaries of the new column.</p>
<h4>Setting Report Band Height</h4>
<p>
While designing your report, you can change the height of a report band. The height of a report band determines the amount of space that each report band uses on the page within the page margins. For example, if the Title band is set at a half inch, the Title will appear in the first half inch of space after the top margin. The detail band shows the amount of space devoted to each printed record. The following information applies to all of the report bands. You can set additional parameters for Group Header and Footer bands. For more information about Group bands, see the section “Grouping Data on Your Layout” in Chapter 7, <a href="ugdesigning_reports_and_labels.htm">Designing Reports and Labels</a>, in the <i>User’s Guide.</i></p>
<p class=label>
<b>To set a precise band height</b>
<ol>
<li>
Double-click the bar for the appropriate band.<p class=tl>
A dialog box for the band appears.</P></li>
<li>
In the <b>Height</b> box, enter a value for the height.<br><br></li>
<li>
Choose <b>OK</b>.</li>
</ol>
<h3>Using Expressions and Functions in Field Controls</h3>
<p>
You can include field controls in your report or label to display values from a variety of expressions, including fields from tables and views, variables, and calculations. The following sections describe some commonly used expressions and functions such as multiple fields, dates, and page numbers.</p>
<h4>Adding Field Controls</h4>
<p>
You can add field controls in several ways.</p>
<p class=label>
<b>To add table fields from the data environment</b>
<ol>
<li>
Open the report’s data environment.<br><br></li>
<li>
Select a table or view.<br><br></li>
<li>
Drag fields onto the layout.</li>
</ol>
<p class=label>
<b>To add table fields from the toolbar</b>
<ol>
<li>
From the <b>Report Controls</b> toolbar, insert a <b>Field</b> control.<br><br></li>
<li>
In the <a href="cmdreport_expression_dialog_box.htm">Report Expression</a> dialog box, choose the dialog button after the <b>Expression</b> box.<br><br></li>
<li>
In the <b>Fields</b> box, double-click the name of the field you want.<p class=tl>
The table name and field name appear in the <b>Expression for Field on Report</b> box.</P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If the <b>Fields</b> box is empty, add a table or view to the data environment.</p><p class=atl>
You don't have to keep the table name alias in the expression. You can delete it or you can clear the <a href="wndexpression_builder_dialog_box.htm">Expression Builder</a> options.</p></li>
<li>
Choose <b>OK</b>.<br><br></li>
<li>
In the <b>Report Expression</b> dialog box, choose <b>OK</b>.</li>
</ol>
<p>
After entering the expression, you can change the format or set printing, position, or stretch options. For more information, see “Adding a Comment to a Control” in Chapter 7, <a href="ugdesigning_reports_and_labels.htm">Designing Reports and Labels</a>, in the <i>User’s Guide, </i>and see <a href="#dgsetting_a_control_s_print_options">Setting a Control’s Print Options</a> later in this chapter.</p>
<h4>Inserting Concatenated Field Controls</h4>
<p>
After you add your table fields, you might notice that they don't print the way you would like on the page. For example, printing the field controls for City, Region, and Postal Code separately produces unwanted spaces between each value. You can trim or concatenate the table fields into one field expression. The space required by each value for this control will vary. You can set the control to adjust for each value.</p>
<p class=label>
<b>To combine several table fields into an expression</b>
<ol>
<li>
From the <b>Report Controls</b> toolbar, insert a <b>Field</b> control.<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Size the field to the least amount of room the expression will require. If more space is needed, you can set the control to stretch for larger values, but you can’t set it to shrink if less space is needed.</p></li>
<li>
In the <a href="cmdreport_expression_dialog_box.htm">Report Expression</a> dialog box, select the dialog button after the <b>Expression</b> box.<br><br></li>
<li>
In the <a href="wndexpression_builder_dialog_box.htm">Expression Builder</a>, select <b>ALLTRIM(expC)</b> from the <b>String</b> box.<p class=tl>
The string function appears in the <b>Expression</b> box with <code>expC</code> selected.</P></li>
<li>
Double-click the first field name you want to appear in the control.<p class=tl>
The field name replaces the <code>expC</code>.</P></li>
<li>
Type a plus sign after the field name or select + from the <b>String</b> functions box.<br><br></li>
<li>
Type <b>,</b> or select <b>Text</b> from the String functions list and then enter a comma.<br><br></li>
<li>
Repeat steps 3 and 4 for additional fields to complete the expression and then choose <b>OK</b>.<br><br></li>
<li>
In the <b>Report Expression</b> dialog box, select <b>Stretch with Overflow</b>.<p class=tl>
When the control is populated, the space allocated to the control adjusts downward to accommodate the value of the expression. For more information about <b>Stretch with Overflow</b>, see <a href="#dgprinting_controls_with_variable_length_values">Printing Controls with Variable-Length Values</a> later in this chapter.</P></li>
</ol>
<p>
To combine several fields in an expression, place an <a href="lngalltrimlp_rp.htm">ALLTRIM(&nbsp;)</a> function before each field name, place punctuation inside quotation marks, and place a plus sign between each of the elements in the expression. If the field value lengths don't vary, such as with postal codes or abbreviations, you can insert just the field name, as in this example:</p>
<pre><code>ALLTRIM(city)+", "+region+"&nbsp; "+postal_code
</code></pre>
<p>
Notice the spaces in quotes, rather than a comma, to separate the region and the postal code.</p>
<p>
For more examples, see the report Invoice.frx in the Visual Studio …\Sample\Vfp98\Solution\Reports directory.</p>
<h4>Trimming and Concatenating Character Expressions</h4>
<p>
To quickly trim and concatenate character expressions in the Expression Builder, you can place commas between character expressions. The value of the expression preceding the comma is trimmed. You can also use semicolons to place the expression on a new line, provided that the trimmed value has a length greater than zero. The following example shows character expressions for fields in a mailing address:</p>
<pre><code>contact_name; address; city, region, postal_code
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Use these when you don't want to include punctuation in the value.</p>
<p>
If you use these methods, make sure the field is set to Stretch with Overflow. For more information, see <a href="#dgprinting_controls_with_variable_length_values">Printing Controls with Variable-Length Values</a> later in this chapter.</p>
<h4>Inserting the Current Date</h4>
<p>
You can insert a field control that prints the current date.</p>
<p class=label>
<b>To insert the current date</b>
<ol>
<li>
From the <b>Report Controls</b> toolbar, insert a <b>Field</b> control.<br><br></li>
<li>
In the <a href="cmdreport_expression_dialog_box.htm">Report Expression</a> dialog box, select the dialog button after the <b>Expression</b> box.<br><br></li>
<li>
In the <a href="wndexpression_builder_dialog_box.htm">Expression Builder</a>, select <b>DATE(&nbsp;)</b> from the <b>Date</b> list.<br><br></li>
<li>
Choose <b>OK</b>.<br><br></li>
<li>
In the <b>Report Expression</b> dialog box, choose <b>OK</b>.</li>
</ol>
<h4>Inserting a Page Number</h4>
<p>
The Page Header or Footer bands usually contain a page number. If you use a wizard or Quick Report, a page number is inserted for you into the Page Footer band.</p>
<p class=label>
<b>To insert a page number</b></p>
<p>
<img src="b004.gif" border=0>
<ol>
<li>
From the <b>Report Controls</b> toolbar, insert a <b>Field</b> control.<br><br></li>
<li>
In the <a href="cmdreport_expression_dialog_box.htm">Report Expression</a> dialog box, select the dialog button after the <b>Expression</b> box.<br><br></li>
<li>
In the <a href="wndexpression_builder_dialog_box.htm">Expression Builder</a>, select <b>_pageno</b> from the <b>Variables</b> list.<br><br></li>
<li>
Choose <b>OK</b>.<br><br></li>
<li>
In the <b>Report Expression</b> dialog box, choose <b>OK</b>.<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;You can use this procedure to insert any of the system variables from the Variables list into your report.</p></li>
</ol>
<h3>Defining Report Variables</h3>
<p>
To manipulate data and display calculated results in a report, you can use report variables. Using report variables, you can calculate values and then use those values to calculate subsequent values.</p>
<p class=label>
<b>To define a report variable</b>
<ol>
<li>
Open or create a report.<br><br></li>
<li>
From the <b>Report</b> menu, choose <b>Variables</b>.<br><br></li>
<li>
In the <a href="cmdreport_variables_dialog_box.htm">Report Variables</a> dialog box, select the <b>Variables</b> box and type a name for the variable.<br><br></li>
<li>
In the <b>Value to store</b> box, type a field name or any other expression.<br><br></li>
<li>
If appropriate, select a calculation option.<br><br></li>
<li>
If appropriate, in the <b>Initial value</b> box, type an expression that sets the initial value.<br><br></li>
<li>
Choose <b>OK</b>.<p class=tl>
You can use the variable in any expression you enter in the report.</P></li>
</ol>
<p>
To count all the Canadian entries in the Company table, use this expression and select Count as the calculation option.</p>
<pre><code>IIF(country="Canada",1,0)
</code></pre>
<p>
The following example shows three variables for a simple time sheet:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>To store this value</b></td>
<td class=label width=30%><b>Create this variable</b></td>
<td class=label width=39%><b>Using this expression</b></td>
</tr>
<tr valign=top>
<td width=31%>Time employee arrived</td>
<td width=30%><pre><code>tArrive</code></pre>
</td>
<td width=39%><pre><code>hour_in + (min_in / 60)</code></pre>
</td>
</tr>
<tr valign=top>
<td width=31%>Time employee left</td>
<td width=30%><pre><code>tLeave</code></pre>
</td>
<td width=39%><pre><code>hour_out + (min_out / 60)</code></pre>
</td>
</tr>
<tr valign=top>
<td width=31%>Total time employee was present</td>
<td width=30%><pre><code>tDayTotal</code></pre>
</td>
<td width=39%><pre><code>tLeave - tArrive</code></pre>
</td>
</tr>
</table><br>
<p>
You can use the <code>tDayTotal</code> variable in a variety of other calculations, such as the number of hours worked in a week, a month, or a year; the average number of hours worked each day; and so on.</p>
<p>
For examples of report variables, see the reports Percent.frx and Invoice.frx in the Visual Studio …\Samples\Vfp98\Solution\Reports directory.</p>
<h4>Reordering Report Variables</h4>
<p>
Report variables are evaluated in the order that they appear in the list and can affect the value of expressions that use them. For example, if variable 1 is used to define the value of variable 2, variable 1 must appear before variable 2. In the previous time sheet example, <code>tArrive</code> and <code>tLeave</code> must precede <code>tDayTotal</code>.</p>
<p class=label>
<b>To change the order of report variables</b>
<ol>
<li>
From the <b>Report</b> menu, choose <b>Variables</b>.<br><br></li>
<li>
In the <b>Variable</b> box, drag the button to the left of the variable to rearrange the order.<br><br></li>
<li>
Choose <b>OK</b>.</li>
</ol>
<h4>Setting a Variable’s Initial Value</h4>
<p>
If you use a variable in calculations, be sure that you initialize the variable with a non-zero value to avoid a division-by-zero error. If you don't specify a value, Visual FoxPro assigns a default value of 0.</p>
<p class=label>
<b>To set a variable's initial value</b>
<ol>
<li>
From the <b>Report</b> menu, choose <b>Variables</b>.<br><br></li>
<li>
In the <b>Variable</b> box, select the variable you want to set.<br><br></li>
<li>
In the <b>Initial value</b> box, enter the value.<br><br></li>
<li>
Choose <b>OK</b>.</li>
</ol>
<p>
If you reorder the groups in your report, your report variables might not be resetting on the correct field. For example, if your report has two groups, the first grouping by country and the second grouping by date, and you switch the order of the groups, the variables still reset according to the original positions of the groups.</p>
<p>
You can change the value of a calculation by specifying when the variable is reset. By default, Visual FoxPro resets the report variables at the end of the report.</p>
<p class=label>
<b>To reset a variable at the end of a report, a page, or a column</b>
<ol>
<li>
From the <b>Report</b> menu, choose <b>Variables</b>.<br><br></li>
<li>
In the <b>Reset at</b> box, choose an option.<br><br></li>
<li>
Choose <b>OK</b>.</li>
</ol>
<p class=label>
<b>To reset a variable on entry or exit of any band</b>
<ol>
<li>
In the <a href="wndreport_designer.htm">Report Designer</a>, open the report.<br><br></li>
<li>
Double-click the bar for the report band.<br><br></li>
<li>
In the <b>Run expression</b> area of the band’s dialog box, choose the dialog button at the end of the <b>On entry</b> or <b>On exit</b> box.<br><br></li>
<li>
Enter an expression to reset the variable each time the band is entered or exited.</li>
</ol>
<h3>Formatting Field Controls</h3>
<p>
After inserting a field control, you can change the control’s data type and print format. Data types can be Character, Numeric, or Date. Each of these data types has its own format options, including the option to create your own format template. The format determines how the field is displayed when the report or label is printed.</p>
<p>
You can enter format functions directly in the Expressions box of the <a href="cmdreport_expression_dialog_box.htm">Report Expression</a> dialog box or you can select options from the Format dialog box.</p>
<p>
Typically, you might convert all alphabetical output to uppercase, insert commas or decimal points in numeric output, display numeric output in currency format, or convert one date format to another.</p>
<h4>Formatting Options for Report Controls</h4>
<p>
For field controls, you can set a variety of format options for each data type.</p>
<p class=label>
<b>To format a field control</b>
<ol>
<li>
Choose the <b>Field</b> control.<br><br></li>
<li>
In the <a href="cmdreport_expression_dialog_box.htm">Report Expression</a> dialog box, choose the dialog button after the <b>Format</b> box.<br><br></li>
<li>
In the <b>Format</b> dialog box, select the data type for the field: <b>Character</b>, <b>Numeric</b>, or <b>Date</b>.<p class=tl>
The <b>Editing options</b> area displays the formatting options available for that data type.</P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This data type applies only to the report control. It reflects the data type of the expression and doesn't change the data type of the field in the table.</p></li>
<li>
Select the justification and format options you want.</li>
</ol>
<p>
The Format dialog box displays different options depending on the data type you choose. You can also create a format template by entering characters in the Format box.</p>
<h4>Justifying Text in a Field</h4>
<p>
You can justify field contents within the control in two ways. This setting does not change the position of the control on the report, only the contents within the space of the control.</p>
<p class=label>
<b>To justify text in a field control</b>
<ol>
<li>
Select the controls you want to change.<br><br></li>
<li>
From the <b>Format</b> menu, choose <b>Text Alignment</b>.<br><br></li>
<li>
From the submenu, choose the appropriate command.</li>
</ol>
<p class=label>
<b>To justify text in a field</b>
<ol>
<li>
Choose the <b>Field</b> control.<br><br></li>
<li>
In the <a href="cmdreport_expression_dialog_box.htm">Report Expression</a> dialog box, choose the dialog button after the <b>Format</b> box.<p class=label>
<b>Format dialog box for a Numeric expression</b>
<p>
<img src="afd12004.gif" border=0></P></li>
<li>
In the <b>Format</b> dialog box, select the data type for the field: <b>Character</b>, <b>Numeric</b>, or <b>Date</b>.<br><br></li>
<li>
Select the justification and format options you want.</li>
</ol>
<h4>Defining Field Format Templates</h4>
<p>
A format template allows you to customize the format of the field. By entering a combination of characters and codes in the Format box of the <a href="cmdreport_expression_dialog_box.htm">Report Expression</a> dialog box or the Format dialog box, you can create a wide variety of print formats. The characters you enter appear as literal text along with the field value. The codes you enter determine the appearance of the field output. For example, if you use the following format template for a 10 -digit numeric field, the characters (parentheses, spaces, and dashes) are printed along with the numeric data.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=38%><b>Format Template</b></td>
<td class=label width=62%><b>Printed Output</b></td>
</tr>
<tr valign=top>
<td width=38%>(999) 999-9999</td>
<td width=62%>(123) 456-7890</td>
</tr>
</table><br>
<h4>Changing Fonts</h4>
<p>
You can change the font and size of text for each field or label control or you can change the default font for the report.</p>
<p class=label>
<b>To change fonts and size in a report</b>
<ol>
<li>
Select the control.<br><br></li>
<li>
From the <b>Format</b> menu, select <b>Font</b>.<p class=tl>
The <b>Font</b> dialog box appears.</P></li>
<li>
Select the appropriate font and point size and then choose <b>OK</b>.</li>
</ol>
<p class=label>
<b>To change the default font</b>
<ol>
<li>
From the <b>Report</b> menu, choose <b>Default Font</b>.<br><br></li>
<li>
In the <b>Font</b> dialog box, select the appropriate font and point size you want as the default and then choose <b>OK</b>.<p class=tl>
Only the controls inserted after you changed the default font will reflect the new font settings. To change existing objects, select them all, and then change the font using the Font option on the Format menu.</P></li>
</ol>
<h4>Cropping a Picture or OLE Object</h4>
<p>
The picture or OLE object you inserted might not fit the frame you drew when you created the control. By default, the picture or object retains its original size. You can clip or scale it to fit into your frame.</p>
<p>
If the picture or OLE object is bigger than the frame you created in the Report Designer, only a portion of the picture or object appears in the frame. The picture or object is anchored at the top and at the left of the frame. You cannot see the lower right portion that extends beyond the frame.</p>
<p class=label>
<b>To fit a picture in the frame</b>
<ol>
<li>
In the <a href="wndreport_designer.htm">Report Designer</a>, create a <a href="ctlole_bound_control.htm">Picture/OLE Bound Control</a>.<br><br></li>
<li>
In the <a href="cmdreport_picture_dialog_box.htm">Report Picture</a> dialog box, select <b>Scale picture – Retain shape</b>.</li>
</ol>
<p>
The whole picture appears, filling as much of the frame as possible while retaining its relative proportions. This protects your picture from vertical or horizontal distortion.</p>
<p class=label>
<b>To fill the frame with the picture</b>
<ol>
<li>
In the <b>Report Designer</b>, create a <b>Picture/OLE Bound Control</b>.<br><br></li>
<li>
In the <b>Report Picture</b> dialog box, select <b>Scale picture – Fill the frame</b>.</li>
</ol>
<p>
The whole picture changes to fill the frame that you sized. If necessary, the picture is stretched vertically or horizontally to fit the frame.</p>
<p>
To see an example of a report with pictures, see the report Wrapping.frx in the Visual Studio …\Sample\Vfp98\Solution directory.</p>
<h4>Centering an OLE Object</h4>
<p>
The OLE objects included in a General field can vary in shape and size. If the object in a General field is smaller than the frame, it appears in the upper left corner of the frame. You can center it to ensure that all objects smaller than the frame are centered in the frame in the report or label. File pictures don't need to be centered because they don't vary.</p>
<p class=label>
<b>To center General field OLE objects</b>
<ol>
<li>
In the <a href="wndreport_designer.htm">Report Designer</a>, create a <a href="ctlole_bound_control.htm">Picture/OLE Bound Control</a>.<br><br></li>
<li>
In the <a href="cmdreport_picture_dialog_box.htm">Report Picture</a> dialog box, select <b>Center picture</b>.</li>
</ol>
<p>
The printed OLE objects are centered within the area when the report is previewed or printed.</p>
<h4>Changing Colors of Report Controls</h4>
<p>
You can change the color of a field, label, line, or rectangle.</p>
<p class=label>
<b>To change colors</b>
<ol>
<li>
Select the controls to change.<br><br></li>
<li>
In the <b>Color Palette</b> toolbar, choose <b>Foreground Color</b> or <b>Background Color</b>.<br><br></li>
<li>
Select the color you want.</li>
</ol>
<h3>Saving a Report as HTML</h3>
<p>
You can use the <b>Save As HTML</b> option on the <b>File</b> menu when you're creating a report to save the contents of a form as an HTML (Hypertext Markup Language) file.</p>
<p class=label>
<b>To save a report as HTML</b>
<ol>
<li>
Open the report.<br><br></li>
<li>
Choose <b>Save As HTML</b> on the <b>File</b> menu. (You will be asked to save the report if it has been modified.)<br><br></li>
<li>
Enter the name of the HTML file to create and choose <b>Save</b>.</li>
</ol>
<h3>Setting Print Options for Controls</h3>
<p>
The general layout and band position of your controls determine the time and place they are printed. You can also set specific print options for each control. Each control has a default size based either on its value (fields and labels) or the size you created (lines, rectangles, and pictures). The length of the control on the layout defines the display width of the control. Because the value of some controls will vary from record to record, you can set the height of the control to stretch downward to display the entire value. If you don't set it to stretch, the value will be truncated within the display width. You cannot resize Label controls, but you can resize all other controls.</p>

<h4><a name="dgprinting_controls_with_variable_length_values"></a>Printing Controls with Variable-Length Values</h4>
<p>
If you want a control to use only the space needed by its value, you can set it to stretch. For example, the values in an expression can vary from record to record. Rather than allot a fixed amount of space on the report that accommodates the longest value, you can set the control to stretch downward to display the entire value. You can set controls below the stretching control to float down the page relative to the stretching control.</p>
<p class=label>
<b>Examples of controls set to stretch and float</b></p>
<p>
<img src="afd12005.gif" border=0></p>
<p>
The stretch option is available for fields, vertical lines, rectangles, and rounded rectangles.</p>
<p>
For an example of controls that stretch and float, see the report Wrapping.frx in the Visual Studio …\Sample\Vfp98\Solution\Reports directory.</p>
<p class=label>
<b>To set a field to stretch with its value</b>
<ol>
<li>
Double-click the field control to display its dialog box.<br><br></li>
<li>
Select <b>Stretch with overflow</b>.</li>
</ol>
<p>
Controls that are placed relative to controls that stretch must be set to float or they will be overwritten.</p>
<p class=label>
<b>To set a control to float</b>
<ol>
<li>
Double-click the control to display its dialog box.<br><br></li>
<li>
In the control’s dialog box, select <b>Float</b>.<p class=atl>
<B><b>Caution</b></B>&nbsp;&nbsp;&nbsp;Some of your data could be overwritten during printing if: (1) you position a field relative to the bottom of the band and include <i>below</i> this field another field that is positioned relative to the top of the band and can stretch; or (2) you position a field relative to the top of the band and include <i>above</i> this field another field that is positioned relative to the top of the band and can stretch.</p></li>
</ol>
<p>
You can also set lines, rectangles, and rounded rectangles to stretch. They can stretch relative to the band or, if part of a group of controls, they can stretch relative to the largest control in the group.</p>
<p class=label>
<b>To set a line or rectangle to stretch</b>
<ol>
<li>
Double-click the control to display its dialog box.<br><br></li>
<li>
In the <b>Stretch downwards</b> area, select an option.</li>
</ol>
<p class=label>
<b>To print a border around a stretchable control</b>
<ol>
<li>
Draw a rectangle around the stretchable controls.<br><br></li>
<li>
Double-click the rectangle to display the <a href="cmdrectangleslline_dialog_box.htm">Rectangle/Line</a> dialog box.<br><br></li>
<li>
In the <b>Stretch downwards</b> area, select <b>Stretch relative to the tallest object in group</b>.<br><br></li>
<li>
Choose <b>OK</b>.<br><br></li>
<li>
Drag a selection box around the rectangle.<br><br></li>
<li>
From the <b>Format</b> menu, choose <b>Group</b>.<p class=tl>
Selection handles appear at the corners of the rectangle. From now on you can treat all of the controls as one. The rectangle will stretch along with the stretchable field. Regardless of how far down the value in the field stretches, the rectangle will maintain its border around the field. You can place two of these groups side by side in the layout and one will not be affected by the stretching of the other.</P></li>
</ol>
<p class=label>
<b>To print one stretchable control below another</b>
<ol>
<li>
Insert the two controls one below the other in the layout.<br><br></li>
<li>
Double-click the top control to display the control’s dialog box.<br><br></li>
<li>
In the <b>Field Position</b> area, select <b>Fix relative to top band</b>, and then choose <b>OK</b>.<br><br></li>
<li>
Double-click the bottom control to display the control’s dialog box.<br><br></li>
<li>
In the <b>Field Position</b> area, select <b>Float</b>, and then choose <b>OK</b>.</li>
</ol>
<p>
The two record values will print in their entirety and will not overwrite each other.</p>

<h4><a name="dgsetting_a_control_s_print_options"></a>Setting a Control’s Print Options</h4>
<p>
You can control when and how often each report control is printed in your report. For more information about a control’s print options, see <a href="cmdprint_when_dialog_box.htm">Print When Dialog Box</a>.</p>
<h4>Suppressing Repeated Values</h4>
<p>
For field controls, you can suppress values repeated for consecutive records so that the value is printed once for the first record but doesn't appear for subsequent records until the value changes. For example, if you're printing an invoice, and one of the fields contains the date of the transaction, the date would only be printed once for transactions that took place on the same date.</p>
<p class=label>
<b>To suppress repeated values</b>
<ol>
<li>
Double-click the control to display the control’s dialog box.<br><br></li>
<li>
Choose <b>Print When</b> to display the <b>Print When</b> dialog box.<p class=label>
<b>Print When dialog box</b>
<p>
<img src="afd12006.gif" border=0></P></li>
<li>
In the <b>Print Repeated Values</b> area, select <b>No</b>, and then choose <b>OK</b>.</li>
</ol>
<p class=label>
<b>To repeat only on a new page or column</b>
<ol>
<li>
Double-click the control.<br><br></li>
<li>
Choose <b>Print When</b>.<br><br></li>
<li>
In the <b>Print repeated values</b> area, select <b>No</b>.<br><br></li>
<li>
In the <b>Also print</b> area, select <b>In first whole band of new page/column</b>, and then choose <b>OK</b>.</li>
</ol>
<p class=label>
<b>To repeat when the detail band overflows to a new page or column</b>
<ol>
<li>
Double-click the control.<br><br></li>
<li>
Choose <b>Print When</b>.<br><br></li>
<li>
In the <b>Also Print</b> area, select <b>When detail overflows to new page/column</b>, and then choose <b>OK</b>.</li>
</ol>
<h4>Building Print Expressions</h4>
<p>
You can add expressions to a control: they are evaluated before the field prints. If the expression evaluates to false (.F.), the field will not print. If you add an expression, all of the other options in the Print When dialog box are disabled except Remove Line If Blank.</p>
<p>
For examples of Print When conditions, see the reports Colors.frx and Ledger.frx in the Visual Studio …\Sample\Vfp98\Solution\Reports directory.</p>
<p class=label>
<b>To add a print expression</b>
<ol>
<li>
Double-click the control.<br><br></li>
<li>
Choose <b>Print When</b>.<br><br></li>
<li>
In the <b>Print only when expression is true</b> box, enter an expression.<p class=tl>
-or-</P><p class=tl>
Click the dialog button to create an expression with the <a href="wndexpression_builder_dialog_box.htm">Expression Builder</a>.</P></li>
</ol>
<h4>Suppressing Blank Lines</h4>
<p>
Your report may include records that don't contain values for every field control. By default, Visual FoxPro leaves the area for that field blank. You can remove these blank areas to create a more pleasing and continuous display of the information.</p>
<p class=label>
<b>To suppress blank lines</b>
<ol>
<li>
Double-click the control that's likely to cause blank lines in the report.<br><br></li>
<li>
Choose <b>Print When</b>.<br><br></li>
<li>
Select <b>Remove line if blank</b>.</li>
</ol>
<p>
Visual FoxPro will remove the line from the report if it evaluates to blank. If the field doesn’t print or if the table field is empty, Visual FoxPro checks for other controls in the line. If none are found, the line is removed. If you don't select this option and no other controls are on the same line, a blank line is printed.</p>
<h3>Setting Print Options for Groups</h3>
<p>
You can control how groups are printed in your report. Sometimes you may want each group to start on a separate page or you may want to control when the group header prints.</p>
<h4>Setting Group Page Breaks</h4>
<p>
In addition to selecting the field or expression to be grouped, the Data Grouping dialog box allows you to specify page break options for groups.</p>
<h4>Choosing a Group Header Option</h4>
<p>
You might want your groups to appear in the next column for multi-column reports, on a new page for forms, or with a new page numbered at 1. The <a href="cmddata_grouping_dialog_box.htm">Data Grouping</a> dialog box offers four options to accomplish these tasks. You can:</p>
<ul type=disc>
<li>
Start a group on a new column.</li>
<li>
Start each group on a new page.</li>
<li>
Reset the page number to 1 for each group.</li>
<li>
Reprint the group header on each page.</li>
</ul>
<p>
After you enter an expression, you can select these options from the Group Properties area.</p>
<h4>Preventing Orphaned Group Headers</h4>
<p>
Sometimes a group may print partially on one page and then finish on the next. To avoid a group header from printing near the bottom of the page with the majority of records on the next page, you can set the minimum distance from the bottom that a group header will print. If the header would be positioned closer to the bottom of the page than the number of inches or centimeters you enter, Visual FoxPro prints the header on a new page.</p>
<p class=label>
<b>To prevent orphaned group headers</b>
<ol>
<li>
From the <b>Report</b> menu, choose <b>Data Grouping</b>.<br><br></li>
<li>
In the <a href="cmddata_grouping_dialog_box.htm">Data Grouping</a> dialog box, choose or enter a value in the <b>Start group on new page</b> box.<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;To determine a good value for orphan control, add the Group Header height to one to three times the Detail height.</p></li>
</ol>
<h4>Printing Suppressed Values When the Group Changes</h4>
<p>
If repeated values are suppressed, you may want them to print when a particular group changes.</p>
<p class=label>
<b>To print repeated values when the group changes</b>
<ol>
<li>
Double-click the control to display the control’s dialog box.<br><br></li>
<li>
Choose the <b>Print When</b> button to display the <b>Print When</b> dialog box.<br><br></li>
<li>
Select <b>When this group changes</b>.<p class=tl>
The groups defined for the report appear in the box.</P></li>
<li>
Select a group from the box, and then choose <b>OK</b>.</li>
</ol>
<h4>Repeating Group Headers</h4>
<p>
When a group continues onto the next page, you might want the group header to repeat at the top of the group of continued information. If you have multiple data groups on your report, the header on the subsequent pages will be from the last group in the group list. Place all of the controls you want to print for the group header in the header band of the last group on the list.</p>
<p class=label>
<b>To repeat the group header on the next page</b>
<ul type=disc>
<li>
In the <a href="cmddata_grouping_dialog_box.htm">Data Grouping</a> dialog box, select the group you want to repeat and then choose <b>Reprint group header on each page</b>.<p class=tl>
If you don't want to repeat the group header, clear this check box.</P></li>
</ul>
<h3>Controlling Report and Label Output</h3>
<p>
You can control where report and label output is sent by using one of these keywords with the <a href="lngreport.htm">REPORT</a> or <a href="lnglabel.htm">LABEL</a> command:</p>
<ul type=disc>
<li>
PRINT</li>
<li>
PREVIEW</li>
<li>
FILE</li>
</ul>
<p>
If you don't use any keywords, the report is sent to the screen or active window.</p>
<h4>Selecting Records to Print</h4>
<p>
When you print a report, you might want to limit the number of records that appear in the report by providing selection criteria. You can:</p>
<ul type=disc>
<li>
Choose a scope of records by specifying a quantity or range.</li>
<li>
Build a FOR expression that selects records that match a condition.</li>
<li>
Build a WHILE expression that selects records until one record is found that doesn't match a condition.</li>
</ul>
<p>
You can use any combination of these options. The WHILE expression overrides the other criteria.</p>
<h4>Printing a Quantity or Range of Records</h4>
<p>
One way you can limit the number of records is to specify a quantity or range of records. Using the Scope option, you can select a single record or a group of records positioned sequentially in the file.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The active index and the current record pointer affect the results of the scope options Next and Rest. For example, the next record in a table indexed by last name is probably different than one in a table indexed by state. This doesn't affect the Record option because the number for a record doesn't change when the table is indexed.</p>
<p class=label>
<b>To select a limited number of records</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Print</b>.<br><br></li>
<li>
In the <b>Print</b> dialog box, choose <b>Options</b>.<br><br></li>
<li>
In the <b>Print Options</b> dialog box, choose <b>Options</b>.<p class=label>
<b>Report and Label Print Options dialog box</b>
<p>
<img src="afd12007.gif" border=0></P></li>
<li>
In the <b>Print and Label Print Options</b> dialog box, choose <b>Scope</b>.<br><br></li>
<li>
Select the appropriate <a href="tblscope_clauses.htm">scope</a> option.<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=57%><b>To print</b></td>
<td class=label width=43%><b>Choose this scope option</b></td>
</tr>
<tr valign=top>
<td width=57%>Every record from the source file</td>
<td width=43%>ALL</td>
</tr>
<tr valign=top>
<td width=57%>A range of records starting with 1</td>
<td width=43%>NEXT</td>
</tr>
<tr valign=top>
<td width=57%>A specific record by number</td>
<td width=43%>RECORD</td>
</tr>
<tr valign=top>
<td width=57%>The current record plus all of those after it to the end of the file</td>
<td width=43%>REST</td>
</tr>
</table><br>
<p class=tl>
Visual FoxPro prints the report using data from the records within the scope you selected.</P></li>
</ol>
<h4>Printing Records That Match a Condition</h4>
<p>
If the records you want to select are not sequential within the table, you can build a logical expression that specifies selection criteria a record must meet to be printed. For example, you can choose to print all records with a particular value in a field.</p>
<p class=label>
<b>To enter criteria for selecting records</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Print</b>.<br><br></li>
<li>
In the <b>Print</b> dialog box, choose <b>Options</b>.<br><br></li>
<li>
In the <b>Print Options</b> dialog box, choose <b>Options</b>.<br><br></li>
<li>
In the <b>Print and Label Print Options</b> dialog box, choose <b>Scope</b>.<br><br></li>
<li>
In the <b>For</b> box, enter a FOR expression.<p class=tl>
-or-</P><p class=tl>
Make sure the records sources used by the report are open, and then choose the <b>For</b> button to use the <a href="wndexpression_builder_dialog_box.htm">Expression Builder</a>.</P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You don't need to include the FOR command in the expression. For example, type <b>country = "Canada"</b> to see only Canadian data.</p><p class=tl>
Visual FoxPro evaluates all of the records and prints the report using those records that match the condition in the expression.</P></li>
</ol>
<h4>Controlling Selection of Records to Print</h4>
<p>
When printing, you can specify a condition that must be met to continue evaluating and selecting records. You enter this condition as a WHILE expression. As long as the WHILE expression remains true, Visual FoxPro processes the data source. After finding a record that doesn't meet the condition, Visual FoxPro ends the evaluation process and prints the selected records. This option allows you to select records based on information outside the values contained in the fields.</p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If you use a WHILE expression on a file that hasn't been indexed, the selection process may end before evaluating all of the appropriate records. Before printing the report, be sure the source table has the appropriate index active for the WHILE expression you want to use.</p>
<p class=label>
<b>To enter criteria for ending record selection</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Print</b>.<br><br></li>
<li>
In the <b>Print</b> dialog box, choose <b>Options</b>.<br><br></li>
<li>
In the <b>Print Options</b> dialog box, choose <b>Options</b>.<br><br></li>
<li>
In the <b>Print and Label Print Options</b> dialog box, choose <b>Scope</b>.<br><br></li>
<li>
In the <b>While</b> box, enter a WHILE expression.<p class=tl>
-or-</P><p class=tl>
Choose the <b>While</b> button to use the <a href="wndexpression_builder_dialog_box.htm">Expression Builder</a>.</P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You don't need to include the WHILE command in the statement. For example, type <b>sales &gt; 1000</b> to see only sales above one-thousand dollars.</p><p class=tl>
Visual FoxPro prints the report using the records it evaluates while the expression is true.</P></li>
</ol>
<h4>Printing Reports and Labels</h4>
<p>
If you want to send the report to the printer, you can send it directly to the printer or display the Print Setup dialog box.</p>
<p class=label>
<b>To send a report to the printer</b>
<ul type=disc>
<li>
Use the TO PRINTER clause of the <a href="lngreport.htm">REPORT</a> or <a href="lnglabel.htm">LABEL</a> command.</li>
</ul>
<p>
For example, the following code sends the report <code>MyReport</code> to the default printer and stops the report from printing on the screen:</p>
<pre><code>REPORT FORM MYREPORT.FRX TO PRINTER NOCONSOLE
</code></pre>
<p class=label>
<b>To display the Print Setup dialog box before sending the report to the printer</b>
<ul type=disc>
<li>
Use the TO PRINTER PROMPT clause of the <a href="lngreport.htm">REPORT</a> or <a href="lnglabel.htm">LABEL</a> command.</li>
</ul>
<p>
For example, the following code displays the Print Setup dialog box, sends the report <code>MyReport</code> to the default printer, and stops the report from printing in the active window:</p>
<pre><code>REPORT FORM MYREPORT.FRX TO PRINTER PROMPT NOCONSOLE
</code></pre>
<h4>Previewing Reports and Labels</h4>
<p>
If you want to display a preview of the report, you can send it to the Preview window in the Report Designer.</p>
<p class=label>
<b>To preview a report</b>
<ul type=disc>
<li>
Use the PREVIEW clause of the <a href="lngreport.htm">REPORT</a> command</li>
</ul>
<p>
For example, the following code displays the report in a modal window:</p>
<pre><code>REPORT FORM MYREPORT.FRX PREVIEW
</code></pre>
<p>
By default, the Preview window is modal but allows access to the Preview toolbar. If you want to make the preview modeless, you can add the keyword NOWAIT to the REPORT command.</p>
<p>
For example, the following code displays the report in a modeless window:</p>
<pre><code>REPORT FORM MYREPORT.FRX PREVIEW NOWAIT
</code></pre>
<p>
If you want to preview the results in a specific window, you can include the WINDOW clause to specify a window created with DEFINE WINDOW.</p>
<pre><code>REPORT FORM MYREPORT.FRX PREVIEW WINDOW MYWINDOW
</code></pre>
<h4>Printing Reports to File</h4>
<p>
If you want to create an electronic version of the report, you can send it to a file formatted for your printer or to an ASCII file. Sending reports to a file allows you to print them in a batch on your printer at a later time.</p>
<p>
If you want to create an ASCII file, you can create a file that includes only the text, dashes, and plus signs to represent lines and shapes. Font and color choices are not included. You can also specify the number of characters to place on each line and the number of lines to place on each page.</p>
<p class=label>
<b>To print a report to an ASCII file</b>
<ul type=disc>
<li>
Use the FILE and ASCII keywords of the <a href="lngreport.htm">REPORT</a> command.</li>
</ul>
<p>
The following example defines the variables for the ASCII page, then prints a report called Myreport.frx to an ASCII file name Myfile.txt.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Printing to an ASCII File</b></td>
<td class=label width=50%></td>
</tr>
<tr valign=top>
<td class=label width=50%><b>Code</b></td>
<td class=label width=50%><b>Comment</b></td>
</tr>
<tr valign=top>
<td width=50%><pre><code>_asciirows = nLines</code></pre>
</td>
<td width=50%>Define the number of lines per page.</td>
</tr>
<tr valign=top>
<td width=50%><pre><code>_asciicols = nChars</code></pre>
</td>
<td width=50%>Define the number of characters per line.</td>
</tr>
<tr valign=top>
<td width=50%><pre><code>REPORT FORM MYREPORT.FRX
  TO FILE MYFILE.TXT ASCII</code></pre>
</td>
<td width=50%>Run the report.</td>
</tr>
</table><br>
<h3>Saving a Report as HTML</h3>
<p>
You can use the <b>Save As HTML</b> option on the <b>File</b> menu when creating or modifying a report to save the contents of the report as an HTML (Hypertext Markup Language) file.</p>
<p class=label>
<b>To save a report as HTML</b>
<ol>
<li>
Open the report.<br><br></li>
<li>
Choose <b>Save As HTML</b> on the <b>File</b> menu. This option is only available when the report has been saved to disk.<br><br></li>
<li>
Enter the name of the HTML file to create and choose <b>Save</b>.</li>
</ol>

<h2><a name="dgintegrating_queries_and_reports"></a>Integrating Queries and Reports</h2>
<p>
After you've created the components of your application, you can integrate them. The following illustration shows some ways you can add queries and reports to your application.</p>
<p class=label>
<b>Some ways to integrate queries and reports</b></p>
<p>
<img src="afd12008.gif" border=0></p>
<p>
You can add code that executes a query or a report to the following objects in your application.</p>
<ul type=disc>
<li>
A button on a form. For more information about forms and buttons, see Chapter 9, <a href="dgcreating_forms.htm">Creating Forms</a>.</li>
<li>
An item on a menu or a button on a toolbar. For more information, see Chapter 11, <a href="dgdesigning_menus_and_toolbars.htm">Designing Menus and Toolbars</a>.</li>
</ul>
<p class=label>
<b>To add a query, view, or program</b></p>
<ul type=disc>
<li>
Add a <a href="lngdo.htm">DO</a> or <a href="lnguse.htm">USE</a> command to the code behind a command button on a form, a button on a toolbar, or a menu item.<p class=tl>
For example, add code similar to one of the following lines:</P><pre><code>DO MYQUERY.QPR
DO MYPROGRAM.PRG
USE myview
</code></pre>
</li>
</ul>
<p>
You have several options for integrating reports into your application.</p>
<ul type=disc>
<li>
If you want the user to simply start the report and collect the printout, you can have the user initiate a report by adding the REPORT command to a control on a form, a command on a menu, or a button on a toolbar.</li>
<li>
If you want to allow your user to enter some variables used in the report, you can gather values from the user just as you did for queries. For example, the user could enter a specified date range that the report will include. For more information, see <a href="#dgcollecting_user_input_with_queries">Collecting User Input with Queries</a> later in this chapter.</li>
<li>
If you want the user to create custom reports, you can offer the user the ability to create new reports or modify existing reports with the Report Designer.</li>
</ul>
<p class=label>
<b>To run reports and labels</b>
<ul type=disc>
<li>
Use the <a href="lngreport.htm">REPORT</a> or <a href="lnglabel.htm">LABEL</a> commands.<p class=tl>
For example, you could use code similar to one of the following lines:</P><pre><code>REPORT FORM MYREPORT.FRX
LABEL FORM MYLABEL.LBX
</code></pre>
</li>
</ul>
<p class=label>
<b>To modify reports and labels</b></p>
<ul type=disc>
<li>
Use the <a href="lngmodify_report.htm">MODIFY REPORT</a> or <a href="lngmodify_label.htm">MODIFY LABEL</a> commands.<p class=tl>
For example, add code similar to one of the following lines:</P><pre><code>MODIFY REPORT MYREPORT.FRX
MODIFY LABEL MYLABEL.LBX
</code></pre>
</li>
</ul>
<p class=label>
<b>To create reports and labels</b>
<ul type=disc>
<li>
Use the <a href="lngcreate.htm">CREATE REPORT</a> or <a href="lngcreate.htm">CREATE LABEL</a> commands.<p class=tl>
For example, you could use code similar to one of the following lines:</P><pre><code>CREATE REPORT MYREPORT.FRX
CREATE LABEL MYLABEL.LBX
</code></pre>
</li>
</ul>

<h3><a name="dgcollecting_user_input_with_queries"></a>Collecting User Input with Queries</h3>
<p>
If you want to collect values from a form, you can use variables in a SELECT – SQL statement and then use them immediately in the statement, or execute the statement later.</p>
<p>
To collect values for immediate use, you can either explicitly name the form or use a shortcut reference for the form in your SELECT – SQL statement. In this example, shortcut reference is in the WHERE clause.</p>
<p class=label>
<b>Collecting Values Using Shortcut References in a SELECT - SQL Statement</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=55%><b>Code</b></td>
<td class=label width=45%><b>Comment</b></td>
</tr>
<tr valign=top>
<td width=55%><pre><code>SELECT * ;
 &nbsp; FROM tastrade!customer ;
 &nbsp; WHERE customer.country = ;
 &nbsp;&nbsp; THISFORM.ControlName1.Value&nbsp;;
 &nbsp; AND customer.region = 
THISFORM.ControlName2.Value ;
 &nbsp; GROUP BY customer.postal_code ;
 &nbsp; ORDER BY customer.postal_code, 
customer.company_name</code></pre>
</td>
<td width=45%><br>
<br>
<br>
Use <code>THISFORM</code> as a shortcut reference for the currently active form and substitute control names for <code>ControlName1</code> and <code>ControlName2</code>.</td>
</tr>
</table><br>
<p>
If you don't want to use references to the control, you can define variables in the code. Use code variables if you want to store the values from a form but don't necessarily expect to use them while the form is active.</p>
<p class=label>
<b>Collecting Values for Later Use</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=55%><b>Code</b></td>
<td class=label width=45%><b>Comment</b></td>
</tr>
<tr valign=top>
<td width=55%><pre><code>cValue = THISFORM.ControlName.Value</code></pre>
</td>
<td width=45%>Define the variable.</td>
</tr>
<tr valign=top>
<td width=55%><pre><code>SELECT * ;
 &nbsp; FROM tastrade!customer ;
 &nbsp; WHERE customer.country = cValue ;
 &nbsp; GROUP BY customer.postal_code ;
 &nbsp; ORDER BY customer.postal_code, ;
 &nbsp;&nbsp;&nbsp; customer.company_name</code></pre>
</td>
<td width=45%>Use the variable you defined in the SELECT - SQL statement.</td>
</tr>
</table><br>
<p>
If you don't define the variable before you run the query, an error message appears stating that the variable couldn't be found. If the variable isn't defined in code, Visual FoxPro assumes that the variable is pre-initialized.</p>
</BODY>
</HTML>
