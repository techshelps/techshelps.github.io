<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_FreeObject( )</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lng_freeobjectlp_rp"></a><sup></sup>_FreeObject(&nbsp;) API Library Routine</h1>
<p>
<a href="lng_freeobjectlp_rpsa.htm">See Also</a></p>
<p>
Releases an object from the Visual FoxPro API data pool.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>void _FreeObject</b>(<b>Value FAR</b> *objct)</p>
<p class=label>
<b>Remarks</b></p>
<p>
Use _FreeObject(&nbsp;) to free an object from the Visual FoxPro API object table. </p>
<p>
_FreeObject(&nbsp;)is used in the following cases:</p>
<p class=tl>
1. If an object reference is returned from any Visual FoxPro API function (for example, _Evaluate(&nbsp;) or _GetObjectProperty(&nbsp;)), you must use _FreeObject(&nbsp;) to release the object when you are no longer using it.</P><p class=tl>
2. If you keep a reference to an object across different Visual FoxPro API calls, you must first use _ObjectReference(&nbsp;) to increment the count for the object. When you are no longer using the object, you must then use _ObjectRelease(&nbsp;) to decrement the count for the object and then use _FreeObject(&nbsp;) to release the object.</P><p>
In addition to the previous rules, you should always clear the Value structure you pass to any Visual FoxPro API function that returns a value into the passed Value structure. For example, you can create and call a function that clears the structure prior to calling any function that returns a value into your structure. You can also create and call a function to cleanup any object references or unused handles.</p>
<p>
0 is returned unless an error occurs. When an error occurs, a negative number representing an internal error code is returned.</p>
<p>
For more information on how to create an API library and integrate it with Visual FoxPro, see Chapter 28, <a href="dgaccessing_the_visual_foxpro_api.htm">Accessing the Visual FoxPro API</a>, in the <i>Programmer's Guide</i>.</p>
</BODY>
</HTML>
