<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_EdGetLinePos( ) API Library Routine Example</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<p class=label>
<b><a name="lng_edgetlineposlp_rpx"></a><sup></sup>_EdGetLinePos(&nbsp;) API Library Routine Example</b></p>
<p>
The following example opens an editing session for a file specified by a parameter and gets the EDPOS for line 12 by calling _EdGetLinePos(&nbsp;). It then calls _EdGetLineNum(&nbsp;) on this EDPOS, and this returns 12. Next, it increments the EDPOS and each time calls _EdGetLineNum(&nbsp;) until the EDLINE returned is changed. At this point, it calls _EdGetLinePos(&nbsp;) for line 13.</p>
<h4>Visual FoxPro Code</h4>
<pre><code>SET LIBRARY TO EDGETLPO
= EDGETLPOS("x")
</code></pre>
<h4>C Code</h4>
<pre><code>#include &lt;pro_ext.h&gt;

void putLong(unsigned long n)
{
 &nbsp; Value val;

 &nbsp; val.ev_type = 'I';
 &nbsp; val.ev_long = n;
 &nbsp; val.ev_width = 6;

 &nbsp; _PutValue(&amp;val);
}

FAR Example(ParamBlk FAR *parm)
{
#define pFILENAME ((char FAR *) _HandToPtr(parm-&gt;p[0].val.ev_handle))

 &nbsp; WHANDLE wh;
 &nbsp; EDENV EdEnv;
 &nbsp; EDPOS edpos;
 &nbsp; EDLINE edlin, original;

 &nbsp; if (!_SetHandSize(parm-&gt;p[0].val.ev_handle,
 &nbsp;&nbsp;&nbsp;&nbsp; parm-&gt;p[0].val.ev_length+1))
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; _Error(182); // "Insufficient memory"
 &nbsp; }
 &nbsp; pFILENAME[parm-&gt;p[0].val.ev_length] = '\0';

 &nbsp; _HLock(parm-&gt;p[0].val.ev_handle);
 &nbsp; wh = _EdOpenFile(pFILENAME, FO_READONLY);
 &nbsp; _HUnLock(parm-&gt;p[0].val.ev_handle);

 &nbsp; edpos = <span class=cfe><b>_EdGetLinePos(</b></span>wh, 12<span class=cfe><b>)</b></span>;
 &nbsp; _PutStr("\n_EdGetLinePos(wh, 12) =");
 &nbsp; putLong(edpos);

 &nbsp; original = edlin = _EdGetLineNum(wh, edpos);

 &nbsp; for (;;)
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\n_EdGetLineNum(wh,");
 &nbsp;&nbsp;&nbsp;&nbsp; putLong(edpos);
 &nbsp;&nbsp;&nbsp;&nbsp; _PutStr(") = ");
 &nbsp;&nbsp;&nbsp;&nbsp; putLong(edlin);

 &nbsp;&nbsp;&nbsp;&nbsp; if (edlin != original)
 &nbsp;&nbsp;&nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;
 &nbsp;&nbsp;&nbsp;&nbsp; }
 &nbsp;&nbsp;&nbsp;&nbsp; edpos++;
 &nbsp;&nbsp;&nbsp;&nbsp; edlin = _EdGetLineNum(wh, edpos);
 &nbsp; }

 &nbsp; edpos = _EdGetLinePos(wh, 13);
 &nbsp; _PutStr("\n_EdGetLinePos(wh, 13) ="); putLong(edpos);
}
FoxInfo myFoxInfo[] = {
 &nbsp; {"EDGETLPOS", (FPFI) Example, 1, "C"},
};
FoxTable _FoxTable = {
 &nbsp; (FoxTable FAR *) 0, sizeof(myFoxInfo)/sizeof(FoxInfo), myFoxInfo
};
</code></pre>
</BODY>
</HTML>
