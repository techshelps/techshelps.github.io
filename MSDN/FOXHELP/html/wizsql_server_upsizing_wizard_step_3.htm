<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Server Upsizing Wizard: Step 3 - Target Database</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><sup><a name="wizsql_server_upsizing_wizard_step_3"></a></sup>SQL Server Upsizing Wizard: Step 3 – Choose Tables</h1>
<p>
<a href="wizsql_server_upsizing_wizard_step_3sa.htm">See Also</a></p>
<p>
In this step you select the Visual FoxPro tables you want to export to SQL Server.</p>
<h3>Options</h3>
<p class=dt>
<b>Available tables</b></p>
<p class=indent>
Lists all the tables stored in the database you've chosen to upsize.</p>
<p class=dt>
<b>Selected tables</b></p>
<p class=indent>
Lists the tables you've chosen to upsize into the database on the server.</p>
<p class=tl>
You must select at least one table, and you can choose the <b>&gt;&gt;</b> button to export all tables.</P><p>
When you choose <b>Next</b>, the <b>SQL Server Upsizing Wizard</b> reads the list of tables you've selected to upsize and tries to open those tables for exclusive use in the database you choose to upsize. Any tables that can't be opened exclusively won't be available to upsize. The tables are opened exclusively to prevent other users from changing the data in the tables during the upsizing process, which helps to ensure the accuracy of exported data. If any tables are already open and shared, the wizard closes them and then reopens them exclusively; this might cause you to lose any temporary relations established with the SET RELATION or SET SKIP commands.</p>
<h3>Choosing Tables to Export</h3>
<p>
It's very important to choose the tables you export carefully, as this choice has a significant impact on the performance of your application. Exporting all tables might result in excessive (and slow) server queries. A well-designed client/server database usually consists of a mix of local and remote tables.</p>
<p>
In general, keep tables, which change rarely or infrequently, in your local database, such as a table of state names and abbreviations. Export tables that change frequently and are accessed by many users, such as a table of orders.</p>
<p>
The <b>SQL Server Upsizing Wizard</b> exports the table's field names, data types, and data. For information about storing tables in the best location, see Chapter 19, <a href="dgdesigning_client_server_applications.htm">Designing Client/Server Applications</a>, in the <i>Programmer's Guide</i>. For information on optimizing client/server applications, see Chapter 22, <a href="dgoptimizing_client_server_performance.htm">Optimizing Client/Server Performance</a>, also in the <i>Programmer's Guide.</i></p>
</BODY>
</HTML>
