<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMPORT Command</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngimport"></a><sup></sup>IMPORT Command</h1>
<p>
<a href="lngimportsa.htm">See Also</a></p>
<p>
Imports data from an external file format to create a new Visual FoxPro table.</p>
<p class=label>
<b>Syntax</b></p>
<p>
IMPORT FROM <i>FileName</i><br>
 &nbsp; [DATABASE <i>DatabaseName</i> [NAME <i>LongTableName</i>]]<br>
 &nbsp; [TYPE] FW2 | MOD | PDOX | RPD | WK1 <br>
 &nbsp; | WK3 | WKS | WR1 | WRK | XLS <br>
 &nbsp; | XL5 [SHEET <i>cSheetName</i>]<br>
 &nbsp; | XL8 [SHEET <i>cSheetName</i>]<br>
 &nbsp; [AS <i>nCodePage</i>]</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>FileName</i></p>
<p class=indent>
Specifies the name of the file from which to import data. If you don't include an extension with the file name, the default extension for the specified file type is assumed.</p>
<p class=dt>
DATABASE <i>DatabaseName</i></p>
<p class=indent>
Specifies a database to which the new table is added.</p>
<p class=dt>
NAME <i>LongTableName</i></p>
<p class=indent>
Specifies a long name for the new table. Long names can contain up to 128 characters and can be used in place of short file names in the database.</p>
<p class=dt>
TYPE</p>
<p class=indent>
The keyword TYPE is optional, but you must include one of the following file types:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=34%><b>File type</b></td>
<td class=label width=66%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=34%>FW2</td>
<td width=66%>Include FW2 to import FW2 files, created by Framework II.</td>
</tr>
<tr valign=top>
<td width=34%>MOD</td>
<td width=66%>Include MOD to import MOD files, created by Microsoft Multiplan version 4.1.</td>
</tr>
<tr valign=top>
<td width=34%>PDOX</td>
<td width=66%>Include PDOX to import Paradox files. Database files in Paradox versions 3.5 and 4.0 by Borland can be imported by including the PDOX option.</td>
</tr>
<tr valign=top>
<td width=34%>RPD</td>
<td width=66%>Include RPD to import RPD files, created by RapidFile.</td>
</tr>
<tr valign=top>
<td width=34%>WK1 | WK3 | WKS</td>
<td width=66%>Include WK1 to import data from a Lotus 1-2-3 spreadsheet. Columns from the spreadsheet become fields in the table and the spreadsheet rows become records in the table. A WK1 extension is assigned to spreadsheets created in Lotus 1-2-3 revision 2.x; a WK3 extension is assigned to spreadsheets created in Lotus 1-2-3 revision 3.x; and a .wks extension is assigned to spreadsheets created in Lotus 1-2-3 revision 1-A.</td>
</tr>
<tr valign=top>
<td width=34%>WR1 | WRK</td>
<td width=66%>Include WR1 to import data from a Lotus Symphony spreadsheet. Columns from the spreadsheet become fields in the table and the spreadsheet rows become records in the table. A WR1 extension is assigned to spreadsheets created in Symphony version 1.10, and a .wrk extension is assigned to spreadsheets created in Symphony version 1.1.</td>
</tr>
<tr valign=top>
<td width=34%>XLS</td>
<td width=66%>Include XLS to import data from Microsoft Excel worksheets versions 2.0, 3.0, and 4.0. Columns from the worksheet become fields in the table and the worksheet rows become records in the table. Worksheet files created in Microsoft Excel have an .xls extension.</td>
</tr>
<tr valign=top>
<td width=34%>XL5 [SHEET <i>cSheetName</i>]</td>
<td width=66%>Include XL5 to import data from Microsoft Excel version 5.0. Columns from the worksheet become fields in the table and the worksheet rows become records in the table. Worksheet files created in Microsoft Excel have an .xls extension.<p>
If you omit the SHEET clause, the data in Sheet1 is imported. To import data from a specific sheet, include the SHEET keyword and specify the sheet name with <i>cSheetName</i>.</p>
</td>
</tr>
<tr valign=top>
<td width=34%>XL8 [SHEET <i>cSheetName</i>]</td>
<td width=66%>Include XL8 to import data from Microsoft Excel 97. Columns from the worksheet become fields in the table and the worksheet rows become records in the table. Worksheet files created in Microsoft Excel have an .xls extension.<p>
If you omit the SHEET clause, the data in Sheet1 is imported. To import data from a specific sheet, include the SHEET keyword and specify the sheet name with <i>cSheetName</i>.</p>
</td>
</tr>
</table><br>
<p class=dt>
AS <i>nCodePage</i></p>
<p class=indent>
Specifies the code page of the imported file. Visual FoxPro copies the contents of the imported file and, as it copies the data, automatically converts the data to the current Visual FoxPro code page.</p>
<p class=tl>
If you specify a value for <i>nCodePage</i> that is not supported, Visual FoxPro displays an error message. You can use GETCP(&nbsp;) for <i>nCodePage</i> to display the Code Page dialog box, allowing you to specify a code page for the imported file.</P><p class=tl>
If you omit AS <i>nCodePage</i> and Visual FoxPro cannot determine the code page of the imported file, Visual FoxPro copies the contents of the imported file and, as it copies the data, automatically converts the data to the current Visual FoxPro code page. If you omit AS <i>nCodePage</i> and Visual FoxPro can determine the code page of the imported file, Visual FoxPro automatically converts the data in the imported file from the data's code page to the current Visual FoxPro code page. Use CPCURRENT(&nbsp;) to determine the current Visual FoxPro code page.</P><p class=tl>
If <i>nCodePage</i> is 0, Visual FoxPro assumes the code page of the imported file is the same as the current Visual FoxPro code page and no code page conversion occurs.</P><p class=label>
<b>Remarks</b></p>
<p>
Most software packages store their data in file formats that cannot be opened directly in Visual FoxPro. IMPORT creates a new Visual FoxPro table from data stored in file formats that Visual FoxPro cannot directly read.</p>
<p>
A new table is created with the same name as the file from which the data is imported. A .dbf extension is assigned to the newly created table.</p>
</BODY>
</HTML>
