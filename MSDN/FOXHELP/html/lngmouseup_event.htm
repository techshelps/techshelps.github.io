<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MouseUp Event</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngmouseup_event"></a><sup></sup>MouseUp Event</h1>
<p>
<a href="lngmouseup_eventat.htm">Applies To</a> &nbsp; <a href="lngmouseup_eventsa.htm">See Also</a></p>
<p>
Occurs when the user releases a mouse button.</p>
<p class=label>
<b>Syntax</b></p>
<p>
PROCEDURE <i>Object.</i>MouseUp <br>
[LPARAMETERS <i>nButton</i>, <i>nShift</i>, <i>nXCoord</i>, <i>nYCoord</i>]</p>
<p>
-or-</p>
<p>
LPARAMETERS <i>nIndex</i>, <i>nButton</i>, <i>nShift</i>, <i>nXCoord</i>, <i>nYCoord</i></p>
<p class=label>
<b>Parameters</b></p>
<p>
You must include an LPARAMETERS or PARAMETERS statement in the event procedure and specify a name for each parameter. Visual FoxPro passes the MouseUp event four of five parameters in the following order.</p>
<p class=dt>
<i>nIndex</i></p>
<p class=indent>
Contains a number which uniquely identifies a control if it's in a control array.</p>
<p class=dt>
<i>nButton</i></p>
<p class=indent>
In Visual FoxPro for Windows, contains a number that specifies which button was released to trigger the event: 1 (left), 2 (right), or 4 (middle).</p>
<p class=dt>
<i>nShift</i></p>
<p class=indent>
Contains a number specifying the state of modifier keys when the mouse is released. In Visual FoxPro for Windows, the valid modifier keys are the SHIFT, CTRL, and ALT keys.</p>
<p class=tl>
The values returned in <i>nShift</i> for individual modifier keys are listed in the following table.</P><p class=label>
<b>Modifier key values for <i>nShift</i></b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=43%><b>Windows key</b></td>
<td class=label width=57%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=43%>SHIFT</td>
<td width=57%>1</td>
</tr>
<tr valign=top>
<td width=43%>CTRL</td>
<td width=57%>2</td>
</tr>
<tr valign=top>
<td width=43%>ALT</td>
<td width=57%>4</td>
</tr>
</table><br>
<p class=tl>
If more than one modifier key is held down when the mouse is released, the <i>nShift</i> argument contains the sum of the values for the modifier keys. For example, in Visual FoxPro for Windows, if the user holds CTRL while releasing the mouse button, the <i>nShift</i> argument contains 2. But if the user holds CTRL+ALT while releasing the mouse button, the <i>nShift</i> argument contains 6.&nbsp; </P><p class=dt>
<i>nXCoord</i>, <i>nYCoord</i></p>
<p class=indent>
Contains the current horizontal (<i>nXCoord</i>) and vertical (<i>nYCoord</i>) position of the mouse pointer within the form. These coordinates are always expressed in terms of the form's coordinate system in the unit of measurement specified by the <i>ScaleMode</i> property of the form.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Use a MouseUp procedure to specify actions to occur when a given mouse button is released. Unlike the Click and DblClick events, the MouseUp event allows you to distinguish between the left, right, and middle mouse buttons. You can also write code for mouse-keyboard combinations that use the modifier keys.</p>
<p>
You can use a MouseMove procedure to respond to an event caused by moving the mouse.</p>
<p class=indent>
The <i>nButton</i> argument for MouseDown and MouseUp differs from the <i>nButton</i> argument used for MouseMove. For MouseDown or MouseUp, the <i>nButton</i> argument indicates exactly one button per event; for MouseMove, it indicates the current state of all buttons.</p>
</BODY>
</HTML>
