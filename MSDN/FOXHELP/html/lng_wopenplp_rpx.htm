<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_WOpenP( ) API Library Routine Example</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<p class=label>
<b><a name="lng_wopenplp_rpx"></a><sup></sup>_WOpenP(&nbsp;) API Library Routine Example</b></p>
<p>
The following example creates windows using a number of different color schemes and borders. In particular, note the custom color scheme.</p>
<h4>Visual FoxPro Code</h4>
<pre><code>SET LIBRARY TO WOPENP
</code></pre>
<h4>C Code</h4>
<pre><code>#include &lt;pro_ext.h&gt;

FAR Example(ParamBlk FAR *parm)
{
 &nbsp; WHANDLE wh;

 &nbsp; char customScheme[12] =
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; BLACK_ON&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | WHITE,
 &nbsp;&nbsp;&nbsp;&nbsp; RED_ON&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | BLACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | BLINK,
 &nbsp;&nbsp;&nbsp;&nbsp; WHITE_ON&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | WHITE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | BRIGHT,
 &nbsp;&nbsp;&nbsp;&nbsp; CYAN_ON&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | BLUE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | BRIGHT,
 &nbsp;&nbsp;&nbsp;&nbsp; GREEN_ON&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | BROWN,
 &nbsp;&nbsp;&nbsp;&nbsp; BROWN_ON&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | BROWN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | BRIGHT,
 &nbsp;&nbsp;&nbsp;&nbsp; MAGENTA_ON&nbsp;&nbsp; | MAGENTA&nbsp;&nbsp; | BRIGHT,
 &nbsp;&nbsp;&nbsp;&nbsp; RED_ON&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | MAGENTA&nbsp;&nbsp; | BRIGHT | BLINK,
 &nbsp;&nbsp;&nbsp;&nbsp; BROWN_ON&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | GREEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | BRIGHT,
 &nbsp;&nbsp;&nbsp;&nbsp; BLACK_ON&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | CYAN,
 &nbsp;&nbsp;&nbsp;&nbsp; BLUE_ON&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | CYAN,
 &nbsp; };

 &nbsp; _Execute("WAIT WINDOW 'Press any key to see a window \
 &nbsp;&nbsp;&nbsp;&nbsp; in WINDOW_SCHEME with WO_DOUBLEBOX border'");

 &nbsp; wh = <span class=cfe><b>_WOpenP(</b></span>10, 10, 160, 320, WEVENT | CLOSE, WINDOW_SCHEME,
 &nbsp;&nbsp;&nbsp;&nbsp; (Scheme FAR *)0, WO_DOUBLEBOX<span class=cfe><b>)</b></span>;
 &nbsp; _WShow(wh);

 &nbsp; _Execute("WAIT WINDOW 'Press any key to see a window \
 &nbsp;&nbsp;&nbsp;&nbsp; in ALERT_SCHEME with WO_SINGLEBOX border'");
 &nbsp; _WClose(wh);

 &nbsp; wh = <span class=cfe><b>_WOpenP(</b></span>10, 10, 160, 320, WEVENT | CLOSE, ALERT_SCHEME,
 &nbsp;&nbsp;&nbsp;&nbsp; (Scheme FAR *)0, WO_SINGLEBOX<span class=cfe><b>)</b></span>;
 &nbsp; _WShow(wh);

 &nbsp; _Execute("WAIT WINDOW 'Press any key to see a window \
 &nbsp;&nbsp;&nbsp;&nbsp; in WINDOW_SCHEME with WO_PANELBORDER border'");
 &nbsp; _WClose(wh);

 &nbsp; wh = <span class=cfe><b>_WOpenP(</b></span>10, 10, 160, 320, WEVENT | CLOSE, WINDOW_SCHEME,
 &nbsp;&nbsp;&nbsp;&nbsp; (Scheme FAR *)0, WO_PANELBORDER<span class=cfe><b>)</b></span>;
 &nbsp; _WShow(wh);

 &nbsp; _Execute("WAIT WINDOW 'Press any key to see a window \
 &nbsp;&nbsp;&nbsp;&nbsp; in a custom scheme with WO_SYSTEMBORDER border'");
 &nbsp; _WClose(wh);

 &nbsp; wh = <span class=cfe><b>_WOpenP(</b></span>10,10,160,320,WEVENT | CLOSE,-1,customScheme,
 &nbsp;&nbsp;&nbsp;&nbsp; WO_SYSTEMBORDER<span class=cfe><b>)</b></span>;
 &nbsp; _WShow(wh);
}

FoxInfo myFoxInfo[] = {
 &nbsp; {"ONLOAD", Example, CALLONLOAD, ""},
};
FoxTable _FoxTable = {
 &nbsp; (FoxTable FAR *) 0, sizeof(myFoxInfo)/sizeof(FoxInfo), myFoxInfo
};
</code></pre>
</BODY>
</HTML>
