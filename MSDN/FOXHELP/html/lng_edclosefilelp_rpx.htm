<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_EdCloseFile( ) API Library Routine Example</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<p class=label>
<b><a name="lng_edclosefilelp_rpx"></a><sup></sup>_EdCloseFile(&nbsp;) API Library Routine Example</b></p>
<p>
The following example opens for editing a single file specified by a parameter, deletes a character, and closes the edit session three times. The first time, the routine calls _EdCloseFile(&nbsp;) with the "Immediately save" option, the second time with the "Save after dialog box" option, and the third time with the "Open Save As dialog box" option. Each time, the routine shows the return value of _EdCloseFile(&nbsp;).</p>
<h4>Visual FoxPro Code</h4>
<pre><code>SET LIBRARY TO EDCLOSE 
= EDCLOSE("x")
</code></pre>
<h4>C Code</h4>
<pre><code>#include &lt;pro_ext.h&gt;

void putLong(long n)
{
 &nbsp; Value val;

 &nbsp; val.ev_type = 'I';
 &nbsp; val.ev_long = n;
 &nbsp; val.ev_width = 5;

 &nbsp; _PutValue(&amp;val);
}

FAR Example(ParamBlk FAR *parm)
{
#define pFILENAME ((char FAR *) _HandToPtr(parm-&gt;p[0].val.ev_handle))

 &nbsp; WHANDLE wh;
 &nbsp; int retValue;

 &nbsp; if (!_SetHandSize(parm-&gt;p[0].val.ev_handle,
 &nbsp;&nbsp;&nbsp;&nbsp; parm-&gt;p[0].val.ev_length+1))
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; _Error(182); // "Insufficient memory"
 &nbsp; }
 &nbsp; _HLock(parm-&gt;p[0].val.ev_handle);
 &nbsp; pFILENAME[parm-&gt;p[0].val.ev_length] = '\0';

 &nbsp; // Open, delete a character, close "save without asking"
 &nbsp; wh = _EdOpenFile(pFILENAME, FO_READWRITE);

 &nbsp; _HUnLock(parm-&gt;p[0].val.ev_handle);

 &nbsp; _EdSelect(wh, 0, 1);
 &nbsp; _EdDelete(wh);
 &nbsp; retValue = <span class=cfe><b>_EdCloseFile(</b></span>wh, 0<span class=cfe><b>)</b></span>; // save without asking
 &nbsp; _PutStr("\n_EdCloseFile() ="); putLong(retValue);

 &nbsp; // Open, delete a character, close "save with asking"
 &nbsp; _HLock(parm-&gt;p[0].val.ev_handle);
 &nbsp; wh = _EdOpenFile(pFILENAME, FO_READWRITE);
 &nbsp; _HUnLock(parm-&gt;p[0].val.ev_handle);

 &nbsp; _EdSelect(wh, 0, 1);
 &nbsp; _EdDelete(wh);
 &nbsp; retValue = <span class=cfe><b>_EdCloseFile(</b></span>wh, 1<span class=cfe><b>)</b></span>; // save with asking
 &nbsp; _PutStr("\n_EdCloseFile() ="); putLong(retValue);

 &nbsp; // Open, delete a character, close "save as"
 &nbsp; _HLock(parm-&gt;p[0].val.ev_handle);
 &nbsp; wh = _EdOpenFile(pFILENAME, FO_READWRITE);
 &nbsp; _HUnLock(parm-&gt;p[0].val.ev_handle);

 &nbsp; _EdSelect(wh, 0, 1);
 &nbsp; _EdDelete(wh);
 &nbsp; retValue = <span class=cfe><b>_EdCloseFile(</b></span>wh, 2<span class=cfe><b>)</b></span>; // save as
 &nbsp; _PutStr("\n_EdCloseFile() ="); putLong(retValue);
}

FoxInfo myFoxInfo[] = {
 &nbsp; {"EDCLOSE", (FPFI) Example, 1, "C"},
};
FoxTable _FoxTable = {
 &nbsp; (FoxTable FAR *) 0, sizeof(myFoxInfo)/sizeof(FoxInfo), myFoxInfo
};
</code></pre>
</BODY>
</HTML>
