<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SET RELATION Command</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngset_relation"></a><sup></sup>SET RELATION Command</h1>
<p>
<a href="lngset_relationsa.htm">See Also</a></p>
<p>
Establishes a relationship between two open tables.</p>
<p class=label>
<b>Syntax</b></p>
<p>
SET RELATION TO<br>
 &nbsp; [<i>eExpression1</i> INTO <i>nWorkArea1</i> | <i>cTableAlias1</i><br>
 &nbsp; [, <i>eExpression2</i> INTO <i>nWorkArea2</i> | <i>cTableAlias2</i> ...]<br>
 &nbsp; [IN <i>nWorkArea</i> | <i>cTableAlias</i>]<br>
 &nbsp; [ADDITIVE]]</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>eExpression1</i></p>
<p class=indent>
Specifies the relational expression that establishes a relationship between the parent and child tables. The relational expression is usually the index expression of the controlling index of the child table.</p>
<p class=tl>
The index for the child table can be a single-entry (.idx) index, a multiple-entry structural compound (.cdx) index, or an independent compound index. If the index is compound, specify the proper index tag to order the child table. SET ORDER can be used to specify the index tag that orders the child table.</P><p class=tl>
For example, consider the <code>customer</code> and <code>orders</code> tables described in the Remarks section below. Suppose the child <code>orders</code> table has been indexed and ordered on the customer number with this command:</P><pre><code>SET ORDER TO TAG cust_id
</code></pre>
<p class=tl>
To relate the <code>customer</code> and <code>orders</code> tables on customer number, select the work area containing the <code>customer</code> parent table or include the IN clause to specify the parent table's work area or alias, and issue SET RELATION, specifying the index expression with the following relational expression:</P><pre><code>SET RELATION TO cust_id INTO orders
</code></pre>
<p class=tl>
The child table must be indexed unless the relational expression is numeric. Visual FoxPro displays an error message if you issue SET RELATION with a non-numeric relational expression and the child table isn't ordered with an index.</P><p class=tl>
If <i>eExpression1</i> is numeric, it is evaluated when the record pointer in the parent table is moved. The record pointer in the child table is then moved to record number <i>eExpression1</i>.</P><p class=dt>
INTO <i>nWorkArea1</i> | <i>cTableAlias1</i></p>
<p class=indent>
Specifies the work area number (<i>nWorkArea1</i>) or table alias (<i>cTableAlias1</i>) of the child table.</p>
<p class=dt>
<i>eExpression2</i> INTO <i>nWorkArea2</i> | <i>cTableAlias2</i> ...</p>
<p class=indent>
Specifies a relational expression (<i>eExpression2</i>) and a child table or tables to establish an additional relationship between the parent table and child tables. From a single SET RELATION command, you can create multiple relations between a single parent table and various child tables. Precede each relation by a comma.</p>
<p class=tl>
<i>nWorkArea2</i> specifies a work area number and <i>cTableAlias2</i> specifies a table alias for the child table.</P><p class=dt>
IN <i>nWorkArea</i></p>
<p class=indent>
Specifies the work area of the parent table.</p>
<p class=dt>
IN <i>cTableAlias</i></p>
<p class=indent>
Specifies the alias of the parent table.</p>
<p class=tl>
The IN clause allows you to create a relationship without first selecting the parent table's work area. If you omit <i>nWorkArea</i> and <i>cTableAlias</i>, the parent table must be open in the currently selected work area.</P><p class=dt>
ADDITIVE</p>
<p class=indent>
Preserves all existing relationships in the current work area and creates the specified relationship. If you omit ADDITIVE, any relationships in the current work area are broken and the specified relationship is created.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Before you can establish a relationship, one table (the parent table) must be open, and the other table (the child table) must be open in another work area.</p>
<p>
Related tables typically have a common field. For example, suppose a table named <code>customer</code> contains customer information. It has fields for name, address, and a unique customer number. A second table named <code>orders</code> contains order information. It too has a field for the customer number, along with fields for dates and shipping information.</p>
<p>
SET RELATION relates these two tables on their common field — the customer number field. To set the relation, the child table must be indexed on the common field. After you set the relation, whenever you move the record pointer to a record with a given customer number in the parent <code>customer</code> table, the record pointer in the child <code>orders</code> table moves to the record with the same customer number. If a matching record can't be found in the child table, the record pointer in the child table is positioned at the end of the table.</p>
<p>
Issue SET RELATION TO with no arguments to remove all relationships in the currently selected work area. SET RELATION OFF can be used to remove a specific parent-child relationship.</p>
</BODY>
</HTML>
