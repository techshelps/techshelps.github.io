<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Filter Expression Dialog Box (VFP Foundation Class)</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="ffcfilter_expression"></a><sup></sup>Filter Expression Dialog Box</h1>
<p>
<a href="ffcfilter_expressionsa.htm">See Also</a></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Category</b></td>
<td width=67%>Data Query</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Default Catalog</b></td>
<td width=67%>Visual&nbsp;FoxPro&nbsp;Catalog\Foundation&nbsp;Classes\Data&nbsp;Query</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Class</b></td>
<td width=67%>_filterexpr</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Base Class</b></td>
<td width=67%>Form</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Class Library</b></td>
<td width=67%>_table.vcx</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Parent Class</b></td>
<td width=67%>_form</td>
</tr>
<tr valign=top>
<td class=label width=33%><b>Sample</b></td>
<td width=67%>...\Samples\Vfp98\Solution\Ffc\datasort.scx</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
This class creates an advanced filter expression dialog. </p>
<p>
To use, drop the class on a project or, from the Component Gallery <a href="newitem_shortcut_menu.htm">Item Shortcut menu</a>, select <b>Create Form</b> or <b>Add to Project</b>. When you drop the class on a project, you can choose between adding the class, creating a subclass, or creating a form. When you drop the class on a project or choose <b>Create a new form from the selected class</b> in the shortcut menu, Visual FoxPro displays an Open dialog box so you can specify the name of the form. Visual FoxPro then creates and opens the form in the Form Designer.</p>
<p>
_FilterExpr is a modal dialog that enables you to specify a filter expression, or to construct a filter expression using one of two subsidiary dialogs. </p>
<p>
The lAdvanced property toggles _FilterExpr between two modes, standard and advanced. In standard mode, the Build expression button uses an instance of the _FilterDialog class to build a simple expression. In advanced mode, the button uses the value in the _GETEXPR system variable. </p>
<p>
The cFilter property contains the current contents of the filter expression the user builds. The edit box bound to the cFilter property can contain up to 254 characters.</p>
<p>
If _FilterExpr doesn’t find a table on which to act, it returns false (.F.) before leaving the Init event; otherwise it restores these settings in its Unload method. When _FilterExpr instantiates, if ALIAS(&nbsp;) is empty, it looks for an open table in the current data session of the currently selected form or formset.</p>
<p>
See <a href="ffcusing_visual_foxpro_foundation_classes.htm">Guidelines for Using Visual FoxPro Foundation Classes</a> for more information on using foundation classes.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=48%><b>Properties, Events, Methods</b></td>
<td class=label width=52%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=48%>cFilter property</td>
<td width=52%>Contains the filter expression processed in the <i>SetupFilter </i>method.<br>
<B><b>Default: </b></B>(SPACE(254))</td>
</tr>
<tr valign=top>
<td width=48%>lAdvanced property</td>
<td width=52%>This is used to toggle _FilterExpr between two modes, _FilterDialog false (.F) and GETEXPR true (.T.).<br>
<B><b>Default:</b></B> .F.</td>
</tr>
<tr valign=top>
<td width=48%>iOldSession property</td>
<td width=52%>The old data session.<br>
<B><b>Default: </b></B>0</td>
</tr>
<tr valign=top>
<td width=48%>iOldSelect property</td>
<td width=52%>The old work area.<br>
<B><b>Default: </b></B>0</td>
</tr>
<tr valign=top>
<td width=48%>SetFilter method</td>
<td width=52%>Sets the value of <i>cFilter</i>. This method is primarily useful when _FilterDialog is called modally to do further work on the expression to be built.<br>
<B><b>Syntax: </b></B>SetFilter(<i>tcValue</i>)<br>
<B><b>Return:</b></B> <i>cFilter </i><br>
<B><b>Arguments: <br>
</b></B><i>tcValue </i>specifies an expression to use as the filter.<br>
<i>cFilter </i>is the filter expression.</td>
</tr>
<tr valign=top>
<td width=48%>SetFilterOnTable method</td>
<td width=52%>If the current table allows navigation, this method applies the current filter to the current alias, issues a LOCATE, and then invokes the RefreshLastWindowAfterChange(&nbsp;) method to get the filter for the next available window in your application.<br>
<B><b>Syntax: </b></B>SetFilterOnTable(&nbsp;)<br>
<B><b>Return:</b></B> none<br>
<B><b>Arguments: </b></B> none</td>
</tr>
<tr valign=top>
<td width=48%>cFilter_Access method</td>
<td width=52%>Internal to the class.<br>
Removes carriage returns, line feeds, and tabs from the filter expression and replaces these characters with spaces.</td>
</tr>
</table>
</BODY>
</HTML>
