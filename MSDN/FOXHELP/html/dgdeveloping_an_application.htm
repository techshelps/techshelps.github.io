<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Developing an Application</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="dgdeveloping_an_application"></a><sup></sup>Chapter 2: Developing an Application</h1>
<p>
A Visual FoxPro application typically includes one or more <a href="glsdatabase.htm">databases</a>, a main program that sets up the application’s system environment, and a user interface comprised of <a href="glsform.htm">forms</a>, <a href="glstoolbar.htm">toolbars</a>, and <a href="glsmenu.htm">menus</a>. <a href="glsquery.htm">Queries</a> and reports allow users to retrieve information from their data.</p>
<p>
This chapter discusses:</p>
<ul type=disc>
<li>
<a href="#dgplanning_the_application">Planning the Application</a></li>
<li>
<a href="#dg02creating_databases">Creating Databases</a></li>
<li>
<a href="#dg02creating_classes">Creating Classes</a></li>
<li>
<a href="#dgproviding_access_to_functionality">Providing Access to Functionality</a></li>
<li>
<a href="#dgproviding_access_to_information">Providing Access to Information</a></li>
<li>
<a href="#dgtesting_and_debugging">Testing and Debugging</a><br><br></li>
<li>
For information on developing applications using the Application Builder and the enhanced Application Framework, see <a href="cmddeveloping_applications_with_framework.htm">Developing Applications Using the Applications Framework</a>.</li>
</ul>

<h2><a name="dgplanning_the_application"></a>Planning the Application</h2>
<p>
Careful planning saves time, effort, money, and sanity. The more you involve your end users in the planning process, the better. No matter how carefully you plan, though, you’ll probably end up refining the specifications as you progress through the project and your end users provide feedback.</p>
<p>
Some of the design decisions you make will impact how you create elements of the application. Who will be using the application? What is the center of user activity? How large a data set will you conceivably be working with? Will back-end data servers be used or will the data be exclusively local to a single user or multiple users over a network? Consider these factors before getting too far into the project.</p>
<p>
<b>Common User Activities</b></p>
<p>
Even if your end users are working with customers, orders, and parts, how they are working with this information will determine how your application should deal with the data. An order entry form, like the one in Tastraded.app (in the Visual Studio …\Samples\Vfp98\Tastrade directory), might be necessary for some applications, but wouldn’t be a good tool for managing inventory or tracking sales, for example.</p>
<p>
<b>Database Size</b></p>
<p>
You’ll want to think more about performance if you are dealing with large sets of data. Chapter 15, <a href="dgoptimizing_applications.htm">Optimizing Applications</a>, explains methods of optimizing performance. You may also want to adjust the way you allow users to move through the data. If you have twenty or thirty records in a table, it's okay to let users move the record pointer in a table one record at a time. If you have twenty or thirty thousand records, you’ll have to provide other ways of getting to the desired data: adding search lists or dialogs, <a href="glsfilter.htm">filters</a>, custom <a href="glsquery.htm">queries</a>, and so on. Chapter 10, <a href="dgusing_controls.htm">Using Controls</a>, explains how to use a list to select specific table records. Chapter 8, <a href="dgcreating_views.htm">Creating Views</a>, discusses creating parameterized queries.</p>
<p>
<b>Single User vs. Multiple Users</b></p>
<p>
It’s a good idea to create your application with the assumption that multiple users will be accessing the database at the same time. Visual FoxPro makes it easy to program for shared access. Chapter 17, <a href="dgprogramming_for_shared_access.htm">Programming for Shared Access</a>, describes techniques for allowing multiple users to simultaneously access your database.</p>
<p>
<b>International Considerations</b></p>
<p>
If you know your application will be used only in a single-language environment, you don’t have to worry about internationalization. If, on the other hand, you want to expand your market, or if your users could be dealing with international data or environment settings, you’ll want to take these factors into account as you create the application. Chapter 18, <a href="dgdeveloping_international_applications.htm">Developing International Applications</a>, discusses the issues you’ll need to deal with as you develop applications for international use.</p>
<p>
<b>Local vs. Remote Data</b></p>
<p>
If your application deals with remote data, you’ll manage it differently than you would manage native Visual FoxPro data. Chapter 8, <a href="dgcreating_views.htm">Creating Views</a>, explains how to create views to local or remote data. Part 6 of the <i>Programmer’s Guide</i>, <a href="dgcreating_client_server_solutions.htm">Creating Client/Server Solutions</a>, discusses how to design applications that work seamlessly with remote data.</p>
<h2>Overview of the Process</h2>
<p>
The process of creating an application is largely iterative. Since no two applications are exactly the same, you’ll probably develop prototypes and refine some components several times before achieving a finished product. End-user expectations or commitments can also change, requiring you to redefine aspects of the application. And nobody writes bug-free code all the time, so testing and debugging usually lead to some redesigning or rewriting.</p>
<p class=label>
<b>The process of creating an application</b></p>
<p>
<img src="afd02002.gif" border=0></p>
<p>
In addition to taking the big picture into account in your planning stage, you’ll need to decide what functionality is required, what data is involved, and how the database should be structured. You’ll need to design an interface to give users access to the functionality in the application. You can create reports and <a href="glsquery.htm">queries</a> so that users can extract useful information from their data.</p>
<h2>Starting Development</h2>
<p>
After you have planned which components you need in your application, you might want to set up a directory framework and project to organize the component files you want to create for your application. You can make the framework yourself in the Windows Explorer and the project in the <a href="wndproject_manager.htm">Project Manager</a>, or use the <a href="wizapplication_wizard_6.htm">Application Wizard</a> to set up both at one time. This new&nbsp; Application Wizard opens the <a href="cmdapplication_builder.htm">Application Builder</a> so you can further customize a project and components you start in the wizard. For backward compatibility, you can still choose the earlier <a href="wizapplication_wizard.htm">Application Wizard (5.0)</a>.</p>
<h2>Using the Project Manager</h2>
<p>
The Project Manager allows you to compile your completed application, but in the development phase of the application, the Project Manager makes it easy to design, modify, and run the individual components of your application.</p>
<p class=label>
<b>The Project Manager</b></p>
<p>
<img src="afd02003.gif" border=0></p>
<p>
When you use the Project Manager, you can:</p>
<ul type=disc>
<li>
Modify and run pieces of your application (forms, menus, programs) with just a few clicks.</li>
<li>
Drag classes, tables, and fields from the Project Manager to the <a href="wndform_designer.htm">Form Designer</a> or <a href="wndclass_designer.htm">Class Designer</a>.</li>
<li>
Drag classes between class libraries.</li>
<li>
View and modify your tables and databases easily.</li>
<li>
Add descriptions for the components in your application.</li>
<li>
Drag-and-drop elements between projects.</li>
</ul>
<p>
For detailed information about how to use the Project Manager, see Chapter 1, <a href="uggetting_started.htm">Getting Started</a>, in the <i>User’s Guide</i>. For information about compiling applications, see Chapter 13, <a href="dgcompiling_an_application.htm">Compiling an Application</a>, in this book.</p>

<h2><a name="dg02creating_databases"></a>Creating Databases</h2>
<p>
Because a database application is so dependent on the underlying data, the best way to begin designing your application is to start with the data. You can set up your database and determine what the relationships are between tables, what business rules you want to enforce, and so on, before you design any interface or data manipulation components. A sound database foundation makes development work much easier.</p>
<p>
Chapter 5, <a href="dgdesigning_databases.htm">Designing Databases</a>, Chapter 6, <a href="dgcreating_databases.htm">Creating Databases</a>, and Chapter 7, <a href="dgworking_with_tables.htm">Working with Tables</a>, discuss design issues and explain how to use Visual FoxPro to design effective and efficient tables and databases.</p>

<h2><a name="dg02creating_classes"></a>Creating Classes</h2>
<p>
You can create a robust, object-oriented, event-driven application using only the Visual FoxPro base <a href="glsclass.htm">classes</a>. You might not ever have to create a class, but you'll want to. In addition to making code more manageable and easier to maintain, a solid class library allows you to rapidly create prototypes and quickly plug functionality into an application. You can create classes in a program file, in the <a href="wndform_designer.htm">Form Designer</a> (using the Save As Class command on the File menu), or in the <a href="wndclass_designer.htm">Class Designer</a>.</p>
<p>
Chapter 3, <a href="dgobject_oriented_programming.htm">Object-Oriented Programming</a>, discusses some of the benefits of creating classes and details how to create them either with the Class Designer or programmatically.</p>

<h2><a name="dgproviding_access_to_functionality"></a>Providing Access to Functionality</h2>
<p>
User satisfaction will be strongly influenced by the interface you provide for the functionality of your application. You can have a very clean class model, elegant code, and clever solutions to difficult problems in your application, but these are almost always hidden from your customers. What they see is the interface you provide. Fortunately, the Visual FoxPro design tools make it easy to create attractive, feature-rich interfaces.</p>
<p>
The user interface consists primarily of <a href="glsform.htm">forms</a>, <a href="glstoolbar.htm">toolbars</a>, and <a href="glsmenu.htm">menus</a>. You can associate all the functionality in your application with <a href="glscontrol.htm">controls</a> or menu commands in the interface. Chapter 9, <a href="dgcreating_forms.htm">Creating Forms</a>, describes how to create forms and <a href="glsform_set.htm">form sets</a>. Utilizing Visual FoxPro controls in your forms is discussed in Chapter 10, <a href="dgusing_controls.htm">Using Controls</a>. See Chapter 11, <a href="dgdesigning_menus_and_toolbars.htm">Designing Menus and Toolbars</a>, to put the finishing touches on your application.</p>

<h2><a name="dgproviding_access_to_information"></a>Providing Access to Information</h2>
<p>
You’ll probably display some information for your users in <a href="glsform.htm">forms</a>, but you’ll also want to give your users the ability to specify exactly what information they want to see and the option to print it out in reports or labels. <a href="glsquery.htm">Queries</a>, especially queries that accept user-defined parameters, allow users to have greater control over their data. Reports allow users to print full, partial, or summary pictures of their data. <a href="glsactivex_control.htm">ActiveX controls</a> and <a href="glsole_automation.htm">automation</a> allow your application to share information and functionality with other applications.</p>
<p>
The <a href="wndquery_designer.htm">Query Designer</a> and the <a href="wndreport_designer.htm">Report Designer</a> are discussed in chapters 4 through 7 of the <i>User’s Guide</i>. Chapter 12 of this book, <a href="dgadding_queries_and_reports.htm">Adding Queries and Reports</a>, discusses integrating queries and reports into an application. Chapter 16, <a href="dgadding_ole.htm">Adding OLE</a>, describes integrating OLE in an application.</p>

<h2><a name="dgtesting_and_debugging"></a>Testing and Debugging</h2>
<p>
Testing and debugging is something most developers do at each step in the development process. It's a good idea to test and debug as you go. If you create a form, you’ll want to make sure it does what you want it to do before moving on to other elements of your application.</p>
<p>
Chapter 14, <a href="dgtesting_and_debugging_applications.htm">Testing and Debugging Applications</a>, explains how to use the Visual FoxPro debugging tools to debug your applications and provides tips on how to make the debugging process easier.</p>
</BODY>
</HTML>
