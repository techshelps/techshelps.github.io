<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_FindWindowP( ) API Library Routine Example</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<p class=label>
<b><a name="lng_findwindowplp_rpx"></a><sup></sup>_FindWindowP(&nbsp;) API Library Routine Example</b></p>
<p>
The following example waits for a left mouse button click and then uses _FindWindowP(&nbsp;) to get the window handle for the mouse down position.</p>
<h4>Visual FoxPro Code</h4>
<pre><code>WAIT WINDOW "Click Mouse In Window" NOWAIT
SET LIBRARY TO FINDWINP
</code></pre>
<h4>C Code</h4>
<pre><code>#include &lt;pro_ext.h&gt;

void putLong(long n, int width)
{
 &nbsp; Value val;

 &nbsp; val.ev_type = 'I';
 &nbsp; val.ev_long = n;
 &nbsp; val.ev_width = width;

 &nbsp; _PutValue(&amp;val);
}

FAR FindWindowEx(ParamBlk FAR *parm)
{
 &nbsp; WHANDLE wh;
 &nbsp; Point mousePos;
 &nbsp; int where;

//&nbsp; Get mouse position when left button goes down
 &nbsp; while (_InKey(0, MOUSEACTIVE | HIDECURSOR) != 151);
 &nbsp; while (!_MousePosP(&amp;mousePos));

 &nbsp; switch (where = <span class=cfe><b>_FindWindowP(</b></span>&amp;wh, mousePos<span class=cfe><b>)</b></span>)
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; case inBorder:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inBorder"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inHelp:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inHelp"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inContent:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inContent"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inDrag:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inDrag"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inGrow:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inGrow"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inGoAway:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inGoAway"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inZoom:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inZoom"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inVUpArrow:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inVUpArrow"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inVDownArrow:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inVDownArrow"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inVPageUp:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inVPageUp"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inVPageDown:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inVPageDown"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inVThumb:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inVThumb"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inHUpArrow:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inHUpArrow"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inHDownArrow:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inHDownArrow"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inHPageUp:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inHPageUp"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inHPageDown:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inHPageDown"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inHThumb:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inHThumb"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; case inMenuBar:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down inMenuBar"); break;
 &nbsp;&nbsp;&nbsp;&nbsp; default:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _PutStr("\nMouse down someplace else"); break;
 &nbsp; }
 &nbsp; _GlobalToLocalP(&amp;mousePos, wh);
 &nbsp; _PutStr("\nPosition relative to window:");
 &nbsp; putLong(mousePos.v, 5);
 &nbsp; _PutChr(' ');
 &nbsp; putLong(mousePos.h, 5);
}

FoxInfo myFoxInfo[] = {
 &nbsp; {"ONLOAD", FindWindowEx, CALLONLOAD, ""},
};
FoxTable _FoxTable = {
 &nbsp; (FoxTable FAR *) 0, sizeof(myFoxInfo)/sizeof(FoxInfo), myFoxInfo
};
</code></pre>
</BODY>
</HTML>
