<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CALCULATE Command</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="lngcalculate"></a><sup></sup>CALCULATE Command</h1>
<p>
<a href="lngcalculatex.htm">Example</a> &nbsp; <a href="lngcalculatesa.htm">See Also</a></p>
<p>
Performs financial and statistical operations on fields in a table or on expressions involving fields.</p>
<p class=label>
<b>Syntax</b></p>
<p>
CALCULATE <i>eExpressionList</i><br>
 &nbsp; [<i>Scope</i>] [FOR <i>lExpression1</i>] [WHILE <i>lExpression2</i>]<br>
 &nbsp; [TO <i>VarList</i> | TO ARRAY <i>ArrayName</i>]<br>
 &nbsp; [NOOPTIMIZE]</p>
<p class=label>
<b>Arguments</b></p>
<p class=dt>
<i>eExpressionList</i></p>
<p class=indent>
Specifies the expressions that can contain any combination of the following functions:</p>
<p class=tl>
AVG(<i>nExpression</i>)</P><p class=tl>
CNT(&nbsp;)</P><p class=tl>
MAX(<i>eExpression</i>)</P><p class=tl>
MIN(<i>eExpression</i>)</P><p class=tl>
NPV(<i>nExpression1</i>, <i>nExpression2</i> [, <i>nExpression3</i>])</P><p class=tl>
STD(<i>nExpression</i>)</P><p class=tl>
SUM(<i>nExpression</i>)</P><p class=tl>
VAR(<i>nExpression</i>)</P><p class=tl>
Functions in the expression list <i>eExpressionList</i> are separated by commas. These functions are specific to CALCULATE and are described in detail later in this section. They should not be confused with similarly named independent functions. For example, CALCULATE MIN(&nbsp;) is not the same as MIN(&nbsp;).</P><p class=dt>
<i>Scope</i></p>
<p class=indent>
Specifies a range of records used in the calculation. Only the records that fall within the range of records are included in the calculation. The scope clauses are: ALL, NEXT <i>nRecords</i>, RECORD <i>nRecordNumber</i>, and REST. For more information on scope clauses, see the <a href="tblscope_clauses.htm">Scope Clauses</a> topic. Commands that include <i>Scope</i> operate only on the table in the active work area.</p>
<p class=tl>
The default scope for CALCULATE is ALL records.</P><p class=dt>
FOR <i>lExpression1</i></p>
<p class=indent>
Specifies that only the records that satisfy the logical condition <i>lExpression1</i> are included in the calculation. Including a FOR clause conditionally includes records in the calculation, filtering out undesired records.</p>
<p class=tl>
Rushmore optimizes a CALCULATE&nbsp;...&nbsp;FOR query if <i>lExpression1</i> is an optimizable expression. For best performance, use an optimizable expression in the FOR clause. For information on Rushmore optimizable expressions, see <a href="lngset_optimize.htm">SET OPTIMIZE</a> and "Understanding Rushmore Technology" in Chapter 15, <a href="dgoptimizing_applications.htm">Optimizing Applications</a>, in the <i>Programmer's Guide</i>.</P><p class=dt>
WHILE <i>lExpression2</i></p>
<p class=indent>
Specifies a condition whereby records are included in the calculation as long as the logical expression <i>lExpression2</i> evaluates to true (.T.).</p>
<p class=dt>
TO <i>VarList</i></p>
<p class=indent>
Specifies one or more variables to which the results of the calculation are stored. If a variable you specify does not exist, Visual FoxPro automatically creates the variable with the name you specify.</p>
<p class=dt>
TO ARRAY <i>ArrayName</i></p>
<p class=indent>
Specifies an array name to which the results of the calculation can be stored. If the array name you specify does not exist, Visual FoxPro automatically creates an array with the name you specify. If the array exists and isn't large enough to contain all the results of the calculation, Visual FoxPro automatically increases the size of the array to accommodate the information. If an existing array is larger than necessary, additional elements are left unchanged. Results are stored to the array elements in the order they are specified in the CALCULATE command.</p>
<p class=dt>
NOOPTIMIZE</p>
<p class=indent>
Disables Rushmore optimization of CALCULATE. For more information, see <a href="lngset_optimize.htm">SET OPTIMIZE</a> and "Understanding Rushmore Technology" in Chapter 15, <a href="dgoptimizing_applications.htm">Optimizing Applications</a>, in the <i>Programmer's Guide</i>.</p>
<p class=dt>
AVG(<i>nExpression</i>)</p>
<p class=indent>
Computes the arithmetic mean of <i>nExpression</i>. Only records meeting the <i>Scope</i> and/or optional FOR or WHILE conditions are included in the result.</p>
<p class=dt>
CNT(&nbsp;)</p>
<p class=indent>
Returns the number of records in the table. Only records meeting the <i>Scope</i> and/or optional FOR or WHILE conditions are included in the result.</p>
<p class=dt>
MAX(<i>eExpression</i>)</p>
<p class=indent>
Returns the highest or latest value of <i>eExpression</i>. Within the MAX(&nbsp;) clause, you can specify any character, date, datetime, numeric, float, integer, double, or currency field, or any expression using fields of these types. Only records meeting the <i>Scope</i> and/or optional FOR or WHILE conditions are included in the result.</p>
<p class=dt>
MIN(<i>eExpression</i>)</p>
<p class=indent>
Returns the lowest or earliest value of <i>eExpression</i>. Any character, date, datetime, numeric, float, integer, double, or currency field, or any valid expression using fields of these types, can be included in <i>eExpression</i>. Only records meeting the <i>Scope</i> and/or optional FOR or WHILE conditions are included in the result.</p>
<p class=dt>
NPV(<i>nExpression1</i>, <i>nExpression2</i> [, <i>nExpression3</i>])</p>
<p class=indent>
Computes the net present value of a series of future cash flows discounted at a constant periodic interest rate.</p>
<p class=tl>
<i>nExpression1</i> specifies the interest rate expressed as a decimal value.</P><p class=tl>
<i>nExpression2</i> specifies a field, field expression, or a numeric expression representing a series of cash flows. Each cash flow can be either positive or negative. In cases where <i>nExpression2</i> is a field, the value for each record in the field is considered a cash flow.</P><p class=tl>
<i>nExpression3</i> specifies an optional initial investment. If the initial investment isn't included, then the initial investment is assumed to occur at the end of the first period. This initial investment is the first record in the field and is negative to represent a cash outflow.</P><p class=tl>
Only records meeting the <i>Scope</i> and/or optional FOR or WHILE conditions are included in the result.</P><p class=dt>
STD(<i>nExpression</i>)</p>
<p class=indent>
Computes the standard deviation of <i>nExpression</i>. The standard deviation measures the degree to which the values of fields or expressions involving fields differ from the average of all the values. The smaller the standard deviation, the less the values vary from the average. Only records meeting the <i>Scope</i> and/or optional FOR or WHILE conditions are included in the result.</p>
<p class=dt>
SUM(<i>nExpression</i>)</p>
<p class=indent>
Totals the values of <i>nExpression</i>. Only records meeting the <i>Scope</i> and/or optional FOR or WHILE conditions are included in the result.</p>
<p class=dt>
VAR(<i>nExpression</i>)</p>
<p class=indent>
Computes the variance from the average of <i>nExpression</i>. The variance is the standard deviation squared. The smaller the variance, the less the values vary from the average. Only records meeting the <i>Scope</i> and/or optional FOR or WHILE conditions are included in the result.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Records containing the null value are not included in the operations that CALCULATE performs.</p>
</BODY>
</HTML>
