<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_NewVar( ) API Library Routine Example</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<p class=label>
<b><a name="lng_newvarlp_rpx"></a><sup></sup>_NewVar(&nbsp;) API Library Routine Example</b></p>
<p>
The following example uses _NewVar(&nbsp;) to create three variables.</p>
<h4>Visual FoxPro Code</h4>
<pre><code>SET LIBRARY TO NEWVAR&nbsp; 
*
* As defined in "pro_ext.h"
*
#define NV_PUBLIC&nbsp;&nbsp; 0
#define NV_PRIVATE&nbsp;&nbsp; 1

= xNewVar('var', 0, 0, 0, NV_PUBLIC)
DISPLAY MEMORY LIKE var

= xNewVar('onedim', 1, 5, 0, NV_PUBLIC)
DISPLAY MEMORY LIKE onedim

= xNewVar('twodim', 2, 5, 6, NV_PUBLIC)
DISPLAY MEMORY LIKE twodim
</code></pre>
<h4>C Code</h4>
<pre><code>#include &lt;pro_ext.h&gt;

void FAR NewVarEx(ParamBlk FAR *parm)
{
 &nbsp; char FAR *varName;
 &nbsp; Locator loc;
 &nbsp; int flag;
 &nbsp; int retValue;

 &nbsp; // Null terminate character string
 &nbsp; if (!_SetHandSize(parm-&gt;p[0].val.ev_handle,
 &nbsp;&nbsp;&nbsp;&nbsp; parm-&gt;p[0].val.ev_length+1))
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; _Error(182); // "Insufficient memory"
 &nbsp; }
 &nbsp; _HLock(parm-&gt;p[0].val.ev_handle);
 &nbsp; varName = (char FAR *) _HandToPtr(parm-&gt;p[0].val.ev_handle);
 &nbsp; varName[parm-&gt;p[0].val.ev_length] = '\0';
 &nbsp; loc.l_subs = parm-&gt;p[1].val.ev_long;
 &nbsp; loc.l_sub1 = parm-&gt;p[2].val.ev_long;
 &nbsp; loc.l_sub2 = parm-&gt;p[3].val.ev_long;
 &nbsp; flag = parm-&gt;p[4].val.ev_long;
 &nbsp; if ((retValue = <span class=cfe><b>_NewVar(</b></span>varName, &amp;loc, flag<span class=cfe><b>)</b></span>) &lt; 0) 
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; // <span class=cfe><b>_NewVar()</b></span> returns negative Visual FoxPro error number
 &nbsp;&nbsp;&nbsp;&nbsp; _Error(-retValue); 
 &nbsp; }
 &nbsp; _HUnLock(parm-&gt;p[0].val.ev_handle);
}

FoxInfo myFoxInfo[] = {
 &nbsp; {"XNEWVAR", (FPFI) NewVarEx, 5, "C,I,I,I,I"},
};
FoxTable _FoxTable = {
 &nbsp; (FoxTable FAR *) 0, sizeof(myFoxInfo)/sizeof(FoxInfo), myFoxInfo
};
</code></pre>
</BODY>
</HTML>
