<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Importing and Exporting Data</title>
<style>
<link disabled rel=stylesheet href=/stylesheets/msdn_ie3.css>
<style type="text/css">
@import url(/stylesheets/msdn_ie4.css);
</style></HEAD>
<BODY>

<h1><a name="ugimporting_and_exporting_data"></a><sup></sup>Chapter 9: Importing and Exporting Data</h1>
<p>
You can copy data between Visual FoxPro and other applications by importing to and exporting from Visual FoxPro. The data can be in any one of a variety of text, spreadsheet, and table file formats. You can create a new Visual FoxPro table, add to an existing Visual FoxPro table, or copy data to a different file type.</p>
<p>
For more ways to share data with other applications, see Chapter 10, <a href="ugsharing_information_with_other_applications.htm">Sharing Information with Other Applications</a>.”</p>
<p>
This chapter discusses:</p>
<ul type=disc>
<li>
<a href="#ugunderstanding_importing_and_exporting">Understanding Importing and Exporting</a></li>
<li>
<a href="#ugimporting_data">Importing Data</a></li>
<li>
<a href="#ugappending_data">Appending Data</a></li>
<li>
<a href="#ugexporting_data">Exporting Data</a></li>
</ul>

<h1><a name="ugunderstanding_importing_and_exporting"></a>Understanding Importing and Exporting</h1>
<p>
You can choose from three ways to copy data from outside of Visual FoxPro:
<ol>
<li>
Importing<br><br></li>
<li>
Appending<br><br></li>
<li>
Exporting</li>
</ol>
<p>
When you import or append data, you bring the data from another application into Visual FoxPro. When you export data, you send data from a Visual FoxPro table to a file type used by another application. These methods allow you to copy and use, rather than link or share, the data. If you prefer to create links between applications, see Chapter 10, <a href="ugsharing_information_with_other_applications.htm">Sharing Information with Other Applications</a>.</p>
<p class=label>
<b>Importing and appending data to Visual FoxPro tables</b></p>
<p>
<img src="afu09003.gif" border=0></p>
<p>
When you import data, you copy data from a source file, create a new table, and populate the table with the file’s data. For example, you can import the data from a dBASE table to create a Visual FoxPro table. After importing a file, you can use it like any other Visual FoxPro table.</p>
<p>
When you append data, you add the source data to a Visual FoxPro table after the last record in the table. You can specify fields to import and select records that meet a condition in an <a href="glsexpression.htm">expression</a>. After appending from the file, you can view and edit the records in the Visual FoxPro table.</p>
<p>
When you export, you copy data from a Visual FoxPro table into a new file formatted for use in another application. For example, you can export Visual FoxPro data to a Microsoft Excel worksheet file.</p>
<p class=label>
<b>Exporting data from Visual FoxPro</b></p>
<p>
<img src="afu09004.gif" border=0></p>
<p>
You select the source and destination files. You can also specify fields to export, set the <a href="glsscope.htm">scope</a> of records to export, and select records that meet a condition.</p>

<h2><a name="ugimporting_data"></a>Importing Data</h2>
<p>
If you want to import from your source file, you can either let Visual FoxPro define the structure of the new table or use the <a href="wizimport_wizard.htm">Import Wizard</a> to specify its structure. Visual FoxPro uses the field order in the source file to define the structure of the destination table. If you want to define the structure, you can modify the file in the source application or use the Import Wizard.</p>
<p>
If you no longer have access to the application that supports the source file and you want to change the order or data type of the fields, you can import the source file, then create a <a href="glsquery.htm">query</a> that outputs the fields in the order you want to another new table. For more information, see Chapter 4, <a href="ugretrieving_data.htm">Retrieving Data</a>. </p>
<p>
When you import a file, you must choose the file type you want to import and specify the source file and destination table names.</p>

<h3><a name="ugchoosing_a_file_type_to_import"></a>Choosing a File Type to Import</h3>
<p>
The following table lists the file types you can import into Visual FoxPro:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>File Type</b></td>
<td class=label width=23%><b>File Extension</b></td>
<td class=label width=46%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=31%>Microsoft<sup>®</sup> Excel</td>
<td width=23%>xls</td>
<td width=46%>A Microsoft Excel (versions 2.0, 3.0, 4.0, 5.0, and 97) worksheet format. The column cells become fields, and rows become records.</td>
</tr>
<tr valign=top>
<td width=31%>Lotus 1-2-3</td>
<td width=23%>wks<br>
wk1<br>
wk3</td>
<td width=46%>A Lotus 1-2-3 spreadsheet for releases 1-A, 2.x, and 3.x. The column cells become fields and rows become records.</td>
</tr>
<tr valign=top>
<td width=31%>Borland Paradox</td>
<td width=23%>db</td>
<td width=46%>A Paradox table for versions 3.5 and 4.0.</td>
</tr>
</table><br>
<p>
If you want to use tables from a previous version of FoxPro or use dBASE files, you can open and use them without importing. Visual FoxPro will ask if you want to convert the table to Visual FoxPro 6.0. Once you convert a table from a previous version, this table cannot be opened in the previous version.</p>
<p>
For more information on importing files, see the <a href="lngimport.htm">IMPORT</a> command.</p>
<p>
For considerations which affect importing Microsoft Excel, Lotus, and Microsoft Access data, see <a href="#ugchoosing_a_file_type_to_import">Choosing a File Type to Import</a> earlier in this chapter.</p>
<h3>Importing Data with the Import Wizard</h3>
<p>
The Import Wizard helps you to create a new table from your source file. The wizard asks you a series of questions, imports the file based on your answers, and allows you to control how the new table is structured.</p>
<p class=label>
<b>To import a file with the Import Wizard</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Import</b>.<br><br></li>
<li>
From the <b>Import</b> dialog box, choose <b>Import Wizard</b>.<br><br></li>
<li>
Follow the instructions on the wizard screens.</li>
</ol>
<h3>Importing Data into a New Table</h3>
<p>
You can import data from a table or spreadsheet format using the source file’s structure to define the new table.</p>
<p class=label>
<b>To import data to a new table</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Import</b>.<p class=label>
<b>Import dialog box</b>
<p>
<img src="afu09005.gif" border=0></P></li>
<li>
In the <b>Type</b> box, enter the format of the file you want to import.<br><br></li>
<li>
In the <b>From</b> box, enter the name of the source file.<br><br></li>
<li>
If you selected a spreadsheet in the <b>Type</b> box, enter the sheet number in the <b>Sheet</b> box that appears.<br><br></li>
<li>
Choose <b>OK</b>.<p class=tl>
Visual FoxPro creates a new table using the source file.</P></li>
</ol>
<p>
If you want to import to a new table from a text file without using the Import Wizard, you need to create a new table with fields that match the order, data type, and width of the fields in the text file and then append the text to the new table.</p>
<p>
After importing the file, you can add the new table to the <a href="glsdatabase.htm">database</a> of your choice. For more information, see Chapter 3, <a href="ugcollecting_tables_into_a_database.htm">Collecting Tables into a Database</a>. You can also modify the new table using the <a href="wndtable_designer.htm">Table Designer</a>. For more information about modifying a table, see Chapter 2, <a href="ugcreating_tables_and_indexes.htm">Creating Tables and Indexes</a>.</p>
<h4>Importing from Lotus 1-2-3</h4>
<p>
When you import spreadsheet data, Visual FoxPro uses the first row in your Lotus 1-2-3 spreadsheet to determine the data types of the fields in the new table. If the first row has literal text headings for each column, all the fields in the table will be character fields, even if the rest of the rows contain numeric data.</p>
<p class=label>
<b>To make sure fields have the appropriate data type</b>
<ul type=disc>
<li>
In Lotus 1-2-3, modify the spreadsheet so that the first row contains the first record of data you want in the table.<p class=atl>
<B><b>Caution</b></B>&nbsp;&nbsp;&nbsp;If your worksheet is from version 2.x or 3.x (file extension .wk1 or .wk3) and has columns with more than eight or nine characters, Visual FoxPro truncates character fields to nine characters for version 2.x worksheets and eight characters for version 3.x. To prevent truncated fields in your table, you can use the <a href="wizimport_wizard.htm">Import Wizard</a> or create a Visual FoxPro table, then <a href="glsappend.htm">append</a> records from the worksheet.</p></li>
</ul>
<p>
Lotus stores dates as the non-negative number of days from January 1, 1900. If the new table does not have the correct data type, you can translate the Lotus date fields in Visual FoxPro.</p>
<h4>Translating Lotus Date Fields</h4>
<p>
If Lotus date fields imported incorrectly, you can translate them by adding the Julian date for January 1, 1900 (the value 2415019) to the date value in the field.</p>
<p class=label>
<b>To translate Lotus date fields</b>
<ol>
<li>
Import the spreadsheet to a Visual FoxPro table.<br><br></li>
<li>
Use the <a href="wndtable_designer.htm">Table Designer</a> to modify the table and add a new date field to the table.<br><br></li>
<li>
If the date was imported as a numeric value, use the REPLACE command and CTOD(&nbsp;) function to copy the date to the new field:<pre><code>REPLACE ALL NewDateField ;
WITH CTOD(SYS(10,OldDateField+2415019))</code></pre>
<p class=tl>
-or-</P><p class=tl>
If the date was imported as a character value, use the following command to copy the date to the new field:</P><pre><code>REPLACE ALL NewField ;
WITH CTOD(SYS(10,VAL(OldField)+2415019))
</code></pre>
</li>
<li>
From the table, delete the original, incorrect date field.</li>
</ol>
<h4>Importing from Microsoft Excel</h4>
<p>
When you import worksheet data, Visual FoxPro uses the first row in your Microsoft Excel worksheet to determine the data types of the fields in the new table. If the first row has literal text headings for each column, all the fields in the table will be character fields, even if the rest of the rows contain numeric data.</p>
<p class=label>
<b>To make sure fields have the appropriate data type</b>
<ul type=disc>
<li>
In Microsoft Excel, modify the worksheet so that the first row contains the first record of data you want in the table.<p class=atl>
<B><b>Caution</b></B>&nbsp;&nbsp;&nbsp;If a field in your Microsoft Excel worksheet has a field length of 255, that field is truncated to 254 when it is imported to a Visual FoxPro table.</p></li>
</ul>

<h2><a name="ugappending_data"></a>Appending Data</h2>
<p>
You can add your text, spreadsheet, or table data to an existing Visual FoxPro table. By default, Visual FoxPro uses the file type to map the source fields to the destination table. You can also select fields and records to append. If you want to control the field mapping, you can use the<a href="wizimport_wizard.htm"> Import Wizard</a>, but field selection and logical expression options are not available.</p>
<h3>Choosing a File Type to Append</h3>
<p>
The following table lists the file types you can append to Visual FoxPro:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>File Type</b></td>
<td class=label width=23%><b>File Extension</b></td>
<td class=label width=46%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=31%>Table</td>
<td width=23%>dbf</td>
<td width=46%>A FoxPro<sup>®</sup> table from a database outside the current database or a dBASE file.</td>
</tr>
<tr valign=top>
<td width=31%>Tab delimited</td>
<td width=23%>txt</td>
<td width=46%>A text file with a tab separating each field.</td>
</tr>
<tr valign=top>
<td width=31%>Comma delimited</td>
<td width=23%>txt</td>
<td width=46%>A text file with a comma separating each field.</td>
</tr>
<tr valign=top>
<td width=31%>Space delimited</td>
<td width=23%>txt</td>
<td width=46%>A text file with one space separating each field.</td>
</tr>
<tr valign=top>
<td width=31%>System Data Format</td>
<td width=23%>sdf</td>
<td width=46%>A text file with fixed length records ending with a carriage return and line feed.</td>
</tr>
<tr valign=top>
<td width=31%>Microsoft Excel</td>
<td width=23%>xls</td>
<td width=46%>A Microsoft Excel (versions 2.0, 3.0, 4.0, 5.0, and 97) worksheet format. The column cells become fields and rows become records.</td>
</tr>
<tr valign=top>
<td width=31%>Lotus 1-2-3 </td>
<td width=23%>wks<br>
wk1<br>
wk3</td>
<td width=46%>A Lotus 1-2-3 spreadsheet for releases 1-A, 2.x, and 3.x. The column cells become fields and rows become records.</td>
</tr>
<tr valign=top>
<td width=31%>Borland Paradox</td>
<td width=23%>db</td>
<td width=46%>A Paradox table for versions 3.5 and 4.0.</td>
</tr>
</table><br>
<p>
For more information on appending files, see the <a href="lngappend_from.htm">APPEND FROM</a> command.</p>
<h3>Appending Data with the Import Wizard</h3>
<p>
The <a href="wizimport_wizard.htm">Import Wizard</a> asks you a series of questions and appends the data from the source file based on your answers. Using the wizard, you can choose to map the source fields to the destination fields by changing the column numbers.</p>
<p class=label>
<b>To append from a file with the Import Wizard</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Import</b>.<br><br></li>
<li>
From the <b>Import</b> dialog box, choose <b>Import Wizard</b>.<br><br></li>
<li>
Follow the instructions on the wizard screens.</li>
</ol>
<h3>Appending Data to an Existing Table</h3>
<p>
You can add records to the active table from another file. By default, Visual FoxPro adds all of the records and fields to the<u> </u>table. Using Append From options, you can specify fields or select records. For more information about field and record selection, see the sections <a href="#ugselecting_fields_to_append">Selecting Fields to Append</a> and <a href="#ugselecting_records_to_append">Selecting Records to Append</a>, later in this chapter.</p>
<p class=label>
<b>To append data</b>
<ol>
<li>
Browse the destination table.<br><br></li>
<li>
From the <b>Table</b> menu, choose <b>Append Records</b>.<p class=label>
<b>Append From dialog box</b>
<p>
<img src="afu09006.gif" border=0></P></li>
<li>
In the <b>Type</b> box, enter the format of the source file.<br><br></li>
<li>
In the <b>From</b> box, enter the name of the source file.<br><br></li>
<li>
In the <b>To</b> box, make sure the correct table name is showing.<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If the table name is not correct, choose <b>Cancel</b>, and then open the correct destination table. The <b>To</b> box shows the table active at the time you selected the <b>Append From</b> command.</p></li>
<li>
If you want to specify fields or select records to append, choose <b>Options</b> and complete the <b>Options</b> dialog box.<br><br></li>
<li>
Choose <b>OK</b>.<p class=tl>
Visual FoxPro adds the records to the table.</P></li>
</ol>

<h4><a name="ugselecting_fields_to_append"></a>Selecting Fields to Append</h4>
<p>
You may want to append only certain fields from your source file. You can select the fields to include in the Append From process.</p>
<p class=label>
<b>To select fields to append</b>
<ol>
<li>
From the <b>Table</b> menu, choose <b>Append Records</b>.<br><br></li>
<li>
In the <b>Append From</b> dialog box, enter the source file type and name, and then choose <b>Options</b>.<p class=label>
<b>Append From Options dialog box</b>
<p>
<img src="afu09007.gif" border=0></P></li>
<li>
In the <b>Append From Options</b> dialog box, choose <b>Fields</b>. The <b>Field Picker</b> dialog box displays the fields in the destination table.<p class=label>
<b>Field Picker dialog box</b>
<p>
<img src="afu09008.gif" border=0></P></li>
<li>
Select fields that match those you want to append from the source file and choose move, then choose <b>OK.</b><p class=tl>
The fields you select appear in the <b>Selected Fields</b> box.</P></li>
<li>
Choose <b>OK</b>.</li>
</ol>

<h4><a name="ugselecting_records_to_append"></a>Selecting Records to Append</h4>
<p>
If you only want to append certain records, you can use a FOR expression. Visual FoxPro uses the <a href="glsexpression.htm">expression</a> to search the entire file and append only records that match the expression you provide. The fields you specify in the FOR expression must exist in both the source and destination files.</p>
<p class=label>
<b>To select records to append</b>
<ol>
<li>
Browse the destination table, and then from the <b>Table</b> menu, choose <b>Append Records</b>.<br><br></li>
<li>
Enter the source file type and name, and then choose <b>Options</b>.<br><br></li>
<li>
Choose <b>For</b> to build an expression in the <b>Expression Builder</b> dialog box.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You do not need to enter the command FOR because it is implied. For example, type <b>customer.country = "Canada" </b>to append only Canadian information.</p></li>
<li>
Choose <b>OK</b>.</li>
</ol>
<h4>Appending Text Files</h4>
<p>
If you append from a text file, Visual FoxPro assumes your fields are separated by commas and that each character field is enclosed by quotation marks. If you have set the decimal point character to display as a comma, numeric and currency data might be parsed into separate fields.</p>
<h4>Appending Numeric or Currency Text</h4>
<p>
If you changed the Visual FoxPro decimal point character to a comma,<b> </b>numeric and currency data might be parsed into separate fields when you append or export the data. For example, Visual FoxPro would translate the value 100,00 into two fields because it appears to be delimited with a comma. Choose one of two methods to make sure the comma is properly translated:</p>
<ul type=disc>
<li>
Use tabs to separate fields in the text file</li>
<li>
Change the decimal point character back to a period</li>
</ul>
<p>
If you want to append from a text file, change the field separators to tabs, then use the APPEND FROM command with the keywords DELIMITED WITH TAB.</p>
<p>
If you want to change the decimal point character to a period before appending text files, you can change the character back to a comma after you append the file.</p>
<p class=label>
<b>To change the decimal point character</b>
<ol>
<li>
In the <b>Command</b> window, type the following command.<pre><code>SET POINT TO
</code></pre>
</li>
<li>
Import the file using the DELIMITED keyword.<br><br></li>
<li>
In the <b>Command</b> window, type the following command to reset the decimal point character to a comma.<pre><code>SET POINT TO ','
</code></pre>
</li>
</ol>

<h2><a name="ugexporting_data"></a>Exporting Data</h2>
<p>
You can export data from your Visual FoxPro tables to text files, spreadsheets, or tables used in other applications. The exporting process requires a source table and the destination’s file type and name. If you want, you can select which fields and record to export. You can use the new file in any application that supports the file type you select.</p>
<h3>Choosing a File Type to Export</h3>
<p>
The following table lists the file types you can export from Visual FoxPro:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>File Type</b></td>
<td class=label width=33%><b>File Extension</b></td>
<td class=label width=34%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=33%>Tabs delimited</td>
<td width=33%>txt</td>
<td width=34%>A text file with a tab separating each field.</td>
</tr>
<tr valign=top>
<td width=33%>Comma delimited</td>
<td width=33%>txt</td>
<td width=34%>A text file with a comma separating each field.</td>
</tr>
<tr valign=top>
<td width=33%>Spaces delimited</td>
<td width=33%>txt</td>
<td width=34%>A text file with one space separating each field.</td>
</tr>
<tr valign=top>
<td width=33%>System Data Format</td>
<td width=33%>sdf</td>
<td width=34%>A text file with fixed length records ending with a carriage return and line feed.</td>
</tr>
<tr valign=top>
<td width=33%>Table</td>
<td width=33%>dbf</td>
<td width=34%>A Visual FoxPro, FoxPro, FoxBASE+<sup>®</sup>, dBASE, or Paradox 3.5 or 4.0 table.</td>
</tr>
<tr valign=top>
<td width=33%>Microsoft Excel</td>
<td width=33%>xls</td>
<td width=34%>A Microsoft Excel (versions 2.0, 3.0, 4.0, 5.0, and 97) worksheet format. The column cells become fields and rows become records.</td>
</tr>
<tr valign=top>
<td width=33%>Lotus 1-2-3</td>
<td width=33%>wks<br>
wk1<br>
</td>
<td width=34%>A Lotus 1-2-3 spreadsheet for releases 1-A, 2.x, and 3.x. The column cells become fields and rows become records.</td>
</tr>
</table><br>
<p>
For more information on exporting, see the <a href="lngcopy_to.htm">COPY TO</a> command.</p>
<h3>Exporting Data to a New File</h3>
<p>
You can copy all of the fields and records from your Visual FoxPro table to a new file or you can copy only the fields and records you select.</p>
<p class=label>
<b>To export data</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Export</b>.<p class=label>
<b>Export dialog box</b>
<p>
<img src="afu09009.gif" border=0></P></li>
<li>
In the <b>Type</b> box, enter the destination file type.<br><br></li>
<li>
In the <b>To</b> box, enter the destination file name.<br><br></li>
<li>
In the <b>From</b> box, enter the source file name.<br><br></li>
<li>
If you want to select fields or records to export, choose <b>Options</b> and complete the <b>Export Options</b> dialog box.<br><br></li>
<li>
Choose <b>OK</b>.</li>
</ol>
<h4>Selecting Fields to Export</h4>
<p>
By default, Visual FoxPro exports all of the fields in the source table to the destination file. You can select which fields to export by using the Export Options dialog box.</p>
<p class=label>
<b>To select fields to export</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Export</b>.<p class=label>
<b>Export dialog box</b>
<p>
<img src="afu09010.gif" border=0></P></li>
<li>
In the <b>Export</b> dialog box, enter the destination file type and name.<br><br></li>
<li>
In the <b>From</b> box, enter the source file name.<br><br></li>
<li>
Choose <b>Options</b>.<p class=label>
<b>Export Options dialog box</b>
<p>
<img src="afu09011.gif" border=0></P></li>
<li>
Choose <b>Fields</b> and select the fields from the <b>Field Picker</b> dialog box.<br><br></li>
<li>
Choose <b>OK</b>.</li>
</ol>
<h4>Selecting Records To Export</h4>
<p>
When you export data, you might want to limit the number of records that are copied to the new file by providing selection criteria. You can:</p>
<ul type=disc>
<li>
Choose a <a href="glsscope.htm">scope</a> of records by specifying a quantity or range.</li>
<li>
Build a FOR <a href="glsexpression.htm">expression</a> that selects records that match a condition.</li>
<li>
Build a WHILE expression that selects records until one record is found that does not match a condition.</li>
</ul>
<p>
You can use any combination of these options. The WHILE expression overrides the other criteria.</p>
<h4>Exporting a Quantity or Range of Records</h4>
<p>
One way you can limit the number of records is to specify a quantity or range of records. Using the Scope option, you can export a single record or a group of records positioned sequentially in the file.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The active <a href="glsindex.htm">index</a> and the current record pointer affect the results of the scope options Next and Rest. For example, the next record in a table indexed by last name is probably different than one in a table indexed by state. This does not affect the Record option because the number for a record does not change when the table is indexed.</p>
<p class=label>
<b>To export a limited number of records</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Export</b>.<br><br></li>
<li>
Enter the source table and destination file information.<br><br></li>
<li>
Choose <b>Options</b>.<p class=label>
<b>Export Options dialog box</b>
<p>
<img src="afu09012.gif" border=0></P></li>
<li>
Choose <b>Scope</b>.<p class=label>
<b>Scope dialog box</b>
<p>
<img src="afu09013.gif" border=0></P></li>
<li>
Select the appropriate Scope option and complete the <b>Scope</b> dialog box.<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=55%><b>To export</b></td>
<td class=label width=45%><b>Choose</b></td>
</tr>
<tr valign=top>
<td width=55%>Every record from the source file</td>
<td width=45%>All</td>
</tr>
<tr valign=top>
<td width=55%>A range of records starting with current record</td>
<td width=45%>Next</td>
</tr>
<tr valign=top>
<td width=55%>A specific record by number</td>
<td width=45%>Record</td>
</tr>
<tr valign=top>
<td width=55%>The current record plus all of those after it to the end of the file</td>
<td width=45%>Rest</td>
</tr>
</table><br>
</li>
<li>
Choose <b>OK</b>.<p class=tl>
Visual FoxPro exports records within the scope you select.</P></li>
</ol>
<h4>Exporting Records That Match a Condition</h4>
<p>
If the records you want to export are not sequential within the table, you can build a logical expression that specifies the selection criteria a record must meet to be exported. For example, you can choose to export all records with a particular value in a field.</p>
<p class=label>
<b>To enter criteria for exporting records</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Export</b>.<br><br></li>
<li>
Enter the source table and destination file information.<br><br></li>
<li>
Choose <b>Options</b>.<br><br></li>
<li>
Choose <b>For</b> to build an expression in the <b>Expression Builder</b> dialog box.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You do not need to include the FOR command in the expression. For example, type <b>customer.country = "Canada"</b> to export only Canadian data.</p></li>
<li>
Choose <b>OK</b>.<p class=tl>
Visual FoxPro evaluates all of the records and exports those that match the condition in the expression.</P></li>
</ol>
<h4>Controlling the Record Export Process</h4>
<p>
When exporting, you can specify a condition that must be met to continue evaluating and selecting records. You enter this condition as a WHILE expression.</p>
<p>
As long as the WHILE expression remains true, Visual FoxPro processes the source table. After finding a record that does not meet the condition, Visual FoxPro ends the evaluation process and exports the selected records. This option allows you to export records based on information outside of the values contained in the fields.</p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If you use a WHILE expression on a file that has not been indexed, the export process may end before evaluating all of the appropriate records. Before performing the export procedure, be sure the source table has the appropriate index active for the WHILE expression you want to use.</p>
<p class=label>
<b>To enter criteria for ending record export</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Export</b>.<br><br></li>
<li>
Enter the source table and destination file information.<br><br></li>
<li>
Choose <b>While</b> to build an expression in the <b>Expression Builder</b> dialog box.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You do not need to include the WHILE command in the statement. For example, type <b>sales &gt; 1000</b> to see only sales above one thousand dollars.</p></li>
<li>
Choose <b>OK</b>.<p class=tl>
Visual FoxPro exports the records it evaluates while the expression is true.</P></li>
</ol>
<h4>Exporting Text Files</h4>
<p>
If you export to a text file, Visual FoxPro assumes that your fields are separated by commas and that each character field is enclosed by quotation marks. If you have set the decimal point character to display as a comma, numeric and currency data might be parsed into separate fields.</p>
<p>
To export to a text file, use the <a href="lngcopy_to.htm">COPY TO</a> command with the appropriate DELIMITED clause as shown in the following table:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=48%><b>For these separators</b></td>
<td class=label width=52%><b>Use this DELIMITED clause</b></td>
</tr>
<tr valign=top>
<td width=48%>Commas between fields and quotation marks enclosing character fields</td>
<td width=52%>DELIMITED</td>
</tr>
<tr valign=top>
<td width=48%>Character fields enclosed by a character other than quotation marks</td>
<td width=52%>DELIMITED WITH <b><i>delimiter</i></b></td>
</tr>
<tr valign=top>
<td width=48%>Tabs between fields</td>
<td width=52%>DELIMITED WITH TAB</td>
</tr>
<tr valign=top>
<td width=48%>Spaces between the fields</td>
<td width=52%>DELIMITED WITH BLANK<sup>1</sup></td>
</tr>
</table><br>
<p class=mini>
<sup>1</sup> Date and times separated by a space will be parsed as two fields with these keywords</p>
<h4>Exporting Numeric or Currency Values</h4>
<p>
If you changed the Visual FoxPro decimal point character to a comma, numeric and currency data might be parsed into separate fields when you append or export the data. For example, Visual FoxPro would translate the value 100,00 into two fields because it appears to be delimited with a comma. Choose one of two methods to make sure the comma is properly translated:</p>
<ul type=disc>
<li>
Use tabs to separate fields in the text file</li>
<li>
Change the decimal point character back to a period</li>
</ul>
<p>
If you want to export the text, use the <a href="lngcopy_to.htm">COPY TO</a> command with the keywords DELIMITED WITH TAB.</p>
<p>
If you want to change the decimal point character to a period before exporting text files, you can change the character back to a comma after you export the file.</p>
<p class=label>
<b>To change the decimal point character</b>
<ol>
<li>
In the <b>Command</b> window, type the following command.<pre><code>SET POINT TO
</code></pre>
</li>
<li>
Export the file using the DELIMITED keyword.<br><br></li>
<li>
In the <b>Command</b> window, type the following command to reset the decimal point character to a comma.<pre><code>SET POINT TO ','
</code></pre>
</li>
</ol>
</BODY>
</HTML>
