<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Value Property</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="csprovalueproperty"></a>Value Property</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csproValueProperty_C;csproValuePropertyC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csproValueProperty_X;csproValuePropertyX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csproValueProperty_A;csproValuePropertyA">
</object></p>
<p>
Sets or returns the value of the property returned by the <b>Property</b> object.</p>
<p class=blue>
<b>Syntax</b></p>
<p>
Property Get <b>Value</b> () <b>As</b> <b>Variant</b></p>
<p>
Property Let <b>Value</b> (Data <b>As</b> <b>Variant</b>) <b>As</b> <b>Variant</b></p>
<p class=blue>
<b>Remarks</b></p>
<p>
The <b>Value</b> property determines the default value for the <b>Property</b> object. Since this returns a Variant, any type of property should be accessible. Objects should be returned as the object type, arrays as arrays. A <b>Property</b> object representing multiple values returns them through the <b>IndexedValue</b> property, and the number of values is returned by the <b>NumIndices</b> property. Setting the <b>Value</b> property works appropriately depending on the type of the value.</p>
<p>
The <b>Value</b> property is always of type Variant, and it is possible that some variant values cannot be packaged into remote function calls. If the property type doesn’t marshall, then it is accessible only by in-process consumers of the object model. Moving data and pointers between two memory spaces, whether two processes or two threads in the same process, is called marshalling. Marshalling is really just the process of packing, unpacking, and translating data or pointers from one interface to another.</p>
<p>
If the property that the <b>Property</b> object represents is read/write at design time, then the <b>Value</b> property is read/write. If the property is read-only, attempting to set the <b>Value</b> property causes an error. If the property is write-only, attempting to return the <b>Value</b> property causes an error.</p>
<p>
If the add-in interacts with the <b>Value</b> property and in doing so causes a critical error, an exception is generated. If the add-in interacts with the <b>Value</b> property and causes a message box to be displayed, the development environment assumes the default for the message box.</p>
</BODY>
</HTML>
