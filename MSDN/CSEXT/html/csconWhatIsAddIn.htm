<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What is an Add-In</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="csconwhatisaddin"></a>What is an Add-In</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csconWhatIsAdd-InC;csconWhatIsAddIn_C">
</object></p>
<p>
<i>Add-ins</i> are tools that you create programmatically using objects and collections in the extensibility model to customize and extend the development environment. In a sense, add-ins are time and labor saving automation tools that "snap-in" to the integrated development environment (IDE).</p>
<p>
The primary goal of an add-in is to enable you to automate a task in the development environment that is difficult, or tedious and time consuming to accomplish manually. There are four types of add-ins: add-ins, Wizards, utilities, and builders:
<ul type=disc>
<li>
<i>Add-in</i> is the generic term for any ActiveX DLL or Exe which supports the IDTExtensibility2 interface, and can be loaded by the development environment.<br><br></li>
<li>
A <i>Wizard</i> is an ActiveX DLL or Exe which leads a user step-by-step through a task, often an especially complex or tricky one. Although they can be constructed any way you like, Microsoft implements its Wizards in a specific manner. A Microsoft Wizard consists of a number of frames, each frame containing an image in the upper left corner, a label description to the right of the image which may also contain instructions, and an optional area near the bottom in which other controls can be placed. You implement wizards using the IDTWizard interface. <br><br></li>
<li>
A <i>utility</i> is an add-in, sometimes a rather large one, which doesn't necessarily require the environment to run. This means that it is compiled as an ActiveX executable, but it retains the ability to also be called as an add-in in the development environment.<br><br></li>
<li>
A <i>builder</i> is a type of add-in that watches the IDE for user-triggered events, (adding a new component to the current project, adding a new control to the Toolbox, adding a new control to a form, and so on), and then reacts by bringing up a series of screens to help ease the task which raised the event. This type of add-in is generally not triggered by an explicit request on the part of the user - it is activated by some event. Builders also don't usually have a wizard-style interface.</li>
</ul>
<p>
Add-ins don't necessarily have to be visible — they can sit hidden in the background and respond to events such as the sizing of a window. Or they may be entirely visual; for example they may resize a group of like objects when the user sizes only one of the objects.</p>
<p>
<span class=blue><b>For More Information</b></span> &nbsp; For information about initializing a new add-in, see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingAddInDsgnr">
</object><a href=JavaScript:alink_2.Click()>Using Add-In Designer</a> in the Visual Basic documentation. Also see the sample add-in written in Java in the Visual J++ Samples directory.</p>
</BODY>
</HTML>
