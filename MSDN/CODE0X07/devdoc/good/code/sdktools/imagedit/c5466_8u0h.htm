<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GLOBALS.H</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5471"></a>GLOBALS.H</h2>
<pre><code>/****************************************************************************/ <br>/*                                                                          */ <br>/*                 Copyright (C) 1987-1996 Microsoft Corp.                */ <br>/*                           All Rights Reserved                            */ <br>/*                                                                          */ <br>/****************************************************************************/ <br>/****************************** Module Header ******************************* <br>* Module Name: globals.h <br>* <br>* Declares global data for the image editor. <br>* <br>* History: <br>* <br>****************************************************************************/ <br> <br> <br>/* <br> * Initialized data and structures ----------------------------------------- <br> */ <br> <br>extern INIENTRY gaie[];             // Initialization data structure. <br> <br>extern BOOL gfGrid;                 // TRUE if the grid is on. <br>extern BOOL gfShowColor;            // TRUE if Color palette is to be shown. <br>extern BOOL gfShowView;             // TRUE if View window is to be shown. <br>extern BOOL gfShowToolbox;          // TRUE if Toolbox is to be shown. <br>extern INT gnBrushSize;             // Current brush size. <br> <br>extern CHAR szAppPos[];             // App window's position keyname. <br>extern CHAR szTBPos[];              // Toolbox window's position keyname. <br>extern CHAR szViewPos[];            // View window's position keyname. <br>extern CHAR szColorPos[];           // Color palette window's position keyname. <br>extern CHAR szrgbScreen[];          // Screen color keyname. <br> <br> <br>/* <br> * Instance handles, window handles and class strings ---------------------- <br> */ <br> <br>extern HANDLE ghInst;               // App instance handle. <br>extern HANDLE haccelTbl;            // Accelerator table handle. <br>extern HCURSOR hcurWait;            // Standard hourglass cursor. <br> <br>extern HWND ghwndMain;              // Main app window handle. <br>extern HWND ghwndWork;              // Workspace window handle. <br>extern HWND ghwndPropBar;           // Properties Bar window handle. <br>extern HWND ghwndToolbox;           // Toolbox window handle. <br>extern HWND ghwndView;              // View window handle. <br>extern HWND ghwndColor;             // Color palette window handle. <br> <br>extern CHAR szMainClass[];          // Main window class. <br>extern CHAR szWorkClass[];          // Work window class. <br>extern CHAR szToolboxClass[];       // Toolbox window class. <br>extern CHAR szToolBtnClass[];       // Toolbox button window class. <br>extern CHAR szViewClass[];          // View window class. <br>extern CHAR szColorBoxClass[];      // Color box window class. <br>extern CHAR szColorLRClass[];       // Color Left-Right sample class. <br> <br> <br>/* <br> * Device list globals ----------------------------------------------------- <br> */ <br> <br>extern PDEVICE gpIconDeviceHead;    // Head of icon device list. <br>extern INT gnIconDevices;           // Number of icon devices. <br>extern PDEVICE gpCursorDeviceHead;  // Head of cursor device list. <br>extern INT gnCursorDevices;         // Number of cursor devices. <br> <br> <br>/* <br> * Globals that describe the current file and image being edited ----------- <br> */ <br> <br>extern CHAR gszFullFileName[];      // Full path name of current file. <br>extern PSTR gpszFileName;           // Current file name (or NULL). <br>extern INT giType;                  // Type of object being edited currently. <br>extern PIMAGEINFO gpImageHead;      // Head of image linked list. <br>extern INT gnImages;                // Number of images in the file. <br>extern BOOL fFileDirty;             // TRUE if the file is dirty. <br> <br>extern PIMAGEINFO gpImageCur;       // Pointer to current image. <br>extern INT gcxImage;                // Width of the image. <br>extern INT gcyImage;                // Height of the image. <br>extern INT gnColors;                // Number of colors of current image. <br>extern BOOL fImageDirty;            // TRUE if the image is dirty. <br> <br> <br>/* <br> * Drawing DC's and bitmaps ------------------------------------------------ <br> */ <br> <br>extern HDC ghdcImage;               // Image XOR DC. <br>extern HBITMAP ghbmImage;           // Image XOR bitmap. <br> <br>extern HDC ghdcANDMask;             // Image AND mask DC. <br>extern HBITMAP ghbmANDMask;         // Image AND mask bitmap. <br> <br>extern HBITMAP ghbmUndo;            // Backup of XOR bitmap for undo. <br>extern HBITMAP ghbmUndoMask;        // Backup of AND mask bitmap for undo. <br> <br> <br>/* <br> * Globals for the color palette and drawing ------------------------------- <br> */ <br> <br>extern INT giColorLeft;             // Index to the left color in gargbCurrent. <br>extern INT giColorRight;            // Index to the right color in gargbCurrent. <br>extern INT gfModeLeft;              // Mode of the left color brush. <br>extern INT gfModeRight;             // Mode of the right color brush. <br>extern HBRUSH ghbrLeft;             // Brush with left mouse button color. <br>extern HBRUSH ghbrLeftSolid;        // Brush with solid left button color. <br>extern HBRUSH ghbrRight;            // Brush with right mouse button color. <br>extern HBRUSH ghbrRightSolid;       // Brush with solid right button color. <br>extern HBRUSH ghbrScreen;           // Brush with screen color. <br>extern HBRUSH ghbrInverse;          // Brush with inverse screen color. <br>extern HPEN ghpenLeft;              // Left color pen. <br>extern HPEN ghpenRight;             // Right color pen. <br>extern DWORD grgbScreenDefault;     // Default screen color. <br>extern DWORD grgbScreen;            // RGB of screen color. <br>extern DWORD grgbInverse;           // RGB of inverse screen color. <br>extern DWORD *gargbCurrent;         // Points to the current color table. <br>extern DWORD gargbColor[];          // Current color color table. <br>extern DWORD gargbMono[];           // Current monochrome color table. <br>extern HPEN hpenDarkGray;           // A dark gray pen. <br> <br>extern DRAWPROC gpfnDrawProc;       // Current drawing functions. <br>extern INT gCurTool;                // Current tool (TOOL_* define). <br>extern HBRUSH ghbrDraw;             // Current drawing brush. <br>extern HBRUSH ghbrDrawSolid;        // Current solid drawing brush. <br>extern HPEN ghpenDraw;              // Current drawing pen. <br>extern INT gfDrawMode;              // Mode of current drawing brush. <br> <br>extern DWORD gargbDefaultColor[];   // The default color palette. <br> <br>extern DWORD gargbDefaultMono[];    // The default monochrome palette. <br> <br>extern DWORD gargbColorTable2[];    // Color table for monochrome DIB's. <br> <br>extern TOOLS gaTools[];             // Tool table. <br> <br> <br>/* <br> * Globals and tables for messages and help -------------------------------- <br> */ <br> <br>extern MESSAGEDATA gamdMessages[];  // Message box messages table. <br> <br>extern INT gidCurrentDlg;           // Current dialog id (null if none). <br>extern INT gMenuSelected;           // Currently selected menu item. <br>extern CHAR gszHelpFile[];          // Path to the help file. <br>extern HHOOK ghhkMsgFilter;         // Hook handle for message filter func. <br>extern FARPROC lpfnMsgFilterHookFunc;   // The message filter proc instance. <br> <br>extern HELPMAP gahmapMenu[];        // Menu item to help topic mapping table. <br> <br>extern HELPMAP gahmapDialog[];      // Dialog id to help topic mapping table. <br> <br> <br>/* <br> * Misc. globals ----------------------------------------------------------- <br> */ <br> <br>extern INT gcxWorkSpace;            // Width of workspace window. <br>extern INT gcyWorkSpace;            // Height of workspace window. <br>extern INT gZoomFactor;             // Magnification factor of image. <br> <br>extern RECT grcPick;                // The current picking rectangle. <br>extern INT gcxPick;                 // Width of picking rectangle. <br>extern INT gcyPick;                 // Height of picking rectangle. <br> <br>extern UINT ClipboardFormat;        // ID of private clipboard format. <br>extern BOOL fStretchClipboardData;  // TRUE to default to stretch on paste. <br> <br>extern INT iNewFileType;            // New file type the user selected. <br> <br>extern INT gcyBorder;               // System border height. <br>extern INT gcyPropBar;              // Height of PropBar window. <br> <br>extern WNDPROC lpfnPropBarDlgProc;  // Proc inst. of PropBar dialog proc. <br>extern WNDPROC lpfnColorDlgProc;    // Proc inst. of Color palette dlg proc. </code></pre>
<p>&nbsp;</p></body>
</HTML>
