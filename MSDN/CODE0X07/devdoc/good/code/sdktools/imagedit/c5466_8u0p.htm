<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAGEDIT.H</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5479"></a>IMAGEDIT.H</h2>
<pre><code>/****************************************************************************/ <br>/*                                                                          */ <br>/*                 Copyright (C) 1987-1996 Microsoft Corp.                  */ <br>/*                           All Rights Reserved                            */ <br>/*                                                                          */ <br>/****************************************************************************/ <br>/****************************** Module Header ******************************* <br>* Module Name: imagedit.h <br>* <br>* Main header file for the Image Editor. <br>* <br>* History: <br>* <br>****************************************************************************/ <br> <br>#define WIN31 <br>#define _WINDOWS <br>#define NOMINMAX <br>#include &lt;windows.h&gt; <br> <br> <br>#ifdef DBG <br>#define STATICFN <br>#else <br>#define STATICFN         static <br>#endif <br> <br>#define WINDOWPROC      LONG  APIENTRY <br>#define DIALOGPROC      BOOL  APIENTRY <br> <br>/* <br> * Typedef for a drawing proc (a tool). <br> */ <br>typedef VOID (*DRAWPROC)(HWND, UINT, POINT); <br> <br>#define CCHTEXTMAX      256 <br> <br>/* <br> * Maximum size of a file name plus path specification. <br> */ <br>#define CCHMAXPATH              260 <br> <br> <br>/* <br> * Defines for the different tools.  These are indexes into <br> * the gaTools table. <br> */ <br>#define TOOL_FIRST                  0 <br>#define TOOL_PENCIL                 0 <br>#define TOOL_BRUSH                  1 <br>#define TOOL_SELECT                 2 <br>#define TOOL_LINE                   3 <br>#define TOOL_RECT                   4 <br>#define TOOL_SOLIDRECT              5 <br>#define TOOL_CIRCLE                 6 <br>#define TOOL_SOLIDCIRCLE            7 <br>#define TOOL_FLOODFILL              8 <br>#define TOOL_HOTSPOT                9 <br> <br>#define CTOOLS                      10      /* Number of tools.             */ <br> <br> <br>/* <br> * Macros to simplify working with menus. */ <br>#define MyEnableMenuItem(hMenu, wIDEnableItem, fEnable) \ <br>    EnableMenuItem((hMenu),(wIDEnableItem),(fEnable)?MF_ENABLED:MF_GRAYED) <br> <br>#define MyCheckMenuItem(hMenu, wIDCheckItem, fCheck) \ <br>    CheckMenuItem((hMenu),(wIDCheckItem),(fCheck)?MF_CHECKED:MF_UNCHECKED) <br> <br> <br>/* <br> * Defines for strings. <br> */ <br>#define IDS_NULL                    0 <br>#define IDS_VERSION                 1 <br>#define IDS_VERSIONMINOR            2 <br>#define IDS_OUTOFMEMORY             3 <br>#define IDS_MEMERROR                4 <br>#define IDS_BADBMPFILE              5 <br>#define IDS_BADICOCURFILE           6 <br>#define IDS_BADPALFILE              7 <br>#define IDS_CANTOPEN                8 <br>#define IDS_READERROR               9 <br>#define IDS_WRITEERROR              10 <br>#define IDS_CANTCREATE              11 <br>#define IDS_NOCLIPBOARDFORMAT       12 <br>#define IDS_NOCLIPBOARD             13 <br>#define IDS_CANTEDITIMAGE           14 <br>#define IDS_SAVEFILE                15 <br>#define IDS_ENTERANUMBER            16 <br>#define IDS_BADDEVICESIZE           17 <br>#define IDS_BADDEVICECOLORS         18 <br>#define IDS_NOTSUPPORT              19 <br>#define IDS_NOIMAGES                20 <br>#define IDS_BADBMPSIZE              21 <br> <br>#define IDS_APPNAME                 22 <br>#define IDS_PGMTITLE                23 <br>#define IDS_UNTITLED                24 <br>#define IDS_DOTBMP                  25 <br>#define IDS_HELPFILE                26 <br>#define IDS_IMAGEDITINI             27 <br>#define IDS_ICONIMAGELABEL          28 <br>#define IDS_BITMAPIMAGELABEL        29 <br>#define IDS_CURSORIMAGELABEL        30 <br>#define IDS_ICONDEVNAMEEGAVGA       31 <br>#define IDS_ICONDEVNAMEMONO         32 <br>#define IDS_ICONDEVNAMECGA          33 <br>#define IDS_CURDEVNAMEVGAMONO       34 <br>#define IDS_CURDEVNAMEVGACOLOR      35 <br>#define IDS_ICONINISECTION          36 <br>#define IDS_CURSORINISECTION        37 <br>#define IDS_BMPFILTER               38 <br>#define IDS_BMPFILTEREXT            39 <br>#define IDS_ICOFILTER               40 <br>#define IDS_ICOFILTEREXT            41 <br>#define IDS_CURFILTER               42 <br>#define IDS_CURFILTEREXT            43 <br>#define IDS_PALFILTER               44 <br>#define IDS_PALFILTEREXT            45 <br>#define IDS_ALLFILTER               46 <br>#define IDS_ALLFILTEREXT            47 <br>#define IDS_DEFEXTBMP               48 <br>#define IDS_DEFEXTICO               49 <br>#define IDS_DEFEXTCUR               50 <br>#define IDS_DEFEXTPAL               51 <br>#define IDS_UNKNOWNIMAGEFORMAT      52 <br> <br>/* <br> * The total number of strings.  This MUST be updated if strings are <br> * added or removed. <br> */ <br>#define CSTRINGS                    53 <br> <br> <br>/* <br> * Defines for messages.  These are indexes into the gamdMessage table. <br> */ <br>#define MSG_OUTOFMEMORY             0 <br>#define MSG_MEMERROR                1 <br>#define MSG_BADBMPFILE              2 <br>#define MSG_BADICOCURFILE           3 <br>#define MSG_BADPALFILE              4 <br>#define MSG_CANTOPEN                5 <br>#define MSG_READERROR               6 <br>#define MSG_WRITEERROR              7 <br>#define MSG_CANTCREATE              8 <br>#define MSG_NOCLIPBOARDFORMAT       9 <br>#define MSG_NOCLIPBOARD             10 <br>#define MSG_CANTEDITIMAGE           11 <br>#define MSG_SAVEFILE                12 <br>#define MSG_ENTERANUMBER            13 <br>#define MSG_BADDEVICESIZE           14 <br>#define MSG_BADDEVICECOLORS         15 <br>#define MSG_NOTSUPPORT              16 <br>#define MSG_NOIMAGES                17 <br>#define MSG_BADBMPSIZE              18 <br> <br> <br>/* <br> * Defines for the different file types. <br> */ <br>#define FT_BITMAP                   0 <br>#define FT_ICON                     1 <br>#define FT_CURSOR                   2 <br>#define FT_PALETTE                  3 <br> <br> <br>/* <br> * Macro to properly cast a FAR pointer to a near pointer. <br> * Casts a FAR pointer to void, then to an unsigned long integral <br> * value, then truncate it to a short integral value, then cast <br> * to a near pointer. <br> */ <br>#ifdef WIN32 <br>#define FAR2NEAR(lpstr)     (lpstr) <br>#else <br>#define FAR2NEAR(lpstr)     ((PSTR)(WORD)(DWORD)(LPVOID)(lpstr)) <br>#endif <br> <br>/* <br> * RGB color values. <br> */ <br>#define RGB_BLACK               RGB(  0,   0,   0) <br>#define RGB_WHITE               RGB(255, 255, 255) <br>#define RGB_LIGHTGRAY           RGB(192, 192, 192) <br>#define RGB_DARKGRAY            RGB(128, 128, 128) <br> <br> <br>/* <br> * Maximum rows and columns in the color box.  This includes room for <br> * screen/inverse and a separating blank column. <br> */ <br>#define COLORCOLS               16 <br>#define COLORROWS               2 <br> <br>/* <br> * Maximum colors in the palette (not including screen/inverse). <br> */ <br>#define COLORSMAX               28 <br> <br>/* <br> * Defines for the different color modes that the left and right <br> * mouse buttons can have. <br> */ <br>#define MODE_COLOR              0       // A standard color. <br>#define MODE_SCREEN             1       // The screen color. <br>#define MODE_INVERSE            2       // The inverse screen color. <br> <br> <br>/* <br> * Margin (in pixels) within each of the palette and toolbox windows. <br> */ <br>#define PALETTEMARGIN           2 <br> <br>/* raster op combination modes */ <br>#define ROP_DSna                0x00220326L <br>#define ROP_DSPao               0x00EA02E9L <br> <br>#define DEFAULTBITMAPWIDTH      32      // Default bitmap width. <br>#define DEFAULTBITMAPHEIGHT     32      // Default bitmap height. <br>#define DEFAULTBITMAPCOLORS     16      // Default bitmap colors. <br> <br>#define MAXIMAGEDIM             256     // Max image width/height (dimension). <br>#define MAXIMAGES               64      // Maximum images in an ico/cur file. <br> <br>#define CCHDESCRIPTOR        80  /* length of image descriptor string */ <br>#define CCHDEVICENAMEMAX     20  /* maximum length of a device name */ <br> <br>/* <br> * Maximum sizes of the app window when running ImagEdit for the first time. <br> * This makes it so that the editor does not default to a huge size when <br> * run on a super-vga resolution monitor. <br> */ <br>#define MAXDEFAULTAPPCX         640 <br>#define MAXDEFAULTAPPCY         480 <br> <br> <br>/*************************************************************************/ <br> <br>/* 3.0 icon/cursor header  */ <br>typedef struct { <br>    WORD iReserved;            /* always 0 */ <br>    WORD iResourceType; <br>    WORD iResourceCount;       /* number of resources in file */ <br>} ICOCURSORHDR; <br> <br>/* 3.0 icon/cursor descriptor  */ <br>typedef struct { <br>    BYTE iWidth;               /* width of image (icons only ) */ <br>    BYTE iHeight;              /* height of image(icons only) */ <br>    BYTE iColorCount;          /* number of colors in image */ <br>    BYTE iUnused;              /*  */ <br>    WORD iHotspotX;            /* hotspot x coordinate (CURSORS only) */ <br>    WORD iHotspotY;            /* hotspot y coordinate (CURSORS only) */ <br>    DWORD DIBSize;             /* size of DIB for this image */ <br>    DWORD DIBOffset;           /* offset to DIB for this image */ <br>} ICOCURSORDESC, *PICOCURSORDESC; <br> <br>typedef struct DeviceNode { <br>    struct DeviceNode *pDeviceNext; // Pointer to next device node. <br>    INT iType;                      // Type of image (FT_*). <br>    INT nColors;                    // Number of colors. <br>    INT cx;                         // Width of image. <br>    INT cy;                         // Height of image. <br>    CHAR szName[CCHDEVICENAMEMAX];  // Device name. <br>    CHAR szDesc[CCHDESCRIPTOR];     // Full description string. <br>} DEVICE; <br>typedef DEVICE *PDEVICE; <br> <br>/* <br> * Structure that describes a link in the image list. <br> */ <br>typedef struct ImageNode { <br>    struct ImageNode *pImageNext;   // Pointer to next image. <br>    PDEVICE pDevice;                // Pointer to device structure. <br>    INT cx;                         // Image width. <br>    INT cy;                         // Image height. <br>    INT iHotspotX;                  // Hotspot x coordinate (cursors only). <br>    INT iHotspotY;                  // Hotspot y coordinate (cursors only). <br>    INT nColors;                    // Number of colors. <br>    DWORD DIBSize;                  // Size of DIB for this image. <br>    HANDLE DIBhandle;               // Handle to DIB bits. <br>    LPSTR DIBPtr;                   // Pointer to DIB bits. <br>} IMAGEINFO, *PIMAGEINFO; <br> <br>/* <br> * Defines an entry in the gamdMessages table of error and warning messages. <br> */ <br>typedef struct { <br>    UINT ids;                   /* String id for the message text.          */ <br>    UINT fMessageBox;           /* Flags for the MessageBox function.       */ <br>} MESSAGEDATA; <br> <br>/* <br> * This structure defines each tool used in the editor. <br> */ <br>typedef struct { <br>    DRAWPROC pfnDrawProc;   /* Drawing procedure for this tool type.        */ <br>    HCURSOR hcur;           /* Handle to the cursor for this tool.          */ <br>    INT idbmToolBtnUp;      /* ID of "up" bmp res. for the Toolbox button.  */ <br>    HBITMAP hbmToolBtnUp;   /* hbm of "up" bitmap for the Toolbox button.   */ <br>    INT idbmToolBtnDown;    /* ID of "down" bmp res. for the Toolbox button.*/ <br>    HBITMAP hbmToolBtnDown; /* hbm of "down" bitmap for the Toolbox button. */ <br>    UINT fDrawOnDown:1;     /* TRUE if tool draws on down click.            */ <br>    UINT fDrawOnUp:1;       /* TRUE if tool draws on up click.              */ <br>} TOOLS; <br> <br>/* <br> * One single entry for an environment setting saved in the <br> * profile file.  Used by ReadEnv and WriteEnv. <br> */ <br>typedef struct _INIENTRY { <br>    PSTR pstrKeyName; <br>    PINT pnVar; <br>    INT nDefault; <br>    INT nSave; <br>} INIENTRY; <br> <br>/* <br> * Structure that maps a subject (like a menu id or a dialog id) with <br> * a help context to pass in to WinHelp. <br> */ <br>typedef struct { <br>    INT idSubject;              // Subject, usually a menu or dialog id. <br>    INT HelpContext;            // The matching help context. <br>} HELPMAP; <br>typedef HELPMAP *PHELPMAP; <br> <br> <br>#include "iefuncs.h" <br> <br>#include "globals.h" <br> <br>#ifdef strcmpi <br>#undef strcmpi <br>#endif <br>#define strcmpi     lstrcmpi <br>#define strtok      My_mbstok <br>#define strncat     My_mbsncat <br>unsigned char * _CRTAPI1 My_mbstok(unsigned char *, unsigned char *); <br>unsigned char * _CRTAPI1 My_mbsncat( <br>                    unsigned char *, const unsigned char *, size_t); </code></pre>
<p>&nbsp;</p></body>
</HTML>
