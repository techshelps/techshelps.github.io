<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TREE.H</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5566"></a>TREE.H</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>/* <br> * TREE.H <br> * <br> * NOTE: include gutils.h before this. <br> */ <br> <br>/* handle for a tree */ <br>typedef struct tree FAR * TREE; <br> <br>/* keys in these trees are DWORDs */ <br>typedef DWORD TREEKEY; <br> <br>/* A place-holder understood only by tree_search and <br> * tree_addafter <br> */ <br>typedef struct treeitem FAR * TREEITEM; <br> <br>/* pointer to one of these place holders */ <br>typedef TREEITEM FAR * PTREEITEM; <br> <br> <br>TREE APIENTRY tree_create(HANDLE hHeap); <br>void APIENTRY tree_delete(TREE tree); <br>LPVOID APIENTRY tree_update(TREE tree, TREEKEY key, LPVOID value, UINT length); <br>LPVOID APIENTRY tree_find(TREE tree, TREEKEY key); <br>LPVOID APIENTRY tree_search(TREE tree, TREEKEY key, PTREEITEM place); <br>LPVOID APIENTRY tree_addafter(TREE tree, PTREEITEM place, TREEKEY key, LPVOID value, <br>                        UINT length); <br>TREE APIENTRY ctree_create(HANDLE hHeap); <br>void APIENTRY ctree_delete(TREE tree); <br>LPVOID APIENTRY ctree_update(TREE tree, TREEKEY key, LPVOID value, UINT length); <br>long APIENTRY ctree_getcount(TREE tree, TREEKEY key); <br>LPVOID APIENTRY ctree_find(TREE tree, TREEKEY key); </code></pre>
<p>&nbsp;</p></body>
</HTML>
