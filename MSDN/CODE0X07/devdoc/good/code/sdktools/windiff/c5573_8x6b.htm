<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WINDIFF.H</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5573"></a>WINDIFF.H</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>/* <br> * WINDIFF.H <br> */ <br> <br>/* application-wide variables -------------------------------------*/ <br> <br>/* This is the section name in the win.ini file to which we <br> * write profile info <br> */ <br>#define APPNAME "WinDiff" <br> <br>/* A gmem_init() heap shared by the app. call gmem_get to alloc. */ <br>extern HANDLE hHeap; <br> <br>/* The instance handle for this app. Needed by anyone who uses resources <br> * such as dialogs <br> */ <br>extern HINSTANCE hInst; <br> <br>extern HWND hwndClient; <br>extern HWND hwndRCD; <br> <br>/* global option flags-------------------------------------------  */ <br> <br>/* Which files do we show in outline mode ? all, changed... */ <br>extern int outline_include; <br> <br>/* Outline_include is an OR of the following */ <br>#define INCLUDE_SAME            1 <br>#define INCLUDE_DIFFER          2 <br>#define INCLUDE_LEFTONLY        4 <br>#define INCLUDE_RIGHTONLY       8 <br> <br> <br>/* Do we ignore blanks during the line-by-line diff ? */ <br>extern BOOL ignore_blanks; <br> <br>/* Which line numbers do we show - left original, right original or none ?*/ <br>extern int line_numbers; <br> <br>/* What lines do we show in expand mode - all, left only, right only ? */ <br>extern int expand_mode; <br> <br>/*--- colour scheme ----------------------------------------------  */ <br> <br>/* Outline */ <br>extern DWORD rgb_outlinehi; <br> <br>/* Expand view */ <br>extern DWORD rgb_leftfore; <br>extern DWORD rgb_leftback; <br>extern DWORD rgb_rightfore; <br>extern DWORD rgb_rightback; <br>extern DWORD rgb_mleftfore; <br>extern DWORD rgb_mleftback; <br>extern DWORD rgb_mrightfore; <br>extern DWORD rgb_mrightback; <br> <br>/* Bar window */ <br>extern DWORD rgb_barleft; <br>extern DWORD rgb_barright; <br>extern DWORD rgb_barcurrent; <br> <br> <br> <br>/* -- display layout constants---------------------------------------*/ <br> <br>/* Percentage of width of window taken by bar display (when visible) */ <br>#define BAR_WIN_WIDTH   10 <br> <br>/* Following are horizontal positions within the bar window, expressed <br> * in percent of the width of the bar window <br> */ <br>#define L_POS_START     10      /* start of left position marker */ <br>#define L_POS_WIDTH     5       /* width of left position marker */ <br>#define R_POS_START     80      /* start of right position marker */ <br>#define R_POS_WIDTH     5       /* width of right position marker */ <br> <br>#define L_UNMATCH_START 30      /* start of left bar for unmatched section */ <br>#define L_UNMATCH_WIDTH 10      /* width of above */ <br>#define R_UNMATCH_START 60      /* start of right bar for unmatch section */ <br>#define R_UNMATCH_WIDTH 10      /* width of right unmatched section marker */ <br>#define L_MATCH_START   30      /* start of left bar for matched section */ <br>#define L_MATCH_WIDTH   10      /* width of left bar for matched section */ <br>#define R_MATCH_START   60      /* start of right bar for matched section */ <br>#define R_MATCH_WIDTH   10      /* width of right bar for matched section */ <br> <br> <br> <br> <br>/* windiff.c functions */ <br>void windiff_UI(BOOL bAttach); <br>BOOL Poll(void);                /* true if abort pending */ <br>void SetNames(LPSTR names); <br>void SetStatus(LPSTR state); <br> <br>/* in bar.c */ <br>BOOL InitBarClass(HINSTANCE hInstance); <br>void BarDrawPosition(HWND hwndBar, HDC hdcIn, BOOL bErase); <br> <br>/*-- private messages -- */ <br>/* Send this to the main window. Return value is the VIEW handle */ <br>#define TM_CURRENTVIEW  WM_USER <br> <br> <br>/* --- synchronisation ----------------------------------------- */ <br>/* <br> * In WIN32 we spawn worker threads to do time-consuming actions. <br> * This causes a possible conflict with the UI thread when accessing the <br> * BUSY flag. <br> * <br> * To protect against this we have a critical section. The UI thread <br> * will get this before checking/changing the Busy flag, <br> * The worker thread will get this before Busy flag* changes. <br> * <br> */ <br> <br>CRITICAL_SECTION CSWindiff; <br> <br>#define WDEnter()       EnterCriticalSection(&amp;CSWindiff); <br>#define WDLeave()       LeaveCriticalSection(&amp;CSWindiff); <br> <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
