<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COMPLIST.H</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5540"></a>COMPLIST.H</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>/* <br> * COMPLIST.H <br> */ <br> <br>/* The file view.h includes the term COMPLIST: we need to use the term VIEW. <br> * Due to MIPS limitations,the module which declares it first does <br> * the real declares and the second one gets no-ops. <br> */ <br>#ifndef INC_VIEW_COMPLIST <br>#define INC_VIEW_COMPLIST <br>typedef struct view FAR * VIEW;                 /* handle to a VIEW     */ <br>typedef struct complist FAR * COMPLIST;         /* handle to a complist */ <br>#endif // INC_VIEW_COMPLIST <br> <br> <br>COMPLIST complist_filedialog(VIEW view); <br>COMPLIST complist_dirdialog(VIEW view); <br>COMPLIST complist_args(LPSTR path1, LPSTR path2, VIEW view, BOOL fDeep); <br>void complist_delete(COMPLIST cl); <br>LIST complist_getitems(COMPLIST cl); <br>void complist_savelist(COMPLIST cl, LPSTR savename, UINT saveopts); <br>void complist_copyfiles(COMPLIST cl, LPSTR newroot, UINT options); <br>DWORD complist_querytime(void); <br>BOOL APIENTRY complist_open(LPSTR prompt, LPSTR ext, LPSTR spec, <br>        OFSTRUCT FAR *osp, LPSTR fn); <br>LPSTR complist_getroot_left(COMPLIST cl); <br>LPSTR complist_getroot_right(COMPLIST cl); <br>void complist_freeroot_left(COMPLIST cl, LPSTR path); <br>void complist_freeroot_right(COMPLIST cl, LPSTR path); <br> <br>/* <br> * Copy file options are either COPY_FROMLEFT or COPY_FROMRIGHT  <br> * (indicating which <br> * tree is to be the source of the files, plus any or all of <br> * INCLUDE_SAME, INCLUDE_DIFFER and INCLUDE_LEFT (INCLUDE_LEFT <br> * and INCLUDE_RIGHT are treated the same here since the COPY_FROM* option <br> * indicates which side to copy from). <br> */ <br> <br>#define COPY_FROMLEFT   0x100           /* copy files from left tree */ <br>#define COPY_FROMRIGHT  0x200           /* copy files from right tree */ <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
