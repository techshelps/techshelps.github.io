<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MC.H</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5495"></a>MC.H</h2>
<pre><code>/*++ <br> <br>Copyright 1991-1998 Microsoft Corporation <br> <br>Module Name: <br> <br>    mc.h <br> <br>Abstract: <br> <br>    This is the main include file for the Win32 Message Compiler (MC) <br> <br>Author: <br> <br>    Steve Wood (stevewo) 21-Aug-1991 <br> <br>Revision History: <br> <br>--*/ <br> <br>#if 0 <br>#include &lt;nt.h&gt; <br>#include &lt;ntrtl.h&gt; <br>#include &lt;nturtl.h&gt; <br>#endif <br> <br>#include &lt;process.h&gt; <br>#include &lt;stdio.h&gt; <br>#include &lt;stddef.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include &lt;stdarg.h&gt; <br>#include &lt;limits.h&gt; <br>#include &lt;malloc.h&gt; <br>#include &lt;errno.h&gt; <br>#include &lt;ctype.h&gt; <br>#include &lt;signal.h&gt; <br>#include &lt;string.h&gt; <br>#include &lt;time.h&gt; <br>#include &lt;io.h&gt; <br>#include &lt;fcntl.h&gt; <br>#include &lt;conio.h&gt; <br>#include &lt;sys\types.h&gt; <br>#include &lt;sys\stat.h&gt; <br> <br>#ifdef TOOL <br> <br>#define MAX_PATH 265 <br> <br>#else <br> <br>#include &lt;windows.h&gt; <br> <br>#endif <br> <br>// <br>// Global constants <br>// <br> <br>#define MCCHAR_END_OF_LINE_COMMENT    ';' <br> <br>#define MCTOK_END_OF_FILE             0x00 <br> <br>#define MCTOK_NUMBER                  0x01 <br>#define MCTOK_NAME                    0x02 <br>#define MCTOK_EQUAL                   0x03 <br>#define MCTOK_LEFT_PAREN              0x04 <br>#define MCTOK_RIGHT_PAREN             0x05 <br>#define MCTOK_COLON                   0x06 <br>#define MCTOK_PLUS                    0x07 <br>#define MCTOK_END_OF_LINE_COMMENT     0x08 <br> <br>#define MCTOK_MSGIDTYPE_KEYWORD       0x11 <br>#define MCTOK_SEVNAMES_KEYWORD        0x12 <br>#define MCTOK_FACILITYNAMES_KEYWORD   0x13 <br>#define MCTOK_LANGNAMES_KEYWORD       0x14 <br>#define MCTOK_MESSAGEID_KEYWORD       0x15 <br>#define MCTOK_SEVERITY_KEYWORD        0x16 <br>#define MCTOK_FACILITY_KEYWORD        0x17 <br>#define MCTOK_SYMBOLNAME_KEYWORD      0x18 <br>#define MCTOK_LANGUAGE_KEYWORD        0x19 <br> <br> <br>// <br>// Global data types <br>// <br> <br>typedef struct _LANGUAGE_INFO { <br>    struct _LANGUAGE_INFO *Next; <br>    ULONG Id; <br>    ULONG Length; <br>    PCHAR Text; <br>} LANGUAGE_INFO, *PLANGUAGE_INFO; <br> <br>typedef struct _MESSAGE_INFO { <br>    struct _MESSAGE_INFO *Next; <br>    ULONG Id; <br>    ULONG Method; <br>    PCHAR SymbolicName; <br>    PCHAR EndOfLineComment; <br>    PLANGUAGE_INFO MessageText; <br>} MESSAGE_INFO, *PMESSAGE_INFO; <br> <br>#define MSG_PLUS_ONE 0 <br>#define MSG_PLUS_VALUE 1 <br>#define MSG_ABSOLUTE 2 <br> <br>typedef struct _MESSAGE_BLOCK { <br>    struct _MESSAGE_BLOCK *Next; <br>    ULONG LowId; <br>    ULONG HighId; <br>    ULONG InfoLength; <br>    PMESSAGE_INFO LowInfo; <br>} MESSAGE_BLOCK, *PMESSAGE_BLOCK; <br> <br>typedef struct _NAME_INFO { <br>    struct _NAME_INFO *Next; <br>    ULONG LastId; <br>    ULONG Id; <br>    PVOID Value; <br>    BOOLEAN Used; <br>    char Name[ 1 ]; <br>} NAME_INFO, *PNAME_INFO; <br> <br> <br>// <br>// Global variables <br>// <br> <br>int VerboseOutput; <br>int WarnOs2Compatible; <br>int InsertSymbolicName; <br>int GenerateDecimalValues; <br>int ResultCode; <br>ULONG CustomerMsgIdBit; <br> <br>FILE *MessageFile; <br>char MessageFileName[ MAX_PATH ]; <br>unsigned int MessageFileLineNumber; <br>unsigned int Token; <br>char TokenCharValue[ 256 ]; <br>ULONG TokenNumericValue; <br>PNAME_INFO TokenKeyword; <br> <br>FILE *HeaderFile; <br>char HeaderFileName[ MAX_PATH ]; <br>FILE *RcInclFile; <br>char RcInclFileName[ MAX_PATH ]; <br>FILE *BinaryMessageFile; <br>char BinaryMessageFileName[ MAX_PATH ]; <br> <br>char *MessageIdTypeName; <br> <br>PNAME_INFO FacilityNames; <br>PNAME_INFO CurrentFacilityName; <br>PNAME_INFO SeverityNames; <br>PNAME_INFO CurrentSeverityName; <br>PNAME_INFO LanguageNames; <br>PNAME_INFO CurrentLanguageName; <br> <br>PMESSAGE_INFO Messages; <br>PMESSAGE_INFO CurrentMessage; <br> <br>// <br>// Functions defined in mc.c <br>// <br> <br>void <br>McPrintUsage( void ); <br> <br> <br>// <br>// Functions defined in mcparse.c <br>// <br> <br>BOOLEAN <br>McParseFile( void ); <br> <br>BOOLEAN <br>McParseMessageDefinition( void ); <br> <br>BOOLEAN <br>McParseMessageText( <br>    PMESSAGE_INFO MessageInfo <br>    ); <br> <br>BOOLEAN <br>McParseNameList( <br>    PNAME_INFO *NameListHead, <br>    BOOLEAN ValueRequired, <br>    ULONG MaximumValue <br>    ); <br> <br>BOOLEAN <br>McParseName( <br>    PNAME_INFO NameListHead, <br>    PNAME_INFO *Result <br>    ); <br> <br> <br>// <br>// Functions defined in mcout.c <br>// <br> <br>BOOLEAN <br>McBlockMessages( void ); <br> <br> <br>BOOLEAN <br>McWriteBinaryFiles( void ); <br> <br> <br> <br>// <br>// Functions defined in mclex.c <br>// <br> <br>BOOLEAN <br>McInitLexer( void ); <br> <br>BOOLEAN <br>McOpenInputFile( void ); <br> <br>void <br>McFlushComments( void ); <br> <br>void <br>McCloseInputFile( void ); <br> <br>void <br>McCloseOutputFiles( void ); <br> <br>void <br>McInputError( <br>    char *Message, <br>    BOOLEAN Error, <br>    PVOID Argument <br>    ); <br> <br>char * <br>McGetLine( void ); <br> <br>void <br>McSkipLine( void ); <br> <br>char <br>McGetChar( <br>    BOOLEAN SkipWhiteSpace <br>    ); <br> <br>void <br>McUnGetChar( <br>    char c <br>    ); <br> <br>unsigned int <br>McGetToken( <br>    BOOLEAN KeywordExpected <br>    ); <br> <br>void <br>McUnGetToken( void ); <br> <br>char * <br>McSkipWhiteSpace( <br>    char *s <br>    ); <br> <br>// <br>// Functions defined in mcutil.c <br>// <br> <br>PNAME_INFO <br>McAddName( <br>    PNAME_INFO *NameListHead, <br>    char *Name, <br>    ULONG Id, <br>    PVOID Value <br>    ); <br> <br> <br>PNAME_INFO <br>McFindName( <br>    PNAME_INFO NameListHead, <br>    char *Name <br>    ); <br> <br> <br>BOOLEAN <br>McCharToInteger( <br>    PCHAR String, <br>    int Base, <br>    PULONG Value <br>    ); <br> <br>char * <br>McMakeString( <br>    char *String <br>    ); </code></pre>
<p>&nbsp;</p></body>
</HTML>
