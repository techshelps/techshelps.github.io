<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PERFDATA.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5723"></a>PERFDATA.H</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br> <br>/****************************************************************************** <br> <br>                    P E R F O R M A N C E   D A T A <br> <br>    Name:       perfdata.h <br> <br>    Description: <br>        This module contains function prototypes and defines used in <br>        objdata.c, instdata.c, and cntrdata.c. <br> <br>******************************************************************************/ <br> <br> <br> <br> <br> <br> <br>typedef PERF_DATA_BLOCK             PERF_DATA,      *PPERF_DATA; <br>typedef PERF_OBJECT_TYPE            PERF_OBJECT,    *PPERF_OBJECT; <br>typedef PERF_INSTANCE_DEFINITION    PERF_INSTANCE,  *PPERF_INSTANCE; <br>typedef PERF_COUNTER_DEFINITION     PERF_COUNTER,   *PPERF_COUNTER; <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>DWORD   GetPerfData (HKEY       hPerfKey, <br>                     LPTSTR     szObjectIndex, <br>                     PPERF_DATA *ppData, <br>                     DWORD      *pDataSize); <br> <br>DWORD   GetPerfTitleSz <br>                    (HKEY       hKeyMachine, <br>                     HKEY       hKeyPerf, <br>                     LPTSTR     *TitleBuffer, <br>                     LPTSTR     *TitleSz[], <br>                     DWORD      *TitleLastIdx); <br> <br> <br>PPERF_OBJECT    FirstObject (PPERF_DATA pData); <br>PPERF_OBJECT    NextObject (PPERF_OBJECT pObject); <br>PPERF_OBJECT    FindObject (PPERF_DATA pData, DWORD TitleIndex); <br>PPERF_OBJECT    FindObjectN (PPERF_DATA pData, DWORD N); <br> <br>PPERF_INSTANCE  FirstInstance (PPERF_OBJECT pObject); <br>PPERF_INSTANCE  NextInstance (PPERF_INSTANCE pInst); <br>PPERF_INSTANCE  FindInstanceN (PPERF_OBJECT pObject, DWORD N); <br>PPERF_INSTANCE  FindInstanceParent (PPERF_INSTANCE pInst, PPERF_DATA pData); <br>LPTSTR          InstanceName (PPERF_INSTANCE pInst); <br> <br>PPERF_COUNTER   FirstCounter (PPERF_OBJECT pObject); <br>PPERF_COUNTER   NextCounter (PPERF_COUNTER pCounter); <br>PPERF_COUNTER   FindCounter (PPERF_OBJECT pObject, DWORD TitleIndex); <br>PVOID           CounterData (PPERF_INSTANCE pInst, PPERF_COUNTER pCount); </code></pre>
<p>&nbsp;</p></body>
</HTML>
