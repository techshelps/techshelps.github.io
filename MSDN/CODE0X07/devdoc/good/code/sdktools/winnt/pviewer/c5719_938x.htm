<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OBJDATA.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5721"></a>OBJDATA.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br> <br>/****************************************************************************** <br> <br>                                O B J E C T   D A T A <br> <br>    Name:       objdata.c <br> <br>    Description: <br>        This module contains functions that access objects in performance <br>        data. <br> <br>    Functions: <br>        FirstObject <br>        NextObject <br>        FindObject <br>        FindObjectN <br> <br>******************************************************************************/ <br> <br>#include &lt;windows.h&gt; <br>#include &lt;winperf.h&gt; <br>#include "perfdata.h" <br> <br> <br> <br> <br>//********************************************************************* <br>// <br>//  FirstObject <br>// <br>//      Returns pointer to the first object in pData. <br>//      If pData is NULL then NULL is returned. <br>// <br>PPERF_OBJECT FirstObject (PPERF_DATA pData) <br>{ <br>    if (pData) <br>        return ((PPERF_OBJECT) ((PBYTE) pData + pData-&gt;HeaderLength)); <br>    else <br>        return NULL; <br>} <br> <br> <br> <br> <br>//********************************************************************* <br>// <br>//  NextObject <br>// <br>//      Returns pointer to the next object following pObject. <br>// <br>//      If pObject is the last object, bogus data maybe returned. <br>//      The caller should do the checking. <br>// <br>//      If pObject is NULL, then NULL is returned. <br>// <br>PPERF_OBJECT NextObject (PPERF_OBJECT pObject) <br>{ <br>    if (pObject) <br>        return ((PPERF_OBJECT) ((PBYTE) pObject + pObject-&gt;TotalByteLength)); <br>    else <br>        return NULL; <br>} <br> <br> <br> <br> <br>//********************************************************************* <br>// <br>//  FindObject <br>// <br>//      Returns pointer to object with TitleIndex.  If not found, NULL <br>//      is returned. <br>// <br>PPERF_OBJECT FindObject (PPERF_DATA pData, DWORD TitleIndex) <br>{ <br>PPERF_OBJECT pObject; <br>DWORD        i = 0; <br> <br>    if (pObject = FirstObject (pData)) <br>        while (i &lt; pData-&gt;NumObjectTypes) <br>            { <br>            if (pObject-&gt;ObjectNameTitleIndex == TitleIndex) <br>                return pObject; <br> <br>            pObject = NextObject (pObject); <br>            i++; <br>            } <br> <br>    return NULL; <br>} <br> <br> <br> <br> <br>//********************************************************************* <br>// <br>//  FindObjectN <br>// <br>//      Find the Nth object in pData.  If not found, NULL is returned. <br>//      0 &lt;= N &lt; NumObjectTypes. <br>// <br>PPERF_OBJECT FindObjectN (PPERF_DATA pData, DWORD N) <br>{ <br>PPERF_OBJECT pObject; <br>DWORD        i = 0; <br> <br>    if (!pData) <br>        return NULL; <br>    else if (N &gt;= pData-&gt;NumObjectTypes) <br>        return NULL; <br>    else <br>        { <br>        pObject = FirstObject (pData); <br> <br>        while (i != N) <br>            { <br>            pObject = NextObject (pObject); <br>            i++; <br>            } <br> <br>        return pObject; <br>        } <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
