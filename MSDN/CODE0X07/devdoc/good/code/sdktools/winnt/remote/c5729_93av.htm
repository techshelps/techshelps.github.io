<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SRVCTOS.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5737"></a>SRVCTOS.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1995 - 1997 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>/*++ <br> <br>Copyright (c) 1997  Microsoft Corporation <br> <br>Module Name: <br> <br>    SrvCtoS.c <br> <br>Abstract: <br> <br>    This file implements the client-to-server flow <br>    of data for remote server.  The data is the keyboard <br>    or piped input that the client received and sent <br>    over the wire to us, bracketed by BEGINMARK and ENDMARK <br>    bytes so we can display nice attribution comments in <br>    brackets next to input lines. <br> <br>Author: <br> <br>    Dave Hart  30 May 1997 <br> <br>Environment: <br> <br>    Console App. User mode. <br> <br>Revision History: <br> <br>--*/ <br> <br>#include &lt;windows.h&gt; <br>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include &lt;io.h&gt; <br>#include &lt;string.h&gt; <br>#include "Remote.h" <br>#include "Server.h" <br> <br> <br> <br>VOID <br>FASTCALL <br>StartReadClientInput( <br>    PREMOTE_CLIENT pClient <br>    ) <br>{ <br>    // <br>    // Start read of data from this client's stdin. <br>    // <br> <br>    if ( ! ReadFileEx( <br>               pClient-&gt;PipeReadH, <br>               pClient-&gt;ReadBuffer, <br>               BUFFSIZE - 1,                  // allow for null term <br>               &amp;pClient-&gt;ReadOverlapped, <br>               ReadClientInputCompleted <br>               )) { <br> <br>        CloseClient(pClient); <br>    } <br>} <br> <br> <br>VOID <br>WINAPI <br>ReadClientInputCompleted( <br>    DWORD dwError, <br>    DWORD cbRead, <br>    LPOVERLAPPED lpO <br>    ) <br>{ <br>    PREMOTE_CLIENT pClient; <br> <br>    pClient = CONTAINING_RECORD(lpO, REMOTE_CLIENT, ReadOverlapped); <br> <br>    if (HandleSessionError(pClient, dwError) || <br>        !cbRead) { <br> <br>        return; <br>    } <br> <br>    pClient-&gt;ReadBuffer[cbRead] = 0; <br> <br>    if (FilterCommand(pClient, pClient-&gt;ReadBuffer, cbRead)) { <br> <br>        // <br>        // Local command, don't pass it to child app, just <br>        // start another client read. <br>        // <br> <br>        if ( ! ReadFileEx( <br>                   pClient-&gt;PipeReadH, <br>                   pClient-&gt;ReadBuffer, <br>                   BUFFSIZE - 1,                  // allow for null term <br>                   &amp;pClient-&gt;ReadOverlapped, <br>                   ReadClientInputCompleted <br>                   )) { <br> <br>            CloseClient(pClient); <br>        } <br> <br>    } else { <br> <br>        // <br>        // Write buffer to child stdin. <br>        // <br> <br>        if ( ! WriteFileEx( <br>                   hWriteChildStdIn, <br>                   pClient-&gt;ReadBuffer, <br>                   cbRead, <br>                   &amp;pClient-&gt;ReadOverlapped, <br>                   WriteChildStdInCompleted <br>                   )) { <br> <br>            // Child is going away.  Let this client's chain of IO stop. <br>        } <br>    } <br>} <br> <br> <br>VOID <br>WINAPI <br>WriteChildStdInCompleted( <br>    DWORD dwError, <br>    DWORD cbWritten, <br>    LPOVERLAPPED lpO <br>    ) <br>{ <br>    PREMOTE_CLIENT pClient; <br> <br>    pClient = CONTAINING_RECORD(lpO, REMOTE_CLIENT, ReadOverlapped); <br> <br>    if (HandleSessionError(pClient, dwError)) { <br> <br>        return; <br>    } <br> <br>    // <br>    // Start another read against the client input. <br>    // <br> <br>    StartReadClientInput(pClient); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
