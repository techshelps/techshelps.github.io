<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PROBE.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5758"></a>PROBE.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>#include "pwalk.h" <br> <br> <br>/* process  globals */ <br>HANDLE    hMMFile = 0; <br>LPPROBE     lpProbe = NULL; <br>CONTEXT     gContext; <br>DWORD    gReturn; <br>LPVOID    gLocation; <br>CRITICAL_SECTION    gCS; <br> <br> <br>BOOL   WINAPI ProbeProcess (HANDLE); <br>void   WINAPI FreeProbe (); <br>void   WINAPI GetFuncAddrInChildProc (char *, char *, DBGDLL *, LPVOID *); <br> <br> <br>/* entry point for DLL loading and unloading */ <br>BOOL WINAPI DllMain ( <br>    HANDLE    hModule, <br>    DWORD     dwFunction, <br>    LPVOID    lpNot) <br>{ <br>    switch (dwFunction) <br>{ <br>case DLL_PROCESS_ATTACH: <br>    ProbeProcess (hModule); <br>    break; <br> <br>case DLL_PROCESS_DETACH: <br>    FreeProbe (); <br>    break; <br> <br>default: <br>    break; <br>} <br> <br>    return TRUE; <br>} <br> <br> <br> <br>/* function initializes port structures */ <br>BOOL WINAPI ProbeProcess ( <br>    HANDLE    hDLL) <br>{ <br>    charszMapFileName[MAX_PATH]; <br> <br>    /* load name for global file mapping */ <br>    LoadString (hDLL, IDS_MAPFILENAME, szMapFileName, MAX_PATH); <br> <br>    /* ProcessWalker creates file mapping then child process attaches */ <br>    if ((hMMFile = OpenFileMapping (FILE_MAP_WRITE, FALSE, szMapFileName))) <br>{ <br>/* map global view of file for hook function access */ <br>lpProbe = (LPPROBE)MapViewOfFile (hMMFile, FILE_MAP_WRITE, 0, 0, 0); <br> <br>/* initialize known process specific information in probe */ <br>lpProbe-&gt;hProcess = GetCurrentProcess (); <br>lpProbe-&gt;hDefHeap = GetProcessHeap (); <br>} <br> <br>    else <br>if (!(hMMFile = CreateFileMapping ((HANDLE)0xffffffff, <br>   NULL, <br>   PAGE_READWRITE, <br>   0, <br>   0x100000, <br>   szMapFileName))) <br>    return FALSE; <br>else <br>    { <br>    lpProbe = (LPPROBE)MapViewOfFile (hMMFile, FILE_MAP_WRITE, 0, 0, 0); <br>    ResetProbe (); <br>    } <br> <br>    /* success */ <br>    return TRUE; <br>} <br> <br> <br> <br> <br>/* release process objects */ <br>void WINAPI FreeProbe () <br>{ <br>    if (lpProbe != NULL) <br>/* remove child process objects */ <br>UnmapViewOfFile ((char *)lpProbe); <br> <br>    CloseHandle (hMMFile); <br>} <br> <br> <br> <br> <br>/* function passes pointer to probe info back to ProcessWalker */ <br>LPPROBE  WINAPI RetrieveProbeData () <br>{ <br>    return lpProbe; <br>} <br> <br> <br> <br> <br>/* reset probe data to null */ <br>void  WINAPI ResetProbe () <br>{ <br>    lpProbe-&gt;hProcess = NULL; <br>    lpProbe-&gt;hDefHeap = NULL; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
