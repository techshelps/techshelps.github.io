<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TOOLBAR.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5710"></a>TOOLBAR.C</h2>
<pre><code>//                                                                             <br>//                                  Includes                                   <br>//                                                                             <br> <br> <br>#include "perfmon.h" <br>#include &lt;commctrl.h&gt; <br>#include "toolbar.h" <br>#include "status.h"     // for StatusLine &amp; StatusLineReady <br> <br>#ifdef ADVANCED_PERFMON <br>TBBUTTON tbButtons[] = { <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,        0 }, <br>   { 0, IDM_VIEWCHART,        TBSTATE_ENABLED,   TBSTYLE_CHECKGROUP, 0 }, <br>   { 1, IDM_VIEWALERT,        TBSTATE_ENABLED,   TBSTYLE_CHECKGROUP, 0 }, <br>   { 2, IDM_VIEWLOG,          TBSTATE_ENABLED,   TBSTYLE_CHECKGROUP, 0 }, <br>   { 3, IDM_VIEWREPORT,       TBSTATE_ENABLED,   TBSTYLE_CHECKGROUP, 0 }, <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,        0 }, <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,        0 }, <br>   { 4, IDM_TOOLBARADD,       TBSTATE_ENABLED,   TBSTYLE_BUTTON,     0 }, <br>   { 5, IDM_TOOLBARMODIFY,    TBSTATE_ENABLED,   TBSTYLE_BUTTON,     0 }, <br>   { 6, IDM_TOOLBARDELETE,    TBSTATE_ENABLED,   TBSTYLE_BUTTON,     0 }, <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,        0 }, <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,        0 }, <br>   { 7, IDM_TOOLBARREFRESH,   TBSTATE_ENABLED,   TBSTYLE_BUTTON,     0 }, <br>   { 8, IDM_OPTIONSBOOKMARK,  TBSTATE_ENABLED,   TBSTYLE_BUTTON,     0 }, <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,        0 }, <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,        0 }, <br>   { 9, IDM_TOOLBAROPTIONS,   TBSTATE_ENABLED,   TBSTYLE_BUTTON,     0 }, <br>} ; <br>#else <br>TBBUTTON tbButtons[] = { <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,      0 }, <br>   { 4, IDM_TOOLBARADD,       TBSTATE_ENABLED,   TBSTYLE_BUTTON,   0 }, <br>   { 5, IDM_TOOLBARMODIFY,    TBSTATE_ENABLED,   TBSTYLE_BUTTON,   0 }, <br>   { 6, IDM_TOOLBARDELETE,    TBSTATE_ENABLED,   TBSTYLE_BUTTON,   0 }, <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,      0 }, <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,      0 }, <br>   { 7, IDM_TOOLBARREFRESH,   TBSTATE_ENABLED,   TBSTYLE_BUTTON,   0 }, <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,      0 }, <br>   { 0, 0,                    TBSTATE_ENABLED,   TBSTYLE_SEP,      0 }, <br>   { 9, IDM_TOOLBAROPTIONS,   TBSTATE_ENABLED,   TBSTYLE_BUTTON,   0 }, <br>} ; <br>#endif <br> <br>#define TB_ENTRIES sizeof(tbButtons)/sizeof(tbButtons[0]) <br> <br>BOOL CreateToolbarWnd (HWND hWnd) <br>{ <br> <br>   hWndToolbar = CreateToolbarEx (hWnd, <br>      WS_CHILD | WS_BORDER | WS_VISIBLE, <br>      IDM_TOOLBARID, <br>      10,                  // number of tools inside the bitmap <br>      hInstance, <br>      idBitmapToolbar,     // bitmap resource ID (can't use MAKEINTRESOURCE) <br>      tbButtons, <br>      TB_ENTRIES,0,0,0,0,sizeof(TBBUTTON)) ; <br> <br>   return (hWndToolbar ? TRUE : FALSE) ; <br> <br>}  // ToolbarInitializeApplication <br> <br>void ToolbarEnableButton (HWND hWndTB, int iButtonNum, BOOL bEnable) <br>{ <br>   SendMessage (hWndTB, TB_ENABLEBUTTON, iButtonNum, (LONG)bEnable) ; <br>}  // ToolbarEnableButton <br> <br>void ToolbarDepressButton (HWND hWndTB, int iButtonNum, BOOL bDepress) <br>{ <br>   if (iButtonNum &gt;= IDM_TOOLBARADD &amp;&amp; iButtonNum &lt;= IDM_TOOLBARBOOKMARK) <br>      { <br>      // these buttons are push button and will not stay down after <br>      // each hit <br>      SendMessage (hWndTB, TB_PRESSBUTTON, iButtonNum, (LONG)bDepress) ; <br>      } <br>   else <br>      { <br>      // for the four view buttons, have to use CHECKBUTTON so they <br>      // will stay down after selected. <br>      SendMessage (hWndTB, TB_CHECKBUTTON, iButtonNum, (LONG)bDepress) ; <br>      } <br>}  // ToolbarDepressButton <br> <br>void OnToolbarHit (WPARAM wParam, LPARAM lParam) <br>{ <br> <br>   WORD  ToolbarHit ; <br> <br>   if (HIWORD(wParam) == TBN_ENDDRAG) <br>      { <br>      StatusLineReady (hWndStatus) ; <br>      } <br>   else if (HIWORD(wParam) == TBN_BEGINDRAG) <br>      { <br>      ToolbarHit = LOWORD (lParam) ; <br> <br>      if (ToolbarHit &gt;= IDM_TOOLBARADD &amp;&amp; <br>          ToolbarHit &lt;= IDM_TOOLBARDELETE) <br>         { <br>         ToolbarHit -= IDM_TOOLBARADD ; <br> <br>         switch (iPerfmonView) <br>            { <br>            case IDM_VIEWALERT: <br>               ToolbarHit += IDM_EDITADDALERT ; <br>               break ; <br> <br>            case IDM_VIEWLOG: <br>               ToolbarHit += IDM_EDITADDLOG ; <br>               break ; <br> <br>            case IDM_VIEWREPORT: <br>               ToolbarHit += IDM_EDITADDREPORT ; <br>               break ; <br> <br>            case IDM_VIEWCHART: <br>            default: <br>               ToolbarHit += IDM_EDITADDCHART ; <br>               break ; <br>            } <br>         } <br>      else if (ToolbarHit == IDM_TOOLBARBOOKMARK) <br>         { <br>         ToolbarHit = IDM_OPTIONSBOOKMARK ; <br>         } <br>      else if (ToolbarHit == IDM_TOOLBARREFRESH) <br>         { <br>         switch (iPerfmonView) <br>            { <br>            case IDM_VIEWALERT: <br>               ToolbarHit = IDM_OPTIONSREFRESHNOWALERT ; <br>               break ; <br> <br>            case IDM_VIEWLOG: <br>               ToolbarHit = IDM_OPTIONSREFRESHNOWLOG ; <br>               break ; <br> <br>            case IDM_VIEWREPORT: <br>               ToolbarHit = IDM_OPTIONSREFRESHNOWREPORT ; <br>               break ; <br> <br>            case IDM_VIEWCHART: <br>            default: <br>               ToolbarHit = IDM_OPTIONSREFRESHNOWCHART ; <br>               break ; <br>            } <br>         } <br>      else if (ToolbarHit == IDM_TOOLBAROPTIONS) <br>         { <br>         switch (iPerfmonView) <br>            { <br>            case IDM_VIEWALERT: <br>               ToolbarHit = IDM_OPTIONSALERT ; <br>               break ; <br> <br>            case IDM_VIEWLOG: <br>               ToolbarHit = IDM_OPTIONSLOG ; <br>               break ; <br> <br>            case IDM_VIEWREPORT: <br>               ToolbarHit = IDM_OPTIONSREPORT ; <br>               break ; <br> <br>            case IDM_VIEWCHART: <br>            default: <br>               ToolbarHit = IDM_OPTIONSCHART ; <br>               break ; <br>            } <br>         } <br> <br>      StatusLine (hWndStatus, ToolbarHit) ; <br>      } <br>}  // OnToolBarHit <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
