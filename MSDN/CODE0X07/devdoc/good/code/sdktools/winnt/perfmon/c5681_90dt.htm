<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PERFDATA.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5681"></a>PERFDATA.H</h2>
<pre><code><br>#define dwPerfDataIncrease       0x1000 <br> <br>#define AllocatePerfData()      (MemoryAllocate (STARTING_SYSINFO_SIZE)) <br> <br>// Messages for the perf data collection thread <br>#define WM_GET_PERF_DATA (WM_USER + 102) <br>#define WM_FREE_SYSTEM   (WM_USER + 103) <br> <br>// State for perf data collection <br>#define WAIT_FOR_PERF_DATA    0x0010 <br>#define PERF_DATA_READY       0x0011 <br>#define PERF_DATA_FAIL        0x0012 <br>#define IDLE_STATE            0x0013 <br> <br> <br>//==========================================================================// <br>//                                   Macros                                 // <br>//==========================================================================// <br> <br> <br>#define IsLocalComputer(a) (!lstrcmp(a,LocalComputerName)) <br>#define IsRemoteComputer(a) (!IsLocalComputer(a)) <br> <br> <br>//==========================================================================// <br>//                             Exported Functions                           // <br>//==========================================================================// <br> <br>#if 0 <br>PPERFOBJECT FirstObject (PPERFDATA pPerfData) ; <br> <br>PPERFOBJECT NextObject (PPERFOBJECT pObject) ; <br> <br>PERF_COUNTER_DEFINITION * <br>FirstCounter( <br>    PERF_OBJECT_TYPE *pObjectDef) ; <br> <br>PERF_COUNTER_DEFINITION * <br>NextCounter( <br>    PERF_COUNTER_DEFINITION *pCounterDef) ; <br>#endif <br> <br>#define FirstObject(pPerfData)         \ <br>   ((PPERFOBJECT) ((PBYTE) pPerfData + pPerfData-&gt;HeaderLength)) <br> <br>#define NextObject(pObject)            \ <br>   ((PPERFOBJECT) ((PBYTE) pObject + pObject-&gt;TotalByteLength)) <br> <br>#define FirstCounter(pObjectDef)       \ <br>   ((PERF_COUNTER_DEFINITION *) ((PCHAR)pObjectDef + pObjectDef-&gt;HeaderLength)) <br> <br>#define NextCounter(pCounterDef)       \ <br>   ((PERF_COUNTER_DEFINITION *) ((PCHAR)pCounterDef + pCounterDef-&gt;ByteLength)) <br> <br>void <br>GetInstanceNameStr (PPERFINSTANCEDEF pInstance, <br>                    LPTSTR lpszInstance) ; <br> <br>LPTSTR    <br>GetInstanceName (PPERFINSTANCEDEF pInstance) ; <br> <br>void <br>GetPerfComputerName(PPERFDATA pPerfData, <br>                    LPTSTR szComputerName) ; <br> <br>PERF_INSTANCE_DEFINITION *GetInstanceByName( <br>    PERF_DATA_BLOCK *pDataBlock, <br>    PERF_OBJECT_TYPE *pObjectDef, <br>    LPTSTR pInstanceName, <br>    LPTSTR pParentName) ; <br> <br> <br>PERF_INSTANCE_DEFINITION *GetInstanceByUniqueID( <br>    PERF_OBJECT_TYPE *pObjectDef, <br>    LONG UniqueID) ; <br> <br> <br>HKEY OpenSystemPerfData (IN LPCTSTR lpszSystem) ; <br> <br> <br> <br>LONG GetSystemPerfData ( <br>    IN HKEY hKeySystem, <br>    IN LPTSTR lpszValue, <br>    OUT PPERFDATA pPerfData,  <br>    OUT PDWORD pdwPerfDataLen <br>); <br> <br> <br>BOOL CloseSystemPerfData (HKEY hKeySystem) ; <br> <br> <br> <br>int CBLoadObjects (HWND hWndCB, <br>                   PPERFDATA pPerfData, <br>                   PPERFSYSTEM pSysInfo, <br>                   DWORD dwDetailLevel, <br>                   LPTSTR lpszDefaultObject, <br>                   BOOL bIncludeAll) ; <br> <br>int LBLoadObjects (HWND hWndCB, <br>                   PPERFDATA pPerfData, <br>                   PPERFSYSTEM pSysInfo, <br>                   DWORD dwDetailLevel, <br>                   LPTSTR lpszDefaultObject, <br>                   BOOL bIncludeAll) ; <br> <br> <br>BOOL UpdateSystemData (PPERFSYSTEM pSystem,  <br>                       PPERFDATA *ppPerfData) ; <br> <br> <br>BOOL UpdateLinesForSystem (LPTSTR lpszSystem,  <br>                           PPERFDATA pPerfData,  <br>                           PLINE pLineFirst, <br>                           PPERFSYSTEM pSystem) ; <br> <br>BOOL FailedLinesForSystem (LPTSTR lpszSystem,  <br>                           PPERFDATA pPerfData,  <br>                           PLINE pLineFirst) ; <br> <br> <br>BOOL UpdateLines (PPPERFSYSTEM ppSystemFirst, <br>                  PLINE pLineFirst) ; <br> <br> <br>BOOL PerfDataInitializeInstance (void) ; <br> <br> <br>DWORD <br>QueryPerformanceName( <br>    PPERFSYSTEM pSysInfo, <br>    DWORD dwTitleIndex, <br>    LANGID LangID, <br>    DWORD cbTitle, <br>    LPTSTR lpTitle, <br>    BOOL Help <br>    ); <br> <br>PERF_INSTANCE_DEFINITION * <br>FirstInstance( <br>    PERF_OBJECT_TYPE *pObjectDef) ; <br> <br> <br> <br>PERF_INSTANCE_DEFINITION * <br>NextInstance( <br>    PERF_INSTANCE_DEFINITION *pInstDef) ; <br> <br> <br> <br>int CounterIndex (PPERFCOUNTERDEF pCounterToFind, <br>                  PPERFOBJECT pObject) ; <br> <br> <br>DWORD GetSystemNames(PPERFSYSTEM pSysInfo) ; <br> <br> <br> <br>PERF_OBJECT_TYPE *GetObjectDefByTitleIndex( <br>    PERF_DATA_BLOCK *pDataBlock, <br>    DWORD ObjectTypeTitleIndex) ; <br> <br> <br>PERF_OBJECT_TYPE *GetObjectDefByName( <br>    PPERFSYSTEM pSystem, <br>    PERF_DATA_BLOCK *pDataBlock, <br>    LPTSTR pObjectName) ; <br> <br>DWORD GetObjectIdByName( <br>    PPERFSYSTEM pSystem, <br>    PERF_DATA_BLOCK *pDataBlock, <br>    LPTSTR pObjectName) ; <br> <br>LPTSTR <br>InstanceName( <br>PERF_INSTANCE_DEFINITION *pInstDef) ; <br> <br>void PerfDataThread (PPERFSYSTEM pSystem) ; <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
