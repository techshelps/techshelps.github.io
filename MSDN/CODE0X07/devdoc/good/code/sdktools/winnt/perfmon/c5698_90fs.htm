<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RPTOPTNS.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5698"></a>RPTOPTNS.C</h2>
<pre><code><br>#include "perfmon.h" <br> <br>#include "report.h"     // for ReportData <br>#include "utils.h" <br>#include "playback.h"   // for PlayingBackLog <br>#include "pmhelpid.h"   // Help IDs <br> <br>extern BOOL LocalManualRefresh ; <br>static DWORD iIntervalMSecs ; <br> <br> <br>void static OnInitDialog (HWND hDlg, PREPORT pReport) <br>   { <br>   int            i ; <br> <br>   for (i = 0 ; <br>        i &lt; NumIntervals ; <br>        i++) <br>      CBAddInt (DialogControl (hDlg, IDD_REPORTOPTIONSINTERVAL),  <br>                aiIntervals [i]) ; <br> <br>   DialogSetInterval (hDlg, IDD_REPORTOPTIONSINTERVAL, <br>      pReport-&gt;iIntervalMSecs) ; <br> <br>   LocalManualRefresh = pReport-&gt;bManualRefresh ; <br> <br>   if (LocalManualRefresh &amp;&amp; !PlayingBackLog()) <br>      { <br>      DialogEnable (hDlg, IDD_REPORTOPTIONSINTERVAL, FALSE) ; <br>      DialogEnable (hDlg, IDD_REPORTOPTIONSINTERVALTEXT, FALSE) ; <br>      } <br> <br>   CheckRadioButton(hDlg, <br>      IDD_REPORTOPTIONSMANUALREFRESH, <br>      IDD_REPORTOPTIONSPERIODIC, <br>      LocalManualRefresh ? IDD_REPORTOPTIONSMANUALREFRESH : <br>      IDD_REPORTOPTIONSPERIODIC) ; <br> <br>   WindowCenter (hDlg) ; <br> <br>   } <br> <br> <br>int FAR WINAPI ReportOptionsDlgProc (HWND hDlg,  <br>                                     unsigned iMessage,  <br>                                     WPARAM wParam,  <br>                                     LONG lParam) <br>   { <br>   BOOL           bHandled ; <br> <br>   bHandled = TRUE ; <br>   switch (iMessage) <br>      { <br>      case WM_INITDIALOG: <br>         dwCurrentDlgID = HC_PM_idDlgOptionReport ; <br>         OnInitDialog (hDlg, (PREPORT) lParam) ; <br>         return  (TRUE) ; <br> <br>      case WM_CLOSE: <br>         dwCurrentDlgID = 0 ; <br>         EndDialog (hDlg, 0) ; <br>         break ; <br> <br>      case WM_COMMAND: <br>         switch(wParam) <br>            { <br>            case IDD_OK: <br>               { <br>               FLOAT    eIntervalMSec ; <br> <br>               eIntervalMSec = DialogFloat (hDlg, IDD_REPORTOPTIONSINTERVAL, NULL) ; <br> <br>               if (eIntervalMSec &gt; MAX_INTERVALSEC || <br>                   eIntervalMSec &lt; MIN_INTERVALSEC) <br>                  { <br>                  DlgErrorBox (hDlg, ERR_BADTIMEINTERVAL) ; <br>                  SetFocus (DialogControl (hDlg, IDD_REPORTOPTIONSINTERVAL)) ; <br>                  EditSetTextEndPos (hDlg, IDD_REPORTOPTIONSINTERVAL) ; <br>                  return (FALSE) ; <br>                  break ; <br>                  } <br>               eIntervalMSec = eIntervalMSec * (FLOAT) 1000.0 + <br>                  (FLOAT) 0.5 ; <br> <br>               iIntervalMSecs = (DWORD) (eIntervalMSec); <br>               dwCurrentDlgID = 0 ; <br>               EndDialog (hDlg, 1) ; <br>               } <br>               break ; <br> <br>            case IDD_CANCEL: <br>               dwCurrentDlgID = 0 ; <br>               EndDialog (hDlg, 0) ; <br>               break ; <br> <br>            case IDD_REPORTOPTIONSPERIODIC : <br>            case IDD_REPORTOPTIONSMANUALREFRESH : <br>                <br>               // check if the Manual refresh is currently checked. <br>               // Then toggle the ManualRefresh button <br>               LocalManualRefresh = <br>                  (wParam == IDD_REPORTOPTIONSMANUALREFRESH) ; <br> <br>               CheckRadioButton(hDlg, <br>                  IDD_REPORTOPTIONSMANUALREFRESH, <br>                  IDD_REPORTOPTIONSPERIODIC, <br>                  LocalManualRefresh ? IDD_REPORTOPTIONSMANUALREFRESH : <br>                  IDD_REPORTOPTIONSPERIODIC ) ; <br>                   <br>               DialogEnable (hDlg, IDD_REPORTOPTIONSINTERVAL, !LocalManualRefresh) ; <br>               DialogEnable (hDlg, IDD_REPORTOPTIONSINTERVALTEXT, !LocalManualRefresh) ; <br>               break ; <br> <br>            case IDD_DISPLAYHELP: <br>               CallWinHelp (dwCurrentDlgID) ; <br>               break ; <br> <br>            default: <br>               bHandled = FALSE ; <br>               break; <br>            } <br>         break; <br> <br> <br>      default: <br>            bHandled = FALSE ; <br>         break ;             <br>      }  // switch <br> <br>   return (bHandled) ; <br>   }  // ReportOptionsDlgProc <br> <br> <br> <br> <br>BOOL DisplayReportOptions (HWND hWndParent, <br>                           HWND hWndReport) <br>   {  // DisplayReportOptions <br>   PREPORT        pReport ; <br> <br>   pReport = ReportData (hWndParent) ; <br> <br>   if (DialogBoxParam (hInstance, idDlgReportOptions,  <br>                       hWndParent, (DLGPROC) ReportOptionsDlgProc,  <br>                       (LPARAM) pReport)) <br>      {  // if <br>      pReport-&gt;iIntervalMSecs = iIntervalMSecs ; <br>      if (LocalManualRefresh != pReport-&gt;bManualRefresh) <br>         { <br>         ToggleReportRefresh (hWndReport) ; <br>         } <br>      else <br>         { <br>         SetReportTimer (pReport) ; <br>         } <br>      }  // if <br> <br>   return (TRUE) ; <br>   }  // DisplayReportOptions </code></pre>
<p>&nbsp;</p></body>
</HTML>
