<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BOOKMARK.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5639"></a>BOOKMARK.C</h2>
<pre><code><br>#include "perfmon.h" <br>#include "bookmark.h"   // External declarations for this file <br> <br>#include "log.h"        // for LogWriteBookmark <br>#include "utils.h"      // for WindowCenter <br> <br>#include "pmhelpid.h"   // Help IDs <br> <br> <br> <br>void static OnInitDialog (HDLG hDlg) <br>   { <br>   dwCurrentDlgID = HC_PM_idDlgOptionBookMark ; <br>   EditSetLimit (DialogControl (hDlg, IDD_BOOKMARKCOMMENT),  <br>                 BookmarkCommentLen-1) ; <br>   WindowCenter (hDlg) ; <br>   } <br> <br> <br>void static OnOK (HDLG hDlg) <br>   { <br>   TCHAR          szComment [BookmarkCommentLen + 1] ; <br> <br>   DialogText (hDlg, IDD_BOOKMARKCOMMENT, szComment) ; <br>   LogWriteBookmark (hWndLog, szComment) ; <br>   EndDialog (hDlg, 1) ; <br>   } <br> <br> <br>//==========================================================================// <br>//                             Exported Functions                           // <br>//==========================================================================// <br> <br> <br>int FAR WINAPI BookmarkDlgProc (HWND hDlg,  <br>                                unsigned iMessage,  <br>                                WPARAM wParam,  <br>                                LPARAM lParam) <br>   { <br>   BOOL           bHandled ; <br> <br>   bHandled = TRUE ; <br>   switch (iMessage) <br>      { <br>      case WM_INITDIALOG: <br>         OnInitDialog (hDlg) ; <br>         return  (TRUE) ; <br> <br>      case WM_CLOSE: <br>         dwCurrentDlgID = 0 ; <br>         EndDialog (hDlg, 0) ; <br>         break ; <br> <br>      case WM_COMMAND: <br>         switch(wParam) <br>            { <br>            case IDD_OK: <br>               dwCurrentDlgID = 0 ; <br>               OnOK (hDlg) ; <br>               break ; <br> <br>            case IDD_CANCEL: <br>               dwCurrentDlgID = 0 ; <br>               EndDialog (hDlg, 0) ; <br>               break ; <br> <br>            case IDD_BOOKMARKHELP: <br>               CallWinHelp (dwCurrentDlgID) ; <br>               break ; <br> <br>            default: <br>               bHandled = FALSE ; <br>               break; <br>            } <br>         break; <br> <br> <br>      default: <br>            bHandled = FALSE ; <br>         break ;             <br>      }  // switch <br> <br>   return (bHandled) ; <br>   }  // BookmarkDlgProc <br> <br> <br> <br> <br>BOOL AddBookmark (HWND hWndParent) <br>   {  // AddBookmark <br>   return (DialogBox (hInstance, idDlgAddBookmark, hWndParent, <br>                   BookmarkDlgProc)) ; <br>   }  // AddBookmark <br> <br> <br>void BookmarkAppend (PPBOOKMARK ppBookmarkFirst,  <br>                     PBOOKMARK pBookmarkNew) <br>   {  // BookmarkAppend <br>   PBOOKMARK      pBookmark ; <br> <br>   if (!*ppBookmarkFirst) <br>      *ppBookmarkFirst = pBookmarkNew ; <br>   else   <br>      {  // else <br>      for (pBookmark = *ppBookmarkFirst ; <br>           pBookmark-&gt;pBookmarkNext ; <br>           pBookmark = pBookmark-&gt;pBookmarkNext) <br>         /* nothing */ ; <br>      pBookmark-&gt;pBookmarkNext = pBookmarkNew ; <br>      }  // else <br>   }  // BookmarkAppend </code></pre>
<p>&nbsp;</p></body>
</HTML>
