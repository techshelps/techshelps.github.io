<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5586"></a>README.TXT</h2>
<pre><code>DBMON notes <br> <br>10/7/94 <br> <br> <br>The first DWORD of the shared memory buffer contains the process ID of the <br>client that sent the debug string.  DBMON will print the process ID if the <br>previous line printed was from another process, or if the previous line was <br>from the same process and ended in a newline. <br> <br>The shared memory buffer must be 4096 bytes.  If it is larger, it won't do any <br>good.  If it is smaller, nothing terrible will happen, but strings larger than <br>the buffer will not be delivered, and a complaining message will be sent to the <br>kernel debugger by the client.  Why is it this size?  Because shared memory <br>comes in page-sized chunks, so we might as well ask for as much as will be used <br>on the machines with the smallest pages.  On machines with larger pages, the <br>remainder of the page will be wasted anyway. <br> <br>Event DBWIN_BUFFER_READY must be an auto-reset event, so that only one client <br>thread will use the buffer at a time.  Using a manual reset event with <br>PulseEvent will not work. <br> <br>Event DBWIN_DATA_READY need not be auto-reset, but it is simpler that way. <br> <br>Allowing multiple copies of DBMON to run might be amusing, put not particularly <br>useful.  As I originally wrote it, the messages were distributed randomly among <br>the DBMON instances or be garbled.  I added a check for ERROR_ALREADY_EXISTS so <br>it won't run twice.  The worst you can do to the client is cause it to print a <br>message on the kernel debugger, as above. <br> <br>If DBMON is broken and never calls SetEvent(AckEvent), it will cause a 10 <br>second delay in the client every time OutputDebugString is called, then the <br>message will be printed on the kernel debugger. <br> <br>OutputDebugString will force synchronization of client threads when DBMON is <br>running.  Letting the kernel debugger catch the strings will also synchronize <br>threads, but the timing effects may be different.  Caveat emptor. <br> <br>In a GUI version of DBMON, use MsgWaitForMultipleObjects. <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
