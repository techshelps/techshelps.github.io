<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SPY.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5525"></a>SPY.H</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>/*****************************************************************************\ <br>* <br>* Module: spy.h <br>* <br>*   Main include file for the Windows debugging Spy SDK applet. <br>* <br>\*****************************************************************************/ <br> <br>#include &lt;windows.h&gt; <br> <br>#ifdef  FE_IME <br>#include &lt;ime.h&gt; <br>#endif <br> <br>#include "dialogs.h" <br>#include "..\hook.h" <br> <br> <br>#define MAXSTRING                   MAX_PATH <br> <br>#define LINES_MAX                   250         // Max lines allowed in window. <br> <br> <br>// <br>// Message Table Flags <br>// <br>#define MTF_SELECTED                0x00000001 <br> <br>#define MTF_TYPE_MOUSE              0x00010000 <br>#define MTF_TYPE_DDE                0x00020000 <br>#define MTF_TYPE_CLIP               0x00040000 <br>#define MTF_TYPE_NC                 0x00080000 <br>#define MTF_TYPE_KEYBD              0x00100000 <br>#define MTF_TYPE_LB                 0x00200000 <br>#define MTF_TYPE_BM                 0x00400000 <br>#define MTF_TYPE_STM                0x00800000 <br>#define MTF_TYPE_CB                 0x01000000 <br>#define MTF_TYPE_EM                 0x02000000 <br>#ifdef FE_IME <br>#define MTF_TYPE_IME                0x04000000 <br>#endif <br> <br> <br>// <br>// Menu ids. <br>// <br> <br>#define MENU_SPY_SELECTWINDOW       1000 <br>#define MENU_SPY_ABOUT              1001 <br>#define MENU_SPY_EXIT               1002 <br> <br>#define MENU_EDIT_CUT               1100 <br>#define MENU_EDIT_COPY              1101 <br>#define MENU_EDIT_CLEAR             1102 <br> <br>#define MENU_OPTIONS_MESSAGES       1200 <br>#define MENU_OPTIONS_FONT           1201 <br>#define MENU_OPTIONS_OUTPUT         1202 <br> <br>#define MENU_START                  1300 <br>#define MENU_STOP                   1301 <br> <br>// <br>// Resource file constants <br>// <br>#define IDS_APPLICATION_NAME        2000 <br>#define IDS_MENU_START              2001 <br>#define IDS_MENU_STOP               2002 <br>#define IDS_PARENT                  2003 <br>#define IDS_NOPARENT                2004 <br>#define IDS_UNDEFINED               2005 <br>#define IDS_ERROR_WND_LINE          2006 <br>#define IDS_ERROR_CANT_OPEN_FILE    2007 <br>#define IDS_ERROR_CANT_OPEN_COM1    2008 <br>#define IDS_ERROR_CANT_LOAD_DLL     2009 <br> <br>// <br>// Position of the top level Start/Stop menu item. <br>// <br>#define MENUPOS_STARTSTOP           3 <br> <br> <br>// <br>// Prototype for the Message Decode functions. <br>// <br>typedef VOID (*LPFNDECODE)(HWND, UINT, PSPYMSGDATA); <br> <br> <br>// <br>// The Message Description Table structure that describes each message <br>// that Spy understands. <br>// <br>typedef struct <br>{ <br>    LPTSTR pszMsg; <br>    UINT msg; <br>    UINT Flags; <br>    LPFNDECODE pfnDecode; <br>} MSGDESC, *PMSGDESC; <br> <br> <br>// <br>// The message group structure.  A table of these structures describes <br>// each different group of messages that can be selected/deselected <br>// for spying on using the Messages dialog. <br>// <br>typedef struct <br>{ <br>    INT idCheckBox; <br>    DWORD flMask; <br>    INT cMsgs; <br>    INT cUseCount; <br>} MSGGROUP, *PMSGGROUP; <br> <br> <br>extern HANDLE ghInst; <br>extern HWND ghwndSpyApp; <br>extern HWND ghwndPrintf; <br>extern HANDLE ghHookThread; <br>extern HWND ghwndSpyHook; <br>extern HWND ghwndSpyingOn;              // The window we are spying on. <br>extern HFONT ghfontPrintf; <br>extern INT gnLines; <br>extern BOOL gfSpyOn; <br>extern BOOL gfSpyAll; <br>extern BOOL gfOutputWin; <br>extern BOOL gfOutputCom1; <br>extern BOOL gfOutputFile; <br>extern HFILE gfhFile; <br>extern HANDLE gfhCom1; <br>extern CHAR gszFile[]; <br>extern INT gcxBorder; <br>extern INT gcyBorder; <br>extern BOOL gfMsgsUser; <br>extern BOOL gfMsgsUnknown; <br>extern CHAR gszAppName[]; <br>extern UCHAR gszWindowName[]; <br>extern WINDOWPLACEMENT gwndpl; <br> <br>extern MSGDESC gaMsgs[]; <br>extern INT gcMessages; <br>extern MSGGROUP gaMsgGroup[]; <br>extern INT gcMsgGroups; <br>extern INT gaiSelected[]; <br>extern INT gaiSelected2[]; <br> <br> <br>#include "spyfuncs.h" <br>#include "wprintf.h" <br> <br>#ifdef FE_IME <br>#include &lt;ime.h&gt;               //  For WM_IME_REPORT <br>#include &lt;winuser.h&gt;           //  For WM_IMEKEYDOWN, WM_IMEKEYUP <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
