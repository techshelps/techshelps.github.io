<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ERROR.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5458"></a>ERROR.C</h2>
<pre><code>/*++ <br> <br>Copyright 1995 - 1998 Microsoft Corporation <br> <br>Module Name: <br> <br>    error.c <br> <br>Abstract: <br> <br>    Error handle module for the pfmon program <br> <br>Author: <br> <br>    Mark Lucovsky (markl) 26-Jan-1995 <br> <br>Revision History: <br> <br>--*/ <br> <br>#include "pfmonp.h" <br> <br>VOID <br>CDECL <br>DeclareError( <br>    UINT ErrorCode, <br>    UINT SupplementalErrorCode, <br>    ... <br>    ) <br>{ <br>    va_list arglist; <br>    HMODULE ModuleHandle; <br>    DWORD Flags, Size; <br>    UCHAR MessageBuffer[ 512 ]; <br> <br>    va_start( arglist, SupplementalErrorCode ); <br> <br>    if ((ErrorCode &amp; 0x0FFF0000) &gt;&gt; 16 == FACILITY_APPLICATION) { <br>        ModuleHandle = PfmonModuleHandle; <br>        Flags = FORMAT_MESSAGE_FROM_HMODULE; <br>        } <br>    else { <br>        ModuleHandle = NULL; <br>        Flags = FORMAT_MESSAGE_FROM_SYSTEM; <br>        } <br> <br>    Size = FormatMessage( Flags, <br>                          (LPCVOID)ModuleHandle, <br>                          ErrorCode, <br>                          0, <br>                          MessageBuffer, <br>                          sizeof( MessageBuffer ), <br>                          &amp;arglist <br>                        ); <br>    va_end( arglist ); <br> <br>    if (Size != 0) { <br>        fprintf( stderr, "PFMON: %s", MessageBuffer ); <br>        } <br>    else { <br>        fprintf( stderr, "PFMON: Unable to get message text for %08x\n", ErrorCode ); <br>        } <br> <br>    if (ModuleHandle == PfmonModuleHandle &amp;&amp; <br>        SupplementalErrorCode != 0 &amp;&amp; <br>        SupplementalErrorCode != ERROR_GEN_FAILURE <br>       ) { <br> <br>        ModuleHandle = NULL; <br>        Flags = FORMAT_MESSAGE_FROM_SYSTEM; <br>        Size = FormatMessage( Flags, <br>                              (LPCVOID)ModuleHandle, <br>                              SupplementalErrorCode, <br>                              0, <br>                              MessageBuffer, <br>                              sizeof( MessageBuffer ), <br>                              NULL <br>                            ); <br>        if (Size != 0) { <br>            while (Size != 0 &amp;&amp; MessageBuffer[ Size ] &lt;= ' ') { <br>                MessageBuffer[ Size ] = '\0'; <br>                Size -= 1; <br>                } <br> <br>            printf( "          '%s'\n", MessageBuffer ); <br>            } <br>        else { <br>            printf( "PFMON: Unable to get message text for %08x\n", SupplementalErrorCode ); <br>            } <br>        } <br> <br> <br> <br>    return; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
