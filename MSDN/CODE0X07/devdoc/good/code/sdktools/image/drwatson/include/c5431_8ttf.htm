<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CVFMT.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5433"></a>CVFMT.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1993  Microsoft Corporation <br> <br>Module Name: <br> <br>    cvfmt.h <br> <br>Abstract: <br> <br>    Formatting array for cv data types <br> <br>Author: <br> <br>    Wesley Witt (wesw) 20-July-1993 <br> <br>Environment: <br> <br>    User Mode <br> <br>--*/ <br> <br> <br>#define typecount  (sizeof (nametype) / sizeof (nametype[0])) <br> <br>struct typestr { <br>    USHORT      typ;          // cv data type <br>    USHORT      mode;         // mode <br>    USHORT      size;         // data size <br>    LPSTR       name;         // data type name string <br>    LPSTR       fmt;          // printf format string <br>}; <br> <br>static struct typestr nametype[] = { <br>    T_ABS,                  0, 0, "absolute",                 "", <br>    T_NOTYPE,               0, 0, "&lt;no type&gt;",                "", <br>    T_SEGMENT,              0, 0, "_segment",                 "", <br> <br>    T_CHAR,      CV_TM_DIRECT, 0, "char",                     "", <br>    T_SHORT,     CV_TM_DIRECT, 0, "short",                    "", <br>    T_LONG,      CV_TM_DIRECT, 0, "long",                     "", <br>    T_QUAD,      CV_TM_DIRECT, 0, "quad",                     "", <br>    T_UCHAR,     CV_TM_DIRECT, 0, "unsigned char",            "", <br>    T_USHORT,    CV_TM_DIRECT, 2, "unsigned short",           "0x%04hx", <br>    T_ULONG,     CV_TM_DIRECT, 4, "unsigned long",            "0x%08x", <br>    T_UQUAD,     CV_TM_DIRECT, 0, "unsigned quad",            "", <br>    T_REAL32,    CV_TM_DIRECT, 0, "float",                    "", <br>    T_REAL64,    CV_TM_DIRECT, 0, "double",                   "", <br>    T_REAL80,    CV_TM_DIRECT, 0, "long double",              "", <br>    T_VOID,      CV_TM_DIRECT, 0, "void",                     "", <br>    T_INT2,      CV_TM_DIRECT, 4, "int",                      "0x%08x", <br>    T_UINT2,     CV_TM_DIRECT, 0, "unsigned int",             "", <br>    T_INT4,      CV_TM_DIRECT, 4, "int",                      "0x%08x", <br>    T_UINT4,     CV_TM_DIRECT, 0, "unsigned int",             "", <br>    T_INT8,      CV_TM_DIRECT, 4, "int",                      "0x%08x", <br>    T_UINT8,     CV_TM_DIRECT, 0, "unsigned int",             "", <br>    T_RCHAR,     CV_TM_DIRECT, 0, "char",                     "", <br> <br>    T_CHAR,      CV_TM_NPTR,   0, "char *",                   "", <br>    T_SHORT,     CV_TM_NPTR,   0, "short *",                  "", <br>    T_LONG,      CV_TM_NPTR,   0, "long *",                   "", <br>    T_QUAD,      CV_TM_NPTR,   0, "quad *",                   "", <br>    T_UCHAR,     CV_TM_NPTR,   0, "unsigned char *",          "", <br>    T_USHORT,    CV_TM_NPTR,   0, "unsigned short *",         "", <br>    T_ULONG,     CV_TM_NPTR,   0, "unsigned long *",          "", <br>    T_UQUAD,     CV_TM_NPTR,   0, "unsigned quad *",          "", <br>    T_REAL32,    CV_TM_NPTR,   0, "float *",                  "", <br>    T_REAL64,    CV_TM_NPTR,   0, "double *",                 "", <br>    T_REAL80,    CV_TM_NPTR,   0, "long double *",            "", <br>    T_VOID,      CV_TM_NPTR,   0, "void *",                   "", <br>    T_INT2,      CV_TM_NPTR,   0, "int *",                    "", <br>    T_UINT2,     CV_TM_NPTR,   0, "unsigned int *",           "", <br>    T_INT4,      CV_TM_NPTR,   0, "int *",                    "", <br>    T_UINT4,     CV_TM_NPTR,   0, "unsigned int *",           "", <br>    T_INT8,      CV_TM_NPTR,   0, "int *",                    "", <br>    T_UINT8,     CV_TM_NPTR,   0, "unsigned int *",           "", <br>    T_RCHAR,     CV_TM_NPTR,   0, "char *",                   "", <br>    T_32PRCHAR,  CV_TM_NPTR,   4, "char *",                   "0x%08x", <br> <br>    T_CHAR,      CV_TM_FPTR,   0, "char far *",               "", <br>    T_SHORT,     CV_TM_FPTR,   0, "short far *",              "", <br>    T_LONG,      CV_TM_FPTR,   0, "long far *",               "", <br>    T_QUAD,      CV_TM_FPTR,   0, "quad far *",               "", <br>    T_UCHAR,     CV_TM_FPTR,   0, "unsigned char far *",      "", <br>    T_USHORT,    CV_TM_FPTR,   0, "unsigned short far *",     "", <br>    T_ULONG,     CV_TM_FPTR,   0, "unsigned long far *",      "", <br>    T_UQUAD,     CV_TM_FPTR,   0, "unsigned quad far *",      "", <br>    T_REAL32,    CV_TM_FPTR,   0, "float far *",              "", <br>    T_REAL64,    CV_TM_FPTR,   0, "double far *",             "", <br>    T_REAL80,    CV_TM_FPTR,   0, "long double far *",        "", <br>    T_VOID,      CV_TM_FPTR,   0, "void far *",               "", <br>    T_INT2,      CV_TM_FPTR,   0, "int far *",                "", <br>    T_UINT2,     CV_TM_FPTR,   0, "unsigned int far *",       "", <br>    T_INT4,      CV_TM_FPTR,   0, "int far *",                "", <br>    T_UINT4,     CV_TM_FPTR,   0, "unsigned int far *",       "", <br>    T_INT8,      CV_TM_FPTR,   0, "int far *",                "", <br>    T_UINT8,     CV_TM_FPTR,   0, "unsigned int far *",       "", <br>    T_RCHAR,     CV_TM_FPTR,   0, "char far *",               "", <br> <br>    T_CHAR,      CV_TM_HPTR,   0, "char huge *",              "", <br>    T_SHORT,     CV_TM_HPTR,   0, "short huge *",             "", <br>    T_LONG,      CV_TM_HPTR,   0, "long huge *",              "", <br>    T_QUAD,      CV_TM_HPTR,   0, "quad huge *",              "", <br>    T_UCHAR,     CV_TM_HPTR,   0, "unsigned char huge *",     "", <br>    T_USHORT,    CV_TM_HPTR,   0, "unsigned short huge *",    "", <br>    T_ULONG,     CV_TM_HPTR,   0, "unsigned long huge *",     "", <br>    T_UQUAD,     CV_TM_HPTR,   0, "unsigned quad huge *",     "", <br>    T_REAL32,    CV_TM_HPTR,   0, "float huge *",             "", <br>    T_REAL64,    CV_TM_HPTR,   0, "double huge *",            "", <br>    T_REAL80,    CV_TM_HPTR,   0, "long double huge *",       "", <br>    T_VOID,      CV_TM_HPTR,   0, "void huge *",              "", <br>    T_INT2,      CV_TM_HPTR,   0, "int huge *",               "", <br>    T_UINT2,     CV_TM_HPTR,   0, "unsigned int huge *",      "", <br>    T_INT4,      CV_TM_HPTR,   0, "int huge *",               "", <br>    T_UINT4,     CV_TM_HPTR,   0, "unsigned int huge *",      "", <br>    T_INT8,      CV_TM_HPTR,   0, "int huge *",               "", <br>    T_UINT8,     CV_TM_HPTR,   0, "unsigned int huge *",      "", <br>    T_RCHAR,     CV_TM_HPTR,   0, "char huge *",              "", <br> <br>    T_CHAR,      CV_TM_NPTR32, 0, "char *",                   "", <br>    T_SHORT,     CV_TM_NPTR32, 0, "short *",                  "", <br>    T_LONG,      CV_TM_NPTR32, 0, "long *",                   "", <br>    T_QUAD,      CV_TM_NPTR32, 0, "quad *",                   "", <br>    T_UCHAR,     CV_TM_NPTR32, 0, "unsigned char *",          "", <br>    T_USHORT,    CV_TM_NPTR32, 0, "unsigned short *",         "", <br>    T_ULONG,     CV_TM_NPTR32, 0, "unsigned long *",          "", <br>    T_UQUAD,     CV_TM_NPTR32, 0, "unsigned quad *",          "", <br>    T_REAL32,    CV_TM_NPTR32, 0, "float *",                  "", <br>    T_REAL64,    CV_TM_NPTR32, 0, "double *",                 "", <br>    T_REAL80,    CV_TM_NPTR32, 0, "long double *",            "", <br>    T_VOID,      CV_TM_NPTR32, 0, "void *",                   "", <br>    T_INT2,      CV_TM_NPTR32, 0, "int *",                    "", <br>    T_UINT2,     CV_TM_NPTR32, 0, "unsigned int *",           "", <br>    T_INT4,      CV_TM_NPTR32, 0, "int *",                    "", <br>    T_UINT4,     CV_TM_NPTR32, 0, "unsigned int *",           "", <br>    T_INT8,      CV_TM_NPTR32, 0, "int *",                    "", <br>    T_UINT8,     CV_TM_NPTR32, 0, "unsigned int *",           "", <br>    T_RCHAR,     CV_TM_NPTR32, 0, "char *",                   "", <br> <br>    T_CHAR,      CV_TM_FPTR32, 0, "char far32 *",             "", <br>    T_SHORT,     CV_TM_FPTR32, 0, "short far32 *",            "", <br>    T_LONG,      CV_TM_FPTR32, 0, "long far32 *",             "", <br>    T_QUAD,      CV_TM_FPTR32, 0, "quad far32 *",             "", <br>    T_UCHAR,     CV_TM_FPTR32, 0, "unsigned char far32 *",    "", <br>    T_USHORT,    CV_TM_FPTR32, 0, "unsigned short far32 *",   "", <br>    T_ULONG,     CV_TM_FPTR32, 0, "unsigned long far32 *",    "", <br>    T_UQUAD,     CV_TM_FPTR32, 0, "unsigned quad far32 *",    "", <br>    T_REAL32,    CV_TM_FPTR32, 0, "float far32 *",            "", <br>    T_REAL64,    CV_TM_FPTR32, 0, "double far32 *",           "", <br>    T_REAL80,    CV_TM_FPTR32, 0, "long double far32 *",      "", <br>    T_VOID,      CV_TM_FPTR32, 0, "void far32 *",             "", <br>    T_INT2,      CV_TM_FPTR32, 0, "int far32 *",              "", <br>    T_UINT2,     CV_TM_FPTR32, 0, "unsigned int far32 *",     "", <br>    T_INT4,      CV_TM_FPTR32, 0, "int far32 *",              "", <br>    T_UINT4,     CV_TM_FPTR32, 0, "unsigned int far32 *",     "", <br>    T_INT8,      CV_TM_FPTR32, 0, "int far32 *",              "", <br>    T_UINT8,     CV_TM_FPTR32, 0, "unsigned int far32 *",     "", <br>    T_RCHAR,     CV_TM_FPTR32, 0, "char far32 *",             "", <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
