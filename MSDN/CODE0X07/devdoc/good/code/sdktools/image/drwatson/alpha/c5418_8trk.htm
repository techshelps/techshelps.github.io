<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DISASM.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5420"></a>DISASM.H</h2>
<pre><code>#ifndef _NTDIS_ <br>#define _NTDIS_ <br> <br>// #include &lt;excpt.h&gt; <br>// #include &lt;ntdef.h&gt; <br> <br># <br>// this stuff is all "#if 0"'ed in alphaops.h <br>// <br>// Bit manipulations for Alpha instructions <br>// <br> <br>#define SHFT_OPCODE     26 <br>#define SHFT_RA         21 <br>#define SHFT_RB         16 <br>#define SHFT_JMP_FNC    14 <br>#define SHFT_OP_FNC     5 <br>#define SHFT_RBV_TYPE   12 <br>#define SHFT_LIT        13 <br>#define SHFT_FP_FNC     5 <br> <br>#define WIDTH_OPCODE    6 <br>#define WIDTH_REG       5 <br>#define WIDTH_MEM_DISP  16 <br>#define WIDTH_HINT      14 <br>#define WIDTH_JMP_FNC   2 <br>#define WIDTH_BR_DISP   21 <br>#define WIDTH_OP_FNC    7 <br>#define WIDTH_LIT       8 <br>#define WIDTH_FP_FNC    11 <br>#define WIDTH_PAL_FNC   26 <br> <br>#define BITS_OPCODE     ~(-1 &lt;&lt; WIDTH_OPCODE) <br>#define BITS_REG        ~(-1 &lt;&lt; WIDTH_REG) <br>#define BITS_MEM_DISP   ~(-1 &lt;&lt; WIDTH_MEM_DISP) <br>#define BITS_HINT       ~(-1 &lt;&lt; WIDTH_HINT) <br>#define BITS_JMP_FNC    ~(-1 &lt;&lt; WIDTH_JMP_FNC) <br>#define BITS_BR_DISP    ~(-1 &lt;&lt; WIDTH_BR_DISP) <br>#define BITS_OP_FNC     ~(-1 &lt;&lt; WIDTH_OP_FNC) <br>#define BITS_LIT        ~(-1 &lt;&lt; WIDTH_LIT) <br>#define BITS_FP_FNC     ~(-1 &lt;&lt; WIDTH_FP_FNC) <br>#define BITS_PAL_FNC    ~(-1 &lt;&lt; WIDTH_PAL_FNC) <br> <br>#define OPCODE(a)       ((BITS_OPCODE &amp; (a)) &lt;&lt; SHFT_OPCODE) <br>#define REG_A(a)           ((BITS_REG &amp; (a)) &lt;&lt; SHFT_RA) <br>#define REG_B(a)           ((BITS_REG &amp; (a)) &lt;&lt; SHFT_RB) <br>#define REG_C(a)           (BITS_REG &amp; (a)) <br>#define MEM_DISP(a)     (BITS_MEM_DISP &amp; (a)) <br>#define MEM_FUNC(a)MEM_DISP(a) <br>#define HINT(a)         (BITS_HINT &amp; (a)) <br>#define JMP_FNC(a)      ((BITS_JMP_FNC &amp; (a)) &lt;&lt; SHFT_JMP_FNC) <br>#define BR_DISP(a)      (BITS_BR_DISP &amp; (a)) <br>#define OP_FNC(a)       ((BITS_OP_FNC &amp; (a)) &lt;&lt; SHFT_OP_FNC) <br>#define RBV_TYPE(a)     ((1 &amp; (a)) &lt;&lt; SHFT_RBV_TYPE) <br>#define LIT(a)          ((BITS_LIT &amp; (a)) &lt;&lt; SHFT_LIT) <br>#define FP_FNC(a)       ((BITS_FP_FNC &amp; (a)) &lt;&lt; SHFT_FP_FNC) <br>#define PAL_FNC(a)      (BITS_PAL_FNC &amp; (a)) <br> <br>#define MSK_OPCODE      OPCODE(BITS_OPCODE) <br>#define MSK_RA          GET_RA(BITS_REG) <br>#define MSK_RB          REG_B(BITS_REG) <br>#define MSK_RC          REG_C(BITS_REG) <br>#define MSK_MEM_DISP    DISP(BITS_MEM_DISP) <br>#define MSK_HINT        HINT(BITS_HINT) <br>#define MSK_JMP_FNC     JMP_FNC(BITS_JMP_FNC) <br>#define MSK_BR_DISP     BR_DISP(BITS_BR_DISP) <br>#define MSK_RBV_TYPE    RBV_TYPE(1) <br>#define MSK_LIT         LIT(BITS_LIT) <br>#define MSK_FP_FNC      FP_FNC(BITS_FP_FNC) <br>#define MSK_PAL_FNC     PAL_FNC(BITS_PAL_FNC) <br> <br>#define EXTR_OPCODE(a)   (((a) &amp; MSK_OPCODE) &gt;&gt; SHFT_OPCODE) <br>#define EXTR_RA(a)       (((a) &amp; MSK_RA) &gt;&gt; SHFT_RA) <br>#define EXTR_RB(a)       (((a) &amp; MSK_RB) &gt;&gt; SHFT_RA) <br>#define EXTR_RC(a)        ((a) &amp; MSK_RC) <br>#define EXTR_MEM_DISP(a)  ((a) &amp; MSK_MEM_DISP) <br>#define EXTR_HINT(a)      ((a) &amp; MSK_HINT) <br>#define EXTR_JMP_FNC(a)  (((a) &amp; MSK_JMP_FNC) &gt;&gt; SHFT_JMP_FNC) <br>#define EXTR_BR_DISP(a)   ((a) &amp; MSK_BR_DISP) <br>#define EXTR_RBV_TYPE(a) (((a) &amp; MSK_RBV_TYPE) &gt;&gt; SHFT_RBV_TYPE) <br>#define EXTR_LIT(a)      (((a) &amp; MSK_LIT) &gt;&gt; SHFT_LIT) <br>#define EXTR_FP_FNC(a)   (((a) &amp; MSK_FP_FNC) &gt;&gt; SHFT_FP_FNC) <br>#define EXTR_PAL_FNC(a)  ((a) &amp; MSK_PAL_FNC) <br> <br>  <br> <br>// <br>// Bit manipulations for EV4 PAL mode instructions <br>// <br> <br>#define SHFT_EV4_IBOX      5 <br>#define SHFT_EV4_ABOX      6 <br>#define SHFT_EV4_PALTEMP   7 <br>#define SHFT_EV4_QWORD     12 <br>#define SHFT_EV4_RWCHECK   13 <br>#define SHFT_EV4_ALT       14 <br>#define SHFT_EV4_PHYSICAL  15 <br> <br>#define WIDTH_EV4_INDEX    5 <br>#define WIDTH_EV4_IBOX     1 <br>#define WIDTH_EV4_ABOX     1 <br>#define WIDTH_EV4_PALTEMP  1 <br>#define WIDTH_EV4_DISP     12 <br>#define WIDTH_EV4_QWORD    1 <br>#define WIDTH_EV4_RWCHECK  1 <br>#define WIDTH_EV4_ALT      1 <br>#define WIDTH_EV4_PHYSICAL 1 <br> <br>#define BITS_EV4_INDEX     ~(-1 &lt;&lt; WIDTH_EV4_INDEX) <br>#define BITS_EV4_IBOX      ~(-1 &lt;&lt; WIDTH_EV4_IBOX) <br>#define BITS_EV4_ABOX      ~(-1 &lt;&lt; WIDTH_EV4_ABOX) <br>#define BITS_EV4_PALTEMP   ~(-1 &lt;&lt; WIDTH_EV4_PALTEMP) <br>#define BITS_EV4_DISP      ~(-1 &lt;&lt; WIDTH_EV4_DISP) <br>#define BITS_EV4_QWORD     ~(-1 &lt;&lt; WIDTH_EV4_QWORD) <br>#define BITS_EV4_RWCHECK   ~(-1 &lt;&lt; WIDTH_EV4_RWCHECK) <br>#define BITS_EV4_ALT       ~(-1 &lt;&lt; WIDTH_EV4_ALT) <br>#define BITS_EV4_PHYSICAL  ~(-1 &lt;&lt; WIDTH_EV4_PHYSICAL) <br> <br>#define EV4_INDEX(a)     (BITS_EV4_INDEX &amp; (a)) <br>#define EV4_IBOX(a)     ((BITS_EV4_IBOX &amp; (a)) &lt;&lt; SHFT_EV4_IBOX) <br>#define EV4_ABOX(a)     ((BITS_EV4_ABOX &amp; (a)) &lt;&lt; SHFT_EV4_ABOX) <br>#define EV4_PALTEMP(a)  ((BITS_EV4_PALTEMP &amp; (a)) &lt;&lt; SHFT_EV4_PALTEMP) <br>#define EV4_DISP(a)      (BITS_EV4_DISP &amp; (a)) <br>#define EV4_QWORD(a)    ((BITS_EV4_QWORD &amp; (a)) &lt;&lt; SHFT_EV4_QWORD) <br>#define EV4_RWCHECK(a)  ((BITS_EV4_RWCHECK &amp; (a)) &lt;&lt; SHFT_EV4_RWCHECK) <br>#define EV4_ALT(a)      ((BITS_EV4_ALT &amp; (a)) &lt;&lt; SHFT_EV4_ALT) <br>#define EV4_PHYSICAL(a) ((BITS_EV4_PHYSICAL &amp; (a)) &lt;&lt; SHFT_EV4_PHYSICAL) <br> <br>#define MSK_EV4_INDEX       EV4_INDEX(BITS_EV4_INDEX) <br>#define MSK_EV4_IBOX        EV4_IBOX(BITS_EV4_IBOX) <br>#define MSK_EV4_ABOX        EV4_ABOX(BITS_EV4_ABOX) <br>#define MSK_EV4_PALTEMP     EV4_PALTEMP(BITS_EV4_PALTEMP) <br>#define MSK_EV4_PR          (MSK_EV4_INDEX | MSK_EV4_IBOX | MSK_EV4_ABOX | MSK_EV4_PALTEMP) <br>#define MSK_EV4_DISP        EV4_DISP(BITS_EV4_DISP) <br>#define MSK_EV4_QWORD       EV4_QWORD(BITS_EV4_QWORD) <br>#define MSK_EV4_RWCHECK     EV4_RWCHECK(BITS_EV4_RWCHECK) <br>#define MSK_EV4_ALT         EV4_ALT(BITS_EV4_ALT) <br>#define MSK_EV4_PHYSICAL    EV4_PHYSICAL(BITS_EV4_PHYSICAL) <br> <br>#define EXTR_EV4_INDEX(a)        (MSK_EV4_INDEX &amp; (a)) <br>#define EXTR_EV4_IBOX(a)        ((MSK_EV4_IBOX &amp; (a)) &gt;&gt; SHFT_EV4_IBOX) <br>#define EXTR_EV4_ABOX(a)        ((MSK_EV4_ABOX &amp; (a)) &gt;&gt; SHFT_EV4_ABOX) <br>#define EXTR_EV4_PALTEMP(a)     ((MSK_EV4_PALTEMP &amp; (a)) &gt;&gt; SHFT_EV4_PALTEMP) <br>#define EXTR_EV4_DISP(a)         (MSK_EV4_DISP &amp; (a)) <br>#define EXTR_EV4_QWORD(a)       ((MSK_EV4_QWORD &amp; (a)) &gt;&gt; SHFT_EV4_QWORD) <br>#define EXTR_EV4_RWCHECK(a)     ((MSK_EV4_RWCHECK &amp; (a)) &gt;&gt; SHFT_EV4_RWCHECK) <br>#define EXTR_EV4_ALT(a)         ((MSK_EV4_ALT &amp; (a)) &gt;&gt; SHFT_EV4_ALT) <br>#define EXTR_EV4_PHYSICAL(a)    ((MSK_EV4_PHYSICAL &amp; (a)) &gt;&gt; SHFT_EV4_PHYSICAL) <br> <br>#define EV4_TB_TAG        (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(0)) <br>#define EV4_ITB_PTE       (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(1)) <br>#define EV4_ICCSR         (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(2)) <br>#define EV4_ITM_PTE_TEMP  (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(3)) <br>#define EV4_EXC_ADDR      (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(4)) <br>#define EV4_SL_RCV        (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(5)) <br>#define EV4_ITBZAP        (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(6)) <br>#define EV4_ITBASM        (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(7)) <br>#define EV4_ITBIS         (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(8)) <br>#define EV4_PS            (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(9)) <br>#define EV4_EXC_SUM       (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(10)) <br>#define EV4_PAL_BASE      (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(11)) <br>#define EV4_HIRR          (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(12)) <br>#define EV4_SIRR          (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(13)) <br>#define EV4_ASTRR         (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(14)) <br>#define EV4_HIER          (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(16)) <br>#define EV4_SIER          (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(17)) <br>#define EV4_ASTER         (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(18)) <br>#define EV4_SL_CLR        (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(19)) <br>#define EV4_SL_XMIT       (EV4_PALTEMP(0) | EV4_ABOX(0) | EV4_IBOX(1) | EV4_INDEX(22)) <br>#define EV4_DTB_CTL       (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(0)) <br>#define EV4_DTB_PTE       (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(2)) <br>#define EV4_DTB_PTE_TEMP  (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(3)) <br>#define EV4_MMCSR         (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(4)) <br>#define EV4_VA            (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(5)) <br>#define EV4_DTBZAP        (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(6)) <br>#define EV4_DTASM         (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(7)) <br>#define EV4_DTBIS         (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(8)) <br>#define EV4_BIU_ADDR      (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(9)) <br>#define EV4_BIU_STAT      (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(10)) <br>#define EV4_DC_ADDR       (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(11)) <br>#define EV4_DC_STAT       (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(12)) <br>#define EV4_FILL_ADDR     (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(13)) <br>#define EV4_ABOX_CTL      (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(14)) <br>#define EV4_ALT_MODE      (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(15)) <br>#define EV4_CC            (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(16)) <br>#define EV4_CC_CTL        (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(17)) <br>#define EV4_BIU_CTL       (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(18)) <br>#define EV4_FILL_SYNDROME (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(19)) <br>#define EV4_BC_TAG        (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(20)) <br>#define EV4_FLUSH_IC      (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(21)) <br>#define EV4_FLUSH_IC_ASM  (EV4_PALTEMP(0) | EV4_ABOX(1) | EV4_IBOX(0) | EV4_INDEX(23)) <br>#define EV4_PAL_TEMP(x)   (EV4_PALTEMP(1) | EV4_ABOX(0) | EV4_IBOX(0) | EV4_INDEX(x)) <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
