<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SYMCVT.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5448"></a>SYMCVT.H</h2>
<pre><code>/*++ <br> <br> <br>Copyright 1996 - 1997 Microsoft Corporation <br> <br>Module Name: <br> <br>    symcvt.h <br> <br>Abstract: <br> <br>    This file contains all of the type definitions and prototypes <br>    necessary to access the symcvt library. <br> <br>Environment: <br> <br>    Win32, User Mode <br> <br>--*/ <br> <br> <br>typedef struct tagPTRINFO { <br>    DWORD                       size; <br>    DWORD                       count; <br>    PUCHAR                      ptr; <br>} PTRINFO, *PPTRINFO; <br> <br>typedef struct tagIMAGEPOINTERS { <br>    char                        szName[MAX_PATH]; <br>    HANDLE                      hFile; <br>    HANDLE                      hMap; <br>    DWORD                       fsize; <br>    PUCHAR                      fptr; <br>    BOOLEAN                     fRomImage; <br>    PIMAGE_DOS_HEADER           dosHdr; <br>    PIMAGE_NT_HEADERS           ntHdr; <br>    PIMAGE_ROM_HEADERS          romHdr; <br>    PIMAGE_FILE_HEADER          fileHdr; <br>    PIMAGE_OPTIONAL_HEADER      optHdr; <br>    PIMAGE_SEPARATE_DEBUG_HEADER sepHdr; <br>    int                         cDebugDir; <br>    PIMAGE_DEBUG_DIRECTORY *    rgDebugDir; <br>    PIMAGE_SECTION_HEADER       sectionHdrs; <br>    PIMAGE_SECTION_HEADER       debugSection; <br>    PIMAGE_SYMBOL               AllSymbols; <br>    PUCHAR                      stringTable; <br>    int                         numberOfSymbols; <br>    int                         numberOfSections; <br>    PCHAR *                     rgpbDebugSave; <br>} IMAGEPOINTERS, *PIMAGEPOINTERS; <br> <br>#define COFF_DIR(x)             ((x)-&gt;rgDebugDir[IMAGE_DEBUG_TYPE_COFF]) <br>#define CV_DIR(x)               ((x)-&gt;rgDebugDir[IMAGE_DEBUG_TYPE_CODEVIEW]) <br> <br>typedef struct _MODULEINFO { <br>    DWORD               iMod; <br>    DWORD               cb; <br>    DWORD               SrcModule; <br>    LPSTR               name; <br>} MODULEINFO, *LPMODULEINFO; <br> <br>typedef struct tagPOINTERS { <br>    IMAGEPOINTERS               iptrs;         // input file pointers <br>    IMAGEPOINTERS               optrs;         // output file pointers <br>    PTRINFO                     pCvStart;      // start of cv info <br>    PUCHAR                      pCvCurr;       // current cv pointer <br>    PTRINFO                     pCvModules;    // module information <br>    PTRINFO                     pCvSrcModules; // source module information <br>    PTRINFO                     pCvPublics;    // publics information <br>    PTRINFO                     pCvSegName;    // segment names <br>    PTRINFO                     pCvSegMap;     // segment map <br>    PTRINFO                     pCvSymHash;    // symbol hash table <br>    PTRINFO                     pCvAddrSort;   // address sort table <br>    LPMODULEINFO                pMi; <br>    DWORD                       modcnt; <br>} POINTERS, *PPOINTERS; <br> <br>typedef  char *  (* CONVERTPROC) (HANDLE, char *); <br> <br>#define align(_n)       ((4 - (( (DWORD)_n ) % 4 )) &amp; 3) <br> <br>#ifdef _SYMCVT_SOURCE_ <br>#define SYMCVTAPI <br>#else <br>#define SYMCVTAPI DECLSPEC_IMPORT <br>#endif <br> <br>PUCHAR  SYMCVTAPI ConvertSymbolsForImage( HANDLE, char * ); <br>BOOL    SYMCVTAPI ConvertCoffToCv( PPOINTERS p ); <br>BOOL    SYMCVTAPI ConvertSymToCv( PPOINTERS p ); <br>BOOL    SYMCVTAPI MapInputFile ( PPOINTERS p, HANDLE hFile, char *fname); <br>BOOL    SYMCVTAPI UnMapInputFile ( PPOINTERS p ); <br>BOOL    SYMCVTAPI CalculateNtImagePointers( PIMAGEPOINTERS p ); <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
