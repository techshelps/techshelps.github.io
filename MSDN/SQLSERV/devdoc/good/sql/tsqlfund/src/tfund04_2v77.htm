<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The FROM Clause in Joins</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="the_from_clause_in_joins"></a>The FROM Clause in Joins</h3>
<p>
The FROM clause of a join statement names all the tables (or views) involved in the join. FROM is the clause that actually indicates to SQL Server that a join is desired. The order in which the tables (or views) are listed in the FROM clause affects the results display only when you use * in the select list.</p>
<p>
Although this chapter uses only tables in its examples, views can be joined in exactly the same way as tables. Table or view names can be qualified by the names of the owner and database and can be given alias names for convenience. You can specify more than two tables or views in the FROM clause. (For details, see <a href="tfund04_69wz.htm">Joining More Than Two Tables</a>.)</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
