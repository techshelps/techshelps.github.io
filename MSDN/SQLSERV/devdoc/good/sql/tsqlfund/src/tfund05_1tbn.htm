<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Clustered Indexes</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_clustered_indexes"></a>Clustered Indexes</h2>
<p>
A <i>clustered index</i> is one in which the physical order of rows is the same as the indexed order of rows. The bottom, or leaf, level of a clustered index contains the actual data pages.</p>
<p>
You can have only a single clustered index per table, so use this index wisely. UPDATE and DELETE operations are often accelerated by clustered indexes, since these operations require much reading. Typically, for a table that has at least one index, you should make one of those indexes a clustered index.</p>
<p>
Consider using a clustered index for:
<ul>
<li>
Columns that contain a limited (but not tiny) number of unique values.<p>
For example, a <i>state</i> column of a <i>customers</i> table that contains 50 unique state abbreviations, such as WA, CA, and MO.
</li>
<li>
Queries that return a range of values, using operators such as BETWEEN, &gt;, &gt;=, &lt;, and &lt;=.<p>
For example:
<pre>SELECT * FROM sales
WHERE ord_date BETWEEN '5/1/93' AND '6/1/93'</pre>
</li>
<li>
Queries that return large results sets.<p>
For example:
<pre>SELECT * FROM phonebook
WHERE last_name = 'Smith'</pre>
</li>
</ul>
<p>
When a significant number of rows are being inserted into a table, avoid putting a clustered index on a monotonically increasing column, such as an identity column, of that table. Insert performance can be degraded if you do this, because each inserted row must go at the end of the table, on the last data page of the table. While one row is being inserted into the last data page (thus locking the data page), all other inserted rows must wait in a queue until the current insert is complete.</p>
<p>
The leaf-level pages of a clustered index are actual data pages, and the data pages are physically ordered on the hard disk using the logical order of the clustered index.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
