<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Joining More Than Two Tables</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_joining_more_than_two_tables"></a>Joining More Than Two Tables</h3>
<p>
The <i>titleauthor</i> table of the <i>pubs</i> database offers a good example of a situation in which joining more than two tables is helpful. The following query finds the titles of all books of a particular type and the names of their authors:</p>
<pre>SELECT au_lname, au_fname, title
FROM authors, titles, titleauthor
WHERE authors.au_id = titleauthor.au_id
    AND titles.title_id = titleauthor.title_id
    AND titles.type = 'trad_cook'
</pre>
<table cellspacing=4 cols=3>
<tr valign=top>
<td width=24%><pre>au_lname</pre>
</td>
<td width=17%><pre>au_fname</pre>
</td>
<td width=59%><pre>title</pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>--------------</pre>
</td>
<td width=17%><pre>---------</pre>
</td>
<td width=59%><pre>-----------------------------------</pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>Panteley</pre>
</td>
<td width=17%><pre>Sylvia</pre>
</td>
<td width=59%><pre>Onions, Leeks, and Garlic: Cooking 
Secrets of the Mediterranean</pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>Blotchet-Halls</pre>
</td>
<td width=17%><pre>Reginald</pre>
</td>
<td width=59%><pre>Fifty Years in Buckingham Palace 
Kitchens</pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>O'Leary</pre>
</td>
<td width=17%><pre>Michael</pre>
</td>
<td width=59%><pre>Sushi, Anyone?</pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>Gringlesby</pre>
</td>
<td width=17%><pre>Burt</pre>
</td>
<td width=59%><pre>Sushi, Anyone?</pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>Yokomoto</pre>
</td>
<td width=17%><pre>Akiko</pre>
</td>
<td width=59%><pre>Sushi, Anyone?</pre>
</td>
</tr>
</table><br>
<pre>(5 row(s) affected)
</pre>
<p>
Notice that one of the tables in the FROM clause, <i>titleauthor</i>, does not contribute any columns to the results. Nor do the columns that are joined, <i>au_id</i> and <i>title_id</i>, appear in the results. Nonetheless, this join is possible only by using <i>titleauthor</i> as an intermediate table.</p>
<p>
You can also join two or more pairs of columns in the same statement. For example, here's how to find the authors who live in the same city and state as a publisher:</p>
<pre>SELECT au_fname, au_lname, pub_name
FROM authors, publishers
WHERE authors.city = publishers.city
    AND authors.state = publishers.state
</pre>
<table cellspacing=4 cols=3>
<tr valign=top>
<td width=23%><pre>au_fname</pre>
</td>
<td width=23%><pre>au_lname</pre>
</td>
<td width=54%><pre>pub_name</pre>
</td>
</tr>
<tr valign=top>
<td width=23%><pre>--------</pre>
</td>
<td width=23%><pre>--------</pre>
</td>
<td width=54%><pre>--------------------</pre>
</td>
</tr>
<tr valign=top>
<td width=23%><pre>Cheryl</pre>
</td>
<td width=23%><pre>Carson</pre>
</td>
<td width=54%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=23%><pre>Abraham</pre>
</td>
<td width=23%><pre>Bennet</pre>
</td>
<td width=54%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=23%><pre></pre>
</td>
<td width=23%><pre></pre>
</td>
<td width=54%><pre></pre>
</td>
</tr>
</table><br>
<pre>(2 row(s) affected)
</pre>
<p>
When there is more than one join operator in the same statement, either to join more than two tables or to join more than two pairs of columns, the join expressions can be connected with AND or with OR.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
