<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Batches Submitted as Files</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_batches_submitted_as_files"></a>Batches Submitted as Files</h2>
<p>
A batch is a set of SQL statements submitted together and executed as a group. A script is often a series of batches submitted one after the other. A batch is compiled only once as a whole and is terminated by an end-of-batch signal. Because of this, certain restrictions on batch size exist.</p>
<p>
You can submit one or more batches of SQL statements to <b>isql</b> from an operating-system file. A file can include more than one batch ¾ more than one collection of SQL statements¾each terminated by the GO end-of-batch signal.</p>
<p>
For details, see <a href="../../tsqlref/src/tsql01_9i9f.htm">Batches</a> in the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
The following excerpt of INSTPUBS.SQL script, located in the SQL Server INSTALL directory, contains the following batches that help to create the <i>pubs</i> sample database (note that comments have been removed):</p>
<pre>SET NOCOUNT ON
SET DATEFORMAT mdy
USE master
go

CREATE TABLE #dbdev_temp
(
    name_var        varchar(30)     NOT NULL,
    type    varchar(10)     NOT NULL
)
go

INSERT #dbdev_temp VALUES('pubs', 'dbname')
INSERT #dbdev_temp VALUES('master', 'devname')
go

DECLARE @dbname_var     varchar(30)
SELECT @dbname_var = name_var FROM #dbdev_temp WHERE type = 'dbname'
IF EXISTS (SELECT * FROM master.dbo.sysdatabases
    WHERE name = @dbname_var)
BEGIN
    EXECUTE ('DROP DATABASE '  @dbname_var)
END
go

DECLARE @dbname_var     varchar(30),
    @devname_var    varchar(30)
SELECT @dbname_var = name_var FROM #dbdev_temp WHERE type = 'dbname'
SELECT @devname_var = name_var FROM #dbdev_temp WHERE type = 'devname'
EXECUTE ('PRINT "Creating the publishers database as '  @dbname_var
             ' on the '  @devname_var  ' device."')
EXECUTE ('CREATE DATABASE '  @dbname_var  ' ON '  @devname_var  ' = 3')
go

DECLARE @dbname_var     varchar(30)
SELECT @dbname_var = name_var FROM #dbdev_temp WHERE type = 'dbname'
EXECUTE ('USE '  @dbname_var)
go

DECLARE @dbname_var     varchar(30)
SELECT @dbname_var = name_var FROM #dbdev_temp WHERE type = 'dbname'
IF ((db_id() &lt;&gt; db_id(@dbname_var)) OR (db_id(@dbname_var) IS NULL) OR (db_id() = db_id('master')))
    RAISERROR ('The publishers database was not created. See the Errorlog or
Event Viewer for more details.',20,0) WITH LOG
go

EXECUTE ('USE master')
DECLARE @dbname_var     varchar(30)
SELECT @dbname_var = name_var FROM #dbdev_temp WHERE type = 'dbname'
EXECUTE ('sp_dboption '''  @dbname_var  ''', ''trunc. log on chkpt.'', true')
EXECUTE ('USE '  @dbname_var)
go

EXECUTE sp_addtype id, 'varchar(11)', 'NOT NULL'
EXECUTE sp_addtype tid, 'varchar(6)', 'NOT NULL'
EXECUTE sp_addtype empid, 'char(9)', 'NOT NULL'
go

CREATE TABLE authors
(
    au_id   id
    CHECK (au_id like '[0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]')
    CONSTRAINT UPKCL_auidind PRIMARY KEY CLUSTERED,
    au_lname        varchar(40)     NOT NULL,
    au_fname        varchar(20)     NOT NULL,
    phone   char(12)        NOT NULL
        DEFAULT ('UNKNOWN'),
    address varchar(40)     NULL,
    city    varchar(20)     NULL,
    state   char(2) NULL,
    zip     char(5) NULL
        CHECK (zip like '[0-9][0-9][0-9][0-9][0-9]'),
    contract        bit     NOT NULL
)
go
.
.
.
</pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
