<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The WHERE Clause in Joins</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="the_where_clause_in_joins"></a>The WHERE Clause in Joins</h3>
<p>
The WHERE clause specifies the connection between the tables or views named in the FROM clause and restricts the rows to be included in the results. It gives the names of the columns to be joined (qualified by table names if necessary) and the join operator, such as equality. </p>
<p>
<b>Important</b>  If you omit the WHERE clause in a join, you will get unexpected results. Without a WHERE clause, any of the join queries discussed so far produce 184 rows instead of 2! This situation is explained in <a href="tfund04_8bac.htm">How Joins Are Processed</a>.</p>
<p>
Use the following comparison operators to determine the basis on which columns will be matched:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=20%></th>
<th align=left width=80%></th>
</tr>
<tr valign=top>
<th align=left width=20%></th>
<th align=left width=80%></th>
</tr>
<tr valign=top>
<th align=left width=20%>Symbol</th>
<th align=left width=80%>Meaning</th>
</tr>
<tr valign=top>
<td width=20%></td>
<td width=80%></td>
</tr>
<tr valign=top>
<td width=20%>=</td>
<td width=80%>Equal to</td>
</tr>
<tr valign=top>
<td width=20%>&gt;</td>
<td width=80%>Greater than</td>
</tr>
<tr valign=top>
<td width=20%>&gt; =</td>
<td width=80%>Greater than or equal to</td>
</tr>
<tr valign=top>
<td width=20%>&lt;</td>
<td width=80%>Less than</td>
</tr>
<tr valign=top>
<td width=20%>&lt; =</td>
<td width=80%>Less than or equal to</td>
</tr>
<tr valign=top>
<td width=20%>&lt; &gt;</td>
<td width=80%>Not equal to</td>
</tr>
<tr valign=top>
<td width=20%>! &gt;</td>
<td width=80%>Not greater than</td>
</tr>
<tr valign=top>
<td width=20%>! &lt;</td>
<td width=80%>Not less than</td>
</tr>
</table><br>
<p>
Joins that use the relational operators are collectively called <i>theta joins</i>. Another set of join operators is used for <i>outer joins</i> (discussed in detail later in this chapter). The outer join operators are *=, which includes in the results all the rows from the first table, not just the ones in which the joined columns match, and =*, which includes in the results all the rows from the second table, not just the ones in which the joined columns match.</p>
<p>
Columns being joined need not have the same name or be the same datatype. However, if the datatypes are not identical, they must be compatible ¾ types that SQL Server automatically converts. (For details about datatype conversion, see <a href="tfund04_4x9v.htm">Using Built-in Functions</a>.)</p>
<p>
The WHERE clause of a join statement can include other conditions in addition to the one that links columns from different tables. </p>
<p>
<b>Note</b>  Tables cannot be joined on <i>text</i> or <i>image</i> columns. You can, however, compare the lengths of <i>text</i> columns from two tables with a WHERE clause. For example:</p>
<pre>WHERE DATALENGTH(textab_1.textcol) &gt; DATALENGTH(texttab_2.textcol) 
</pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
