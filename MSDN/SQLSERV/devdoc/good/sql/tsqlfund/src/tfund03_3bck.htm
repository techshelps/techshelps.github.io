<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding New Rows with SELECT</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_adding_new_rows_with_select"></a>Adding New Rows with SELECT</h3>
<p>
To add values into a table from one or more other tables, use a SELECT clause in the INSERT statement. The SELECT clause can insert values into some or all columns in a row.</p>
<p>
Inserting values into only some columns can come in handy when you want to take some values from an existing table. Then you can use UPDATE to add the values for other columns.</p>
<p>
Before inserting values for some (but not all) of the columns in a table, be sure that a default exists or NULL has been specified for the columns in which you are not inserting values. Otherwise, you will get an error message.</p>
<p>
When you insert rows from one table into another, the two tables must have compatible structures ¾ that is, the relevant columns must be of the same datatype or have datatypes that SQL Server automatically converts between.</p>
<p>
If the columns in both tables are in the same order in their CREATE TABLE statements, you don't need to specify column names in either table. Suppose that the <i>newauthors</i> table contains some rows of author information in the same format as the <i>authors</i> table. This example adds all the rows in <i>newauthors </i>to <i>authors</i>:</p>
<pre>INSERT authors
SELECT *
FROM newauthors
</pre>
<p>
However, because the columns in the two tables are likely not listed in the same sequence in their respective CREATE TABLE statements, you can use either the INSERT or the SELECT statement to order the columns so that they match.</p>
<p>
For example, say that the CREATE TABLE statement for the <i>authors</i> table contains the columns <i>au_id</i>, <i>au_fname</i>, <i>au_lname</i>, and <i>address</i> in that order, and the <i>newauthors</i> table contains <i>au_id</i>, <i>address</i>, <i>au_lname</i>, and <i>au_fname</i>. You must make the column sequence match in the INSERT statement. You can do this in either of these two ways:</p>
<pre>INSERT authors (au_id, address, au_lname, au_fname)
SELECT * FROM newauthors
</pre>
<p>
Or</p>
<pre>INSERT authors
SELECT au_id, au_fname, au_lname, address
FROM newauthors
</pre>
<p>
If the column sequence in the two tables fails to match, SQL Server cannot complete the INSERT operation or completes it incorrectly, putting data in the wrong column. For example, you might get address data in the <i>au_lname</i> column.</p>

<h4><a name="_computed_columns"></a>Computed Columns</h4>
<p>
You can use computed columns in a SELECT statement inside an INSERT statement. For example, imagine that a table named <i>tmp</i> contains some new rows for the <i>titles</i> table with some out-of-date data (the <i>price</i> figures need to be doubled). A statement that would increase the prices and insert the <i>tmp</i> rows into <i>titles</i> looks like this:</p>
<pre>INSERT titles
SELECT title_id, title, type, pub_id, price * 2,
advance, royalty, ytd_sales, notes, pubdate
FROM tmp
</pre>
<p>
When you perform computations on a column, you cannot use the SELECT * syntax. Each column must be named individually in the select list.</p>

<h4><a name="_inserting_data_from_the_same_table"></a>Inserting Data from the Same Table</h4>
<p>
You can insert data into a table based on other data in the same table. Essentially, this means copying all or part of a row.</p>
<p>
For example, you can insert a new row in the <i>publishers</i> table that is based on the values in an already existing row in the same table. (Be sure you follow the rule on the <i>pub_id</i> column for legal entries.) Here's how:</p>
<pre>INSERT publishers
SELECT '9980', 'test', city, state, country
FROM publishers
WHERE pub_name = 'New Moon Books'

(1 row affected)


SELECT * FROM publishers
</pre>
<table cellspacing=4 cols=5>
<tr valign=top>
<td width=13%><pre>pub_id</pre>
</td>
<td width=37%><pre>pub_name</pre>
</td>
<td width=20%><pre>city</pre>
</td>
<td width=13%><pre>state</pre>
</td>
<td width=17%><pre>country</pre>
</td>
</tr>
<tr valign=top>
<td width=13%><pre>------</pre>
</td>
<td width=37%><pre>-----------------------</pre>
</td>
<td width=20%><pre>-----------</pre>
</td>
<td width=13%><pre>-----</pre>
</td>
<td width=17%><pre>-------- </pre>
</td>
</tr>
<tr valign=top>
<td width=13%><pre>0736</pre>
</td>
<td width=37%><pre>New Moon Books</pre>
</td>
<td width=20%><pre>Boston</pre>
</td>
<td width=13%><pre>MA</pre>
</td>
<td width=17%><pre>USA</pre>
</td>
</tr>
<tr valign=top>
<td width=13%><pre>0877</pre>
</td>
<td width=37%><pre>Binnet &amp; Hardley</pre>
</td>
<td width=20%><pre>Washington</pre>
</td>
<td width=13%><pre>DC</pre>
</td>
<td width=17%><pre>USA</pre>
</td>
</tr>
<tr valign=top>
<td width=13%><pre>1389</pre>
</td>
<td width=37%><pre>Algodata Infosystems</pre>
</td>
<td width=20%><pre>Berkeley</pre>
</td>
<td width=13%><pre>CA</pre>
</td>
<td width=17%><pre>USA  </pre>
</td>
</tr>
<tr valign=top>
<td width=13%><pre>1622</pre>
</td>
<td width=37%><pre>Five Lakes Publishing</pre>
</td>
<td width=20%><pre>Chicago</pre>
</td>
<td width=13%><pre>IL</pre>
</td>
<td width=17%><pre>USA</pre>
</td>
</tr>
<tr valign=top>
<td width=13%><pre>1756</pre>
</td>
<td width=37%><pre>Ramona Publishers</pre>
</td>
<td width=20%><pre>Dallas</pre>
</td>
<td width=13%><pre>TX</pre>
</td>
<td width=17%><pre>USA</pre>
</td>
</tr>
<tr valign=top>
<td width=13%><pre>9901</pre>
</td>
<td width=37%><pre>GGG&amp;G</pre>
</td>
<td width=20%><pre>München</pre>
</td>
<td width=13%><pre>(null)</pre>
</td>
<td width=17%><pre>Germany</pre>
</td>
</tr>
<tr valign=top>
<td width=13%><pre>9952</pre>
</td>
<td width=37%><pre>Scootney Books</pre>
</td>
<td width=20%><pre>New York</pre>
</td>
<td width=13%><pre>NY</pre>
</td>
<td width=17%><pre>USA  </pre>
</td>
</tr>
<tr valign=top>
<td width=13%><pre>9999</pre>
</td>
<td width=37%><pre>Lucerne Publishing</pre>
</td>
<td width=20%><pre>Paris</pre>
</td>
<td width=13%><pre>(null)</pre>
</td>
<td width=17%><pre>France</pre>
</td>
</tr>
</table><br>
<pre>(8 row(s) affected)
</pre>
<p>
Similar to the INSERT...SELECT capability, INSERT INTO allows you to create a new table entirely and populate it with the results set of the SELECT statement. For details, see the <a href="../../tsqlref/src/tsql10_9alw.htm">INSERT statement</a> in the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
