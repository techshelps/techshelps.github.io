<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Customizing Locking with SELECT</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_customizing_locking_with_select"></a>Customizing Locking with SELECT</h3>
<p>
In a SELECT statement, you can specify one or more of the following locking options for a table:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=26%></th>
<th align=left width=74%></th>
</tr>
<tr valign=top>
<th align=left width=26%></th>
<th align=left width=74%></th>
</tr>
<tr valign=top>
<th align=left width=26%>Option</th>
<th align=left width=74%>Description</th>
</tr>
<tr valign=top>
<td width=26%></td>
<td width=74%></td>
</tr>
<tr valign=top>
<td width=26%>NOLOCK</td>
<td width=74%>Directs SQL Server not to issue shared locks and not to honor exclusive locks. When this option is in effect, it is possible to read a noncommitted transaction or a set of pages that are rolled back in the middle of a read. This option is also known as "dirty reads."</td>
</tr>
<tr valign=top>
<td width=26%>HOLDLOCK</td>
<td width=74%>Instructs SQL Server to hold a shared lock until completion of the transaction in which HOLDLOCK is used, instead of releasing the lock as soon as the required table, view, or data page is no longer needed.</td>
</tr>
<tr valign=top>
<td width=26%>UPDLOCK</td>
<td width=74%>Directs SQL Server to use update locks instead of shared locks while reading a table and to hold the locks until the end of the command or transaction. UPDLOCK has the advantage of allowing you to read data (without blocking other readers) and update it later on with the assurance that the data has not changed since you read it.</td>
</tr>
<tr valign=top>
<td width=26%>TABLOCK</td>
<td width=74%>Directs SQL Server to use a shared lock on a table. This lock allows others to read a table, but prevents them from updating it. This lock is held until the end of the command; however, if you also specify HOLDLOCK, the lock is held until the end of the transaction. </td>
</tr>
<tr valign=top>
<td width=26%>PAGLOCK</td>
<td width=74%>Directs SQL Server to use shared page locks. This is the default.</td>
</tr>
<tr valign=top>
<td width=26%>TABLOCKX</td>
<td width=74%>Directs SQL Server to use an exclusive lock on a table. This lock prevents others from reading or updating the table and is held until the end of the command or transaction.</td>
</tr>
</table><br>
<p>
These locking options override corresponding session-level options specified with the SET statement (see <a href="tfund05_27cc.htm">Customizing Transaction Isolation Level</a>). For details about these options, see <a href="../../tsqlref/src/tsql12_654k.htm">SELECT statement</a> in the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
