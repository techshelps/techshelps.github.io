<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Triggers Work</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_how_triggers_work_tfund06"></a>How Triggers Work</h2>
<p>
A trigger is defined on a particular table. Only the owner of the table has CREATE TRIGGER and DROP TRIGGER permissions for the table. These permissions cannot be transferred to others.</p>
<p>
SQL Server accepts a trigger definition that affects tables you do not own, and attempts actions for which you do not have permissions. You must rectify the permissions or drop the trigger. For example, Joe owns the <i>sales</i> table and creates a trigger on it. The trigger is supposed to update <i>titles.ytd_sales</i> when <i>sales.qty</i> is updated. However, Mary is the owner of <i>titles</i> and has not granted permissions on it to Joe. When Joe tries to update <i>sales</i>, SQL Server detects the trigger and Joe's lack of permission on <i>titles</i> and rolls back the update transaction. Joe must either get update permission on <i>titles.ytd_sales</i> from Mary or drop the trigger on <i>sales</i>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
