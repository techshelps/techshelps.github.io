<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Correlated Subqueries</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_correlated_subqueries"></a>Correlated Subqueries</h2>
<p>
Many of the previous queries can be evaluated by executing the subquery once and substituting the resulting value or values into the WHERE clause of the outer query. In queries that include a <i>correlated subquery</i> (also known as a <i>repeating subquery</i>), the subquery depends on the outer query for its values. This means that the subquery is executed repeatedly, once for each row that might be selected by the outer query.</p>
<p>
This statement finds the names of all authors who earn 100 percent of the shared royalty (<i>royaltyper</i>) on a book:</p>
<pre>SELECT au_lname, au_fname
FROM authors
WHERE 100 IN
    (SELECT royaltyper
    FROM titleauthor
    WHERE titleauthor.au_ID = authors.au_id)
</pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=45%><pre>au_lname</pre>
</td>
<td width=55%><pre>au_fname</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre>-------------</pre>
</td>
<td width=55%><pre>--------</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre>White</pre>
</td>
<td width=55%><pre>Johnson</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre>Green</pre>
</td>
<td width=55%><pre>Marjorie</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre>Carson</pre>
</td>
<td width=55%><pre>Cheryl</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre>Straight</pre>
</td>
<td width=55%><pre>Dean</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre>Locksley</pre>
</td>
<td width=55%><pre>Charlene</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre>Blotchet-Halls</pre>
</td>
<td width=55%><pre>Reginald</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre>del Castillo</pre>
</td>
<td width=55%><pre>Innes</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre>Panteley</pre>
</td>
<td width=55%><pre>Sylvia</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre>Ringer</pre>
</td>
<td width=55%><pre>Albert</pre>
</td>
</tr>
<tr valign=top>
<td width=45%><pre></pre>
</td>
<td width=55%><pre></pre>
</td>
</tr>
</table><br>
<pre>(9 row(s) affected)
</pre>
<p>
Unlike most of the subqueries previously shown, the subquery in this statement cannot be resolved independently of the main query. It needs a value for <i>authors.au_id</i>, but this value is a <i>variable</i> ¾ it changes as SQL Server examines different rows of the <i>authors</i> table.</p>
<p>
That's exactly how this query is evaluated: SQL Server considers each row of the <i>authors</i> table for inclusion in the results by substituting the value in each row into the inner query. Say that SQL Server first examines the row for Cheryl Carson. The variable <i>authors.au_id</i> takes the value 238-95-7766, which SQL Server substitutes into the inner query:</p>
<pre>SELECT royaltyper
FROM titleauthor
WHERE au_id = '238-95-7766'
</pre>
<p>
The result is 100, so the outer query evaluates to:</p>
<pre>SELECT au_lname, au_fname
FROM authors
WHERE 100 in (100)
</pre>
<p>
Since this is true, the row for Cheryl Carson is included in the results. If you go through the same procedure with the row for Abraham Bennet, you'll see that this row is not included in the results.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
