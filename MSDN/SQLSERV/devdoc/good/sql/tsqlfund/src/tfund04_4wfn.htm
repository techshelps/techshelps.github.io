<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Qualifying Column Names</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_qualifying_column_names"></a>Qualifying Column Names</h2>
<p>
In the preceding example, the <i>pub_id</i> column in the WHERE clause of the outer query is implicitly qualified by the table name in the outer query's FROM clause, <i>publishers</i>. The reference to <i>pub_id</i> in the select list of the subquery is qualified by the subquery's FROM clause ¾ that is, by the <i>titles</i> table.</p>
<p>
The general rule is that column names in a statement are implicitly qualified by the table referenced in the FROM clause at the same level.</p>
<p>
Here's what the query looks like with these implicit assumptions spelled out:</p>
<pre>SELECT pub_name
FROM publishers
WHERE publishers.pub_id NOT IN
    (SELECT titles.pub_id
    FROM titles
    WHERE type = 'business')
</pre>
<p>
It is never wrong to state the table name explicitly, and it is always possible to override implicit assumptions about table names with explicit qualifications.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
