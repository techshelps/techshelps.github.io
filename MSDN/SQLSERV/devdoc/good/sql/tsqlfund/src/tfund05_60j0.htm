<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting the Lock Escalation Level</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_setting_the_lock_escalation_level"></a>Setting the Lock Escalation Level</h3>
<p>
The system administrator can further customize locking by setting SQL Server's lock escalation level. The lock escalation level determines when SQL Server applies table locks instead of page locks (the default), and it affects all users of SQL Server.</p>
<p>
When a query requests rows from a table, SQL Server automatically generates page-level locks. However, if the query requests a large percentage of the table's rows, then SQL Server escalates the locking from page level to table level. This process is called lock escalation, and it makes table scans and operations against a large results set more efficient because it reduces locking overhead.</p>
<p>
The system administrator configures lock escalation levels by using the <b>sp_configure</b> system stored procedure. For details, see <a href="../../tsqlref/src/tsql19_3yzp.htm"><b>sp_configure</b> system stored procedure</a> in the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
