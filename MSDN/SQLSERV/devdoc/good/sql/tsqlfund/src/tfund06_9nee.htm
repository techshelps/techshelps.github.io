<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Qualifying Names Inside Stored Procedures</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_qualifying_names_inside_stored_procedures_tfund06"></a>Qualifying Names Inside Stored Procedures</h2>
<p>
Inside a stored procedure, object names used with the statements ALTER TABLE, CREATE TABLE, DROP TABLE, TRUNCATE TABLE, CREATE INDEX, DROP INDEX, UPDATE STATISTICS, and DBCC must be qualified with the object owner's name if other users are to make use of the stored procedure. For example, user Mary, who owns table <i>marytab</i>, must qualify the name of her table when it is used with one of these statements if she wants other users to be able to execute the procedure in which the table is used.</p>
<p>
This rule is necessary because object names are resolved when the procedure is run. If <i>marytab</i> is not qualified and user John tries to execute the procedure, SQL Server looks for a table called <i>marytab</i> owned by John. This example shows the correct usage; it tells SQL Server to look for a table called <i>marytab</i> owned by Mary:</p>
<pre>create proc p1
as
create index marytab_ind
on mary.marytab(col1)</pre>
<p>
Object names used with other statements (for example, SELECT or INSERT) inside a stored procedure need not be qualified because the names are resolved when the procedure is compiled.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
