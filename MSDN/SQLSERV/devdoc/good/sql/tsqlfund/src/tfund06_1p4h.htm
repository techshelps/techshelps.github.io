<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Examples</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_examples_tfund06_1"></a>Examples</h3>
<p>
<b>Note</b>  Most examples refer to the <i>pubs</i> sample database. The <i>pubs </i>sample database is included as a learning tool; it is created when the server is installed. To use the sample database, your system must have access to the <i>pubs</i> database. If you have a localized version of SQL Server and want to try the examples, drop the localized version of <i>pubs </i>and install the U.S. English version of <i>pubs</i>. To install the U.S. English version of <i>pubs</i>, run the INSTPUBS.SQL script with the <b>isql </b>command-line utility. This script can be found in the INSTALL directory of SQL Server. Also, if other users have executed the examples in this chapter, it is likely that the <i>pubs</i> database has been altered. This will change the output you see from some of the examples. You can reinstall the original pubs database at any time by running the INSTPUBS.SQL script.</p>
<p>
To run the INSTPUBS.SQL script, from an operating-system prompt, type:</p>
<p>
<b>isql /Usa /P</b><i>password</i> <b>/S</b><i>server</i> <b>-i\sql60\install\instpubs.sql</b></p>
<p>
For details about <b>isql</b>, see the <a href="../../tsqlref/src/tsql30_8buh.htm"><b>isql</b> command-line utility</a> in the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
Here is a stored procedure that is useful in the <i>pubs</i> database. Given an author's last and first name, it displays the title and publisher of each of that author's books:</p>
<pre>CREATE PROC au_info @lastname varchar(40), @firstname varchar(20) AS SELECT au_lname, au_fname, title, pub_name
FROM authors, titles, publishers, titleauthor
WHERE au_fname = @firstname
AND au_lname = @lastname
AND authors.au_id = titleauthor.au_id
AND titles.title_id = titleauthor.title_id
AND titles.pub_id = publishers.pub_id</pre>
<p>
You get a message stating that the command did not return any data, and it did not return any rows. This is fine. The procedure has been created.</p>
<p>
Now execute <b>au_info</b>:</p>
<pre>au_info Ringer, Anne</pre>
<table cellspacing=4 cols=4>
<tr valign=top>
<td width=17%><pre>au_lname</pre>
</td>
<td width=19%><pre>au_fname</pre>
</td>
<td width=35%><pre>title</pre>
</td>
<td width=29%><pre>pub_name</pre>
</td>
</tr>
<tr valign=top>
<td width=17%><pre>---------</pre>
</td>
<td width=19%><pre>---------</pre>
</td>
<td width=35%><pre>---------------------</pre>
</td>
<td width=29%><pre>----------------</pre>
</td>
</tr>
<tr valign=top>
<td width=17%><pre>Ringer</pre>
</td>
<td width=19%><pre>Anne</pre>
</td>
<td width=35%><pre>The Gourmet Microwave</pre>
</td>
<td width=29%><pre>Binnet &amp; Hardley</pre>
</td>
</tr>
<tr valign=top>
<td width=17%><pre>Ringer</pre>
</td>
<td width=19%><pre>Anne</pre>
</td>
<td width=35%><pre>Is Anger the Enemy?</pre>
</td>
<td width=29%><pre>New Moon Books</pre>
</td>
</tr>
</table><br>
<pre>(2 row(s) affected)</pre>
<p>
<b>Note</b>  If you supply parameters in the form <i>@parameter = value</i>, you can supply them in any order. You can also omit parameters for which defaults have been supplied. If you supply one parameter in the form <i>@parameter = value</i>, you must supply all subsequent parameters this way. If you do not supply parameters in the form <i>@parameter = value</i>, you must supply them in the order given in the CREATE PROCEDURE statement. </p>
<p>
When executing a stored procedure, the server will reject any parameters that were not included with the parameter list during procedure creation. Any parameter that is passed by reference (explicitly passing the parameter name) will not be accepted if the parameter name does not match. (For details on creating procedures and passing parameters, see the <a href="../../tsqlref/src/tsql03_412s.htm">CREATE PROCEDURE</a> and <a href="../../tsqlref/src/tsql08_8dx0.htm">EXECUTE</a> statements in the <i>Microsoft SQL Server Transact-SQL Reference</i>.)</p>
<p>
Although you can omit parameters for which defaults have been supplied, you cannot skip any. In other words, if a procedure has five parameters, you can omit both the fourth and the fifth parameters, but you cannot skip the fourth and still include the fifth.</p>
<p>
You can assign a default value for the parameter in the CREATE PROCEDURE statement. This value, which can be any constant, is taken as the parameter to the procedure when the user does not supply one.</p>
<p>
Here is a procedure that displays the names of all authors who have written a book published by the publisher given as a parameter. If no publisher name is supplied, the procedure shows the authors published by Algodata Infosystems.</p>
<pre>CREATE PROC pub_info2 @pubname varchar(40) = 'Algodata Infosystems'
AS SELECT au_lname, au_fname, pub_name
FROM authors a, publishers p, titles t, titleauthor ta
WHERE @pubname = p.pub_name
AND a.au_id = ta.au_id
AND t.title_id = ta.title_id
AND t.pub_id = p.pub_id</pre>
<p>
Note that if the default value is a character string that contains embedded blanks or punctuation, or if it begins with a number (for example, 6xxx), it must be enclosed in single quotation marks.</p>
<p>
Here's the output from executing <b>pub_info2</b> with no parameter specified:</p>
<pre>pub_info
</pre>
<table cellspacing=4 cols=3>
<tr valign=top>
<td width=28%><pre>au_lname</pre>
</td>
<td width=31%><pre>au_fname</pre>
</td>
<td width=41%><pre>pub_name</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>--------------</pre>
</td>
<td width=31%><pre>----------------</pre>
</td>
<td width=41%><pre>--------------------</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>Green</pre>
</td>
<td width=31%><pre>Marjorie</pre>
</td>
<td width=41%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>Bennet</pre>
</td>
<td width=31%><pre>Abraham</pre>
</td>
<td width=41%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>O'Leary</pre>
</td>
<td width=31%><pre>Michael</pre>
</td>
<td width=41%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>MacFeather</pre>
</td>
<td width=31%><pre>Stearns</pre>
</td>
<td width=41%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>Straight</pre>
</td>
<td width=31%><pre>Dean</pre>
</td>
<td width=41%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>Carson</pre>
</td>
<td width=31%><pre>Cheryl</pre>
</td>
<td width=41%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>Dull</pre>
</td>
<td width=31%><pre>Ann</pre>
</td>
<td width=41%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>Hunter</pre>
</td>
<td width=31%><pre>Sheryl</pre>
</td>
<td width=41%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>Locksley</pre>
</td>
<td width=31%><pre>Charlene</pre>
</td>
<td width=41%><pre>Algodata Infosystems</pre>
</td>
</tr>
</table><br>
<pre>(9 row(s) affected)</pre>
<p>
In the following stored procedure, <b>showind2</b>, <i>titles</i> is assigned as the default value for the <i>@table</i> parameter:</p>
<pre>CREATE PROC showind2 @table varchar(30) = titles
AS SELECT TABLE_NAME = sysobjects.name,
INDEX_NAME = sysindexes.name, INDEX_ID = indid
FROM sysindexes, sysobjects
WHERE sysobjects.name = @table
AND sysobjects.id = sysindexes.id</pre>
<p>
The column headings (for example, TABLE_NAME) make the results more readable. Here's what the procedure shows for the <i>authors</i> table:</p>
<table cellspacing=4 cols=5>
<tr valign=top>
<td colspan=4 width=86%><pre>showind2 authors</pre>
</td>
</tr>
<tr valign=top>
<td colspan=4 width=86%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>TABLE_NAME</pre>
</td>
<td width=30%><pre>INDEX_NAME</pre>
</td>
<td width=24%><pre>INDEX_ID</pre>
</td>
<td colspan=2 width=22%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>----------</pre>
</td>
<td width=30%><pre>----------</pre>
</td>
<td width=24%><pre>----------</pre>
</td>
<td colspan=2 width=22%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>authors</pre>
</td>
<td width=30%><pre>UPKCL_auidind</pre>
</td>
<td width=24%><pre>1</pre>
</td>
<td colspan=2 width=22%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>authors</pre>
</td>
<td width=30%><pre>aunmind</pre>
</td>
<td width=24%><pre>2</pre>
</td>
<td colspan=2 width=22%><pre></pre>
</td>
</tr>
<tr valign=top>
<td colspan=4 width=86%><pre></pre>
</td>
</tr>
<tr valign=top>
<td colspan=4 width=86%><pre>(2 row(s) affected)</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
If the user does not supply a value, SQL Server uses the default table, <i>titles</i>:</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<td colspan=3 width=100%><pre>showind2</pre>
</td>
</tr>
<tr valign=top>
<td colspan=3 width=100%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=27%><pre>TABLE_NAME</pre>
</td>
<td width=44%><pre>INDEX_NAME</pre>
</td>
<td width=29%><pre>INDEX_ID</pre>
</td>
</tr>
<tr valign=top>
<td width=27%><pre>----------</pre>
</td>
<td width=44%><pre>----------</pre>
</td>
<td width=29%><pre>----------</pre>
</td>
</tr>
<tr valign=top>
<td width=27%><pre>titles</pre>
</td>
<td width=44%><pre>UPKCL_titleidind</pre>
</td>
<td width=29%><pre>1</pre>
</td>
</tr>
<tr valign=top>
<td width=27%><pre>titles</pre>
</td>
<td width=44%><pre>titleind</pre>
</td>
<td width=29%><pre>2</pre>
</td>
</tr>
<tr valign=top>
<td colspan=3 width=100%><pre></pre>
</td>
</tr>
<tr valign=top>
<td colspan=3 width=100%><pre>(2 row(s) affected)</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
If a parameter is expected but none is supplied, and if a default value is not supplied in the CREATE PROCEDURE statement, SQL Server displays an error message that lists the expected parameters.</p>
<p>
The default can be the value NULL. In this case, if the user does not supply a parameter, SQL Server executes the stored procedure according to its other statements. No error message is displayed.</p>
<p>
The procedure definition can also specify that some other action be taken if the user does not give a parameter. Here's an example:</p>
<pre>CREATE PROC showind3 @table varchar(30) = NULL
AS IF @table IS NULL
    PRINT 'Please give a table name'
ELSE
    SELECT TABLE_NAME = sysobjects.name,
    INDEX_NAME = sysindexes.name, INDEX_ID = indid
    FROM sysindexes, sysobjects
    WHERE sysobjects.name = @table
    AND sysobjects.id = sysindexes.id</pre>
<p>
When the user fails to give a parameter, SQL Server displays the user-supplied message from the procedure.</p>
<p>
(For other examples of setting the default to NULL, examine the text of some system procedures using <b>sp_helptext</b>.)</p>
<p>
The default can include wildcard characters (%, _, [] and [^]) if the procedure uses the parameter with the LIKE keyword.</p>
<p>
For example, <b>showind</b> can be modified to display information about the system tables if the user does not supply a parameter:</p>
<pre>CREATE PROC showind4 @table varchar(30) = 'sys%'
AS SELECT TABLE_NAME = sysobjects.name,
    INDEX_NAME = sysindexes.name, INDEX_ID = indid
FROM sysindexes, sysobjects
WHERE sysobjects.name like @table
    AND sysobjects.id = sysindexes.id</pre>
<p>
The following variation of the stored procedure <b>au_info</b> has defaults with wildcard characters for both parameters:</p>
<pre>CREATE PROC au_info2 @lastname varchar(30) = 'D%',
    @firstname varchar(18) = '%'
AS SELECT au_lname, au_fname, title, pub_name
FROM authors, titles, publishers, titleauthor
WHERE au_fname LIKE @firstname
    AND au_lname LIKE @lastname
    AND authors.au_id = titleauthor.au_id
    AND titles.title_id = titleauthor.title_id
    AND titles.pub_id = publishers.pub_id</pre>
<p>
If <b>au_info2</b> is executed with no parameters, all the authors with last names beginning with the letter D are displayed:</p>
<pre>au_info2
</pre>
<table cellspacing=4 cols=4>
<tr valign=top>
<td width=19%><pre>au_lname</pre>
</td>
<td width=14%><pre>au_fname</pre>
</td>
<td width=36%><pre>title</pre>
</td>
<td width=31%><pre>pub_name</pre>
</td>
</tr>
<tr valign=top>
<td width=19%><pre>--------</pre>
</td>
<td width=14%><pre>--------</pre>
</td>
<td width=36%><pre>---------------------</pre>
</td>
<td width=31%><pre>-------------------</pre>
</td>
</tr>
<tr valign=top>
<td width=19%><pre>Dull</pre>
</td>
<td width=14%><pre>Ann</pre>
</td>
<td width=36%><pre>Secrets of Silicon Val</pre>
</td>
<td width=31%><pre>Algodata Infosystems</pre>
</td>
</tr>
<tr valign=top>
<td width=19%><pre>del 
Castillo </pre>
</td>
<td width=14%><pre>Innes</pre>
</td>
<td width=36%><pre>Silicon Val Gastrono</pre>
</td>
<td width=31%><pre>Binnet &amp; Hardley</pre>
</td>
</tr>
<tr valign=top>
<td width=19%><pre>DeFrance</pre>
</td>
<td width=14%><pre>Michel</pre>
</td>
<td width=36%><pre>The Gourmet Microwave</pre>
</td>
<td width=31%><pre>Binnet &amp; Hardley</pre>
</td>
</tr>
</table><br>
<pre>(3 row(s) affected)</pre>
<p>
This example omits the second parameter when defaults for two parameters have been defined, so you can find the books and publishers for all authors with the last name Ringer:</p>
<pre>au_info2 Ringer
</pre>
<table cellspacing=4 cols=4>
<tr valign=top>
<td width=18%><pre>au_lname</pre>
</td>
<td width=18%><pre>au_fname</pre>
</td>
<td width=35%><pre>title</pre>
</td>
<td width=29%><pre>pub_name</pre>
</td>
</tr>
<tr valign=top>
<td width=18%><pre>---------</pre>
</td>
<td width=18%><pre>---------</pre>
</td>
<td width=35%><pre>-------------------</pre>
</td>
<td width=29%><pre>---------------</pre>
</td>
</tr>
<tr valign=top>
<td width=18%><pre>Ringer</pre>
</td>
<td width=18%><pre>Anne</pre>
</td>
<td width=35%><pre>The Gourmet 
Microwave</pre>
</td>
<td width=29%><pre>Binnet &amp; 
Hardley</pre>
</td>
</tr>
<tr valign=top>
<td width=18%><pre>Ringer</pre>
</td>
<td width=18%><pre>Anne</pre>
</td>
<td width=35%><pre>Is Anger the Enemy?</pre>
</td>
<td width=29%><pre>New Moon Books</pre>
</td>
</tr>
<tr valign=top>
<td width=18%><pre>Ringer</pre>
</td>
<td width=18%><pre>Albert</pre>
</td>
<td width=35%><pre>Is Anger the Enemy?</pre>
</td>
<td width=29%><pre>New Moon Books</pre>
</td>
</tr>
<tr valign=top>
<td width=18%><pre>Ringer</pre>
</td>
<td width=18%><pre>Albert</pre>
</td>
<td width=35%><pre>Life Without Fear</pre>
</td>
<td width=29%><pre>New Moon Books</pre>
</td>
</tr>
</table><br>
<pre>(4 row(s) affected)</pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
