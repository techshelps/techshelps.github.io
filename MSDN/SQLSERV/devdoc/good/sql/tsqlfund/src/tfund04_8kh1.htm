<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Specifying Tables: The FROM Clause</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_specifying_tables.3a_.the_from_clause"></a>Specifying Tables: The FROM Clause</h2>
<p>
The FROM clause is required in every SELECT statement involving data from tables or views. Use it to list the tables and views containing the columns included in the select list and in the WHERE clause. Separate multiple table or view names, with commas. The FROM clause uses this syntax:</p>
<p>
SELECT <i>select_list</i> <br>
FROM {<i>table_name</i> | <i>viewname</i> list} [(<i>optimizer_hints</i>)]</p>
<p>
To simplify writing queries, you can give aliases to table names. Aliases are assigned in the FROM clause by specifying the alias after the table name. In the following example, the alias <i>p</i> is assigned to <i>publishers</i>:</p>
<pre>SELECT p.pub_id, p.pub_name
FROM publishers p
</pre>
<p>
Optional optimizer hints in the FROM clause allow you to customize locking for tables specified in the SELECT statement. For example, you can use the HOLDLOCK option to keep a shared lock in force until the completion of a transaction ¾ instead of releasing the lock as soon as the data is no longer needed. For details about the optimizer hints, see <a href="tfund05_5lt1.htm">Optimizing Performance</a>. Note that hints should be included inside parentheses so that they are not interpreted as an alias for a table.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
