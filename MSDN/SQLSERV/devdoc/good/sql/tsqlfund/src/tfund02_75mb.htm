<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Views</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_using_views"></a>Using Views</h1>
<p>
A <i>view</i> is a virtual table whose contents are defined by a query. A <i>query</i> is a set of instructions that retrieves and displays data from a database. In SQL Server, you create a query using the SELECT statement. </p>
<p>
A view looks like a real table ¾ with a set of named columns and rows of data. However, a view does not exist as a stored set of data values in a database. Instead, the rows and columns of data in a view come from base tables and are produced by the query that defines the view.</p>
<p>
Here is a view based on two tables:</p>
<p>
<img src="images/fund02.gif" border=0></p>
<p>
Views provide security by controlling the data users can see. Views allow users to work with a database in the form they are used to, even when changes occur to the structure of the database.</p>
<p>
A view looks exactly like any other database table. You can display it and operate on it almost as you can any other table. Transact-SQL enhances standard SQL so that there are no restrictions on querying through views and few restrictions on modifying them.</p>
<p>
The definition of a view (the base tables from which it is derived) is stored in the database. The data that you view is stored in only one place: in the base tables. No separate copies of data are associated with this stored definition.</p>
<p>
When you modify the data you see in a view, you are actually changing data in the underlying base tables. Changes to data in the underlying base tables are automatically reflected in the views derived from them.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
