<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Wildcards and the LIKE Clause</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_wildcards_and_the_like_clause"></a>Wildcards and the LIKE Clause</h3>
<p>
The LIKE keyword selects rows containing fields that match specified portions of character strings. LIKE is used with <i>char</i>, <i>varchar</i>, <i>text</i>, <i>datetime</i>, and <i>smalldatetime</i> data. It takes four wildcard characters, which are in the form of <i>regular</i> <i>expressions</i>:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=20%></th>
<th align=left width=80%></th>
</tr>
<tr valign=top>
<th align=left width=20%></th>
<th align=left width=80%></th>
</tr>
<tr valign=top>
<th align=left width=20%>Wildcard</th>
<th align=left width=80%>Meaning</th>
</tr>
<tr valign=top>
<td width=20%></td>
<td width=80%></td>
</tr>
<tr valign=top>
<td width=20%>%</td>
<td width=80%>Any string of zero or more characters</td>
</tr>
<tr valign=top>
<td width=20%>_</td>
<td width=80%>Any single character</td>
</tr>
<tr valign=top>
<td width=20%>[ ]</td>
<td width=80%>Any single character within the specified range (for example, [a-f]) or set (for example, [abcdef])</td>
</tr>
<tr valign=top>
<td width=20%>[^]</td>
<td width=80%>Any single character not within the specified range (for example, [^a - f]) or set (for example, [^abcdef])</td>
</tr>
</table><br>
<p>
When you use LIKE, be sure to enclose the wildcard(s) and the character string in single quotation marks. For example, using LIKE with the data in the <i>authors</i> table:
<ul>
<li>
LIKE <b>'</b>Mc%<b>'</b> searches for all names that begin with the letters "Mc" (McBadden).</li>
<li>
LIKE <b>'</b>%inger<b>'</b> searches for all names that end with the letters "inger" (Ringer, Stringer).</li>
<li>
LIKE <b>'</b>%en%<b>'</b> searches for all  names that have the letters "en" (Bennet, Green, McBadden).</li>
<li>
LIKE <b>'</b>_heryl<b>'</b> searches for all six-letter names ending with the letters "heryl" (Cheryl, Sheryl).</li>
<li>
LIKE <b>'</b>[CK]ars[eo]n<b>'</b> searches for Carsen, Karsen, Carson, and Karson (Carson).</li>
<li>
LIKE <b>'</b>[M-Z]inger<b>'</b> searches for all names ending with the letters "inger" that begin with any single letter from M to Z (Ringer).</li>
<li>
LIKE <b>'</b>M[^c]%<b>'</b> searches for all names beginning with the letter M that don't have the letter c as the second letter (MacFeather).</li>
</ul>
<p>
This query finds all phone numbers in the <i>authors</i> table that have area code 415:</p>
<pre>SELECT phone
FROM authors
WHERE phone LIKE '415%'
</pre>
<p>
You can use NOT LIKE with the same wildcards. To find all phone numbers in the <i>authors</i> table that have area codes other than 415, use either of these equivalent queries:</p>
<pre>SELECT phone
FROM authors
WHERE phone NOT LIKE '415%'

SELECT phone
FROM authors
WHERE not phone LIKE '415%'
</pre>
<p>
<b>Important</b>  The output for statements involving the LIKE keyword depends on the sort order chosen during installation. For information about the effects of different sort orders, see <i>Microsoft SQL</i> <i>Server Setup</i>.</p>
<p>
The only WHERE conditions that you can use on <i>text</i> columns are LIKE, IS NULL, or <b>patindex</b>. </p>
<p>
Wildcards used without LIKE are interpreted as literals rather than as a pattern ¾ that is, they represent only their own values. The following query attempts to find any phone numbers that consist of the four characters 415% only. It will not find phone numbers that start with 415.</p>
<pre>SELECT phone
FROM authors
WHERE phone = '415%'
</pre>
<p>
Another important consideration in using wildcards is their effect on performance. If a wildcard begins the expression, an index cannot be used. (Just as you wouldn't know where to start in a phone book if given the name <b>'</b>%mith<b>'</b>, not <b>'</b>Smith<b>'</b>. You'd have to search the whole book!) A wildcard in or at the end of an expression does not preclude use of an index (just as in a phone book, you'd know where to search if the name was <b>'</b>Samuel%<b>'</b>, regardless of whether the names Samuels and Samuelson are both there).</p>
<p>
You can search for the wildcard characters themselves. To use wildcards as characters in a LIKE match string rather than as wildcards, use square brackets ([ ]) to enclose %, _, and [. Use ] by itself. To search for a dash (-), rather than using it to specify a search range, use the dash as the first character inside a set of brackets.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=33%></th>
<th align=left width=67%></th>
</tr>
<tr valign=top>
<th align=left width=33%></th>
<th align=left width=67%></th>
</tr>
<tr valign=top>
<th align=left width=33%>Symbol</th>
<th align=left width=67%>Meaning</th>
</tr>
<tr valign=top>
<td width=33%></td>
<td width=67%></td>
</tr>
<tr valign=top>
<td width=33%>LIKE <b>'</b>5%<b>'</b></td>
<td width=67%>5 followed by any string of 0 or more characters</td>
</tr>
<tr valign=top>
<td width=33%>LIKE <b>'</b>5[%]<b>'</b></td>
<td width=67%>5%</td>
</tr>
<tr valign=top>
<td width=33%>LIKE <b>'</b>_n<b>'</b></td>
<td width=67%>an, in, on (and so on)</td>
</tr>
<tr valign=top>
<td width=33%>LIKE <b>'</b>[_]n<b>'</b></td>
<td width=67%>_n</td>
</tr>
<tr valign=top>
<td width=33%>LIKE <b>'</b>[a-cdf]<b>'</b></td>
<td width=67%>a, b, c, d, or f</td>
</tr>
<tr valign=top>
<td width=33%>LIKE <b>'</b>[-acdf]<b>'</b></td>
<td width=67%>-, a, c, d, or f</td>
</tr>
<tr valign=top>
<td width=33%>LIKE <b>'</b>[ [ ]<b>'</b></td>
<td width=67%>[</td>
</tr>
<tr valign=top>
<td width=33%>LIKE <b>'</b>]<b>'</b></td>
<td width=67%>]</td>
</tr>
</table><br>
<p>
Trailing blanks following the % wildcard in a LIKE clause are truncated to a single trailing blank. LIKE <b>'</b>%  <b>'</b>, which includes two trailing blanks, matches any string containing one or more trailing blanks. </p>
<p>
Sometimes you might want trailing blanks and trailing underscores (_) to be ignored with the LIKE pattern. To enable this functionality with LIKE, turn on trace flag 204 (at server startup, use the <b>-T204</b> option), or individual users can enable this functionality by using DBCC TRACEON (204).</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
