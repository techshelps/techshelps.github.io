<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Triggers</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_creating_triggers_tfund06"></a>Creating Triggers</h2>
<p>
A trigger is a database object. You create a trigger by specifying the current table and the data modification statements that activate the trigger. Then you specify the action or actions the trigger is to take.</p>
<p>
A table can have a maximum of three triggers: one update trigger, one insert trigger, and one delete trigger. However, each trigger can perform numerous functions and call up to 16 stored procedures. Each trigger can apply to only one table. However, a single trigger can apply to all three user actions (UPDATE, INSERT, and DELETE).</p>
<p>
You cannot create a trigger on a view or on a temporary table, although triggers can reference views or temporary tables.</p>
<p>
Although a TRUNCATE TABLE statement is, in effect, like a DELETE statement without a WHERE clause (it removes all rows), it cannot activate a trigger because the TRUNCATE TABLE statement is not logged.</p>
<p>
You can use the SET statement inside a trigger. Any SET option you invoke remains in effect during the execution of the trigger and then reverts to its former setting.</p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To create a trigger</h5>
<ul>
<li>
From the Manage menu in SQL Enterprise Manager, choose Triggers, select a table from the Tables drop-down list, and then choose New from the Triggers drop-down list.<p>
(For details, search for "trigger" in SQL Enterprise Manager Help.)
</li>
</ul>
<p>
Or 
<ul>
<li>
Use the CREATE TRIGGER statement.<p>
For example:
<pre>CREATE TRIGGER reminder
ON titles
FOR INSERT, UPDATE
AS RAISERROR (50009,16,10)</pre>
<p>
prints a message to the client when anyone tries to add or change data in the <i>titles</i> table.
<p>
(For details, see the <a href="../../tsqlref/src/tsql04_8rg4.htm">CREATE TRIGGER statement</a> in the <i>Microsoft SQL Server Transact-SQL Reference</i>.)
</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
