<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Subqueries Introduced with NOT IN</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_subqueries_introduced_with_not_in"></a>Subqueries Introduced with NOT IN</h2>
<p>
Subqueries introduced with the keywords NOT IN also return a list of zero or more values.</p>
<p>
This query finds the names of the publishers who have not published business books:</p>
<pre>SELECT pub_name
FROM publishers
WHERE pub_id NOT IN
    (SELECT pub_id
    FROM titles
    WHERE type = 'business')
</pre>
<p>
The query is exactly the same as the one in the preceding section except that NOT IN is substituted for IN. However, this statement cannot be converted to a join. The analogous not-equal join has a different meaning ¾ it finds the names of publishers who have published some book that is not a business book. (The difficulties with interpreting the meaning of joins not based on equality are discussed in more detail in <a href="tfund04_0377.htm">Using Joins to Create Multitable Queries</a>.)</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
