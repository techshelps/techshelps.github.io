<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying Totals with GROUP BY or COMPUTE</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_displaying_totals_with_group_by_or_compute"></a>Displaying Totals with GROUP BY or COMPUTE</h1>
<p>
You can display totals by using aggregate functions and the GROUP BY clause, or row aggregate functions and the COMPUTE clause.</p>
<p>
Aggregate functions ¾ SUM, AVG, COUNT, COUNT(*), MAX, and MIN ¾ generate summary values that appear as new columns in query results. The GROUP BY clause, part of the SELECT statement, divides a table into groups. GROUP BY and aggregate functions are often used together, and a summary value is calculated for each group. </p>
<p>
Row aggregate functions ¾ SUM, AVG, COUNT, MAX, and MIN ¾ and the COMPUTE clause are always used together as part of a SELECT statement. Row aggregate functions generate summary values that appear as additional rows in the query results. A SQL statement that includes a COMPUTE clause and row aggregate functions produces a report with detail rows and summary rows.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
