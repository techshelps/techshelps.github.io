<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 5   Optimizing Performance</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_optimizing_performance"></a>Optimizing Performance</h1>
<p>
To most effectively optimize SQL Server performance, you should focus on the areas that will yield the largest performance increases over the widest variety of situations. Microsoft SQL Server includes an intelligent, cost-based query optimizer which can quickly determine the best access method for retrieving the data, including the order in which to join tables and whether or not to use indexes that might be on those tables. The greatest benefit in SQL Server performance can usually be gained when you optimize the following areas:
<ul>
<li>
Logical database and table design</li>
<li>
Index design</li>
<li>
Query design</li>
</ul>
<p>
The biggest performance problems are often caused by deficiencies in these areas.</p>
<p>
This chapter focuses on the areas that have been shown to be of practical value in real world situations. You should concentrate on these areas first, because large performance improvements can often be achieved with a relatively small time investment. You can avoid spending significant time and effort on areas that may not yield sizable improvements.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
