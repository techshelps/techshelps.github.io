<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Subqueries Introduced with IN</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_subqueries_introduced_with_in"></a>Subqueries Introduced with IN</h2>
<p>
The result of a subquery introduced with IN (or with NOT IN, discussed later in this chapter) is a list of zero or more values. Once the subquery returns results, the outer query makes use of them.</p>
<p>
This query finds the names of the publishers who have published business books:</p>
<pre>SELECT pub_name
FROM publishers
WHERE pub_id IN
    (SELECT pub_id
    FROM titles
    WHERE type = 'business')

pub_name
--------------------
New Moon Books
Algodata Infosystems

(2 row(s) affected)
</pre>
<p>
This statement is evaluated in two steps. First, the inner query returns the identification numbers of the publishers that have published business books (1389 and 0736). Second, these values are substituted into the outer query, which finds the names that go with the identification numbers in the <i>publishers</i> table. This step looks like this:</p>
<pre>SELECT pub_name
FROM publishers
WHERE pub_id in ('1389', '0736')
</pre>
<p>
Another difference in using a join rather than a subquery for this and similar problems is that the join lets you show columns from more than one table in the result. For example, if you want to include the titles of the business books in the result, you'd need to use the join version:</p>
<pre>SELECT pub_name, title
FROM publishers, titles
WHERE publishers.pub_id = titles.pub_id
    AND type = 'business'
</pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=32%><pre>pub_name</pre>
</td>
<td width=68%><pre>title</pre>
</td>
</tr>
<tr valign=top>
<td width=32%><pre>--------------------</pre>
</td>
<td width=68%><pre>-------------------------------------------</pre>
</td>
</tr>
<tr valign=top>
<td width=32%><pre>Algodata Infosystems</pre>
</td>
<td width=68%><pre>The Busy Executive's Database Guide</pre>
</td>
</tr>
<tr valign=top>
<td width=32%><pre>Algodata Infosystems</pre>
</td>
<td width=68%><pre>Cooking with Computers: Surreptitious 
Balance Sheets</pre>
</td>
</tr>
<tr valign=top>
<td width=32%><pre>New Moon Books</pre>
</td>
<td width=68%><pre>You Can Combat Computer Stress!</pre>
</td>
</tr>
<tr valign=top>
<td width=32%><pre>Algodata Infosystems</pre>
</td>
<td width=68%><pre>Straight Talk About Computers</pre>
</td>
</tr>
</table><br>
<pre>(4 row(s) affected)
</pre>
<p>
This query shows that the join produces 4 rows, not just 2 like the preceding subquery.</p>
<p>
Here's another example of a statement that can be formulated with either a subquery or a join. This query finds the names of all second authors who live in California and who receive less than 30 percent of the royalties for a book:</p>
<pre>SELECT au_lname, au_fname
FROM authors
WHERE state = 'CA'
    AND au_id IN
        (SELECT au_id
        FROM titleauthor
        WHERE royaltyper &lt; 30
            AND au_ord = 2)
</pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=52%><pre>au_lname</pre>
</td>
<td width=48%><pre>au_fname</pre>
</td>
</tr>
<tr valign=top>
<td width=52%><pre>----------</pre>
</td>
<td width=48%><pre>--------</pre>
</td>
</tr>
<tr valign=top>
<td width=52%><pre>MacFeather</pre>
</td>
<td width=48%><pre>Stearns</pre>
</td>
</tr>
<tr valign=top>
<td width=52%><pre></pre>
</td>
<td width=48%><pre></pre>
</td>
</tr>
</table><br>
<pre>(1 row(s) affected)
</pre>
<p>
The inner query is evaluated, producing the ID numbers of the three authors who meet the qualification. The outer query is then evaluated. Notice that you can include more than one condition in the WHERE clause of both the inner and the outer query.</p>
<p>
Using a join, the query is expressed like this:</p>
<pre>SELECT au_lname, au_fname
FROM authors, titleauthor
WHERE state = 'CA'
    AND authors.au_id = titleauthor.au_id
    AND royaltyper &lt; 30
    AND au_ord = 2
</pre>
<p>
A join can always be expressed as a subquery. A subquery can often, but not always, be expressed as a join. This is because joins are symmetric¾you can join table A to B in either order and get the same answer. Obviously the same is not true if a subquery is involved.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
