<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CHARINDEX and PATINDEX</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_charindex_and_patindex"></a>CHARINDEX and PATINDEX</h3>
<p>
The CHARINDEX and PATINDEX functions return the starting position of a pattern you specify.</p>
<p>
The CHARINDEX function has the following syntax:</p>
<p>
CHARINDEX<b>('</b><i>pattern</i><b>',</b> <i>expression</i><b>)</b></p>
<p>
The PATINDEX function has the following syntax:</p>
<p>
PATINDEX<b>('</b><i>pattern</i><b>',</b> <i>expression</i><b>)</b></p>
<p>
Both take two parameters, but work slightly differently because PATINDEX can use wildcard characters (CHARINDEX cannot).</p>
<p>
The first parameter is the pattern whose position you want. With PATINDEX, the pattern is a literal string that can contain wildcard characters. With CHARINDEX, the pattern is a literal string (no wildcard characters). The second parameter is a string-valued expression, usually a column name, in which SQL Server searches for the specified pattern.</p>
<p>
For example, to find the position at which the pattern "wonderful" begins in a certain row of the <i>notes</i> column in the <i>titles</i> table:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%><pre>SELECT CHARINDEX('wonderful', notes)</pre>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%><pre>FROM titles</pre>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%><pre>WHERE title_id = 'TC3218'</pre>
</td>
</tr>
<tr valign=top>
<td width=31%><pre></pre>
</td>
<td width=69%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=31%><pre>----------------</pre>
</td>
<td width=69%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=31%><pre>46</pre>
</td>
<td width=69%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=31%><pre></pre>
</td>
<td width=69%><pre></pre>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%><pre>(1 row(s) affected)</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
If you do not restrict the rows to be searched, the query returns all rows in the table and it reports non-zero values for those rows in which the pattern was found and zero for all others.</p>
<p>
To use wildcards to find the position at which the pattern "wonderful" begins in a certain row of the <i>notes</i> column in the <i>titles</i> table:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%><pre>SELECT PATINDEX('%wonderful%', notes)</pre>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%><pre>FROM titles</pre>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%><pre>WHERE title_id = 'TC3218'</pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre></pre>
</td>
<td width=76%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>------------</pre>
</td>
<td width=76%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre>46</pre>
</td>
<td width=76%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=24%><pre></pre>
</td>
<td width=76%><pre></pre>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%><pre>(1 row(s) affected)</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
If you do not restrict the rows to be searched, the query returns all rows in the table and reports non-zero values for those rows in which the pattern was found.</p>
<p>
PATINDEX is useful with <i>text</i> datatypes; it can be used in a WHERE clause in addition to IS NULL, IS NOT NULL, and LIKE (the only other comparisons that are valid on <i>text</i> in a WHERE clause).</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
