<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Lists (IN and NOT IN)</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_lists_.28.in_and_not_in.29"></a>Lists (IN and NOT IN)</h3>
<p>
The IN keyword allows you to select values that match any one of a list of values. For example, without IN, if you want a list of the names and states of all authors who live in California, Indiana, or Maryland, use this query:</p>
<pre>SELECT au_lname, state
FROM authors
WHERE state = 'CA' OR state = 'IN' OR state = 'MD'
</pre>
<p>
However, you get the same results with less typing if you use IN:</p>
<pre>SELECT au_lname, state
FROM authors
WHERE state IN ('CA', 'IN', 'MD')
</pre>
<p>
You get the same results from either query:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=56%><pre>au_lname</pre>
</td>
<td width=44%><pre>state</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>--------</pre>
</td>
<td width=44%><pre>-----</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>White</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Green</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Carson</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>O'Leary</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Straight</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Bennet</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Dull</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Gringlesby</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Locksley</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Yokomoto</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>DeFrance</pre>
</td>
<td width=44%><pre>IN</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Stringer</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>MacFeather</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Karsen</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Panteley</pre>
</td>
<td width=44%><pre>MD</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>Hunter</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre>McBadden</pre>
</td>
<td width=44%><pre>CA</pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre></pre>
</td>
<td width=44%><pre></pre>
</td>
</tr>
</table><br>
<pre>(17 row(s) affected)
</pre>
<p>
The items following the IN keyword must be separated by commas and be enclosed in parentheses.</p>
<p>
Perhaps the most important use for the IN keyword is in nested queries, also referred to as <i>subqueries</i>. (For a full discussion of subqueries, see <a href="tfund04_98dv.htm">Using Subqueries</a>) The following example gives some idea of what you can do with nested queries and the IN keyword.</p>
<p>
Suppose that you want to know the names of authors who receive less than 50 percent of the total royalties on the books they coauthor. The <i>authors</i> table gives author names and the <i>titleauthor</i> table gives royalty information. By putting the two together using IN, you can extract the information you need without listing the two tables in the same FROM clause.</p>
<p>
The following query finds all <i>au_id</i>s in the <i>titleauthor</i> table for authors who make less than 50 percent of the royalty on any one book, and then selects from the <i>authors</i> table all author names with <i>au_id</i>s that match the results from the <i>titleauthor</i> query. The results show that several authors fall into the less than 50 percent category:</p>
<pre>SELECT au_lname, au_fname
FROM authors
WHERE au_id IN
    (SELECT au_id
    FROM titleauthor
    WHERE royaltyper &lt; 50)

</pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=40%><pre>au_lname</pre>
</td>
<td width=60%><pre>au_fname</pre>
</td>
</tr>
<tr valign=top>
<td width=40%><pre>-----------</pre>
</td>
<td width=60%><pre>--------</pre>
</td>
</tr>
<tr valign=top>
<td width=40%><pre>Green</pre>
</td>
<td width=60%><pre>Marjorie</pre>
</td>
</tr>
<tr valign=top>
<td width=40%><pre>O'Leary</pre>
</td>
<td width=60%><pre>Michael</pre>
</td>
</tr>
<tr valign=top>
<td width=40%><pre>Gringlesby</pre>
</td>
<td width=60%><pre>Burt</pre>
</td>
</tr>
<tr valign=top>
<td width=40%><pre>Yokomoto</pre>
</td>
<td width=60%><pre>Akiko</pre>
</td>
</tr>
<tr valign=top>
<td width=40%><pre>MacFeather</pre>
</td>
<td width=60%><pre>Stearns</pre>
</td>
</tr>
<tr valign=top>
<td width=40%><pre>Ringer</pre>
</td>
<td width=60%><pre>Anne</pre>
</td>
</tr>
<tr valign=top>
<td width=40%><pre></pre>
</td>
<td width=60%><pre></pre>
</td>
</tr>
</table><br>
<pre>(6 row(s) affected)
</pre>
<p>
NOT IN finds the authors who do not match the items in the values list. The following query finds the names of authors who do not make less than 50 percent of the royalties on at least one book:</p>
<pre>SELECT au_lname, au_fname
FROM authors
WHERE au_id NOT IN
    (SELECT au_id
    FROM titleauthor
    WHERE royaltyper &lt; 50)
</pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=39%><pre>au_lname</pre>
</td>
<td width=61%><pre>au_fname</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>-------------</pre>
</td>
<td width=61%><pre>--------</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>White</pre>
</td>
<td width=61%><pre>Johnson</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Carson</pre>
</td>
<td width=61%><pre>Cheryl</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Straight</pre>
</td>
<td width=61%><pre>Dean</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Smith</pre>
</td>
<td width=61%><pre>Meander</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Bennet</pre>
</td>
<td width=61%><pre>Abraham</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Dull</pre>
</td>
<td width=61%><pre>Ann</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Locksley</pre>
</td>
<td width=61%><pre>Charlene</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Greene</pre>
</td>
<td width=61%><pre>Morningstar</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Blotchet-Halls</pre>
</td>
<td width=61%><pre>Reginald</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>del Castillo</pre>
</td>
<td width=61%><pre>Innes</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>DeFrance</pre>
</td>
<td width=61%><pre>Michel</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Stringer</pre>
</td>
<td width=61%><pre>Dirk</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Karsen</pre>
</td>
<td width=61%><pre>Livia</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Panteley</pre>
</td>
<td width=61%><pre>Sylvia</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Hunter</pre>
</td>
<td width=61%><pre>Sheryl</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>McBadden</pre>
</td>
<td width=61%><pre>Heather</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre>Ringer</pre>
</td>
<td width=61%><pre>Albert</pre>
</td>
</tr>
<tr valign=top>
<td width=39%><pre></pre>
</td>
<td width=61%><pre></pre>
</td>
</tr>
</table><br>
<pre>(17 row(s) affected)
</pre>
<p>
When you select values using the IN keyword, be sure to put single quotation marks around all <i>char</i>, <i>varchar</i>, <i>text</i>, <i>datetime</i>, and <i>smalldatetime</i> data.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
