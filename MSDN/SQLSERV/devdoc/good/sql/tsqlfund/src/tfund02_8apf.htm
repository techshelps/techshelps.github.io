<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Planning Tables</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_planning_tables"></a>Planning Tables</h1>
<p>
The most efficient way to create a table is to define everything you need in the table at once, including its data restrictions and additional components. However, you could also create a basic table, add some data to it, and then work with it for a while. This approach gives you a chance to see what types of transactions are most common and what types of data are frequently entered ¾ before you commit to a firm design by adding constraints, indexes, defaults, rules, and other objects. </p>
<p>
It is a good idea to outline your plans on paper before actually creating a table and its objects.</p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To plan a table</h5>
<ol>
<li>
Decide what type of data the table will contain.</li>
<li>
Decide what columns you need in the table and the datatype (and length, if required) for each column.</li>
<li>
Decide which columns should accept null values.</li>
<li>
Decide whether to use constraints and/or defaults and rules and, if so, where.</li>
<li>
Decide what types of indexes you need, where you need the indexes, and which columns should be the primary and foreign keys.</li>
</ol>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
