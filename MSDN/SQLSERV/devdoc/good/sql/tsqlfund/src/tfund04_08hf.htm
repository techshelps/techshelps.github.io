<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Guidelines for Building UNION Statements</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_guidelines_for_building_union_statements"></a>Guidelines for Building UNION Statements</h3>
<p>
Follow these guidelines when building UNION statements:
<ul>
<li>
All select lists in the UNION statement must have the same number of expressions (column names, arithmetic expressions, aggregate functions, and so on). The following statement is not valid because the first select list is longer than the second:<pre>SELECT stor_id, date, title_id FROM sales
UNION 
SELECT stor_id, title_id FROM sales_east</pre>
<p>
<b>Note</b>  Because <i>pubs</i> does not actually contain a <i>stores_east</i> table, you cannot run the examples containing <i>stores_east</i>.
</li>
<li>
Corresponding columns in all tables, or any subset of columns used in the individual queries, must be of the same datatype, an implicit data conversion must be possible between the two datatypes, or an explicit conversion must be supplied. For example, UNION is not possible between a column of <i>char</i> datatype and one of <i>int</i> datatype unless an explicit conversion is supplied. However, a UNION is possible between a column of <i>money</i> datatype and one of <i>int</i> datatype. For details about comparing datatypes in a UNION statement, see <a href="../../tsqlref/src/tsql29_3hyq.htm">UNION Operator</a> in the <i>Microsoft SQL</i> <i>Server Transact-SQL Reference</i>.</li>
<li>
Corresponding columns in the individual queries of a UNION statement must occur in the same order, because UNION compares the columns one to one in the order given in the individual queries. For example, suppose that you have the following tables: </li>
</ul>
<table cellspacing=4 cols=5>
<tr valign=top>
<td width=11%><pre>table3</pre>
</td>
<td width=17%><pre></pre>
</td>
<td width=36%><pre></pre>
</td>
<td width=18%><pre>table4</pre>
</td>
<td width=18%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=11%><pre>a</pre>
</td>
<td width=17%><pre>b</pre>
</td>
<td width=36%><pre>c</pre>
</td>
<td width=18%><pre>a</pre>
</td>
<td width=18%><pre>b</pre>
</td>
</tr>
<tr valign=top>
<td width=11%><pre>int</pre>
</td>
<td width=17%><pre>char(4)</pre>
</td>
<td width=36%><pre>char(4)</pre>
</td>
<td width=18%><pre>char(4)</pre>
</td>
<td width=18%><pre>float</pre>
</td>
</tr>
<tr valign=top>
<td width=11%><pre>---</pre>
</td>
<td width=17%><pre>-------</pre>
</td>
<td width=36%><pre>-------</pre>
</td>
<td width=18%><pre>-------</pre>
</td>
<td width=18%><pre>-------</pre>
</td>
</tr>
<tr valign=top>
<td width=11%><pre>1</pre>
</td>
<td width=17%><pre>abc</pre>
</td>
<td width=36%><pre>jkl</pre>
</td>
<td width=18%><pre>jkl</pre>
</td>
<td width=18%><pre>1.000</pre>
</td>
</tr>
<tr valign=top>
<td width=11%><pre>2</pre>
</td>
<td width=17%><pre>def</pre>
</td>
<td width=36%><pre>mno</pre>
</td>
<td width=18%><pre>mno</pre>
</td>
<td width=18%><pre>5.000</pre>
</td>
</tr>
<tr valign=top>
<td width=11%><pre>3</pre>
</td>
<td width=17%><pre>ghi</pre>
</td>
<td width=36%><pre>pqr</pre>
</td>
<td width=18%><pre></pre>
</td>
<td width=18%><pre></pre>
</td>
</tr>
</table><br>
<pre></pre>
<p class=indent1>
The following query:</p>
<pre>SELECT a, b FROM table3
UNION 
SELECT b, a FROM table4</pre>
<p class=indent1>
produces this results set:</p>
<pre>a          b
--------   -----
1.000000   abc
2.000000   def
3.000000   ghi
1.000000   jkl
5.000000   mno</pre>
<ul>
<li>
When different datatypes are combined in a UNION statement, they are converted to the datatype with the most precision. In the preceding example, the <i>int</i> values are converted to <i>float</i>.<p>
The following query produces an error message because the datatypes of corresponding columns are not compatible:
<pre>SELECT b, c FROM table3
UNION 
SELECT a, b FROM table4</pre>
</li>
<li>
The column names in the table resulting from UNION are taken from the first individual query in the UNION statement. Therefore, if you want to define a new column heading for the results set, you must do it in the first query. If you want to refer to a column in the results set by a new name (for example, in an ORDER BY statement), it must be referred to that way in the first SELECT statement, as shown in this example:<pre>SELECT Cities = city FROM stores
UNION 
SELECT city FROM stores_east
ORDER BY Cities</pre>
</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
