<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Stored Procedures</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="using_stored_procedures"></a>Using Stored Procedures</h1>
<p>
Stored procedures greatly enhance the power, efficiency, and flexibility of SQL Server, and dramatically improve the performance of SQL statements and batches. </p>
<p>
Stored procedures can:
<ul>
<li>
Take parameters.</li>
<li>
Call other procedures.</li>
<li>
Return a status value to a calling procedure or batch to indicate success or failure (and the reason for failure).</li>
<li>
Return values of parameters to a calling procedure or batch.</li>
</ul>
<p>
Stored procedures on other SQL Servers to which the client process is not directly connected to can be executed if the remote server has been set up to allow remote logins. You can write triggers on your local SQL Server that execute procedures on a remote server whenever certain events (inserts, updates, or deletes) occur locally. (For details about triggers, see <a href="tfund06_9512.htm">Using Triggers to Define Business Processes</a>.)</p>
<p>
Stored procedures differ from ordinary SQL statements and from batches of SQL statements in that they are pre-parsed and pre-normalized. The first time you run a procedure, the SQL Server query processor analyzes it and prepares internal, normalized structure for the procedure that is stored in a system table. The first time the procedure is run when the SQL Server is started, the procedure is then brought into memory and fully compiled (but it does not need to be re-parsed or "sequenced" since this was done when the procedure was created). The fully compiled plan then stays in memory (unless other memory needs force it out so that the next request for execution (whether by the same or a different client) can be processed without any plan compilation overhead.</p>
<p>
Stored procedures can serve as security mechanisms, since a user can be granted permission to execute a stored procedure even if he or she does not have permissions on tables or views referenced in it. (For details, see the <i>Microsoft SQL</i> <i>Server Administrator's Companion.</i>)</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
