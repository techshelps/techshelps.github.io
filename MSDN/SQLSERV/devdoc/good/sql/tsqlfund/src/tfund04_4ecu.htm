<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Conversion Function</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_conversion_function"></a>Conversion Function</h2>
<p>
The conversion function, CONVERT, is used to convert expressions of one datatype to another datatype whenever these conversions are not performed automatically by SQL Server. It is also used to obtain a variety of special date formats. The conversion function can be used in the select list, in the WHERE clause, and anywhere an expression is allowed.</p>
<p>
The CONVERT function has the following syntax:</p>
<p>
CONVERT<b>(</b><i>datatype</i> [<b>(</b><i>length</i><b>)</b>]<b>,</b> <i>expression</i> [<b>,</b> <i>style</i>]<b>)</b></p>
<p>
Here's an example that uses CONVERT in the select list to convert the <i>title</i> column to a <i>char(50)</i> column so the results are more readable:</p>
<pre>SELECT CONVERT(char(50), title), ytd_sales
FROM titles
WHERE type = 'trad_cook'
</pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=80%><pre>title</pre>
</td>
<td width=20%><pre>ytd_sales</pre>
</td>
</tr>
<tr valign=top>
<td width=80%><pre>--------------------------------------------------</pre>
</td>
<td width=20%><pre>---------</pre>
</td>
</tr>
<tr valign=top>
<td width=80%><pre>Onions, Leeks, and Garlic: Cooking Secrets of the </pre>
</td>
<td width=20%><pre>375</pre>
</td>
</tr>
<tr valign=top>
<td width=80%><pre>Fifty Years in Buckingham Palace Kitchens         </pre>
</td>
<td width=20%><pre>15096</pre>
</td>
</tr>
<tr valign=top>
<td width=80%><pre>Sushi, Anyone?                                    </pre>
</td>
<td width=20%><pre>4095</pre>
</td>
</tr>
<tr valign=top>
<td width=80%><pre></pre>
</td>
<td width=20%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=80%><pre>(3 row(s) affected)</pre>
</td>
<td width=20%><pre></pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
In this example, the <i>ytd_sales</i> column, an <i>int</i> column, is converted to a <i>char</i>(20) column so that it can be used with the LIKE clause:</p>
<pre>SELECT title, ytd_sales
FROM titles
WHERE convert(char(20), ytd_sales) LIKE '15%'
    AND type = 'trad_cook'
</pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=59%><pre>title</pre>
</td>
<td width=41%><pre>ytd_sales</pre>
</td>
</tr>
<tr valign=top>
<td width=59%><pre>-----------------------------------</pre>
</td>
<td width=41%><pre>---------</pre>
</td>
</tr>
<tr valign=top>
<td width=59%><pre>Fifty Years in Buckingham Palace 
Kitchens</pre>
</td>
<td width=41%><pre>15096</pre>
</td>
</tr>
</table><br>
<pre>(1 row(s) affected)
</pre>
<p>
SQL Server automatically handles certain datatype conversions. For example, if you compare a <i>char</i> expression and a <i>datetime</i> expression, or a <i>smallint</i> expression and an <i>int</i> expression, or <i>char</i> expressions of different lengths, SQL Server converts them automatically. You need not use the CONVERT function for these conversions. However, it is never wrong to use the CONVERT function, even when you are comparing two expressions of exactly the same datatype.</p>
<p>
If you attempt a conversion that is not possible (for example, if you try to convert a <i>char</i> expression that includes letters to <i>int</i>), SQL Server displays an error message.</p>
<p>
For a complete list of possibilities for converting datatypes, see <a href="../../tsqlref/src/tsql09_9dyr.htm">Functions</a> in the <i>Microsoft SQL</i> <i>Server Transact-SQL Reference</i>.</p>
<p>
If you do not specify a length when converting for the datatype to which the expression is to be converted, SQL Server automatically supplies a length of 30.</p>
<p>
When converting to <i>datetime</i> or <i>smalldatetime</i>, SQL Server rejects all values it cannot recognize as dates (including dates earlier than January 1, 1753).</p>
<p>
You can convert <i>datetime</i> values to <i>smalldatetime</i> when the date is in the proper range (January 1, 1900, to June 6, 2079). The time value is rounded up to the nearest minute.</p>
<p>
Converting to <i>bit</i> changes any non-zero value to 1.</p>
<p>
When converting to <i>money</i> or <i>smallmoney</i>, integers are assumed to be monetary units. For example, the integer value of 4 is converted to the money equivalent of 4 dollars (for <b>us_english</b>, the default language). Numbers to the right of the decimal in floating-point values are rounded to four decimal places for <i>money</i> values.</p>
<p>
Expressions of datatypes <i>char</i> or <i>varchar</i> that are being converted to an integer datatype must consist only of digits and an optional plus or minus sign ( or -). Leading blanks are ignored. Expressions of datatypes <i>char</i> or <i>varchar</i> that are being converted to <i>money</i> can also include an optional decimal point and dollar sign ($).</p>
<p>
Expressions of datatypes <i>char</i> or <i>varchar</i> that are being converted to <i>float</i> or <i>real</i> can also include optional exponential notation (e or E, followed by an optional  or - sign, and then a number).</p>
<p>
When expressions are converted to a datatype of a different size, values too long for the new datatype are truncated, and SQL Server displays an asterisk (*). Here's an example:</p>
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><pre>SELECT title, CONVERT(char(2), ytd_sales)</pre>
</td>
</tr>
<tr valign=top>
<td width=100%><pre>FROM titles</pre>
</td>
</tr>
<tr valign=top>
<td width=100%><pre>WHERE type = 'trad_cook'</pre>
</td>
</tr>
<tr valign=top>
<td width=100%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=100%><pre>title</pre>
</td>
</tr>
<tr valign=top>
<td width=100%><pre>---------------------------------------------------------------</pre>
</td>
</tr>
<tr valign=top>
<td width=100%><pre>Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean</pre>
</td>
</tr>
<tr valign=top>
<td width=100%><pre>Fifty Years in Buckingham Palace Kitchens</pre>
</td>
</tr>
<tr valign=top>
<td width=100%><pre>Sushi, Anyone?</pre>
</td>
</tr>
<tr valign=top>
<td width=100%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=100%><pre>(3 row(s) affected)</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
When converting between datatypes with a different number of decimal points, the value is truncated. For example, the result of CONVERT(<i>money</i>, 10.3496) is $10.35.</p>
<p>
You can explicitly convert <i>text</i> columns to <i>char</i> or <i>varchar </i>columns, and <i>image</i> columns to <i>binary</i> or <i>varbinary</i> columns. Because these datatypes are limited to 255 characters, you are limited to the maximum length of the <i>character</i> and <i>binary</i> datatypes, 255 characters. If you do not specify the length, the converted value has a default length of 30 characters. Implicit conversion is not supported.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
