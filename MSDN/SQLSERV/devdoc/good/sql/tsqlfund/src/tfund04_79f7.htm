<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>System Functions</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_system_functions"></a>System Functions</h2>
<p>
A number of built-in system functions help you query the system tables. </p>
<p>
System functions have the following syntax:</p>
<p>
SELECT <i>function_name</i><b>(</b><i>parameters</i><b>)</b></p>
<p>
System functions can be used in the select list, in the WHERE clause, and anywhere else an expression is allowed.</p>
<p>
For example, there are five pairs of system functions that, for databases, hosts, objects, logins, and users, return a name when given an ID and return an ID when given a name:</p>
<p>
DB_ID<b>('</b><i>database_name</i><b>')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>DB_NAME<b>(</b><i>database_id</i><b>) <br>
</b>HOST_ID<b>(</b> <b>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>&nbsp;&nbsp;&nbsp;&nbsp;HOST_NAME<b>(</b> <b>) <br>
</b>OBJECT_ID<b>('</b><i>object_name</i><b>')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>OBJECT_NAME<b>(</b><i>object_id</i><b>) <br>
</b>SUSER_ID<b>('</b><i>server_username</i><b>')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>SUSER_NAME<b>(</b><i>server_user_id</i><b>) <br>
</b>USER_ID<b>('</b><i>username</i><b>')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>USER_NAME<b>(</b><i>user_id</i><b>)</b></p>
<p>
To use these functions, combine them with the SELECT statement. These functions can also be included in the WHERE clause of a view to make the view dynamically conform to the user or environment at runtime. Similarly, they can be used in CHECK constraints.</p>
<p>
These functions eliminate the need to join two tables when you need to convert a name to an ID or an ID to a name.</p>
<p>
The following functions are similar, but they do not occur in complementary pairs and they take more than one input parameter:</p>
<p>
COL_NAME<b>(</b><i>object_id</i><b>,</b> <i>column_id</i><b>)</b> <br>
COL_LENGTH<b>('</b><i>object_name</i><b>',</b> <b>'</b><i>column_name</i><b>')</b> <br>
INDEX_COL<b>('</b><i>object_name</i><b>',</b> <i>index_id</i><b>,</b> <i>key_id</i><b>)</b></p>
<p>
The COL_NAME system function returns a column name. The COL_LENGTH system function returns a column length. The INDEX_COL system function returns an index column name.</p>
<p>
The following example shows how easy it is to write a query against the system tables when you use the system functions. For example, consider the two system tables <i>sysobjects</i> and <i>sysdepends</i>. If you know the object ID of a particular object, you can list the object IDs of all objects that depend on that object:</p>
<pre>select id
from sysdepends
where depid = object_id
</pre>
<p>
Here are some examples:</p>
<p>
To find the user identification number of your coworker who logs in as <i>harold</i>:</p>
<pre>select user_id('harold')
</pre>
<p>
If <i>harold</i>'s user ID number is 13, the result looks like this:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=28%><pre>------------</pre>
</td>
<td width=72%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre>13</pre>
</td>
<td width=72%><pre></pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre></pre>
</td>
<td width=72%><pre></pre>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%><pre>(1 row(s) affected)</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
Generally, as in this example, the name of the function tells you what type of information it returns.</p>
<p>
The USER_NAME system function takes an ID number as its parameter and returns the user's name:</p>
<pre>select user_name(13)

---------
harold

(1 row(s) affected)
</pre>
<p>
To find the name of the current user (that is, your name), omit the parameter:</p>
<pre>select user_name()

------
dbo

(1 row(s) affected)
</pre>
<p>
Built-in functions are always used with parentheses, even when there is no parameter. An exception to this is niladic functions used with DEFAULT constraints. They take no parameters. When the parameter to a system function is optional, the current database, host computer, server user, or database user is assumed.</p>
<p>
For a complete list of system functions, see <a href="../../tsqlref/src/tsql09_9dyr.htm">Functions</a> in the <i>Microsoft SQL</i> <i>Server Transact-SQL Reference</i>. The following section gives a few system function examples.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
