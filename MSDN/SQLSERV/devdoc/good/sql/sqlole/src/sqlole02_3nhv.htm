<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declaring and Assigning Object Variables</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="declaring_and_assigning_object_variables"></a>Declaring and Assigning Object Variables</h1>
<p>
To store a SQL-DMO object returned from another object, you must declare an object variable of the appropriate SQL-DMO object type.</p>
<h5>Visual Basic</h5>
<p>
Declare an object variable of a specific SQL-DMO object type (if your version of Visual Basic supports it). This uses early, vtable-binding or dispID-binding, depending on your version of Visual Basic, and requires that the SQL-DMO type library be included in your Visual Basic project. For example:</p>
<pre>Dim oDatabase As SQLOLE.Database</pre>
<p>
Or you can declare an object variable of the generic <b>Object</b> type. This uses late-binding, and does not require the SQL-DMO type library. For example:</p>
<pre>Dim oDatabase As Object</pre>
<p>
Then assign a returned SQL-DMO object (from a collection, an object property, or a method return value) to the declared object variable. For example:</p>
<pre>Set oDatabase = oSQLServer.Databases("pubs")</pre>
<p>
Note that you can assign a returned SQL-DMO object to an object variable declared using the <b>New</b> keyword (if your version of Visual Basic supports it). Visual Basic will automatically release an object created by the <b>New</b> keyword before assigning a new object to the variable. However, if you are declaring an object variable just to hold a returned SQL-DMO object, do not use the <b>New</b> keyword. The overhead of creating and releasing the object is unnecessary.</p>
<h5>C++</h5>
<p>
Declare an object variable of the appropriate SQL-DMO "pointer to an object" type. All SQL-DMO object types begin with LPSQLOLE.</p>
<p>
For example, to declare a new Database object variable and assign the <i>pubs</i> database object (part of the SQLServer.Databases collection) to the new object variable:</p>
<pre>LPSQLOLEDATABASE pDatabase = NULL;
hr = pSQLServer-&gt;GetDatabaseByName (TEXT("pubs"),
    (LPVOID*)&amp;pDatabase);</pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
