<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Getting a Specific Object from a Collection</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="getting_a_specific_object_from_a_collection"></a>Getting a Specific Object from a Collection</h2>
<p>
You must get a specific object from a collection before you can use it.</p>
<h5>Visual Basic</h5>
<p>
Because the <b>Item</b> method is the default method of a collection object, you can get a specific object in a collection by specifying one of the following:
<ul>
<li>
Object name</li>
<li>
Ordinal value (1-based) within the collection</li>
</ul>
<p>
in parentheses after the collection object. You can also use the <b>Item</b> method explicitly. These use the following syntax:</p>
<p>
<i>Parent</i><b>.</b><i>Objects</i><b>( </b>{<i>strName</i> | <i>lOrdinal</i>}<b> )</b></p>
<p>
Or</p>
<p>
<i>Parent</i><b>.</b><i>Objects</i><b>.Item( </b>{<i>strName</i> | <i>lOrdinal</i>}<b> )</b></p>
<p>
For example, to refer to the <i>pubs</i> database of the SQLServer.Databases collection:</p>
<pre>oSQLServer.Databases("pubs")</pre>
<p>
To refer to the first database of the SQLServer.Databases collection:</p>
<pre>oSQLServer.Databases(1)</pre>
<p>
A parent object has a default collection. You can use the <b>!</b> default collection specifier instead of the default collection name and item name specifier. Use the following syntax:</p>
<p>
<i>Parent</i><b>!</b><i>name</i></p>
<p>
The following table lists the default collections for parent SQL-DMO objects.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%></th>
<th align=left width=57%></th>
</tr>
<tr valign=top>
<th align=left width=43%>Parent Object</th>
<th align=left width=57%>Default Collection</th>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=43%></td>
<td width=57%></td>
</tr>
<tr valign=top>
<td width=43%>Configuration</td>
<td width=57%>ConfigValues</td>
</tr>
<tr valign=top>
<td width=43%>Executive</td>
<td width=57%>Tasks</td>
</tr>
<tr valign=top>
<td width=43%>SQLServer</td>
<td width=57%>Databases</td>
</tr>
<tr valign=top>
<td width=43%>Database</td>
<td width=57%>Tables</td>
</tr>
<tr valign=top>
<td width=43%>Table</td>
<td width=57%>Columns</td>
</tr>
</table><br>
<p class=indent1>
</p>
<p>
For example, to refer to the <i>pubs</i> database of the default Databases collection of the SQLServer object:</p>
<pre>oSQLServer!pubs</pre>
<p>
Some SQL-DMO collections support the <b>ItemByID</b> method. This allows you to get a specific object using that object's unique SQL Server identifier. Use the following syntax:</p>
<p>
<i>Parent</i><b>.</b><i>Objects</i><b>.ItemByID( </b><i>lID</i><b> )</b></p>
<p>
For example, to refer to the database of the SQLServer.Databases collection that has a SQL Server database ID of 1:</p>
<pre>oSQLServer.Databases.ItemByID(1)</pre>
<h5>C++</h5>
<p>
When you have a pointer to a collection object, you can get a pointer to a specific object in that collection by using the <b>GetItemByOrd</b> or <b>GetItemByName</b> function, or (for collections that support it) by using the <b>GetItemByID</b> function.</p>
<p>
To use <b>GetItemByOrd</b>, pass an ordinal value (0-based) and the address of an object variable (use the address of <b>&amp;</b> operator) of the appropriate type (LPSQLOLE<i>OBJECT</i>) to the function. It will write the specific object pointer to your object variable. Use the following syntax:</p>
<p>
<i>pObjects</i><b>-&gt;GetItemByOrd ( </b><i>lOrdinal</i><b>, &amp;</b><i>pObject</i> <b>);</b></p>
<p>
To use <b>GetItemByName</b>, pass the name of the specific object and the address of an object variable of the appropriate type (LPSQLOLE<i>OBJECT</i>) to the function. It will write the specific object pointer to your object variable. Use the following syntax:</p>
<p>
<i>pObjects</i><b>-&gt;GetItemByName ( </b><i>strName</i><b>, &amp;</b><i>pObject</i> <b>);</b></p>
<p>
Some SQL-DMO objects support the <b>GetItemByID</b> function. This allows you to get a specific object using that object's unique SQL Server identifier. To use <b>GetItemByID</b>, pass the unique object ID and the address of an object variable of the appropriate type (LPSQLOLE<i>OBJECT</i>) to the function. It will write the specific object pointer to your object variable. Use the following syntax:</p>
<p>
<i>pObjects</i><b>-&gt;GetItemByID ( </b><i>lID</i><b>, &amp;</b><i>pObject</i> <b>);</b></p>
<p>
For example, to get the <i>pubs</i> database from the SQLServer.Databases collection:</p>
<pre>LPSQLOLEDATABASES pDatabases;
pSQLServer-&gt;GetDatabases (&amp;pDatabases);
LPSQLOLEDATABASE pDatabase;
pDatabases-&gt;GetItemByName (TEXT("pubs"), &amp;pDatabase);</pre>
<p>
The SQL-DMO custom interfaces also include "shortcut" functions that allow you to get a specific object in a collection directly from the parent object. These single functions can be used instead of getting the collection object first, then getting the specific object. Use the following syntax:</p>
<p>
<i>pParent</i><b>-&gt;Get</b><i>Object</i><b>ByName ( </b><i>strName</i><b>, &amp;</b><i>pObject</i> <b>);</b></p>
<p>
<i>pParent</i><b>-&gt;Get</b><i>Object</i><b>ByOrd ( </b><i>lOrdinal</i><b>, &amp;</b><i>pObject</i> <b>);</b></p>
<p>
<i>pParent</i><b>-&gt;Get</b><i>Object</i><b>Count ( &amp;</b><i>lCount</i> <b>);</b></p>
<p>
For example, to get the <i>pubs</i> database from the SQLServer.Databases collection:</p>
<pre>LPSQLOLEDATABASE pDatabase;
pSQLServer-&gt;GetDatabaseByName (TEXT("pubs"), &amp;pDatabase);</pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
