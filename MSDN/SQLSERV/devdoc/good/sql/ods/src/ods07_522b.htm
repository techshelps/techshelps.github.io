<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Sample Extended Stored Procedures</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_using_the_sample_extended_stored_procedures"></a>Using the Sample Extended Stored Procedures</h1>
<p>
To use the sample extended stored procedures, a SQL Server system administrator must make the procedures in XP.DLL available as SQL Server extended stored procedures, either by using the methods described in <a href="ods07_6a42.htm">Adding Extended Stored Procedures to SQL Server</a>or by running the XP.DLL installation script, INSTXP.SQL, that is provided with SQL Server. The INSTXP.SQL script registers each of the XP.DLL procedures as SQL Server extended stored procedures and gives all users EXECUTE permission to the procedures. </p>
<p>
To run the XP.DLL extended stored procedures, you can log in to SQL Server and issue the EXECUTE statement, specifying the name of the extended stored procedure to use and any valid arguments defined by that procedure (described in the following sections).</p>
<p>
Like standard stored procedures, extended stored procedures support return status values and support the use of input and output parameters. Parameters are used in some of the following examples. For information about passing parameters in a stored procedure, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
