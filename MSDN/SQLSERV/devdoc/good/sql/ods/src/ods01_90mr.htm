<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Client Connections</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_client_connections"></a>Client Connections</h1>
<p>
With Open Data Services, your server application can maintain active connections with many client applications at one time, in a manner that is transparent to the client and is largely transparent to the server application. Open Data Services supports many types of client applications running on a variety of operating systems and includes support for simultaneous client connections over several types of local area network protocols.</p>
<p>
When a client application requests data from an Open Data Services server application, Open Data Services passes the request to the application-defined <i>event handler</i> for that request type. After your event handler processes the request, Open Data Services returns the reply to the client application over the network. To the client, the reply looks the same as a reply from SQL Server.</p>
<p>
Just as DB-Library, the SQL Server client-based API, allows you to design a variety of client applications that share a common database server, the Open Data Services server-based API supplies the foundation for a variety of server applications to share a common client interface. Any client application that can connect to a SQL Server database server can also connect to an Open Data Services server application.</p>
<p>
A comparison with SQL Server helps to explain how Open Data Services operates. SQL Server can be described as having two logical components: the <i>client manager </i>and the <i>data manager</i>. The client manager coordinates requests from clients on the network. It handles such tasks as establishing a network session for each client connection, formatting data for transmission over the network, and managing multiple client threads. The data manager handles database requests from clients. It handles such tasks as parsing SQL requests, optimizing data access, establishing locks to control concurrency, and accessing data on the disk drives.</p>
<p>
Think of the Open Data Services Library as a complete client manager, with "hooks" that allow you to define your own data management routines that you implement as a set of <i>event handlers</i>. The ODS Library handles all network communication with database clients; you determine what data to return in response to individual client requests. The ODS Library and the application-defined event handlers make up the primary components of an Open Data Services server application that can respond to multiple client connections, as shown in the following illustration.</p>
<p class=indent1>
<img src="images/odsug01.gif" border=0></p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
