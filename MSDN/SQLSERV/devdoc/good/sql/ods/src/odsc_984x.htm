<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Appendix C   Datatypes</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_datatypes_odsc_1"></a>Datatypes</h1>
<p>
This appendix lists the Open Data Services datatypes. To use these datatypes, include the SRV.H header file in your program. </p>
<p>
With Open Data Services, you can describe and return data of <i>text</i> and <i>image</i> datatypes. However, because Open Data Services does not support pointers, it can not support DB-Library functions that require pointers (for example, <b>dbmoretext</b>, <b>dbwritetext</b>, and <b>dbtxtptr</b>). DB-Library clients can bind and receive data of these types as long as they receive them using the non-text DB-Library functions.</p>
<p>
SQL Server can send the following datatypes to an Open Data Services server application as part of a remote stored procedure call:
<ul>
<li>
srvdatetimn</li>
<li>
srvfltn</li>
<li>
srvintn</li>
<li>
srvmoneyn</li>
<li>
srvnull</li>
<li>
srvvarbinary</li>
<li>
srvvarchar</li>
<li>
srvdecimal</li>
<li>
srvnumeric</li>
</ul>
<p>
A hard-coded NULL passed to a remote stored procedure parameter or an extended stored procedure parameter is received by an Open Data Services application with the datatype SRVNULL. In the following example, the second parameter of the remote stored procedure <b>p1</b> is received as a parameter of type SRVNULL to the Open Data Services <b>rmt_srv</b> application:</p>
<pre>exec rmt_srv...p1 'arg1',null,'arg3'</pre>
<p>
A NULL value stored in a local variable and passed to a remote stored procedure parameter or an extended stored procedure parameter is received by an Open Data Services application with the datatype of the local variable. In the following example, the second parameter of the remote stored procedure <b>p1</b> is received as a parameter of type SRVINTN by the Open Data Services <b>rmt_srv</b> application:</p>
<pre>declare @v1 int
select @v1 = NULL
exec rmt_srv...p1 'arg1',@v1,'arg3'</pre>
<p>
For a detailed description of SQL Server datatypes, see the <i>Microsoft SQL Server Transact-SQL Reference</i>; for a detailed description of DB-Library datatypes, see the <i>Microsoft SQL Server Programming DB-Library for C</i>.</p>
<p>
These are the Open Data Services datatypes:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=30%></th>
<th align=left width=70%></th>
</tr>
<tr valign=top>
<th align=left width=30%></th>
<th align=left width=70%></th>
</tr>
<tr valign=top>
<th align=left width=30%></th>
<th align=left width=70%></th>
</tr>
<tr valign=top>
<th align=left width=30%>Datatype</th>
<th align=left width=70%>Description</th>
</tr>
<tr valign=top>
<td width=30%></td>
<td width=70%></td>
</tr>
<tr valign=top>
<td width=30%>SRVCHAR</td>
<td width=70%><i>Character</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVVARCHAR</td>
<td width=70%>Variable-length <i>character</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVBINARY</td>
<td width=70%><i>Binary</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVVARBINARY</td>
<td width=70%>Variable-length <i>binary</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVINT1</td>
<td width=70%>1-byte <i>tinyint</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVINT2</td>
<td width=70%>2-byte <i>smallint</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVINT4</td>
<td width=70%>4-byte <i>int</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVINTN</td>
<td width=70%><i>Tinyint</i>, <i>smallint</i>, or <i>int</i> datatype, null values allowed</td>
</tr>
<tr valign=top>
<td width=30%>SRVBIT</td>
<td width=70%><i>Bit</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVDECIMAL</td>
<td width=70%><i>Decimal</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVDECIMALN</td>
<td width=70%><i>Decimal</i> datatype, null values allowed</td>
</tr>
<tr valign=top>
<td width=30%>SRVNUMERIC</td>
<td width=70%><i>numeric</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVNUMERICN</td>
<td width=70%><i>numeric</i> datatype, null values allowed</td>
</tr>
<tr valign=top>
<td width=30%>SRVMONEY4</td>
<td width=70%>4-byte <i>smallmoney</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVMONEY</td>
<td width=70%>8-byte <i> money</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVMONEYN</td>
<td width=70%><i>Smallmoney</i> or <i>money</i> datatype, null values allowed</td>
</tr>
<tr valign=top>
<td width=30%>SRVFLT4</td>
<td width=70%>4-byte <i>real</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVFLT8</td>
<td width=70%>8-byte <i>float</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVFLTN</td>
<td width=70%><i>Real</i> or <i>float</i> datatype, null values allowed</td>
</tr>
<tr valign=top>
<td width=30%>SRVDATETIM4</td>
<td width=70%>4-byte<i> smalldatetime </i>datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVDATETIME</td>
<td width=70%>8-byte <i>datetime</i> datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVDATETIMN</td>
<td width=70%><i>Smalldatetime</i> or <i>datetime</i> datatype, null values allowed</td>
</tr>
<tr valign=top>
<td width=30%>srvimage</td>
<td width=70%><i>Image </i>datatype</td>
</tr>
<tr valign=top>
<td width=30%>srvtext</td>
<td width=70%><i>Text </i>datatype</td>
</tr>
<tr valign=top>
<td width=30%>SRVNULL</td>
<td width=70%>null</td>
</tr>
</table><br>
<p>
Open Data Services applications also use the same datatype definitions as DB-Library functions. For more information, see the <i>Microsoft SQL Server Programming DB-Library for C</i>.</p>
<p>&nbsp;</p></body>
</HTML>
