<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using xp_diskfree</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_using_xp_diskfree"></a>Using xp_diskfree</h2>
<p>
The XP.DLL extended stored procedure <b>xp_diskfree</b> accepts a user-specified drive letter and returns the number of bytes of free space for that drive as an output parameter. To save the return parameter, the caller of the procedure must initialize a variable of datatype <i>int</i>, according to standard SQL Server stored procedure syntax. For example:</p>
<pre>declare @outvar int
execute xp_diskfree @drive = 'c' @space = @outvar OUTPUT
select @outvar
</pre>
<p>
When the EXECUTE statement completes, the <b>@outvar </b>variable contains the value returned by the <b>xp_diskfree</b> procedure. If the first three lines in this example were part of a stored procedure in SQL Server itself, the <b>@outvar </b>return value could then be used in subsequent statements.</p>
<p>
The <b>xp_diskfree</b> sample code also demonstrates how to implement a default parameter. If the caller executes <b>xp_diskfree</b> without specifying a drive letter parameter, <b>xp_diskfree</b> returns a data row showing free space for the drive on which SQL Server is installed.</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
