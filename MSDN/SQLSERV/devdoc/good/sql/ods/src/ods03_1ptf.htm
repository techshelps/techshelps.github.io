<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Events and Event Handlers</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_open_data_services_events_and_event_handlers"></a>Events and Event Handlers</h1>
<p>
Open Data Services defines a set of events that serve as the interface between client or server requests made to the ODS Library and the event handlers that you supply in your application to process those requests. </p>
<p>
This section identifies Open Data Services event types, defines the actions that can generate an event, and describes how to associate a particular event handler with a particular event. In addition, this section illustrates a sample connect event from initiation to completion to demonstrate how Open Data Services processes incoming requests.</p>
<p>
The following illustration shows the Open Data Services event-handling mechanism. In this example, the Open Data Services server application serves as a gateway between a SQL Server database client workstation and an external data source. A SQL Server database server or another Open Data Services server application making a remote stored procedure request would communicate with Open Data Services in a similar way.</p>
<p>
<img src="images/odsug3.gif" border=0></p>
<p>
Whenever the ODS Library accepts a request, it generates the appropriate event type and calls the corresponding event handler in the Open Data Services server application, if one is provided.</p>
<p>
The Open Data Services server application responds to each event, returning results to the caller. If the caller is a client, Open Data Services returns results sets (using <b>srv_describe</b> and <b>srv_sendrow</b>), return values (using <b>srv_sendstatus</b>), and stored procedure output parameters (using <b>srv_paramset</b> or <b>srv_returnval</b>) to the calling client. If the caller is SQL Server, Open Data Services returns all results to SQL Server. Results sets flow through SQL Server to the client that initiated the activity. Return values and stored procedure output parameters can be captured by Transact-SQL commands or be returned directly to the client.</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
