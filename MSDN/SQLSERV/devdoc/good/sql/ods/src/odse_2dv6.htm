<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting the Open Data Services ODBC Driver at the Server</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_supporting_the_open_data_services_odbc_driver_at.a0.the.a0.server"></a>Supporting the Open Data Services ODBC Driver at the Server</h1>
<p>
At the server, the Open Data Services gateway application must be able to pass dynamic information about the back-end data source to the Open Data Services ODBC driver in an expected format. This type of information includes system catalog information (such as available tables and indexes) and result set information (such as column names and datatypes).</p>
<p>
To return system catalog information, the Open Data Services gateway must adapt the catalog stored procedures that are defined for SQL Server. These catalog stored procedures are used in the same way that the SQL Server catalog stored procedures are used: They obtain schema information which can only be determined by interrogating the underlying system tables. To pass information back to the Open Data Services ODBC driver about the datatypes in the columns of a results set, the gateway can use a special encoding of the SQL Server user-defined datatype field. </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
