<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Guidelines for Datatypes Not Supported in SQL Server TDS</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_guidelines_for_datatypes_not_supported_in_sql.a0.server_tds"></a>Guidelines for Datatypes Not Supported in SQL Server TDS</h3>
<p>
The following are the specific cases in which the Open Data Services ODBC driver employs special strategies to avoid losing information when converting data to SQL Server TDS datatypes:
<dl>
<dt>
SQL_TIMESTAMP</dt>
<dd>
The SQL Server DATETIME datatype limits the fractional part of the seconds to a precision of 1/300 second (about 3 milliseconds). Some DBMSs allow greater precision. The Open Data Services ODBC driver converts TIMESTAMP values sent as CHAR or VARCHAR data in ISO format (<i>yyyy-mm-dd.hh.mm.ss.fffffffff</i>) with fractional seconds of up to nine digits (the ODBC limit of precision). For example, this is done when the TDS datatype is a form of character but the ODBC datatype in the metadata is SQL_TIMESTAMP. DBMS DATE and TIME datatypes don't have this problem because they can be represented exactly by the SQL Server DATETIME datatype.</dd>
<dt>
SQL_BIGINT</dt>
<dd>
SQL Server does not have a native datatype to exactly represent a SQL_BIGINT. The Open Data Services ODBC driver converts BIGINT values sent as character data without loss of significance. This is done when the TDS datatype is a form of character and the ODBC datatype is SQL_BIGINT. The Open Data Services application could also convert SQL_BIGINT values to SRVDECIMAL values with a precision of 19.</dd>
</dl>
<p>
These conversions are usually specified by SET statements in the initialization strings, either in the resources DLL or in ODBC.INI.</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
