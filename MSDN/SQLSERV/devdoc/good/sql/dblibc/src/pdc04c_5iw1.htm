<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>dbdata</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dbdata"></a>dbdata</h1>
<p>
Returns a pointer to the data for a result column.</p>
<h4>Syntax</h4>
<p>
<b>LPCBYTE dbdata ( <br>
PDBPROCESS </b><i>dproc</i><b>, <br>
INT </b><i>column</i><b> );</b></p>
<p>
where
<dl>
<dt>
<i>dbproc</i></dt>
<dd>
Is the DBPROCESS structure that is the handle for a particular workstation/ SQL Server process. It contains all the information that DB-Library uses to manage communications and data between the workstation and SQL Server.</dd>
<dt>
<i>column</i></dt>
<dd>
Is the number of the column. The first column is number 1. For further information, see "<b>dbadata</b>."
</dd>
</dl>
<h4>Returns</h4>
<p>
A BYTE pointer to the data for the column. A NULL BYTE pointer is returned if there is no such column or if the data has a null value. To make sure that the data is really a null value, check for a return of 0 from <b>dbdatlen</b>.</p>
<h4>Remarks</h4>
<p>
The data is not null-terminated. To get the length of the data, use <b>dbdatlen</b>.</p>
<p>
The <b>dbbind</b> function automatically binds data to your program variables. It is often easier to use than <b>dbdata</b>, but it makes a copy of the data. Call <b>dbdata</b> only after <b>dbnextrow</b> or <b>dbgetrow</b> has returned reg_row.</p>
<h4>Example</h4>
<p>
The following example shows how to use <b>dbdata</b>:</p>
<pre>DBPROCESS    *dbproc;
DBINT        row_number = 0;
DBINT        object_id;

// Put the command into the command buffer. 
dbcmd(dbproc, "select id from sysobjects");

// Send the command to SQL Server and begin execution. 
dbsqlexec(dbproc);

// Process the command results. 
dbresults(dbproc);
// Examine the data in each row. 
while (dbnextrow(dbproc) != NO_MORE_ROWS)
{
    row_number+;
    object_id = *((DBINT *)dbdata(dbproc, 1));
    printf("row %ld, object id is %ld.\n", row_number, object_id);
}</pre>
<h4>See Also</h4>
<p>
<a href="pdc04b_4zc4.htm"><b>dbbind</b></a>, <a href="pdc04b_5oku.htm"><b>dbcollen</b></a>, <a href="pdc04b_4kyt.htm"><b>dbcolname</b></a>, <a href="pdc04b_0elh.htm"><b>dbcoltype</b></a>, <a href="pdc04c_0bvy.htm"><b>dbdatlen</b></a>, <a href="pdc04d_3c6r.htm"><b>dbnumcols</b></a> </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
