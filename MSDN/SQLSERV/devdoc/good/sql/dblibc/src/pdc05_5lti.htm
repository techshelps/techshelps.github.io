<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>dbcursorfetchex</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_beta6_406"></a>dbcursorfetchex</h1>
<p>
Fetches a block of rows (called the fetch buffer) from an explicit server cursor and stores the rows in the bound program variables established using <b>dbcursorbind</b>.</p>
<h4>Syntax</h4>
<p>
<b>RETCODE dbcursorfetchex ( <br>
PDBCURSOR </b><i>hc</i><b>,<br>
INT</b><i> fetchtype</i><b>,<br>
DBINT</b><i> rownum</i><b>,<br>
DBINT</b><i> nfetchrows</i><b>,<br>
DBINT</b><i> reserved </i><b>)</b></p>
<p>
where
<dl>
<dt>
<i>hc</i></dt>
<dd>
Is a PDBCURSOR pointer to a server cursor returned by <b>dbcursoropen</b>.</dd>
<dt>
<i>fetchtype</i></dt>
<dd>
Specifies the type of fetch to execute, changing the position of the fetch buffer within the cursor results set. The following table describes the different <i>fetchtype</i> values:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=28%></th>
<th align=left width=72%></th>
</tr>
<tr valign=top>
<th align=left width=28%></th>
<th align=left width=72%></th>
</tr>
<tr valign=top>
<th align=left width=28%><i>fetchtype</i></th>
<th align=left width=72%>Description</th>
</tr>
<tr valign=top>
<td width=28%></td>
<td width=72%></td>
</tr>
<tr valign=top>
<td width=28%>FETCH_FIRST</td>
<td width=72%>Fetches the first block of rows from a dynamic or keyset cursor. The first row of the new fetch buffer is the first row in the cursor results set.</td>
</tr>
<tr valign=top>
<td width=28%>FETCH_NEXT</td>
<td width=72%>Fetches the next block of rows from a dynamic or keyset cursor. The first row of the new fetch buffer is the row after the last row of the current fetch buffer.<p>
If this is the first fetch using a new cursor, it behaves the same as FETCH_FIRST.</p>
</td>
</tr>
<tr valign=top>
<td width=28%>FETCH_PREV</td>
<td width=72%>Fetches the previous block of rows from a fully dynamic or keyset cursor. The first row of the new fetch buffer is <i>nrows</i> (specified in <b>dbcursoropen</b>) before the first row of the current fetch buffer.</td>
</tr>
<tr valign=top>
<td width=28%>FETCH_RANDOM</td>
<td width=72%>Fetches a block of rows from a keyset cursor. The first row of the new fetch buffer is the specified <i>rownum</i> row in the cursor results set.</td>
</tr>
<tr valign=top>
<td width=28%>FETCH_RELATIVE</td>
<td width=72%>Fetches a block of rows from a dynamic or keyset cursor. The first row of the new fetch buffer is <i>rownum</i> rows before or after the first row of the current fetch buffer.</td>
</tr>
<tr valign=top>
<td width=28%>FETCH_LAST</td>
<td width=72%>Fetches the last block of rows from a dynamic or keyset cursor. The last row of the new fetch buffer is the last row of the cursor results set.</td>
</tr>
</table><br>


<p>
The block of rows retrieved by a fetch is called the fetch buffer. The number of rows in the fetch buffer is determined by the <i>nfetchrows</i> parameter.

<p>
For a forward-only dynamic cursor (<i>scrollopt</i> is CUR_FORWARD in <b>dbcursoropen</b>), you can only use the FETCH_FIRST, FETCH_NEXT, or FETCH_RELATIVE (with a positive <i>rownum</i>) types.
</dd>
<dt>
<i>rownum</i></dt>
<dd>
Is the specified random or relative row number to use as the first row of the new fetch buffer. Use this parameter only with a <i>fetchtype</i> of FETCH_RANDOM or FETCH_RELATIVE. Specify 0 for any other <i>fetchtype</i>.
<p>
When <i>fetchtype</i> is FETCH_RANDOM:

<ul>
<li>
A positive <i>rownum</i> means that the first row of the new fetch buffer is the <i>rownum</i> row (counting forward from the beginning) of the cursor results set.</li>
<li>
A negative <i>rownum</i> means that the first row of the new fetch buffer is <i>rownum</i> rows backward from the end of the cursor results set. Given N rows in the cursor results set, the first row of the new fetch buffer is row N+1+<i>rownum</i> of the cursor results set.<p>
For example, a <i>rownum</i> of - 1 means the first row of the new fetch buffer is row N (N+1 - 1), or the last row, of the current results set. A <i>rownum</i> of - N means the first row of the new fetch buffer is row 1 (N+1 - N), or the first row, of the current results set.
</li>
<li>
A <i>rownum</i> of 0 means that the first row of the new fetch buffer is before the beginning (first row) of the cursor results set.</li>
</ul>

<p>
When <i>fetchtype</i> is FETCH_RELATIVE:

<ul>
<li>
A positive <i>rownum</i> means that the first row of the new fetch buffer is <i>rownum</i> rows after the first row of the current fetch buffer.<p>
For dynamic cursors, if the first row in the current fetch buffer is deleted before a relative fetch, the current cursor position becomes invalid. Let D be the number of contiguous rows, including the first row, deleted from the beginning of the current fetch buffer. Before executing a relative fetch, the current cursor position is set to before the first non-deleted row (row D+1) in the current fetch buffer.
<p>
In this case, when a relative fetch is performed with a positive <i>rownum</i>, the first row of the new fetch buffer is row <i>rownum</i>+D of the current fetch buffer.
</li>
<li>
A negative <i>rownum</i> means that the first row of the new fetch buffer is <i>rownum</i> rows before the first row of the current fetch buffer.</li>
<li>
For dynamic cursors, a <i>rownum</i> of 0 means that all the rows in the current fetch buffer are fetched again without moving the current cursor position. This is different from a refresh because the rows in the new fetch buffer can differ from the rows in the current fetch buffer. New rows can appear, and old rows can disappear.<p>
In the case given above, after D contiguous rows have been deleted from the beginning of the current fetch buffer, when a relative fetch is performed with a <i>rownum</i> of 0, the first row of the new fetch buffer is the first non-deleted row (row D+1) of the current fetch buffer.
<p>
For keyset cursors, a <i>rownum</i> of 0 means that the current fetch buffer is refreshed with current data from SQL Server without moving the current cursor position. This is identical to calling <b>dbcursor</b> with <i>optype</i> set to CRS_REFRESH.
</li>
</ul>
</dd>
<dt>
<i>nfetchrows</i></dt>
<dd>
Is the number of rows in the new fetch buffer. This value must be less than or equal to the <i>nrows</i> parameter specified for this cursor in <b>dbcursoropen</b>. The <i>poutlen</i> and <i>pvaraddr</i> arrays specified in calls to <b>dbcursorbind</b> must have at least <i>nfetchrows</i> elements. If these arrays are not large enough, you must break the existing bindings and then rebind with large enough arrays (at least <i>nfetchrows</i> elements) before calling <b>dbcursorfetchex</b>.
<p>
When <i>fetchtype</i> is FETCH_FIRST, an <i>nfetchrows </i>value of 0 means that the new cursor position is set to before the beginning (first row) of the cursor results set.

<p>
When <i>fetchtype</i> is FETCH_LAST, an <i>nfetchrows </i>value of 0 means that the new cursor position is set to after the end (last row) of the cursor results set.
</dd>
<dt>
<i>reserved</i></dt>
<dd>
Reserved for future use. Use 0.
</dd>
</dl>
<h4>Returns</h4>
<p>
SUCCEED or FAIL.</p>
<p>
SUCCEED is returned if every row was fetched successfully. Note that for a keyset cursor, a fetch that results in a missing row will not cause <b>dbcursorfetchex</b> to FAIL.</p>
<p>
FAIL is returned if at least one of the following is true:
<ul>
<li>
A <i>fetchtype</i> of FETCH_RANDOM was used on a dynamic cursor.</li>
<li>
A fetchtype other than FETCH_FIRST, FETCH_NEXT, or FETCH_RELATIVE (with a positive <i>rownum</i>) was used on a forward-only dynamic cursor.</li>
<li>
The SQL Server connection is broken or times out.</li>
<li>
DB-Library is out of memory.</li>
</ul>
<h4>Remarks</h4>
<p>
After the fetch, the elements of the array of row status indicators (<i>pstatus</i> in <b>dbcursoropen</b>) are filled with row status values, one for each row in the fetch buffer. Each row status value is a series of fetch status values ORed together. The following table shows the meaning of each row status value:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=29%></th>
<th align=left width=71%></th>
</tr>
<tr valign=top>
<th align=left width=29%></th>
<th align=left width=71%></th>
</tr>
<tr valign=top>
<th align=left width=29%>Fetch status</th>
<th align=left width=71%>Description</th>
</tr>
<tr valign=top>
<td width=29%></td>
<td width=71%></td>
</tr>
<tr valign=top>
<td width=29%>FTC_SUCCEED</td>
<td width=71%>The row was successfully fetched. The array of bound program variables and the array of data length values (specified in <b>dbcursorbind</b>) contain valid data for the row.</td>
</tr>
<tr valign=top>
<td width=29%>FTC_MISSING</td>
<td width=71%>The row has been deleted or a unique index column of the row has been changed. Do not use the values in the array of bound program variables and the array of data length values (specified in <b>dbcursorbind</b>) for the row.<p>
For keyset cursors, this fetch status can appear at any time. For dynamic cursors, this fetch status can appear only after the current fetch buffer is refreshed.</p>
</td>
</tr>
</table><br>
<p>
A row status indicator of 0 means that the row is invalid, and the values in the array of bound program variables and the array of data length values (specified in <b>dbcursorbind</b>) do not contain valid data. This happens when the row is before the beginning (first row) or after the end (last row) of the cursor results set.</p>
<p>
After the fetch, the elements of the array of bound program variables and the array of data length values (previously specified in <b>dbcursorbind</b>):
<ul>
<li>
Are filled with valid data for all rows with a fetch status of FTC_SUCCEED.</li>
<li>
Contain invalid data for all rows <i>without</i> a fetch status of FTC_SUCCEED.</li>
</ul>
<p>
If no fetches have been performed on a cursor, the current cursor position is before the beginning (first row) of the cursor results set.</p>
<p>
After a fetch is complete, the new explicit server cursor position is one of the following:
<ul>
<li>
The first row of the new fetch buffer, as specified under <i>fetchtype</i>, if the first row of the new fetch buffer stayed within the cursor results set.</li>
<li>
Adjusted to the first row of the cursor results set if the first row of the new fetch buffer would have been before the first row of the cursor results set and the last row of the new fetch buffer would have stayed within the cursor results set.</li>
<li>
Before the beginning of the cursor results set if all rows of the new fetch buffer are before the first row of the cursor results set, or if any backward fetch (FETCH_PREV or FETCH_RELATIVE with a negative <i>rownum</i>) is performed when the first row of the current fetch buffer is the first row of the cursor results set.</li>
<li>
After the end of the cursor results set if the first row (and thus all rows) of the new fetch buffer is after the last row of the cursor results set.</li>
</ul>
<p>
When the current cursor position is before the beginning of the cursor, a FETCH_NEXT operation is identical to a FETCH_FIRST operation. When the current cursor position is after the end of the cursor, a FETCH_PREV operation is identical to a FETCH_LAST operation.</p>
<p>
<b>Note</b>  This function works with explicit server cursors in SQL Server 6.0. Do not use both <b>dbcursorfetchex</b> and <b>dbcursorfetch</b> with the same server cursor handle. Once one of these functions is used on a specific cursor handle, any attempt to use the other function will return fail.</p>
<p>
Each call to <b>dbcursorfetch</b> leaves the DBPROCESS available for use with no pending results.</p>
<h4>See Also</h4>
<p>
<a href="pdc05_7l4i.htm"><b>dbcursor</b></a>, <a href="pdc05_5jz8.htm"><b>dbcursorbind</b></a>, <a href="pdc05_7wbz.htm"><b>dbcursorcolinfo</b></a>, <a href="pdc05_22sl.htm"><b>dbcursorclose</b></a>, <a href="pdc05_5ban.htm"><b>dbcursorinfo</b></a>, <a href="pdc05_9772.htm"><b>dbcursoropen</b></a>; <a href="pdc09_7e7t.htm">Bulk-Copy Functions</a> </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
