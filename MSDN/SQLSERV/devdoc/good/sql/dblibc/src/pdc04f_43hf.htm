<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>dbsqlexec</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dbsqlexec"></a>dbsqlexec</h1>
<p>
Sends a command batch to SQL Server.</p>
<h4>Syntax</h4>
<p>
<b>RETCODE dbsqlexec ( PDBPROCESS </b><i>dbproc</i><b> );</b></p>
<p>
where
<dl>
<dt>
<i>dbproc</i></dt>
<dd>
Is the DBPROCESS structure that is the handle for a particular workstation/ SQL Server process. It contains all the information that DB-Library uses to manage communications and data between the workstation and SQL Server.
</dd>
</dl>
<h4>Returns</h4>
<p>
SUCCEED or FAIL. The most common reason for failing is a Transact-SQL syntax error or SQL Server permission violation. Other reasons include incorrect column or table names. The <b>dbsqlexec</b> function also fails if previous results were not processed, if no statement was specified, or if a network connection is broken.</p>
<p>
Note that if a series of commands is sent to SQL Server and if one or more of the commands contains syntax errors, SQL Server processes none of the commands, and <b>dbsqlexec</b> returns FAIL.</p>
<h4>Remarks</h4>
<p>
This function sends SQL statements, stored in the command buffer of the DBPROCESS, to SQL Server. Statements can be added to the DBPROCESS structure by calling <b>dbcmd</b> or <b>dbfcmd</b>.</p>
<p>
The <b>dbsqlexec</b> function is equivalent to <b>dbsqlsend</b> followed by <b>dbsqlok</b>. However, after sending a query to SQL Server, <b>dbsqlexec</b> waits until it receives a response or until the timeout period has elapsed. If you prefer not to have your application wait, substitute <b>dbsqlsend</b>, <b>dbdataready</b>, and <b>dbsqlok</b>.</p>
<p>
Once <b>dbsqlexec</b> has returned SUCCEED, the application must call <b>dbresults</b> to process the results.</p>
<h4>Example</h4>
<p>
This example shows the typical sequence of calls:</p>
<pre>DBINT    xvariable;
DBCHAR    yvariable[10];

// Place the query into the command buffer 
dbcmd(dbproc, "select x = 100, y = 'hello'");

// Send the command buffer to SQL Server 
dbsqlexec(dbproc);

// Get ready to process the results of the query 
dbresults(dbproc);

// Bind column data to program variables 
dbbind(dbproc, 1, INTBIND, (DBINT) 0, (BYTE *) &amp;xvariable);
dbbind(dbproc, 2, STRINGBIND, (DBINT) 0, yvariable);

// Now process each row 
while (dbnextrow(dbproc) != NO_MORE_ROWS)
{
    // C-code to print or process row data 
}</pre>
<h4>See Also</h4>
<p>
<a href="pdc04b_065g.htm"><b>dbcmd</b></a>, <a href="pdc04c_6xes.htm"><b>dbfcmd</b></a>, <a href="pdc04d_0fqv.htm"><b>dbnextrow</b></a>, <a href="pdc04e_52sz.htm"><b>dbresults</b></a>, <a href="pdc04e_5nol.htm"><b>dbsettime</b></a>, <a href="pdc04f_6pij.htm"><b>dbsqlok</b></a>, <a href="pdc04f_13ok.htm"><b>dbsqlsend</b></a> </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
