<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Asynchronous Query Processing</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_asynchronous_query_processing"></a>Asynchronous Query Processing</h3>
<p>
Preemptive multitasking in the Win32 API makes it easy to implement asynchronous query processing. Use one of the following ways to implement asynchronous query processing, depending on whether you want your application to exhibit asynchronous behavior between processes or within a single process.
<ul>
<li>
<b>Switch tasks between processes</b>. Use the standard <b>dbsqlexec</b> call to send a query to SQL Server.<p>
Although <b>dbsqlexec</b> is synchronous from the calling thread's perspective (<b>dbsqlexec</b> returns only when SQL Server processes the query and is ready to return results), the preemptive nature of the Win32 API allows other applications or threads of the same application to continue to work and process user input while the query is executing.
</li>
<li>
<b>Implement asynchronous processing within a single process</b>.<p>
<b>Use threads</b>. The easiest way to implement asynchronous processing within a process is to use Win32 threads. You can spawn a thread that calls <b>dbsqlexec</b> and continue to do other work or continue to receive user input while the query is being processed. 
<p>
<b>Single-thread approach</b>. If you require a single-thread process to implement asynchronous query processing, use the asynchronous DB-Library functions <b>dbsqlsend</b>,<b> dbdataready</b>, and <b>dbsqlok</b> in combination with the <b>PostMessage</b> function, as shown in this example:
<pre>case WM_SENDQUERY:
    dbsqlsend(dbproc);
    PostMessage(hWnd,WM_CHECKQUERY,0,0L);
    break;

case WM_CHECKQUERY:
    if (dbdataready(dbproc))
    {
        dbsqlok(dbproc);
        PostMessage(hWnd,WM_GETRESULTS,0,0L);
    }
    else
    {
        PostMessage(hWnd,WM_CHECKQUERY,0,0L);
    }
    break;
</pre>
</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
