<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>bcp_colfmt</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bcp_colfmt"></a>bcp_colfmt</h1>
<p>
Specifies the format of a user file for bulk copy into or out of SQL Server.</p>
<h4>Syntax</h4>
<p>
<b>RETCODE bcp_colfmt ( <br>
PDBPROCESS </b><i>dbproc</i><b>, <br>
INT </b><i>file_column</i><b>, <br>
BYTE </b><i>file_type</i><b>, <br>
INT </b><i>file_</i> <i>prefixlen</i><b>, <br>
DBINT </b><i>file_collen</i><b>, <br>
LPCBYTE </b><i>file_term</i><b>, <br>
INT </b><i>file_termlen</i><b>, <br>
INT </b><i>table_column</i><b> );</b></p>
<p>
where
<dl>
<dt>
<i>dbproc</i></dt>
<dd>
Is the DBPROCESS structure that is the handle for a particular workstation/<br>
SQL Server process. It contains all the information that DB-Library uses to manage communications and data between the workstation and SQL Server.</dd>
<dt>
<i>file_column</i></dt>
<dd>
Is the column number in the user file for which the format is being specified. The first column is number 1.</dd>
<dt>
<i>file_type</i></dt>
<dd>
Is the datatype of this column in the user file. If it is different from the datatype of the corresponding column in the database table (<i>table_column</i>), the conversion is performed automatically. For a table of allowable data conversions, see <a href="pdc04b_92t0.htm"><b>dbconvert</b></a>. If you want to specify the same datatype as in the corresponding column of the database table (<i>table_column</i>), set this parameter to 0.
<p>
For a bulk copy out of SQL Server into a file, when <i>file_type</i> is SQLDECIMAL or SQLNUMERIC:

<ul>
<li>
If the source column is not <i>decimal</i> or <i>numeric</i>, the default precision and scale are used.</li>
<li>
If the source column is <i>decimal</i> and <i>numeric</i>, the precision and scale of the source column are used.</li>
</ul>
</dd>
<dt>
<i>file_</i> <i>prefixlen</i></dt>
<dd>
Is the length of the length prefix for this column in the user file. Legal prefix lengths are 1, 2, and 4 bytes. To avoid using a length prefix, set this parameter to 0. To let DB-Library determine whether to use a length prefix, set this parameter to -1. In such a case, DB-Library uses a length prefix (of whatever length is necessary) if the database column length is variable.
<p>
If more than one means of specifying a user file column length is used (such as a length prefix and a maximum column length, or a length prefix and a terminator sequence), DB-Library chooses the one that results in the shortest amount of data being copied.

<p>
Length prefixes simplify the way null data values are specified in a user file. For instance, assume you have a 1-byte length prefix for a 4-byte integer column. Ordinarily, the length prefix contains a value of 4 to indicate that a 4-byte value follows. However, if the value of the column is NULL, the length prefix can be set to 0 to indicate that 0 bytes follow for the column.
</dd>
<dt>
<i>file_collen</i></dt>
<dd>
Is the maximum length of this column's data in the user file, not including the length of any length prefix and/or terminator. Setting <i>file_collen</i> to 0 signifies that the data is NULL. Setting <i>file_collen</i> to -1 indicates that the system should ignore this parameter (that is, there is no default maximum length).
<p>
For fixed-length datatypes, such as integers, the length of the data is constant, except for the special case of null values. Therefore, for fixed-length datatypes, <i>file_collen</i> must always be -1, except when the data is NULL, in which case <i>file_collen</i> must be 0. For character, text, binary, and image data, <i>file_collen</i> can be -1, 0, or some positive value. If <i>file_collen</i> is -1, the system uses either a length prefix or a terminator sequence to determine the length of the data. (If both are supplied, the system uses the one that results in the shortest amount of data being copied.) If <i>file_collen</i> is -1 and neither a prefix length nor a terminator sequence is specified, the system returns an error message. If <i>file_collen</i> is 0, the system assumes the data is NULL. If <i>file_collen</i> is a positive value, the system uses <i>file_collen</i> as the maximum data length. However, if, in addition to a positive <i>file_collen</i>, a prefix length and/or terminator sequence is provided, the system determines the data length by using the method that results in the shortest amount of data being copied.
</dd>
<dt>
<i>file_term</i></dt>
<dd>
Is the terminator sequence to be used for this column. This parameter is useful mainly for character, text, binary, and image datatypes because all other types are of fixed length. To avoid using a terminator, set this parameter to NULL. To set the terminator to NULL, set <i>file_term</i> to "\0". To make the tab character the terminator, set <i>file_term</i> to "\t". To make the newline character the terminator, set <i>file_term</i> to "\n".
<p>
If more than one means of specifying a user file column length is used (such as a terminator and a length prefix, or a terminator and a maximum column length), <b>bcp</b> chooses the one that results in the shortest amount of data being copied.
</dd>
<dt>
<i>file_termlen</i></dt>
<dd>
Is the length, in bytes, of the terminator sequence to be used for this column. To avoid using a terminator, set this value to 0.</dd>
<dt>
<i>table_column</i></dt>
<dd>
Is the corresponding column number in the database table. If this value is 0, this column is not copied. The first column number is column 1.
</dd>
</dl>
<h4>Returns</h4>
<p>
SUCCEED or FAIL.</p>
<h4>Remarks</h4>
<p>
The <b>bcp_colfmt</b> function allows you to specify the user file format for bulk copies. For bulk copy, a format contains the following parts:
<ul>
<li>
A mapping from user file columns to database columns.</li>
<li>
The datatype of each user file column.</li>
<li>
The length of the optional length prefix of each column.</li>
<li>
The maximum length of the user file column's data.</li>
<li>
The optional terminating byte sequence for each column.</li>
<li>
The length of this optional terminating byte sequence.</li>
</ul>
<p>
Each call to <b>bcp_colfmt</b> specifies the format for one user file column. For example, to change the default settings for three columns in a five-column table, first call <b>bcp_columns(5)</b>, and then call <b>bcp_colfmt</b> five times, with three of those calls setting your custom format. Set <i>file_type</i> of the remaining two calls to 0, and set their <i>file_</i> <i>prefixlen</i>, <i>file_collen</i>, and <i>file_termlen</i> parameters to -1. This procedure copies all five columns ¾ three with your customized format and two with the default format.</p>
<p>
The <b>bcp_columns</b> function must be called before any calls to <b>bcp_colfmt</b>.</p>
<p>
You must call <b>bcp_colfmt</b> once and only once for every column in the user file, regardless of whether some of those columns use the default format or are skipped.</p>
<p>
To skip a column, set the <i>table_column</i> parameter to 0.</p>
<h4>See Also</h4>
<p>
<a href="pdc09_8r6w.htm"><b>bcp_batch</b></a>, <a href="pdc09_4fac.htm"><b>bcp_bind</b></a>, <a href="pdc09_4ib2.htm"><b>bcp_collen</b></a>, <a href="pdc09_4voy.htm"><b>bcp_colptr</b></a>, <a href="pdc09_9tgz.htm"><b>bcp_columns</b></a>, <a href="pdc09_3tt8.htm"><b>bcp_control</b></a>, <a href="pdc09_66sl.htm"><b>bcp_done</b></a>, <a href="pdc09_2l2b.htm"><b>bcp_exec</b></a>, <a href="pdc09_46r8.htm"><b>bcp_init</b></a>, <a href="pdc09_3u7r.htm"><b>bcp_sendrow</b></a>, <a href="pdc04b_92t0.htm"><b>dbconvert</b></a></p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
