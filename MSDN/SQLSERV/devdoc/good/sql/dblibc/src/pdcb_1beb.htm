<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Type Definitions</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_type_definitions"></a>Type Definitions</h2>
<p>
DB-Library functions use the following type definitions. Use these when defining C program variables, particularly those in <b>dbbind</b>, <b>dbaltbind</b>, <b>dbconvert</b>, and <b>dbdata</b>.</p>
<pre>typedef char            DBCHAR;        // Char and text
typedef unsigned char   DBBINARY;      // Binary and image
typedef unsigned char   DBTINYINT;     // 1-byte tinyint
typedef short           DBSMALLINT;    // 2-byte smallint
typedef unsigned short  DBUSMALLINT;   // Unsigned 2-byte integer
typedef long            DBINT;         // 4-byte int
typedef float           DBFLT4;        // 4-byte real
typedef double          DBFLT8;        // 8-byte float
typedef unsigned char   DBBIT;         // Bit
typedef unsigned char   DBBOOL;        // Boolean
typedef long            DBMONEY4;      // 4-byte smallmoney
typedef struct dbmoney       // 8-byte money
{
    DBINT mnyhigh;
    ULONG mnylow;
} DBMONEY;
typedef struct dbdatetime4   // 4-byte smalldatetime
{
    USHORT numdays;          // Days since Jan 1, 1900
    USHORT nummins;          // Minutes since midnight
} DBDATETIM4;

typedef struct dbdatetime    // 8-byte datetime
{
    DBINT dtdays;            // Days since Jan 1, 1900
    ULONG dttime;            // 300ths of a second since midnight
} DBDATETIME;

#define MAXNUMERICLEN 16

typedef struct dbnumeric     // Numeric (and decimal)
{
    BYTE precision;          // Precision
    BYTE scale;              // Scale
    BYTE sign;               // 1 = Positive, 0 = Negative
    BYTE val[MAXNUMERICLEN]; // Padded little endian value
} DBNUMERIC;

typedef DBNUMERIC DBDECIMAL; // Decimal

#define DBMAXCHAR 256

typedef struct dbvarychar          // Pascal-type string
{
    DBSMALLINT  len;               // Character count
    DBCHAR      str[DBMAXCHAR];    // Non-terminated string
} DBVARYCHAR;

typedef struct dbvarybin           // Pascal-type byte array
{
    DBSMALLINT  len;               // Byte count
    BYTE        array[DBMAXCHAR];  // Non-terminated array
} DBVARYBIN;
<b><i>  </i></b></pre>
<p>
<b><i></i></b></p>
<p>&nbsp;</p></body>
</HTML>
