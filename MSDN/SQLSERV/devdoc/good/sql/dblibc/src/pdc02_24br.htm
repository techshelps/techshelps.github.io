<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Results Processing</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_results_processing"></a>Results Processing</h1>
<p>
When <b>dbsqlexec</b> or <b>dbsqlok</b> returns SUCCEED, it indicates that SQL Server has successfully executed a command batch. At that point, the application must process any results. The SELECT statement and EXECUTE statements that contain SELECT statements both return result rows. INSERT statements and most other Transact-SQL statements also return data needed by DB-Library.</p>
<p>
The following list describes the two types of result rows:
<ul>
<li>
<i>Regular rows</i> are generated from columns in a SELECT statement's select list.</li>
<li>
<i>Compute rows</i> are generated from columns in a SELECT statement's COMPUTE clause.</li>
</ul>
<p>
Since these two types of rows contain different data, the application must process them separately.</p>
<p>
The result for each statement in a batch is returned to the application separately. Within each statement's set of results, the result rows are processed one at a time.</p>
<p>
The results for each statement in the batch must be set up separately with <b>dbresults</b>. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
