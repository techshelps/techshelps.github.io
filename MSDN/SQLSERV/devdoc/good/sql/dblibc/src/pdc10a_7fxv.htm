<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Programming Distributed Transactions</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_programming_distributed_transactions"></a>Programming Distributed Transactions</h1>
<p>
The two-phase commit service allows an application to coordinate updates among multiple SQL Servers. This implementation of distributed transactions treats transactions on separate SQL Servers as a single transaction. The service uses one SQL Server, the <i>commit server</i>, as a record keeper that helps the application determine whether to commit or to roll back transactions. Thus, the two-phase commit guarantees that either all the databases on the participating servers are updated or that none of them are.</p>
<p>
A <i>distributed transaction</i> submits Transact-SQL statements to SQL Servers through DB-Library functions. An application opens a session with each server, executes the update commands, and then prepares to commit the transaction. Through DB-Library, the application executes the following to each participating server:
<ul>
<li>
A BEGIN TRANSACTION statement with identifying information about the application, the transaction, and the commit server.</li>
<li>
The Transact-SQL update statements.</li>
<li>
A PREPARE TRANSACTION statement that indicates that the updates have been performed and that the server is prepared to commit. This statement cannot be used outside the context of DB-Library.</li>
</ul>
<p>
After all servers participating in the distributed transaction have been updated, the two-phase commit begins:
<ol>
<li>
In the first phase, all servers agree that they are ready to commit.</li>
<li>
In the second phase, they all commit ¾ a COMMIT TRANSACTION statement is executed to all servers.</li>
</ol>
<p>
The application then tells the commit service that the transaction is complete, and the connections are closed. If an error occurs between phases one and two, all servers coordinate with the commit service to see if the transaction should be committed or canceled.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
