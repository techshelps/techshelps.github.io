<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Porting DB-Library Applications</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_porting_db_library_applications"></a>Porting DB-Library Applications</h2>
<p>
All DB-Library functions are completely portable between the Windows and Windows NT platforms. You should not need to modify any of your DB-Library calls. You simply need to define the application's operating system at compile time (for example, <b>#define DBNTWIN32</b> for the Win32 API). </p>
<p>
Two DB-Library functions, <b>dbprhead</b> and <b>dbprrow</b>, not supported in Windows because they send output to STDIO, are supported in the Win32 API and can be used when developing applications for the CONSOLE subsystem. The <b>dbprhead</b> and <b>dbprrow</b> functions provide a convenient way to display the results of a query to the default output device.</p>
<p>
If you have existing Win16 DB-Library applications for Windows that you want to port to Win32 and run with Windows NT or Windows 95, you can take two approaches to porting:
<ul>
<li>
<b>Change your application source code so that it can be compiled for the Win32 or Windows platform</b>. If your DB-Library application is under development or is evolving to meet changing user needs, and you want to run the application with Windows and Windows NT or Windows 95, make small changes to the source code to build 16-bit (Windows-based) and 32-bit (Win32-based) versions of your application from the same source.</li>
<li>
<b>Port your application source code entirely to the Win32 platform</b>. If you decide to modify your application to run only as a 32-bit (Win32-based) application (for example, you require Win32-specific features such as threads or preemptive multitasking), you can port your application to the Win32 API, removing redundant Windows calls and dependencies.</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
