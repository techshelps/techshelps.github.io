<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Two-Phase Commit Functions</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_two.2d.phase_commit_functions"></a>Two-Phase Commit Functions</h1>
<p>
The functions that make up the two-phase commit service are as follows:
<dl>
<dt>
<b>open_commit</b></dt>
<dd>
Opens a connection with the commit service. The function is given the login ID of the user initiating the session and the name of the commit service. It returns a pointer to a DBPROCESS structure used in subsequent commit service calls.</dd>
<dt>
<b>start_xact</b></dt>
<dd>
Records the start of a distributed transaction and stores initial information about the transaction (DBPROCESS ID, application name, transaction name, and number of sites participating) in a lookup table on the commit server. It returns the <i>commid</i> identifying number for the transaction.</dd>
<dt>
<b>build_xact_string</b></dt>
<dd>
Builds a name string for use by each participating SQL Server for its BEGIN TRANSACTION and PREPARE TRANSACTION statements. This string encodes the application's transaction name, the commit service name, and the <i>commid</i>.</dd>
<dt>
<b>commit_xact</b></dt>
<dd>
Tells the commit service to commit the transaction.</dd>
<dt>
<b>abort_xact</b></dt>
<dd>
Tells the commit service to cancel the transaction.</dd>
<dt>
<b>remove_xact</b></dt>
<dd>
Decreases the number of servers still participating in the transaction.</dd>
<dt>
<b>close_commit</b></dt>
<dd>
Closes the connection with the commit service.
</dd>
</dl>
<p>
Two additional functions are used for ongoing status reports:
<dl>
<dt>
<b>scan_xact</b></dt>
<dd>
Returns the status of a single transaction or all distributed transactions.</dd>
<dt>
<b>stat_xact</b></dt>
<dd>
Returns the completion status of a distributed transaction.
</dd>
</dl>
<p>
During a session, the diagnostic functions, <b>scan_xact</b> and <b>stat_xact</b>, check that the commit service carried out the request.</p>
<p>
The <b>scan_xact</b> function uses the commit service lookup table, <i>spt_committab</i>, which holds the values of the following:
<ul>
<li>
Transaction ID.</li>
<li>
Time the transaction started.</li>
<li>
Last time the row was updated.</li>
<li>
Number of servers initially involved in the transaction.</li>
<li>
Number of servers that have not finished processing.</li>
<li>
Status ("a" for abort, "c" for commit, "b" for begin).</li>
<li>
Application name.</li>
<li>
Transaction name.</li>
</ul>
<p>
The two-phase commit functions call internal stored procedures (for example, <b>sp_start_xact</b>) that are created in each server's <i>master</i> database. The INSTMSTR.SQL script creates the commit service lookup table and stored procedures in each server's <i>master</i> database for use whenever the server becomes a commit server.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
