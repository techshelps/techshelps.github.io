<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>sp_articlefilter Replication Stored Procedure</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sp_articlefilter_replication_stored_procedure"></a>sp_articlefilter Replication Stored Procedure</h2>
<p>
Creates a filter stored procedure used to horizontally partition data replicated from a published table.</p>
<h4>Syntax</h4>
<p>
<b>sp_articlefilter</b> <i>publication</i><b>,</b> <i>article</i> [<b>,</b> <i>filter_name</i>] [<b>,</b> <i>filter_clause</i>]</p>
<p>
where
<dl>
<dt>
<i>publication</i></dt>
<dd>
Is the name of the publication that contains the article. </dd>
<dt>
<i>article</i></dt>
<dd>
Is the name of the article. </dd>
<dt>
<i>filter_name</i></dt>
<dd>
Is the name of the filter stored procedure to be created from the <i>filter_clause</i>.</dd>
<dt>
<i>filter_clause</i></dt>
<dd>
Is a restriction (WHERE) clause that defines a horizontal partition. When entering the restriction clause, omit the word "WHERE."
</dd>
</dl>
<h4>Remarks</h4>
<p>
This stored procedure creates the filter and inserts the ID of the filter stored procedure in the <i>filter</i> column of the <i>sysarticles</i> table, and it inserts the text of the restriction clause in the <i>filter_clause</i> column.</p>
<p>
Only unsubscribed articles can be modified by this stored procedure.</p>
<p>
To create an article with a horizontal partition, execute <b>sp_addarticle</b> with no <i>filter</i> parameter. Execute <b>sp_articlefilter</b>, providing all parameters including <i>filter_clause</i>. Then execute <b>sp_articleview</b>, providing all parameters including the identical <i>filter_clause</i>. If the filter already exists and if the <i>type</i> in <i>sysarticles</i> is 1 (log-based article) or 3 (log-based article with manual filter), the filter will be dropped and re-created. </p>
<p>
If <i>filter_name</i> and <i>filter_clause</i> are not provided, the previous filter is deleted and the filter ID is set to 0.</p>
<h4>Example</h4>
<p>
This example creates the <i>mypub</i> filtered stored procedure.</p>
<pre>sp_articlefilter, MyPub, MyArticle, MyFilter, 'state = "OR"'
</pre>
<h4>Permission</h4>
<p>
Only the system administrator and the database owner can use this stored procedure.</p>
<h4>Tables Used</h4>
<p>
<i>sysobjects</i>, <i>syspublications</i>, <i>syssubscriptions</i>, <i>sysarticles</i></p>
<h4>See Also</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%></td>
<td width=52%></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql14_22jp.htm"><b>sp_addarticle</b></a></td>
<td width=52%><a href="tsql15_30f9.htm"><b>sp_articleview</b></a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql15_49yd.htm"><b>sp_articlecolumn</b></a></td>
<td width=52%></td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
