<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Referencing Objects</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_referencing_objects"></a>Referencing Objects</h3>
<p>
Objects referenced within a stored procedure must already exist. If objects are created within the stored procedure, you can reference them only after they've been created. The same holds true for temporary objects. A stored procedure can reference a temporary object only if the temporary object exists at the time the procedure is created or if the procedure itself creates the temporary object. A temporary object created in a procedure is dropped when the procedure exits. </p>
<p>
If tables are created within a stored procedure, the column nullability decision is determined when the procedure is created. If column nullability is not explicitly defined, the nullability for each column will be defined based on the rules discussed in the CREATE TABLE topic and set based on the default nullability of the session and the database. To avoid any potential nullability problems, make sure to always explicitly define the nullability for each column.</p>
<p>
Within a stored procedure, you cannot create an object (including a temporary one), drop the object, and then create a new object with the same name.</p>
<p>
If you execute a procedure that calls another procedure, the called procedure can access objects created by the calling procedure.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
