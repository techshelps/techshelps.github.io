<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Subqueries</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_subqueries"></a>Subqueries </h1>
<p>
You can nest a SELECT statement inside a SELECT, INSERT, UPDATE, or DELETE statement, another subquery, or anywhere an <i>expression</i> is allowed. However, the <i>expression </i>that includes the subquery must return true or false. Usually a subquery is nested inside the WHERE or HAVING clause<i> </i>of an outer SELECT, INSERT, UPDATE, DELETE, or another subquery. Many SQL statements that include subqueries can also be formulated as joins. </p>
<h4>Syntax</h4>
<p>
A subquery can be used in these contexts:</p>
<p>
<i>expression comparison_operator</i> [ANY | ALL | SOME] <b>(</b><i>subquery</i><b>)</b></p>
<p>
<i>expression</i> [NOT] IN <b>(</b><i>subquery</i><b>)</b></p>
<p>
[NOT] EXISTS <b>(</b><i>subquery</i><b>)</b></p>
<p>
A subquery has the following restricted SELECT syntax:</p>
<p>
<b>(</b>SELECT [ALL | DISTINCT] <i>subquery_select_list</i> <br>
[FROM {<i>table_name</i> | <i>view_name</i>}[<i>optimizer_hints</i>] <br>
&nbsp;&nbsp;&nbsp;&nbsp;[[<b>, </b>{<i>table_name2</i> | <i>view_name2</i>}[<i>optimizer_hints</i>] <br>
&nbsp;&nbsp;&nbsp;&nbsp;[...<b>, </b>{<i>table_name16</i> | <i>view_name16</i>}[<i>optimizer_hints</i>]]] <br>
[WHERE clause] <br>
[GROUP BY clause]<br>
[HAVING clause]<b>)</b></p>
<p>
where
<dl>
<dt>
<i>expression</i></dt>
<dd>
Is a standard expression. For details, see the Expressions and Search Conditions topics. </dd>
<dt>
<i>comparison_operator</i></dt>
<dd>
Is a standard comparison operator. For details, see the Operators topic.</dd>
<dt>
ANY | SOME</dt>
<dd>
Are synonymous. When used, the <i>expression </i>evaluates to true if the comparison is true for at least one row of <i>subquery</i>. The <i>expression </i>evaluates to false if the comparison returns no rows or if the comparison is false for all rows in the <i>subquery</i>. Otherwise, the <i>expression </i>is unknown.</dd>
<dt>
ALL</dt>
<dd>
When used the <i>expression </i>evaluates to true if the comparison returns no rows or if the comparison is true for all rows in the <i>subquery</i>. The <i>expression </i>evaluates to false if the comparison is false for at least one of the rows in the <i>subquery</i>. Otherwise, the <i>expression </i>is unknown.</dd>
<dt>
DISTINCT</dt>
<dd>
Includes only unique rows in the results. Cannot be used with subqueries that include a GROUP BY clause.</dd>
<dt>
<i>subquery_select_list</i></dt>
<dd>
Is a restricted select list for use with subqueries introduced with IN or a comparison operator. It consists of one expression. If a column name is used in the WHERE clause<i> </i>of the outer statement, a column name in the subquery select list must be join-compatible with it.
<p>
The select list must consist of only one column name except for the EXISTS subquery, in which case an asterisk (*) is usually used in place of the single column name. Do not specify more than one column name or a column of <i>text</i> and <i>image</i> datatype; these are not allowed in subqueries.

</dd>
</dl>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;Simple Subqueries</h5>
<p>
Note that the syntax for EXISTS is somewhat different from the syntax for the other keywords; it does not take an expression between WHERE and itself. In the following examples, the queries, which are semantically equivalent, illustrate the difference.</p>
<pre>SELECT DISTINCT pub_name
FROM publishers
WHERE EXISTS
    (SELECT *
    FROM titles
    WHERE pub_id = publishers.pub_id
    AND type = 'business')
</pre>
<p>
Or</p>
<pre>SELECT distinct pub_name
FROM publishers
WHERE pub_id IN
    (SELECT pub_id
    FROM titles
    WHERE type = 'business')
</pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;Correlated Subquery</h5>
<p>
A correlated (or repeating) subquery depends on the outer query for its values. It is executed repeatedly, once for each row that might be selected by the outer query. Here is an example:</p>
<pre>SELECT DISTINCT au_lname, au_fname
FROM authors
WHERE 100 IN
    (SELECT royaltyper
    FROM titleauthor
    WHERE titleauthor.au_id = authors.au_id)
</pre>
<p>
The subquery in this statement cannot be evaluated independently of the outer query. It needs a value for <i>authors.au_id</i>, but this value changes as SQL Server examines different rows in <i>authors</i>.</p>
<h5>C.&nbsp;&nbsp;&nbsp;&nbsp;Correlated Subquery with GROUP BY and HAVING Greater Than ALL</h5>
<p>
A correlated subquery can also be used in the HAVING clause of an outer query. This example finds the types of books for which the maximum advance is more than twice the average for the group.</p>
<pre>SELECT t1.type
FROM titles t1
GROUP BY t1.type
HAVING MAX(t1.advance) &gt;= ALL
    (SELECT 2 * AVG(t2.advance)
    FROM titles t2
    WHERE t1.type = t2.type)
</pre>
<h5>D.&nbsp;&nbsp;&nbsp;&nbsp;Multiple Correlated Subqueries</h5>
<p>
This example finds the names of authors who have participated in writing at least one popular computing book.</p>
<pre>SELECT au_lname, au_fname
FROM authors
WHERE au_id IN
    (SELECT au_id
    FROM titleauthor
    WHERE title_id IN
        (SELECT title_id
        FROM titles
        WHERE type = 'popular_comp'))
</pre>
<h4>See Also</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%><a href="tsql07_4c1g.htm">DELETE</a></td>
<td width=52%><a href="tsql10_9alw.htm">INSERT</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql08_8dx0.htm">EXECUTE</a></td>
<td width=52%><a href="tsql12_654k.htm">SELECT</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql08_4aur.htm">Expressions</a></td>
<td width=52%><a href="tsql29_6mlw.htm">UPDATE</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql09_9dyr.htm">Functions</a></td>
<td width=52%></td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
