<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Text and Image Data</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_text_and_image_data"></a>Text and Image Data</h2>
<p>
Text and image data consists of character or binary data stored and managed as a linked list of 2K data pages that appear as if they were stored in a table row. A <i>text</i> or <i>image</i> column contains NULL or a pointer (assigned at initialization) to the first text page for that entry, and thus to the entire <i>text</i> or <i>image</i> value. Although <i>text</i> and <i>image</i> datatype definitions do not include length, they do allow null values.</p>
<p>
At least one 2K data page is allocated for each non-null <i>text</i> or <i>image</i> data value. To save storage space, you can insert null values until you use the <i>text</i> or <i>image</i> column. Note that any update (even an update that sets the value to NULL) to a <i>text</i> or <i>image</i> column initializes the column; that is, it assigns a valid text pointer and causes the first 2K data page to be allocated. </p>
<p>
These are the <i>text</i> and <i>image</i> datatypes:
<dl>
<dt>
<i>text</i></dt>
<dd>
Is a variable-length datatype that can hold as many as 2 (31)  - 1 (2,147,483,647) characters. The <i>text</i> definitions do not include a length, and <i>text</i> values must be surrounded by single quotation marks in an INSERT statement. You can use the LIKE keyword and wildcard characters with <i>text</i> data.
<p>
You can explicitly convert <i>text </i>data to <i>char</i> or <i>varchar</i> with the CONVERT function, but the limit is the maximum length of these datatypes, 255 bytes. 

</dd>
<dt>
<i>image</i></dt>
<dd>
Is a variable-length datatype that can hold as many as 2 (31)  - 1 (2,147,483,647) bytes of binary data. The <i>image</i> definitions do not include a length, and <i>image</i> values must be preceded by 0x in an INSERT statement. The <i>image</i> datatype cannot be used for variables or parameters in stored procedures. 
<p>
You can explicitly convert <i>image </i>data to <i>binary</i> or <i>varbinary</i> with the CONVERT function, but the limit is the maximum length of these datatypes (255 bytes).

<p>
When <i>image</i> is data entered with an odd number of bytes (but less than 255), it is padded with a leading zero. For example, an insert of "0xaaabb" becomes "0x0aaabb". You cannot insert <i>image</i> values with an odd number of characters greater than 255 bytes.

</dd>
</dl>
<h3>Using <i>text </i>and <i>image </i>Datatypes </h3>
<p>
To enter <i>text</i> or <i>image</i> data, the column must first be initialized. Initialization causes a 2K data page to be allocated. Initialize the <i>text</i> or <i>image </i>column by providing non-null data with an INSERT statement or any value (including a NULL) with an UPDATE statement. Then use the READTEXT statement to read <i>text</i> or <i>image </i>data, the WRITETEXT statement to replace <i>text</i> or <i>image </i>data, and the UPDATETEXT statement to modify <i>text</i> or <i>image </i>data.</p>
<p>
Using UPDATE to replace existing text and image data with NULL reclaims all allocated data pages except the first page, which remains available for WRITETEXT in the future. To release all storage for the row, first delete the row, and then re-insert the non-<i>text </i>or non-<i>image </i>data.</p>
<p>
SELECT statements return text and image data up to the limit specified in the global variable @@TEXTSIZE. The SET statement (TEXTSIZE option) changes this limit on a session basis. The initial value of @@TEXTSIZE is 4K; the maximum value for @@TEXTSIZE is 2 (31)  - 1 (2,147,483,647).</p>
<p>
<i>Text</i> and <i>image</i> columns cannot be used:
<ul>
<li>
As local variables</li>
<li>
In ORDER BY, COMPUTE, and GROUP BY clauses</li>
<li>
In an index</li>
<li>
In a WHERE clause (with the exception of <i>text</i> data¾<i>text </i>data can be specified with the keyword LIKE in a WHERE clause)</li>
</ul>
<p>
Each table that contains <i>text</i> or <i>image</i> columns has a row in the <i>sysindexes</i> system table. The <i>name</i> column in <i>sysindexes</i> uses the form <i>t&lt;tablename&gt;</i>. The <i>indid</i> is always 255. These columns provide information about text storage:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=16%></th>
<th align=left width=84%></th>
</tr>
<tr valign=top>
<th align=left width=16%></th>
<th align=left width=84%></th>
</tr>
<tr valign=top>
<th align=left width=16%>Column</th>
<th align=left width=84%>Description</th>
</tr>
<tr valign=top>
<td width=16%>Reserved</td>
<td width=84%>Number of pages allocated</td>
</tr>
<tr valign=top>
<td width=16%>Used</td>
<td width=84%>Number of pages used</td>
</tr>
<tr valign=top>
<td width=16%>First</td>
<td width=84%>Pointer to the first page</td>
</tr>
<tr valign=top>
<td width=16%>Segment</td>
<td width=84%>Number of the segment where the object resides</td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
