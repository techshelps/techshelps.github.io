<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DISK INIT Statement</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_disk_init_statement"></a>DISK INIT Statement </h1>
<p>
Creates a device on which a database or multiple databases can be placed. A device is an operating-system file that SQL Server pre-allocates for database use.</p>
<h4>Syntax</h4>
<p>
DISK INIT <br>
&nbsp;&nbsp;&nbsp;&nbsp;NAME <b>= '</b><i>logical_name</i><b>',</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;PHYSNAME <b>= '</b><i>physical_name</i><b>',</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;VDEVNO <b>=</b> <i>virtual_device_number</i><b>,</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;SIZE <b>=</b> <i>number_of_2K_blocks</i><br>
[<b>,</b> VSTART <b>=</b><i> virtual_address</i>]</p>
<p>
where 
<dl>
<dt>
NAME</dt>
<dd>
Is the logical name of the database device. Logical names must correspond to the rules for identifiers and must be enclosed with single quotation marks (<b>'</b>). Identifiers exceeding 30 characters are accepted but truncated to 30 characters. This name is recorded in the <i>name</i> column of the <i>master..sysdevices</i> table, and is used in the CREATE DATABASE, ALTER DATABASE, DISK RESIZE, and many other SQL statements.</dd>
<dt>
PHYSNAME</dt>
<dd>
Is the drive letter, full path, and filename of the database device. Paths for database devices must follow the rules for the operating-system paths and filenames. They must be enclosed with single quotation marks (<b>'</b>).</dd>
<dt>
VDEVNO</dt>
<dd>
Is the virtual device number. This number must be unique among the database devices associated with SQL Server. Values can be from 1 through 255; 0 is reserved for the MASTER database device. </dd>
<dt>
SIZE</dt>
<dd>
Specifies the size, in 2K blocks, of the database device.
<p>
If you are planning to use the new database device to create a new database, the minimum size is 1 MB.
</dd>
<dt>
VSTART</dt>
<dd>
Is the starting virtual address or the starting offset in 2K blocks. The value for VSTART should be 0 (the default). Reset VSTART only if instructed to do so.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The DISK INIT statement takes advantage of the fact that Windows NT creates a file either by zeroing out all bytes (FAT) or by presenting the application immediately with a zeroed image of the file (NTFS).</p>
<p>
Execute DISK INIT once for each new database device. Each time DISK INIT is executed, a row is added to the <i>master..sysdevices</i> table. A new database device does not automatically become part of the pool of default database storage. Assign default status to a database device with the <b>sp_diskdefault</b> system stored procedure.</p>
<p>
Because entries are made in the <i>master..sysdevices</i> table, it is important to back up the <i>master</i> database with the DUMP DATABASE statement after each use of DISK INIT. </p>
<p>
User databases are assigned to specific database devices with the optional ON <i>database_device</i> clause of the CREATE DATABASE or ALTER DATABASE statement, or they are placed on a default device(s).</p>
<p>
The LOG ON extension to CREATE DATABASE is the preferred method for putting a database's transaction log (that is, the <i>sylogs</i> system table) on a device different from the one on which the data is stored. Alternatively, you can name at least two database devices when you create the database and then execute the <b>sp_logdevice</b> system stored procedure. ALTER DATABASE can also be used at any point to add another database device and migrate the log to it with the <b>sp_logdevice</b> system stored procedure.</p>
<p>
<b>Note</b>  The LOG ON extension in CREATE DATABASE immediately moves the entire log to a separate device. The <b>sp_logdevice</b> method retains part of the system log on the original database device until a transaction completes the transfer. Using the LOG ON extension is preferable to using the <b>sp_logdevice</b> system stored procedure.</p>
<p>
For a report on all database devices and dump devices on your system, execute the <b>sp_helpdevice</b> system stored procedure.</p>
<p>
Before removing a database device with the <b>sp_dropdevice</b> system stored procedure, you must first drop all existing databases on that database device.</p>
<p>
<b>Note</b>  The <b>sp_dropdevice</b> system stored procedure does not remove the operating-system file. The physical file can be deleted by using the standard operating-system <b>del</b> command.</p>
<p>
After dropping a database device, you can create a new one with the same information (using DISK INIT) as long as you delete the physical file first.</p>
<p>
To successfully complete disk initialization, the SQL Server process must have the appropriate operating-system permissions to create the file as named by the PHYSNAME parameter. To see the account under which SQL Server is running, use the Control Panel Services icon for the MSSQLServer service.</p>
<h4>Permission</h4>
<p>
DISK INIT permission defaults to the system administrator and is not transferable. </p>
<h4>Example</h4>
<h5>&nbsp;&nbsp;&nbsp;&nbsp;Define Database Devices</h5>
<p>
This example creates a 12 MB (6144 2K pages) device called DEVICE1. This device is created in the same directory as the default SQL Server 6.0 MASTER device.</p>
<pre>DISK INIT
    NAME = 'DEVICE1',
    PHYSNAME = 'c:\sql60\data\device1.dat',
    VDEVNO = 1,
    SIZE = 6144
</pre>
<p>
This example creates a 16 MB (8192 2K pages) device called DEVICE2. This device is created on a different logical drive from DEVICE1. The SQLDATA directory must exist prior to the execution of this statement.</p>
<pre>DISK INIT
    NAME = 'DEVICE2',
    PHYSNAME = 'd:\sqldata\device2.dat',
    VDEVNO = 2,
    SIZE = 8192
</pre>
<p>
This example creates a 125 MB (64,000 2K pages) device called DEVICE3. This device is created on a third logical drive. The SQLDATA directory must exist prior to the execution of this statement.</p>
<pre>DISK INIT
    NAME = 'DEVICE3',
    PHYSNAME = 'e:\sqldata\device3.dat',
    VDEVNO = 3,
    SIZE = 64000
</pre>
<h4>See Also</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%></td>
<td width=52%></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql01_9b04.htm">ALTER DATABASE</a></td>
<td width=52%><a href="tsql11_756c.htm">LOAD</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql02_69ro.htm">CREATE DATABASE</a></td>
<td width=52%><a href="tsql20_009x.htm"><b>sp_diskdefault</b></a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql07_59f8.htm">DISK REFIT</a></td>
<td width=52%><a href="tsql21_8pnp.htm"><b>sp_dropdevice</b></a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql07_1h84.htm">DISK REINIT</a></td>
<td width=52%><a href="tsql22_79id.htm"><b>sp_helpdevice</b></a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql07_68ok.htm">DISK RESIZE</a></td>
<td width=52%><a href="tsql23_6kf9.htm"><b>sp_logdevice</b></a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql08_2zxw.htm">DUMP</a></td>
<td width=52%></td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
