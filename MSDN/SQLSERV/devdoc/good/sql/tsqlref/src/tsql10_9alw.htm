<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INSERT Statement</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_insert_statement"></a>INSERT Statement </h1>
<p>
For SQL Server 6.5 information, see <a href="../../hydra/tsql/src/addnfeat_2u5w.htm">INSERT Statement</a> in <i>What's New for SQL Server 6.5</i>.</p>
<p>
Adds a new row to a table or a view.</p>
<h4>Syntax</h4>
<p>
INSERT [INTO]<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<i>table_name</i> | <i>view_name</i>} [<b>(</b><i>column_list</i><b>)</b>]<br>
{DEFAULT VALUES | <i>values_list</i> | <i>select_statement</i>}</p>
<p>
where
<dl>
<dt>
INTO</dt>
<dd>
Is an optional keyword.</dd>
<dt>
<i>table_name | view_name</i> <b>=</b> </dt>
<dd>
[[<i>database_name</i><b>.</b>]<i>owner</i><b>.</b>]{<i>table_name</i> | <i>view_name</i>}
<p>
Specifies the name of the table or view used in the INSERT statement. If the table or view is not in the current database, use a fully qualified <i>table_name </i>or <i>view_name</i> (<i>database_name</i><b>.</b><i>owner</i><b>.</b><i>object_name</i>). 
</dd>
<dt>
<i>column_list</i></dt>
<dd>
Lists one or more columns to which data is to be added. The columns can be listed in any order, but the incoming data (whether in a <i>values_clause </i>or a <i>select_statement</i>) must be in the same order as the columns.
<p>
The <i>column_list</i> is necessary only when some, but not all, columns in the table are to receive data. You can leave out items in the <i>column_list</i> and <i>values_clause</i> as long as the omitted columns are defined to allow null values or the columns have an associated default (a default or a DEFAULT constraint). 

<p>
Enclose the <i>column_list</i> in parentheses. If <i>column_list </i>is not specified, all columns in the receiving table (in CREATE TABLE order) are assumed to be included.
</dd>
<dt>
DEFAULT VALUES</dt>
<dd>
Inserts the default values for all columns. If the column has the IDENTITY property or the <i>timestamp </i>datatype, the next appropriate value will be inserted. If a default for the column does not exist and the column allows NULLs, NULL will be inserted. If any column of the table does not have a default or does not allow NULL, an error will be returned and the INSERT statement rejected.</dd>
<dt>
<i>values_list</i> <b>=</b> </dt>
<dd>
VALUES <b>(</b>DEFAULT | <i>constant_expression</i> <br>
[<b>,</b> DEFAULT | <i>constant_expression</i>]...<b>)</b> 
<dl>
<dt>
VALUES</dt>
<dd>
Is a required keyword used to introduce the list of values for each column in the <i>column_list</i> or table. </dd>
<dt>
DEFAULT</dt>
<dd>
Inserts the default value for that column. For a column defined with the <i>timestamp </i>datatype, the next value will be inserted. If a default does not exist for the column and the column allows NULLs, NULL will be inserted.
<p>
DEFAULT is not valid for an identity column. Columns with the IDENTITY property should not be explicitly listed in the <i>column_list</i> or <i>values_clause</i>; the value for an identity column should not be explicitly entered. For more information, see the CREATE TABLE statement.
</dd>
<dt>
<i>constant_expression</i></dt>
<dd>
Contains an expression that will evaluate to a constant. The list of values must be enclosed in parentheses and must match the explicit or implicit columns list. Enclose non-numeric constants in quotation marks.</dd>
</dl>
</dd>
<dt>
<i>select_statement</i></dt>
<dd>
Is a standard SELECT statement used to retrieve the values to be inserted from an existing table. For details, see the SELECT statement.
</dd>
</dl>
<h4>Remarks</h4>
<p>
INSERT adds new rows only. To modify column values in existing rows, use UPDATE.</p>
<p>
When inserting rows, these rules apply:
<ul>
<li>
Inserting an empty string (<b>'</b> <b>'</b>) into a <i>varchar</i> or <i>text</i> column inserts a single space. All <i>char</i> columns are right-padded to the defined length.<p>
All trailing spaces are removed from data inserted into <i>varchar</i> columns, except in strings that contain only spaces. These strings are truncated to a single space.
</li>
<li>
If an INSERT statement violates a constraint, default, or rule, or if it is the wrong datatype, the statement fails and SQL Server displays an error message. <p>
Constraints are defined with either the CREATE TABLE or ALTER TABLE statement. Defaults are created with the CREATE DEFAULT statement and rules are created with the CREATE RULE statement. 
</li>
<li>
Inserting a null value into a <i>text</i> or <i>image</i> column does not create a valid text pointer, nor does it preallocate a 2K text page. For details on inserting <i>text </i>and <i>image </i>data, see the text and image<i> </i>Manipulation topic.</li>
<li>
An INSERT statement must follow the rules for a batch. For details, see the Batches topic.</li>
</ul>
<p>
When you specify values for only some of the columns in the <i>column_list</i>, one of three things can happen to the columns that have no values:
<ul>
<li>
A default value is entered if the column has a DEFAULT constraint, if a default is bound to the column, or a default is bound to the underlying user-defined datatype. </li>
<li>
NULL is entered if the column allows NULLs and no default value exists for the column. </li>
<li>
An error message is displayed and the row is rejected if the column is defined as NOT NULL and no default exists.</li>
</ul>
<h4>Permission</h4>
<p>
INSERT permission defaults to the table owner, who can transfer it to other users.</p>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;INSERT Specifying All Column Values</h5>
<p>
This example shows an INSERT into the <i>titles </i>table in the <i>pubs </i>database. All column values are specified in the <i>values_clause</i>.</p>
<pre>INSERT titles
    VALUES('BU2222', 'Faster!', 'business', '1389',
        NULL, NULL, NULL, NULL, 'ok', '06/17/87')
</pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;INSERT with Column Titles</h5>
<p>
This example shows an insert into the <i>titles </i>table in the <i>pubs </i>database. Only the values for the columns listed in the <i>column_list </i>are shown in the <i>values_list</i>.</p>
<pre>INSERT titles(title_id, title, type, pub_id, notes, pubdate)
    VALUES ('BU1237', 'Get Going!', 'business', '1389',
        'great', '06/18/86')
</pre>
<h5>C.&nbsp;&nbsp;&nbsp;&nbsp;INSERT with Nested SELECT</h5>
<p>
This example inserts all rows from the <i>authors</i> table (for authors only in San Francisco) into the <i>newauthors</i> table.</p>
<pre>INSERT INTO newauthors
    SELECT *
        FROM authors
            WHERE city = 'San Francisco'</pre>
<h5>D.&nbsp;&nbsp;&nbsp;&nbsp;INSERT with DEFAULT VALUES</h5>
<p>
This example shows the use (and failure) of the DEFAULT VALUES option for the INSERT statement. </p>
<pre>INSERT publishers DEFAULT VALUES
go
Msg 233, Level 16, State 2
The column pub_id in table publishers may not be null.</pre>
<h5>E.&nbsp;&nbsp;&nbsp;&nbsp;INSERT with the DEFAULT Keyword</h5>
<p>
This example shows the use of DEFAULT as a placeholder to insert the DEFAULT value for a column(s).</p>
<pre>INSERT employee
    VALUES ('KLT91469F', 'Katrina', 'L', 'Thompson', DEFAULT, DEFAULT,
         DEFAULT, '01/14/95')</pre>
<h4>See Also</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%></td>
<td width=52%></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql04_5iwk.htm">CREATE TABLE statement</a></td>
<td width=52%><a href="tsql18_25b9.htm"><b>sp_bindefault</b> system stored procedure</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql04_8rg4.htm">CREATE TRIGGER statement</a></td>
<td width=52%><a href="tsql18_2mhx.htm"><b>sp_bindrule</b> system stored procedure</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql06_2oxi.htm">Datatypes</a></td>
<td width=52%><a href="tsql24_30it.htm"><b>sp_unbindefault</b> system stored procedure</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql07_4c1g.htm">DELETE statement</a></td>
<td width=52%><a href="tsql24_8x9h.htm"><b>sp_unbindrule</b> system stored procedure</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql12_654k.htm">SELECT statement</a></td>
<td width=52%><a href="tsql29_6mlw.htm">UPDATE statement</a></td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
