<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>System Functions</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_system_functions_tsql09"></a>System Functions </h2>
<p>
System functions return special information from the server or database.</p>
<h4>Syntax</h4>
<p>
<i>function_name</i><b>(</b><i>parameters</i><b>)</b></p>
<p>
where
<dl>
<dt>
<i>function_name</i></dt>
<dd>
Specifies a system function. 
<p>
These are the system functions:

<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=21%></th>
<th align=left width=32%></th>
<th align=left width=47%></th>
</tr>
<tr valign=top>
<th align=left width=21%></th>
<th align=left width=32%></th>
<th align=left width=47%></th>
</tr>
<tr valign=top>
<th align=left width=21%>System <br>
function</th>
<th align=left width=32%><br>
Parameters</th>
<th align=left width=47%><br>
Result</th>
</tr>
<tr valign=top>
<td width=21%>COALESCE</td>
<td width=32%><b>(</b><i>expression1</i><b>,</b><i> expression2</i><b>,</b><i> ... expressionN</i><b>)</b></td>
<td width=47%>Returns the first non-null expression. For details, see the CASE statement.</td>
</tr>
<tr valign=top>
<td width=21%>COL_LENGTH</td>
<td width=32%><b>('</b><i>table_name</i><b>',</b> <br>
<b>'</b><i>column_name</i><b>')</b></td>
<td width=47%>The defined length of a column.</td>
</tr>
<tr valign=top>
<td width=21%>COL_NAME</td>
<td width=32%><b>(</b><i>table_id</i><b>,</b> <br>
<i>column_id</i><b>)</b></td>
<td width=47%>The name of the column.</td>
</tr>
<tr valign=top>
<td width=21%>DATALENGTH</td>
<td width=32%><b>('</b><i>expression</i><b>')</b></td>
<td width=47%>The actual length of an <i>expression </i>of any datatype. Because <i>varchar</i>, <i>varbinary</i>, <i>text</i>, and <i>image</i> datatypes can store variable-length data, DATALENGTH is especially useful with those datatypes. The DATALENGTH of any null data returns NULL. For all other datatypes, DATALENGTH reports their defined length (because NON NULL fixed-width character data is always right-padded with spaces).</td>
</tr>
<tr valign=top>
<td width=21%>DB_ID</td>
<td width=32%><b>(</b>[<b>'</b><i>database_name</i><b>'</b>]<b>)</b></td>
<td width=47%>The database identification number.</td>
</tr>
<tr valign=top>
<td width=21%>DB_NAME</td>
<td width=32%><b>(</b>[<i>database_id</i>]<b>)</b></td>
<td width=47%>The database name.</td>
</tr>
<tr valign=top>
<td width=21%>GETANSINULL</td>
<td width=32%><b>(</b>[<b>'</b><i>database_name</i><b>'</b>]<b>)</b></td>
<td width=47%>The default nullability for the database. This function returns 1 when the nullability is the ANSI NULL default. A column or datatype whose nullability is not explicitly defined will be set to allow null values.</td>
</tr>
<tr valign=top>
<td width=21%>HOST_ID</td>
<td width=32%><b>(</b> <b>)</b></td>
<td width=47%>The workstation identification number.</td>
</tr>
<tr valign=top>
<td width=21%>HOST_NAME</td>
<td width=32%><b>(</b> <b>)</b></td>
<td width=47%>The workstation name.</td>
</tr>
<tr valign=top>
<td width=21%>IDENT_INCR</td>
<td width=32%><b>('</b><i>table_or_view</i><b>')</b></td>
<td width=47%>The increment value (returned as <i>numeric</i>(@@MAXPRECISION,0)) specified during creation of an identity column of a table or a view that includes an identity column..</td>
</tr>
<tr valign=top>
<td width=21%>IDENT_SEED</td>
<td width=32%><b>('</b><i>table_or_view</i><b>')</b></td>
<td width=47%>The seed value (returned as <i>numeric</i>(@@MAXPRECISION,0)) specified during creation of an identity column of a table or a view that includes an identity column.</td>
</tr>
<tr valign=top>
<td width=21%>INDEX_COL</td>
<td width=32%><b>('</b><i>table_name</i><b>',</b> <br>
<i>index_id</i><b>,</b> <i>key_id</i><b>)</b></td>
<td width=47%>The indexed column name.</td>
</tr>
<tr valign=top>
<td width=21%>ISNULL</td>
<td width=32%><b>(</b><i>expression</i><b>,</b> <i>value</i><b>)</b></td>
<td width=47%>Replaces NULL entries with the specified <i>value</i>.</td>
</tr>
<tr valign=top>
<td width=21%>NULLIF</td>
<td width=32%><b>(</b><i>expression1</i>, <i>expression2</i><b>)</b></td>
<td width=47%>The resulting expression is NULL when <i>expression1 </i>is equivalent to <i>expression2</i>. For details, see the CASE statement.</td>
</tr>
<tr valign=top>
<td width=21%>OBJECT_ID</td>
<td width=32%><b>('</b><i>object_name</i><b>')</b></td>
<td width=47%>The database object identification number.</td>
</tr>
<tr valign=top>
<td width=21%>OBJECT_NAME</td>
<td width=32%><b>(</b><i>object_id</i><b>)</b></td>
<td width=47%>The database object name.</td>
</tr>
<tr valign=top>
<td width=21%>STATS_DATE</td>
<td width=32%><b>(</b><i>table_id</i>, <i>index_id</i><b>)</b></td>
<td width=47%>The date that the statistics for the specified index (<i>index_id</i>) were last updated.</td>
</tr>
<tr valign=top>
<td width=21%>SUSER_ID</td>
<td width=32%><b>(</b>[<b>'</b><i>login_name</i><b>'</b>]<b>)</b></td>
<td width=47%>The user's login identification number.</td>
</tr>
<tr valign=top>
<td width=21%>SUSER_NAME</td>
<td width=32%><b>(</b>[<i>server_user_id</i>]<b>)</b></td>
<td width=47%>The user's login identification name.</td>
</tr>
<tr valign=top>
<td width=21%>USER_ID</td>
<td width=32%><b>(</b>[<b>'</b><i>user_name</i><b>'</b>]<b>)</b></td>
<td width=47%>The user's database identification number.</td>
</tr>
<tr valign=top>
<td width=21%>USER_NAME</td>
<td width=32%><b>(</b>[<i>user_id</i>]<b>)</b></td>
<td width=47%>The user's database username.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Remarks</h4>
<p>
When the parameter to a system function is optional, the current database, host computer, server user, or database user is assumed. Built-in functions must always be followed by parentheses.</p>
<p>
System functions can be used in the select list, in the WHERE clause, and anywhere an expression is allowed. For more information, see the Expressions topic.</p>
<p>
The system administrator's server user identification number is always 1. Server user identification number -1 is always reserved for a <i>guest</i> account. The user identification number of the database owner is always 1.</p>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;USER_ID Function</h5>
<p>
This example returns Harold's identification number, <i>13</i>.</p>
<pre>SELECT USER_ID('Harold')
</pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;USER_NAME Function</h5>
<p>
This example returns the username for user number 13, <i>Harold</i>.</p>
<pre>SELECT USER_NAME(13)
</pre>
<h5>C.&nbsp;&nbsp;&nbsp;&nbsp;ISNULL Function</h5>
<p>
This example finds the average of the prices of all titles, substituting the value $10.00 for all null entries in the <i>price</i> column of the <i>titles</i> table.</p>
<pre>SELECT AVG(ISNULL(price, $10.00))
    FROM titles
</pre>
<h5>D.&nbsp;&nbsp;&nbsp;&nbsp;COL_LENGTH Function</h5>
<p>
This example finds the length of the <i>title</i> column in the <i>titles</i> table. The <i>x</i> gives a column heading to the result.</p>
<pre>SELECT x = COL_LENGTH('titles', 'title')
</pre>
<h5>E.&nbsp;&nbsp;&nbsp;&nbsp;DATALENGTH Function</h5>
<p>
This example finds the length of the <i>pub_name</i> column in the <i>publishers</i> table.</p>
<pre>SELECT length = DATALENGTH(pub_name), pub_name
    FROM publishers
</pre>
<h5>F.&nbsp;&nbsp;&nbsp;&nbsp;USER_NAME Function in WHERE Clause</h5>
<p>
This example finds the row in <i>sysusers</i> in which the name is equal to the result of applying the system function <i>user_name</i> to user identification number 1.</p>
<pre>SELECT name
    FROM sysusers
        WHERE name = USER_NAME(1)
</pre>
<h5>G.&nbsp;&nbsp;&nbsp;&nbsp;STATS_DATE Function </h5>
<p>
This example returns the date of the last time that the statistics were updated for the specified object (the distribution information was updated).</p>
<pre>SELECT 'Index Name' = i.name, 
    'Statistics Date' = STATS_DATE(i.id, i.indid)
        FROM sysobjects o, sysindexes i
            WHERE o.name = 'employee' AND o.id = i.id
</pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
