<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Stored Procedures - Extended Stored Procedures</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_extended_stored_procedures_tsql14"></a>Stored Procedures–Extended Stored Procedures </h1>
<p>
Extended stored procedures provide a way to dynamically load and execute a function within a dynamic-link library (DLL) in a manner similar to that of a stored procedure, seamlessly extending SQL Server functionality. Actions outside of SQL Server can be easily triggered and external information returned to SQL Server. Return status codes and output parameters (identical to their counterparts in regular stored procedures) are also supported. SQL Server includes system stored procedures that add (<b>sp_addextendedproc</b>), drop (<b>sp_dropextendedproc</b>), and provide information about (<b>sp_helpextededproc</b>) extended stored procedures. </p>
<p>
For better performance, extended stored procedures are implemented as DLLs rather than as separate processes. A separate process requires a context switch as well as additional security overhead. Instead, the DLL is executed by the user thread and is part of the SQL Server process, and therefore shares its address space and Windows NT system security privileges. However, the DLL does not know of, or have direct access to, SQL Server data structures.</p>
<p>
Extended stored procedures are categorized by their use. The categories of extended procedures are:</p>
<h5>Integrated Security</h5>
<p class=indent1>
These are the Integrated Security extended stored procedures:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=46%></td>
<td width=54%></td>
</tr>
<tr valign=top>
<td width=46%><b>xp_enumgroups</b></td>
<td width=54%><b>xp_logininfo</b></td>
</tr>
<tr valign=top>
<td width=46%><b>xp_grantlogin</b></td>
<td width=54%><b>xp_revokelogin</b></td>
</tr>
<tr valign=top>
<td width=46%><b>xp_loginconfig</b></td>
<td width=54%></td>
</tr>
</table><br>
<h5>SQL Mail</h5>
<p class=indent1>
These are the SQL Mail extended stored procedures:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=46%></td>
<td width=54%></td>
</tr>
<tr valign=top>
<td width=46%><b>xp_deletemail</b></td>
<td width=54%><b>xp_sendmail</b></td>
</tr>
<tr valign=top>
<td width=46%><b>xp_findnextmsg</b></td>
<td width=54%><b>xp_startmail</b></td>
</tr>
<tr valign=top>
<td width=46%><b>xp_readmail</b></td>
<td width=54%><b>xp_stopmail</b></td>
</tr>
</table><br>
<h5>General</h5>
<p class=indent1>
These are the general extended stored procedures:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=46%></td>
<td width=54%></td>
</tr>
<tr valign=top>
<td width=46%><b>xp_cmdshell</b></td>
<td width=54%><b>xp_sprintf</b></td>
</tr>
<tr valign=top>
<td width=46%><b>xp_logevent</b></td>
<td width=54%><b>xp_sscanf</b></td>
</tr>
<tr valign=top>
<td width=46%><b>xp_msver</b></td>
<td width=54%></td>
</tr>
</table><br>
<h5>Internal</h5>
<p class=indent1>
A number of additional extended stored procedures exist for internal use by other stored procedures (replication, system, and so on). Although these procedures can be executed separately, they are not guaranteed to be included in future releases.</p>
<h5>User-defined</h5>
<p class=indent1>
Additional extended stored procedures can be created by programmers using Microsoft Open Data Services. For information about creating extended stored procedures, see <i>Microsoft SQL Server Programming Open Data Services</i>.</p>
<p>
An additional level of security is added to the DLL by the SQL Server exception handler, which prevents the entire SQL Server from being stopped if an extended stored procedure causes a protection violation (typically, only that thread would be affected). SQL Server is protected from DLLs that might affect memory or harm the running SQL Server process. However, because SQL Server and all DLLs do share address space, there is always some small risk that a poorly written or insufficiently tested DLL could disrupt the entire system. It is important that the DLL (and all extended stored procedures within it) be well written and tested extensively. For this reason, only the SA can add extended stored procedures (using <b>sp_addextendedproc</b>).</p>
<p>
<b>Important</b>  Because extended stored procedures are external to SQL Server, they must be specified in the case (lowercase for all SQL Server-supplied extended stored procedures) in which they were designed.</p>
<p>
Each of the following sections describe these extended stored procedures. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
