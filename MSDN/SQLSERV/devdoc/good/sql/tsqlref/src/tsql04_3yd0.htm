<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Trigger Limitations</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_trigger_limitations_tsql04"></a>Trigger Limitations</h3>
<p>
It is recommended that a trigger not include SELECT statements that return results to the user, since special handling for these returned results would have to be written into every application in which modifications to the trigger table are allowed. </p>
<p>
You cannot create a trigger on a view.</p>
<p>
You can use the <a href="tsql12_8mt0.htm">SET statement</a> inside a trigger. With SET, the option you invoke remains in effect during the execution of the trigger and then reverts to its former setting when the trigger is completed.</p>
<p>
A <a href="tsql29_212s.htm">TRUNCATE TABLE statement</a> is not caught by a DELETE trigger. Although a TRUNCATE TABLE statement is, in effect, like a DELETE without a WHERE clause (it removes all rows), it is not logged and thus cannot execute a trigger. Since permission for the TRUNCATE TABLE statement defaults to the table owner and is not transferable, only the table owner should be concerned about inadvertently circumventing a DELETE trigger with a TRUNCATE TABLE statement.</p>
<p>
The <a href="tsql27_35ys.htm">WRITETEXT statement</a>, whether logged or unlogged, does not activate a trigger.</p>
<p>&nbsp;</p></body>
</HTML>
