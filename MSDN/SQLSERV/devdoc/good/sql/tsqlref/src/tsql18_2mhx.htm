<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>sp_bindrule System Stored Procedure</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sp_bindrule_system_stored_procedure"></a>sp_bindrule System Stored Procedure </h2>
<p>
Binds a rule to a column or to a user-defined datatype.</p>
<h4>Syntax</h4>
<p>
<b>sp_bindrule</b> <i>rulename</i><b>,</b> <i>objname</i> [<b>,</b> <b>futureonly</b>]</p>
<p>
where
<dl>
<dt>
<i>rulename</i></dt>
<dd>
Is the name of a rule created by the CREATE RULE statement.</dd>
<dt>
<i>objname</i></dt>
<dd>
Specifies the table and column or the user-defined datatype to which the rule is to be bound. If <i>objname</i> is not of the form <b>'</b><i>table.column</i><b>'</b>, it is assumed to be a user-defined datatype. (Quotation marks are required around all system stored procedure parameters that have embedded blanks or punctuation.) By default, existing columns of the user-defined datatype inherit the rule <i>rulename</i> unless a rule has been bound directly to the column.</dd>
<dt>
<b>futureonly</b></dt>
<dd>
Used only when binding a rule to a user-defined datatype, this option prevents existing columns of a user-defined datatype from inheriting the new rule. If <b>futureonly </b>is specified, any existing rule bound to that datatype will be explicitly bound to any existing columns of that datatype that do not already have a rule bound to them.
</dd>
</dl>
<h4>Remarks</h4>
<p>
First use the CREATE RULE statement to create a rule. Then execute the <b>sp_bindrule</b> system stored procedure to bind it to a column or to a user-defined datatype in the current database. You can bind a new rule to a column (although using a CHECK constraint is preferred) or to a user-defined datatype with <b>sp_bindrule</b> without unbinding an existing rule. The old rule is overridden. If a rule is bound to a column with an existing CHECK constraint, all restrictions are evaluated. You cannot bind a rule to a SQL Server - supplied datatype.</p>
<p>
The rule is enforced when an INSERT is attempted, not at binding. You can bind a character rule to a column of numeric datatype, even though such an INSERT is illegal.</p>
<p>
Existing columns of the user-defined datatype inherit the new rule unless they have a rule bound directly to them or the <b>futureonly</b> option is used. New columns of the user-defined datatype always inherit the rule.</p>
<p>
When you bind a rule to a column, information is added to the <i>syscolumns</i> table. When you bind a rule to a user-defined datatype, information is added to the <i>systypes</i> table.</p>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;Bind a Rule to a Column</h5>
<p>
Assuming that a rule named <i>today</i> has been created in the current database by the CREATE RULE statement, this example binds the rule to the <i>startdate</i> column of the <i>employees</i> table. When a row is added to <i>employees</i>, the data for the <i>startdate</i> column is checked against the <i>today</i> rule.</p>
<pre>sp_bindrule today, 'employees.startdate'
</pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;Bind a Rule to a User-defined Datatype</h5>
<p>
Assuming the existence of a rule named <i>rule_ssn</i> and a user-defined datatype named <i>ssn</i>, this example binds <i>rule_ssn</i> to <i>ssn</i>. In a CREATE TABLE statement, columns of type <i>ssn</i> inherit the <i>rule_ssn</i> rule. Existing columns of type <i>ssn</i> also inherit the <i>rule_ssn</i> rule unless you specify the <b>futureonly</b> option (which prevents existing columns of type <i>ssn</i> from inheriting the rule) or <i>ssn</i> has a rule bound directly to it. Rules bound to columns always take precedence over those bound to datatypes.</p>
<pre>sp_bindrule rule_ssn, ssn
</pre>
<h5>C.&nbsp;&nbsp;&nbsp;&nbsp;FUTUREONLY</h5>
<p>
This example binds the <i>rule_ssn</i> rule to the user-defined datatype <i>ssn</i>. Because <b>futureonly</b> is specified, no existing columns of type <i>ssn</i> are affected.</p>
<pre>sp_bindrule rule_ssn, ssn, FUTUREONLY
</pre>
<h4>Permission</h4>
<p>
Execute permission defaults to the object owner.</p>
<h4>Tables Used</h4>
<p>
<i>syscolumns</i>, <i>sysobjects</i>, <i>systypes</i></p>
<h4>See Also</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%><a href="tsql04_2vec.htm">CREATE RULE</a></td>
<td width=52%><a href="tsql24_8x9h.htm"><b>sp_unbindrule</b></a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql07_8pys.htm">DROP RULE</a></td>
<td width=52%></td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
