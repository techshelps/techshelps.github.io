<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Operator Precedence</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_operator_precedence"></a>Operator Precedence</h2>
<p>
When multiple operators are combined, operator precedence becomes an issue. Operator precedence determines which computations or comparisons are performed first. Often, the order can make a significant difference in the resulting value. </p>
<p>
Operators have the following precedence levels:
<ul>
<li>
<i>Primary grouping</i>: <b>(</b> <b>)</b></li>
<li>
<i>Bitwise</i>: ~</li>
<li>
<i>Multiplicative</i>: <b>*</b> <b>/</b> <b>%</b> </li>
<li>
<i>Additive</i>: <b>-</b></li>
<li>
<i>Bitwise</i>: ^</li>
<li>
<i>Bitwise</i>: &amp;</li>
<li>
<i>Bitwise</i>: <b>|</b></li>
<li>
NOT</li>
<li>
AND</li>
<li>
OR</li>
</ul>
<p>
When all operators in an expression are of the same level, the precedence order is left to right. You can change the order of execution with parentheses (primary grouping); the most deeply nested expression is evaluated first.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
