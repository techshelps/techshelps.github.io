<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OPEN Statement</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_open_statement"></a>OPEN Statement</h2>
<p>
Opens a cursor.</p>
<h4>Syntax</h4>
<p>
OPEN c<i>ursor_name</i></p>
<p>
where
<dl>
<dt>
<i>cursor_name</i></dt>
<dd>
Specifies the name of an already-declared cursor. In the case of an INSENSITIVE cursor, this will generate the required temporary table. At the time the cursor is opened, results set membership and ordering are fixed. 


<p>
<b>Note</b>  Membership and ordering are fixed when the cursor is opened; updates and deletes that have been committed against the base tables of the cursor by other users will be reflected in fetches made against all cursors defined without the INSENSITIVE option. This behavior is commonly called <i>keyset-driven</i>. Rows that have been deleted from a results set will appear with NULLs in all variable columns, spaces in all <i>char</i> columns, and default or zero values in all other non-null columns. To differentiate between a deleted row and a row that has been inserted with NULL data values, use the global variable @@FETCH_STATUS after each FETCH is made against the cursor.

</dd>
</dl>
<h4>Remarks</h4>
<p>
Once a cursor has been opened, use the global variable @@CURSOR_ROWS to receive the number of qualifying rows in the last opened cursor. Depending on the number of rows expected in the results set, SQL Server may choose to populate the keyset asynchronously on a separate thread. This allows fetches to proceed immediately, even if the keyset is not fully populated. @@CURSOR_ROWS returns:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=10%>-<i>m</i></td>
<td width=90%>If the cursor is being populated asynchronously. The value returned (-<i>m</i>) refers to the number of rows currently in the keyset.</td>
</tr>
<tr valign=top>
<td width=10%><i>n</i></td>
<td width=90%>If the cursor is fully populated. The value returned (<i>n</i>) refers to the number of rows.</td>
</tr>
<tr valign=top>
<td width=10%>0</td>
<td width=90%>If no cursors have been opened or the last opened cursor has been closed or deallocated.</td>
</tr>
</table><br>
<p>
To set the threshold at which SQL Server will generate keysets asynchronously, use the <b>cursor threshold</b> configuration option. For details, see the <b>sp_configure</b> system stored procedure.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
