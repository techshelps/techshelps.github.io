<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DISK REINIT Statement</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_disk_reinit_statement"></a>DISK REINIT Statement </h1>
<p>
Restores the device entries to the system tables when a device exists (the file is present) and the entry in the <i>sysdevices</i> table no longer exists. This occurs after a damaged <i>master </i>database is restored and the <i>master </i>database is incomplete (databases and devices were added or altered since the last backup of the <i>master</i> database). This is the first step for restoring access to user databases. The DISK REFIT statement completes the recovery.</p>
<h4>Syntax</h4>
<p>
DISK REINIT<br>
&nbsp;&nbsp;&nbsp;&nbsp;NAME <b>=</b> <b>'</b><i>logical_name</i><b>',</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;PHYSNAME <b>=</b> <b>'</b><i>physical_name</i><b>',</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;VDEVNO <b>=</b> <i>virtual_device_number</i><b>,</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;SIZE <b>=</b> <i>number_of_2K_blocks</i><br>
&nbsp;&nbsp;&nbsp;&nbsp;[<b>,</b> VSTART <b>=</b> <i>virtual_address</i>]</p>
<p>
where
<dl>
<dt>
NAME</dt>
<dd>
Specifies the logical name of the database device. Logical names must correspond to the rules for identifiers and must be enclosed with single quotation marks (<b>'</b>). This name is used in the CREATE DATABASE and ALTER DATABASE statements.</dd>
<dt>
PHYSNAME</dt>
<dd>
Specifies the drive letter, full path, and filename of the database device file that already exists. Physical name must follow the rules for your operating system's paths and filenames. It must be enclosed with quotation marks (<b>'</b>).</dd>
<dt>
VDEVNO</dt>
<dd>
Specifies the virtual device number. It must be unique among database devices used by SQL Server. Values can be from 1 through 255; 0 is reserved for the MASTER database device. 

<p>
<b>Note</b>  NAME, PHYSNAME, and VDEVNO do not have to be identical to the device as it was originally created; however, the SIZE parameter must match.

</dd>
<dt>
SIZE</dt>
<dd>
Specifies the size, in 2K blocks, of the database device. The minimum usable size is 512 2K blocks (1 MB).</dd>
<dt>
VSTART</dt>
<dd>
Specifies the starting virtual address or the starting offset in 2K blocks. The value for VSTART should be 0 (the default). Reset it only if instructed to do so.
</dd>
</dl>
<h4>Remarks</h4>
<p>
DISK REINIT is very similar to DISK INIT but does not initialize the disk space.</p>
<p>
<b>Caution</b>  If you give DISK REINIT incorrect information about sizes and attempt to run update operations, you can permanently corrupt your data. SQL Server warns you of potential problems if it can, but be sure to run the suggested checks after issuing DISK REINIT and DISK REFIT.</p>
<p>
If problems occur, you probably did not run DISK REINIT or ran it with inaccurate information. If you recognize discrepancies in the <i>sysusages</i> table, correct them. Correct the <i>sysdevices</i> table by rerunning DISK REINIT and then reissuing DISK REFIT. The system administrator must be in the <i>master</i> database to use DISK REINIT.</p>
<p>
For more information about using DISK REINIT, see the <i>Microsoft SQL Server Administrator's Companion</i>.</p>
<h4>Permission</h4>
<p>
DISK REINIT permission defaults to the system administrator and is not transferable. </p>
<h4>Example</h4>
<p>
DISK REINIT must be run for each device of the database prior to running DISK REFIT. </p>
<pre>DISK REINIT
    NAME = 'DEVICE5',
    PHYSNAME = 'c:\sqldata\device5.dat',
    VDEVNO = 5,
    SIZE = 25600

DISK REINIT
    NAME = 'DEVICE6',
    PHYSNAME = 'd:\sqldata\device6.dat',
    VDEVNO = 6,
    SIZE = 25600
</pre>
<p>
Once all devices have been created, run DISK REFIT.</p>
<pre>DISK REFIT
</pre>
<h4>See Also</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=45%></td>
<td width=55%></td>
</tr>
<tr valign=top>
<td width=45%><a href="tsql01_9b04.htm">ALTER DATABASE</a></td>
<td width=55%><a href="tsql07_3t9w.htm">DISK INIT</a></td>
</tr>
<tr valign=top>
<td width=45%><a href="tsql02_69ro.htm">CREATE DATABASE</a></td>
<td width=55%><a href="tsql07_59f8.htm">DISK REFIT</a></td>
</tr>
<tr valign=top>
<td width=45%><a href="tsql06_0yus.htm">DBCC</a></td>
<td width=55%><a href="tsql22_79id.htm"><b>sp_helpdevice</b></a></td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
