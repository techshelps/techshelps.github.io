<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Batches</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_batches"></a>Batches</h1>
<p>
A batch is a set of SQL statements submitted together and executed as a group. A script is often a series of batches submitted one after the other. A batch is compiled only once as a whole and is terminated by an end-of-batch signal. Because of this, certain restrictions on batch size exist.</p>
<p>
These rules apply to batches:
<ul>
<li>
CREATE DEFAULT, CREATE PROCEDURE, CREATE RULE, CREATE TRIGGER, and CREATE VIEW statements cannot be combined with other statements in a batch. They must be submitted one at a time. </li>
<li>
Rules and defaults cannot be bound to columns and used within the same batch. That is, the <b>sp_bindrule</b> and <b>sp_bindefault</b> system stored procedures cannot be used in the same batch as INSERT statements that invoke the rule or default. </li>
<li>
CHECK constraints follow the same rule as rules and defaults. A table created with CHECK constraints cannot enforce those constraints in the same batch as the definition. </li>
<li>
You cannot drop an object and then reference or re-create it in the same batch.</li>
<li>
You cannot alter a table and then reference the new columns in the same batch.</li>
<li>
Options changed with a SET statement take effect only at the end of the batch. For details, see the <a href="tsql12_8mt0.htm">SET statement</a>. </li>
<li>
You can submit batches through a graphical tool such as the ISQL/w utility, through a command-line utility such as <b>isql</b>, or through files (scripts) passed to <b>isql</b>. A file submitted to <b>isql</b> can include more than one batch of SQL statements if each batch is terminated by the GO command batch separator.</li>
<li>
The SQL Server batch size of 128K limits the maximum amount of explicit data values that can be inserted or updated in a single batch. Since some memory is required for a query's execution plan, the actual size of the data you can insert or update is somewhat less than 128K. For example, you might be able to insert or update one column of 125K or two columns of 60K each. This limit does not apply to <i>text</i> or <i>image</i> data inserted or updated with WRITETEXT or UPDATETEXT, data inserted with the <b>bcp</b> command-line utility, data inserted from another table, or data passed by remote procedure calls.</li>
</ul>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;Multiple SELECTs</h5>
<p>
This example shows multiple selects in one batch. Two results sets will be returned.</p>
<pre>SELECT COUNT(*) FROM titles
SELECT COUNT(*) FROM authors
</pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;Create and Use an Object</h5>
<p>
This example shows a table creation, an insert, and then a select.</p>
<pre>CREATE TABLE test
(
    column1         char(10)            NOT NULL, 
    column2         int                NULL
)
INSERT test
    VALUES ('hello', 598)
SELECT * FROM test
</pre>
<h5>C.&nbsp;&nbsp;&nbsp;&nbsp;INSERT with Constraints in Separate Batches</h5>
<p>
This example shows how batches that include table definition and inserts into the table should be written. First, create the table in a separate batch from the INSERT statements(s), and then place the INSERT(s) in a separate batch. </p>
<p>
This INSERT fails because 1234 is not a valid publisher ID. </p>
<pre>CREATE TABLE publishers
(
pub_id        char(4)            NOT NULL 
    CONSTRAINT UPKCL_pubind PRIMARY KEY CLUSTERED
    CHECK (pub_id in ('1389', '0736', '0877', '1622', '1756')
        OR pub_id like '99[0-9][0-9]'),
pub_name        varchar(40)        NULL,
city            varchar(20)        NULL,
state        char(2)            NULL,
country        varchar(30)        NULL
    DEFAULT    ('USA')
)
go

INSERT publishers (pub_id, pub_name) VALUES('1234', 'Publishers test')
</pre>
<h4>See Also</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%><a href="tsql02_7ddg.htm">CREATE DEFAULT</a></td>
<td width=52%><a href="tsql04_5iwk.htm">CREATE TABLE</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql03_46t0.htm">CREATE INDEX</a></td>
<td width=52%><a href="tsql04_8rg4.htm">CREATE TRIGGER</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql03_412s.htm">CREATE PROCEDURE</a></td>
<td width=52%><a href="tsql05_4kfo.htm">CREATE VIEW</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql04_2vec.htm">CREATE RULE</a></td>
<td width=52%><a href="tsql12_8mt0.htm">SET</a></td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
