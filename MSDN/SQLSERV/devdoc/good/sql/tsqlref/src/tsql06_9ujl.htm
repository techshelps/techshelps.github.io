<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exact Numeric Data</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_exact_numeric_data"></a>Exact Numeric Data</h2>
<p>
Exact numeric data consists of numeric data with accuracy preserved to the least-significant digit. SQL Server 6.0 supports two exact numeric datatypes: <i>decimal</i> and <i>numeric</i>. Both <i>decimal</i> and <i>numeric</i> data can contain an integer component to the left of the decimal point and a fractional component to the right of the decimal point. Exact numeric datatypes are different from the approximate numeric datatypes <i>float</i> and <i>real</i>, which cannot store all decimal numbers with complete accuracy. The <i>decimal</i> and <i>numeric</i> datatypes are identical in the SQL Server 6.0 implementation. Both are provided for ANSI compatibility.</p>
<p>
These are the exact numeric datatypes:
<dl>
<dt>
<i>decimal</i>[<b>(</b><i>p</i>[<b>, </b><i>s</i>]<b>)</b>] and <i>numeric</i>[<b>(</b><i>p</i>[<b>, </b><i>s</i>]<b>)</b>]</dt>
<dd>
Are exact numeric datatypes that hold values from 1038  - 1 through - 1038  - 1. Storage size varies based on the specified precision, and it ranges from a minimum of 2 bytes to a maximum of 17 bytes, as follows:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=38%></th>
<th align=left width=62%></th>
</tr>
<tr valign=top>
<th align=left width=38%></th>
<th align=left width=62%></th>
</tr>
<tr valign=top>
<th align=left width=38%>Precision</th>
<th align=left width=62%>Storage bytes</th>
</tr>
<tr valign=top>
<td width=38%>1 - 2</td>
<td width=62%>2</td>
</tr>
<tr valign=top>
<td width=38%>3 -4</td>
<td width=62%>3</td>
</tr>
<tr valign=top>
<td width=38%>5-7</td>
<td width=62%>4</td>
</tr>
<tr valign=top>
<td width=38%>8-9</td>
<td width=62%>5</td>
</tr>
<tr valign=top>
<td width=38%>10-12</td>
<td width=62%>6</td>
</tr>
<tr valign=top>
<td width=38%>13-14</td>
<td width=62%>7</td>
</tr>
<tr valign=top>
<td width=38%>15-16</td>
<td width=62%>8</td>
</tr>
<tr valign=top>
<td width=38%>17-19</td>
<td width=62%>9</td>
</tr>
<tr valign=top>
<td width=38%>20-21</td>
<td width=62%>10</td>
</tr>
<tr valign=top>
<td width=38%>22-24</td>
<td width=62%>11</td>
</tr>
<tr valign=top>
<td width=38%>25-26</td>
<td width=62%>12</td>
</tr>
<tr valign=top>
<td width=38%>27-28</td>
<td width=62%>13</td>
</tr>
<tr valign=top>
<td width=38%>29-31</td>
<td width=62%>14</td>
</tr>
<tr valign=top>
<td width=38%>32-33</td>
<td width=62%>15</td>
</tr>
<tr valign=top>
<td width=38%>34-36</td>
<td width=62%>16</td>
</tr>
<tr valign=top>
<td width=38%>37-38</td>
<td width=62%>17</td>
</tr>
</table><br>


<p>
<i>Precision</i> (<i>p</i>) specifies the maximum total number of decimal digits that can be stored, both to the left and to the right of the decimal point. <i>Scale</i> (<i>s</i>) specifies the maximum number of decimal digits that can be stored to the right of the decimal point, and it must be less than or equal to the precision.

<p>
Specify the precision with <i>p</i>, which must be a value from 1 through the maximum precision, and the scale with <i>s</i>, which must be a value from 0 through <i>p</i>. SQL Server normally supports a maximum precision of 28 digits for compatibility with limits of various front ends, such as Microsoft Visual Basic. However, if a precision greater than 28 is needed, use the <b>/p</b> parameter with SQLSERVR.EXE. For more information on running SQLSERVR.EXE, see the Utilities and Executables topic. If you do not specify the precision, SQL Server uses a default precision of 18. If you do not specify the scale, SQL Server uses a default scale of 0.

</dd>
</dl>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
