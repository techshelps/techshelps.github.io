<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>sp_datatype_info Catalog Stored Procedure</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sp_datatype_info_catalog_stored_procedure"></a>sp_datatype_info Catalog Stored Procedure </h2>
<p>
For SQL Server 6.5 information, see <a href="../../hydra/tsql/src/addsproc_5qlr.htm"><b>sp_datatype_info</b></a> in <i>What's New for SQL Server 6.5</i>.</p>
<p>
Returns information about the datatypes supported by the current environment.</p>
<h4>Syntax</h4>
<p>
<b>sp_datatype_info</b> [<i>data_type</i>]</p>
<p>
where
<dl>
<dt>
<i>data_type</i></dt>
<dd>
Is the code number for the specified datatype. The value supplied should be an integer value. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>sp_datatype_info</b> catalog stored procedure is equivalent to <b>SQLGetTypeInfo</b> in ODBC. The results returned are ordered by DATA_TYPE and then by how closely the datatype maps to the corresponding ODBC SQL data type.</p>
<p>
This is the results set:</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=31%></th>
<th align=left width=20%></th>
<th align=left width=49%></th>
</tr>
<tr valign=top>
<th align=left width=31%></th>
<th align=left width=20%></th>
<th align=left width=49%></th>
</tr>
<tr valign=top>
<th align=left width=31%>Column</th>
<th align=left width=20%>Datatype</th>
<th align=left width=49%>Description</th>
</tr>
<tr valign=top>
<td width=31%></td>
<td width=20%></td>
<td width=49%></td>
</tr>
<tr valign=top>
<td width=31%>TYPE_NAME</td>
<td width=20%><i>varchar</i>(30)</td>
<td width=49%>Is a DBMS-dependent datatype name (the same as the TYPE_NAME column in the <b>sp_columns </b>results set).</td>
</tr>
<tr valign=top>
<td width=31%>DATA_TYPE</td>
<td width=20%><i>smallint</i></td>
<td width=49%>Is a code for the ODBC type to which all columns of this type are mapped.</td>
</tr>
<tr valign=top>
<td width=31%>PRECISION</td>
<td width=20%><i>int</i></td>
<td width=49%>Is the maximum precision of the datatype on the data source. NULL is returned for datatypes where precision is not applicable.</td>
</tr>
<tr valign=top>
<td width=31%>LITERAL_PREFIX</td>
<td width=20%><i>varchar</i>(32)</td>
<td width=49%>Are character(s) used before a literal. For example, a single quotation mark (<b>'</b>) for character types and 0x for binary in SQL Server.</td>
</tr>
<tr valign=top>
<td width=31%>LITERAL_SUFFIX</td>
<td width=20%><i>varchar</i>(32)</td>
<td width=49%>Are character(s) used to terminate a literal. For example, a single quotation mark (<b>'</b>) for character types and none for binary.</td>
</tr>
<tr valign=top>
<td width=31%>CREATE_PARAMS</td>
<td width=20%><i>varchar</i>(32)</td>
<td width=49%>Is a description of the creation parameters for this datatype. For example, <i>decimal</i> is <b>"</b>precision, scale<b>"</b>,<i> float</i> is NULL, and <i>varchar</i> is <b>"</b>max_length<b>"</b>.</td>
</tr>
<tr valign=top>
<td width=31%>NULLABLE</td>
<td width=20%><i>smallint</i></td>
<td width=49%>Specifies nullability. 1 means this datatype can be created allowing null values; 0 means null values are not allowed.</td>
</tr>
<tr valign=top>
<td width=31%>CASE_SENSITIVE</td>
<td width=20%><i>smallint</i></td>
<td width=49%>Specifies case sensitivity. 1 means all columns of this type are case-sensitive (for collations); 0 means they are case-insensitive.</td>
</tr>
<tr valign=top>
<td width=31%>SEARCHABLE</td>
<td width=20%><i>smallint</i></td>
<td width=49%>Is a column type. 1 means columns of this type can be used in a WHERE clause.</td>
</tr>
<tr valign=top>
<td width=31%>UNSIGNED_ATTRIBUTE</td>
<td width=20%><i>smallint</i></td>
<td width=49%>Specifies the sign of the datatype. 1 means the datatype is unsigned; 0 means the datatype is signed.</td>
</tr>
<tr valign=top>
<td width=31%>MONEY</td>
<td width=20%><i>smallint</i></td>
<td width=49%>Specifies the <i>money</i> datatype. 1 means it is a <i>money</i> datatype; 0 means it is not.</td>
</tr>
<tr valign=top>
<td width=31%>AUTO_INCREMENT</td>
<td width=20%><i>smallint</i></td>
<td width=49%>Specifies auto-incrementing. 1 means the datatype is auto-incrementing; 0 means the datatype is not. NULL is returned if the attribute is not applicable to the datatype. An application can insert values into a column that has this attribute, but it cannot update the values in the column. This attribute is valid only for numeric datatypes.</td>
</tr>
<tr valign=top>
<td width=31%>LOCAL_TYPE_NAME</td>
<td width=20%><i>varchar</i>(128)</td>
<td width=49%>Is the localized version of the data source-dependent name of the datatype. For example, DECIMAL is DECIMALE in French. NULL is returned if a localized name is not supported by the data source.</td>
</tr>
<tr valign=top>
<td width=31%>MINIMUM_SCALE</td>
<td width=20%><i>smallint</i></td>
<td width=49%>Is the minimum scale of the datatype on the data source. If a datatype has a fixed scale, the MINIMUM_SCALE and MAXIMUM_SCALE columns both contain this value. NULL is returned where scale is not applicable. For more information, see the Datatypes topic.</td>
</tr>
<tr valign=top>
<td width=31%>MAXIMUM_SCALE</td>
<td width=20%><i>smallint</i></td>
<td width=49%>Is the maximum scale of the datatype on the data source. If the maximum scale is not defined separately on the data source, but is instead defined to be the same as the maximum precision, this column contains the same value as the PRECISION column. For more information, see the Datatypes topic.</td>
</tr>
<tr valign=top>
<td width=31%>USERTYPE</td>
<td width=20%><i>smallint</i></td>
<td width=49%>The identifier for the datatype. In SQL Server 6.0, this is the <i>uid </i>of the datatype from the <i>syscomments</i> table.</td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
