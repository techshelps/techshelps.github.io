<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Temporary Tables</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_temporary_tables"></a>Temporary Tables </h3>
<p>
SQL Server supports two types of temporary tables: local and global. A local temporary table is visible only to the connection that created it. A global temporary table is available to all connections. Local temporary tables are automatically dropped at the end of the current session. Global temporary tables are dropped at the end of the last session using the table (normally, this is when the session that created the table ends).</p>
<p>
Temporary tables named with # and ## can be created by any user. Once the temporary table is created, the owner of the local table is the only one who can access that table. Permissions cannot be granted on local temporary tables. Once a global temporary table is created, all users can access it; permissions cannot be explicitly revoked. Explicitly creating a temporary table in <i>tempdb </i>(named without a pound sign) can be performed only by those with explicit CREATE TABLE permission in the <i>tempdb </i>database. Permission can be granted to and revoked from these tables. </p>
<p>
Because temporary tables are not generally maintained for long (they are automatically dropped by the system), because referenced objects could be dropped (drop dependencies), and because FOREIGN KEY constraints are not enforced, a simplified CREATE TABLE syntax can be used:</p>
<p>
CREATE TABLE #[#]<i>table_name</i> <br>
(<i>column_definition </i><br>
&nbsp;&nbsp;&nbsp;&nbsp;[<b>,</b> <i>next_column_definition</i>]...)</p>
<p>
<b>Note</b>  In addition to naming a temporary table with # or ##, temporary tables can be created without the pound sign by qualifying the table name with <i>tempdb</i> as the database. If created in <i>tempdb</i>, the table will exist until SQL Server is restarted.</p>
<p>
Stored procedures can reference temporary tables that are created during the current session. If a temporary table is created by a stored procedure or created within an EXECUTE statement, it is deleted when the procedure or EXECUTE is completed. Within a stored procedure, you cannot create a temporary table, drop it, and then create a new temporary table that has the same name.</p>
<p>
If user-defined datatypes are used within a temporary table's definition, the user-defined datatypes must first be added to <i>tempdb</i>. There are two ways to add a user-defined datatype (or any other object) to the <i>tempdb</i> database:
<ul>
<li>
To add an object for the current session only, execute the <b>sp_addtype</b> system stored procedure while using <i>tempdb</i>.</li>
<li>
To permanently add a user-defined datatype, execute the <b>sp_addtype</b> system stored procedure in the <i>model</i> database and then restart SQL Server so that <i>model</i> is copied to <i>tempdb</i>.</li>
</ul>
<p>
If you execute system stored procedures from within the <i>tempdb</i> database, system stored procedures such as the <b>sp_help</b> system stored procedure will work only on temporary tables.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
