<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CREATE DATABASE Statement</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_create_database_statement"></a>CREATE DATABASE Statement</h1>
<p>
Creates a new database. You must be in the <i>master</i> database to create a new database.</p>
<h4>Syntax</h4>
<p>
CREATE DATABASE <i>database_name</i><br>
[ON {DEFAULT | <i>database_device</i>} [<b>=</b> <i>size</i>]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[<b>,</b><i> database_device</i> [<b>=</b> <i>size</i>]]...]<br>
[LOG ON <i>database_device</i> [<b>=</b> <i>size</i>]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[<b>,</b> <i>database_device</i> [<b>=</b> s<i>ize</i>]]...]<br>
[FOR LOAD]</p>
<p>
where
<dl>
<dt>
<i>database_name</i></dt>
<dd>
Is the name of the new database. Database names must conform to the rules for identifiers.</dd>
<dt>
ON</dt>
<dd>
Indicates that you will specify a location and (optionally) a size for the database.</dd>
<dt>
DEFAULT</dt>
<dd>
Indicates that CREATE DATABASE can put the new database on any default database device(s) shown in the <i>sysdevices </i>table. To specify a size for the database without specifying a location, use ON DEFAULT <b>=</b> <i>size</i>. To change the status of a database device to default, use the <a href="tsql20_009x.htm"><b>sp_diskdefault</b> system stored procedure</a>. </dd>
<dt>
<i>database_device</i></dt>
<dd>
Is the logical name of the database device on which you want to put a database. A database can occupy different amounts of space on each of several database devices. To create a device, use the <a href="tsql07_3t9w.htm">DISK INIT statement</a>. </dd>
<dt>
<i>size</i></dt>
<dd>
Specifies the amount of space, in megabytes, allocated to the database. A database can range from 1 to 2^24 MB. 
<p>
When an explicit value is not supplied, SQL Server will use the larger value between the size of the <i>model </i>database or the configured <b>database size </b>(configured with <b>sp_configure</b>). For example, if <b>database size</b> is configured to 2 (the default) and the <i>model</i> database has been altered to 3MB, the database will be 3MB.
</dd>
<dt>
LOG ON</dt>
<dd>
Is the name of the device that stores the database log. You can specify more than one device in the LOG ON clause.</dd>
<dt>
FOR LOAD</dt>
<dd>
Prevents anyone from using the database between the CREATE DATABASE, ALTER DATABASE, and LOAD statements. FOR LOAD can also be specified with the <a href="tsql01_9b04.htm">ALTER DATABASE statement</a>, but only if the database was created with FOR LOAD.
<p>
When a database is created with FOR LOAD, SQL Server ensures that only the database owner, by setting the database to <b>dbo use only</b>,<b> </b>can use the database. After the database has been loaded, you can change the database option by using the <b>sp_dboption</b> system stored procedure.


<p>
<b>Note</b>  This capability is similar to that provided in SQL Server 4.21a via trace flag 1802, but FOR LOAD guarantees that only the database owner can use the database between the CREATE and LOAD statements.


</dd>
</dl>
<h4>Remarks</h4>
<p>
When the CREATE DATABASE statement is executed, SQL Server makes a copy of the <i>model</i> database (the database catalog). You can update the <i>model</i> database just like any other database and add your own tables, stored procedures, user-defined datatypes, and so on. </p>
<p>
In SQL Server 6.0, CREATE DATABASE is intelligent during the initialization of the device(s) on which the database will reside. When executing a CREATE DATABASE statement, SQL Server determines whether the devices are newly created. If the devices have not previously contained data, the devices will not be reinitialized.</p>
<p>
SQL Server can manage up to 32,767 databases, each of which can be up to 1 TB in size. Each database can have a maximum of 32 device fragments. Each time you use CREATE DATABASE or ALTER DATABASE to allocate space on a database device, that allocation represents a device fragment and is entered as a row in the <i>sysusages</i> system table.</p>
<p>
The total number of physical devices that can be used or the total size of each logical device is not limited (this is limited by the physical device(s) used, with an absolute maximum of 32 GB for each logical device). Instead, only the total number of logical device fragments is limited. Each device fragment can actually exist on one or more physical devices if some form of hardware or software striping is used. Whenever possible, it is recommended that striping is used. Striping can provide performance improvements and, in some cases, fault tolerance. For more information, see the <i>Microsoft SQL Server Administrator's Companion</i>. </p>
<p>
If you don't specify a location and size for a database, the default location is any default database device, and the default size is the size of the <i>model</i> database or the configuration setting for <b>database size</b>. To display available devices, use the <b>sp_helpdevice</b> system stored procedure. To see configuration settings, use the <b>sp_configure</b> system stored procedure.</p>
<p>
If SQL Server can't give as much space as you've requested, SQL Server creates the database, allocating as much space as possible (in 0.5-MB increments) on each database device, and then prints a message showing how much space was allocated and where.</p>
<p>
Each new database inherits its database option settings from the <i>model</i> database. For example, the database option <b>select into/bulkcopy</b> is originally set to "off." You can change that setting for each newly created database by using the <b>sp_dboption</b> system stored procedure in the <i>model</i> database.</p>
<p>
It is important to back up the <i>master</i> database with the <a href="tsql08_2zxw.htm">DUMP DATABASE statement</a> after each use of CREATE DATABASE. This makes recovery easier and safer in case the <i>master</i> database is damaged. (If you create a database and fail to back up <i>master</i>, you may be able to recover the changes with the <a href="tsql07_59f8.htm">DISK REFIT statement</a>.) </p>
<p>
To display a report on a database or on all the databases on a SQL Server, execute the <a href="tsql22_0nl1.htm"><b>sp_helpdb</b> system stored procedure</a>. For a report on the space used in a database, use the <a href="tsql24_03mt.htm"><b>sp_spaceused </b>system stored procedure</a>. </p>
<h3>Using the LOG ON Clause</h3>
<p>
For full recoverability, place the transaction log on a different physical device or devices from the device that stores the data. If a disk crashes, you can recover the database from database dumps and from the transaction log dumps. Although you can create a database on a single device and store the transaction log together with the rest of the database, this is not recommended because you would have to rely solely on the DUMP DATABASE statement for recovery.</p>
<p>
<b>Note</b>  If you do not create the database with the LOG ON option, you can still move the transaction log later by using the <a href="tsql23_6kf9.htm"><b>sp_logdevice </b>system stored procedure</a>. </p>
<p>
The size of the database device required for the transaction log varies according to the amount of update activity and the frequency of transaction log dumps. As a rule, allocate to the transaction log 10 to 25 percent of the space you allocate to the database. It is best to start small, since space allocated to a transaction log database device cannot be reclaimed and cannot be used for storage of data.</p>
<h4>Permission</h4>
<p>
CREATE DATABASE permission defaults to the system administrator, who can transfer it. However, CREATE DATABASE permission is often centralized to maintain control over disk allocation. CREATE DATABASE permission is not included when you use the <a href="tsql10_95ys.htm">GRANT statement</a>. For more information, see the <i>Microsoft SQL Server Administrator's Companion</i>.</p>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;Create a Single Database on a Single Device</h5>
<p>
This example creates a 12-MB database called <i>testing </i>on DEVICE1.</p>
<pre>CREATE DATABASE testing
ON DEVICE1 = 12</pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;Create a Single Database on Two Devices ¾ Separate Data and Log</h5>
<p>
This example creates a single database (<i>sales</i>) with the data portion on DEVICE3<i> </i>and the log portion on DEVICE4. </p>
<pre>CREATE DATABASE sales
ON DEVICE3 = 125
LOG ON DEVICE4 = 60
</pre>
<h5>C.&nbsp;&nbsp;&nbsp;&nbsp;Create a Database FOR LOAD</h5>
<p>
This example creates a single database (<i>personnel</i>) with the data portion spanning three devices (DEVICE5, DEVICE6, and DEVICE7)<i> </i>and the log portion on DEVICE8. The total database size is 200 MB composed of 150 MB for data and 50 MB for log. </p>
<pre>CREATE DATABASE personnel
ON DEVICE5 = 50, DEVICE6 = 50, DEVICE7 = 50
LOG ON DEVICE8 = 50
FOR LOAD
go
</pre>
<h4>See Also</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%></td>
<td width=52%></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql01_9b04.htm">ALTER DATABASE</a></td>
<td width=52%><a href="tsql22_0nl1.htm"><b>sp_helpdb</b></a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql07_3t9w.htm">DISK INIT</a></td>
<td width=52%><a href="tsql23_6kf9.htm"><b>sp_logdevice</b></a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql07_0rg4.htm">DROP DATABASE</a></td>
<td width=52%><a href="tsql24_10x1.htm"><b>sp_renamedb</b></a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql18_6m3p.htm"><b>sp_changedbowner</b></a></td>
<td width=52%><a href="tsql24_03mt.htm"><b>sp_spaceused</b></a></td>
</tr>
<tr valign=top>
<td width=48%><a href="tsql20_009x.htm"><b>sp_diskdefault</b></a></td>
<td width=52%></td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
