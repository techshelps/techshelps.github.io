<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ROLLBACK TRANSACTION Statement</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_rollback_transaction_statement"></a>ROLLBACK TRANSACTION Statement </h2>
<p>
Rolls back a user-specified transaction to the last savepoint inside a transaction or to the beginning of a transaction.</p>
<h4>Syntax</h4>
<p>
ROLLBACK TRANsaction [<i>transaction_name</i> | <i>savepoint_name</i>]</p>
<p>
where
<dl>
<dt>
<i>transaction_name</i></dt>
<dd>
Is the name assigned to the transaction. The <i>transaction_name </i>must conform to the rules for identifiers. Use transaction names only on the outermost pair of nested BEGIN... COMMIT or BEGIN...ROLLBACK statements. </dd>
<dt>
<i>savepoint_name</i></dt>
<dd>
Is the name assigned to the savepoint. The <i>savepoint_name </i>must conform to the rules for identifiers. Use savepoint names only when a conditional rollback should affect only part of the transaction. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
ROLLBACK TRANSACTION, without a <i>savepoint_name</i> or <i>transaction_name</i>, will roll back to the beginning of the transaction. When nesting transactions, a ROLLBACK TRANSACTION statement, without a <i>transaction_name</i> or <i>savepoint_name</i>, always rolls back statements to the outermost BEGIN TRANSACTION statement and cancels the transaction. All the transaction's statements or procedures are undone. A transaction cannot be rolled back after a COMMIT TRANSACTION statement is executed.</p>
<p>
Within a transaction, duplicate <i>savepoint_names</i> are allowed, but when used with ROLLBACK TRANSACTION, only the first instance of a <i>savepoint_name</i> is used.</p>
<p>
In triggers or stored procedures, ROLLBACK TRANSACTION statements, without a <i>savepoint_name</i> or <i>transaction_name</i>, roll back all statements to the first BEGIN TRANSACTION in the batch that called the procedure or fired the trigger. A ROLLBACK TRANSACTION statement in a stored procedure or trigger that rolls back past more than one BEGIN TRANSACTION statement produces an error message indicating the number of nesting levels affected. This message (level 16) does not affect subsequent processing.</p>
<p>
The rollback also affects all data modification statements issued from within the trigger. The statements executed as a result of the trigger firing and the transaction that attempted the data modification against the table are treated as an atomic unit by the rollback. Remember that the entire transaction is terminated if the rollback is issued from within a trigger. Also note that upon entering the trigger, the global variable @@TRANCOUNT is incremented, in spite of the lack of a BEGIN TRANSACTION statement. (The system treats a trigger as an implied transaction.)</p>
<p>
ROLLBACK TRANSACTION statements in stored procedures do <i>not</i> affect subsequent statements in the batch that called the procedure; subsequent statements in the batch are executed. ROLLBACK TRANSACTION statements in triggers "undo" the modification attempted (that fired the trigger), and subsequent statements in the batch are not executed.</p>
<p>
A ROLLBACK TRANSACTION statement does not produce any messages to the user. If warnings are needed in stored procedures, use the <a href="tsql11_6stw.htm">RAISERROR statement</a> or the <a href="tsql11_6gl0.htm">PRINT statement</a>. The RAISERROR statement is the preferred method for sending errors.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
