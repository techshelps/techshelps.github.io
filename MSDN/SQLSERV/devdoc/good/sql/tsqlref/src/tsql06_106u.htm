<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Character Data</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_character_data_tsql06"></a>Character Data</h2>
<p>
Character data consists of any combination of letters, symbols, and numbers. When entered, character data must be enclosed with single quotation marks (<b>'</b>). If numbers are stored as character data, they must be converted to a numeric datatype (<i>decimal</i>, <i>float</i>, <i>int</i>, <i>money</i>, <i>numeric</i>, <i>real</i>, <i>smallint</i>, <i>smallmoney</i>, or <i>tinyint</i>) before you can use them in calculations. If the value of the string is the null value, do not enclose NULL in single quotation marks (<b>'</b>). To supply the null value, use the keyword NULL during INSERT or UPDATE.</p>
<p>
<b>Note</b>  An empty string is not considered the same as NULL. An empty string with no characters, supplied as <b>'</b> <b>'</b>, will insert a single blank space.</p>
<p>
These are the character datatypes:
<dl>
<dt>
<i>char</i>[<b>(</b><i>n</i><b>)</b>]</dt>
<dd>
Is a datatype that holds a maximum of 255 characters. Specify the maximum length with <i>n</i>. The <i>char </i>datatype can contain 0 characters, but when specified, <i>n</i> must be a value from 1 through 255. Storage size is <i>n</i> regardless of the actual length of the entry. 
<p>
Choose <i>char </i>when you think the data entries in the column will be consistently close to the same size. Columns of type <i>char</i> are accessed somewhat faster than <i>varchar </i>columns because they use a fixed storage length (<i>n</i>).


<p>
<b>Note</b>  When the <i>char </i>datatype is used with the ALTER TABLE or CREATE TABLE statement, a column defined as NULL will be handled as a <i>varchar </i>column.

</dd>
<dt>
<i>varchar</i>[<b>(</b><i>n</i><b>)</b>]</dt>
<dd>
Is a datatype that holds a maximum of 255 characters. Specify the maximum length with <i>n</i>. The <i>varchar</i> datatype can contain 0 characters, but <i>n</i> must be a value from 1 through 255. Storage size is not fixed with a <i>varchar </i>column. Instead, storage is defined by the actual size of the data entered (ignoring all trailing blanks).
<p>
Choose <i>varchar</i> when you expect null values or a wide variation in data size.


</dd>
</dl>
<p>
<b>Important</b>  When <i>n</i> is not specified in a data definition statement (such as CREATE TABLE) or in a variable declaration, the length supplied is 1 (the ANSI-standard). When <i>n</i> is not specified with the CONVERT function, SQL Server determines the appropriate value of <i>n </i>based on the length of the data being converted.</p>
<p>
If the data entered is too long for the specified datatype, <i>char</i> and <i>varchar</i> entries are truncated. Similarly, if you enter strings that are shorter than the maximum length, <i>char </i>columns that do not allow null values and <i>char </i>variables will be padded with trailing blanks; <i>char </i>columns that allow null values and <i>varchar </i>columns or variables will not store trailing blanks. This is important when using the LIKE comparison operator with <i>varchar </i>and <i>char </i>strings. Other comparison operators, such as the equal sign (<b>=</b>), always right-pad the shorter string with blanks before comparing. For more information, see the Search Conditions and Wildcard Characters topics.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
