<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FETCH Statement</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_fetch_statement"></a>FETCH Statement </h2>
<p>
For more information about how SQL Server 6.5 affects existing database systems and for updated SQL Server 6.5 syntax, see <a href="../../hydra/tsql/src/addnfeat_0mus.htm">FETCH Statement</a> in the "What's New for SQL Server 6.5".</p>
<p>
Retrieves a specific row from the cursor.</p>
<p>
FETCH [[NEXT | PRIOR | FIRST | LAST | ABSOLUTE <i>n</i> | RELATIVE <i>n</i>] FROM] <i>cursor_name <br>
</i>[INTO <i>@variable_name1</i><b>,</b> <i>@variable_name2</i><b>,</b> ...]</p>
<p>
where
<dl>
<dt>
NEXT</dt>
<dd>
Returns the first row of the results set if this is the first fetch against the cursor; otherwise, it moves the cursor one row within the results set. NEXT is the primary method used to move through a results set. NEXT is the default cursor fetch.

<p>
<b>Note</b>  PRIOR, FIRST, LAST, ABSOLUTE <i>n</i>, and RELATIVE <i>n</i> are available only with cursors defined with the SCROLL option.

</dd>
<dt>
PRIOR</dt>
<dd>
Returns the previous row within the results set.</dd>
<dt>
FIRST</dt>
<dd>
Moves the cursor to the first row within the results set and returns the first row.</dd>
<dt>
LAST</dt>
<dd>
Moves the cursor to the last row within the results set and returns the last row.</dd>
<dt>
ABSOLUTE <i>n</i></dt>
<dd>
Returns the <i>n</i>th row within the results set. If <i>n</i> is a negative value, the returned row will be the <i>n</i>th row counting backward from the last row of the results set.</dd>
<dt>
RELATIVE <i>n</i></dt>
<dd>
Returns the <i>n</i>th row after the currently fetched row. If <i>n</i> is a negative value, the returned row will be the <i>n</i>th row counting backward from the relative position of the cursor.</dd>
<dt>
FROM <i>cursor_name</i></dt>
<dd>
Defines the cursor from which the fetch should be made. Multiple cursors are allowed within any session provided that each has a unique name.</dd>
<dt>
INTO <i>@variable_name1</i><b>,</b> <i>@variable_name2</i><b>,</b><i> </i>...</dt>
<dd>
Allows data returned within a fetch to be placed into local variables. Each of the variables must match the datatype. Errors will occur when the datatypes are incompatible. Implicit datatype conversions are not provided here.
</dd>
</dl>
<p>
A global variable, @@FETCH_STATUS<i>,</i> will be updated at every execution of FETCH. At a successful fetch, @@FETCH_STATUS will be set to 0. If no data was fetched because the requested cursor position exceeded the results set, -1 will be returned. If the row returned is no longer a member of the results set (for example, the row was deleted from the base table after the cursor was opened), @@FETCH_STATUS will return -2. Always use this to determine the validity of the data returned from a cursor fetch prior to attempting any operation against that data.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
