<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Database Upgrade Failures</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_database_upgrade_failures"></a>Database Upgrade Failures</h1>
<p>
When a SQL Server is upgraded to version 6.0, all of its databases are automatically upgraded by the <b>setup</b> program. However, under some conditions it may not be possible to upgrade a particular database to version 6.0. This can occur, for example:
<ul>
<li>
When the database name is a SQL Server 6.0 reserved word or keyword</li>
<li>
When the database is set to read-only or offline</li>
</ul>
<p>
<b>Note</b>  You should always run the <b>chkupg</b> utility prior to upgrading. This utility detects these conditions, allowing you to correct them prior to upgrading. For information on using <b>chkupg</b>, see Chapter 4, <a href="setup04_8dri.htm">Server Installation</a>. </p>
<p>
When one of these conditions is encountered during a server upgrade a message is displayed. After the server upgrade completes you can determine the affected database by reviewing all the report files (files ending in the .OUT filename extension), correct the condition that prevented the database upgrade, and then use the <b>sp_db_upgrade</b> system procedure to upgrade the database to version 6.0.</p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To upgrade a database</h5>
<ol>
<li>
Determine the affected database by reviewing the .OUT files.<p>
Report files ending in the .OUT filename extension are stored in the \SQL60\INSTALL directory. Review all .OUT files, especially CHKUPG.OUT and UPGRADE.OUT.
</li>
<li>
Correct the condition that prevented the database upgrade.</li>
<li>
From a query interface (for example, from ISQL/w), type:<p>
<b>sp_db_upgrade</b> <i>dbname</i>
<p>
where
<dl>
<dt>
<i>dbname</i></dt>
<dd>
Is the name of the database to be upgraded.
</dd>
</dl>
</li>
</ol>
<p>
For example:</p>
<pre>sp_db_upgrade pubs</pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
