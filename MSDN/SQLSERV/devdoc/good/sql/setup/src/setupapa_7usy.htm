<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Version 1.x-compatible Sort Order</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_version_1..x.96.compatible_sort_order"></a>Version 1.<i>x</i>-compatible Sort Order</h3>
<p>
This sort order is provided for strict compatibility with SQL Server version 1.<i>x</i> case-insensitive databases. It uses the dictionary sort order with case insensitivity and no uppercase preference for the first 128 characters of the character set and the Binary sort order for the remaining 128 characters. Using this sort order choice, <i>A</i> and <i>a</i> are sorted and grouped together, but <i>à</i> and <i>Ä</i> are sorted as unique characters according to their binary values in the installed character set.</p>
<p>
This option offers no advantage over other sort orders other than strict compatibility with earlier versions of SQL Server. Unless you have case-insensitive databases set up for earlier versions of SQL Server that use extended characters, and you require the upgraded version to have exactly the same, less functional sort order semantics, you should choose another sort order.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
