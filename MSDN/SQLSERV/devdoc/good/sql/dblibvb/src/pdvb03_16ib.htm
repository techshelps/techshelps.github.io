<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_overview_pdvb03"></a>Overview</h1>
<p>
Developing a Visual Basic application involves two basic processes:
<ul>
<li>
Providing a user interface that requests information from and conveys information to the person using the application.</li>
<li>
Supplying the programming code that performs a set of tasks in response to specific user actions.</li>
</ul>
<p>
These two processes are strongly interdependent. When the user of the application uses a particular screen object to initiate an action, Visual Basic responds by invoking the Basic code contained in whatever event procedure is associated with that screen object. User interaction with SQL Server occurs when the Basic code for an event procedure contains functions and routines from DB-Library for Visual Basic.</p>
<p>
Unless your DB-Library for Visual Basic application is very simple, use multiple forms to divide an application into logical parts. For example, a form that gets login information from a user ties together the user data and the functions that act on that user data. The login information and the login functions are part of the same process ¾ logging in to SQL Server.</p>
<p>
DB-Library for Visual Basic applications can be large and complex, and can manage several SQL Server processes. For example, an application can manage querying databases, processing and retrieving information, accessing stored procedures, bulk-copying data, and so on. Dividing applications into forms and modules that control the various processes makes it easier to maintain and change the applications.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
