<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SqlByList$</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sqlbylist.24"></a>SqlByList$</h1>
<p>
Returns the bylist for a COMPUTE row.</p>
<h4>Syntax</h4>
<p>
<b>SqlByList$ ( </b><i>sqlconn%</i><b>,</b> <i>computeid%</i><b>,</b> <i>column%</i><b> )</b></p>
<p>
where
<dl>
<dt>
<i>sqlconn%</i></dt>
<dd>
Is a SQL Server connection. The value of <i>sqlconn%</i> is returned by <b>SqlOpen%</b>.</dd>
<dt>
<i>computeid%</i></dt>
<dd>
Is the COMPUTE clause. A SELECT statement can have multiple COMPUTE clauses, which can have varying numbers of aggregate operators and aggregate targets. The <i>computeid%</i> is returned by <b>SqlNextRow%</b> or <b>SqlGetRow%</b>.</dd>
<dt>
<i>column%</i></dt>
<dd>
Is the number of the column. The first column is number 1.
</dd>
</dl>
<h4>Returns</h4>
<p>
A binary string of column positions for the bylist in the SELECT statement of the current SQL commands.</p>
<h4>Remarks</h4>
<p>
A COMPUTE clause in a SELECT statement can contain the keyword BY, followed by a list of columns. This list, known as the bylist, divides the results of the COMPUTE clause into subgroups based on changing values in the specified columns. The COMPUTE clause's row aggregate is applied to each subgroup, generating a COMPUTE clause row for each subgroup.</p>
<p>
The number of columns is equal to the length of the binary string and can be determined by calling <b>LEN(</b> <b>)</b> with the returned string. Each character is a binary value representing the position of a column in the bylist.</p>
<p>
Call <b>SqlByList$ </b>after <b>SqlResults%</b> returns SUCCEED.</p>
<h4>Example</h4>
<p>
The following program fragment shows how to convert a binary value to an integer to get the number of a column position:</p>
<pre>ByList$ = SqlByList$(Sqlconn%, ComputeID%)
DIM ByListNumber(LEN(ByList$)) as Integer
FOR x% = 1 to LEN(ByList$)
   ByListNumber(x%) = ASC(MID$(ByList$,x%,1))
NEXT x%
</pre>
<h4>See Also</h4>
<p>
<a href="pdvb04a_11ro.htm"><b>SqlAData$</b></a>, <a href="pdvb04a_4bzq.htm"><b>SqlADLen&amp;</b></a>, <a href="pdvb04a_4to5.htm"><b>SqlAltLen%</b></a>, <a href="pdvb04a_1wl1.htm"><b>SqlAltType%</b></a>, <a href="pdvb04a_84l0.htm"><b>SqlColName$</b></a>, <a href="pdvb04b_5qut.htm"><b>SqlGetRow%</b></a>, <a href="pdvb04b_6awl.htm"><b>SqlNextRow%</b></a>, <a href="pdvb04c_07jp.htm"><b>SqlResults%</b></a></p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
