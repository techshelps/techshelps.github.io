<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error and Message Handling</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_error_and_message_handling_pdvb02"></a>Error and Message Handling</h2>
<p>
When either DB-Library for Visual Basic or SQL Server encounter an error condition, the error is reported to your application. To respond to error conditions, DB-Library for Visual Basic applications must implement an error handler and a message handler. </p>
<p>
Errors detected by DB-Library for Visual Basic (such as a failure to connect to SQL Server) invoke the error handler, and provide information such as a description of the error and a severity rating. Errors detected by SQL Server (for example, invalid SQL syntax) are sent back to the client as messages and invoke both the error handler and the message handler. Based on the error information, the code that you supply for each handler can take whatever actions you define, such as informing the user of a problem. </p>
<p>
The sections that follow tell how to implement each type of handler, and provide examples. The sample applications include examples of error and message handlers.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
