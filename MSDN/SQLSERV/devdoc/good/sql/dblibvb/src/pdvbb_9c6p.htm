<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Appendix B   Error Messages</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_error_messages_pdvbb_1"></a>Error Messages</h1>
<p>
This appendix describes all errors of DB-Library for Visual Basic and their levels of severity. These values are passed to a user-defined error handler. For information on creating an error handler for your application, see <a href="pdvb02_15pu.htm">Programming with DB-Library for Visual Basic</a>. </p>
<p>
The text of the DB-Library for Visual Basic error messages comes from the underlying DB-Library, which is a library for developing client applications in C. As a result, some of the messages are specific to the DB-Library. In these cases, a version of the message that more accurately describes the error for DB-Library for Visual Basic is included in the entry. </p>
<p>
The following table lists the DB-Library for Visual Basic errors, providing the error number, the error constant, and the error message for each error. The constants are defined in the VBSQL.BAS file.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=14%></th>
<th align=left width=25%></th>
<th align=left width=61%></th>
</tr>
<tr valign=top>
<th align=left width=14%></th>
<th align=left width=25%></th>
<th align=left width=61%></th>
</tr>
<tr valign=top>
<th align=left width=14%>Number</th>
<th align=left width=25%>Constant</th>
<th align=left width=61%>Error message</th>
</tr>
<tr valign=top>
<td width=14%></td>
<td width=25%></td>
<td width=61%></td>
</tr>
<tr valign=top>
<td width=14%>10000</td>
<td width=25%>SQLEMEM</td>
<td width=61%>Unable to allocate sufficient memory.</td>
</tr>
<tr valign=top>
<td width=14%>10001</td>
<td width=25%>SQLENULL</td>
<td width=61%>NULL DBPROCESS pointer encountered. For Visual Basic: A <i>sqlconn</i> identifier with a value of 0 was encountered.</td>
</tr>
<tr valign=top>
<td width=14%>10002</td>
<td width=25%>SQLENLOG</td>
<td width=61%>NULL LOGINREC pointer encountered. For Visual Basic: A <i>loginrec%</i> with a value of 0 was encountered.</td>
</tr>
<tr valign=top>
<td width=14%>10003</td>
<td width=25%>SQLEPWD</td>
<td width=61%>Login incorrect.</td>
</tr>
<tr valign=top>
<td width=14%>10004</td>
<td width=25%>SQLECONN</td>
<td width=61%>Unable to connect: SQL Server is unavailable or does not exist.</td>
</tr>
<tr valign=top>
<td width=14%>10005</td>
<td width=25%>SQLEDDNE</td>
<td width=61%>DBPROCESS is inactive or not enabled. For Visual Basic: SQL Server connection is dead.</td>
</tr>
<tr valign=top>
<td width=14%>10006</td>
<td width=25%>SQLNULLO</td>
<td width=61%>Attempt to log in with null LOGINREC. For Visual Basic: Attempt to log in with a <i>loginrec</i> value of 0.</td>
</tr>
<tr valign=top>
<td width=14%>10007</td>
<td width=25%>SQLESMSG</td>
<td width=61%>General SQL Server error: Check messages from the SQL Server.</td>
</tr>
<tr valign=top>
<td width=14%>10008</td>
<td width=25%>SQLEBTOK</td>
<td width=61%>Bad token from SQL Server: datastream processing out of sync.</td>
</tr>
<tr valign=top>
<td width=14%>10009</td>
<td width=25%>SQLENSPE</td>
<td width=61%>Non-specific general error.</td>
</tr>
<tr valign=top>
<td width=14%>10010</td>
<td width=25%>SQLEREAD</td>
<td width=61%>Read from SQL Server failed.</td>
</tr>
<tr valign=top>
<td width=14%>10011</td>
<td width=25%>SQLECNOR</td>
<td width=61%>Column number out of range.</td>
</tr>
<tr valign=top>
<td width=14%>10012</td>
<td width=25%>SQLETSIT</td>
<td width=61%>Attempt to call <b>dbtsput</b> with an invalid timestamp. For Visual Basic: Attempt to call <b>SqlTsPut%</b> with an invalid timestamp.</td>
</tr>
<tr valign=top>
<td width=14%>10013</td>
<td width=25%>SQLEPARM</td>
<td width=61%>Invalid parameter in DB-Library function reference.</td>
</tr>
<tr valign=top>
<td width=14%>10014</td>
<td width=25%>SQLEAUTN</td>
<td width=61%>Attempt to update the timestamp of a table that has no timestamp column.</td>
</tr>
<tr valign=top>
<td width=14%>10015</td>
<td width=25%>SQLECOFL</td>
<td width=61%>Data-conversion resulted in overflow.</td>
</tr>
<tr valign=top>
<td width=14%>10016</td>
<td width=25%>SQLERDCN</td>
<td width=61%>Requested data conversion does not exist.</td>
</tr>
<tr valign=top>
<td width=14%>10017</td>
<td width=25%>SQLEICN</td>
<td width=61%>Invalid <i>computeid</i> or compute column number.</td>
</tr>
<tr valign=top>
<td width=14%>10018</td>
<td width=25%>SQLECLOS</td>
<td width=61%>Error in closing network connection.</td>
</tr>
<tr valign=top>
<td width=14%>10019</td>
<td width=25%>SQLENTXT</td>
<td width=61%>Attempt to get text point/timestamp from a non-text column. For Visual Basic: Attempt to get a text identifier or text timestamp from a non-text column.</td>
</tr>
<tr valign=top>
<td width=14%>10020</td>
<td width=25%>SQLEDNTI</td>
<td width=61%>Attempt to use <b>dbtxtsput</b> to put a new text timestamp into a column whose datatype in neither SQLTEXT nor SQLIMAGE. For Visual Basic: Attempt to use <b>SqlTxTsPut%</b> to put a new text timestamp into a column whose datatype is neither <i>text</i> nor <i>image</i>.</td>
</tr>
<tr valign=top>
<td width=14%>10021</td>
<td width=25%>SQLETMTD</td>
<td width=61%>Attempt to send too much TEXT data via the <b>dbmoretext</b> call. For Visual Basic: Attempt to send too much text data using <b>SqlMoreText%</b>.</td>
</tr>
<tr valign=top>
<td width=14%>10022</td>
<td width=25%>SQLEASEC</td>
<td width=61%>Attempt to send an empty command buffer to SQL Server.</td>
</tr>
<tr valign=top>
<td width=14%>10023</td>
<td width=25%>SQLENTLL</td>
<td width=61%>Name too long for LOGINREC field.</td>
</tr>
<tr valign=top>
<td width=14%>10024</td>
<td width=25%>SQLETIME</td>
<td width=61%>SQL Server connection timed out.</td>
</tr>
<tr valign=top>
<td width=14%>10025</td>
<td width=25%>SQLEWRIT</td>
<td width=61%>Write to SQL Server failed.</td>
</tr>
<tr valign=top>
<td width=14%>10026</td>
<td width=25%>SQLEMODE</td>
<td width=61%>Network connection not in correct mode; invalid SQL Server connection.</td>
</tr>
<tr valign=top>
<td width=14%>10027</td>
<td width=25%>SQLEOOB</td>
<td width=61%>Error in sending out-of-band data to SQL Server.</td>
</tr>
<tr valign=top>
<td width=14%>10028</td>
<td width=25%>SQLEITIM</td>
<td width=61%>Illegal timeout value specified.</td>
</tr>
<tr valign=top>
<td width=14%>10029</td>
<td width=25%>SQLEDBPS</td>
<td width=61%>Maximum number of DBPROCESSes already allocated. For Visual Basic: Invalid or out-of-range parameter to a Visual Basic option.</td>
</tr>
<tr valign=top>
<td width=14%>10030</td>
<td width=25%>SQLEIOPT</td>
<td width=61%>Attempt to use invalid DBOPTION. For Visual Basic: Attempt to use invalid Visual Basic option.</td>
</tr>
<tr valign=top>
<td width=14%>10031</td>
<td width=25%>SQLEASNL</td>
<td width=61%>Attempt to set fields in a null LOGINREC. For Visual Basic: Attempt to set fields in a login record with <i>loginrec</i> value of 0.</td>
</tr>
<tr valign=top>
<td width=14%>10032</td>
<td width=25%>SQLEASUL</td>
<td width=61%>Attempt to set unknown LOGINREC field.</td>
</tr>
<tr valign=top>
<td width=14%>10033</td>
<td width=25%>SQLENPRM</td>
<td width=61%>NULL parameter not allowed for this DBOPTION. For Visual Basic: This Visual Basic option cannot have a parameter that is an empty string.</td>
</tr>
<tr valign=top>
<td width=14%>10034</td>
<td width=25%>SQLEDBOP</td>
<td width=61%>Invalid or out of range <b>dbn</b> option parameter. For Visual Basic: Invalid or out-of-range parameter to a Visual Basic option.</td>
</tr>
<tr valign=top>
<td width=14%>10035</td>
<td width=25%>SQLENSIP</td>
<td width=61%>Negative starting index passed to <b>dbstrcpy</b>. For Visual Basic: Negative starting index passed to <b>SqlStrCpy%</b>.</td>
</tr>
<tr valign=top>
<td width=14%>10036</td>
<td width=25%>SQLECNULL</td>
<td width=61%>NULL destination variable not allowed. For Visual Basic: You have used 0 as an identifier for a text timestamp.</td>
</tr>
<tr valign=top>
<td width=14%>10037</td>
<td width=25%>SQLESEOF</td>
<td width=61%>Unexpected EOF from SQL Server.</td>
</tr>
<tr valign=top>
<td width=14%>10038</td>
<td width=25%>SQLERPND</td>
<td width=61%>Attempt to initiate a new SQL Server operation with results pending.</td>
</tr>
<tr valign=top>
<td width=14%>10039</td>
<td width=25%>SQLECSYN</td>
<td width=61%>Attempt to convert data stopped by syntax error in source field.</td>
</tr>
<tr valign=top>
<td width=14%>10040</td>
<td width=25%>SQLENONET</td>
<td width=61%>DB-Library network communications layer not loaded.</td>
</tr>
<tr valign=top>
<td width=14%>10041</td>
<td width=25%>sqlebtyp</td>
<td width=61%>Unknown bind type passed to DB-Library function.</td>
</tr>
<tr valign=top>
<td width=14%>10042</td>
<td width=25%>sqleabnc</td>
<td width=61%>Attempt to bind to a non-existent column.</td>
</tr>
<tr valign=top>
<td width=14%>10043</td>
<td width=25%>sqleabmt</td>
<td width=61%>User attempted a <b>dbbind</b> with mismatched column and variable types.</td>
</tr>
<tr valign=top>
<td width=14%>10044</td>
<td width=25%>sqleabnp</td>
<td width=61%>Attempt to bind using NULL pointers.</td>
</tr>
<tr valign=top>
<td width=14%>10045</td>
<td width=25%>sqleabncr</td>
<td width=61%>Attempt to bind user variable to a non-existent compute row.</td>
</tr>
<tr valign=top>
<td width=14%>10046</td>
<td width=25%>slqeaamt</td>
<td width=61%>User attempted a <b>dbaltbind</b> with mismatched columns and variable datatypes.</td>
</tr>
<tr valign=top>
<td width=14%>10047</td>
<td width=25%>SQLENXID</td>
<td width=61%>The server did not grant us a distributed-transaction ID.</td>
</tr>
<tr valign=top>
<td width=14%>10048</td>
<td width=25%>sqleifnb</td>
<td width=61%>Illegal field number passed to <b>bcp_control</b>.</td>
</tr>
<tr valign=top>
<td width=14%>10049</td>
<td width=25%>SQLEKBCO</td>
<td width=61%>1000 rows successfully copied to host file.</td>
</tr>
<tr valign=top>
<td width=14%>10050</td>
<td width=25%>SQLEBBCI</td>
<td width=61%>Batch successfully copied to SQL Server.</td>
</tr>
<tr valign=top>
<td width=14%>10051</td>
<td width=25%>SQLEKBCI</td>
<td width=61%>1000 rows sent to SQL Server.</td>
</tr>
<tr valign=top>
<td width=14%>10052</td>
<td width=25%>SQLEBCWE</td>
<td width=61%>I/O error while writing a <b>bcp</b> datafile.</td>
</tr>
<tr valign=top>
<td width=14%>10053</td>
<td width=25%>SQLEBCNN</td>
<td width=61%>Attempt to copy a null value into a server column that does not accept null values.</td>
</tr>
<tr valign=top>
<td width=14%>10054</td>
<td width=25%>SQLEBCOR</td>
<td width=61%>Attempt to bulk copy an oversized row to SQL Server.</td>
</tr>
<tr valign=top>
<td width=14%>10055</td>
<td width=25%>SQLEBCPI</td>
<td width=61%>Call <b>BCPInit</b> before any other <b>BCP</b> routines. For Visual Basic: Call <b>SqlInit$</b> before any other <b>BCP</b> routines.</td>
</tr>
<tr valign=top>
<td width=14%>10056</td>
<td width=25%>sqlebcpn</td>
<td width=61%>Use <b>bcp_bind</b>, <b>bcp_collen</b>, and b<b>cp_colptr</b> only after calling <b>bcp_init</b> with the copy direction set to DB_IN.</td>
</tr>
<tr valign=top>
<td width=14%>10057</td>
<td width=25%>sqlebcpb</td>
<td width=61%>Do not use <b>bcp_bind</b> after <b>bcp_init</b> has been passed a non-null input filename.</td>
</tr>
<tr valign=top>
<td width=14%>10058</td>
<td width=25%>SQLEVDPT</td>
<td width=61%>For bulk copy, all variable-length data must have either a length-prefix or a terminator specified.</td>
</tr>
<tr valign=top>
<td width=14%>10059</td>
<td width=25%>SQLEBIVI</td>
<td width=61%>Use <b>bcp_columns</b> and <b>bcp_colfmt</b> only after <b>bcp_init</b> has been passed a valid input file. For Visual Basic: Use <b>SqlBCPColumns%</b> and <b>SqlBCPColfmt%</b> only after <b>SqlInit$</b> has been passed a valid input file.</td>
</tr>
<tr valign=top>
<td width=14%>10060</td>
<td width=25%>SQLEBCBC</td>
<td width=61%>Call <b>bcp_columns</b> before <b>bcp_colfmt</b>. For Visual Basic: Call <b>SqlBCPColumns%</b> before <b>SqlBCPColfmt%</b>.</td>
</tr>
<tr valign=top>
<td width=14%>10061</td>
<td width=25%>SQLEBCFO</td>
<td width=61%>Host files must contain at least one column: <b>bcp</b>.</td>
</tr>
<tr valign=top>
<td width=14%>10062</td>
<td width=25%>SQLEBCVH</td>
<td width=61%>Call <b>bcp_exec</b> only after <b>bcp_init</b> has been passed a valid host file. For Visual Basic: Call <b>SqlBCPExec%</b> only after <b>SqlBCPInit%</b> has been passed a valid host file.</td>
</tr>
<tr valign=top>
<td width=14%>10063</td>
<td width=25%>SQLEBCUO</td>
<td width=61%>Unable to open host datafile: <b>bcp</b>.</td>
</tr>
<tr valign=top>
<td width=14%>10064</td>
<td width=25%>SQLEBUOE</td>
<td width=61%>Unable to open error file: <b>bcp</b>.</td>
</tr>
<tr valign=top>
<td width=14%>10065</td>
<td width=25%>SQLEBWEF</td>
<td width=61%>I/O error while writing <b>bcp</b> error file.</td>
</tr>
<tr valign=top>
<td width=14%>10066</td>
<td width=25%>SQLEBTMT</td>
<td width=61%>Attempt to send too much text data with <b>bcp_moretext</b>.</td>
</tr>
<tr valign=top>
<td width=14%>10067</td>
<td width=25%>SQLEBEOF</td>
<td width=61%>Unexpected EOF encountered in <b>bcp</b> datafile.</td>
</tr>
<tr valign=top>
<td width=14%>10068</td>
<td width=25%>SQLEBCSI</td>
<td width=61%>Host-file columns can be skipped only when copying into the server.</td>
</tr>
<tr valign=top>
<td width=14%>10069</td>
<td width=25%>sqlepnul</td>
<td width=61%>NULL program pointer encountered.</td>
</tr>
<tr valign=top>
<td width=14%>10070</td>
<td width=25%>SQLEBSKERR</td>
<td width=61%>Cannot seek in data file.</td>
</tr>
<tr valign=top>
<td width=14%>10071</td>
<td width=25%>SQLEBDIO</td>
<td width=61%>Bad bulk-copy direction.</td>
</tr>
<tr valign=top>
<td width=14%>10072</td>
<td width=25%>SQLEBCNT</td>
<td width=61%>Attempt to use bulk copy with a nonexistent server table.</td>
</tr>
<tr valign=top>
<td width=14%>10073</td>
<td width=25%>sqlemdbp</td>
<td width=61%>Attempt to set maximum number of DBPROCESSes lower than 1.</td>
</tr>
<tr valign=top>
<td width=14%>10075</td>
<td width=25%>SQLCRSINV</td>
<td width=61%>Invalid cursor statement.</td>
</tr>
<tr valign=top>
<td width=14%>10076</td>
<td width=25%>SQLCRSCMD</td>
<td width=61%>Attempt to call cursor functions when there are commands waiting to be executed.</td>
</tr>
<tr valign=top>
<td width=14%>10077</td>
<td width=25%>SQLCRSNOIND</td>
<td width=61%>One of the tables involved in the cursor statement does not have a unique index.</td>
</tr>
<tr valign=top>
<td width=14%>10078</td>
<td width=25%>SQLCRSDIS</td>
<td width=61%>Cursor statement contains one of the disallowed phrases COMPUTE, UNION, FOR BROWSE, or SELECT INTO.</td>
</tr>
<tr valign=top>
<td width=14%>10079</td>
<td width=25%>SQLCRSAGR</td>
<td width=61%>Aggregate functions are not allowed in a cursor statement.</td>
</tr>
<tr valign=top>
<td width=14%>10080</td>
<td width=25%>SQLCRSORD</td>
<td width=61%>Only fully keyset driven cursors can have ORDER BY, GROUP BY, or HAVING PHRASES.</td>
</tr>
<tr valign=top>
<td width=14%>10081</td>
<td width=25%>SQLCRSMEM</td>
<td width=61%>Keyset or window scroll size exceeds the memory limitations of this machine.</td>
</tr>
<tr valign=top>
<td width=14%>10082</td>
<td width=25%>SQLCRSBSKEY</td>
<td width=61%>Keyset cannot be scrolled backward in mixed cursors with a previous fetch type.</td>
</tr>
<tr valign=top>
<td width=14%>10083</td>
<td width=25%>SQLCRSNORES</td>
<td width=61%>Cursor statement generated no results.</td>
</tr>
<tr valign=top>
<td width=14%>10084</td>
<td width=25%>SQLCRSVIEW</td>
<td width=61%>A view cannot be joined with another table or a view in a cursor statement.</td>
</tr>
<tr valign=top>
<td width=14%>10085</td>
<td width=25%>SQLCRSBUFR</td>
<td width=61%>Row buffering should not be turned on when using cursor functions.</td>
</tr>
<tr valign=top>
<td width=14%>10086</td>
<td width=25%>SQLCRSFROWN</td>
<td width=61%>Row number to be fetched is outside valid range.</td>
</tr>
<tr valign=top>
<td width=14%>10087</td>
<td width=25%>SQLCRSBROL</td>
<td width=61%>Backward scrolling cannot be used in a forward scrolling cursor.</td>
</tr>
<tr valign=top>
<td width=14%>10088</td>
<td width=25%>SQLCRSFRAND</td>
<td width=61%>Fetch types RANDOM and RELATIVE can only be used within the keyset of keyset driven cursors.</td>
</tr>
<tr valign=top>
<td width=14%>10089</td>
<td width=25%>SQLCRSFLAST</td>
<td width=61%>Fetch type LAST requires fully keyset driven cursors.</td>
</tr>
<tr valign=top>
<td width=14%>10090</td>
<td width=25%>SQLCRSRO</td>
<td width=61%>Data locking or modifications cannot be made in a READONLY cursor.</td>
</tr>
<tr valign=top>
<td width=14%>10091</td>
<td width=25%>SQLCRSTAB</td>
<td width=61%>Table name must be determined in operations involving data locking or modifications.</td>
</tr>
<tr valign=top>
<td width=14%>10092</td>
<td width=25%>SQLCRSUPDTAB</td>
<td width=61%>Update or insert operations using bind variables require single table cursors.</td>
</tr>
<tr valign=top>
<td width=14%>10093</td>
<td width=25%>SQLCRSUPDNB</td>
<td width=61%>Update or insert operations cannot use bind variables when binding type is NOBIND.</td>
</tr>
<tr valign=top>
<td width=14%>10094</td>
<td width=25%>SQLCRSVIIND</td>
<td width=61%>The view used in the cursor statement does not include all the unique index columns of the underlying tables.</td>
</tr>
<tr valign=top>
<td width=14%>10095</td>
<td width=25%>SQLCRSNOUPD</td>
<td width=61%>Update or delete operation did not affect any rows.</td>
</tr>
<tr valign=top>
<td width=14%>10096</td>
<td width=25%>SQLCRSOS2</td>
<td width=61%>Cursors are not supported for this server.</td>
</tr>
<tr valign=top>
<td width=14%>10097</td>
<td width=25%>SQLEBCSA</td>
<td width=61%>The BCP hostfile <i>%s</i> contains only <i>%ld</i> rows. Skipping all of these rows is not allowed.</td>
</tr>
<tr valign=top>
<td width=14%>10098</td>
<td width=25%>SQLEBCRO</td>
<td width=61%>Data locking or modifications cannot be made in a READONLY cursor.</td>
</tr>
<tr valign=top>
<td width=14%>10099</td>
<td width=25%>SQLEBCNE</td>
<td width=61%>The table <i>%s</i> contains only <i>%ld</i> rows. Copying up to row <i>%ld</i> is not possible.</td>
</tr>
<tr valign=top>
<td width=14%>10100</td>
<td width=25%>SQLEBCSK</td>
<td width=61%>The table <i>%s</i> contains only <i>%ld</i> rows. Skipping all of these rows is not allowed.</td>
</tr>
<tr valign=top>
<td width=14%>10101</td>
<td width=25%>SQLEUVBF</td>
<td width=61%>Attempt to read unknown version of <b>bcp</b> format file.</td>
</tr>
<tr valign=top>
<td width=14%>10102</td>
<td width=25%>SQLEBIHC</td>
<td width=61%>Incorrect host-column number found in <b>bcp</b> format file.</td>
</tr>
<tr valign=top>
<td width=14%>10103</td>
<td width=25%>SQLEBWFF</td>
<td width=61%>I/O error while reading <b>bcp</b> format file.</td>
</tr>
<tr valign=top>
<td width=14%>10104</td>
<td width=25%>SQLNUMVAL</td>
<td width=61%>The data stored in the DBNUMERIC/DBDECIMAL structure is invalid.</td>
</tr>
<tr valign=top>
<td width=14%>10105</td>
<td width=25%>SQLEOLDVR</td>
<td width=61%>The SQL Server's TDS is obsolete with this version of DB-Library.</td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
