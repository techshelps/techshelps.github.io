<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SqlCursor%</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sqlcursor.25"></a>SqlCursor%</h1>
<p>
Inserts, updates, deletes, locks, or refreshes a particular row in the fetch buffer of a client cursor, a transparent server cursor, or an explicit server cursor.</p>
<h4>Syntax</h4>
<p>
<b>SqlCursor% ( </b><i>cursorhandle%</i><b>, </b><i>optype%</i><b>, </b><i>row%</i><b>, </b><i>table$</i><b>, </b><i>values$</i><b> )</b></p>
<p>
where
<dl>
<dt>
<i>cursorhandle%</i></dt>
<dd>
Is the cursor handle previously returned by <b>SqlCursorOpen%</b>.</dd>
<dt>
<i>optype%</i></dt>
<dd>
Specifies the type of cursor operation to perform on a row or rows in the fetch buffer, as follows:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=28%></th>
<th align=left width=72%></th>
</tr>
<tr valign=top>
<th align=left width=28%></th>
<th align=left width=72%></th>
</tr>
<tr valign=top>
<th align=left width=28%><i>optype%</i></th>
<th align=left width=72%>Description</th>
</tr>
<tr valign=top>
<td width=28%></td>
<td width=72%></td>
</tr>
<tr valign=top>
<td width=28%>CRSDELETE%</td>
<td width=72%>Deletes row(s).</td>
</tr>
<tr valign=top>
<td width=28%>CRSINSERT%</td>
<td width=72%>Inserts a single row using data specified in <i>values$</i>.</td>
</tr>
<tr valign=top>
<td width=28%>CRSLOCKCC%</td>
<td width=72%>Locks row(s).<p>
<b>Client cursor:</b></p>
<p>
An exclusive lock is placed on the data page that contains the specified <i>row%</i>. The lock is maintained only if it is inside an open transaction block defined by BEGIN TRANSACTION; the lock is released when the transaction is closed by a COMMIT TRANSACTION or ROLLBACK TRANSACTION statement.</p>
<p>
<b>Transparent server cursor, explicit server cursor:</b></p>
<p>
An update intent lock is placed on the data page that contains the specified <i>row%</i>. If not inside an open transaction, this lock is released when the next fetch is performed. If inside an open transaction, this lock is released when the transaction is closed. </p>
</td>
</tr>
<tr valign=top>
<td width=28%>CRSREFRESH%</td>
<td width=72%>Refreshes row(s) by retrieving current row data from SQL Server.</td>
</tr>
<tr valign=top>
<td width=28%>CRSUPDATE%</td>
<td width=72%>Updates row(s) using data specified in <i>values$</i>.</td>
</tr>
</table><br>


<p>
If the cursor was opened using a <i>concuropt%</i> of CURREADONLY% (specified in <b>SqlCursorOpen%</b>), only CRSREFRESH% is valid.
</dd>
<dt>
<i>row%</i></dt>
<dd>
Is the row number in the fetch buffer to which the <i>optype%</i> operation applies. The first row in the buffer is number 1. The specified row must contain valid row data.
<p>
<b>Client cursor, transparent server cursor:</b>

<p>
When <i>optype%</i> is CRSREFRESH%, a <i>row%</i> value of 0 indicates that all rows in the fetch buffer will be refreshed.

<p>
<b>Explicit server cursor:</b>

<p>
When <i>optype%</i> is one of the following values:

<ul>
<li>
CRSDELETE%</li>
<li>
CRSLOCKCC%</li>
<li>
CRSREFRESH%</li>
<li>
CRSUPDATE%</li>
</ul>

<p>
a <i>row%</i> value of 0 indicates that the <i>optype%</i> operation will be performed on all rows in the fetch buffer.
</dd>
<dt>
<i>table$</i></dt>
<dd>
Is the table to which the <i>optype%</i> operation applies. If <i>optype%</i> is CRSREFRESH% use an empty string. It must be one of the tables specified in the FROM clause of the SELECT statement (specified in <b>SqlCursorOpen%</b>) that defines the cursor. If the FROM clause includes only one table, this parameter is not required, and you can specify that table or an empty string.
<p>
<b>Client cursor:</b>

<p>
If the FROM clause includes more than one table, this parameter is required unless:

<ul>
<li>
<i>optype%</i> is CRSINSERT% and <i>values$</i> points to a complete INSERT statement</li>
<li>
<i>optype%</i> is CRSUPDATE% and <i>values$</i> points to a complete UPDATE statement</li>
</ul>

<p>
<b>Transparent server cursor, explicit server cursor:</b>

<p>
If the FROM clause includes more than one table and the <b>SqlCursor%</b> operation is being performed with an ambiguous column name, this parameter is required. If <i>table$</i> is required but not specified, the default is the first table listed in the FROM clause.
</dd>
<dt>
<i>values$</i></dt>
<dd>
Is a string that contains a Transact-SQL statement or clause, or an empty string. This parameter specifies the data to be inserted or updated. The following table lists the valid <i>values$</i> parameters for each <i>optype%</i>:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=27%></th>
<th align=left width=73%></th>
</tr>
<tr valign=top>
<th align=left width=27%></th>
<th align=left width=73%></th>
</tr>
<tr valign=top>
<th align=left width=27%><i>optype%</i></th>
<th align=left width=73%><i>values$</i></th>
</tr>
<tr valign=top>
<td width=27%></td>
<td width=73%></td>
</tr>
<tr valign=top>
<td width=27%>CRSDELETE%</td>
<td width=73%>Empty string</td>
</tr>
<tr valign=top>
<td width=27%>CRSINSERT%</td>
<td width=73%>Can be one of the following:<p>
A string that contains a complete Transact-SQL INSERT statement that specifies the single row to be inserted, with no WHERE clause. The table specified in the INSERT statement overrides the <i>table$</i> parameter. The <i>row%</i> parameter is ignored.</p>
<p>
A string that contains just the VALUES clause (from an INSERT statement) that specifies the single row to be inserted. The VALUES keyword is optional, but the list of values to be inserted must be surrounded by parentheses. The <i>row%</i> parameter is ignored.</p>
</td>
</tr>
<tr valign=top>
<td width=27%>CRSLOCKCC%</td>
<td width=73%>Empty string</td>
</tr>
<tr valign=top>
<td width=27%>CRSREFRESH%</td>
<td width=73%>Empty string</td>
</tr>
<tr valign=top>
<td width=27%>CRSUPDATE%</td>
<td width=73%>Can be one of the following:<p>
A string that contains a complete UPDATE statement that specifies the changes made to a single row, with no WHERE clause. The table specified in the UPDATE statement overrides the <i>table$</i> parameter. The <i>row%</i> parameter is ignored.</p>
<p>
A string that contains just the SET clause (from an UPDATE statement) that specifies the changes made to a single row. The SET keyword is optional. The <i>row%</i> parameter is ignored.</p>
</td>
</tr>
</table><br>


</dd>
</dl>
<h4>Returns</h4>
<p>
SUCCEED (1) or FAIL (0).</p>
<p>
This function can fail for the following reasons:
<ul>
<li>
The cursor is opened as read only, no updates allowed.</li>
<li>
A server or connection failure or timeout occurs.</li>
<li>
You have not been granted permission to update or change the database.</li>
<li>
DB-Library is out of memory.</li>
<li>
A trigger in the database caused the INSERT, LOCK, or UPDATE operation to fail.</li>
<li>
You are using optimistic concurrency control, and the row has changed.</li>
</ul>
<h4>Remarks</h4>
<p>
Using <b>SqlCursor%</b> does not affect the current cursor position.</p>
<p>
When <i>optype%</i> is CRSUPDATE% and the <i>values$</i> parameter is a string that contains the UPDATE statement or SET clause, the newly updated values are automatically available using <b>SqlCursorData$</b>.</p>
<p>
When using CRSUPDATE%, if a change is made to a column that is part of the unique index used to open the cursor, the changed row will:
<ul>
<li>
Be missing from a keyset cursor. The next time the changed row is fetched, the row status indicator (<i>pstatus&amp;</i>() in <b>SqlCursorOpen%</b>) for that row will be FTCMISSING%.</li>
<li>
Appear in a new position in a dynamic cursor. The new position depends on the new value of the unique index column, and later fetches might retrieve the changed row.</li>
</ul>
<p>
After using CRSDELETE%, deleted rows will be missing from a keyset cursor (later fetches will have a row status of FTCMISSING%), and will disappear from later fetches using dynamic cursors.</p>
<h5>Client cursor:</h5>
<p>
When using CRSINSERT% with a keyset cursor, the inserted row does not appear in the cursor results set, and thus does not appear in later fetches.</p>
<h5>Transparent server cursor, explicit server cursor:</h5>
<p>
When <i>optype%</i> is one of the following:
<ul>
<li>
CRSINSERT% with a keyset cursor involving only one table</li>
<li>
CRSUPDATE% to change a column that is part of the unique index used to open the cursor</li>
</ul>
<p>
the inserted or updated row will appear as a new row at the end of the keyset (even if the inserted row does not match the WHERE clause criteria), or it will appear in the position of a missing row if the unique index columns of the inserted or updated row match the unique index columns of the missing row.</p>
<h4>See Also</h4>
<p>
<a href="pdvb05_8ihx.htm"><b>SqlCursorClose</b></a>, <a href="pdvb05_1tbp.htm"><b>SqlCursorColInfo%</b></a>, <a href="pdvb05_7z5h.htm"><b>SqlCursorFetch%</b></a>, <a href="pdvb05_8cad.htm"><b>SqlCursorInfo%</b></a>, <a href="pdvb05_2f91.htm"><b>SqlCursorOpen%</b></a></p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
