<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SqlResults%</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sqlresults.25"></a>SqlResults%</h1>
<p>
Sets up the next statement in the command buffer for processing.</p>
<h4>Syntax</h4>
<p>
<b>SqlResults% ( </b><i>sqlconn%</i><b> )</b> ( ) </p>
<p>
where
<dl>
<dt>
<i>sqlconn%</i> ( ) </dt>
<dd>
Is a SQL Server connection. The value of <i>sqlconn%</i> is returned by <b>SqlOpen%</b>.
</dd>
</dl>
<h4>Returns</h4>
<p>
SUCCEED (1), FAIL (0), NOMORERESULTS (2), or NOMORERPCRESULTS (3). The most common reason for failing is an invalid SQL Server connection. NOMORERPCRESULTS is returned when stored procedure return information is available from one stored procedure in a batch of multiple stored procedures. NOMORERESULTS is returned if there are no more results to be processed.</p>
<p>
<b>Note</b>  This function is one of the four that do not return control to the application until the server sends the required response. The application can be blocked for a considerable time if the server is waiting for a lock or processing a large sort. If this is unacceptable, always call <b>SqlDataReady%</b> before <b>SqlResults%</b> and set the DB-Library timeout to regain control periodically.</p>
<h4>Remarks</h4>
<p>
<b>SqlResults%</b> is called after <b>SqlExec%</b> or <b>SqlOk%</b> returns SUCCEED. <b>SqlResults%</b> always returns SUCCEED or NOMORERESULTS on the first call if <b>SqlExec%</b> or <b>SqlOk%</b> has returned SUCCEED, unless a network error or out-of-memory error has occurred. Once <b>SqlResults%</b> returns SUCCEED, you typically process any result rows using <b>SqlNextRow% </b>unless a network error or out-of-memory error has occurred.</p>
<p>
<b>SqlResults%</b> must be called for each statement in the command buffer, whether or not the statement returns any rows. If the number of statements in the command buffer is unknown, you can call <b>SqlResults%</b> until it returns NOMORERESULTS. You must also call <b>SqlResults%</b> once for each stored procedure in the command buffer. However, if the stored procedure contains more than one Transact-SQL SELECT statement, <b>SqlResults%</b> must be called once for each statement. The easiest way to do this is to continue to call <b>SqlResults%</b> until it returns NOMORERESULTS.</p>
<p>
You must call <b>SqlResults%</b> until it returns NOMORERESULTS or until any continued use of the connection causes the DB-Library error 10038 "Results Pending."</p>
<h4>Example</h4>
<pre>'Put the statement into the command buffer.
Result% = SqlCmd%(Sqlconn%, "SELECT data FROM table")
'Send the statement to SQL Server and start execution.
Result% = SqlExec%(Sqlconn%)
DO UNTIL Result% = NOMORERESULTS    'Process the statement results.
   Result% = SqlResults%(Sqlconn%)

   'Retrieve and process the data in each row.
   DO UNTIL SqlNextRow%(Sqlconn%) = NOMOREROWS
      'Code to print or process row of data.
   LOOP
LOOP
</pre>
<h4>See Also</h4>
<p>
<a href="pdvb04a_80tx.htm"><b>SqlCancel%</b></a>, <a href="pdvb04a_7vsl.htm"><b>SqlCanQuery%</b></a>, <a href="pdvb04c_4s6t.htm"><b>SqlExec%</b></a>, <a href="pdvb04b_6awl.htm"><b>SqlNextRow%</b></a>, <a href="pdvb04c_6n1x.htm"><b>SqlOk%</b></a>, <a href="pdvb04b_399x.htm"><b>SqlOpen%</b></a></p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
