<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SqlTsPut%</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sqltsput.25"></a>SqlTsPut%</h1>
<p>
Puts the new value of the timestamp column into a specified table's current row in the row buffer.</p>
<h4>Syntax</h4>
<p>
<b>SqlTsPut% ( </b><i>sqlconn%</i><b>,</b> <i>newts$</i><b>,</b> <i>newtslen%</i><b>,</b> <i>tabnum%</i><b>,</b> <i>tabname$</i><b> )</b></p>
<p>
where
<dl>
<dt>
<i>sqlconn%</i></dt>
<dd>
Is a SQL Server connection. The value of <i>sqlconn%</i> is returned by <b>SqlOpen%</b>.</dd>
<dt>
<i>newts$</i></dt>
<dd>
Is the new timestamp value. The new timestamp value is returned by <b>SqlTsNewVal$</b>.</dd>
<dt>
<i>newtslen%</i></dt>
<dd>
Is the length of the new timestamp value. It is returned by <b>SqlTsNewLen%</b>.</dd>
<dt>
<i>tabnum%</i> </dt>
<dd>
Is the number of the table to receive the new timestamp. Table numbers start at 1. The <i>tabnum%</i> parameter must refer to a browsable table. Use <b>SqlTabBrowse%</b> to determine whether the table you specify can be browsed. If the table is browsable, <i>tabname$</i> is used to identify the table.</dd>
<dt>
<i>tabname$</i></dt>
<dd>
Is a string containing the table name. The <i>tabname$</i> parameter must refer to a browsable table. If the string is empty, <i>tabnum$</i> is used to identify the table. The value of <i>tabname$</i> is returned by <b>SqlTabSource$</b>.
</dd>
</dl>
<h4>Returns</h4>
<p>
SUCCEED (1) or FAIL (0). The following conditions cause <b>SqlTsPut%</b> to return FAIL:
<ul>
<li>
The application tries to update the timestamp of a nonexistent row.</li>
<li>
The application tries to update the timestamp using an empty string as the new timestamp identifier (<i>newts$</i> or <i>newts&amp;</i>).</li>
<li>
The specified table cannot be browsed.</li>
</ul>
<h4>Remarks</h4>
<p>
<b>SqlTsPut%</b> is a DB-Library for Visual Basic browse-mode function. For a detailed discussion of browse mode, see <a href="pdvb02_15pu.htm">DB-Library for Visual Basic Programming</a>.<b> </b></p>
<p>
<b>SqlTsPut%</b> manipulates the timestamp column. When used in an UPDATE statement, the WHERE clause returned by <b>SqlQual$</b> places a new value in the updated row's timestamp column and returns the new timestamp value to the application (if the update is successful). If the same row is updated a second time, the UPDATE statement's WHERE clause must use the latest timestamp value. <b>SqlTsPut%</b> updates the timestamp in the row currently being browsed. Then, if the application has to update the row a second time, it calls <b>SqlQual$</b> to formulate a new WHERE clause that uses the new timestamp. With <b>SqlTsNewVal$</b>, the application saves a new timestamp value, possibly for use with <b>SqlTsPut%</b>. Call <b>SqlTsPut%</b> only after <b>SqlNextRow%</b> or <b>SqlGetRow%</b> has returned regrow.</p>
<h4>See Also</h4>
<p>
<a href="pdvb08_3ghh.htm"><b>SqlColBrowse%</b></a>, <a href="pdvb08_3kfo.htm"><b>SqlColSource$</b></a>, <a href="pdvb08_7gvo.htm"><b>SqlQual$</b></a>, <a href="pdvb08_4w51.htm"><b>SqlTabBrowse%</b></a>, <a href="pdvb08_9q2d.htm"><b>SqlTabCount%</b></a>, <a href="pdvb08_9fsk.htm"><b>SqlTabName$</b></a>, <a href="pdvb08_5038.htm"><b>SqlTabSource$</b></a>, <a href="pdvb08_6omt.htm"><b>SqlTsNewLen%</b></a>, <a href="pdvb08_2piw.htm"><b>SqlTsNewVal$</b></a></p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
