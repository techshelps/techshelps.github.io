<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Server Implicitly Initiated Transactions</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sql.a0.server_implicitly_initiated_transactions"></a>SQL Server Implicitly Initiated Transactions</h2>
<p>
The Transact-SQL BEGIN DISTRIBUTED TRANSACTION statement provides an explicit way for a Transact-SQL application to begin a distributed transaction. However, you must change existing Transact-SQL applications to initiate MS DTC transactions in this way. SQL Server provides a way for you to use MS DTC transactions without any change to your existing Transact-SQL application. SQL Server implicitly initiated transactions share all of the benefits of explicitly initiated transactions but have these additional advantages: 
<ul>
<li>
Existing Transact-SQL applications can use distributed transactions with no change to the application. </li>
<li>
Application programming is easy because SQL Server automatically initiates distributed transactions only when they are needed. SQL Server only initiates an MS DTC transaction when no distributed transaction is in force and a Transact-SQL application in one SQL Server calls a remote stored procedure in another SQL Server. </li>
</ul>
<p>
SQL clients and the SQL system administrator control whether SQL Server implicitly initiates MS DTC transactions. There are two SQL Server options for controlling implicit transactions: 
<ul>
<li>
The <a href="dtcprog4_3usu.htm">REMOTE_PROC_TRANSACTIONS</a> option is a session-level option that the Transact-SQL application controls by using the Transact-SQL SET statement. When this session-level option is set and a Transact-SQL application calls a remote stored procedure, SQL Server automatically initiates an MS DTC transaction. </li>
<li>
The <a href="dtcprog4_36pe.htm">REMOTE PROC TRANS</a> option is a server configuration parameter that the system administrator controls by using the <b>sp_configure</b> statement. The REMOTE PROC TRANS server configuration parameter determines the default setting of the REMOTE_PROC_TRANSACTIONS session-level option. It permits the system administrator to enable implicit MS DTC transactions for an entire SQL Server system. </li>
</ul>
<p>
The REMOTE_PROC_TRANSACTIONS session-level option and the REMOTE PROC TRANS server configuration parameter have no affect on programs that initiate MS DTC transactions explicitly by using the BEGIN DISTRIBUTED TRANSACTION statement. </p>
<p>
The first example illustrates the REMOTE_PROC_TRANSACTIONS session-level option and the second illustrates the REMOTE PROC TRANS server configuration parameter. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
