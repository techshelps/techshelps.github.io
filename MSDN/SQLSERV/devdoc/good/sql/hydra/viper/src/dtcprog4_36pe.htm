<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>REMOTE PROC TRANS Server Configuration Parameter</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_remote_proc_trans_server_configuration_parameter"></a>REMOTE PROC TRANS Server Configuration Parameter</h3>
<p>
When the setting for the REMOTE_PROC_TRANSACTIONS session-level option is not specified, it is based on the value of the REMOTE PROC TRANS server configuration parameter.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%></th>
<th align=left width=52%></th>
</tr>
<tr valign=top>
<th align=left width=48%></th>
<th align=left width=52%></th>
</tr>
<tr valign=top>
<th align=left width=48%>REMOTE PROC TRANS</th>
<th align=left width=52%>REMOTE_PROC_TRANSACTIONS</th>
</tr>
<tr valign=top>
<td width=48%>0</td>
<td width=52%>OFF</td>
</tr>
<tr valign=top>
<td width=48%>1</td>
<td width=52%>ON</td>
</tr>
</table><br>
<p>
By default, the value of the REMOTE PROC TRANS server configuration parameter is 0. This ensures compatibility with earlier SQL Server releases, which did not support distributed transactions. The value of the REMOTE PROC TRANS server configuration parameter can be changed by using the <b>sp_configure</b> system stored procedure. The RECONFIGURE WITH OVERRIDE statement must be entered after the parameter value is changed. You can set the value of REMOTE PROC TRANS as follows: </p>
<pre>sp_configure 'remote proc trans', 1
reconfigure with override
<b><i>  </i></b></pre>
<p>
Only a SQL Server system administrator can enter the RECONFIGURE WITH OVERRIDE statement. </p>
<p>
The REMOTE PROC TRANS server configuration parameter is dynamic. For new SQL Server sessions, the REMOTE_PROC_TRANSACTIONS session-level option is set based on the current value of REMOTE PROC TRANS. </p>
<p>
For details about REMOTE PROC TRANS, see the <a href="../../tsql/src/addsproc_0put.htm"><b>sp_configure</b></a> in <i>What's New in SQL Server 6.5</i>. </p>
<p>
The following example shows how an MS DTC distributed transaction can be used with an existing Transact-SQL application to ensure that two SQL Servers are updated consistently. SQL Server implicitly initiates the distributed transaction when the remote stored procedure is called and the REMOTE PROC TRANS server configuration parameter is ON. Note that the Transact-SQL application continues to use the BEGIN TRANSACTION statement rather than the new BEGIN DISTRIBUTED TRANSACTION statement. </p>
<p>
The SQL Server system administrator first uses <b>sp_configure </b>to enable the REMOTE PROC TRANS server configuration parameter: </p>
<pre>SP_CONFIGURE 'REMOTE PROC TRANS', 1
RECONFIGURE WITH OVERRIDE
<b><i>  </i></b>
/*******************************************************/
/* Using the server configuration parameter for        */
/* implicit SQL Server initiated transactions.         */
/*******************************************************/
<b><i>  </i></b>
CREATE PROCEDURE change_addr(@au_id varchar(11),
                             @addr varchar(40),
                             @toserver varchar(12) ) AS
declare @execstr varchar(200)
<b><i>  </i></b>
/* Begin a local SQL Server Transaction.               */
/* This transaction will become an MS DTC distributed  */ 
/* transaction when the remote stored procedure is     */
/* called because the REMOTE PROC TRANS server         */
/* configuration parameter is ON.                      */
BEGIN TRANSACTION
<b><i>  </i></b>
/* Change local author information */
update authors set address = @addr where au_id = @au_id
<b><i>  </i></b>
/* Make a string with the remote server name and       */
/* stored procedure to execute                         */
select @execstr = @toserver + '.pubs..update_addr ' 
<b><i>  </i></b>
/* Update remote server. This statement causes SQL     */
/* Server to begin an MS DTC distributed transaction.  */
/* (Note that these servers must be added to each      */
/* other by using sp_addserver and sp_addremotelogin.) */                              
exec @execstr @au_id, @addr
<b><i>  </i></b>
/* Commit the MS DTC transaction */
COMMIT TRANSACTION
<b><i>  </i></b></pre>
<p>
The following remote stored procedure is used to update the remote <i>pubs</i> database.</p>
<pre>/********************************************************/
/* Stored procedure to update an author's address on    */
/* the remote server.                                   */
/********************************************************/
CREATE PROCEDURE update_addr(@au_id varchar(11), 
                             @addr varchar(40)) AS
update authors set address = @addr where au_id = @au_id
<b><i>  </i></b></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
