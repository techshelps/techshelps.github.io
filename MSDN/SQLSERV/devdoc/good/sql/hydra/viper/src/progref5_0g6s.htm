<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITransaction::Abort</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_itransaction.3a3a.abort"></a>ITransaction::Abort</h3>
<p>
Aborts the transaction. You can call <b>ITransaction::Abort</b> on a transaction repeatedly. XACT_S_ABORTING will be returned on each call following the first call to <b>Abort</b>.</p>
<h4>Syntax</h4>
<p>
<b>HRESULT Abort (</b><br>
<b>BOID*</b> <i>pboidReason</i><b>,</b><br>
<b>BOOL</b> <i>fRetaining</i><b>,</b><br>
<b>BOOL</b> <i>fAsync </i><b>)</b></p>
<p>
where
<dl>
<dt>
<i>pboidReason</i></dt>
<dd>
[in] Is an optional BOID that indicates why the transaction is being aborted. Must be NULL.</dd>
<dt>
<i>fRetaining</i></dt>
<dd>
[in] Is FALSE.</dd>
<dt>
<i>fAsync</i></dt>
<dd>
[in] Is TRUE or FALSE. When <i>fAsync</i> is TRUE, an asynchronous abort is performed and the call to <b>ITransaction::Abort</b> returns immediately. The application can use the <b>ITransactionOutcomeEvents</b> interface to receive notice that the transaction abort is underway. The <b>ITransactionOutcomeEvents</b> interface is described later in this chapter.
<p>
By default, <i>fAsync</i> is FALSE.

</dd>
</dl>
<h4>Returns</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Indicates succeeded.</dd>
<dt>
XACT_S_ASYNC</dt>
<dd>
Indicates that an asynchronous <b>Abort</b> was specified and the call to <b>ITransaction::Abort</b> returned immediately. The application can use the <b>ITransactionOutcomeEvents</b> interface to receive notice that the transaction abort is underway. The <b>ITransactionOutcomeEvents</b> interface is described later in this chapter.</dd>
<dt>
XACT_E_NOTRANSACTION</dt>
<dd>
Indicates unable to abort the transaction, because it had already been committed or aborted. The call was ignored.</dd>
<dt>
XACT_E_ALREADYINPROGRESS</dt>
<dd>
Indicates a commit operation was already in progress. The call was ignored.</dd>
<dt>
XACT_E_CANTRETAIN</dt>
<dd>
Indicates retaining abort is not supported. The call was ignored.</dd>
<dt>
E_FAIL</dt>
<dd>
Indicates the transaction failed to abort for an unspecified reason.</dd>
<dt>
E_UNEXPECTED</dt>
<dd>
Indicates an unexpected error has occurred. The transaction status is unknown.</dd>
<dt>
XACT_S_ABORTING</dt>
<dd>
Indicates an abort operation was already in progress. The call was ignored.</dd>
<dt>
XACT_E_INDOUBT</dt>
<dd>
Indicates the transaction status is unknown. A communication failure has occurred or a transaction manager or resource manager has failed. </dd>
<dt>
XACT_E_CONNECTION_DOWN</dt>
<dd>
Indicates no longer able to communicate with the transaction manager because the connection to the transaction manager failed. The transaction state is unknown.
</dd>
</dl>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
