<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Development Using C or C++</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_application_development_using_c_or_c.2b2b"></a>Application Development Using C or C++</h1>
<p>
Applications written in C or C++ can directly initiate MS DTC transactions. Using C or C++ to directly initiate MS DTC transactions is attractive for these reasons: 
<ul>
<li>
An application can use any OLE transaction-compliant resource manager. For the initial release of MS DTC, SQL Server is the only supported resource manager; in future releases, other resource managers will be supported. </li>
<li>
An application can explicitly control the scope and duration of the transaction. </li>
<li>
An application can be coded in any programming language that supports the OLE Transaction interfaces for initiating and controlling MS DTC transactions. For the initial release of MS DTC, only the C and C++ programming languages support these interfaces. </li>
</ul>
<p>
C and C++ applications that use MS DTC transactions can access SQL Server by using either ODBC or DB-Library. Both of these techniques are illustrated in the examples that follow. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
