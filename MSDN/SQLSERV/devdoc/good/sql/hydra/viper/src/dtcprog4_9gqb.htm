<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transaction Outcome Events</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_transaction_outcome_events"></a>Transaction Outcome Events</h3>
<p>
Applications can use the <b>ITransactionOutcomeEvents </b>interface to receive an asynchronous notice of a transaction's outcome. The application implements the methods in the <b>ITransactionOutcomeEvents</b> interface and registers the interface with the connection point mechanism. When MS DTC determines the outcome of a transaction, it calls the appropriate method in the <b>ITransactionOutcomeEvents </b>interface to inform the application of the outcome. </p>
<p>
The <b>ITransactionOutcomeEvents </b>interface has the following methods.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%></th>
<th align=left width=50%></th>
</tr>
<tr valign=top>
<th align=left width=50%></th>
<th align=left width=50%></th>
</tr>
<tr valign=top>
<th align=left width=50%>Method</th>
<th align=left width=50%>Description</th>
</tr>
<tr valign=top>
<td width=50%><b>ITransactionOutcomeEvents<br>
::Committed</b></td>
<td width=50%>Raised for committed transactions. </td>
</tr>
<tr valign=top>
<td width=50%><b>ITransactionOutcomeEvents<br>
::Aborted</b></td>
<td width=50%>Raised for aborted transactions. </td>
</tr>
<tr valign=top>
<td width=50%><b>ITransactionOutcomeEvents<br>
::HeuristicDecision</b></td>
<td width=50%>Raised when one of the participants in the transaction makes an heuristic decision to commit or abort the transaction. Heuristic decisions are not supported in the current release.</td>
</tr>
<tr valign=top>
<td width=50%><b>ITransactionOutcomeEvents<br>
::InDoubt</b></td>
<td width=50%>Raised when the application calls either <b>Commit</b> or<b> Abort</b> and then loses communication with the commit coordinator before completion of phase one of the two-phase commit protocol. </td>
</tr>
</table><br>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To use transaction outcome events, follow these steps</h5>
<ol>
<li>
Implement the methods in the <b>ITransactionOutcomeEvents </b>interface.</li>
<li>
Each time you initiate a new transaction, call the <b>QueryInterface</b> method on the transaction object with an <i>riid</i> of IID_IConnectionPointContainer to obtain the <b>IConnectionPointContainer</b> interface. </li>
<li>
Call the <b>IConnectionPointContainer::FindConnectionPoint</b> method with an <i>riid</i> of IID_ITransactionOutcomeEvents to obtain the <b>IConnectionPoint</b> that supports the <b>ITransactionOutcomeEvents</b> sink. </li>
<li>
Call the <b>Release</b> method on the <b>IConnectionPointContainer</b> interface. </li>
<li>
Call the <b>Advise</b> method on the <b>IConnectionPoint</b> interface and pass the pointer to the <b>ITransactionOutcomeEvents </b>interface that you implemented. <b>Advise</b> will return a Connection Key. </li>
<li>
When the transaction commits or aborts, MS DTC will call the appropriate <b>ITransactionOutcomeEvents </b>method to report the transaction's outcome. </li>
<li>
Call the <b>Unadvise</b> method on the <b>IConnectionPoint</b> interface and pass the Connection Key that was returned from <b>Advise.</b> </li>
<li>
Call the <b>Release</b> method on the <b>IConnectionPoint</b> interface. </li>
<li>
Call the <b>Release</b> method on the transaction object. </li>
</ol>
<p>
You must repeat steps 2 through 9 for each transaction for which you require transaction outcome notification.</p>
<p>
For more information about:
<ul>
<li>
The <b>ITransactionOutcomeEvents</b> interface and its methods, see Chapter 5, "MS DTC Programmer's Reference."</li>
<li>
The OLE events architecture, see <b>IConnectionPoint</b> in the Microsoft Developer Network (MSDN) Development Library.</li>
<li>
<b><i>  </i></b></li>
</ul>
<p>&nbsp;</p></body>
</HTML>
