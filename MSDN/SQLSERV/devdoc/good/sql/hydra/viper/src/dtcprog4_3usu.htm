<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>REMOTE_PROC_TRANSACTIONS Session Option</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_remote_proc_transactions_session_option"></a>REMOTE_PROC_TRANSACTIONS Session Option</h3>
<p>
The REMOTE_PROC_TRANSACTIONS option is a session-level option that the Transact-SQL application controls by using the Transact-SQL SET statement. When the session-level option is ON and a Transact-SQL application calls a remote stored procedure, SQL Server implicitly initiates an MS DTC transaction. When this session-level option is OFF, no MS DTC transactions are implicitly initiated on the session. The session-level option is controlled by using the Transact-SQL SET statement as follows: </p>
<pre>set remote_proc_transactions {ON|OFF}
<b><i>  </i></b></pre>
<p>
For details about REMOTE_PROC_TRANSACTIONS, see <i>What's New in SQL Server 6.5</i>. </p>
<p>
A SQL Server implicitly initiated transaction works as follows: 
<ol>
<li>
When a Transact-SQL application calls the BEGIN TRANSACTION statement, SQL Server initiates a local SQL Server transaction. It does not initiate an MS DTC transaction. </li>
<li>
All changes that the Transact-SQL application makes to the local database are performed within the local transaction. </li>
<li>
If the Transact-SQL application calls a remote stored procedure in another SQL Server system, SQL Server determines if the REMOTE_PROCEDURE_TRANSACTIONS session-level option has been enabled. If so, SQL Server initiates an MS DTC transaction by calling the <b>ITransactionDispenser::BeginTransaction</b> method and obtaining a transaction dispenser object that represents the MS DTC transaction. SQL Server enlists in the transaction with its local MS DTC transaction manager. This permits SQL Server to participate in the two-phase commit protocol. </li>
<li>
SQL Server propagates the MS DTC transaction with the call to the remote stored procedure. All updates, inserts, and deletes (including those that the Transact-SQL application had previously made to the local database within the local transaction) will now be protected within the MS DTC transaction. </li>
<li>
When the work of the transaction is complete, the Transact-SQL application calls the COMMIT TRANSACTION statement. SQL Server determines whether a local or MS DTC transaction is in force. If an MS DTC transaction is in force, SQL Server calls the MS DTC <b>ITransaction::Commit </b>method. MS DTC uses the two-phase commit protocol to coordinate commitment of the transaction. Alternatively, the Transact-SQL application could call the ROLLBACK TRANSACTION statement. In this case, SQL Server calls the MS DTC<b> ITransaction::Abort </b>method to undo the effects of the transaction. </li>
<li>
The Transact-SQL application then can go on to perform more transactions. <p>
For information about the <a href="../../../tsqlref/src/tsql28_1t6c.htm">BEGIN TRANSACTION</a>, <a href="../../../tsqlref/src/tsql28_1910.htm">COMMIT TRANSACTION</a>, and <a href="../../../tsqlref/src/tsql28_7oc4.htm">ROLLBACK TRANSACTION</a> statements, see the <i>Microsoft SQL Server Transact-SQL Reference</i>. 
</li>
</ol>
<p>
This example shows how SQL Server implicitly initiates a distributed transaction when one is needed and the REMOTE_PROC_TRANSACTIONS session-level option is ON. Note that the Transact-SQL application continues to use the BEGIN TRANSACTION statement rather than the new BEGIN DISTRIBUTED TRANSACTION statement. </p>
<pre>/*******************************************************/
/* Using the session option for implicit SQL Server    */
/* initiated transactions.                             */
/*******************************************************/
<b><i>  </i></b>
CREATE PROCEDURE change_addr(@au_id varchar(11),
                             @addr varchar(40),
                             @toserver varchar(12) ) AS
declare @execstr varchar(200)
<b><i>  </i></b>
/* Set the REMOTE_PROC_TRANSACTIONS option to enable   */
/* MS DTC transactions                                 */
set remote_proc_transactions ON
<b><i>  </i></b>
/* Begin a local SQL Server Transaction.               */
/* This transaction will become an MS DTC distributed  */ 
/* transaction when the remote stored procedure is     */
/* called because the REMOTE_PROC_TRANSACTIONS option  */ 
/* is ON.                                              */
BEGIN TRANSACTION
<b><i>  </i></b>
/* Change local author information */
update authors set address = @addr where au_id = @au_id
<b><i>  </i></b>
/* Make a string with the remote server name and       */
/* stored procedure to execute                         */
select @execstr = @toserver + '.pubs..update_addr ' 
<b><i>  </i></b>
/* Update remote server. This statement causes SQL     */
/* Server to begin an MS DTC distributed transaction.  */
/* (Note that these servers must be added to each      */
/* other by using sp_addserver and sp_addremotelogin.) */                              
exec @execstr @au_id, @addr
<b><i>  </i></b>
/* Commit the MS DTC transaction */
COMMIT TRANSACTION
<b><i>  </i></b></pre>
<p>
The following remote stored procedure is used to update the remote <i>pubs</i> database.</p>
<pre>/********************************************************/
/* Stored procedure to update an author's address on    */
/* the remote server.                                   */
/********************************************************/
CREATE PROCEDURE update_addr(@au_id varchar(11), 
                             @addr varchar(40)) AS
update authors set address = @addr where au_id = @au_id
<b><i>  </i></b></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
