<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>dbenlisttrans</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dbenlisttrans"></a>dbenlisttrans</h1>
<p>
Enlists the current SQL Server connection in an existing MS DTC transaction.</p>
<h4>Syntax</h4>
<p>
<b>RETCODE dbenlisttrans ( <br>
PDBPROCESS </b><i>dbproc</i><b>, <br>
LPVOID </b><i>pTransaction</i><b> );</b></p>
<p>
where
<dl>
<dt>
<i>dbproc</i></dt>
<dd>
Is the DBPROCESS structure that is the handle for a particular workstation/SQL Server process. It contains all the information that DB-Library uses to manage communications and data between the workstation and SQL Server.</dd>
<dt>
<i>pTransaction</i></dt>
<dd>
Is the MS DTC transaction OLE object that specifies the transaction to export to SQL Server. The client calls the MS DTC OLE <b>ITransactionDispenser::BeginTransaction</b> method to create the MS DTC transaction object.
</dd>
</dl>
<h4>Returns</h4>
<p>
SUCCEED or FAIL.</p>
<h4>Remarks</h4>
<p>
The client application must call <b>dbenlisttrans</b> before performing the first update on a SQL Server that is enlisted in an MS DTC transaction.</p>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To update two or more (N) SQL Servers using MS DTC</h5>
<ol>
<li>
Connect to the MS DTC by using the MS DTC OLE <b>DtcSelectTransactionManager</b> method to obtain a transaction manager object. For information about MS DTC, see the <i>Guide to Microsoft Distributed Transaction Coordinator</i>.</li>
<li>
Call <b>dbopen</b> N times to connect to each SQL Server.</li>
<li>
Call the MS DTC OLE <b>ITransactionDispenser::BeginTransaction</b> method to begin the MS DTC transaction and to obtain a transaction object.</li>
<li>
Call <b>dbenlisttrans</b> N times to send the MS DTC transaction to each SQL Server.</li>
<li>
Call <b>dbsqlexec</b> N times to perform one or more MS DTC transaction updates on each SQL Server.</li>
<li>
Call the MS DTC OLE <b>ITransaction::Commit </b>method to commit the MS DTC transaction. The transaction object is no longer valid after the transaction commits.</li>
<li>
Call the MS DTC OLE <b>ITransaction::Return </b>method to release the reference to the transaction object.</li>
<li>
Either <ul>
<li>
Call <b>dbenlisttrans</b> N times to pass a NULL transaction pointer to each SQL Server, which will disconnect each SQL Server.</li>
</ul>
<p>
Or
<ul>
<li>
To begin a new coordinated transaction, go to step 3.</li>
</ul>
</li>
</ol>
<p>
<b>Note</b>  You can also call <b>dbenlisttrans</b> and <b>dbsqlexec</b> in turn for each SQL Server instead of calling them as suggested in steps 4 and 5 above.</p>
<h4>See Also</h4>
<p>
<a href="dblibc_05f7.htm">dbenlistxatrans</a> </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
