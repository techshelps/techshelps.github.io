<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a New DB-Library for Visual Basic Project</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_creating_a_new_db.2d.library_for_visual_basic_project"></a>Creating a New DB-Library for Visual Basic Project</h2>
<p>
To create a new 32-bit Visual Basic 4.0 project that uses the DB-Library for Visual Basic OLE custom control, follow these steps, which are fully outlined in the following text:
<ol>
<li>
Create a new Visual Basic project.</li>
<li>
Add the DB-Library for Visual Basic OLE custom control to your Toolbox.</li>
<li>
Add the DB-Library for Visual Basic header file to your project.</li>
<li>
Add the DB-Library for Visual Basic OLE custom control to a form in your project.</li>
<li>
Add code to the error handling and message handling event procedures.</li>
</ol>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To add the DB-Library for Visual Basic OLE custom control (VBSQL.OCX) to your Toolbox</h5>
<ol>
<li>
From the Tools menu, choose Custom Controls.<p>
The Custom Controls dialog box appears.
</li>
<li>
Choose the Browse button.<p>
The Add Custom Control dialog box appears.
</li>
<li>
Select the VBSQL.OCX file. By default, it is located in the C:\MSSQL\DLL directory.</li>
<li>
Choose the Open button.<p>
The Available Controls list now includes "Vbsql OLE Custom Control module," and it is selected.
</li>
<li>
Choose the OK button.<p>
The DB-Library for Visual Basic OLE custom control is now included in the Toolbox. Its tooltip is "Vbsql."
</li>
</ol>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To add the DB-Library for Visual Basic header file (VBSQL.BAS) to your project</h5>
<ol>
<li>
From the File menu, choose Add File.<p>
The Add File dialog box appears.
</li>
<li>
Select the VBSQL.BAS file. By default, it is located in the C:\MSSQL\DBLIB\INCLUDE directory.</li>
<li>
Choose the OK button.<p>
The Project window now includes the VBSQL.BAS module. Visual Basic will automatically generate a unique name for this module. For a new project, the default name for this module will be "Module1."
</li>
</ol>
<p>
It is recommended that you not change the VBSQL.BAS header file. If you use the Visual Basic Code window to edit the VBSQL.BAS header file, Visual Basic will add a line to the top of the file similar to the following:</p>
<pre>Attribute VB_Name = "Module1"
<b><i>  </i></b></pre>
<p>
The Visual Basic Code window does not display this line. After this line has been added, Visual Basic will use the specified module name, and will not automatically generate a unique name. If your project already includes a module with the same name as the modified VBSQL.BAS header file, attempting to add it will generate the following error:</p>
<pre>Name conflicts with existing module, project, or object library
<b><i>  </i></b></pre>
<p>
If you must change the VBSQL.BAS header file, use either Notepad (or other text editor that will not add the VB_Name line to the file), or make a copy of the VBSQL.BAS header file and include that copy in your project.</p>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To add the DB-Library for Visual Basic OLE custom control to a form in your project</h5>
<ol>
<li>
From the Toolbox, select the DB-Library for Visual Basic OLE custom control.</li>
<li>
Move the pointer onto a form.<p>
The pointer becomes a cross hair.
</li>
<li>
Drag the cross hair pointer to place the control on the form.<p>
The control will be called "Vbsql1" by default.
</li>
<li>
You can set the Visible property of the control to False.</li>
</ol>
<p>
Add one and only one control to a single form in your project, and always keep that form loaded. Do not add the DB-Library for Visual Basic OLE custom control to more than one form, and do not unload the form that contains the control.</p>
<p>
The DB-Library for Visual Basic OLE custom control has two custom event procedures:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%></th>
<th align=left width=75%></th>
</tr>
<tr valign=top>
<th align=left width=25%></th>
<th align=left width=75%></th>
</tr>
<tr valign=top>
<th align=left width=25%>Event</th>
<th align=left width=75%>Occurs</th>
</tr>
<tr valign=top>
<td width=25%><b>Error</b></td>
<td width=75%>When a DB-Library error occurs</td>
</tr>
<tr valign=top>
<td width=25%><b>Message</b></td>
<td width=75%>When a SQL Server message is received</td>
</tr>
</table><br>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To edit the code in the error handling and message handling event procedures</h5>
<ol>
<li>
Double-click the DB-Library for Visual Basic OLE custom control.<p>
The Visual Basic Code window appears.
</li>
<li>
From the Proc box, select Error to bring up the DB-Library error handler event procedure.</li>
<li>
From the Proc box, select Message to bring up the SQL Server message handler event procedure.</li>
</ol>
<p>
The <b>Error </b>event procedure has the following syntax:</p>
<p>
<b>Private Sub Vbsql1_Error (<br>
ByVal </b><i>SqlConn</i><b> As Long,<br>
ByVal </b><i>Severity</i><b> As Long,<br>
ByVal </b><i>ErrorNum</i><b> As Long,<br>
ByVal </b><i>ErrorStr</i><b> As String,<br>
ByVal </b><i>OSErrorNum</i><b> As Long,<br>
ByVal </b><i>OSErrorStr</i><b> As String,<br>
</b><i>RetCode</i><b> As Long )</b></p>
<p>
The <i>OSErrorNum</i> and <i>OSErrorStr</i> parameters are new with the DB-Library for Visual Basic OLE custom control, and they match the parameters that are available with DB-Library for C.</p>
<p>
The <b>Message </b>event procedure has the following syntax:</p>
<p>
<b>Private Sub Vbsql1_Message (<br>
ByVal </b><i>SqlConn</i><b> As Long,<br>
ByVal </b><i>Message</i><b> As Long,<br>
ByVal </b><i>State</i><b> As Long,<br>
ByVal </b><i>Severity</i><b> As Long,<br>
ByVal </b><i>MsgStr</i><b> As String,<br>
ByVal </b><i>ServerNameStr</i><b> As String,<br>
ByVal </b><i>ProcNameStr</i><b> As String,<br>
ByVal </b><i>Line</i><b> As Long )</b></p>
<p>
The <i>ServerNameStr</i>, <i>ProcNameStr</i>, and <i>Line</i> parameters are new with the DB-Library for Visual Basic OLE custom control, and they match the parameters that are available with DB-Library for C.</p>
<p>
Note that Visual Basic will create a VBSQL.OCA file, usually in the same directory as VBSQL.OCX. Visual Basic stores cached-type library information (and other data that is specific to the custom control) in the VBSQL.OCA file and re-creates it as needed.</p>
<p>
For more information about managing Visual Basic projects, see the <i>Microsoft Visual Basic 4.0 Programmer's Guide</i>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
