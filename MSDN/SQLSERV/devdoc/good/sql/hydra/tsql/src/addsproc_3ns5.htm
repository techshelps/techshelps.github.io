<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>sp_rename</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sp_rename"></a>sp_rename (version 6.5)</h2>
<p>
Changes the name of a user-created object (for example, <i>table</i>, <i>column</i>, <i>user </i>datatype) in the current database.</p>
<p>
For additional syntax information for <a href="../../../tsqlref/src/tsql24_0sx1.htm"><b>sp_rename</b></a>, see the <i>Microsoft SQL Server Transact-SQL Reference</i>. </p>
<h4>Syntax</h4>
<p>
<b>sp_rename</b> <i>oldname</i><b>,</b> <i>newname</i> [<b>, </b>COLUMN | INDEX | OBJECT | USERDATATYPE]</p>
<p>
where
<dl>
<dt>
<i>oldname</i></dt>
<dd>
Is the name of the object to rename. The database owner or system administrator can change the name of user-created objects without using SETUSER. A fully qualified object can be specified.</dd>
<dt>
<i>newname</i></dt>
<dd>
Is the new name for the specified object. The database owner or system administrator can change the name of user-created objects without using SETUSER. A fully qualified object name can be specified.</dd>
<dt>
COLUMN | INDEX | OBJECT | USERDATATYPE]</dt>
<dd>
Specifies whether the object being renamed is a <i>column</i>, <i>index</i>, <i>object</i>, or <i>user-defined</i> datatype.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%></th>
<th align=left width=75%></th>
</tr>
<tr valign=top>
<th align=left width=25%></th>
<th align=left width=75%></th>
</tr>
<tr valign=top>
<th align=left width=25%>Value</th>
<th align=left width=75%>Definition</th>
</tr>
<tr valign=top>
<td width=25%>OBJECT</td>
<td width=75%>An item of a type tracked in <i>sysobjects</i>. For example, OBJECT could be used to rename objects including constraints (Check, Foreign Key, Primary/Unique Key), user tables, views, stored procedures, triggers, and rules.</td>
</tr>
<tr valign=top>
<td width=25%>USERDATATYPE</td>
<td width=75%>A user-defined datatype added by executing <b>sp_addtype</b>.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Remarks</h4>
<p>
This procedure automatically renames the associated index whenever a primary key or unique constraint is renamed. If a renamed index is tied to a primary key constraint, the primary key is also automatically renamed by <b>sp_rename</b>.</p>
<p>
<b>Important</b>  After renaming stored procedures and views, consider dropping and re-creating all dependent stored procedures and views. Some patterns of renaming may confuse the behavior of the dependent objects.</p>
<dl>
<dt>
Stored procedures and views can be dropped and re-created quickly because neither object stores data. For best results renaming textual objects, drop and re-create the object by its new name.</dt>
<dt>
</dt>
<dd>
</dd>
</dl>
<p>
<b>Caution</b>  Using <b>sp_rename</b> to rename textual objects may put the new object name in the <i>name</i> column of the <i>sysobjects</i> system table and leave the previous name for the object in the <i>text </i>column of the <i>syscomments</i> system table. </p>
<h4>Example</h4>
<p>
In this example, the database owner renames a Primary Key constraint owned by another user.</p>
<pre>IF user_id()=1
    EXECUTE sp_rename 'dab32.usr_sally.cns_tab44_pky', 'pky44', 'object'
<b><i>  </i></b></pre>
<h4>Permission</h4>
<p>
The system administrator, the database owner, or the object owner can execute this system stored procedure.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
