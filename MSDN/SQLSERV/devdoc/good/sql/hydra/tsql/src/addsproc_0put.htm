<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>sp_configure</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sp_configure"></a>sp_configure (version 6.5)</h2>
<p>
Displays or changes global configuration settings for the current server.</p>
<p>
The <b>sp_configure</b> stored procedure offers these options for the <i>config_name</i> parameter: <b>affinity mask</b>, <b>max text repl size</b>, <b>remote conn timeout</b>, <b>remote proc trans</b>, and<b> user options</b>.</p>
<p>
For additional syntax information for <a href="../../../tsqlref/src/tsql19_3yzp.htm"><b>sp_configure</b></a>, see the <i>Microsoft SQL Server Transact-SQL Reference</i>. </p>
<h4>Syntax</h4>
<p>
<b>sp_configure </b>[<b>'</b><i>config_name</i><b>'</b>[<b>,</b> <i>config_value</i>]]</p>
<p>
where 
<dl>
<dt>
<i>config_name</i></dt>
<dd>
Specifies a configuration option that must be enclosed in single quotation marks (<b>'</b>). These are the options: 
<dl>
<dt>
<b>affinity mask</b></dt>
<dd>
Specifies which processor(s) the Symmetric Multiprocessor (SMP) SQL Server will use and allows the system administrator to associate a thread with a processor.</dd>
<dt>
<b>max text repl size</b></dt>
<dd>
Specifies the maximum size in bytes of <i>text</i> and <i>image</i> data that can be added to a replicated column in a single INSERT, UPDATE, WRITETEXT or UPDATETEXT statement.</dd>
<dt>
<b>remote conn timeout</b></dt>
<dd>
Specifies a time limit to break a server-to-server connection. The connection will be broken only when the connection has been inactive for the user-defined time. Without this timeout mechanism any server-to-server procedure call results in the connection between servers staying alive until the originating session terminates.
</dd>
</dl>

<p>
<b>Note</b>  If a connection is involved in an MS DTC-coordinated distributed transaction, the connection will not be timed out even if its inactivity period has expired.


<dl>
<dt>
<b>remote proc trans</b></dt>
<dd>
Allows users to protect the actions of a server-to-server procedure through an MS DTC - coordinated distributed transaction. When set to true, provides an MS DTC - coordinated distributed transaction that protects the ACID properties of transactions. Sessions begun after this option is set will inherit the configuration setting as their default. For more information about distributed transactions, see <a href="addnfeat_0x10.htm">Distributed Transactions</a> or see the <i>Guide to Microsoft Distributed Transaction Coordinator</i>. </dd>
<dt>
<b>user options</b></dt>
<dd>
Specifies that the <b>user options</b> system configuration parameter is to be queried or modified.</dd>
</dl>

<p>
For information about other <i>config_name</i> options for <a href="../../../tsqlref/src/tsql19_3yzp.htm"><b>sp_configure</b></a>, see the <i>Microsoft SQL Server Transact-SQL Reference.</i> 
</dd>
<dt>
<i>config_value</i> </dt>
<dd>
Is a value associated with a specific <i>config_name</i>. These are the values for the configuration options.
<table cellspacing=4 cols=5>
<tr valign=top>
<th align=left width=19%></th>
<th align=left width=18%></th>
<th align=left width=21%></th>
<th align=left width=21%></th>
<th align=left width=21%></th>
</tr>
<tr valign=top>
<th align=left width=19%></th>
<th align=left width=18%></th>
<th align=left width=21%></th>
<th align=left width=21%></th>
<th align=left width=21%></th>
</tr>
<tr valign=top>
<th align=left width=19%><i>config_name</i></th>
<th align=left width=18%>Minimum</th>
<th align=left width=21%>Maximum</th>
<th align=left width=21%><i>config_value</i></th>
<th align=left width=21%>run_value</th>
</tr>
<tr valign=top>
<td width=19%><b>affinity mask</b></td>
<td width=18%>0</td>
<td width=21%>2147483647</td>
<td width=21%>0</td>
<td width=21%>0</td>
</tr>
<tr valign=top>
<td width=19%><b>max text repl size</b></td>
<td width=18%>0</td>
<td width=21%>2147483647</td>
<td width=21%>65536</td>
<td width=21%>65536</td>
</tr>
<tr valign=top>
<td width=19%><b>remote conn timeout</b></td>
<td width=18%>-1</td>
<td width=21%>32767</td>
<td width=21%>10</td>
<td width=21%>10</td>
</tr>
<tr valign=top>
<td width=19%><b>remote proc trans</b></td>
<td width=18%>0</td>
<td width=21%>1</td>
<td width=21%>0</td>
<td width=21%>0</td>
</tr>
<tr valign=top>
<td width=19%><b>user options</b></td>
<td width=18%>0</td>
<td width=21%>4095</td>
<td width=21%>0</td>
<td width=21%>0</td>
</tr>
</table><br>


<dl>
<dt>
<b>affinity mask</b></dt>
<dd>
Specifies a bit mask in which each bit represents the processors on which the thread is run. Use decimal values to specify affinity mask settings.</dd>
<dt>
<b>max text repl size</b></dt>
<dd>
Specifies a number of bytes that can be added to a replicated column.</dd>
<dt>
<b>remote conn timeout</b></dt>
<dd>
Specifies a number in minutes for breaking server-to-server connections.</dd>
<dt>
<b>remote proc trans</b></dt>
<dd>
Specifies whether server-to-server connections are protected by an MS DTC coordinated distributed transaction (1) or not (0, the default).</dd>
<dt>
<b>user options</b></dt>
<dd>
Specifies the global defaults for all users. A list of default query-processing options is established for the duration of a user's work session. A user can override these defaults by using the SET statement. The <b>user options</b> option can be dynamically configured for new logins. When the value is changed, new logins will use the new option; current logins will not be affected.
<p>
<b>user options </b>is one or a combination of the following.


<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%></th>
<th align=left width=75%></th>
</tr>
<tr valign=top>
<th align=left width=25%></th>
<th align=left width=75%></th>
</tr>
<tr valign=top>
<th align=left width=25%>Configuration <br>
value</th>
<th align=left width=75%><br>
Description</th>
</tr>
<tr valign=top>
<td width=25%>1</td>
<td width=75%>DISABLE_DEF_CNST_CHK. Controls interim constraint checking.</td>
</tr>
<tr valign=top>
<td width=25%>2</td>
<td width=75%>IMPLICIT_TRANSACTIONS. Controls whether a transaction is started implicitly when a statement is executed.</td>
</tr>
<tr valign=top>
<td width=25%>4</td>
<td width=75%>CURSOR_CLOSE_ON_COMMIT. Controls behavior of cursors once a commit has been performed.</td>
</tr>
<tr valign=top>
<td width=25%>8</td>
<td width=75%>ANSI_WARNINGS. Controls truncation and NULL in aggregate warnings.</td>
</tr>
<tr valign=top>
<td width=25%>16</td>
<td width=75%>ANSI_PADDING. Controls padding of variables.</td>
</tr>
<tr valign=top>
<td width=25%>32</td>
<td width=75%>ANSI_NULLS. Controls NULL handling by using equality operators.</td>
</tr>
<tr valign=top>
<td width=25%>64</td>
<td width=75%>ARITHABORT. Terminates a query when an overflow or divide-by-zero error occurs during query execution.</td>
</tr>
<tr valign=top>
<td width=25%>128</td>
<td width=75%>ARITHIGNORE. Returns NULL when an overflow or divide-by-zero error occurs during a query.</td>
</tr>
<tr valign=top>
<td width=25%>256</td>
<td width=75%>QUOTED_IDENTIFIER. Differentiates between single and double quotation marks when evaluating an expression.</td>
</tr>
<tr valign=top>
<td width=25%>512</td>
<td width=75%>NOCOUNT. Turns off the message returned at the end of each statement that states how many rows were affected by the statement.</td>
</tr>
<tr valign=top>
<td width=25%>1024</td>
<td width=75%>ANSI_NULL_DFLT_ON. Alters the session's behavior to use ANSI compatibility for nullability. New columns defined without explicit nullability will be defined to allow NULLs.</td>
</tr>
<tr valign=top>
<td width=25%></td>
<td width=75%></td>
</tr>
<tr valign=top>
<td width=25%>2048</td>
<td width=75%>ANSI_NULL_DFLT_OFF. Alters the session's behavior to not use ANSI compatibility for nullability. New columns defined without explicit nullability will be defined not to allow NULLS.</td>
</tr>
</table><br>


</dd>
</dl>

<p>
<b>Note</b>  Not all configuration values for <b>user options</b> are compatible. For example, ANSI_NULL_DFLT_ON cannot be enabled when ANSI_NULL_DFLT_OFF is enabled.


<p>
The bit positions in this option match those in @@OPTIONS. Each connection has its own @@OPTIONS variable. When logging into SQL Server, a user receives a default environment that specifies the @@OPTIONS value equal to the <i>config_value</i>. SET statements for several options will affect the value in @@OPTIONS. 
</dd>
<dt>
For more information about user options, see the <a href="../../../tsqlref/src/tsql12_8mt0.htm">SET Statement</a>, earlier in this document.</dt>
<dd>
</dd>
</dl>
<p>
For information about bit positions, see <a href="addnfeat_4okl.htm">@@OPTIONS Global Variable</a> earlier in this document.</p>
<h4>Remarks</h4>
<p>
Generally, Windows NT does not guarantee that any thread in a process will run on a given processor. A thread may migrate from processor to processor, which causes reloading of the the processor's cache. Under heavy system loads, specifying which processor should run which thread can improve performance by reducing the reloading of processor cache. The association between a processor and a thread is called <i>processor affinity</i>.</p>
<p>
Processor affinity is determined by using an affinity mask. An affinity mask is a bit mask in which each bit represents a processor. By setting a bit that represents a processor to 1, that processor is selected for thread assignment. An affinity mask of 0, the default, specifies that SQL Server should not set the thread's affinity and instead should allow normal Windows NT scheduling algorithms to apply. A non-zero value is interpreted as a bit mask that specifies the processors eligible for selection. </p>
<p>
By using the affinity mask option, symmetric multiprocessor (SMP) systems with more than four microprocessors operating under heavy load offer the best prospects for a performance increase. The affinity mask option can exclude SQL Server activity from processors given specific workload assignments by the Windows NT operating system. Excluding SQL Server threads from running on particular processors helps evaluate the system's handling of NT-specific processes. For example, to evaluate whether an additional network interface card (NIC) increases performance or to assess NIC performance with increasing loads, use the affinity mask option.</p>
<p>
Before applying the affinity mask option to a computer system, however, consider that Windows NT assigns all I/O handling to processor 0, the first processor in the system. Changes in disk I/O, for example, will be reflected in the usage level of processor 0. Windows NT assigns delayed process call (DPC) activity associated with NICs to the highest numbered processor in the system. In systems with more than one installed and active NIC, each additional card's activity is assigned to the next higher numbered processor. For example, in an eight-processor system with one NIC, Windows NT assigns I/O to processor 0 and DPCs to processor 7. The same eight-processor system with two NICs will have I/O assigned to processor 0 and DPCs for each NIC assigned to processor 7 <i>and</i> to processor 6.</p>
<p>
<b>Note</b>  Use either the WPERF.EXE utility included in the Windows NT Resource Kit or the SQL Server Performance Monitor to view and analyze individual processor usage.</p>
<p>
For example, if processors 1, 2, and 5 are selected as available with bits 1, 2, and 5 set to 1, a hexadecimal value of 0x13 or the decimal equivalent of 19 is specified. Number the bits from the right to left. The right-most bit is bit 1. Set bits 1, 2, and 5 (the first, second, and fifth bits) to 1. The number calculated from setting the specified bits is binary 00010011, which is decimal 19 or hexadecimal 0x13.</p>
<p>
These are affinity mask options for an eight-processor system.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=11%></th>
<th align=left width=20%></th>
<th align=left width=69%></th>
</tr>
<tr valign=top>
<th align=left width=11%></th>
<th align=left width=20%></th>
<th align=left width=69%></th>
</tr>
<tr valign=top>
<th align=left width=11%>Decimal<br>
 value</th>
<th align=left width=20%>Binary<br>
bit mask</th>
<th align=left width=69%>Allow SQL Server threads<br>
on processor(s)</th>
</tr>
<tr valign=top>
<td width=11%>1</td>
<td width=20%>00000001</td>
<td width=69%>0</td>
</tr>
<tr valign=top>
<td width=11%>3</td>
<td width=20%>00000011</td>
<td width=69%>0 and 1</td>
</tr>
<tr valign=top>
<td width=11%>7</td>
<td width=20%>00000111</td>
<td width=69%>0, 1, and 2</td>
</tr>
<tr valign=top>
<td width=11%>15</td>
<td width=20%>00001111</td>
<td width=69%>0, 1, 2, and 3</td>
</tr>
<tr valign=top>
<td width=11%>31</td>
<td width=20%>00011111</td>
<td width=69%>0, 1, 2, 3, and 4</td>
</tr>
<tr valign=top>
<td width=11%>63</td>
<td width=20%>00111111</td>
<td width=69%>0, 1, 2, 3, 4, and 5</td>
</tr>
<tr valign=top>
<td width=11%>126</td>
<td width=20%>01111110</td>
<td width=69%>1, 2, 3, 4, 5, and 6 (isolates SQL Server activity from I/O and DPC processors)</td>
</tr>
<tr valign=top>
<td width=11%>127</td>
<td width=20%>01111111</td>
<td width=69%>0, 1, 2, 3, 4, 5, and 6 (isolates SQL Server activity from DPC processor only)</td>
</tr>
<tr valign=top>
<td width=11%>254</td>
<td width=20%>11111110</td>
<td width=69%>1, 2, 3, 4, 5, 6, 7 (isolates SQL Server activity from I/O processor only)</td>
</tr>
</table><br>
<p>
Because using SQL Server processor affinity is a specialized operation, it is recommended that SQL Server processor affinity be used only when necessary. In most cases, the Windows NT default affinity provides the best performance. Unlike earlier releases of SQL Server, if a <i>config_value</i> is 0, defaults will not be automatically reapplied.</p>
<p>
<b>Important</b>  After using <b>sp_configure</b>,<b> </b>the system administrator must execute the RECONFIGURE statement to install the changed value.</p>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;Enable ANSI_WARNINGS and IMPLICIT_TRANSACTIONS</h5>
<p>
This example enables ANSI warnings (ANSI_WARNINGS) and implicit transaction (IMPLICIT TRANSACTIONS) options and disables all the others.</p>
<pre>sp_configure 'user options', 10
</pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;Define Timeout Period</h5>
<p>
This example defines a timeout period of 90 minutes for server-to-server connections.</p>
<pre>sp_configure 'remote conn timeout', 90
</pre>
<h5>C.&nbsp;&nbsp;&nbsp;&nbsp;Set Processor Affinity Mask</h5>
<p>
This example sets processors 1, 2, 3, and 4 as available for threads. Each bit in the decimal represents a processor, so 15 = 0xf =1111(binary) meaning processors 1, 2, 3, and 4. You can also pass <i>0xf</i> as the<b> affinity mask</b> argument.</p>
<pre>sp_configure 'affinity mask', 15
</pre>
<h5>D.&nbsp;&nbsp;&nbsp;&nbsp;Set Bits for ANSI Compatibility</h5>
<p>
This example sets all bits necessary for ANSI-level compatibility.</p>
<pre>sp_configure 'user options', 1406
<b><i>  </i></b></pre>
<h4>Permission</h4>
<p>
All users in the <i>users</i> group can execute this procedure with no parameters, or with only one parameter, to obtain the current parameter value(s). Only system administrators can use this stored procedure with two parameters. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
