<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INSERT Statement</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_insert_statement_addnfeat"></a>INSERT Statement (version 6.5)</h2>
<p>
Populates a local table with results returned from a procedure and makes it easier to import data from remote systems to the local server. </p>
<p>
For additional syntax information for the <a href="../../../tsqlref/src/tsql10_9alw.htm">INSERT statement</a>, see the <i>Microsoft SQL Server Transact-SQL Reference</i>. </p>
<h4>Syntax</h4>
<p>
INSERT [INTO] <br>
{<i>table_name </i>|<i> view_name</i>}<i> </i>[<b>(</b><i>column_list</i><b>)</b>]<br>
&nbsp;&nbsp;&nbsp;&nbsp;EXECute { <i>procedure_name </i><b>|</b><i> </i><b>@</b><i>procedure_name_var</i>}<i><br>
</i>&nbsp;&nbsp;&nbsp;&nbsp;[[<b>@</b><i>parameter_name</i><b>=</b>] {<i>value</i> | <b>@</b><i>variable</i> [OUTPUT] | DEFAULT}<br>
&nbsp;&nbsp;&nbsp;&nbsp;[<b>,</b> [<b>@</b><i>parameter_name</i> <b>=</b>] {<i>value</i> | <b>@</b><i>variable</i> [OUTPUT] | DEFAULT}]...]</p>
<p>
where 
<dl>
<dt>
<i>table_nam</i>e</dt>
<dd>
Is the existing table in the local database to populate.</dd>
<dt>
<i>column_list</i></dt>
<dd>
Is a list of one or more columns in which to insert data. The columns can be listed in any order, but the incoming data must be in the same order as the listed columns. The <i>column_list</i> must be enclosed in parentheses and delimited by commas.
<p>
The <i>column_list</i> is necessary only when some, but not all, columns in the table are to receive data. You can leave out items in the <i>column_list</i> as long as the omitted columns permit null values or the columns are associated with a default. 

<p>
If <i>column_list</i> is not specified, all columns in the receiving table (in CREATE TABLE order) are assumed to be included.
</dd>
<dt>
<i>procedure_name </i>= {[[[<i>server</i><b>.</b>]<i>database</i><b>.</b>]<i>owner<b>.</b></i>]<i>procedure_name</i>[<b>;</b><i>number</i>] }</dt>
<dd>
Is a user-defined procedure name.
<dl>
<dt>
<i>procedure_name</i></dt>
<dt>
Is a stored procedure. You can execute a local procedure, or you can execute a procedure that has been created in another database if you are its owner or have permission to execute it in that database. You can execute a procedure on another SQL Server if you have permission to use that server (remote access) and to execute the procedure in that database. If you specify a server name but do not specify a database name, SQL Server looks for the procedure in your default database.</dt>
<dt>
<b>;</b><i>number</i></dt>
<dd>
Is an optional integer used to differentiate procedures created by using the same name. </dd>
</dl>
</dd>
<dt>
<b>@</b><i>procedure_name_var</i></dt>
<dd>
Is the name of a locally defined variable that represents a stored procedure name.</dd>
<dt>
<b>@</b><i>parameter_name</i></dt>
<dd>
Specifies the parameter for a procedure, as defined in the CREATE PROCEDURE statement. Parameter names must be preceded by the "at" symbol (<b>@</b>). When used with the <b>@</b><i>parameter_name = value</i> form, parameter names and constants need not be supplied in the order defined in CREATE PROCEDURE statement. However, if the <b>@</b><i>parameter_name = value</i> form is used for any parameter, it must be used for all subsequent parameters.</dd>
<dt>
<i>value</i></dt>
<dd>
Is the value of the parameter to the procedure. If you do not use a parameter name, parameter values must be supplied in the order defined in the CREATE PROCEDURE statement.</dd>
<dt>
<b>@</b><i>variable </i></dt>
<dd>
Specifies the variable that stores a parameter value.</dd>
<dt>
OUTPUT</dt>
<dd>
Indicates that the stored procedure returns a parameter. The matching parameter in the stored procedure must also have been created with the keyword OUTPUT.</dd>
<dt>
DEFAULT</dt>
<dd>
Specifies that the default value is used.
</dd>
</dl>
<h4>Remarks</h4>
<p>
This statement allows you to run procedures on local or remote systems and store the returned information in a local table. The procedures can be system procedures, user-defined procedures, or extended procedures. </p>
<p>
Specify the system and procedure you want to run by specifying the procedure name. To specify a remote system, the procedure name will begin with the server name followed by the database name, the owner of the procedure, and the procedure name. Each element of the procedure name is followed by a period except for the procedure name itself. For example, the remote procedure<i> get_latest_sales</i> owned by <i>jake</i> on the <i>accounts</i> server would look like this: </p>
<pre>accounts.acct_db.jake.get_latest_sales
<b><i>  </i></b></pre>
<p>
The local table is loaded with data returned from SELECT statements. The local table must already exist. Data returned from the PRINT statement, RAISERROR statement, FETCH statement, or other output is not stored in the table. </p>
<p>
A procedure that returns multiple results sets appends the data to the table. </p>
<p>
Data returned from the SELECT statement must conform to the datatypes in the existing local table's columns. For example, inserting <i>varchar</i> data into a <i>tinyint</i> data column is not permitted.  </p>
<p>
All INSERT statement rules apply to this operation. That is, table constraints, rules and triggers, and implicit datatype conversion rules are all enforced during table population. For more information about INSERT statement rules, see <a href="../../../tsqlref/src/tsql10_9alw.htm">INSERT Statement</a>. </p>
<p>
For more information about writing procedures, see <a href="../../../tsqlref/src/tsql03_412s.htm">CREATE PROCEDURE Statement</a>. </p>
<p>
Errors are reported if there is a datatype mismatch between local table input columns and values returned from the procedure. Also, if the number of columns does not match the number of items returned in a row, an error is returned. </p>
<p>
For more information about executing a procedure, see <a href="../../../tsqlref/src/tsql08_8dx0.htm">EXECUTE Statement</a> in this document and in the <i>Microsoft SQL Server Transact-SQL Reference</i>. </p>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;Populate Local Tables with Remote Database Information </h5>
<p>
This example retrieves information from a remote database for administration purposes. The <i>human_resource.hr.dbo.fetch_employee_data</i> and <i>marketing.mis.dbo.fetch_sales_figures</i> procedures pull data from remote sites into local tables.</p>
<pre>INSERT INTO employee_info
EXECUTE human_resource.hr.dbo.fetch_employee_data
INSERT INTO sales_info
    EXECUTE marketing.mis.dbo.fetch_sales_figures 
<b><i>  </i></b></pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;Assign the Current Value of the SET Option to a Variable</h5>
<p>
This example shows how to use the new INSERT EXECUTE feature to enable Transact-SQL code to assign the current value of a SET option to a variable.</p>
<pre>SET NOCOUNT on
CREATE TABLE #tb_setopts
(SetOptName varchar(35) NOT NULL ,SetOptValue varchar(35) null)
INSERT INTO #tb_setopts (SetOptName,SetOptValue) 
EXEC('dbcc useroptions')
DECLARE @CurrentValue varchar(35)
SELECT @CurrentValue=case min(SetOptValue) WHEN 'SET' 
THEN 'on' else 'off' END
FROM #tb_setopts WHERE SetOptName='ansi_padding'
IF @CurrentValue='on' 
RAISERROR('The SET opt ''ansi_padding'' is''on''.' ,1,1)
ELSE
RAISERROR('The SET opt ''ansi_padding'' is''off''.',1,1)
IF object_id('tempdb..#tb_setopts') IS NOT NULL
DROP TABLE #tb_setopts

/********  Actual output....
DBCC execution completed. If DBCC printed error messages, see your
System Administrator.
The SET opt 'ansi_padding' is 'off'.
********/
<b><i>  </i></b></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
