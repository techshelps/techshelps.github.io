<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ROLLUP Operator</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rollup_operator"></a>ROLLUP Operator (version 6.5)</h1>
<p>
The ROLLUP operator is an aggregate operator that delivers aggregates and super-aggregates for elements within a GROUP BY statement. The ROLLUP operator is applicable to cumulative aggregates such as running sums or running averages. It differs from the CUBE operator only in that it is sensitive to the column's position in the GROUP BY clause. Aggregate groupings are made up of columns to the right of the current column value. </p>
<p>
The ROLLUP operator can be used by report writers to extract statistics and summary information from results sets. The cumulative aggregates, such as running sums, can be used in reports, charts, and graphs.  </p>
<p>
The ROLLUP operator creates groupings by moving in only one direction, from right to left, along the list of columns in the GROUP BY clause. It then applies the aggregate function to these groupings. The CUBE operator creates all combinations of groupings from the list of columns in the GROUP BY clause. </p>
<h4>Example</h4>
<p>
This example uses a SELECT query that contains an aggregate function and a GROUP BY clause, which lists <i>pub_name</i>, <i>au_lname</i>, and <i>title</i>, in that order. </p>
<pre>SELECT pub_name, au_lname, title, "SUM" = SUM(qty)
FROM publishers, authors, titles, titleauthor, sales
WHERE publishers.pub_id = titles.pub_id
AND authors.au_id = titleauthor.au_id
AND titleauthor.title_id = titles.title_id
AND titles.title_id = sales.title_id
GROUP BY pub_name, au_lname, title
WITH ROLLUP
</pre>
<p>
By using the ROLLUP operator, these groupings are created by moving right to left along the list of columns: </p>
<pre>pub_name      au_lname          title       SUM(qty)
pub_name      au_lname      (null)      SUM(qty)
pub_name      (null)        (null)      SUM(qty)
(null)        (null)        (null)      SUM(qty)
<b><i>  </i></b></pre>
<p>
The (null) value represents all values for that column. </p>
<p>
If you use the SELECT statement without the ROLLUP operator, the statement creates a single grouping. The query returns a sum value for each unique combination of <i>pub_name</i>, <i>au_lname</i>, and <i>title</i>. </p>
<pre>pub_name           au_lname          title          SUM(qty)
<b><i>  </i></b></pre>
<p>
Compare these examples with the groupings created by using the CUBE operator on the same query: </p>
<pre>pub_name        au_lname        title        SUM(qty)
pub_name        au_lname        (null)        SUM(qty)
pub_name        (null)        (null)        SUM(qty)
(null)        (null)        (null)        SUM(qty)
(null)        au_lname        title        SUM(qty)
(null)        au_lname        (null)        SUM(qty)
pub_name        (null)        title        SUM(qty)
(null)        (null)        title        SUM(qty)
</pre>
<p>
The groupings correspond to the information returned in the results set. Where you see <b>(</b>null) in the results set, it represents <i>all values</i> in the column. The ROLLUP operator returns the following data when the columns (<i>pub_name</i>, <i>au_lname</i>, <i>title</i>) are in the order listed in the GROUP BY clause: 
<ul>
<li>
The quantity of each title that each publisher has sold for each author.</li>
<li>
The quantity of all titles each publisher has sold for each author.</li>
<li>
The quantity of all titles each publisher has sold.</li>
<li>
The total quantity of all titles sold by all publishers for all authors.</li>
</ul>
<p>
This is the results set returned by the SELECT query: </p>
<pre>pub_name          au_lname     title                                SUM
----------------- ------------ ------------------------------------ ---
Algodata Infosys  Bendit       The Busy Executive's Database Guide  15 
Algodata Infosys  Bendit       (null)                               15 
Algodata Infosys  Carson       (null)                               30 
Algodata Infosys  Dull         Secrets of Silicon Valley            50 
Algodata Infosys  Dull         (null)                               50 
Algodata Infosys  Green        The Busy Executive's Database Guide  15 
Algodata Infosys  Green        (null)                               15 
Algodata Infosys  Hunter       Secrets of Silicon Valley            50 
Algodata Infosys  Hunter       (null)                               50 
Algodata Infosys  MacFeather   Cooking with Computers: Surre        25 
Algodata Infosys  MacFeather   (null)                               25 
Algodata Infosys  O'Leary      Cooking with Computers: Surre        25 
Algodata Infosys  O'Leary      (null)                               25 
Algodata Infosys  Straight     Straight Talk About Computers        15 
Algodata Infosys  Straight     (null)                               15 
Algodata Infosys  (null)       (null)                              225 
Binnet &amp; Hardley  Blotchet-Hal Fifty Years in Buckingham Palace Ki  20 
Binnet &amp; Hardley  Blotchet-Hal (null)                               20 
Binnet &amp; Hardley  DeFrance     The Gourmet Microwave                40 
Binnet &amp; Hardley  DeFrance     (null)                               40
Binnet &amp; Hardley  del Castillo Silicon Valley Gastronomic Treats    10 
Binnet &amp; Hardley  del Castillo (null)                               10 
Binnet &amp; Hardley  Gringlesby   Sushi, Anyone?                       20 
Binnet &amp; Hardley  Gringlesby   (null)                               20 
Binnet &amp; Hardley  Karsen       Computer Phobic AND Non-Phobic Indiv 20 
Binnet &amp; Hardley  Karsen       (null)                               20 
Binnet &amp; Hardley  MacFeather   Computer Phobic AND Non-Phobic Indiv 20 
Binnet &amp; Hardley  MacFeather   (null)                               20 
Binnet &amp; Hardley  O'Leary      Sushi, Anyone?                       20 
Binnet &amp; Hardley  O'Leary      (null)                               20 
Binnet &amp; Hardley  Panteley     Onions, Leeks, and Garlic: Cooking   40 
Binnet &amp; Hardley  Panteley     (null)                               40 
Binnet &amp; Hardley  Ringer       The Gourmet Microwave                40 
Binnet &amp; Hardley  Ringer       (null)                               40 
Binnet &amp; Hardley  Yokomoto     Sushi, Anyone?                       20 
Binnet &amp; Hardley  Yokomoto     (null)                               20 
Binnet &amp; Hardley  (null)       (null)                              250 
New Moon Books    Green        You Can Combat Computer Stress!      35 
New Moon Books    Green        (null)                               35 
New Moon Books    Locksley     Emotional Security: A New Algorithm  25 
New Moon Books    Locksley     (null)                               25 
New Moon Books    Ringer       Is Anger the Enemy?                 216 
New Moon Books    Ringer       Life Without Fear                    25 
New Moon Books    Ringer       (null)                              241 
New Moon Books    White        Prolonged Data Deprivation: Four     15 
New Moon Books    White        (null)                               15 
New Moon Books    (null)       (null)                              316 
(null)            (null)       (null)                              791 
<b><i>  </i></b>
(49 row(s) affected)
<b><i>  </i></b></pre>
<p>
For more information about the ROLLUP operator, see <a href="addnfeat_0cok.htm">SELECT Statement</a>. </p>
<p>
The GROUPING function can be used with the ROLLUP operator or with the CUBE operator. You can apply this function to one of the columns in the <i>select_list</i> and it returns either 1 or 0 depending upon whether the column is grouped by the ROLLUP operator. For more information about the GROUPING function, see <a href="addnfeat_0cok.htm">SELECT Statement</a> or <a href="addnfeat_6she.htm">CUBE Operator</a>. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
