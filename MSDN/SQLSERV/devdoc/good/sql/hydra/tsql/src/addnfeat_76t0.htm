<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Trace Flags</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_trace_flags_addnfeat"></a>Trace Flags (version 6.5)</h1>
<p>
Trace flags are used to temporarily set specific server characteristics. For example, if you set the trace flag 8501 when you start SQL Server, detailed information is logged about MS DTC transactions. </p>
<p>
Trace flags are generally used to switch off a particular behavior. SQL Server 6.5 introduces many new features, some of which can be switched off by using a trace flag. Often trace flags are used to diagnose performance issues and to debug stored procedures or complex systems.  </p>
<p>
This is how to start a trace flag by using the DBCC command:</p>
<pre>DBCC TRACEON (8501)
<b><i>  </i></b></pre>
<p>
These flags are new or enhanced in SQL Server 6.5.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=29%></th>
<th align=left width=71%></th>
</tr>
<tr valign=top>
<th align=left width=29%></th>
<th align=left width=71%></th>
</tr>
<tr valign=top>
<th align=left width=29%>Flag</th>
<th align=left width=71%>Description</th>
</tr>
<tr valign=top>
<td width=29%>110</td>
<td width=71%>Disables ANSI SELECT characteristics. For more information, see <a href="addnfeat_0cok.htm">SELECT Statement</a>.</td>
</tr>
<tr valign=top>
<td width=29%>204 </td>
<td width=71%>Supports queries that contain sort columns in the ORDER BY clause that are not in the select list when the DISTINCT keyword is supplied. For more information, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</td>
</tr>
<tr valign=top>
<td width=29%>237</td>
<td width=71%>Disables the requirement for REFERENCES permission to create a foreign key on a table that is not owned by the key creator, and when disabled ensures ANSI-standard behavior. When enabled, this flag needs only SELECT permission and SQL Server 6.0 behavior is ensured. </td>
</tr>
<tr valign=top>
<td width=29%>246</td>
<td width=71%>Disables error reporting when no column name is given to a column created by a SELECT INTO or a CREATE VIEW statement.</td>
</tr>
<tr valign=top>
<td width=29%>330</td>
<td width=71%>Enables full output when using the SET SHOWPLAN option, which gives detailed information about joins.</td>
</tr>
<tr valign=top>
<td width=29%>506</td>
<td width=71%>Enforces ANSI standards regarding null values for comparisons between variables and/or parameters. Any comparison of variables and/or parameters that contain a NULL will always result in a NULL.<p>
This flag is disabled if ANSI_NULLS is enabled (set to True).</p>
</td>
</tr>
<tr valign=top>
<td width=29%>1081</td>
<td width=71%>Sets a flag in index pages that prevents index pages from being removed from the cache the first time the cache tries to remove them to make space for new data. Unless the index page is reused and the flag is reset, the index page is received next time the cache requires space for new data pages. This flag extends the life of the index page within the cache. Use this flag on databases where performance gained by retaining the index pages in the cache outweighs the performance lost by the increase in data page I/O.</td>
</tr>
<tr valign=top>
<td width=29%>2701</td>
<td width=71%>Sets the global variable @@ERROR to 50000 for RAISERROR messages with severity levels of 10 and under. When disabled, sets the global variable @@ERROR to 0 for RAISERROR messages with severity levels of 10 and under.</td>
</tr>
<tr valign=top>
<td width=29%>3002</td>
<td width=71%>Backups will have SQL Server 6.0 DUMP format. To use this option the database must be running in stand-alone mode by setting the database option "DBO UseOnly" to TRUE.</td>
</tr>
<tr valign=top>
<td width=29%>4022</td>
<td width=71%>In SQL Server 6.5, bypasses automatically started procedures.</td>
</tr>
<tr valign=top>
<td width=29%>7501</td>
<td width=71%>In SQL Server 6.5, dynamic cursors are used by default on forward-only cursors. Dynamic cursors are faster in version 6.5 and no longer require unique indexes. This flag disables the dynamic cursor enhancements and reverts to version 6.0 behavior.</td>
</tr>
<tr valign=top>
<td width=29%>7502</td>
<td width=71%>Disables the caching of cursor plans for extended stored procedures.</td>
</tr>
<tr valign=top>
<td width=29%>8501</td>
<td width=71%>Performs detailed logging that describes all MS DTC-related context and state changes.</td>
</tr>
</table><br>
<p>
Trace flags are set when SQL Server is started at the command prompt. For more information about "sqlservr command-line executable," see the <i>Microsoft SQL Server Transact-SQL Reference</i>. This is how to start SQL Server with a trace flag at the command prompt: </p>
<pre>sqlservr /dc:\mssql\data\master.dat /T8501
<b><i>  </i></b></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
