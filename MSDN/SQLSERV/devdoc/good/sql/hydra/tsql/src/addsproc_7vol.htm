<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>sp_help_revdatabase</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sp_help_revdatabase"></a>sp_help_revdatabase (version 6.5)</h2>
<p>
Analyzes an existing database and creates a script that can be used to replicate the database structure on another server.</p>
<h4>Syntax</h4>
<p>
<b>sp_help_revdatabase</b> [<i>DBNamePattern</i>]</p>
<p>
where
<dl>
<dt>
<i>DBNamePattern</i></dt>
<dd>
Specifies a database name pattern. The name pattern must adhere to the LIKE operator standards for string arguments. The default is <b>'%'</b> (all databases will be affected).
<p>
For more information about the LIKE operator, see <a href="../../../tsqlref/src/tsql30_6far.htm">Wildcard Characters</a> in the <i>Microsoft SQL Server Transact-SQL Reference</i>.

</dd>
</dl>
<h4>Remarks</h4>
<p>
The purpose of the <b>sp_help_revdatabase</b> stored procedure is to ease the task of building a database by ensuring the <i>lpage</i> (logical page) and<i> segmap</i> (segment map) structures are compatible with an existing database.</p>
<p>
The output of this system stored procedure is a script of CREATE/ALTER DATABASE statements that match an existing database. The output also contains any necessary invocations of <b>sp_logdevice</b> to update <i>sysusages.segmap</i>. For every row in the <i>sysusages</i> system table, <b>sp_help_revdatabase</b> produces an ALTER DATABASE statement. With fewer rows in the <i>sysusages</i> system table, fewer ALTER DATABASE statements are produced by <b>sp_help_revdatabase</b> and fewer rows in <i>sysusages </i>make it easier to verify compatible logical page and segment map combinations between databases.</p>
<p>
The database and device names in the generated script output can be edited in preparation for creating another database with compatible <i>lpage</i> and <i>segmap</i> structures. The output script might be unable to achieve compatible <i>lpage</i> and <i>segmap</i> structures when any fragment size in the original database is not an even multiple of 512 2K pages. When this procedure detects fragments with a size not evenly divisible by 512, <b>sp_help_revdatabase</b> includes in the output a cautionary comment indicating that the ALTER size in 1 MB units represents a <i>rounded-up</i> representation of the size as recorded in 2K pages in <i>sysusages</i>. You can avoid this problem if you code size-parameter values in even multiples of 512 2K pages when you issue DISK INIT statements.</p>
<p>
System administrators sometimes load a database or table backup file from a production database into a database on another server. Requirements for successful cross-database dump and load activities are documented under the LOAD statement in the <i>Microsoft SQL Server Transact-SQL Reference</i>. One requirement is that the two databases have compatible <i>lpage</i> and <i>segmap</i> column information in the <i>sysusages </i>table. The target database must be created so the <i>segmap</i> for each range of logical pages (<i>lpage</i>) is compatible with the same information in the dumped database.</p>
<p>
<b>Important</b>  If the target and destination databases have different <i>segmap</i> structures, dumped or loaded databases can experience data access problems.</p>
<p>
Two databases have compatible <i>lpage</i> and <i>segmap</i> structures if for every given <i>lpage</i> number they have the same <i>segmap</i> value. Fragment sizes and sequences are not an issue. If one database is larger than the other, some of the larger database's <i>lpage</i> numbers will not exist for the smaller database. A smaller database can be loaded into a larger database, but a larger database cannot be loaded into a smaller database.</p>
<p>
For more information about logical pages, see the <i>Microsoft SQL Server Administrator's Companion</i>.</p>
<p>
For more information about preparing to run <b>sp_help_revdatabase</b>, see <a href="addsproc_49df.htm"><b>sp_coalesce_fragments</b></a>, earlier in this document.</p>
<p>
For more information about altering a database, see the <a href="../../../tsqlref/src/tsql01_9b04.htm">ALTER DATABASE statement</a> in the <i>Microsoft SQL Server Transact-SQL Reference</i>. </p>
<p>
For more information about performing a database load, see the <a href="../../../tsqlref/src/tsql11_756c.htm">LOAD statement</a> in the <i>Microsoft SQL Server Transact-SQL Reference.</i></p>
<p>
For more information about performing a database backup, see the <a href="../../../tsqlref/src/tsql08_2zxw.htm">DUMP statement</a> in the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<h4>Example</h4>
<p>
This example shows the results of running <b>sp_help_revdatabase</b> after executing <b>sp_coalesce_fragments</b>. Since <b>sp_coalesce_fragments </b>does not generate any output, this example only shows the output from running <b>sp_help_revdatabase</b>.</p>
<pre>SELECT
'dbname'=substring(db_name(ug.dbid),1,10)
,ug.segmap,ug.lstart -- page number within a database
,ug.size,ug.vstart -- page number within dv    
,'(vstart+size)' = ug.vstart + ug.size
,'device'=substring(dv.name,1,10)
FROM
master.dbo.sysusages ug,master.dbo.sysdevices dv 
WHERE ug.vstart between dv.low and dv.high     AND
dv.status &amp; 2 = 2 --physical disk
AND
db_name(ug.dbid) in ('DB1','DB22','db_junk3')
ORDER BY ug.vstart
<b><i>  </i></b></pre>
<p>
This is the results set:</p>
<pre>dbname segmap lstart size vstart    (vstart+size) device     
------ ------ ------ ---- --------- ------------- ------
DB5         3      0 1024 520093696     520094720 dv9        
DB66        3      0 1536 520094720     520096256 dv9        
DB5         3   1024  512 520096256     520096768 dv9        
DB5         4   1536  512 536870912     536871424 dv8        
DB66        4   1536 1024 536871424     536872448 dv8        
DB5         4   2048  512 536872448     536872960 dv8        
DB777       3      0 1024 687865856     687866880 dv7        
DB777       3   2048  512 687866880     687867392 dv7        
DB777       4   1024 1024 704643072     704644096 dv6        
<b><i>  </i></b></pre>
<p>
This is the output from running <b>sp_help_revdatabase</b>:</p>
<pre>-- This is the command for executing sp_help_revdatabase
EXECUTE sp_help_revdatabase
-- This is the output generated by executing sp_help_revdatabase
CREATE Database DB5 on dv9 = 2 --  2 Mb = 1024 2Kb pages
go
ALTER  Database DB5 on dv9 = 1
go
ALTER  Database DB5 on dv8 = 1
go
Execute sp_logdevice DB5,dv8
go
ALTER  Database DB5 on dv8 = 1
go
Execute sp_logdevice DB5 ,dv8
go
-- - - - - -
CREATE Database DB66  on dv9 = 3
go
ALTER  Database DB66  on dv8 = 2
go
Execute sp_logdevice DB66 ,dv8
go
-- - - - - -
CREATE Database DB777 on dv7 = 2
go
ALTER  Database DB777 on dv6 = 2
go
Execute sp_logdevice DB777 ,dv6
go
ALTER  Database DB777 on dv7 = 1
<b><i>  </i></b></pre>
<p>
The output this procedure generated differs for databases DB5 and DB66. However, both of these databases can be safely loaded with a dump from the other. However, DB777 cannot be involved with dump and load activity along with DB5 or DB66. The following SELECT statement example shows the <i>lpage</i> and <i>segmap</i> combinations for all of these databases after running <b>sp_coalesce_fragments</b>.</p>
<pre>SELECT
         'DBName'=substring(db_name(ug.dbid),1,6),
        'FromLPage'=ug.lstart,
        'ToLPage'  =ug.lstart + ug.size - 1,
        ug.segmap
FROM
         master.dbo.sysusages ug
ORDER BY
         DBName,FromLPage
<b><i>  </i></b>
DBName FromLPage   ToLPage     segmap      
------ ----------- ----------- ----------- 
DB5              0        1023           3 
DB5           1024        1535           3 
DB5           1536        2047           4 
DB5           2048        2559           4 
DB66             0        1535           3 
DB66          1536        2559           4 
DB777            0        1023           3 
DB777         1024        2047           4 
DB777         2048        2559           3 
<b><i>  </i></b></pre>
<p>
<b>Note</b>  <i>lpage</i> 1029 corresponds to a <i>segmap</i> of 3 for databases DB5 and DB66, but to a <i>segmap</i> of 4 for DB777. Because the <i>lpage</i> and <i>segmap</i> combinations are in agreement between DB5 and DB66, dump and load activity between the two databases is safe. This dump and load activity is safe even though DB5 and DB66 have different numbers of fragments after <a href="addsproc_49df.htm"><b>sp_coalesce_fragments</b></a> has been run.</p>
<p>
This procedure does not update or change anything on the server.</p>
<h4>Permission</h4>
<p>
Execute permissions default to permissions of the <i>public</i> group.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
