<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LOAD Statement</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_load_statement_addnfeat"></a>LOAD Statement (version 6.5)</h2>
<p>
Loads a backup copy of one of the following: 
<ul>
<li>
User database and its transaction log (LOAD DATABASE)</li>
<li>
Transaction log (LOAD TRANSACTION)</li>
<li>
Table (LOAD TABLE)</li>
<li>
Header information about the dump (LOAD HEADERONLY)</li>
</ul>
<p>
For additional syntax information for the <a href="../../../tsqlref/src/tsql11_756c.htm">LOAD statement</a>, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.  </p>
<p>
The LOAD TRANSACTION statement supports the STOPAT option, which stops a roll forward at a specified time. </p>
<p>
The LOAD TABLE statement loads a backup copy of a table into a database.  </p>
<p>
The LOAD HEADERONLY statement returns additional columns. </p>
<h4>Syntax</h4>
<p>
<b>To load a table:</b> </p>
<p>
LOAD TABLE [[<i>database</i><b>.</b>]<i>owner</i><b>.</b>]<i>table_name</i> <br>
&nbsp;&nbsp;&nbsp;&nbsp;FROM <i>dump_device</i> [<b>,</b> <i>dump_device2</i> [...<b>,</b> <i>dump_device32</i>]]<br>
[WITH <i>options</i>] </p>
<p>
<b>To load a transaction log:</b> </p>
<p>
LOAD TRANSACTION {<i>dbname</i> | <b>@</b><i>dbname_var</i>}<br>
&nbsp;&nbsp;&nbsp;&nbsp;FROM <i>dump_device</i> [<b>,</b> <i>dumpdevice2</i> [...<b>,</b> <i>dumpdevice32</i>]]<b><br>
</b>[WITH <i>options</i>]</p>
<p>
<b>To load header information:</b> </p>
<p>
LOAD HEADERONLY<br>
&nbsp;&nbsp;&nbsp;&nbsp;FROM <i>dump_device</i></p>
<p>
where 
<dl>
<dt>
<i>dump_device</i> <b>=</b></dt>
<dd>
{<i>dump_device_name</i> | <b>@</b><i>dump_device_name_var</i>}<br>
|{DISK | TAPE | FLOPPY | PIPE} <b>=</b><br>
{<b>'</b><i>temp_dump_device</i><b>'</b> | <b>@</b><i>temp_dump_device_var</i>}<br>
[VOLUME <b>=</b> {<i>volid</i> | <b>@</b><i>volid_var</i>}]</dd>
<dt>
<i>options</i> <b>=</b> </dt>
<dd>
[[<b>,</b> ] {UNLOAD | NOUNLOAD}]<br>
[[<b>,</b> ] {SKIP | NOSKIP}]<br>
[[<b>,</b> ] FILE <b>=</b> <i>fileno</i>]<br>
[[<b>,</b> ] STOPAT <b>=</b> {<i>date_time </i>| <b>@</b><i>date_time_var</i>}]<br>
[[<b>,</b> ] SOURCE <b>=</b> <i>source_name</i>]<br>
[[<b>,</b> ] APPEND]<br>
[[<b>,</b> ] STATS [<b>=</b> <i>percentage</i>]]</dd>
<dt>
TABLE</dt>
<dd>
Specifies that a table is to be restored.</dd>
<dt>
TRANSACTION</dt>
<dd>
Specifies that only the transaction log is to be applied to this database. Transaction logs must be applied in sequential order. SQL Server checks the time stamps on the dumped transactions to ensure that the transactions are loaded into the correct database and in the correct sequence.</dd>
<dt>
<i>table_name</i></dt>
<dd>
Is the name of table to be restored.</dd>
<dt>
<i>dbname</i> | @<i>dbname_var</i></dt>
<dd>
Is the database from which the transaction log or complete database is being loaded. The database name can be specified as a <i>string</i>, <i>char</i>, or <i>varchar</i> variable.</dd>
<dt>
<i>dump_device_name</i> | @<i>dump_device_name_var</i></dt>
<dd>
Is the logical name of the dump device as created by the <b>sp_addumpdevice </b>stored procedure. The dump device name can be specified as a <i>string</i>, <i>char</i> or <i>varchar</i> variable.</dd>
<dt>
DISK | TAPE | FLOPPY | PIPE =</dt>
<dd>
<b>'</b><i>temp_dump_device</i><b>'</b> | <i>@temp_dump_device_var<br>
</i>Specifies the backup device media and is the temporary dump device from which to load the backup. These devices must exist when the load occurs; they do not have entries in <i>sysdevices</i>. The device types of DISK, TAPE, and FLOPPY should be specified with the complete path and filename of the device. A device type of PIPE should specify the named pipe that will be used by the client application. If specified as a variable (<b>@</b><i>temp_dump_device_var</i>), the device name can be specified as a <i>string</i> or as a <i>char</i> or <i>varchar</i> variable. If you are using either a network server with a Universal Naming Convention (UNC) name or a redirected drive letter, specify a device type of DISK.

<p>
<b>Important</b>  When specifying a striped dump, you can use both logical device names (or variables) and temporary device names (or variables). PIPE devices have been added to allow third-party vendors a flexible and powerful way to connect their own software. For typical Transact-SQL use, the PIPE device is not used.

</dd>
<dt>
VOLUME <b>=</b> <i>volid</i> | <b>@</b><i>volid_var</i></dt>
<dd>
Specifies the volume ID of the backup device, a 6-byte character string. If dumping to a new tape, this value is the name of the ANSI VOL1 label. For SQL Server, the default is SQL001. For subsequent dumps, this value is used to validate the volume name of the dump device. If specified as a variable (<b>@</b><i>volid_var</i>), the volume name can be specified as a string or as a <i>char</i> or <i>varchar</i> variable. Explicitly specifying the volume ID is not recommended.</dd>
<dt>
UNLOAD</dt>
<dd>
Specifies that the tape be automatically rewound and unloaded when the LOAD is finished. UNLOAD is the default setting when a new user session is started. It remains set until that user specifies NOUNLOAD. This option is used only for tape devices.</dd>
<dt>
NOUNLOAD</dt>
<dd>
Specifies that the tape not be automatically unloaded when the LOAD is finished. NOUNLOAD remains set until UNLOAD is specified. This option is used only for tape devices.</dd>
<dt>
SKIP</dt>
<dd>
Specifies that the server not read the ANSI tape device headers.</dd>
<dt>
NOSKIP</dt>
<dd>
Specifies that the server read the ANSI tape device headers. This is the default.</dd>
<dt>
FILE</dt>
<dd>
Specifies that a file from a tape or disk device will provide the database, table or transaction log to load.</dd>
<dt>
FILE <b>=</b><i> fileno</i></dt>
<dd>
Is the file number to be loaded from the tape or disk device that contains multiple database backups. Load the first dump on the device (the default, 1).</dd>
<dt>
STOPAT <b>=</b> <i>date_time </i>|<i> </i><b>@</b><i>date_time_var</i></dt>
<dd>
Is the date and time to stop loading a dump onto the database. If a variable is used for STOPAT, the variable should have a <i>varchar </i>or a <i>char </i>datatype. Only log records written before the specified date and time will be applied to the database.</dd>
<dt>
APPEND</dt>
<dd>
Specifies that all new data will be added to a table that already contains data. For LOAD TABLE use only.</dd>
<dt>
SOURCE <b>=</b> <i>source_nam</i>e</dt>
<dd>
Is the name of the source from which to load the table. This option must be specified if the source and target table names differ. For LOAD TABLE use only.</dd>
<dt>
STATS <b>=</b> <i>percentage</i></dt>
<dd>
Is the percentage of pages loaded in increments optionally set at the time of the load. If a percentage is not specified, statistics are shown for each 10 percent of the load. This option is available only for database and table loads.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The LOAD TABLE statement loads only one table at a time, which provides more control when recovering a database. Loading a table from a database dump is discouraged because if data manipulation transactions were occurring on the table when the database dump was performed, the data in the table may be logically inconsistent. You should load a table from a database dump only in disaster recovery situations, and even then it is important that you understand that the data loaded from the dump may be inconsistent. </p>
<p>
When loading a table, use a <i>target table</i> and <i>data source table</i>. The <i>data source table</i> holds the data to be loaded to the target table; it can be a full database backup or an individual table backup.  </p>
<p>
For example, a company maintains a mailing list that is updated quarterly by an outside agency. The mailing list table has no index. The company wants to replace the existing mailing list with the new, agency-supplied mailing list. You could use a procedure that deletes all of the rows of the old table and inserts new rows, but a more efficient approach is to load the new table from a backup.  </p>
<p>
When loading a table, an EXCLUSIVE TABLE lock is placed on the table. No one else can read or modify the table while it is being loaded.  </p>
<p>
<b>Important</b>  It is recommended that you load a table only from a table dump file because a table dump file is generated from a locked table. It provides an up-to-date snapshot of the table. If you load a table from a database dump file, you will not get any outstanding transactions because the LOAD TABLE statement does not load transactions from the transaction log.</p>
<p>
The schema for the data source table and the target table must match for the load to be successful. The names of the tables can be different if the SOURCE option is specified, but the underlying table structure must be the same in terms of base system types, lengths, and nullability. </p>
<p>
<b>Note</b>  Once you have performed a load table operation, you must do a full database dump. Until you dump the full database, the transaction log cannot be dumped.</p>
<p>
Using LOAD TABLE on a populated table is permitted if you use the APPEND option. </p>
<p>
During load operations, triggers, rules, defaults, and declarative referential integrity (FOREIGN KEY, CHECK, PRIMARY KEY) are not enforced. </p>
<p>
<b>Important</b>  Table loads are not permitted on tables that have text columns, indexes, or are published for replication. Table loads from mixed platforms are not supported. For example, you cannot dump a table on an Alpha-based server and load it into a table on an Intel-based server.</p>
<p>
When a transaction log is not completely correct (because of possible user error) and you want to apply transactions up to a certain point in time, use the LOAD TRANSACTION statement with the STOPAT clause. If you are unsure which transaction log contains the stopping time, specify the STOPAT clause for all transaction logs that are being loaded. </p>
<p>
For example, suppose a user mistakenly deletes the rows in a table on Sunday, Aug. 4, 1996 at 1:00 p.m. The transaction log's last transaction time was Sunday, Aug. 4, 1996 at 1:30 p.m. The STOPAT option is used to stop the roll forward at 12:55 p.m. on Sunday, Aug. 4, 1996. Transactions are applied up to just prior to the deletion. </p>
<p>
The LOAD HEADERONLY statement retrieves all the volume and dump header information for all dumps on a particular dump device. The information is returned in a tabular format. These columns have been added to the LOAD HEADERONLY results set.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=26%></th>
<th align=left width=22%></th>
<th align=left width=52%></th>
</tr>
<tr valign=top>
<th align=left width=26%></th>
<th align=left width=22%></th>
<th align=left width=52%></th>
</tr>
<tr valign=top>
<th align=left width=26%>New columns</th>
<th align=left width=22%>Datatype</th>
<th align=left width=52%>Comment</th>
</tr>
<tr valign=top>
<td width=26%>BackupStart</td>
<td width=22%><i>datetime</i></td>
<td width=52%>Date and time of the oldest committed transaction. Cannot be NULL.</td>
</tr>
<tr valign=top>
<td width=26%>BackupFinish</td>
<td width=22%><i>datetime</i></td>
<td width=52%>Date and time of the most recently committed transaction. Cannot be NULL.</td>
</tr>
<tr valign=top>
<td width=26%>ServerSort</td>
<td width=22%><i>int</i></td>
<td width=52%>Server sort order. Cannot be NULL. This column is valid for database dumps only.</td>
</tr>
<tr valign=top>
<td width=26%>ServerCodePage</td>
<td width=22%><i>int</i></td>
<td width=52%>Server code page, which is the character set used by the server. Value is 0 when viewing a version 6.0 or earlier dump.</td>
</tr>
<tr valign=top>
<td width=26%>TableOwner</td>
<td width=22%><i>char(30)</i></td>
<td width=52%>Table owner.</td>
</tr>
<tr valign=top>
<td width=26%>OperatorName</td>
<td width=22%><i>char(30)</i></td>
<td width=52%>Name of the user performing the dump operation. Cannot be NULL unless viewing a version 6.0 or earlier database backup.</td>
</tr>
<tr valign=top>
<td width=26%>ProcessorType</td>
<td width=22%><i>int</i></td>
<td width=52%>CPU architecture number. Cannot be NULL.</td>
</tr>
<tr valign=top>
<td width=26%>SQLVersionMajor</td>
<td width=22%><i>int</i></td>
<td width=52%>Major version number of server that made the dump. Cannot be NULL. Value is 0 when viewing a version 6.0 or earlier dump.</td>
</tr>
<tr valign=top>
<td width=26%>SQLVersionMinor</td>
<td width=22%><i>int</i></td>
<td width=52%>Minor version number of server that made the dump. Cannot be NULL. Value is 0 when viewing a version 6.0 or earlier dump.</td>
</tr>
<tr valign=top>
<td width=26%>SQLVersionBuild</td>
<td width=22%><i>int</i></td>
<td width=52%>Build number of server that made the dump. Cannot be NULL. Value is 0 when viewing a version 6.0 or earlier dump.</td>
</tr>
</table><br>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;Load a Table</h5>
<p>
This example loads the <i>employee_table</i> from the disk file <i>dump1</i> into  the <i>personnel</i> table.</p>
<pre>LOAD TABLE personnel FROM dump1 WITH source='employee_table', APPEND
<b><i>  </i></b></pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;Load a Transaction</h5>
<p>
This example loads a transaction log for the <i>corporate</i> database and stops it on Nov. 4, 1996 at 2:00 p.m..</p>
<pre>LOAD TRANSACTION corporate FROM TAPEDUMP1 
    WITH STOPAT='1996 110414:00:00'
<b><i>  </i></b></pre>
<h5>C.&nbsp;&nbsp;&nbsp;&nbsp;Load a Header Only</h5>
<p>
This example loads the header only from a predefined device.</p>
<pre>LOAD HEADERONLY FROM dump_dev1
<b><i>  </i></b></pre>
<h4>Permission</h4>
<p>
INSERT permission is required to load a table. The target table's database must have the <b>select into/bulkcopy</b> database option set before loading a table. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
