<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>sp_OAMethod</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sp_oamethod"></a>sp_OAMethod</h2>
<p>
Calls a method of an OLE object.</p>
<h4>Syntax</h4>
<p>
<b>sp_OAMethod</b> <i>objecttoken</i><b>,</b> <i>methodname</i><b>,</b> [<i>returnvalue</i> OUTPUT <br>
[<b>,</b> [<b>@</b><i>parametername </i><b>=</b>]<b> </b><i>parameter</i> [OUTPUT]...]]</p>
<p>
where
<dl>
<dt>
<i>objecttoken</i></dt>
<dd>
Is the object token of an OLE object previously created by <b>sp_OACreate</b>.</dd>
<dt>
<i>methodname</i></dt>
<dd>
Is the method name of the OLE object to call.</dd>
<dt>
<i>returnvalue </i>OUTPUT</dt>
<dd>
Is the return value of the method of the OLE object. If specified, it must be a local variable of the appropriate datatype.</dd>
<dt>
[<b>@</b><i>parametername </i><b>=</b>] <i>parameter</i> [OUTPUT]</dt>
<dd>
Is a method parameter. If specified, <i>parameter</i> must be a value of the appropriate datatype.
<p>
To obtain the return value of an output parameter, <i>parameter</i> must be a local variable of the appropriate datatype, and OUTPUT must be specified. If a constant <i>parameter</i> is specified, or if OUTPUT is not specified, any return value from an output parameter is ignored.

<p>
If specified, <i>parametername </i>must be the name of the Visual Basic named parameter. Note that <i><b>@</b>parametername </i>is not a Transact-SQL local variable. The at (<b>@</b>) is removed, and <i>parametername </i>is passed to the OLE object as the parameter name. All named parameters must be specified after all positional parameters are specified.
</dd>
</dl>
<h4>Remarks</h4>
<p>
If the method returns a single value, either:
<ul>
<li>
Specify a local variable for <i>returnvalue</i>. The method return value is returned in the local variable.<p>
Or
</li>
<li>
Do not specify <i>returnvalue</i>. The method return value is returned to the client as a single-column, single-row results set.</li>
</ul>
<p>
If the method return value is an OLE object, you must specify a local variable of datatype <i>int</i> for the <i>returnvalue</i> parameter. An object token will be stored in the local variable, and this object token can be used with other OLE Automation stored procedures.</p>
<p>
If the method return value is an array with one or two dimensions, the array will be returned to the client as a results set as follows:
<ul>
<li>
A one-dimensional array is returned to the client as a single-row results set with as many columns as there are elements in the array. In other words, the array is returned as (columns).</li>
<li>
A two-dimensional array is returned to the client as a results set with as many columns as there are elements in the first dimension of the array and with as many rows as there are elements in the second dimension of the array. In other words, the array is returned as (columns, rows).</li>
</ul>
<p>
When the method return value is an array, if <i>returnvalue</i> is specified, it is set to NULL.</p>
<p>
An error occurs under any of the following circumstances:
<ul>
<li>
If <i>returnvalue</i> is specified, but the method does not return a value</li>
<li>
If the method returns an array with more than two dimensions</li>
<li>
If the method returns an array as an output parameter</li>
</ul>
<p>
Note that <b>sp_OAMethod</b> can also be used to get a property value.</p>
<p>
This procedure returns a 0 when successful or a non-zero HRESULT when an error occurs.</p>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;Call a Method</h5>
<p>
This example calls the Connect method of the previously created SQLServer object.</p>
<pre>EXEC @hr = sp_OAMethod @object, 'Connect', NULL, 'my_server',
    'my_login', 'my_password'
IF @hr &lt;&gt; 0
BEGIN
    EXEC sp_displayoaerrorinfo @object, @hr
    RETURN
END
<b><i>  </i></b></pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;Get a Property</h5>
<p>
This example gets the HostName property (of the previously created SQLServer object) and stores it in a local variable.</p>
<pre>DECLARE @property varchar(255)
EXEC @hr = sp_OAMethod @object, 'HostName', @property OUT
IF @hr &lt;&gt; 0
BEGIN
    EXEC sp_displayoaerrorinfo @object, @hr
    RETURN
END
PRINT @property
<b><i>  </i></b></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
