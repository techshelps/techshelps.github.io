<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ConnectionPoint Events</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_connectionpoint_events"></a>ConnectionPoint Events</h1>
<p>
ConnectionPoint events allow a COM object to receive events from SQL-DMO objects. ConnectionPoint point events are available only to C++ applications.</p>
<p>
To implement the event methods of a SQL-DMO object named <i>Object</i> that supports ConnectionPoint events, a COM object (typically named <i>Object</i><b>Sink</b>) must follow these requirements:
<ul>
<li>
Inherit from the ISQLOLE<i>Object</i>Sink interface to get the correct VTBL.</li>
<li>
Implement all event methods for the SQL-DMO object that is included in the ISQLOLE<i>Object</i>Sink interface.</li>
<li>
Respond to the IID_ISQLOLE<i>Object</i>Sink interface ID.</li>
</ul>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To use events of a SQL-DMO object named <i>Object </i>that supports ConnectionPoint events</h5>
<ol>
<li>
Call the <b>IUnknown::QueryInterface</b> method of the SQL-DMO object that supports ConnectionPoint events. Pass IID_IConnectionPointContainer as the <i>riid</i> parameter, and pass the address of a pointer to a ConnectionPointContainer object as the <i>ppvObj</i> parameter.<p>
<b>QueryInterface</b> will set <i>ppvObj</i> to point to a ConnectionPointContainer object.
</li>
<li>
Call the <b>IConnectionPointContainer::FindConnectionPoint</b> method of the ConnectionPointContainer object. Pass the event sink interface ID of the SQL-DMO object as the first (<i>xxx</i>) parameter, and pass the address of a pointer to a ConnectionPoint object as the second (<i>yyy</i>) parameter. <p>
<b>FindConnectionPoint</b> will set <i>yyy</i> to point to a ConnectionPoint object.
</li>
<li>
Create an <i>Object</i>Sink object.</li>
<li>
Call the <b>ISQLOLE</b><i>Object</i><b>Sink::Advise</b> method of the ConnectionPoint object. Pass a pointer to the <i>Object</i>Sink object as the <i>pAdvSink</i> parameter, and pass the address of a token as the <i>pdwConnection</i> parameter.<p>
<b>Advise</b> will set <i>pdwConnection</i> to an advisement identifier, or "cookie," that is used when calling <b>ISQLOLE</b><i>Object</i><b>Sink::Unadvise</b>.
</li>
<li>
Use the SQL-DMO object. When a SQL-DMO event for that object is fired, SQL-DMO will call the appropriate event method of the <i>Object</i>Sink object.</li>
<li>
Call the <b>ISQLOLE</b><i>Object</i><b>Sink::Unadvise</b> method of the ConnectionPoint object. Pass the "cookie" advisement identifier as the <i>dwConnection</i> parameter.<p>
SQL-DMO will no longer call the <i>Object</i>Sink object when SQL-DMO events are fired.
</li>
<li>
Call the <b>IUnknown::Release</b> method of the ConnectionPoint object.</li>
<li>
Call the <b>IUnknown::Release</b> method of the ConnectionPointContainer object.</li>
</ol>
<p>
The following table lists the SQL-DMO objects that support ConnectionPoint events and the event sink interfaces and interface IDs for each of them.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=24%></th>
<th align=left width=33%></th>
<th align=left width=43%></th>
</tr>
</table><br>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=24%>SQL-DMO <br>
object</th>
<th align=left width=33%>Event sink <br>
interface</th>
<th align=left width=43%>Event sink <br>
interface ID</th>
</tr>
</table><br>
<table cellspacing=4 cols=3>
<tr valign=top>
<td width=24%>SQLServer</td>
<td width=33%>ISQLOLEServerSink</td>
<td width=43%>IID_ISQLOLEServerSink</td>
</tr>
<tr valign=top>
<td width=24%>Backup</td>
<td width=33%>ISQLOLEBackupSink</td>
<td width=43%>IID_ISQLOLEBackupSink</td>
</tr>
<tr valign=top>
<td width=24%>Transfer</td>
<td width=33%>ISQLOLETransferSink</td>
<td width=43%>IID_ISQLOLETransferSink</td>
</tr>
<tr valign=top>
<td width=24%>BulkCopy</td>
<td width=33%>ISQLOLEBulkCopySink</td>
<td width=43%>IID_ISQLOLEBulkCopySink</td>
</tr>
</table><br>
<p>
For more information about COM events, see the <i>Microsoft OLE Control Developer's Kit</i> and the <i>Microsoft Win32 SDK</i>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
