<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>sp_OAGetErrorInfo</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sp_oageterrorinfo"></a>sp_OAGetErrorInfo</h2>
<p>
Obtains OLE Automation error information.</p>
<h4>Syntax</h4>
<p>
<b>sp_OAGetErrorInfo</b> [<i>objecttoken</i> [<b>,</b> <i>source</i> OUTPUT [<b>,</b> <i>description</i> OUTPUT <br>
[<b>,</b> <i>helpfile</i> OUTPUT [<b>,</b> <i>helpid</i> OUTPUT ]]]]]</p>
<p>
where
<dl>
<dt>
<i>objecttoken</i> </dt>
<dd>
Is the object token of an OLE object previously created by <b>sp_OACreate</b> or NULL. If an object token is specified, error information for that object will be returned. If NULL is specified, the error information for the entire batch will be returned.</dd>
<dt>
<i>source</i> OUTPUT</dt>
<dd>
Is the source of the error information. If specified, it must be a local <i>char</i> or <i>varchar</i> variable. The return value will be truncated to fit the local variable if necessary.</dd>
<dt>
<i>description</i> OUTPUT</dt>
<dd>
Is the description of the error. If specified, it must be a local <i>char</i> or <i>varchar</i> variable. The return value will be truncated to fit the local variable if necessary.</dd>
<dt>
<i>helpfile</i> OUTPUT</dt>
<dd>
Is the Help file for the OLE object. If specified, it must be a local <i>char</i> or <i>varchar</i> variable. The return value will be truncated to fit the local variable if necessary.</dd>
<dt>
<i>helpid</i> OUTPUT</dt>
<dd>
Is the Help file context ID. If specified, it must be a local <i>int</i> variable.</dd>
</dl>
<h4>Remarks</h4>
<p>
Each call to an OLE Automation stored procedure (except <b>sp_OAGetErrorInfo</b>) resets the error information, so <b>sp_OAGetErrorInfo</b> obtains error information only for the most recent OLE Automation stored procedure call. Note that because <b>sp_OAGetErrorInfo</b> does not reset the error information, it can be called multiple times to get the same error information.</p>
<p>
If no output parameters are specified, the error information is returned to the client as a results set.</p>
<p>
This procedure returns a 0 when successful or a non-zero HRESULT when an error occurs.</p>
<p>
This table is a list of OLE Automation errors and their common causes.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=31%></th>
<th align=left width=69%></th>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=31%>Error and HRESULT</th>
<th align=left width=69%>Common cause</th>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=31%>Bad variable type<br>
(0x80020008)</td>
<td width=69%>The datatype of a Transact-SQL value passed as a method parameter did not match the Visual Basic data type of the method parameter, or a NULL value was passed as a method parameter.<p>
Ensure that any local variables used as method parameters are of the appropriate datatype and are set to a value other than NULL.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>Unknown name<br>
(0x8002006)</td>
<td width=69%>The specified property or method name was not found for the specified object.</td>
</tr>
<tr valign=top>
<td width=31%>Invalid class string<br>
(0x800401f3)</td>
<td width=69%>The specified ProgID or CLSID is not been registered as an OLE object on the SQL Server computer.</td>
</tr>
<tr valign=top>
<td width=31%>Server execution failed<br>
(0x80080005)</td>
<td width=69%>The specified OLE object is registered as a local OLE server (.EXE file) but the .EXE file could not be found or started.</td>
</tr>
<tr valign=top>
<td width=31%>The specified module could not be found<br>
(0x8007007e)</td>
<td width=69%>The specified OLE object is registered as an in-process OLE server (.DLL file), but the .DLL file could not be found or loaded.</td>
</tr>
<tr valign=top>
<td width=31%>Type mismatch<br>
(0x80020005)</td>
<td width=69%>The datatype of a Transact-SQL local variable used to store a returned property value or a method return value did not match the Visual Basic data type of the property or method return value.<p>
Ensure that the local variable is of the appropriate datatype.</p>
<p>
Or, the return value of a property or a method was requested, but it does not return a value.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>Parameter not found<br>
(0x80020004)</td>
<td width=69%>A named parameter was specified before a positional parameter.<p>
Ensure that all named parameters are specified after all positional parameters.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>The parameter is incorrect<br>
(0x80070057)</td>
<td width=69%>The number specified as the <i>context</i> parameter of <b>sp_OACreate</b> was not valid.</td>
</tr>
</table><br>
<h4>Example</h4>
<p>
This example displays OLE Automation error information.</p>
<pre>DECLARE @output varchar(255)
DECLARE @hr int
DECLARE @source varchar(255)
DECLARE @description varchar(255)
PRINT 'OLE Automation Error Information'
EXEC @hr = sp_OAGetErrorInfo @object, @source OUT, @description OUT
IF @hr = 0
BEGIN
    SELECT @output = '  Source: ' + @source
    PRINT @output
    SELECT @output = '  Description: ' + @description
    PRINT @output
END
ELSE
BEGIN
    PRINT '  sp_OAGetErrorInfo failed.'
    RETURN
END
<b><i>  </i></b></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
