<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Part 5   What's New for OLE Automation Stored Procedures</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_what.92.s_new_for_ole_automation_stored_procedures"></a>What's New for OLE Automation Stored Procedures</h1>
<p>
SQL Server 6.5 includes new OLE Automation stored procedures. The following table lists the new stored procedures, which are explained in this part. Features are in alphabetical order.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=51%></th>
<th align=left width=15%></th>
<th align=left width=34%></th>
</tr>
<tr valign=top>
<th align=left width=51%>Feature</th>
<th align=left width=15%>New</th>
<th align=left width=34%>Enhanced</th>
</tr>
<tr valign=top>
<td width=51%><b>sp_OACreate</b></td>
<td width=15%>·</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=51%><b>sp_OADestroy</b></td>
<td width=15%>·</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=51%><b>sp_OAGetErrorInfo</b></td>
<td width=15%>·</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=51%><b>sp_OAGetProperty</b></td>
<td width=15%>·</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=51%><b>sp_OAMethod</b></td>
<td width=15%>·</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=51%><b>sp_OASetProperty</b></td>
<td width=15%>·</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=51%><b>sp_OAStop</b></td>
<td width=15%>·</td>
<td width=34%></td>
</tr>
</table><br>
<p>
<b><i></i></b></p>
<p>
The OLE Automation stored procedures allow you to use standard OLE Automation objects within a Transact-SQL statement batch. Because these OLE objects reside and run on the SQL Server computer, they behave as OLE extended stored procedures.</p>
<p>
You can use existing OLE Automation objects, such as the SQL Distributed Management Objects (SQL-DMO). You can also use 32-bit Visual Basic 4.0 to create your own OLE Automation objects and install them on the SQL Server computer.</p>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To create and use OLE Automation objects on the SQL Server computer</h5>
<ol>
<li>
Call <b>sp_OACreate</b> to create the object.</li>
<li>
Use the object.<ul>
<li>
Call <b>sp_OAGetProperty</b> to get a property value.</li>
<li>
Call <b>sp_OASetProperty</b> to set a property to a new value.</li>
<li>
Call <b>sp_OAMethod</b> to call a method.</li>
<li>
Call <b>sp_OAGetErrorInfo</b> to get the most recent error information.</li>
</ul>
</li>
<li>
Call <b>sp_OADestroy</b> to destroy the object.</li>
</ol>
<p>
<b>Note</b>  All of the above steps must be performed within a single Transact-SQL statement batch. All created OLE objects are automatically destroyed at the end of every statement batch.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
