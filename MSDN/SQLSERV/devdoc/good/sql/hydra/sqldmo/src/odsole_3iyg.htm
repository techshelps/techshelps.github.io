<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Object Hierarchy Syntax</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_object_hierarchy_syntax"></a>Object Hierarchy Syntax</h2>
<p>
The <i>propertyname</i> parameter of <b>sp_OAGetProperty</b> and <b>sp_OASetProperty</b> and the <i>methodname</i> of <b>sp_OAMethod</b> support object hierarchy syntax similar to Visual Basic. When this special syntax is used, these parameters have the general form:</p>
<h4>Syntax</h4>
<p>
<b>'</b><i>TraversedObject</i><b>.</b><i>PropertyOrMethod</i><b>'</b></p>
<p>
where
<dl>
<dt>
<i>TraversedObject</i></dt>
<dd>
Is an OLE object in the hierarchy under the <i>objecttoken</i> specified in the stored procedure. Use Visual Basic syntax to specify a series of collections, object properties, and methods that return objects. Each object specifier in the series must be separated by a period (<b>.</b>).
<p>
An item in the series can be the name of a collection. Use this syntax to specify a collection:

<p>
<i>Collection</i><b>("</b><i>item</i><b>")</b>

<p>
The double-quotes (<b>"</b>) around <i>item</i> are required. The Visual Basic exclamation point (<b>!</b>) syntax for collections is not supported.
</dd>
<dt>
<i>PropertyOrMethod</i></dt>
<dd>
Is the name of a property or method of the <i>TraversedObject</i>.
<p>
To specify all index or method parameters by using <b>sp_OAGetProperty</b>, <b>sp_OASetProperty</b>, or <b>sp_OAMethod</b> parameters (including support for <b>sp_OAMethod</b> output parameters), use this syntax:

<p>
<i>PropertyOrMethod</i>

<p>
To specify all index or method parameters inside the parenthesis (causing all index or method parameters of <b>sp_OAGetProperty</b>, <b>sp_OASetProperty</b>, or <b>sp_OAMethod</b> to be ignored) use this syntax:

<p>
<i>PropertyOrMethod</i><b>( </b>[<i>ParameterName</i> <b>:=</b>] <b>"</b><i>parameter</i><b>" </b>[<b>,</b> ...] <b>)</b>

<p>
The double-quotes (<b>"</b>) around each <i>parameter</i> are required. All named parameters must be specified after all positional parameters are specified.
</dd>
</dl>
<h4>Remarks</h4>
<p>
If <i>TraversedObject</i> is not specified, <i>PropertyOrMethod</i> is required.</p>
<p>
If <i>PropertyOrMethod</i> is not specified, the <i>TraversedObject</i> is returned as an object token output parameter from the OLE Automation stored procedure. If <i>PropertyOrMethod</i> is specified, the property or method of the <i>TraversedObject</i> is called, and the property value or method return value is returned as an output parameter from the OLE Automation stored procedure.</p>
<p>
If any item in the <i>TraversedObject</i> list does not return an OLE object, an error occurs.</p>
<p>
For more information about Visual Basic OLE object syntax, see your Visual Basic documentation.</p>
<h4>Example</h4>
<p>
These are examples of object hierarchy syntax using a SQL-DMO SQLServer object.</p>
<pre>-- Call the Connect method of the SQLServer object
EXEC @hr = sp_OAMethod @object,
    'Connect("my_server", "my_login", "my_password")'
<b><i>  </i></b>
-- Get the pubs..authors Table object
EXEC @hr = sp_OAGetProperty @object,
    'Databases("pubs").Tables("authors")',
    @table OUT
<b><i>  </i></b>
-- Get the Rows property of the pubs..authors table
EXEC @hr = sp_OAGetProperty @object,
    'Databases("pubs").Tables("authors").Rows',
    @rows OUT
<b><i>  </i></b>
-- Call the CheckTable method of the pubs..authors table
EXEC @hr = sp_OAMethod @object,
    'Databases("pubs").Tables("authors").CheckTable',
    @checkoutput OUT
<b><i>  </i></b></pre>
<p>&nbsp;</p></body>
</HTML>
