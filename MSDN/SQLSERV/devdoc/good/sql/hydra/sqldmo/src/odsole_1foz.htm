<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HRESULT Return Codes</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_hresult_return_codes"></a>HRESULT Return Codes</h2>
<p>
These procedures return an <i>int</i> return code. The return code is 0 when successful or a non-zero HRESULT when an error occurs. An HRESULT is an OLE error code of the hexadecimal form 0x800<i>nnnnn</i>, but when it is returned as an <i>int</i> value it has the form -214<i>nnnnnnn</i>.</p>
<p>
For example, passing an invalid object name (for example, 'SQLOLE.Xyzzy') to <b>sp_OACreate</b> will cause it to return an <i>int</i> HRESULT of -2147221005, which is 0x800401f3 in hexadecimal.</p>
<p>
You can use CONVERT(binary(4), @hresult) to convert an <i>int</i> HRESULT to a <i>binary</i> value. However, using CONVERT(char(10), CONVERT(binary(4), @hresult)) will result in an unreadable string, because each byte of the HRESULT is converted to a single ASCII character. You can also use the following sample stored procedure <b>sp_hexadecimal</b> to convert an <i>int</i> HRESULT to a <i>char</i> value that contains a readable hexadecimal string.</p>
<pre>CREATE PROCEDURE sp_hexadecimal
    @binvalue varbinary(255),
    @hexvalue varchar(255) OUTPUT
AS
DECLARE @charvalue varchar(255)
DECLARE @i int
DECLARE @length int
DECLARE @hexstring char(16)
SELECT @charvalue = '0x'
SELECT @i = 1
SELECT @length = DATALENGTH(@binvalue)
SELECT @hexstring = '0123456789abcdef'
WHILE (@i &lt;= @length)
BEGIN
    DECLARE @tempint int
    DECLARE @firstint int
    DECLARE @secondint int
    SELECT @tempint = CONVERT(int, SUBSTRING(@binvalue,@i,1))
    SELECT @firstint = FLOOR(@tempint/16)
    SELECT @secondint = @tempint - (@firstint*16)
    SELECT @charvalue = @charvalue +
        SUBSTRING(@hexstring, @firstint+1, 1) +
        SUBSTRING(@hexstring, @secondint+1, 1)
    SELECT @i = @i + 1
END
SELECT @hexvalue = @charvalue
<b><i>  </i></b></pre>
<p>
You can use the following sample stored procedure <b>sp_displayoaerrorinfo</b> to display OLE Automation error information when one of these procedures returns a non-zero HRESULT return code. This sample stored procedure uses the <b>sp_hexadecimal</b> sample stored procedure.</p>
<pre>CREATE PROCEDURE sp_displayoaerrorinfo
    @object int,
    @hresult int
AS
DECLARE @output varchar(255)
DECLARE @hrhex char(10)
DECLARE @hr int
DECLARE @source varchar(255)
DECLARE @description varchar(255)
PRINT 'OLE Automation Error Information'
EXEC sp_hexadecimal @hresult, @hrhex OUT
SELECT @output = '  HRESULT: ' + @hrhex
PRINT @output
EXEC @hr = sp_OAGetErrorInfo @object, @source OUT, @description OUT
IF @hr = 0
BEGIN
    SELECT @output = '  Source: ' + @source
    PRINT @output
    SELECT @output = '  Description: ' + @description
    PRINT @output
END
ELSE
BEGIN
    PRINT "  sp_OAGetErrorInfo failed."
    RETURN
END
<b><i>  </i></b></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
