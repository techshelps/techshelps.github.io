<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Establishing an Encrypted Connection</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_establishing_an_encrypted_connection"></a>Establishing an Encrypted Connection</h2>
<p>
You can use the Multi-Protocol netlib to establish an encrypted connection with SQL Server for a specific user or for all users accessing SQL Server. The Multi-Protocol netlib will encrypt data sent to and received from SQL Server. </p>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To set up encryption for a specific user</h5>
<ol>
<li>
Create an account on the machine running SQL Server that matches the account (same username and password) on the client machine. </li>
<li>
Turn on encryption for the Multi-Protocol netlib. This can be done for a specific client or through the server for all clients. For more information, see "Configuring Clients" in the <i>Microsoft SQL Server Administrator's Companion</i>.</li>
</ol>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To set up encryption for all users</h5>
<ul>
<li>
On the machine running SQL Server<ol>
<li>
In the Administrative Tools program group, in the User Manager utility, from the User menu choose New User.<p>
The New User dialog box appears.
</li>
<li>
In the dialog box, establish a user account with username as <i>token1</i> and as password <i>token2</i>.</li>
<li>
Enable the multiprotocol encryption option by following instructions described in "Configuring Clients" in the <i>Microsoft SQL Server Administrator's Companion</i>.</li>
<li>
Start SQL Server.</li>
</ol>
</li>
<li>
On the machine running the client application<ol>
<li>
In the Microsoft SQL Server 6.5 program group, double-click the SQL Client Configuration Utility.<p>
The SQL Server Client Configuration Utility dialog box appears.
</li>
<li>
Click the Advanced tab.</li>
<li>
For the machine on which you set up the user account, specify a logical name in the Server box for SQL Server.</li>
<li>
In the DLL Name list box, select Multi-Protocol.</li>
<li>
In the Connection String box, type the following: <p>
ncacn_ip_tcp: <i>servername</i>, <i>token1</i>, <i>token2</i>
<p>
where
<p>
<i>servername</i>
<p>
Specifies the DNS name for the server machine.
<p>
<i>token1</i>
<p>
Specifies the username of the user account on the server machine.
<p>
<i>token2</i>
<p>
Specifies the password for the user account on the server machine.
</li>
</ol>
<p>
The username and password will be used by the client to establish an encrypted connection to SQL Server. Note that this user account is a valid Windows NT account and must be subject to Standard Security.
</li>
</ul>
<p>
The user account established on the server machine is not a SQL Server account. The client application must specify a valid SQL Server username and password to successfully connect to SQL Server.</p>
<p>
If the connection is unsuccessful because of an invalid username or password, the Multi-Protocol netlib will return error 5 (access denied).</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
