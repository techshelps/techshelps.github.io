<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Alert System Troubleshooting</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_alert_system_troubleshooting"></a>Alert System Troubleshooting</h3>
<p>
Under unusual circumstances, the SQL Executive alert engine can inadvertently become caught in the endless recursive firing of the same alert. Such circumstances generally arise when the SQL Server runs out of some essential global resource, such as locks, and an alert has been defined on this event, either explicitly by error number or implicitly by severity level.</p>
<p>
In such circumstances, the following sequence starts and can be stopped only when the SQL Server's global resource problem is manually fixed:
<ol>
<li>
SQL Server reports a global resource error.</li>
<li>
SQL Executive invokes the alert for this event.</li>
<li>
The alert, as part of its response, attempts to perform some action on the SQL Server.</li>
<li>
This action causes the server to hit the global resource error again.</li>
<li>
The steps repeat.</li>
</ol>
<p>
These are symptoms of a repeating alert:
<ul>
<li>
The event log rapidly fills up with the same error.</li>
<li>
An unusually high CPU usage occurs.</li>
<li>
Numerous alert responses are received for the alert involved.</li>
</ul>
<p>
Should you encounter a problem, it is possible to configure the SQL Executive alert engine to treat specific error numbers as non-alert-generating errors. That is, if the error occurs and an alert has been defined on it, explicitly by error number or implicitly by severity level, then SQL Executive will not fire the alert. Instead it will write a message (event 323) to the Windows NT event log stating that the alert was ignored according to the non-alert-generating status that was assigned to it.</p>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To configure an error to be non-alert-generating </h5>
<ol>
<li>
At the command prompt, invoke the Registry editor by typing: <pre>regedt32
<b><i>  </i></b></pre>
</li>
<li>
Access the directory tree, as follows:<pre>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSSQLServer\SQLExecutive
<b><i>  </i></b></pre>
</li>
<li>
In the NonAlertableErrors list, enter the error number. The list can be up to 255 characters long, should not contain spaces, and each item must be separated with a comma (<b>,</b>) from the previous item. Any error number that appears after the number 0 in the list will be ignored and will generate an alert. Thus, the whole list can be temporarily suspended by adding 0 as the first item in the list.</li>
</ol>
<p>
SQL Enterprise Manager and the stored procedures <b>sp_addalert</b> and <b>sp_updatealert</b> use the NonAlertableErrors list to restrict which errors can be monitored by an alert.</p>
<p>
<b>Important</b>  There should seldom be the need to modify the default list of entries.</p>
<h4>Examples</h4>
<h5>A.&nbsp;&nbsp;&nbsp;&nbsp;Default Alert Entries</h5>
<p>
This example shows the default list of non-alert-generating errors. <b>These errors should never be removed</b>.</p>
<pre>1204,4002    
<b><i>  </i></b></pre>
<h5>B.&nbsp;&nbsp;&nbsp;&nbsp;Add Error 100 to Entries</h5>
<p>
This example adds error 100 to the list of non-alert-generating errors:</p>
<pre>1204,4002,100
<b><i>  </i></b></pre>
<h5>C.&nbsp;&nbsp;&nbsp;&nbsp;Interrupt Error List</h5>
<p>
This example shows that having 0 within the list suspends the processing of the rest of the list. Only errors 1204 and 4002 are non-alert-generating; error 100 will generate an alert.</p>
<pre>1204,4002,0,100
<b><i>  </i></b></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
