<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Glossary</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_glossary_sql60_global"></a>Glossary</h1>
<dl>
<dt>
aggregate functions</dt>
<dd>
Functions that calculate summary values, such as averages and sums, from the values in a particular column, and that return a single value for each set of rows to which the function applies.
<p>
Aggregate functions often appear with GROUP BY, which partitions a table into groups. These functions calculate a single value for each group. Without GROUP BY, an aggregate function in the select list produces a single value as a result, whether it is operating on all the rows in a table or on a subset of rows defined by a WHERE clause. 
</dd>
<dt>
alerts</dt>
<dd>
By creating alerts, you can set up SQL Enterprise Manager to respond automatically to SQL Server events, either by executing a task that you have defined or by sending an e-mail and/or a pager message to a specified operator.</dd>
<dt>
alias</dt>
<dd>
A database username that is shared by several login IDs. An alias allows more than one person to be treated as the same user inside a database, giving all the designated users the same permissions. A common use for aliases is to allow several users to assume the role of database owner (DBO). </dd>
<dt>
allocation page</dt>
<dd>
The first page of an allocation unit that describes how the remaining pages within the allocation unit are used. SQL Server uses three units of data storage:
<ul>
<li>
The page (2K in size)</li>
<li>
The extent (8 continuous pages)</li>
<li>
The allocation unit (32 extents, or 256 pages)</li>
</ul>

<p>
Each fragment of storage for a database must be at least 1 allocation unit¾0.5 MB, or 256 contiguous 2K pages. The first of the 256 pages is the allocation page. It contains an array that shows how the other 255 pages are used; unlike all other pages, it does not contain database rows.
</dd>
<dt>
allocation unit</dt>
<dd>
A unit of data storage consisting of 32 extents, or 256 pages. DBCC NEWALLOC returns a listing for each allocation unit of the number of extents currently reserved for use by objects, the number of pages marked as being used by objects, and the actual number of pages being used by objects. An allocation unit can hold, at most, 32 database objects. An allocation unit is 512K (0.5 MB) made up of 32 extents (8, 2K pages). From this, 512K/16K results in 32 objects. The used pages value and the ref pages value should be equivalent for most, if not all, allocation units. A difference of 7 is possible due to the transaction log. A slightly larger difference is acceptable when text or image data exists within the database. 
<p>
The number of extents tells you whether or not you can create new objects on that allocation unit. To estimate the amount of space reserved by database objects (tables and indexes), multiply the total number of extents by 16K. To estimate the amount of that space being used by data or index information, multiply the total number of used pages by 2K. 
</dd>
<dt>
American National Standards Institute (ANSI)</dt>
<dd>
ANSI-standard SQL offers limited support. Microsoft® addresses this problem with Transact-SQL™, an enhanced version of the SQL language for SQL Server. </dd>
<dt>
ANSI</dt>
<dd>
See American National Standards Institute.</dd>
<dt>
ANSI to OEM conversion</dt>
<dd>
The AutoANSItoOEM entry controls the default conversion behavior when you connect to a server. If AutoANSItoOEM is set to ON, conversion is turned on in the following cases:
<ul>
<li>
ANSI clients to OEM servers (Windows and Windows NT)</li>
<li>
OEM clients to ANSI servers (Windows NT)</li>
</ul>

<p>
The Automatic ANSI to OEM option enables DB-Library to convert characters from OEM to ANSI when communicating with SQL Server, and from ANSI to OEM when communicating from SQL Server to the client. By default, this option is set on.

<p>
For Windows-based clients, the SQL Client Configuration Utility includes the Automatic ANSI to OEM option. By default, the setting for the Automatic ANSI to OEM option is set off. 
</dd>
<dt>
application log</dt>
<dd>
The Windows NT application log is a special file that records new events. It can be viewed only by using the Windows NT Event Viewer. When SQL Server is configured to use the Windows NT application log, each SQL Server session writes new events to that log. (Unlike the SQL Server error log, a new application log is not created each time you start SQL Server.) </dd>
<dt>
application programming interface (API)</dt>
<dd>
An API is a set of routines available in an application, such as DB-Library, for use by software programmers when designing an application interface.</dd>
<dt>
API</dt>
<dd>
See application programming interface. </dd>
<dt>
argument</dt>
<dd>
A switch supported by a function that allows you to specify a particular behavior. An argument is sometimes called an option. </dd>
<dt>
article</dt>
<dd>
The basic unit of replication. An article contains data originating from a table that has been marked for replication. One or more articles are grouped within a publication.</dd>
<dt>
attribute</dt>
<dd>
A qualifier of an entity or a relation describing its character quantity, quality, degree, or extent. For example, column headings are usually considered to be attributes.</dd>
<dt>
auto-start options</dt>
<dd>
By default, the <b>setup</b> program installs SQL Server and SQL Executive to run as manually started Windows NT services. Optionally, each can be configured to run as an automatically started service. For each service, this choice is called the auto-start option. </dd>
<dt>
automated server restart</dt>
<dd>
If SQL Executive detects that the MSSQLServer service has stopped unexpectedly, it will automatically attempt up to three times to restart MSSQLServer. This automated restart behavior can be adjusted by modifying values in the Windows NT Registry.</dd>
<dt>
automatic recovery</dt>
<dd>
Recovery that occurs every time SQL Server is restarted. Automatic recovery protects your database in the event of system failure.
<p>
In each database, the automatic recovery mechanism looks at the transaction log. If the log has committed transactions not yet written out to the database, it performs those transactions again. This action is known as rolling forward.

<p>
Automatic recovery begins with the <i>master</i> database, goes on to <i>model</i>, clears out the <i>tempdb</i> temporary database, recovers <i>msdb</i>, recovers <i>pubs</i>, recovers distribution (if the server is configured as a replication distributor), and finally, recovers user databases. Users can log in to SQL Server as soon as the system databases have been recovered, but they can't access a user database while recovery is in progress on it. 
</dd>
<dt>
automatic synchronization</dt>
<dd>
Synchronization that is accomplished automatically by SQL Server. A snapshot is taken of the table data, and along with the table schemas that snapshot is written to files for transfer. The job to copy the table schema and data is transferred, as is any other replication job, via the distribution database. No operator intervention is required.</dd>
<dt>
back end</dt>
<dd>
In the context of SQL Server, a term applied to the database server level where processing, data storage, and data retrieval occurs.</dd>
<dt>
back up</dt>
<dd>
To create a copy of a database or transaction log on another device (a dump device). Backups are accomplished using SQL Enterprise Manager or the DUMP statement. Also called dump.</dd>
<dt>
backup domain controller (BDC)</dt>
<dd>
In a Windows NT domain, a server that receives a copy of the domain's security database from the primary domain controller and shares the user login authentication load. </dd>
<dt>
base datatype</dt>
<dd>
One of the system datatypes, which include the length for <i>char</i>, <i>varchar</i>, <i>binary</i>, and <i>varbinary</i>. </dd>
<dt>
base object</dt>
<dd>
See underlying object. </dd>
<dt>
base table</dt>
<dd>
A table from which a view is derived. A view can have one or more underlying tables. (A view can have underlying views.) Also called <i>underlying table</i>. </dd>
<dt>
batch</dt>
<dd>
A set of SQL statements submitted together and executed as a group. A script is often a series of batches submitted one after the other. A batch is compiled only once as a whole and is terminated by an end-of-batch signal (GO). </dd>
<dt>
BCP</dt>
<dd>
See bulk copy program. </dd>
<dt>
<i>binary</i> datatype</dt>
<dd>
Datatypes for bit patterns (not for hexadecimal data). Conversions and calculations of hexadecimal numbers stored as binary data can be unreliable. 
<p>
When specifying the length of a <i>binary</i> datatype, every two characters count as one. A length of 10 signifies that 10 two-character groupings will be entered. 

<p>
These are the <i>binary</i> datatypes:
</dd>
<dt>
<i>binary</i>[(<i>n</i>)]</dt>
<dd>
Is a datatype that holds as many as 255 bytes of fixed-length binary data. Specify the maximum byte length with <i>n</i>. The <i>binary</i> datatype can contain 0 bytes, but when specified, <i>n</i> must be a value from 1 through 255. Storage size is <i>n</i> regardless of the actual length of the entry. Choose <i>binary</i> when you think the data entries in the column will be consistently close to the same size. Columns of type <i>binary</i> are accessed somewhat faster than <i>varbinary</i> columns because they use a fixed storage length (<i>n</i>).</dd>
<dt>
<i>varbinary</i>[(<i>n</i>)]</dt>
<dd>
Is a variable-length <i>binary</i> datatype that holds a maximum of 255 bytes of variable-length binary data. Specify the maximum byte length with <i>n</i>. A <i>varbinary</i> datatype can contain 0 bytes, but when specified, <i>n</i> must be a value from 1 through 255. Storage size is the actual length of the data entered, not <i>n</i>. Choose varbinary when you expect null values or a variation in data size. </dd>
<dt>
binding</dt>
<dd>
Associating a default or rule with a column or datatype. The <b>sp_bindefault</b> system stored procedure binds a default to a column or to a user-defined datatype. 
<p>
The <b>sp_bindrule</b> system stored procedure binds a rule to a column or to a user-defined datatype. 
</dd>
<dt>
<i>bit</i><b> </b>datatype<b> </b></dt>
<dd>
Special datatype that holds 1 or 0. Integer values other than 1 or 0 are accepted but always interpreted as 1. Storage size is 1 byte. Multiple <i>bit</i> types in a table can be collected into bytes. Use <i>bit</i> for true/false or yes/no types of data.</dd>
<dt>
blocks</dt>
<dd>
A series of statements enclosed by BEGIN and END. You can nest BEGIN...END blocks within other BEGIN...END blocks. </dd>
<dt>
<b>bldmastr</b></dt>
<dd>
A utility provided in earlier releases of SQL Server, used to build or rebuild the <i>master</i> database. SQL Server 6.0 does not need (nor does it support) a <b>bldmastr</b> utility or an INSTMSTR.SQL script. 
<p>
The <b>bldmastr</b> utility has been replaced by the SQL Setup graphical user interface. All options previously available only through <b>bldmastr</b> have been moved or have been enhanced in SQL Setup.
</dd>
<dt>
Books Online</dt>
<dd>
An online version of the SQL Server documentation set, it is presented as an installation option by the <b>setup</b> program. If installed, the Books Online icon is added to the SQL Server 6.0 program group. By choosing that icon you can view SQL Server user documentation on your computer screen. A particular benefit of Books Online is the full text search capability, which allows you to very rapidly search a book or set of books for all instances of a word or phrase.</dd>
<dt>
Boolean expression</dt>
<dd>
An expression that returns true or false. </dd>
<dt>
browse mode</dt>
<dd>
Functions that allow an application to handle ad hoc queries. Several browse-mode functions return information that an application can use to examine the structure of a complicated ad hoc query. </dd>
<dt>
built-in functions</dt>
<dd>
Functions provided by SQL Server that help you perform certain operations quickly and easily. These functions fall into the following categories:
<ul>
<li>
System functions, most of which return information from the system tables</li>
<li>
String functions, for manipulating <i>char</i>, <i>varchar</i>, <i>binary</i>, and <i>varbinary</i> values</li>
<li>
Text and image functions, for manipulating text and image values</li>
<li>
Mathematical functions, for trigonometry, geometry, and other number handling</li>
<li>
Date functions, for manipulating <i>datetime</i> and <i>smalldatetime</i> values</li>
<li>
A conversion function (CONVERT), for converting expressions from one datatype to another and for formatting dates in a wide variety of styles </li>
</ul>
</dd>
<dt>
bulk copy program (<b>bcp</b>)</dt>
<dd>
A command-line utility that copies SQL Server data to or from an operating-system file in a user-specified format. </dd>
<dt>
bulk data copy</dt>
<dd>
You can break up large transactions when using <b>bcp</b> to bulk copy data into a database. If you use <b>bcp</b> without specifying a batch size, the entire operation is performed as a single logical transaction.
<p>
Even if another user process does a DUMP TRANSACTION statement, the log records associated with the bulk copy operation remain in the log until the entire operation completes or another DUMP TRANSACTION statement is executed. This is one of the most common causes of the error 1105. You can avoid the problem by splitting the bulk copy operation into batches. 
</dd>
<dt>
business integrity</dt>
<dd>
An organizational standard operating procedure that requires that certain policies (rules) be followed to ensure a correctly run business. For example: no debit without corresponding credit, no active customers to be deleted, no additional credit for those whose payments are past due. Business rules ensure that the database maintains its accuracy and integrity in a business sense. </dd>
<dt>
business rules</dt>
<dd>
See business integrity. </dd>
<dt>
cache</dt>
<dd>
A buffer used to hold data during input/output (I/O) transfers between disk and random access memory (RAM). </dd>
<dt>
cached pages</dt>
<dd>
Pages (one page is 2K of data) that are held in cache. </dd>
<dt>
call-level interface (CLI)</dt>
<dd>
The interface used by ODBC for use by an application. </dd>
<dt>
Cartesian product</dt>
<dd>
All the possible combinations of the rows from each of the tables. The number of rows in a Cartesian product of two tables is equal to the number of rows in the first table times the number of rows in the second table. Forming the Cartesian product is the first step in processing a join.</dd>
<dt>
cascading delete</dt>
<dd>
A delete that deletes all related database rows or columns. </dd>
<dt>
cascading updates</dt>
<dd>
An update that updates all related database rows or columns. </dd>
<dt>
changeable value</dt>
<dd>
A value in a table that may vary over time. Values in most tables are changeable. </dd>
<dt>
<i>char</i> datatype</dt>
<dd>
A character datatype that holds a maximum of 255 characters. Specify the maximum length with <i>n</i>. The <i>char</i> datatype can contain 0 characters, but when specified, n must be a value from 1 through 255. Storage size is <i>n</i> regardless of the actual length of the entry. Choose <i>char</i> when you think the data entries in the column will be consistently close to the same size. Columns of type <i>char</i> are accessed somewhat faster than <i>varchar</i> columns because they use a fixed storage length (<i>n</i>).</dd>
<dt>
character set</dt>
<dd>
A set of 256 letters, numbers, and symbols specific to a country of a language. The selected character set determines the types of characters that SQL Server recognizes in the databases. The printable characters of the first 128 values are the same for all character sets. The last 128 characters, sometimes referred to as extended characters, are different. During installation it is critical that you select the appropriate character set. If you later need to change it, you must rebuild your databases and reload your data. </dd>
<dt>
CHECK constraints</dt>
<dd>
Specify data values that are acceptable in a column. You can apply CHECK constraints to multiple columns, and you can apply multiple CHECK constraints to a single column.
<p>
When a table is dropped, all CHECK constraints are also dropped. 
</dd>
<dt>
checkpoint</dt>
<dd>
The point at which all data pages that have been changed are guaranteed to have been written to the disk. </dd>
<dt>
CLI</dt>
<dd>
See call-level interface. </dd>
<dt>
client</dt>
<dd>
A front-end application that uses the services provided by a server. The computer that hosts the application often is referred to as the client computer. SQL Server client software enables computers to connect to a SQL Server over the network. </dd>
<dt>
client/server computing</dt>
<dd>
A system of computing in which two or more computers share processing across a network. The server computer manages a shared resource, such as a database, and responds to requests from clients for use of this resource. The client computer interacts with a user and makes requests for use of a shared resource. Client/server computing separates the functions of an application into two distinct parts: a "front end" component and a "back end" component. The client application presents and manipulates data on the workstation; and the server stores, retrieves, and protects data. </dd>
<dt>
clustered index</dt>
<dd>
An index in which the logical (indexed) order of the key values is the same as the physical order in which the corresponding rows (that contain the key values) exist in the table. </dd>
<dt>
Code page</dt>
<dd>
A character set that determines the types of characters that SQL Server recognizes in databases. SQL Server 6.0 supports the following two Code page character sets:</dd>
</dl>
<ul>
<li>
ISO 8859-1<p>
The default character set. Also known as Latin 1 or ANSI character set, it is compatible with the ANSI characters used by the Windows NT and Windows operating system.
</li>
<li>
Code page 850 <p>
Includes all characters for most languages of European, North American, and South American countries. 
</li>
<li>
Code page 437<p>
The most commonly used character set in the United States. Includes many graphics characters not usually stored in databases. Unless you have an overriding reason to select this character set, choose code page 850, which provides more compatibility with languages other than United States English. (Setup, Chap 3, Server Options, Character Set)
</li>
</ul>
<dl>
<dt>
collection (OLE)</dt>
<dd>
A group of objects of the same type contained within a parent object. </dd>
<dt>
column</dt>
<dd>
The set of all rows in a table that have a common attribute (for example, the <i>firstname</i> column in the <i>authors </i>table of the <i>pubs</i> database). Contains an individual data item within a row or a record. </dd>
<dt>
column-level constraints</dt>
<dd>
A restriction used to enforce data integrity on a column (column-level constraints) or on a table (table-level constraints¾usually multicolumn constraints). You define constraints by using SQL Enterprise Manager or by specifying various options of the CREATE TABLE statement. SQL Server provides the following types of constraints: CHECK, DEFAULT, FOREIGN KEY REFERENCE, PRIMARY KEY, UNIQUE. </dd>
<dt>
COM</dt>
<dd>
See component object model</dd>
<dt>
common key</dt>
<dd>
A key created to make explicit a logical relationship between two tables in a database. See also primary key; foreign key.</dd>
<dt>
complex relationship</dt>
<dd>
A relationship between more than two entities, subsets, dependencies, or relations. </dd>
<dt>
component object model (COM)</dt>
<dd>
The model upon which SQL distributed management objects (SQL-DMO) is based. </dd>
<dt>
composite index</dt>
<dd>
An index that uses from 2 to 16 columns.</dd>
<dt>
composite key</dt>
<dd>
A key composed of two or more columns. A drawback of composite keys is that they introduce more complex join processing. </dd>
<dt>
concatenation</dt>
<dd>
The linking together of binary or character expressions, combining two or more character or binary strings, character or binary data, or a combination of them.</dd>
<dt>
concurrency</dt>
<dd>
The ability to allow several clients to access the same table, row or column at the same time (concurrently) without creating a collision. </dd>
<dt>
concurrency control</dt>
<dd>
Control by cursors, through several options, concurrent access (when more than one user accesses and updates the same data at the same time). With concurrent access, data would soon become unreliable without some kind of control. </dd>
<dt>
concurrent access</dt>
<dd>
The situation in which more than one user accesses and updates the same data at the same time. </dd>
<dt>
connections</dt>
<dd>
The number of logins or attempted logins to a SQL Server. </dd>
<dt>
connectivity</dt>
<dd>
A general term that refers to the ability of different classes of computers to communicate with one another. </dd>
<dt>
consistent</dt>
<dd>
A consistent database contains correct and non-conflicting information. </dd>
<dt>
<b>console</b> utility</dt>
<dd>
Displays backup and restore messages when dumping or loading to or from diskette dump devices. The <b>console</b> command-line utility is used by the person responsible for dumping and loading a database.</dd>
<dt>
constant expression</dt>
<dd>
Specifies an expression that contains only constant values (it does not include the names of any columns or other database objects). You can use any constant, built-in function, mathematical expression, or global variable. The default value must be compatible with the datatype of the column. </dd>
<dt>
constant value</dt>
<dd>
Any constant, built-in function, mathematical expression, or global variable. It cannot include the names of any columns or other database objects. </dd>
<dt>
constraint</dt>
<dd>
A restriction placed upon the value that can be entered into a column or a row. For example, age cannot be &lt; 0 or &gt; 110. SQL Server provides these constraints: CHECK, DEFAULT, FOREIGN KEY, REFERENCE, PRIMARY KEY, UNIQUE. </dd>
<dt>
context-sensitive permission</dt>
<dd>
In addition to protecting data based on a selection of rows and/or columns, you can use views for context-sensitive permission. For example, you can create a view that gives a data entry clerk permission to access only those rows that he or she has added or updated.</dd>
<dt>
control-break report</dt>
<dd>
A report whose summary values are controlled by the groupings, or breaks, that you specify. </dd>
<dt>
control-of-flow language</dt>
<dd>
Programming-like constructs (IF, ELSE, WHILE, etc.) provided by Transact-SQL so that the user can control the flow of execution of Transact-SQL statements. </dd>
<dt>
controlled access protocols</dt>
<dd>
On a publication-by-publication basis, you can control the access that subscription servers have to a publication by marking the publication as either <i>unrestricted</i> or <i>restricted</i>.
<ul>
<li>
unrestricted¾visible to and can be subscribed to by any subscription server known to the publication server. </li>
<li>
restricted ¾visible to only those subscription servers authorized for access. Servers not authorized for access cannot subscribe to the publication; they cannot even see it. As a result, users setting up subscriptions at servers not authorized for access will not even know of a restricted publication. At those servers, it will not appear in any list. </li>
</ul>

<p>
See also ownership chains.
</dd>
<dt>
correlated subquery</dt>
<dd>
Many queries can be evaluated by executing the subquery once and substituting the resulting value or values into the WHERE clause of the outer query. In queries that include a correlated subquery (also known as a repeating subquery), the subquery depends on the outer query for its values. This means that the subquery is executed repeatedly, once for each row that might be selected by the outer query. </dd>
<dt>
CPU busy</dt>
<dd>
A SQL Server statistic, reporting the time, in milliseconds, that the CPU spent on SQL Server work.</dd>
<dt>
creation script</dt>
<dd>
An option, that when selected, adds object-creation statements to the script. creation_script is the path and name of an article schema script used to create target tables. </dd>
<dt>
cursor</dt>
<dd>
Database objects with which applications manipulate data by rows instead of by sets. Using cursors, multiple operations can be performed row by row against a results set with or without returning to the original table. In other words, cursors conceptually return a results set based on tables within the database(s). For example, a cursor can be generated to include a list of all user-defined table names within a database. After the cursor has been opened, movement (fetching) through the results set can include multiple operations against each table by passing each table name as a variable. Cursors are extremely powerful when combined with stored procedures and the EXECUTE statement (to dynamically build strings). </dd>
<dt>
data</dt>
<dd>
The coded representation of information for use in a computer. Data has attributes, such as type and length.</dd>
<dt>
data definition</dt>
<dd>
The process of setting up databases and creating database objects, such as tables, indexes, constraints, defaults, rules, procedures, triggers, and views. </dd>
<dt>
data definition language (DDL)</dt>
<dd>
A language for modeling the structure (rather than the contents) of a database. The ability to create, modify, and remove databases and database objects. </dd>
<dt>
data dictionary</dt>
<dd>
System tables containing descriptions of the database objects and how they are structured. </dd>
<dt>
data integrity</dt>
<dd>
Accuracy and reliability of data. Data integrity is important in both single-user and multiuser environments. In multiuser environments, where data is shared, both the potential for and the cost of data corruption is high. In large scale DBMS environments, data integrity becomes one of the primary concerns and focuses. </dd>
<dt>
data manipulation language (DML)</dt>
<dd>
The subset of the SQL language used to retrieve and manipulate data. </dd>
<dt>
data modification</dt>
<dd>
Adding, deleting or changing information in the database (using the INSERT, DELETE, and UPDATE statements). </dd>
<dt>
data sharing</dt>
<dd>
The ability to transparently share across different applications individual pieces of data from a database. </dd>
<dt>
data synchronization</dt>
<dd>
Before a new subscriber can receive replicated transactions from a publication, the publication and destination tables must contain the same schema and data. The process that accomplishes this is called initial synchronization. </dd>
<dt>
data transfer</dt>
<dd>
The process of copying data to or from a SQL Server. </dd>
<dt>
database</dt>
<dd>
A collection of information, data tables, and other objects that are organized and presented to serve a specific purpose, such as facilitation of searching, sorting, and recombination of data. Databases are stored on devices. </dd>
<dt>
database catalog</dt>
<dd>
The underlying tables to a database. System tables are tables used to store information about the system (the system catalog) or an individual database (the database catalog). The system catalog consists of system tables found only in the <i>master</i> database. The database catalog consists of system tables found in every database. </dd>
<dt>
database consistency checker (DBCC)</dt>
<dd>
Statement used to check the logical and physical consistency of a database, check memory usage, decrease the size of a database, check performance statistics, and so on. DBCC helps ensure the physical and logical consistency of a database, but it is not corrective. </dd>
<dt>
database device</dt>
<dd>
A file that databases are stored on. One database can be stored on several devices. </dd>
<dt>
database language</dt>
<dd>
The language used for accessing data in, querying, updating, and managing relational database systems. SQL is a widely used database language. With SQL, you can retrieve data from a database, create databases and database objects, add data, modify existing data, and perform other complex functions. You can also change the server configuration, modify database or session settings, and control data and access statements. Many of these capabilities are implemented by using one of three SQL categories: Data Definition Language (DDL), Data Manipulation Language (DML), and Data Control Language (DCL).</dd>
<dt>
database management system (DBMS)</dt>
<dd>
A repository for the collection of computerized data files, enabling users to perform a variety of operations on those files, including retrieving, appending, editing, updating, and generating reports. </dd>
<dt>
database model</dt>
<dd>
When SQL Server is installed, the <b>setup</b> program creates the MASTER database device. One of the databases it creates and places on that device is <i>model</i>. The <i>model</i> database provides the template or prototype on which new user databases are based. Each time a database is created, SQL Server makes a copy of the <i>model</i> database and then extends it to the creation size requested. The <i>model</i> database contains the system tables required for each user database. It can be modified to customize the structure of newly created databases so that every change you make to <i>model</i> is reflected in each new database. </dd>
<dt>
database name</dt>
<dd>
Must correspond to the rules for identifiers and can have as many as 30 characters (for example, SALES or PAYROLL91). </dd>
<dt>
database object</dt>
<dd>
One of the components of a database: a table, index, trigger, view, key, constraint, default, rule, user-defined datatype, or stored procedure. Anything that has a name and consumes space in a database. </dd>
<dt>
database object owner</dt>
<dd>
The designated owner of a database object (tables, indexes, views, defaults, constraints, triggers, rules, and procedures). The user who creates a database object is the database object owner and is automatically granted all permissions on it. The database object owner can grant permission to other users to use that object. Database object ownership cannot be transferred. </dd>
<dt>
database owner (DBO)</dt>
<dd>
The creator of the database. There is only one DBO. The DBO has full privileges inside that database and determines the access and capabilities provided to other users. In his or her own database, the user is recognized as the DBO; in other databases, the database owner is known by his or her database username. DBO status can be reassigned to a different user. Only one login ID can be the DBO login ID, although other login IDs can be aliased to the DBO.</dd>
<dt>
database query</dt>
<dd>
See query. </dd>
<dt>
database scripts</dt>
<dd>
A collection of statements used to create database objects. Transact-SQL scripts are saved as files, usually ending with the SQL filename extension.</dd>
<dt>
datatype</dt>
<dd>
An identifier that specifies what type of information a column holds and how the data is stored. System-supplied datatypes are provided by SQL Server; user-defined datatypes can also be created. </dd>
<dt>
date functions</dt>
<dd>
Functions used to display information about dates and times. They manipulate <i>datetime</i> and <i>smalldatetime</i> values, performing arithmetic operations on them. Date functions can be used in the select list, in the WHERE clause, or wherever an expression can be used.</dd>
<dt>
<i>datetime</i> datatype</dt>
<dd>
A SQL Server system datatype. A <i>datetime</i> datatype is stored in 8 bytes of two 4-byte integers: 4 bytes for the number of days before or after the base date of January 1, 1900, and 4 bytes for the number of milliseconds after midnight. The date segments of <i>datetime</i> values representing dates prior to the base date are stored as negative values. </dd>
<dt>
DB-Library</dt>
<dd>
A series of high level language (including C) libraries that provide the application programming interface for the client in a client/server system. DB-Library calls send requests from a client to a server. DB-Library allows the developer to incorporate Transact-SQL statements into an application to retrieve and update data in a SQL Server database. </dd>
<dt>
DBCC</dt>
<dd>
See database consistency checker. </dd>
<dt>
DBMS</dt>
<dd>
See database management system. </dd>
<dt>
DBO</dt>
<dd>
See database owner. </dd>
<dt>
DDL</dt>
<dd>
See data definition language. </dd>
<dt>
deadlock</dt>
<dd>
A situation that arises when two users, each having a lock on one piece of data, attempt to acquire a lock on the other's piece. Each user waits for the other to release their lock. SQL Server detects deadlocks and kills one user's process. See also livelock.</dd>
<dt>
decision support</dt>
<dd>
In the context of SQL Server, a use of data where users access and exploit computing capabilities for decision analysis and other decision making. Decision support typically requires read-only access to data. Compare to on-line transaction processing. </dd>
<dt>
declarative referential integrity (DRI)</dt>
<dd>
The SQL Server built-in capacity that checks the data integrity of a specific related table. </dd>
<dt>
default</dt>
<dd>
The database object that enables SQL Server to insert a value into a column if the user does not explicitly enter one. In a relational database management system, every data element (a particular column in a particular row) must contain some value, even if that value is NULL. Since some columns do not accept null values, some other value must be entered, either by the user or by SQL Server. Defaults specify what value SQL Server will insert when a user does not enter a value (in either a NULL or NOT NULL column). For example, you can create a default that has the value "???" or the value "fill in later", and then instruct SQL Server to enter it if a user does not make an entry. </dd>
<dt>
default database</dt>
<dd>
The database a user is connected to when first logging in to SQL Server. </dd>
<dt>
default device</dt>
<dd>
The device on which a user's database is automatically stored (unless another device is specified).</dd>
<dt>
default language</dt>
<dd>
The language (for example, French, German, or English) used to communicate with the server. Once the default language is set, the user is automatically logged in as using that language.</dd>
<dt>
delimiter</dt>
<dd>
The character used for separating elements of a list.</dd>
<dt>
demand lock</dt>
<dd>
A lock that prevents any more shared locks from being set on a data resource (table or data page). Any new shared lock request has to wait for the demand lock request to finish. </dd>
<dt>
dependencies</dt>
<dd>
The views and procedures that depend on the specified table or view, and the tables and views that are depended on by the specified view or procedure.</dd>
<dt>
destination database </dt>
<dd>
In replication, the subscribing database. The database that receives tables and data replicated from a publication database.</dd>
<dt>
destination server</dt>
<dd>
See subscription server.</dd>
<dt>
destination table</dt>
<dd>
In replication, the subscribing table, created as a replicated image of a published table. A destination table in a destination database is synchronized with and contains data derived from the published table in a publication database.</dd>
<dt>
device</dt>
<dd>
A file in which databases are stored. One database can be stored on several devices. There are two types of devices: database devices, which store databases, and dump devices, which store backups of a database. </dd>
<dt>
device fragment</dt>
<dd>
If the dumped database uses segments to store particular tables or indexes, for the LOAD statement to work correctly the new database must include devices of the same size and page order for these segments and their related data. Execute the <b>sp_helpdb</b> system stored procedure with the database name to see the size and fragments. Select from the <i>sysusages</i> system table to determine the order of the device fragments. 
<p>
The device fragments that a new database uses for data and for the log must appear in the same order and have the same amount of space as the fragments in the original database. For example, if the original database had 10 MB of data (on any number of fragments), followed by 3 MB of log, followed by 6 MB more of space for data, the new database must have the same order by space and usage: 10 MB for data, 3 for log, and 6 (or more) for data. In this case, the total size of the destination database must be at least as large and have at least as many fragments (assigned in the same order and have the same uses) as the load. 
</dd>
<dt>
direct response mode</dt>
<dd>
The mode in which SQL Server statistics are gathered separately from the SQL Server Statistics display. Data is available immediately to SQL Performance Monitor and response time is good; however, the statistics displayed are one period behind the statistics retrieved. This is the default mode. </dd>
<dt>
dirty pages</dt>
<dd>
Cached pages that have been modified since the last checkpoint. </dd>
<dt>
dirty read</dt>
<dd>
Reads that contain uncommitted data. For example, transaction1 changes a row. Transaction2 reads the changed row before transaction1 commits the change. If transaction1 rolls back the change, transaction2 will have read a row that is considered to have never existed.</dd>
<dt>
disk mirroring</dt>
<dd>
The process that protects against media failure by maintaining a fully redundant copy of a partition on another disk. </dd>
<dt>
distribute</dt>
<dd>
In replication, to move transactions from the distribution database tables to subscription servers, where they are applied to the destination tables in the destination databases.</dd>
<dt>
distributed database</dt>
<dd>
A database implemented on a network, in which the component partitions are distributed over various nodes of the network. Depending on the specific update and retrieval traffic, distributing the database can significantly enhance overall performance. </dd>
<dt>
distributed processing</dt>
<dd>
Data processing in which some or all of the processing, storage and control functions, in addition to input/output functions, are situated in different places and connected by transmission facilities. The transparent access of both applications and data by programs and end users is an important goal of distributed processing systems. </dd>
<dt>
distribution database</dt>
<dd>
In replication, a store-and-forward database that holds all transactions that are waiting to be distributed to subscription servers. The distribution database receives transactions sent to it from the publication server by the log reader process and holds them until the distribution process moves them to the subscription servers.</dd>
<dt>
distribution process</dt>
<dd>
In replication, the process that moves transactions from the distribution database tables to subscription servers, where they are applied to the destination tables in the destination databases. The distribution process is a subsystem of the scheduling engine in SQL Executive.</dd>
<dt>
distribution server</dt>
<dd>
In replication, the server containing the distribution database. The distribution server receives all changes to published data, stores the changes in its distribution database, and when appropriate (depending on scheduling and other variables), transmits them to subscription servers. The distribution server can be the same computer that is acting as the publication server, or a different computer. Also referred to as a distributor. See also local distribution server, remote distribution server.</dd>
<dt>
distributor</dt>
<dd>
See distribution server.</dd>
<dt>
DLL</dt>
<dd>
See dynamic link library. </dd>
<dt>
DML</dt>
<dd>
See data manipulation language. </dd>
<dt>
DMO</dt>
<dd>
Distributed Management Object</dd>
<dt>
domain</dt>
<dd>
In Windows NT security, a collection of computers that are grouped for viewing and administrative purposes, and that share a common security database.</dd>
<dt>
domain integrity</dt>
<dd>
Integrity that enforces valid entries for a given column. Domain integrity is enforced by restricting the type (through datatypes), the format (through CHECK constraints and rules), or the range of possible values (through REFERENCE and CHECK constraints, and rules). </dd>
<dt>
DRI</dt>
<dd>
See declarative referential integrity.</dd>
<dt>
dump device</dt>
<dd>
A file that stores backups of databases. </dd>
<dt>
dumps</dt>
<dd>
Also known as backup. Backing up a database creates a copy of its tables, data, and user-defined objects. </dd>
<dt>
dynamic backup</dt>
<dd>
A backup performed while the database is active. </dd>
<dt>
dynamic dump</dt>
<dd>
A backup, or dump, of a database or a transaction log made while the database is active. The dynamic dump makes backups as convenient and continuous an operation as possible. However, because the dynamic dump slows SQL Server somewhat, it is best to execute it when the database is not being heavily updated. </dd>
<dt>
dynamic link library (DLL)</dt>
<dd>
Executable routines, generally serving a specific function or set of functions to be stored separately in files (with the .DLL extension) and loaded on demand when needed by the program that calls them.</dd>
<dt>
dynamic recovery</dt>
<dd>
The process that detects and/or attempts to correct software failures and losses of data integrity within a DBMS. </dd>
<dt>
element</dt>
<dd>
Synonymous with "field." In a table, where a row and a column meet. </dd>
<dt>
entity integrity</dt>
<dd>
Defines a row as a unique entity for a particular table. Usually enforces the primary key of a table (through indexes, UNIQUE constraints, or PRIMARY KEY constraints).</dd>
<dt>
equijoin</dt>
<dd>
A join in which the values in the columns being joined are compared for equality, and all columns in the tables being joined are included in the results.</dd>
<dt>
error log</dt>
<dd>
File that records error information from SQL Server. The error log can be viewed using SQL Enterprise Manager or any text editor. When SQL Server is configured to use its error log, each SQL Server session creates a new log, and SQL Server retains the last six logs created.</dd>
<dt>
error state number</dt>
<dd>
Provides information about the context of an error. Valid error state numbers are 1 through 127. An error state number that identifies the source from which the error was issued (if the error can be issued from more than one place).</dd>
<dt>
event log</dt>
<dd>
File that contains SQL Server error messages as well as messages for all activities on the computer.</dd>
<dt>
exclusive lock</dt>
<dd>
A lock that prevents any other transaction from acquiring a lock until the original lock is released at the end of a transaction. An exclusive lock is always applied during an update operation (INSERT, UPDATE, or DELETE). </dd>
<dt>
explicit transaction</dt>
<dd>
A grouping of SQL statements surrounded by the transaction delimiters BEGIN TRANSACTION and COMMIT TRANSACTION, and optionally, one of the following statements:
<p>
BEGIN TRANSACTION <br>
COMMIT TRANSACTION <br>
ROLLBACK TRANSACTION <br>
SAVE TRANSACTION 
</dd>
<dt>
extended stored procedure</dt>
<dd>
SQL Server-provided way to dynamically load and execute a function within a dynamic-link library (DLL) in a manner similar to a stored procedure, allowing you to seamlessly extend SQL Server functionality. Actions outside of SQL Server can be easily triggered and external information returned to SQL Server. Return status codes and output parameters (identical to their counterparts in regular stored procedures) are also supported.</dd>
<dt>
extent</dt>
<dd>
Space allocated upon creation of a table or index. In SQL Server, an extent is 8 continuous pages. Disk space is allocated to individual SQL Server objects (for example, a particular table or index) in groups of 8 logically adjacent pages. These groups of 8 pages are known as extents. Whenever the last row is deleted from a page, it will be marked as "free" (at transaction commit time). However, in general the page will only be available for reuse by the same database object. Only when all 8 pages of an extent are marked as free is the occupied disk space released for use by other database objects. </dd>
<dt>
extent lock</dt>
<dd>
A lock on 8 pages of memory (one page equals 2K of RAM) allocated as a single unit. </dd>
<dt>
forwarding server</dt>
<dd>
A remote server (the Unhandled SQL Server Event Forwarding Server) to whose event log any unhandled SQL Server events on the local server (events for which there are no locally defined alerts) will be sent. </dd>
<dt>
FAT file system</dt>
<dd>
A method for managing disk storage. A file allocation table (FAT) file system is used by an operating system (for example, by Microsoft MS-DOS) to keep track of the status of various segments of disk space used for file storage.</dd>
<dt>
fatal errors</dt>
<dd>
Problems that generate error messages with severity levels 19 and higher. Contact your primary support provider when these errors occur.</dd>
<dt>
field</dt>
<dd>
A single item of information contained within a row or a record. The logical equivalent of a column. </dd>
<dt>
file system</dt>
<dd>
The portion of an operating system that translates requests for file operations from an application program into low-level, sector-oriented tasks that can be understood by the drivers that control the disk drives. SQL Server is usually installed on disk drives that are formatted for the NTFS or FAT file systems. It can be installed on a compressed NTFS volume but at a performance penalty.</dd>
<dt>
fillfactor</dt>
<dd>
Option that specifies how full SQL Server should make each index page. The amount of empty space on an index page is important because when an index page fills up, the system must take time to split it to make room for new rows. </dd>
<dt>
filtering</dt>
<dd>
In replication, the method by which only selected rows or only selected columns of a table are designated for replication. The method by which partitioning is accomplished. See also partitioning.</dd>
<dt>
FK</dt>
<dd>
See foreign key.</dd>
<dt>
<i>float</i> datatype</dt>
<dd>
A SQL Server system datatype. It is a floating-point column that holds positive or negative floating-point numbers. This column has 15-digit precision. The range of values is approximately 1.7E - 308 to 1.7E  308. Storage size is 8 bytes. All the arithmetic operations except modulo are available with <i>float</i>. 
<p>
Data of type <i>float</i> can include an optional exponent. For <i>float</i> data with an exponential component, enter a number (with or without a decimal point and a positive or negative sign), followed by "e" or "E", followed by an optionally signed integer. The value represented by a <i>float</i> is the product of the first number and 10 to the power of the second number. 
</dd>
<dt>
foreign key (FK)</dt>
<dd>
The column or combination of columns whose values match the primary key (PK) of some other table. A foreign key does not have to be unique; in fact, foreign keys are often in a many-to-one relationship to a primary key. Foreign key values should be copies of the primary key values; no value in the foreign key except NULL should ever exist unless the same value exists in the primary key. A foreign key may be NULL; if any part of a composite foreign key is NULL, the entire foreign key must be NULL.</dd>
<dt>
front end</dt>
<dd>
Software used by a user to access any database or capture input data. </dd>
<dt>
gateway</dt>
<dd>
A network software product that allows computers or networks running dissimilar protocols to communicate, providing transparent access to a variety of foreign database management systems. A gateway moves specific database connectivity and conversion processing from individual client computers to a single server computer. Communication is enabled by translating up one protocol stack and down the other. Gateways usually operate at the session layer.</dd>
<dt>
gateway server</dt>
<dd>
A network server on which a gateway application resides. </dd>
<dt>
global variable</dt>
<dd>
System-supplied, predeclared variables. Global variables are distinguished from local variables by having two at symbols (@@) preceding their names.</dd>
<dt>
group</dt>
<dd>
A set of database users. Groups provide a convenient way to grant or revoke permissions to more than one user. All users belong to the group <i>public</i> by default. </dd>
<dt>
group name</dt>
<dd>
A name of a group of database users. A group name can have as many as 30 characters and must be unique within the database. The characters can be alphanumeric, but the first character must be a letter or the symbols # or _ (for example, DATAOPS or OPERS8).</dd>
<dt>
<i>guest</i></dt>
<dd>
Creating a user named <i>guest</i> in a database enables any user with a login ID for SQL Server to access the database as a <i>guest</i> user. If a user attempts to access the database but does not have a username (his or her username is not found in the database's <i>sysusers</i> table), SQL Server looks for a user named <i>guest</i>. If there is one, the user is allowed to use the database, under the permissions assigned to <i>guest</i>. </dd>
<dt>
horizontal filtering</dt>
<dd>
See horizontal partitioning.</dd>
<dt>
horizontal partitioning</dt>
<dd>
In replication, the process of creating an article that replicates only selected rows from the base table. Subscription servers receive only that horizontally partitioned subset of data.</dd>
<dt>
identifier</dt>
<dd>
The name of a database object. An identifier can be from 1 to 30 characters long. The first character must be a letter or the symbols underscore (_), at sign (@), or pound sign (#). An identifier beginning with # denotes a temporary table. An identifier beginning with @ denotes a variable. Embedded spaces are not allowed. </dd>
<dt>
IDENTITY property</dt>
<dd>
Property that enables columns to contain system-generated values that uniquely identify each row within a table. When inserting values into a table that has an identity column, SQL Server automatically generates the next identifier based on the last used identity value (incremented by adding rows) and the increment value specified during column creation.</dd>
<dt>
idle time</dt>
<dd>
The time, in milliseconds, that SQL Server has been idle. </dd>
<dt>
<i>image</i> datatype</dt>
<dd>
A SQL Server system datatype of variable-length and holding between 0 and 2,147,483,647 bytes of binary data. The <i>image</i> datatype cannot be used for variables or parameters in stored procedures. Conversions and calculations of hexadecimal numbers stored as binary can be unreliable. </dd>
<dt>
implicit transaction</dt>
<dd>
A transaction in which each single SQL statement is considered an atomic unit. </dd>
<dt>
index</dt>
<dd>
A set of pointers that are logically ordered by the values of a key. An index is a database object that provides access to data in the rows of a table, based on key values. Indexes provide quick access to data and can enforce uniqueness on the rows in a table. SQL Server supports clustered and nonclustered indexes. In a clustered index, data is stored in the same order as the index; in a nonclustered index, data is stored differently from the index.</dd>
<dt>
initial synchronization</dt>
<dd>
See synchronization. </dd>
<dt>
inner join</dt>
<dd>
Process of joining two existing tables, producing a third table that consists of all possible ordered concatenations (joinings) of records from the first table with records from the second for which certain specified criteria on the data values from the two tables are met. </dd>
<dt>
installation path</dt>
<dd>
The drive and directory into which the SQL Server files will be copied. The default is C:\SQL60, although this can be set at installation time. After installation, this is often referred to as the SQL Server root directory.</dd>
<dt>
<i>int</i> datatype</dt>
<dd>
A SQL Server system datatype that is an integer column that holds whole numbers between 231 -1 (that is, 2,147,483,647) and -231 (that is, -2,147,483,648), inclusive. You cannot enter -2,147,483,648 in an integer column, but you can enter -2,147,483,647 - 1. You can store this number or it can be the result of a calculation. Storage size is 4 bytes. </dd>
<dt>
integrated security</dt>
<dd>
Security that allows a SQL Server to use Windows NT authentication mechanisms to validate logins for all connections. Only trusted (multiprotocol or named pipes) connections are allowed.</dd>
<dt>
intent lock</dt>
<dd>
Lock that indicates the intention to acquire a shared or exclusive lock on a data page. (An intent lock prevents another transaction from acquiring an exclusive lock on the table containing that page.)</dd>
<dt>
interactive structured query language (ISQL)</dt>
<dd>
An interactive command-line utility provided with SQL Server that allows users to execute Transact-SQL statements or batches from a server or a workstation and view the results returned. </dd>
<dt>
International Standards Organization (ISO)</dt>
<dd>
An international body based in Paris that is responsible for developing national and international data communication standards. </dd>
<dt>
interprocess communication (IPC)</dt>
<dd>
A system that lets threads and processes transfer data and messages among themselves. IPC is used to offer services to and receive services from other programs. </dd>
<dt>
IO busy</dt>
<dd>
The time, in milliseconds, that SQL Server spent doing input and output operations. </dd>
<dt>
IPC</dt>
<dd>
See interprocess communication. </dd>
<dt>
ISO</dt>
<dd>
See International Standards Organization. </dd>
<dt>
isolation level</dt>
<dd>
Option that allows you to customize locking for an entire SQL Server session by setting the session's isolation level. When you set the isolation level, you specify the default locking behavior for all SELECT statements in your SQL Server session.</dd>
<dt>
ISQL</dt>
<dd>
See interactive structured query language. </dd>
<dt>
ISQL/w</dt>
<dd>
A SQL Server utility that allows you to enter Transact-SQL statements and system procedures in a graphical query interface. ISQL/w also provides the capability for graphically analyzing queries.</dd>
<dt>
join</dt>
<dd>
Database table operation that creates a resultant entry in another table for each entry in one table whose key column matches that of an entry in the other.</dd>
<dt>
kernel</dt>
<dd>
The essential core component of the server that handles several functions such as task scheduling, disk caching, locking, and executing compiled queries. </dd>
<dt>
key</dt>
<dd>
A field used to identify a record, often used as the index field for a table. </dd>
<dt>
keyword</dt>
<dd>
Words reserved by the server to be used to define, manipulate, and access database objects. </dd>
<dt>
latency</dt>
<dd>
In replication, the amount of time that elapses between a transaction being logged on the publication server and being successfully delivered to the destination database on the subscription server. Latency consists of two components: duration in the transaction log, and duration in the distribution database.</dd>
<dt>
leaf level</dt>
<dd>
The bottom level of a clustered or nonclustered index. In a clustered index, the leaf level contains the actual data pages of the table. In a nonclustered index, the leaf level points to data pages rather than containing the data itself. </dd>
<dt>
livelock</dt>
<dd>
A request for an exclusive lock that is repeatedly denied because a series of overlapping shared locks keeps interfering. SQL Server detects the situation after four denials and refuses further shared locks. A situation in which read transactions can monopolize a table or page, forcing a write transaction to wait indefinitely. See also deadlock.</dd>
<dt>
local distribution server</dt>
<dd>
In replication, when a publication server also acts as its own distribution server, it is sometimes called a local distribution server. In this case, the publication database and the distribution database reside on the same computer. Compare with remote distribution server.</dd>
<dt>
local login ID</dt>
<dd>
See local login identification. </dd>
<dt>
local login identification</dt>
<dd>
The login identification (login ID) a user must use to log in to a local server. A login ID can have as many as 30 characters. The characters can be alphanumeric, but the first character must be a letter (for example, CHRIS or TELLER8). </dd>
<dt>
local server</dt>
<dd>
The server(s) the user is logged in to. If remote servers are set up for the local server, users can access remote servers from their local server. </dd>
<dt>
local variable</dt>
<dd>
User-defined entities that are assigned values. A local variable is defined with a DECLARE statement, assigned an initial value with a SELECT statement, and used within the statement batch or procedure in which it was declared.</dd>
<dt>
lock</dt>
<dd>
A restriction on access to a resource in a multiuser environment. SQL Server automatically locks users out of a specific record, field, or file to maintain security or prevent concurrent data manipulation problems. </dd>
<dt>
log device</dt>
<dd>
Device that contains a database's transaction log.</dd>
<dt>
log reader process</dt>
<dd>
In replication, the process of moving transactions from the publication server transaction log into the distribution database. The log reader process is a subsystem of the scheduling engine in SQL Executive.</dd>
<dt>
logical name</dt>
<dd>
A name used by SQL Server to identify a device. A logical name for a device must correspond to the rules for identifiers and can have as many as 30 characters (for example, ACCOUNTING or LIBRARY). </dd>
<dt>
logical operators</dt>
<dd>
The operators AND, OR, and NOT. The logical operators AND and OR are used to connect search conditions in WHERE clauses. </dd>
<dt>
login</dt>
<dd>
See login identification.</dd>
<dt>
login ID</dt>
<dd>
See login identification. </dd>
<dt>
login identification</dt>
<dd>
login ID. The unique name a user uses to log in to SQL Server. A login ID can have as many as 30 characters and must be unique for that server. The characters can be alphanumeric, but the first character must be a letter or the symbols # or _. With integrated security for Windows NT, you do not need to maintain a separate login ID for SQL Server. </dd>
<dt>
login security mode</dt>
<dd>
Security mode that determines the manner in which a SQL Server validates a login request. There are three types of login security: integrated, standard, and mixed.</dd>
<dt>
loose consistency</dt>
<dd>
A replication model that allows a time lag between the moment original data is altered and the replicated copies of that data are updated¾it does not guarantee that all copies will be constantly identical to the original. An advantage of loose consistency is that it supports LANs, WANs, fast and slow communication links, and intermittently connected databases. It also allows better database availability and scales much better in its implementation as compared to <i>tight</i> <i>consistency</i>. SQL Server 6.0 replication is based on a loose consistency model. </dd>
<dt>
lost update</dt>
<dd>
An update situation in which two transactions read and update the same data item. </dd>
<dt>
manual synchronization</dt>
<dd>
Synchronization that is accomplished by a user. As with automatic synchronization, the publication server produces files containing the schema and a snapshot of the data from the published table, but with manual synchronization, it is applied to the subscriber manually, using tape or another medium.</dd>
<dt>
MAPI</dt>
<dd>
An e-mail application programming interface (API). </dd>
<dt>
<i>master</i> database</dt>
<dd>
Database that controls the user databases and the operation of SQL Server as a whole. It is automatically installed with SQL Server and keeps track of such things as user accounts, remote user accounts, remote servers that this server can interact with, ongoing processes, the configurable environment variables, system error messages, the databases on SQL Server, the storage space allocated to each database, the tapes and disks available on the system, and the active locks. </dd>
<dt>
MASTER device</dt>
<dd>
The device that is automatically installed with SQL Server and used to store the <i>master</i>, <i>model</i> and <i>tempdb</i> system databases and transaction logs, and the <i>pubs</i> sample database and transaction log.</dd>
<dt>
message number</dt>
<dd>
A number that uniquely identifies an error message.</dd>
<dt>
method</dt>
<dd>
A function that performs an action using a SQL-DMO object.</dd>
<dt>
Microsoft ODBC</dt>
<dd>
See Microsoft Open Database Connectivity. </dd>
<dt>
Microsoft Open Data Services</dt>
<dd>
A SQL Server programming component used for building powerful client/server integration with external application systems and data sources. </dd>
<dt>
Microsoft Open Database Connectivity (ODBC)</dt>
<dd>
A database-neutral connectivity API for Microsoft Windows-based applications. ODBC is designed to allow any database vendor to write a driver that supports the API. </dd>
<dt>
mirror name</dt>
<dd>
A name for a mirrored device. Must correspond to the rules for identifiers and can have as many as 30 characters.</dd>
<dt>
mirroring</dt>
<dd>
Continuous duplication of the information on one SQL Server device to another. Mirroring can provide continuous recovery in the event of media failure. </dd>
<dt>
mixed security</dt>
<dd>
Security mode that allows login requests to be validated using either integrated or standard security. Trusted connections (as used by integrated security) and nontrusted connections (as used by standard security) can be established.</dd>
<dt>
<i>model</i> database</dt>
<dd>
SQL Server-supplied database that provides a template or prototype for new user databases. Each time a database is created, SQL Server makes a copy of the <i>model</i> database and then extends it to the creation size requested. A new database can never be smaller than the <i>model</i> database. The <i>model</i> database contains the system tables required for each user database. It can be modified to customize the structure of newly created databases so that every change you make to <i>model</i> is reflected in each new database. </dd>
<dt>
modulo</dt>
<dd>
An arithmetic operator that provides the integer remainder after a division involving two integers.</dd>
<dt>
<i>money</i> datatype</dt>
<dd>
A SQL Server system datatype. <i>Money</i> is a column that stores monetary values between +922,337,203,685,477.5807 and -922,337,203,685,477.5808 with accuracy to a ten-thousandth of a monetary unit. Money values are represented as double-precision integers. Storage size is 8 bytes. </dd>
<dt>
multithreaded server application</dt>
<dd>
An application that creates multiple threads within a single process to service multiple user requests at the same time.</dd>
<dt>
multiuser</dt>
<dd>
The ability of a computer to support many users operating at the same time, while providing to each user the full range of capabilities of the computer system. </dd>
<dt>
named pipe</dt>
<dd>
An interprocess communication (IPC) mechanism that SQL Server and Open Data Services use to provide communication between clients and servers. Named pipes permit access to shared network resources.</dd>
<dt>
nested query</dt>
<dd>
A SELECT statement that contains one or more subqueries.</dd>
<dt>
Net-Library</dt>
<dd>
A library of functions for managing network connections and routing. Each Net-Library allows a computer to use a particular network protocol.</dd>
<dt>
nonclustered index</dt>
<dd>
An index in which the logical order of the index does not match the physical order of the rows on disk. Clustered indexes usually provide faster access to data than nonclustered indexes. </dd>
<dt>
normalization rules</dt>
<dd>
According to the rules of database design (called normalization rules), each table should describe one type of entity¾a person, place, event, or thing. </dd>
<dt>
NTFS</dt>
<dd>
An advanced method for managing disk storage, designed for use specifically with the Windows NT operating system. It supports long filenames (but maintains shorter filenames for compatibility with computers running operating systems using the FAT file system). It also provides full security for access control, file system recovery, and extremely large storage media. It supports object-oriented applications by treating all files as objects with user- and system-defined attributes.</dd>
<dt>
NULL</dt>
<dd>
In Transact-SQL, an entry that has no explicitly assigned value. NULL is not equivalent to zero or blank. A value of NULL is not considered to be greater than, less than, or equivalent to any other value, including another value of NULL.</dd>
<dt>
nullability</dt>
<dd>
The capability that determines whether or not a column can allow null values (NULLs) for the data in that column. </dd>
<dt>
object</dt>
<dd>
One of the components of a database: a table, index, trigger, view, key, constraint, default, rule, user-defined datatype, or stored procedure. Also called a database object.</dd>
<dt>
object dependencies</dt>
<dd>
The views and procedures that depend on a table or view, and the tables and views that are depended on by a view or procedure. </dd>
<dt>
object owner</dt>
<dd>
The user who owns the object, usually the creator of the object. Also called database object owner.</dd>
<dt>
object permissions</dt>
<dd>
The permissions that regulate the use of certain statements (data modification statements) on certain database objects. Permissions can be granted or revoked by the owner of the object.</dd>
<dt>
ODBC</dt>
<dd>
See Microsoft Open Database Connectivity.</dd>
<dt>
ODBC driver</dt>
<dd>
A dynamic-link library (DLL) that an ODBC-enabled application, such as Microsoft Excel, can use to gain access to a data source. Each database management system (DBMS), such as Microsoft SQL Server, requires a driver. </dd>
<dt>
ODS</dt>
<dd>
See Open Data Services.</dd>
<dt>
OLE</dt>
<dd>
Microsoft component object technology and extensible service architecture. </dd>
<dt>
OLE automation controller</dt>
<dd>
A programming environment (for example, Visual Basic) that can drive OLE automation objects.</dd>
<dt>
OLE automation objects</dt>
<dd>
A Component Object Model (COM) object that provides automation compatible interfaces.</dd>
<dt>
OLE automation server</dt>
<dd>
An OLE custom component that provides programmable OLE automation objects.</dd>
<dt>
OLTP</dt>
<dd>
See online transaction processing.</dd>
<dt>
online transaction processing (OLTP)</dt>
<dd>
The high end of transaction-oriented DBMS applications, commonly used (for example) in financial transfers, airline reservations, and automatic teller (ATM) operations.</dd>
<dt>
open data services (ODS)</dt>
<dd>
An application programming interface (API) for the server portion of a client/server system that makes data sources or data services appear to a client as a SQL Server. Open Data Services provides a network interface that handles network protocol processes and a set of server routines that provide the application programming interface.</dd>
<dt>
Open Database Connectivity</dt>
<dd>
See Microsoft Open Database Connectivity.</dd>
<dt>
operator</dt>
<dd>
Symbols used to perform mathematical computations and/or comparisons between columns or variables. </dd>
<dt>
optimizer</dt>
<dd>
See query optimizer.</dd>
<dt>
outer join</dt>
<dd>
Joins that include all rows regardless of whether there is a matching row (*= and =*). </dd>
<dt>
ownership chain</dt>
<dd>
Views can depend on other views and/or tables. Procedures can depend on other procedures, views, and/or tables. These dependencies can be thought of as an ownership chain. </dd>
<dt>
packet errors</dt>
<dd>
The number of errors that SQL Server detected while reading and writing packets.</dd>
<dt>
packets received</dt>
<dd>
The number of input packets that SQL Server has read.</dd>
<dt>
packets sent</dt>
<dd>
The number of output packets that SQL Server has written.</dd>
<dt>
page</dt>
<dd>
In a virtual storage system, a fixed-length block of contiguous virtual addresses copied as a unit from memory to disk and back during paging operations. SQL Server allocates database space in pages. In SQL Server, a page is 2K in size.</dd>
<dt>
page lock</dt>
<dd>
A lock on 2K of RAM (one page) that is allocated as a single unit. </dd>
<dt>
partitioning</dt>
<dd>
In replication, creating an article that replicates only selected information from the base table. Subscription servers receive only that subset of data from the source table. Sometimes referred to as filtering. See also horizontal partitioning, vertical partitioning.</dd>
<dt>
Performance Monitor</dt>
<dd>
Windows NT functionality that provides a status about system performance. </dd>
<dt>
permissions</dt>
<dd>
Authorization to enforce database security. The SQL Server permissions system specifies which users are authorized to use which Transact-SQL statements, views, and stored procedures. The ability to assign permissions is determined by each user's status. There are two types of permissions: object permissions and statement permissions.</dd>
<dt>
physical name</dt>
<dd>
The path where a device or a mirrored device is located. For a device, the default is the path of the MASTER.DAT file followed by the first eight characters of the device's logical name. For example, if ACCOUNTING is the logical name, and the MASTER.DAT file is located in SQL60\DATA, the default physical name is SQL60\DATA\ACCOUNTI.DAT. For a mirrored device, the default is the path of the MASTER.MIR file followed by the first eight characters of the mirror device's logical name. For example, if MACCOUNT is the name of the mirror device, and the MASTER.MIR file is located in SQL60\DATA, the default physical name is SQL\DATA\MACCOUNT.MIR.</dd>
<dt>
physical reads</dt>
<dd>
Reads and writes of the data done by the database page. </dd>
<dt>
polling interval</dt>
<dd>
The option that sets how often the state of the service (SQL Server or SQL Executive) is checked. </dd>
<dt>
precision</dt>
<dd>
The maximum total number of decimal digits that can be stored, both to the left of and to the right of the decimal point. </dd>
<dt>
primary domain controller (PDC)</dt>
<dd>
In a Windows NT domain, a server that maintains the domain's security database and authenticates user logons. It also provides a copy of the domain's security database to backup domain controllers (BDCs), which share the user login authentication load.</dd>
<dt>
primary key (PK)</dt>
<dd>
The column or combination of columns that uniquely identifies a table. It must always be non-null and must always have a unique index. A primary key is used for joins with foreign keys (matching non-primary keys) in other tables. </dd>
<dt>
projection</dt>
<dd>
Process of extracting data from less than all available columns in a table or set of tables.</dd>
<dt>
protocol</dt>
<dd>
A set of rules or standards designed to enable computers to connect with one another and exchange information. </dd>
<dt>
publication</dt>
<dd>
In replication, a group of tables that have been made available for replication as a unit. A publication can contain one or more published tables¾articles¾from one user database. Each user database can have one or more publications.</dd>
<dt>
publication database</dt>
<dd>
In replication, a database that is the source of replicated data or a database containing tables that have been made available for replication.</dd>
<dt>
publication server</dt>
<dd>
In replication, a server that has made data available for replication. A publication server maintains publication databases, makes published data from those databases available for replication, and sends copies of all changes to the published data to the distribution server. Also referred to as a publisher.</dd>
<dt>
publish</dt>
<dd>
To make data available for replication.</dd>
<dt>
publisher</dt>
<dd>
See publication server.</dd>
<dt>
<i>pubs</i> database</dt>
<dd>
A sample database provided with Microsoft SQL Server. The <i>pubs</i> database can be helpful when you are learning to use SQL Server 6.0. All Microsoft SQL Server 6.0 documentation uses the <i>pubs</i> sample database as the basis for examples.</dd>
<dt>
pull subscription</dt>
<dd>
In replication, a subscription performed while administrative focus is set on the subscription server. A subscription is created by "pulling" in a publication or an article from a publication server. </dd>
<dt>
push subscription</dt>
<dd>
In replication, a subscription performed while administrative focus is set on the publication server. As part of the process of creating or managing a publication, subscriptions are created by "pushing" out an article to one or more subscription servers.</dd>
<dt>
query</dt>
<dd>
A specific request for data retrieval, modification, or deletion.</dd>
<dt>
query optimizer</dt>
<dd>
The SQL Server component responsible for generating the optimum execution plan for a query.</dd>
<dt>
RDBMS</dt>
<dd>
See relational database management system. </dd>
<dt>
<i>real</i> datatype</dt>
<dd>
A SQL Server system datatype, it is a floating-point column similar to <i>float</i>. This column has 7-digit precision. The range of values is approximately 3.4E - 38 to 3.4E  38. Storage size is 4 bytes.</dd>
<dt>
record</dt>
<dd>
A group of related fields (columns) of information treated as a unit. The logical equivalent of a row.</dd>
<dt>
recovery interval</dt>
<dd>
The interval that determines checkpoint frequency by specifying the amount of time it should take the system to recover. </dd>
<dt>
referential integrity (RI)</dt>
<dd>
Integrity mechanism that ensures that vital data in a database¾such as the unique identifier for a given piece of data¾remains accurate and usable as the database changes. Referential integrity involves managing corresponding data values between tables when the foreign key of a table contains the same values as the primary key of another table.</dd>
<dt>
relational data model</dt>
<dd>
A finite collection of two-dimensional, column-and-row tables that represents a situation.</dd>
<dt>
relational database</dt>
<dd>
A collection of information organized in tables that can be queried by using data in specified columns of one table to find additional data in another table. Relational databases differ from non-relational databases in that there are no system dependencies stored within the data; in contrast, hierarchical databases are not relational because they contain pointers to other data. SQL Server databases are relational.</dd>
<dt>
relational database management system (RDBMS)</dt>
<dd>
A system that organizes data into related rows and columns. A DBMS that is based on the relational model. SQL Server is an RDBMS. </dd>
<dt>
remote distribution server</dt>
<dd>
In replication, when a publication server does not act as its own distribution server, but instead is configured to send transactions that are marked for replication to a distribution database on another computer. Compare with local distribution server.</dd>
<dt>
remote login ID</dt>
<dd>
See remote login identification.</dd>
<dt>
remote login identification</dt>
<dd>
The login identification (login ID) assigned to a user for accessing remote procedures on a remote server. This can be the same as the user's local login ID. A remote login ID can have as many as 30 characters. The characters can be alphanumeric, but the first character must be a letter (for example, CHRIS or TELLER8).</dd>
<dt>
remote procedure call (RPC)</dt>
<dd>
The invocation of a stored procedure on a remote server from a procedure on another server.</dd>
<dt>
remote server</dt>
<dd>
A SQL server on the network that can be accessed through a user's local server. The <b>setup</b> program can install, upgrade, or configure remote servers.</dd>
<dt>
remote stored procedure</dt>
<dd>
A collection of SQL statements and optional control-of-flow statements stored under a name on a remote server. Remote stored procedures can be called by clients or by SQL Server.</dd>
<dt>
replication</dt>
<dd>
Duplication of table schema and data from a source database to a destination database, usually (but not necessarily) on separate servers.</dd>
<dt>
replication topology</dt>
<dd>
The Replication Topology window provides a convenient way to view the replication relationships of a server, to add subscription servers, and to open the replication management dialog boxes that are provided by SQL Enterprise Manager. </dd>
<dt>
report generator</dt>
<dd>
A software component that supports the production of formatted output from a database.</dd>
<dt>
restrict</dt>
<dd>
In replication, to allow replication to only selected servers. A publication marked Unrestricted is visible to and can be subscribed to by any subscription server. A publication marked Restricted is visible only to those subscription servers that have been marked for access. </dd>
<dt>
restricted</dt>
<dd>
In replication, specifies who can access a publication.</dd>
<dt>
restricted publication</dt>
<dd>
In replication, a publication marked restricted is displayed to and can be subscribed to by only those servers that have been granted access. See also unrestricted publication.</dd>
<dt>
restriction clause</dt>
<dd>
In replication, to partition the article horizontally, so that only selected rows are replicated, type a WHERE clause in the Restriction Clause box. </dd>
<dt>
retention</dt>
<dd>
In replication, the period of time that a transaction is maintained in the distribution database after it has been successfully delivered to the destination database on the subscription server.</dd>
<dt>
RI</dt>
<dd>
See referential integrity.</dd>
<dt>
roll back</dt>
<dd>
The ability to remove uncompleted or partially completed transactions after a database or other system failure.</dd>
<dt>
roll forward</dt>
<dd>
The ability to recover from major disasters such as media failure by reading the transaction log and reapplying all readable and complete transactions.</dd>
<dt>
row</dt>
<dd>
In a table, a set of related fields of information (columns) that are treated as a unit and that describe a specific entity. The logical equivalent of a record.</dd>
<dt>
row aggregate function</dt>
<dd>
Generates summary values that appear as additional rows in the query results (unlike the aggregate function results, which appear as new columns). Allows you to see detail and summary rows in one set of results. Row aggregate functions (SUM, AVG, MIN, MAX, and COUNT) are used in a SELECT statement with the COMPUTE clause. </dd>
<dt>
rule</dt>
<dd>
A database object that is bound to a column or to a user-defined datatype and that specifies what data can be entered in that column. Every time a user enters or modifies a value (with an INSERT or UPDATE statement), SQL Server checks it against the most recent rule that has been bound to the specified column. No table lookups are possible, but limit checking and list checking are. Data entered prior to the creation and binding of a rule is not checked.</dd>
<dt>
SA</dt>
<dd>
See system administrator. </dd>
<dt>
savepoint</dt>
<dd>
A marker that the user puts inside a user-defined transaction. When transactions are rolled back, they are rolled back only to the savepoint.</dd>
<dt>
scalar aggregate</dt>
<dd>
Functions that are applied to all the rows in a table (producing a single value per function). An aggregate function in the select list with no GROUP BY clause applies to the whole table and is one example of a scalar. </dd>
<dt>
scheduled backup</dt>
<dd>
A backup operation automatically accomplished by SQL Executive as defined and scheduled by an administrator. </dd>
<dt>
scheduled table refresh</dt>
<dd>
In replication, specifies that at scheduled intervals all articles in the publication will be refreshed. Each time refresh occurs, all data (and optionally, the table schemas) will be applied to all destination tables. No data changes are sent between the scheduled refresh intervals. Transaction-based replication does not occur. </dd>
<dt>
schema</dt>
<dd>
A description of a database the DBMS generated using the data definition language.</dd>
<dt>
schema script</dt>
<dd>
See table schema script.</dd>
<dt>
script</dt>
<dd>
A collection of statements used to create database objects. Transact-SQL scripts are saved as files usually ending with the .SQL filename extension.</dd>
<dt>
segment</dt>
<dd>
A named collection of disk pieces, a subset of a device that is available to a particular database to store objects on. A segment name can have as many as 30 characters. The characters can be alphanumeric, but the first character must be a letter (for example, FASTSEG2). </dd>
<dt>
SELECT</dt>
<dd>
The Transact-SQL statement used to request a selection, projection, join, query, and so on, from a SQL Server database.</dd>
<dt>
selection</dt>
<dd>
Extraction of data from a subset of all of the rows of a table or set of tables.</dd>
<dt>
self-join</dt>
<dd>
Joins that compare values within the same column of one table.</dd>
<dt>
sequential file</dt>
<dd>
A file whose records are arranged in the order in which they are placed in the file.</dd>
<dt>
server name</dt>
<dd>
Name of the SQL Server, it is taken from the computer's name. Must be a valid SQL identifier. The first character must be a letter or an underscore (_). Characters following can include letters, numbers, or the symbols #, $, or _. Embedded spaces are not allowed. </dd>
<dt>
server state polling</dt>
<dd>
Specifies the polling interval, which is used to set how often the state of the service (SQL Server or SQL Monitor) is checked. </dd>
<dt>
setup initialization file</dt>
<dd>
A text file, using regular Windows .INI file format, that stores configuration information and allows SQL Server 6.0 to be installed without a user having to be present to respond to prompts for information from the <b>setup</b> program. </dd>
<dt>
severity level number</dt>
<dd>
Represents the severity level of an error. Valid levels are 1 through 25. Only the system administrator can add a message with a severity level of 19 through 25. </dd>
<dt>
shared lock</dt>
<dd>
A lock created by nonupdate (read) operations. Other users can read the data concurrently, but no transaction can acquire an exclusive lock on the data until all the shared locks have been released. </dd>
<dt>
SHOWPLAN</dt>
<dd>
An option of ISQL/w and SQL Enterprise Manager. Shows the query execution plan for a query.</dd>
<dt>
single-user mode</dt>
<dd>
A startup mode that restricts connections. Only a single user can connect, and the CHECKPOINT mechanism, which guarantees that completed transactions are regularly written from the disk cache to the database device, is not started. </dd>
<dt>
<i>smalldatetime</i> datatype</dt>
<dd>
A SQL Server system datatype, a column that holds dates and times of day less precisely than <i>datetime</i>. Storage size is 4 bytes, consisting of one small integer for the number of days after January 1, 1900, and one small integer for the number of minutes past midnight. Dates range from January 1, 1900, to June 6, 2079, with accuracy to the minute.</dd>
<dt>
<i>smallint</i> datatype</dt>
<dd>
A SQL Server system datatype, a tiny integer column that holds whole numbers between 215 - 1 (32,767) and -215 (-32,768), inclusive. Storage size is 2 bytes.</dd>
<dt>
<i>smallmoney</i> datatype</dt>
<dd>
A SQL Server system datatype, a column that stores monetary values between +214,748.3647 and -214,748.3648 with accuracy to a ten-thousandth of a monetary unit. Storage size is 4 bytes. When <i>smallmoney</i> values are displayed, they are rounded up to two places. All the arithmetic operations except modulo are available with <i>smallmoney</i>. With <i>smallmoney</i>, you can store monetary values other than U.S. dollars, but SQL Server does not provide any form of conversion.</dd>
<dt>
SMP</dt>
<dd>
See symmetric multiprocessor.</dd>
<dt>
sort order</dt>
<dd>
A set of rules that determines how SQL Server collates and presents data in response to database queries. The sort order determines the order in which data is presented in response to SQL Server statements involving GROUP BY, ORDER BY, and DISTINCT. The sort order also determines how certain queries are resolved, such as queries involving WHERE and DISTINCT. </dd>
<dt>
source database</dt>
<dd>
See publication database.</dd>
<dt>
SPID</dt>
<dd>
See server process ID.</dd>
<dt>
SQL</dt>
<dd>
See structured query language.</dd>
<dt>
SQL Client Configuration Utility</dt>
<dd>
A SQL Server utility provided with SQL Server for Windows NT version 4.2x, which sets the default Net-Library and sets up server connection information on clients. The utility is also used to display the current DB-Library version number. In SQL Server 6.0 this functionality is provided by the SQL Enterprise Manager.</dd>
<dt>
SQL-DMF</dt>
<dd>
SQL Distributed Management Framework. An integrated framework of objects, services, and components used to manage Microsoft SQL Server. SQL-DMF provides a flexible and scaleable management framework that is adaptable to specific needs. SQL-DMF lessens the need for user-attended maintenance tasks¾such as database backup and alert notification¾by providing services that interact directly with SQL Server. At its most basic level, SQL-DMF provides direct access to the SQL Server engine and services from the command line through Transact-SQL. The second tier of the framework is a set of distributed management objects (DMOs) that provides an object interface to the SQL Server engine and services. The top level of the framework is a graphical administration tool, SQL Enterprise Manager, which provides you with an easy way to manage a multiple-server environment. The framework also provides services for replication, scheduling, and alerting. </dd>
<dt>
SQL Enterprise Manager</dt>
<dd>
A graphical application that allows for easy enterprise-wide configuration and management of SQL Server and SQL Server objects. SQL Enterprise Manager provides a powerful scheduling engine, administrator alert capability, drag-and-drop control operations across multiple servers, and a built-in replication management interface. You can also use SQL Enterprise Manager to manage logins, permissions, and users; create scripts; manage devices and databases; back up databases and transaction logs; and manage tables, views stored procedures, triggers, indexes, rules, defaults, and user-defined datatypes. 
<p>
SQL Enterprise Manager is installed by the <b>setup</b> program as part of the server software on Windows NT-based computers, and as part of the client software on Windows NT- and Microsoft® Windows 95™-based computers. Because SQL Enterprise Manager is a 32-bit application, it cannot be installed on computers running 16-bit operating systems. 
</dd>
<dt>
SQL Executive</dt>
<dd>
A component of SQL Enterprise Manager, SQL Executive provides powerful scheduling capabilities that enable replication and additionally allow you to schedule other SQL Server events, including backups, DBCC operations, and other administrative maintenance tasks. SQL Executive replaces SQL Monitor, which was included in earlier releases of SQL Server.</dd>
<dt>
SQLMail</dt>
<dd>
Capability of Microsoft SQL Server that includes extended stored procedures that allow SQL Server to send and receive mail messages through the built-in mail application programming interface (MAPI) client interface in Windows NT. A mail message can consist of short text strings, the output from a query, or an attached file. This SQL Server mail capability is called SQLMail.</dd>
<dt>
SQL Performance Monitor Integration</dt>
<dd>
Integration of Windows NT Performance Monitor with SQL Server, providing up-to-the-minute activity and performance statistics. </dd>
<dt>
SQL scripts</dt>
<dd>
See script.</dd>
<dt>
SQL Security Manager</dt>
<dd>
A SQL Server utility provided with SQL Server version 4.2x that provides a way to manage integrated and mixed security. In SQL Server 6.0 this functionality is provided by the SQL Enterprise Manager.</dd>
<dt>
SQL Service Manager</dt>
<dd>
A SQL Server-supplied utility that provides a graphical way to start, pause, and stop SQL Server, SQL Monitor, and SQL Replicator. SQL Server is also integrated with the service control management of Windows NT, so you can also start, pause, and stop SQL Server, SQL Monitor, and SQL Replicator from the Services application in the Control Panel or from the Server Manager application.</dd>
<dt>
SQL Transfer Manager</dt>
<dd>
SQL Server-supplied utility that provides an easy, graphical way to transfer objects and data from one SQL Server to another. You can transfer from a Microsoft-based SQL Server or other SQL Server to a Windows NT-based Microsoft SQL Server. (For example, you can transfer data from a Microsoft SQL Server running on an Intel-based SQL Server to a different processor architecture.) </dd>
<dt>
standalone installation</dt>
<dd>
An installation of SQL Server on a computer that is not connected to a network. A standalone installation may be used to install SQL Server on a computer that will soon be but is not yet connected to a network (for example, it does not yet have a network adapter card installed.) Or, a standalone installation might be performed on a computer that is intended as a development system that will have no need for network connections. </dd>
<dt>
standard security</dt>
<dd>
Security mode that uses SQL Server's own login validation process for all connections. To log in to a SQL Server, each user must provide a valid login ID and password.</dd>
<dt>
statement permissions</dt>
<dd>
Authorization that provides the privilege to issue certain Transact-SQL statements. Statement permissions are not object-specific. They can be granted only by the system administrator or the database owner. Statement permissions are also called command permissions.</dd>
<dt>
statistics refresh</dt>
<dd>
The interval, in minutes and seconds, for refreshing SQL server statistics information. The default is 30 seconds.</dd>
<dt>
stored procedure</dt>
<dd>
A precompiled collection of Transact-SQL statements and optional control-of-flow statements stored under a name and processed as a unit. Stored procedures are stored within database, can be executed with one call from an application, and allow user-declared variables, conditional execution and other powerful programming features. SQL Server-supplied stored procedures are called system stored procedures.</dd>
<dt>
string functions</dt>
<dd>
Functions that perform operations on binary data, character strings, or expressions. Built-in string functions return values commonly needed for operations on character data. String function names are not keywords. </dd>
<dt>
structured query language (SQL)</dt>
<dd>
A database query and programming language originally developed by IBM® for mainframe computers. It is widely used for accessing data in, querying, updating, and managing relational database systems. There is now an ANSI-standard SQL definition for all computer systems.</dd>
<dt>
subquery</dt>
<dd>
A SELECT statement that is nested inside another SELECT, INSERT, UPDATE, or DELETE statement, or inside another subquery. </dd>
<dt>
subscribe</dt>
<dd>
In replication, agreeing to receive a publication or an article. A destination database on a subscription server subscribes to replicated data from a publication database on a publication server.</dd>
<dt>
subscriber</dt>
<dd>
See subscription server.</dd>
<dt>
subscription database</dt>
<dd>
See destination database.</dd>
<dt>
subscription server</dt>
<dd>
In replication, a subscription server maintains destination databases, which receive and maintain copies of published data. Also referred to as a subscriber.</dd>
<dt>
symmetric multiprocessor</dt>
<dd>
A computer with more than one processor, where each processor can access memory, handle interrupts, and access I/O just like every other processor in the computer.</dd>
<dt>
synchronization</dt>
<dd>
In replication, the process that before a subscription server can receive replicated transactions from an article or a publication, the publication and destination tables must contain the same schema and data. </dd>
<dt>
synchronization process</dt>
<dd>
Process that creates synchronization files containing data from published tables and applies these files, along with table schema files, to destination database tables. The synchronization process is a subsystem of the scheduling engine in SQL Executive.</dd>
<dt>
system administrator (SA)</dt>
<dd>
A person responsible for the administrative (SA) and operational functions that are independent of any particular application. The system administrator is likely to be a person with a comprehensive overview of SQL Server and all its applications. The SA advises application designers about the data that already exists on SQL Server, makes recommendations about standardizing data definitions across applications, and so on. 
<p>
The SA operates outside the protection system, (SQL Server does no permission checking for the system administrator). The SA is also treated as the owner of whatever database he or she is using. Anyone who knows the SA's password can log in and act in the role of SA. 
</dd>
<dt>
system catalog</dt>
<dd>
Collection of system tables found only in the <i>master</i> database.</dd>
<dt>
system databases</dt>
<dd>
Three databases provided on a newly installed SQL Server: </dd>
</dl>
<ul>
<li>
The <i>master</i> database, which controls user databases and the operation of SQL Server;</li>
<li>
the <i>tempdb</i> database, which is used for temporary tables; and</li>
<li>
the <i>model</i> database, which is used as a template when creating new user databases. <p>
In addition, you can also install the sample database, <i>pubs</i>, which is provided as a learning tool and is the basis for most of the examples in the Microsoft SQL Server documentation. If <i>pubs</i> was not installed with SQL Server, you can install it using the INSTPUBS.SQL script. 
</li>
</ul>
<dl>
<dt>
system functions</dt>
<dd>
Functions that return special information from the database. System Functions allow access to database or server information from within an expression such as a WHERE clause or the SELECT statement. </dd>
<dt>
system stored procedures</dt>
<dd>
A SQL Server-supplied, precompiled collection of Transact-SQL statements. System stored procedures are provided as shortcuts for retrieving information from the system tables or mechanisms for accomplishing database administration and other tasks that involve updating system tables. The names of all system stored procedures begin with <b>sp_</b>. System stored procedures are located in the <i>master</i> database and are owned by the system administrator, but many of them can be run from any database. If a system stored procedure is executed in a database other than <i>master</i>, it operates on the system tables in the database from which it is executed. 
<p>
You can also write your own precompiled collection of Transact-SQL statements, called user-defined stored procedures, that can be executed from any database. 

<p>
In addition to system procedures, extended stored procedures are installed with SQL Server. Extended stored procedures provide additional functionality for SQL Server.
</dd>
<dt>
system tables</dt>
<dd>
The data dictionary tables. System tables keep track of information about SQL Server as a whole and about each user database. All of the SQL Server-supplied tables in the <i>master</i> database (the controlling database) are considered system tables. In addition, each user database is created with a subset of these system tables. The <i>master</i> database contains some system tables that are not found in user databases. 
<p>
The <i>master</i> database and its tables are created when you install SQL Server. The system tables in a user database are automatically created when a database is created. The names of all system tables begin with <i>sys</i>. 

<p>
Permissions for using the system tables are controlled by the database owner, just like permissions on any other tables. The SQL Server installation program sets up permissions so that all users can read the system tables, except for a few fields (such as <i>syslogins.password</i>). The system tables can be queried just like any other tables. In addition, many SQL Server system procedures provide shortcuts for querying the system tables. 
</dd>
<dt>
table</dt>
<dd>
A collection of rows (or records) that have associated columns (or fields). It is the logical equivalent of a database file.</dd>
<dt>
table creation script</dt>
<dd>
See table schema script.</dd>
<dt>
table data file</dt>
<dd>
In replication, a file containing a snapshot of the data of a published table and used during synchronization as the source of data inserted into the destination table. The data snapshot is written to a file ending in the .TMP filename extension. See also table schema script.</dd>
<dt>
table lock</dt>
<dd>
A lock on a table, allocated as a single unit. </dd>
<dt>
table schema script</dt>
<dd>
A script containing the schema of a published table and used during synchronization to create the destination table. The schema script is written to a file ending in the .SCH filename extension. See also table data file.</dd>
<dt>
table-level constraint</dt>
<dd>
Constraints that allow various forms of data integrity to be defined on an individual column (column-level constraint) or on a combination of columns (table-level constraints) when the table is defined or altered. Constraints support domain integrity, entity integrity, and referential integrity, as well as user-defined integrity. </dd>
<dt>
tabular data stream (TDS)</dt>
<dd>
The SQL Server internal client-server data transfer protocol. TDS allows client and server products to communicate regardless of operating system platform, server release, or network transport. </dd>
<dt>
tape dump</dt>
<dd>
Dumping a database to any tape device supported by Windows NT. If you are creating a tape dump device, you must first install the tape device using Windows NT. The tape device must be physically attached to the SQL Server you are backing up. </dd>
<dt>
TDS</dt>
<dd>
See tabular data stream.</dd>
<dt>
<i>tempdb</i> database</dt>
<dd>
Database that provides a storage area for temporary tables and other temporary working storage needs. No special permissions are required to use <i>tempdb</i> (that is, to create temporary tables or to execute commands that might require storage space in the <i>tempdb</i> database). All temporary tables are stored in <i>tempdb</i>, no matter what database the user who creates them is using. </dd>
<dt>
temporary table</dt>
<dd>
A table that is placed in the temporary database, <i>tempdb</i>, and is destroyed at the end of the session. 
<p>
A temporary table is created by prefacing the table name (in the CREATE statement) with a pound sign. For example, create table #authors (au_id char (11)). 

<p>
The first 13 characters of a temporary table name (excluding the pound sign) must be unique in <i>tempdb</i>. Because all temporary objects belong to the <i>tempdb</i> database, you can create a temporary table with the same name as a table already in another database. 
</dd>
<dt>
<i>text</i> datatype</dt>
<dd>
A SQL Server system datatype specifying variable-length columns that can hold up to 231 - (2,147,483,647) characters. The <i>text</i> datatype cannot be used for variables or parameters in stored procedures.</dd>
<dt>
theta join</dt>
<dd>
Joins based on a comparison of scalar values (=, &gt; , &gt;= , &lt; , &lt;= , &lt; &gt;, !&lt;, !&gt;) are called theta joins. </dd>
<dt>
thread</dt>
<dd>
A mechanism that allows one or more paths of execution through the same instance of an application. Each device requires one thread and each remote site requires two threads. SQL Server takes advantage of the native thread services of Windows NT. 
<p>
There are separate threads for each network, a separate thread for database checkpoints, and a pool of threads for all users.
</dd>
<dt>
tight consistency</dt>
<dd>
A replication model that guarantees all copies will be identical to the original. It is usually implemented using two-phase commit, and it requires a high-speed LAN. It also reduces database availability and is less scalable in its implementation as compared to loose consistency.</dd>
<dt>
<i>timestamp</i> datatype</dt>
<dd>
A SQL Server system datatype, the <i>timestamp</i> datatype has no relation to the system time¾it is simply a monotomically increasing counter whose values will always be unique within a database.</dd>
<dt>
<i>tinyint</i> datatype</dt>
<dd>
A SQL Server system datatype, it is a tiny integer column that holds whole numbers between 0 and 255, inclusive. Storage size is 1 byte.</dd>
<dt>
total errors</dt>
<dd>
The number of errors that SQL Server detected while reading and writing.</dd>
<dt>
total read</dt>
<dd>
The number of disk reads by SQL Server. </dd>
<dt>
total write</dt>
<dd>
The number of disk writes by SQL Server. </dd>
<dt>
Transact-SQL (T-SQL)</dt>
<dd>
The standard language for communicating between applications and SQL Server. The Transact-SQL language is an enhancement to Structured Query Language (SQL), the ANSI-standard relational database language, and it provides a comprehensive language for defining tables, for inserting, updating, or deleting information stored in tables, and for controlling access to data in those tables. Transact-SQL includes statements, commands, control-of-flow language, stored procedures, triggers, rules, and defaults. Extensions such as stored procedures make Transact-SQL a full programming language.</dd>
<dt>
transaction</dt>
<dd>
A group of database operations combined together into a logical unit of work that is either completely executed or completely terminated.</dd>
<dt>
transaction log</dt>
<dd>
A reserved area of the database in which all changes to the database are recorded. It is stored in the <i>syslogs</i> system table and is used by SQL Server during automatic recovery.</dd>
<dt>
transaction processing</dt>
<dd>
A processing method in which transactions are executed immediately after they are received by the system.</dd>
<dt>
transaction rollback</dt>
<dd>
Rollback of a user-specified transaction to the last savepoint inside a transaction or to the beginning of a transaction.</dd>
<dt>
trigger</dt>
<dd>
A special form of stored procedure that goes into effect when data in a specified table is modified. Triggers are often created to enforce referential integrity or consistency among logically related data in different tables. </dd>
<dt>
trusted connection</dt>
<dd>
Authenticated connections between clients and servers. These are referred to as trusted connections. The multiprotocol and named pipe protocols provide trusted connections. Integrated security requires network protocols that support trusted connections. </dd>
<dt>
T-SQL</dt>
<dd>
See Transact-SQL. </dd>
<dt>
two-phase commit</dt>
<dd>
Process that ensures that transactions that apply to more than one server are completed on all servers or on none.</dd>
<dt>
type conversion function</dt>
<dd>
Function that transforms expressions from one datatype into another. </dd>
<dt>
unattended installation</dt>
<dd>
Process that allows you to install SQL Server 6.0 without having to respond to prompts for information from the <b>setup</b> program. Instead, you create an initialization file, save the initialization file on a storage device accessible to the computer that will be set up, and start setup using some required options. During <b>setup</b> the configuration parameters are read from the initialization file. </dd>
<dt>
UNC</dt>
<dd>
See universal naming convention. </dd>
<dt>
underlying object</dt>
<dd>
An object (a table or another view) from which a view is derived. A view can have one or more underlying objects.</dd>
<dt>
underlying table</dt>
<dd>
A table from which a view is derived. A view can have one or more underlying tables. (A view can have underlying views.) Also called base table.</dd>
<dt>
Unhandled Event Forwarding Server</dt>
<dd>
See forwarding server.</dd>
<dt>
UNIQUE constraints </dt>
<dd>
Constraints that enforce entity integrity on a non-primary key. Ensure that no duplicate values are entered, Null values are not allowed, and that an index is created to enhance performance.</dd>
<dt>
unique index</dt>
<dd>
An index in which no two rows are permitted to have the same index value, thus prohibiting duplicate index or key values. The system checks for duplicate key values when the index is created and checks each time data is added with an INSERT or UPDATE statement.</dd>
<dt>
universal naming convention (UNC) </dt>
<dd>
Naming convention that consists of the following format: 
<p>
\\servername\sharename\path\filename 
</dd>
<dt>
unrestricted publication</dt>
<dd>
In replication, a security status. A publication marked Unrestricted (the default) is displayed to and can be subscribed to by any registered subscription server. See also restricted publication.</dd>
<dt>
update</dt>
<dd>
An addition, deletion, or change to data.</dd>
<dt>
update statistics</dt>
<dd>
Statistics that update information about the distribution of key values in specified indexes. If there was no data in the table when the index on the table was created, update the index statistics after data is added.</dd>
<dt>
user databases</dt>
<dd>
All of the SQL Server - supplied tables in the <i>master</i> database. In addition, each user database is created with a subset of those system tables. The <i>master</i> database and its tables are created when SQL Server is installed. The system tables in a user database are automatically created when a database is created. </dd>
<dt>
username</dt>
<dd>
A name known to a database and assigned to a login ID for the purpose of allowing a user to have access to that database. The abilities a user has within a database depend on the permissions granted to the username, and the permissions granted to any groups the username is a member of. A username can have as many as 30 characters and must be unique within the database. The characters can be alphanumeric, but the first character must be a letter or the symbols # or _ (for example, CHRIS or USER8).</dd>
<dt>
user-defined datatype</dt>
<dd>
A definition of the type of data a column can contain. It is created by the user and defined in terms of existing system datatypes. Rules and defaults can be bound to user-defined datatypes (but not to system datatypes).</dd>
<dt>
<i>varbinary</i> datatype</dt>
<dd>
A SQL Server system datatype, <i>varbinary</i>(<i>n</i>) is a variable-length binary column that holds up to 255 bytes of variable-length binary data. The <i>binary</i> datatypes are not for hexadecimal data, but rather for bit patterns. They are used for storing programming code or pictures. A <i>varbinary</i> column can contain 0 bytes, but <i>n</i> must be between 1 and 255, inclusive. Storage size is the actual size of the data values entered, not <i>n</i>. Conversions and calculations of hexadecimal numbers stored as <i>binary</i> can be unreliable. Because of the way it uses space, choose <i>varbinary</i> when you expect variation in the size of the data. Data of type <i>varbinary</i> consist of the characters 0 to 9 and A to F (or a to f), and the first <i>varbinary</i> string must be preceded with 0x when it is input. A length of 10 for a <i>varbinary</i> column means 20 characters. If you enter strings that are too long for the specified length, <i>varbinary</i> entries are truncated.</dd>
<dt>
<i>varchar</i> datatype</dt>
<dd>
A SQL Server system datatype, <i>varchar</i>(<i>n</i>) is a column of variable-length characters that holds any combination of up to 255 letters, symbols, and numbers. Specify the maximum size of the column with <i>n</i>. A <i>char</i> column can contain 0 characters, but <i>n</i> must be between 1 and 255, inclusive. Storage size is the actual size of the data values entered, not <i>n</i>. Because of the way it uses space, <i>varchar</i> is best suited for data-like names, where the length of each entry can vary considerably. But <i>varchar</i> imposes more overhead than <i>char</i>, so if the length is fairly consistent, use <i>char</i> instead. Data of type <i>varchar</i> must be enclosed in single quotation marks when it is input. To have a truly empty sting, insert the keyword NULL rather than an empty string, such as ' '. You can use the LIKE keyword and wildcard characters with <i>varchar</i>. If you enter strings that are too long for the specified length, <i>varchar</i> entries are truncated.</dd>
<dt>
variables</dt>
<dd>
Defined entities that are assigned values. A local variable is defined with a DECLARE statement and assigned an initial value within the statement batch where it is declared with a SELECT statement. Global variables are predefined and maintained by the system. </dd>
<dt>
vector aggregate</dt>
<dd>
Functions that are applied to all rows that have the same value in a specified column or expression with the GROUP BY clause and, optionally, the HAVING clause (producing a value for each group per function). </dd>
<dt>
vertical filtering</dt>
<dd>
See vertical partitioning.</dd>
<dt>
vertical partitioning</dt>
<dd>
In replication, creating an article that replicates only selected columns from the base table. Subscription servers receive only that vertically partitioned subset of data. Note that the replicated columns must include the primary key column(s).</dd>
<dt>
view</dt>
<dd>
An alternative way of looking at data from one or more tables in the database, a view is a "virtual table." A view is usually created as a subset of columns from one or more tables. The tables from which views are derived are called base tables. A view can also be derived from another view. The definition of a view (the base tables from which it is derived) is stored in the database. The data that you view is stored in only one place, the base tables. No separate copies of data are associated with this stored definition. A view looks almost exactly like any other database table. You can display it and operate on it almost as you can on any other table. </dd>
<dt>
wildcard characters</dt>
<dd>
Special characters, the underscore (_), the percent sign (%), and brackets ([ ]), used with the LIKE keyword to stand for particular matching patterns in search conditions.</dd>
<dt>
Windows NT Event Viewer</dt>
<dd>
Windows NT application that allows you to view events, filter certain events, and to retain event logs.</dd>
<dt>
Windows NT Performance Monitor</dt>
<dd>
Windows NT utility that provides system administrators a way to monitor the performance of SQL Server. SQL Server statistics include statistics on locks, current size of transaction logs, user connections, and server performance. You can even set alerts to take any action you specify if a specified threshold is reached.</dd>
<dt>
worm drive</dt>
<dd>
A drive that has a write once, read many times functionality. </dd>
<dt>
write-ahead log</dt>
<dd>
A transaction logging method in which the log is always written prior to the data.



</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
