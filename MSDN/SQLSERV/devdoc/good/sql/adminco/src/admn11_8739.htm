<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>File Storage Type</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_file_storage_type"></a>File Storage Type</h3>
<p>
The file storage type describes how data is stored in the file. You can copy data into a file as its database table type, as a character string in ASCII format, or as any datatype for which implicit conversion is supported for the datatype. User-defined datatypes are copied as their base types. The following table shows the storage types that can be used with <b>bcp</b> and the abbreviations (if any) that can be entered at the command prompt. </p>
<p>
For the most compact storage, use the default; for ASCII files, use <i>char</i>.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=26%></th>
<th align=left width=74%></th>
</tr>
<tr valign=top>
<th align=left width=26%></th>
<th align=left width=74%></th>
</tr>
<tr valign=top>
<th align=left width=26%>Storage type</th>
<th align=left width=74%>Abbreviation</th>
</tr>
<tr valign=top>
<td width=26%><i>char</i></td>
<td width=74%>c[har]</td>
</tr>
<tr valign=top>
<td width=26%><i>varchar</i></td>
<td width=74%>c[har]</td>
</tr>
<tr valign=top>
<td width=26%><i>text</i></td>
<td width=74%>T[ext]</td>
</tr>
<tr valign=top>
<td width=26%><i>binary</i></td>
<td width=74%>x</td>
</tr>
<tr valign=top>
<td width=26%><i>varbinary</i></td>
<td width=74%>x</td>
</tr>
<tr valign=top>
<td width=26%><i>image</i></td>
<td width=74%>I[mage]</td>
</tr>
<tr valign=top>
<td width=26%><i>datetime</i></td>
<td width=74%>d[ate] *</td>
</tr>
<tr valign=top>
<td width=26%><i>smalldatetime</i></td>
<td width=74%>D</td>
</tr>
<tr valign=top>
<td width=26%><i>decimal</i></td>
<td width=74%>n</td>
</tr>
<tr valign=top>
<td width=26%><i>numeric</i></td>
<td width=74%>n</td>
</tr>
<tr valign=top>
<td width=26%><i>float</i></td>
<td width=74%>f[loat] *</td>
</tr>
<tr valign=top>
<td width=26%><i>real</i></td>
<td width=74%>r</td>
</tr>
<tr valign=top>
<td width=26%><i>int</i></td>
<td width=74%>i[nt] *</td>
</tr>
<tr valign=top>
<td width=26%><i>smallint</i></td>
<td width=74%>s[mallint] *</td>
</tr>
<tr valign=top>
<td width=26%><i>tinyint</i></td>
<td width=74%>t[inyint] *</td>
</tr>
<tr valign=top>
<td width=26%><i>money</i></td>
<td width=74%>m[oney] *</td>
</tr>
<tr valign=top>
<td width=26%><i>smallmoney</i></td>
<td width=74%>M</td>
</tr>
<tr valign=top>
<td width=26%><i>bit</i></td>
<td width=74%>b[it]</td>
</tr>
<tr valign=top>
<td width=26%><i>timestamp</i></td>
<td width=74%></td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>*&nbsp;&nbsp;&nbsp;&nbsp;Length is dependent on the data. For example, an <i>int</i> of 23 has a storage length of <br>
&nbsp;&nbsp;&nbsp;&nbsp;2 bytes plus the prefix and terminator (if any); an <i>int</i> of 5,238,876 has a storage length <br>
&nbsp;&nbsp;&nbsp;&nbsp;of 7 bytes plus the prefix and terminator (if any).</td>
</tr>
</table><br>
<p>
Giving a type other than <i>char</i> or a datatype that represents an illegitimate implicit conversion causes <b>bcp</b> to fail. For example, you cannot use <i>smallint</i> for <i>int</i> data (you will get overflow errors), but you can use <i>int</i> for <i>smallint</i>.</p>
<p>
When integer datatypes (<i>float</i>, <i>money</i>, and <i>numeric</i>) are stored as their database types, the data is written to the file in the operating-system data representation format, rather than in human-readable form.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
