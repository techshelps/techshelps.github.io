<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Table Deletions</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_table_deletions"></a>Table Deletions</h2>
<p>
The following example deletes the contents of <i>large_tab</i> within a single transaction and logs the complete before-image of every row in the transaction log:</p>
<pre>delete large_tab
</pre>
<p>
If this transaction fails before completing, SQL Server can roll back the transaction and leave the table as it was before the DELETE. Usually, however, you do not need to provide for the recovery of a DELETE operation, so the logging done by an unqualified DELETE statement might not always be needed. If the operation fails halfway through, you can simply repeat it and the results will be the same. </p>
<p>
To accomplish the same results as the DELETE statement without the extensive logging, you can use the TRUNCATE TABLE statement instead. For example:</p>
<pre>truncate table large_tab
</pre>
<p>
This statement also deletes the contents of the table, but it logs only space deallocation operations, not the complete before-image of every row.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
