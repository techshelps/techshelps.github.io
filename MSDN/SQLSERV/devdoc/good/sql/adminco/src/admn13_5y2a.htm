<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Publishing/Subscribing Metaphor</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_the_publishing.2f.subscribing_metaphor"></a>The Publishing/Subscribing Metaphor</h1>
<p>
SQL Server 6.0 replication terminology is based on a publishing/subscribing metaphor:
<ul>
<li>
When data is made available for replication, it is <i>published</i>. The server that contains the source database and makes the data available for replication is called the <i>publication server</i> or <i>publisher</i>. </li>
<li>
An <i>article</i> is the basic unit of replication. It contains data originating from a single table that has been marked for replication. Each article must belong to a publication.</li>
<li>
A <i>publication </i>is a collection of articles. One or more articles can belong to a publication. One or more publications can be created from each user database on a publication server. <p>
Note that all articles within a publication are guaranteed to be initially synchronized as a single logical unit. This helps to maintain integrity relationships originating from the underlying tables.
</li>
<li>
When a server requests a publication, it becomes a <i>subscription server</i> or <i>subscriber</i>. A subscriber can subscribe to some or all available publications and to some or all articles within a publication. </li>
</ul>
<p>
Replicated data moves in only one direction ¾ from the publication server to the subscription servers. You will usually treat replicated data residing in destination tables on subscription servers as read-only. (Note that this means the data should be treated as read-only for the users of the subscription databases. Do not set the Read<b> </b>Only database option, or that subscription database will be unable to receive replicated data.)</p>
<p>
<img src="images/repl_01.gif" border=0></p>
<p>
This is not so limiting as it might at first sound, since each server can act as both subscriber and a publisher and secondary copies of data can be locally processed on the subscriber. For examples of publishing subscribers and of secondary processing of data, see Chapter 15, <a href="admn15_738u.htm">Advanced Replication</a>. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
