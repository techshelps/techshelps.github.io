<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TO TABLE</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_to_table"></a>TO TABLE</h2>
<p>
When a statement is issued that makes or attempts to make a modification to one or more rows of a table (such as INSERT, DELETE, UPDATE, or SELECT INTO), the TO TABLE statement shows the target table being modified. For operations that require an intermediate step that inserts rows into a worktable (discussed later), TO TABLE indicates that the results are going to the worktable, rather than to a user table.</p>
<p>
The following examples illustrate the use of the TO TABLE statement:</p>
<h4>Query 1:</h4>
<pre>INSERT publishers
VALUES ('9904', 'NewPubs', 'Seattle', 'WA', 'USA')
</pre>
<h4>SHOWPLAN 1:</h4>
<pre>STEP 1
The type of query is INSERT
The update mode is direct
TO TABLE
publishers

</pre>
<h4>Query 2:</h4>
<pre>UPDATE publishers
SET city = 'Los Angeles'
WHERE pub_id = '1389'
</pre>
<h4>SHOWPLAN 2:</h4>
<pre>STEP 1
The type of query is UPDATE
The update mode is direct
FROM TABLE
publishers
Nested iteration
Table Scan
TO TABLE
publishers
</pre>
<p>
Notice that the SHOWPLAN for the second query indicates that the <i>publishers</i> table is used both as the FROM TABLE as well as the TO TABLE. In the case of UPDATE operations, the optimizer reads the table that contains the rows to be updated, resulting in the FROM TABLE statement, and then modifies the rows, resulting in the TO TABLE statement.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
