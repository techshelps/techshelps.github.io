<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Dump Devices</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_about_dump_devices"></a>About Dump Devices</h2>
<p>
After you install a SQL Server, you will need to create the dump devices necessary to back up the system. When you create a dump device, you provide both a logical and a physical name. The <i>logical name</i> must follow the SQL Server rules for identifiers and can be up to 30 characters. The <i>physical name</i> is an operating-system filename that includes the full path and follows the rules for operating-system filenames, or the universal naming convention (UNC) for network devices.</p>
<p>
Following are examples of logical and physical names for dump devices.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=21%></th>
<th align=left width=34%></th>
<th align=left width=45%></th>
</tr>
<tr valign=top>
<th align=left width=21%></th>
<th align=left width=34%></th>
<th align=left width=45%></th>
</tr>
<tr valign=top>
<th align=left width=21%>Type of <br>
dump device</th>
<th align=left width=34%>Example of a logical name</th>
<th align=left width=45%><br>
Example of a physical name</th>
</tr>
<tr valign=top>
<td width=21%>Disk</td>
<td width=34%>TLOGDUMP</td>
<td width=45%>C:\SQL60\DATA\TLOG01.DAT</td>
</tr>
<tr valign=top>
<td width=21%>Disk (network)</td>
<td width=34%>DATADUMP</td>
<td width=45%>\\TERRIER\BACK\DUMP11.DAT</td>
</tr>
<tr valign=top>
<td width=21%>Tape</td>
<td width=34%>TAPEDUMP</td>
<td width=45%>\\.\TAPE0</td>
</tr>
<tr valign=top>
<td width=21%>Diskette</td>
<td width=34%>DISKETTEDUMPA</td>
<td width=45%>A:\SQLTABLE.DAT</td>
</tr>
<tr valign=top>
<td width=21%>Named pipe</td>
<td width=34%>PIPEDUMP</td>
<td width=45%>\\.\PIPE\SQL\DUMP</td>
</tr>
<tr valign=top>
<td width=21%>Null</td>
<td width=34%>DISKDUMP</td>
<td width=45%>NUL</td>
</tr>
</table><br>
<p>
Following is information about each type of dump device.</p>

<h5><a name="_about_disk_dump_devices"></a>About Disk Dump Devices</h5>
<p>
SQL Server supports both local and network disk dump devices. A local disk dump device is created on a disk drive attached to the local computer. A network disk dump device is created on a shared network directory. </p>
<p>
When creating a network disk dump device, you can specify the physical name by using a UNC name (for example, \\TERRIER\PUBLIC\DATABACK.DAT).</p>
<p>
<b>Important</b>  When creating a dump device on a remote network location, be sure that the account under which SQL Server runs has appropriate write capabilities on the remote machine. Ownership and permission problems can interfere with the use of disk dump devices on network shares. Make certain that appropriate file, directory, and share permissions are given to the account under which SQL Server runs.</p>
<p>
If SQL Server is running under the LocalSystem account (which is the default configuration), you need to add the share of the remote dump device to the NullSessionShares Registry key.</p>
<p>
\\HKEY_LOCAL_MACHINE<br>
&nbsp;&nbsp;&nbsp;&nbsp;\System<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\CurrentControlSet<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\Services<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\LanmanServer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\Parameters</p>
<p>
Name: NullSessionShares<br>
Type: REG_MULTI_SZ<br>
Data: COMCFG</p>
<p>
In order to access some network resources, you can assign a user account to the SQL Server service (MSSQLServer). You can still run SQLMail in this case. For more information see Chapter 3, <a href="admn03_20vn.htm">Configuring Servers</a>, and Chapter 18, <a href="admn18_8fjg.htm">Setting Up Mail</a>. </p>

<h5><a name="_about_tape_dump_devices"></a>About Tape Dump Devices</h5>
<p>
SQL Server supports local tape dump devices (on tape drives attached to the local computer). Network tape dump devices are not supported.</p>
<p>
To create a tape dump device, you must first install a tape drive using Windows NT. For information about Windows NT - supported tape drives, refer to the hardware compatibility list for Windows NT. For information about installing a tape drive, see the drive manufacturer's documentation and the documentation for the Windows NT Setup program.</p>
<p>
When creating a tape dump device for SQL Server, you must use the physical name that has been assigned to the tape drive by Windows NT. For example, Windows NT will give this physical name to the first tape drive installed on a computer: </p>
<pre>\\.\TAPE0</pre>
<p>
Additional tape devices on a computer will have a similar name, with the number incrementing for each (\\.\TAPE1, \\.\TAPE2, and so on). If more than one tape drive is installed on a computer, you can determine the number of a particular tape drive by using the Windows NT Backup utility from the Administrative Tools program group. </p>
<p>
When dumping to a tape dump device, use only the recommended tapes for the specific tape drive, as documented by the drive manufacturer. If you are using DAT drives, use computer-grade (Digital Data Storage-DDS) DAT tapes. If you do not use a computer grade tape, SQL Server backups will be restricted to a single tape; a database dump that spans multiple tapes will not be allowed.</p>

<h5><a name="_about_diskette_dump_devices"></a>About Diskette Dump Devices</h5>
<p>
Two diskette (floppy disk) dump devices are created when SQL Server is installed: DISKETTEDUMPA and DISKETTEDUMPB. </p>
<p>
Diskette dump devices are supported in order to provide compatibility with earlier releases. SQL Enterprise Manager cannot be used to initiate a diskette dump, because the <b>console</b> command-line utility must be used to prompt the user and then wait for responses. For information about creating and using diskette disk dump devices, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>

<h5><a name="_about_named_pipe_dump_devices"></a>About Named Pipe Dump Devices</h5>
<p>
Named pipe dump devices allow third-party vendors a flexible and powerful way to connect their own software and provide specialized backup and restoration capabilities. </p>
<p>
Named pipe dump devices are not created or administered by using SQL Enterprise Manager or the <b>sp_addumpdevice</b> stored procedure. To use a named pipe dump device, you provide¾as part of a DUMP or LOAD statement¾the name of the named pipe that will be used by a client application. </p>
<p>
For more information about using named pipe dump devices, see the information about the <a href="../../tsqlref/src/tsql11_756c.htm">LOAD</a> and <a href="../../tsqlref/src/tsql08_2zxw.htm">DUMP</a> statements provided in the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>

<h5><a name="_about_the_null_device"></a>About the Null Device</h5>
<p>
A special device, named DISKDUMP, is created when SQL Server is installed. Backing up to DISKDUMP sends the data to the NULL device. This dumps data without saving it. You can use the DISKDUMP device name as a bit bucket in conjunction with database or transaction log backups.</p>
<p>
<b>Important</b>  You cannot retrieve dumps sent to the NULL (DISKDUMP) device.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
