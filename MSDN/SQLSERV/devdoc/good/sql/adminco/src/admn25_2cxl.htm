<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error 2559</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_error_2559"></a>Error 2559</h1>
<h4>Severity Level 16</h4>
<h4>Message Text </h4>
<pre>Data page number %ld is empty but is not the first page. Status = 0x%x.
</pre>
<h4>Explanation</h4>
<p>
This error occurs when SQL Server encounters an empty page while traversing the page chain of an object that is not the first page of the chain. When an object is first created, a single, empty page is allocated to it. Usually there are no other empty pages.</p>
<p>
If you are not encountering any other errors either at run time or from DBCC, it is possible that the empty page will not cause any further problems. Therefore, it is acceptable to wait to correct this problem until non-peak hours. If other errors are occurring, follow the procedures below or contact your primary support provider.</p>
<h4>Action</h4>
<p>
Force the page chain involved to be rebuilt. This can be accomplished in different ways, depending on whether or not the page chain involved is associated with an index or with actual table data. To determine this, use the DBCC PAGE statement to determine the index ID (<i>indid</i>) and object name associated with the page number from the error message. For more information about DBCC PAGE, see "Associating a Page with an Object" in Chapter 24, "Additional Problem-solving Techniques."</p>
<h5>Tables or clustered indexes (<i>indid</i> = 0 or <i>indid</i> = 1)</h5>
<p>
There are two ways to correct this error on tables or clustered indexes, depending on whether you have enough extra disk space to create a clustered index on the table in question. (Clustered index creation requires considerable disk space.) You can either drop the index and re-create it, or you can use <b>bcp</b>.</p>
<p>
<b>Dropping the index</b>  If a clustered index exists, drop and re-create it. If not, create a dummy clustered index and then drop it. This removes the problem because creation of a clustered index causes the table to be copied but does not copy the empty pages. For information about creating clustered indexes, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
<b>Using bcp</b>  If you don't have enough extra disk space to create a clustered index on the table, you can use <b>bcp</b> to copy the table data out of SQL Server, remove all rows from the table, and then use <b>bcp</b> again to copy the table data back into SQL Server. Follow this procedure:
<ol>
<li>
Use the <b>bcp</b> utility to copy the table data out of SQL Server into an operating-system file.</li>
<li>
Empty the table using the TRUNCATE TABLE statement.</li>
<li>
Drop all indexes on the table. (This step is optional.)</li>
<li>
Use the <b>bcp</b> utility to copy the table data back into SQL Server.</li>
<li>
Re-create all indexes on the table. (This step is optional.)</li>
</ol>
<h5>Nonclustered indexes (1 &lt; <i>indid</i> &lt; 255)</h5>
<p>
There are two ways to correct this error on a nonclustered index. You can either drop the index or create a clustered index.</p>
<h5>Dropping the index</h5>
<p>
To drop the index, follow this procedure:
<ol>
<li>
To determine the index name, execute the following query in the database in question:<pre>select name from sysindexes
where id = object_id and indid = index_id</pre>
<p>
In this example, <i>object_id</i> is the ID of the table and <i>index_id</i> is the <i>indid</i> of the page involved in this error (obtained using the DBCC PAGE statement).
</li>
<li>
Drop and re-create the nonclustered index identified in the results of the query.</li>
</ol>
<h5>Creating a clustered index</h5>
<p>
You can correct this error on a nonclustered index by creating a clustered index on the table, because creating a clustered index on a table forces all nonclustered indexes on the table to be rebuilt. Note, however, that this method might not be suitable for large tables because of the overhead required for creating clustered indexes.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
