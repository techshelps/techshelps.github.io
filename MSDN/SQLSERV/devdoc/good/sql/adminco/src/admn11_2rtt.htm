<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Format File to Selectively Copy Data</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_using_a_format_file_to_selectively_copy_data"></a>Using a Format File to Selectively Copy Data</h3>
<p>
Using a <b>bcp</b> format file provides a way to selectively bulk copy data from a file to SQL Server. This allows the user to transfer data into a table when there is a mismatch between the data sent to the table and the columns available for the received data. </p>
<p>
Sometimes a user's data file may not match the structure of the SQL Server table into which the data will go. For example, a table contains columns for an employee's ID, name, and department. The input file contains the employee's ID, name, department, and salary. By using a <b>bcp</b> format file, you can bulk copy only the necessary data, without having to delete the unnecessary data from the input file.</p>
<p>
The following sections provide examples that demonstrate how to change the format file to simplify loading the data in the input file into the SQL Server table.</p>

<h4><a name="_using_a_data_file_with_fewer_columns_than_the_sql.a0.server_table"></a>Using a Data File with Fewer Columns than the SQL Server Table</h4>
<p>
This example takes the data in the input file NEW_AUTH.DAT and loads it into the <i>authors</i> table in the <i>pubs database</i>. This is the data in the NEW_AUTH.DAT file:</p>
<pre>777-77-7777,Chris,Smith,303 555-1213,Denver,CO,1
888-88-8888,John,Doe,206 555-1214,Seattle,WA,0
999-99-9999,Jane,Door,406 555-1234,Bozeman,MT,1
</pre>
<p>
The structure of the input file differs from that of the <i>authors</i> table in three ways:
<ul>
<li>
The first and last names are in reverse order from the order of the columns.</li>
<li>
The input file does not contain an address field.</li>
<li>
The input file does not contain a ZIP code field.</li>
</ul>
<p>
To enter this data into the SQL Server table, you must first create a format file for the <i>authors</i> table. To create the format file, type:</p>
<pre>bcp pubs..authors out c:\authors.out /S<i>servername</i> /Usa /P<i>password</i>
</pre>
<p>
The <b>bcp</b> utility displays a series of questions for each column of the <i>authors</i> table. Enter values for the prompts as shown below. Use a comma for the field terminator, and use a newline character (<b>\n</b>) for the field terminator on the <i>contract</i> column. Save this file as AUTHORS.FMT. You should see prompts similar to the following:</p>
<pre>Enter the file storage type of field au_id [char]:
Enter prefix-length of field au_id [0]: 
Enter length of field au_id [11]:
Enter field terminator [none]: ,

Enter the file storage type of field au_lname [char]:
Enter prefix-length of field au_lname [0]: 
Enter length of field au_lname [40]:
Enter field terminator [none]: ,

Enter the file storage type of field au_fname [char]:
Enter prefix-length of field au_fname [0]: 
Enter length of field au_fname [20]:
Enter field terminator [none]: ,

Enter the file storage type of field phone [char]:
Enter prefix-length of field phone [0]: 
Enter length of field phone [12]:
Enter field terminator [none]: ,

Enter the file storage type of field address [char]:
Enter prefix-length of field address [0]: 
Enter length of field address [40]: 0
Enter field terminator [none]: 

Enter the file storage type of field city [char]:
Enter prefix-length of field city [0]: 
Enter length of field city [20]:
Enter field terminator [none]: ,

Enter the file storage type of field state [char]:
Enter prefix-length of field state [0]: 
Enter length of field state [2]:
Enter field terminator [none]: ,

Enter the file storage type of field zip [char]:
Enter prefix-length of field zip [0]: 
Enter length of field zip [5]: 0
Enter field terminator [none]: 

Enter the file storage type of field contract [bit]: char
Enter prefix-length of field contract [0]: 
Enter length of field contract [1]:
Enter field terminator [none]: \n

Do you want to save this format information in a file? [Y/n] y
Host filename [bcp.fmt]: authors.fmt

Starting copy...

23 rows copied. 
Network packet size (bytes): 4096
Clock time (ms.): total = 451   Avg = 19   (51.00 rows per sec.)
</pre>
<p>
This creates the AUTHORS.FMT format file, which looks like this:</p>
<pre>6.0
9</pre>
<table cellspacing=4 cols=7>
<tr valign=top>
<td width=6%><pre>1</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>11</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>1</pre>
</td>
<td width=26%><pre>au_id</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>2</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>40</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>2</pre>
</td>
<td width=26%><pre>au_lname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>3</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>3</pre>
</td>
<td width=26%><pre>au_fname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>4</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>12</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>4</pre>
</td>
<td width=26%><pre>phone</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>5</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>""</pre>
</td>
<td width=10%><pre>5</pre>
</td>
<td width=26%><pre>address</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>6</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>6</pre>
</td>
<td width=26%><pre>city</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>7</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>2</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>7</pre>
</td>
<td width=26%><pre>state</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>8</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>""</pre>
</td>
<td width=10%><pre>8</pre>
</td>
<td width=26%><pre>zip</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>9</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>1</pre>
</td>
<td width=17%><pre>"\r\n"</pre>
</td>
<td width=10%><pre>9</pre>
</td>
<td width=26%><pre>contract</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
For an explanation of each area in the format file, see  <a href="admn11_9yat.htm">Using the <b>bcp</b> Format File</a>, earlier in this chapter.</p>
<p>
The format file contains all the information necessary to copy the data from the input file into the SQL Server table. Note that by entering a field length of 0 and no field terminator for the <i>address</i> and <i>zip</i> fields, you have in effect told the format file that those columns do not exist in the input file. However, you still need to edit the format file to show that the <i>au_lname</i> and <i>au_fname</i> columns are reversed in the input file and that no data will be loaded into the <i>address</i> and <i>zip</i> columns of the table. To do this:
<ol>
<li>
Use a text editor to reverse the server column numbers for the <i>au_lname</i> and <i>au_fname</i> columns.</li>
<li>
Set the server column numbers for the <i>address</i> and <i>zip</i> columns to 0.</li>
<li>
Save the modified format file under the same name (AUTHORS.FMT).</li>
</ol>
<p>
The modified format file should look like this:</p>
<pre>6.0
9</pre>
<table cellspacing=4 cols=7>
<tr valign=top>
<td width=6%><pre>1</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>11</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>1</pre>
</td>
<td width=26%><pre>au_id</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>2</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>40</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>3</pre>
</td>
<td width=26%><pre>au_lname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>3</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>2</pre>
</td>
<td width=26%><pre>au_fname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>4</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>12</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>4</pre>
</td>
<td width=26%><pre>phone</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>5</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>""</pre>
</td>
<td width=10%><pre>0</pre>
</td>
<td width=26%><pre>address</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>6</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>6</pre>
</td>
<td width=26%><pre>city</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>7</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>2</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>7</pre>
</td>
<td width=26%><pre>state</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>8</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>""</pre>
</td>
<td width=10%><pre>0</pre>
</td>
<td width=26%><pre>zip</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>9</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>1</pre>
</td>
<td width=17%><pre>"\r\n"</pre>
</td>
<td width=10%><pre>9</pre>
</td>
<td width=26%><pre>contract</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
The <b>bcp</b> utility can now use this new format file to copy the data in the input file into the <i>authors</i> table using the following command:</p>
<pre>bcp pubs..authors in c:\new_auth.dat /fc:\authors.fmt 
/S<i>servername</i> /Usa /P<i>password</i>
</pre>
<p>
<b>Note</b>  Since the <i>address</i> and <i>zip</i> columns are not present in the input file, those columns contain NULL in the SQL Server table. Therefore, the <i>authors</i> table must allow null values in those columns.</p>

<h4><a name="_skipping_over_columns_in_the_data_file"></a>Skipping Over Columns in the Data File</h4>
<p>
In this example, the data in the input file is slightly different from the first example because it contains all the necessary data for the <i>authors</i> table, including the <i>address</i> and <i>zip</i> fields. The following is the data in the NEW_AUTH.DAT file for this example:</p>
<pre>777-77-7777,Chris,Smith,303 555-1213,27 College Ave,Denver,CO,80220,1
888-88-8888,John,Doe,206 555-1214,123 Maple Street,Seattle,WA,95099,0
999-99-9999,Jane,Door,406 555-1234,45 East Main,Bozeman,MT,59715,1
</pre>
<p>
Assume that, although the <i>address</i> and <i>zip</i> fields are present in the input file, they will not be included in the SQL Server table. In addition, the order of the data needs to be reversed for the <i>au_fname</i> and <i>au_lname</i> columns. Perform the steps shown in the previous example to get the format file for the <i>authors</i> table. However, since the input file contains data for the <i>address</i> and <i>zip</i> fields, use a comma for the field terminator for each of them. The format file should look like this:</p>
<pre>6.0
9</pre>
<table cellspacing=4 cols=7>
<tr valign=top>
<td width=6%><pre>1</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>11</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>1</pre>
</td>
<td width=26%><pre>au_id</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>2</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>40</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>2</pre>
</td>
<td width=26%><pre>au_lname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>3</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>3</pre>
</td>
<td width=26%><pre>au_fname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>4</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>12</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>4</pre>
</td>
<td width=26%><pre>phone</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>5</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>""</pre>
</td>
<td width=10%><pre>5</pre>
</td>
<td width=26%><pre>address</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>6</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>6</pre>
</td>
<td width=26%><pre>city</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>7</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>2</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>7</pre>
</td>
<td width=26%><pre>state</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>8</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>""</pre>
</td>
<td width=10%><pre>8</pre>
</td>
<td width=26%><pre>zip</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>9</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>1</pre>
</td>
<td width=17%><pre>"\r\n"</pre>
</td>
<td width=10%><pre>9</pre>
</td>
<td width=26%><pre>contract</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
Edit the format file to reverse the order of the <i>au_fname</i> and <i>au_lname</i> columns. In addition, set the server column order numbers for the <i>address</i> and <i>zip</i> columns to 0. The modified format file should look like this:</p>
<pre>6.0
9</pre>
<table cellspacing=4 cols=7>
<tr valign=top>
<td width=6%><pre>1</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>11</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>1</pre>
</td>
<td width=26%><pre>au_id</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>2</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>40</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>3</pre>
</td>
<td width=26%><pre>au_lname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>3</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>2</pre>
</td>
<td width=26%><pre>au_fname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>4</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>12</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>4</pre>
</td>
<td width=26%><pre>phone</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>5</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>""</pre>
</td>
<td width=10%><pre>0</pre>
</td>
<td width=26%><pre>address</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>6</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>6</pre>
</td>
<td width=26%><pre>city</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>7</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>2</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>7</pre>
</td>
<td width=26%><pre>state</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>8</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>""</pre>
</td>
<td width=10%><pre>0</pre>
</td>
<td width=26%><pre>zip</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>9</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>1</pre>
</td>
<td width=17%><pre>"\r\n"</pre>
</td>
<td width=10%><pre>9</pre>
</td>
<td width=26%><pre>contract</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
This format file can now be used to copy in the data in the NEW_AUTH.DAT data file using the same <b>bcp</b> command as the previous example:</p>
<pre>bcp pubs..authors in c:\new_auth.dat /fc:\authors.fmt 
/S<i>servername</i> /Usa /P<i>password</i>
</pre>
<p>
Again, since the <i>address</i> and <i>zip</i> fields will not be copied into the <i>authors</i> table, those columns will contain NULL in the SQL Server table.</p>

<h4><a name="_using_a_data_file_with_more_columns_than_the_sql.a0.server_table"></a>Using a Data File with More Columns Than the SQL Server Table</h4>
<p>
In this example, the data in the input file is the same as that in the previous example, except that the input file contains two additional fields: <i>age</i> and <i>salutation</i>. Since the <i>authors</i> table does not have columns for this data to go into, the format file must be changed to allow <b>bcp</b> to read the additional fields from the input file, but not to copy the data into the SQL Server table. This is the data in the input file:</p>
<pre>777-77-7777,Chris,Smith,303 555-1213,27 College Ave,Denver,CO,80220,1,28,Ms.
888-88-8888,John,Doe,206 555-1214,123 Maple Street,Seattle,WA,95099,0,35,Mr.
999-99-9999,Jane,Door,406 555-1234,45 East Main,Bozeman,MT,59715,1,33,Mrs.
</pre>
<p>
The same format file from the end of the previous example can be used:</p>
<pre>6.0
9</pre>
<table cellspacing=4 cols=7>
<tr valign=top>
<td width=6%><pre>1</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>11</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>1</pre>
</td>
<td width=26%><pre>au_id</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>2</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>40</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>3</pre>
</td>
<td width=26%><pre>au_lname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>3</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>2</pre>
</td>
<td width=26%><pre>au_fname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>4</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>12</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>4</pre>
</td>
<td width=26%><pre>phone</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>5</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>0</pre>
</td>
<td width=26%><pre>address</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>6</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>6</pre>
</td>
<td width=26%><pre>city</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>7</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>2</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>7</pre>
</td>
<td width=26%><pre>state</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>8</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>0</pre>
</td>
<td width=26%><pre>zip</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>9</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>1</pre>
</td>
<td width=17%><pre>"\r\n"</pre>
</td>
<td width=10%><pre>9</pre>
</td>
<td width=26%><pre>contract</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
The format file must be edited to reflect the addition of the new columns. The second line of the format file, which specifies the number of columns, must be changed to 11, since there are 11 fields now in the input file. The field terminator for the <i>contract</i> column must be changed from "<b>\r\n</b>" to "<b>,</b>", since it is no longer the last field in the file. Finally, two new rows are added to the end of the format file to provide the information for the additional fields. The final format file should look like this:</p>
<pre>6.0
11</pre>
<table cellspacing=4 cols=7>
<tr valign=top>
<td width=6%><pre>1</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>11</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>1</pre>
</td>
<td width=26%><pre>au_id</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>2</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>40</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>3</pre>
</td>
<td width=26%><pre>au_lname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>3</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>2</pre>
</td>
<td width=26%><pre>au_fname</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>4</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>12</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>4</pre>
</td>
<td width=26%><pre>phone</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>5</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>0</pre>
</td>
<td width=26%><pre>address</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>6</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>20</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>6</pre>
</td>
<td width=26%><pre>city</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>7</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>2</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>7</pre>
</td>
<td width=26%><pre>state</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>8</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>0</pre>
</td>
<td width=26%><pre>zip</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>9</pre>
</td>
<td width=23%><pre>SQLCHAR </pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>1</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>9</pre>
</td>
<td width=26%><pre>contract</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>10</pre>
</td>
<td width=23%><pre>SQLCHAR</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>","</pre>
</td>
<td width=10%><pre>0</pre>
</td>
<td width=26%><pre>age</pre>
</td>
</tr>
<tr valign=top>
<td width=6%><pre>11</pre>
</td>
<td width=23%><pre>SQLCHAR</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=9%><pre>0</pre>
</td>
<td width=17%><pre>"\r\n"</pre>
</td>
<td width=10%><pre>0</pre>
</td>
<td width=26%><pre>salutation</pre>
</td>
</tr>
</table><br>
<pre></pre>
<p>
This format file can now be used to copy in the necessary data from the input file, with <b>bcp</b> ignoring the last two fields in the input file, using the same <b>bcp</b> command as the previous examples:</p>
<pre>bcp pubs..authors in c:\new_auth.dat /fc:\authors.fmt 
/S<i>servername</i> /Usa /P<i>password</i>
</pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
