<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Monitoring Server Statistics</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_monitoring_server_statistics"></a>Monitoring Server Statistics</h1>
<p>
Using the <b>sp_monitor</b> system stored procedure, you can display statistics that indicate how busy SQL Server has been. Each time <b>sp_monitor</b> is run, these statistics are returned:
<dl>
<dt>
<i>last_run</i></dt>
<dd>
The time the <b>sp_monitor</b> system procedure was last run.</dd>
<dt>
<i>current_run</i></dt>
<dd>
The time the <b>sp_monitor</b> system procedure is being run.</dd>
<dt>
<i>seconds</i></dt>
<dd>
The number of elapsed seconds since the <b>sp_monitor</b> system procedure was run.</dd>
<dt>
<i>cpu_busy</i></dt>
<dd>
The number of seconds that the server computer's CPU has been doing SQL Server work.</dd>
<dt>
<i>io_busy</i></dt>
<dd>
The number of seconds that SQL Server has spent doing input and output operations.</dd>
<dt>
<i>idle</i></dt>
<dd>
The number of seconds that SQL Server has been idle.</dd>
<dt>
<i>packets_received</i></dt>
<dd>
The number of input packets read by SQL Server.</dd>
<dt>
<i>packets_sent</i></dt>
<dd>
The number of output packets written by SQL Server.</dd>
<dt>
<i>packet_errors</i></dt>
<dd>
The number of errors encountered by SQL Server while reading and writing packets.</dd>
<dt>
<i>total_read</i></dt>
<dd>
The number of reads by SQL Server.</dd>
<dt>
<i>total_write</i></dt>
<dd>
The number of writes by SQL Server.</dd>
<dt>
<i>total_errors</i></dt>
<dd>
The number of errors encountered by SQL Server while reading and writing.</dd>
<dt>
<i>connections</i></dt>
<dd>
The number of logins or attempted logins to SQL Server.
</dd>
</dl>
<p>
You execute the <b>sp_monitor</b> system stored procedure by using any of the SQL Server client utilities (such as ISQL/w or the query window of SQL Enterprise Manager). Because it updates the <i>spt_monitor</i> table in the <i>master</i> database, you must have SA privileges to execute <b>sp_monitor</b>. </p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To view server statistics</h5>
<ul>
<li>
Type:<p>
<b>sp_monitor</b>
</li>
</ul>
<p>
For example:</p>
<pre>sp_monitor
last_run             current_run          seconds
-------------------  -------------------  -------
MAR 11 1995 3:26PM   MAR 11 1995 4:34PM   4038

cpu_busy             io_busy              idle
-------------        ----------           ------------
4250(215)-68%        67(1)-0%             109(100)-31%

packets_received     packets_sent         packet_errors
-------------------  -------------------  -------------
781(15)              10110(9596)          0(0)

total_read           total_write          total_errors   connections
--------------       --------------       ------------   -----------
394(67)              5392(53)             0(0)           15(1)</pre>
<p>
The information returned shows not only the current value for each statistic but also how much each has changed since the last time the procedure was executed. Each statistic is returned in the form <i>number</i>(<i>number</i>)<i>-number</i>% or <i>number</i>(<i>number</i>). The first number refers to the number of seconds (for <i>cpu_busy</i>, <i>io_busy</i>, and <i>idle</i>) or the total number (for the other variables) since SQL Server was restarted. The number in parentheses refers to the number of seconds or the total number since the last time <b>sp_monitor</b> was run. The percentage is the percentage of time since <b>sp_monitor</b> was last run. </p>
<p>
For example, if the report shows <i>cpu_busy</i> as 4250(215)-68%, the CPU has been busy 4250 seconds since SQL Server was last started up, 215 seconds since <b>sp_monitor</b> was last run, and 68 percent of the total time since <b>sp_monitor</b> was last run.</p>
<p>
SQL Server keeps track of these statistics by using a series of predefined global variables. With the exception of <i>last_run</i>, <i>current_run</i>, and <i>seconds</i>, the names of the <b>sp_monitor</b> statistics are also the names of global variables, except that the names of the global variables are preceded by @@.</p>
<p>
Variables are defined entities that are assigned values. Global variables are predefined and maintained by the system. Global variables are distinguished from local variables by having two "at" symbols (@@) preceding their names.</p>
<p>
The unit of time reported by a global variable is a <i>timetick</i>. Each timetick on the operating system is 31.25 milliseconds (1/32 second).</p>
<p>
Not all global variables are reported on by <b>sp_monitor</b>. Many of these global variables report on system activity, and their reports refer to activity since the last time SQL Server was started. You can use the SELECT statement to query the global variables directly.</p>
<p>
These are the server global variables provided with SQL Server:
<dl>
<dt>
@@CONNECTIONS</dt>
<dd>
Specifies the number of logins or attempted logins since SQL Server was last started. </dd>
<dt>
@@CPU_BUSY</dt>
<dd>
Specifies the amount of time, in ticks, that the CPU has spent doing SQL Server work since the last time SQL Server was started.</dd>
<dt>
@@DATEFIRST</dt>
<dd>
Returns the current value of the SET DATEFIRST parameter. Indicates the first day of each week: 1 for Monday, 2 for Tuesday, and so on through 7 for Sunday.</dd>
<dt>
@@DBTS</dt>
<dd>
Specifies the value of the current <i>timestamp</i> datatype for the database. This <i>timestamp</i> is guaranteed to be unique for the database. </dd>
<dt>
@@IDLE</dt>
<dd>
Specifies the amount of time, in ticks, that SQL Server has been idle since it was last started.</dd>
<dt>
@@IO_BUSY</dt>
<dd>
Specifies the amount of time, in ticks, that SQL Server has spent doing input and output operations since it was last started. </dd>
<dt>
@@MAX_CONNECTIONS</dt>
<dd>
Specifies the maximum number of simultaneous connections that can be made with SQL Server in the current computer environment. The user can configure SQL Server for fewer connections with <b>sp_configure</b>. @@MAX_CONNECTIONS is not necessarily the number configured currently.</dd>
<dt>
@@MAX_PRECISION</dt>
<dd>
Returns the level of precision used by <i>decimal </i>and <i>numeric </i>datatypes as currently set in the server. By default, the maximum precision is 28; however, a larger precision can be set when SQL Server starts by using the <b>/p </b>parameter with <b>sqlservr</b>. </dd>
<dt>
@@MICROSOFTVERSION</dt>
<dd>
A version used internally to track the current version of the server. If version checking is necessary, see @@VERSION.</dd>
<dt>
@@PACK_RECEIVED</dt>
<dd>
Specifies the number of input packets read by SQL Server since it was last started.</dd>
<dt>
@@PACK_SENT</dt>
<dd>
Specifies the number of output packets written by SQL Server since it was last started.</dd>
<dt>
@@PACKET_ERRORS</dt>
<dd>
Specifies the number of errors that have occurred while SQL Server was sending and receiving packets since the last time SQL Server was started.</dd>
<dt>
@@SERVERNAME</dt>
<dd>
Specifies the name of the local SQL Server. You must define this name with the <b>sp_addserver </b>system stored procedure and then restart SQL Server. The <b>setup</b> program sets this variable to the computer name during installation. Although @@SERVERNAME can be changed with <b>sp_addserver</b>, this method is not recommended.</dd>
<dt>
@@SERVICENAME</dt>
<dd>
Specifies the name of a running service. Currently, @@SERVICENAME defaults to the @@SERVERNAME.</dd>
<dt>
@@TIMETICKS</dt>
<dd>
Specifies the number of microseconds per tick. The amount of time per tick is computer-dependent. Each tick on the operating system is 31.25 milliseconds (1/32 second).</dd>
<dt>
@@TOTAL_ERRORS</dt>
<dd>
Specifies the number of errors that have occurred while SQL Server was reading or writing since the last time SQL Server was started.</dd>
<dt>
@@TOTAL_READ</dt>
<dd>
Specifies the number of disk reads by SQL Server since it was last started (this includes disk reads only, not cache reads).</dd>
<dt>
@@TOTAL_WRITE</dt>
<dd>
Specifies the number of disk writes by SQL Server since it was last started.</dd>
<dt>
@@VERSION</dt>
<dd>
Specifies the date, version number, and processor type for the current version of SQL Server.
</dd>
</dl>
<p>
Any user (not just the SA) can use the SELECT command to query a global variable directly. </p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To query a global variable</h5>
<ul>
<li>
Type:<p>
<b>SELECT</b> <i>global_variable</i>
<p>
where
<dl>
<dt>
<i>global_variable</i></dt>
<dd>
Is the global variable name.
</dd>
</dl>
</li>
</ul>
<p>
For example:</p>
<pre>select @@cpu_busy

------------------
4250
</pre>
<p>
For more information about global variables and about using <b>sp_monitor</b>, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
