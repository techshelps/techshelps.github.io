<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting Up Mirroring using Transact-SQL Statements</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_setting_up_mirroring_using_transact.2d.sql_statements"></a>Setting Up Mirroring Using Transact-SQL Statements</h2>
<p>
In addition to using SQL Enterprise Manager, you can use the DISK MIRROR, DISK UNMIRROR, and DISK REMIRROR statements to set up mirroring.</p>
<p>
The DISK MIRROR statement starts disk mirroring. The database device to be mirrored must have already been initialized by a DISK INIT statement. The device that contains the mirror should not be initialized with DISK INIT. </p>
<p>
When you mirror a device, the DISK MIRROR command creates a physical device and puts an exact copy of the existing device on the newly created mirroring device. When you first execute the DISK MIRROR command, it may take a few minutes if the device you are mirroring has a lot of information on it. A disk and its mirror constitute one logical device, and the mirror name is added to the <i>mirrorname</i> column in the <i>sysdevices</i> table.</p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To mirror a device</h5>
<p>
DISK MIRROR<br>
NAME <b>=</b> <b>'</b><i>logical_name</i><b>',</b><br>
MIRROR <b>=</b> <b>'</b><i>physical_name</i><b>'</b><br>
[<b>, </b>WRITES <b>=</b> {SERIAL | NOSERIAL }]</p>
<p>
where
<dl>
<dt>
<i>logical_name</i></dt>
<dd>
Is the name of the device to be mirrored. </dd>
<dt>
<i>physical_name</i></dt>
<dd>
Is the operating-system filename of the device. It cannot be an already existing operating-system file.</dd>
<dt>
SERIAL</dt>
<dd>
Specifies that writes to the original disk must finish before writes to the mirror disk begin. With Windows NT, mirroring is always SERIAL.</dd>
<dt>
NOSERIAL</dt>
<dd>
Specifies that writes can occur either simultaneously to the original disk and to the mirror disk, or serially to the original disk before the mirror disk. With Windows NT, mirroring is always SERIAL. NOSERIAL is retained for compatibility with other versions of SQL Server.
</dd>
</dl>
<p>
In the following example, TRANLOG is the database device name for the device to be mirrored. The TRANLOG device has been initialized with DISK INIT and is used as a transaction log device, as in CREATE DATABASE... LOG ON TRANLOG. For example, to mirror the EMPLOYEE device to the D: disk, type:</p>
<pre>DISK MIRROR 
NAME = 'employee',
MIRROR = 'd:\employee.mir' </pre>
<p>
To mirror the TRANLOG transaction log device to the F: hard disk:</p>
<pre>DISK MIRROR 
NAME = 'tranlog',
MIRROR = 'f:\tranmir.dat' 
</pre>
<p>
The DISK UNMIRROR statement stops the mirroring process. When you unmirror a device, you can choose to unmirror the device or its mirror. For example, if the device you're mirroring fails, you can unmirror the mirror and replace the device with it. </p>
<p>
You can also unmirror the device, unmirror permanently, or temporarily pause mirroring.</p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To unmirror a device</h5>
<p>
DISK UNMIRROR<br>
NAME <b>=</b> <b>'</b><i>logical_name</i><b>'</b><br>
[<b>, </b>SIDE <b>=</b> {PRIMARY | SECONDARY}] <br>
[<b>, </b>MODE <b>=</b> {RETAIN | REMOVE}]</p>
<p>
where
<dl>
<dt>
<i>logical_name</i></dt>
<dd>
Is the name of the device to be unmirrored. This name is recorded in <i>sysdevices</i>. </dd>
<dt>
PRIMARY</dt>
<dd>
Is the device listed in the <i>name</i> column of <i>sysdevices</i>.</dd>
<dt>
SECONDARY</dt>
<dd>
Is the device listed in the <i>mirrorname</i> column of <i>sysdevices</i>.</dd>
<dt>
RETAIN</dt>
<dd>
Specifies that the unmirroring is temporary. RETAIN is the default.</dd>
<dt>
REMOVE</dt>
<dd>
Specifies that the unmirroring is permanent.
</dd>
</dl>
<p>
For example, to temporarily unmirror the EMPLOYEE device, type:</p>
<pre>DISK UNMIRROR
NAME = 'employee',
SIDE = primary,
MODE = retain
</pre>
<p>
To permanently unmirror the TRANLOG device, type:</p>
<pre>DISK UNMIRROR
NAME = 'tranlog',
SIDE = primary,
MODE = remove
</pre>
<p>
To temporarily unmirror the EMPLOYEE mirror, type:</p>
<pre>DISK UNMIRROR
NAME = 'employee',
SIDE = secondary,
MODE = retain
</pre>
<p>
A mirror process that has been suspended due to a device failure or with the DISK UNMIRROR statement can be restarted with DISK REMIRROR. If you set RETAIN when you unmirrored the device, you can use the DISK REMIRROR statement.</p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To remirror a device</h5>
<p>
DISK REMIRROR<br>
NAME <b>= '</b><i>logical_name</i><b>'</b></p>
<p>
where
<dl>
<dt>
<i>logical_name</i></dt>
<dd>
Is the device to be remirrored.
</dd>
</dl>
<p>
For example, to remirror the EMPLOYEE device, type:</p>
<pre>DISK REMIRROR
NAME = 'employee'
</pre>
<p>
For more information about the DISK MIRROR, DISK UNMIRROR, and DISK REMIRROR statements, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
