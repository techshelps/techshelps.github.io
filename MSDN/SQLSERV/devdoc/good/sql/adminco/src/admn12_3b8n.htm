<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Restoring a Database or Applying a Transaction Log</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_restoring_a_database_or_applying_a_transaction_log"></a>Restoring a Database or Applying a Transaction Log</h2>
<p>
If the device that a database resides on fails and the database is damaged, you can restore the database by reloading the most recent database backup and the succeeding transaction log backups. Or if you find that you have some corrupt data on the database, you can reload a database backup over the old database. </p>
<p>
When a database is restored from a backup, that database must not be in use. Any data in the specified database is replaced by the loaded data.</p>
<p>
If you are reloading a database because of media failure, you must drop the damaged database by using DBCC or the <b>sp_dbremove</b> system stored procedure, re-create the database, and then restore the database from a backup. </p>
<p>
Loading a transaction log results in re-execution of the changes it contains and in rolling back any transactions that were uncommitted when the transaction log was backed up. </p>
<p>
Backups of the transaction log must be loaded in the sequence in which they were made. SQL Server checks the time stamps on each dumped database and each dumped transaction log to see that the sequence is correct. When the entire sequence of transaction log dumps has been loaded, the database is restored to its state at the time of the last transaction log dump (minus active transactions). This recovers as much of a database as possible in case of system failure. </p>
<p>
<b>Note</b>  Restoring the <i>master</i> database is a special case. For information, see <a href="admn12_5w6d.htm">Restoring the <i>master</i> Database</a>, later in this chapter.</p>
<p>
You can also dump a database and load that dump into another database. However, the new database must be at least as large as the dumped database that is being loaded. (Segment mappings must also be the same. For more information, see <a href="admn12_93dz.htm">More About Backing Up and Restoring</a>, later in this chapter.)</p>
<p>
<b>Note</b>  If the <i>msdb</i> database is to be restored from a backup, the SQLExecutive service must be stopped before the restore begins and then restarted after the restore is complete. If this is not done, then SQL Executive will not function properly.</p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To restore a database or apply a transaction log</h5>
<ol>
<li>
From the Server Manager window, select a server.</li>
<li>
From the Tools menu, choose Backup/Restore.<p>
The Database Backup/Restore dialog box appears.
</li>
<li>
Select the Restore tab.<p>
<img src="images/ad12_52.gif" border=0>
</li>
<li>
To display information about the backups that exist on a dump device, select the device's "" box. <p>
A list of backups on that dump device appears. This information includes the number of the backup, the database name, the date the backup was created, and the size of the backup. An icon indicates whether the backup was of a transaction log or was a complete database dump.
</li>
<li>
For volume or header information about the backups on a disk or tape dump device, select the device from the Dump Devices list, and choose the Info button. <p>
The Header Info Dialog box appears. For information about this dialog box, see <a href="admn12_2gfi.htm">Viewing Volume and Header Information</a>, later in this chapter.
</li>
<li>
To select the device that will be restored from, select a device from the Dump Devices list, and then choose Add. The added device moves to the Restore Locations list.<p>
Repeat this step for each device to restore from. If you have dumped the information to one or more disk devices, you must restore the information from all those devices. If a dump was made entirely to tape dump devices, you can restore from fewer tape dump devices than were originally dumped to, as long as all tapes from that dump are provided.
<p>
If necessary, you can add a dump device (for example, to restore from a network path) by choosing New and completing the Create Dump Device dialog box that appears. 
<p>
You cannot restore from diskette dump devices when using SQL Enterprise Manager. For information about restoring from diskette dump devices, see the <i>Microsoft SQL Server Transact-SQL Reference</i>. For more information about dump devices, see Chapter 5, <a href="admn05_0tgz.htm">Managing Devices</a>. 
</li>
<li>
To specify a volume name for a device, type up to six characters (letters or numbers) in the Volume box of the Backup Destination list. A volume name is optional, but if you enter one, it must match the volume name on the device. <p>
To determine the volume name, select the device from the Dump Devices list and then choose the Info button.
</li>
<li>
From the Database list, select the database to restore. </li>
<li>
Select either Load Database or Apply Transaction Log.<ul>
<li>
<b>Load Database</b> restores the entire database.</li>
<li>
<b>Apply Transaction Log </b>restores the transaction log information, reexecutes the changes it contains, and rolls back any transactions that were uncommitted when the transaction log was backed up.</li>
</ul>
</li>
<li>
Select or clear the restore options.<ul>
<li>
<b>Skip Tape Header</b> specifies that the server will not read the ANSI header on the tape.</li>
<li>
<b>Unload Tape at End</b> automatically rewinds and unloads the tape when a restore from a tape device completes.</li>
<li>
<b>File Number</b> specifies the file number of the dump to restore for dumps containing multiple files. </li>
</ul>
</li>
<li>
Choose the Restore button.</li>
</ol>
<p>
You can also restore a database or apply a transaction log by using the LOAD statement. For information, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
<b>Note</b>  If you have loaded a dump into a new database that was created using the FOR LOAD option, after completing the load(s) you must clear the database option DBO Use Only by using SQL Enterprise Manager or <b>sp_dboption</b>. Until you do this, users other than DBO may not access the database.</p>
<p>
For more information about restoring databases, see  <a href="admn12_93dz.htm">More About Backing Up and Restoring</a>, later in this chapter.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
