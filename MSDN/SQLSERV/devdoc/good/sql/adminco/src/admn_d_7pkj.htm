<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Types</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_application_types"></a>Application Types</h2>
<p>
By examining different database applications and database functions, the fundamental I/O profile used to access the disk can be determined. What this determines is whether a particular dataset will be accessed either sequentially or randomly. The key high-level application types include transaction processing, decision support systems, and batch processing. In this section we will examine the various access patterns on the database files and later apply these patterns to how the drives eventually get configured. The distinct file types to be examined are data and index files, transaction logs, and import/export files.</p>

<h3><a name="_transaction_processing_.28.oltp.29"></a>Transaction Processing (OLTP)</h3>
<p>
OLTP is usually characterized as many users acting on a small subset of data throughout the database. The I/O profile resulting from this load is very heavy random reads and writes across the data and index files. The transaction logs, however, are hit with a heavy stream of sequential write operations of 2K or less.</p>

<h3><a name="_decision_support_system_.28.dss.29"></a>Decision Support System (DSS)</h3>
<p>
DSS is characteristic of multiple users executing complicated joins and aggregations on large sets of data. Even though many of the operations could use some sequential processing, contention with other users and join and indexing operation result in a fairly random access pattern to the data and index files. Usually, if the database is dedicated to DSS no updates will be done to the database during heavy query load. In this case, no I/O will occur on the transaction logs. If on-line updates are applied to the database, it must be remembered when configuring the drive subsystem that log file response time may still be important to the overall performance of the system.</p>

<h3><a name="_batch_processing"></a>Batch Processing</h3>
<p>
Batch processing is the most likely application to produce significant sequential I/O on the data files. The types of activities referred to here often occur after hours and usually in isolation of other activities. Batch processing involves database dumps, database loads, detail report processing, and index creation. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
