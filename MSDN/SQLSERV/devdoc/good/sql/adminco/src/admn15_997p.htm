<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Stored Procedures for Insert, Update, and Delete</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_adding_stored_procedures_for_insert.2c_.update.2c_.and_delete"></a>Adding Stored Procedures for Insert, Update, and Delete</h2>
<p>
Normally, when the log reader process encounters an INSERT, UPDATE, or DELETE command that is in the transaction log of a publication database and is marked for replication, a single row SQL statement is reconstructed from the recorded data changes. The replication processes then send that reconstructed SQL statement to each server that is subscribed to that article and apply the statement to the destination table in each destination database. </p>
<p>
This is the default data replication mechanism used by SQL Server replication. In most cases, it is the appropriate replication method. However, you have the option of customizing this process to meet specific replication requirements. </p>
<p>
For each published table, there are three ways you can handle each type of statement (INSERT, UPDATE, or DELETE) that is detected by the log reader. You can:
<ul>
<li>
Leave the default replication mechanism in place.</li>
<li>
Specify that no action will be taken at any subscriber.</li>
<li>
Specify that custom processing will occur at all subscribers.</li>
</ul>
<p>
You define the Data Replication Mechanism for a published table by using the options provided in the Scripts tab of the Edit Article dialog box. See the following illustration. (For information about how to access and edit this dialog box, see Chapter 14, <a href="admn14_4kha.htm">Setting Up Replication</a>.) </p>
<p>
<img src="images/ad15_910.gif" border=0></p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To use the default data replication mechanism for a statement type</h5>
<ul>
<li>
In most cases, you will do nothing. Leave the default option selected (INSERT Command, UPDATE Command, or DELETE Command).</li>
</ul>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To specify no processing for a statement type</h5>
<ul>
<li>
Choose the Custom option for the statement type, and then in the Custom box, type <b>NONE</b>. Transactions of that type will not be replicated. <p>
For example, if you choose the Custom option for DELETE and type <b>NONE</b>, then DELETE statements will not be replicated for that article.
</li>
</ul>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To specify custom processing for a statement type</h5>
<ul>
<li>
Choose the Custom option for the statement type, and then in the Custom box, type:<p>
<b>CALL</b> <i>customproc</i>
<p>
where
<dl>
<dt>
<i>customproc</i></dt>
<dd>
Is the name of a stored procedure that has been created in the destination database on each server subscribing to this article.</dd>
</dl>
<p>
When the log reader encounters a statement of the specified type (INSERT, UPDATE, or DELETE) in a transaction marked for replication, it will construct a stored procedure call based on this syntax and will pass column values to the referenced stored procedure.
</li>
</ul>

<h5><a name="_about_the_custom_stored_procedures"></a>About the Custom Stored Procedures</h5>
<p>
To implement stored procedure-based replication for a published table, you must create stored procedures that expect to receive and process the following parameters. These parameters must be passed in the order shown (that is, using the same column order as in the base table, as defined in <i>syscolumns</i>).
<dl>
<dt>
<b>INSERT stored procedures</b></dt>
<dd>
Stored procedures handling INSERT statements will be passed the inserted values for all columns: 
<pre>c1, c2, c3,... c<i>n</i></pre>
</dd>
<dt>
<b>UPDATE stored procedures</b></dt>
<dd>
Stored procedures handling UPDATE statements will be passed the updated values for all columns defined in the article, followed by the original values for the primary key columns: 
<pre>c1, c2, c3,... c<i>n</i>, pkc1, pkc2,... pkc<i>n</i></pre>


<p>
<b>Note</b>  No attempt will be made to determine which columns were changed. 

</dd>
<dt>
<b>DELETE stored procedures</b></dt>
<dd>
Stored procedures handling DELETE statements will be passed values for the primary key columns: 
<pre>pkc1, pkc2,... pkc<i>n</i></pre>
</dd>
</dl>
<p>
If you would like your INSERT, UPDATE, or DELETE stored procedure to return an error when a failure status is encountered, you must add a RAISERROR statement so that the distributor will catch the failure status coming back. If severity is greater than 12, it stops the distribution process to that subscriber. If this procedure definition is distributed as part of the article schema definition file, it will be sent using ODBC. In this case, only single quotes (') may be used to define the RAISERROR message string, because use of double quotes (") will generate an error. For information about using the RAISERROR statement, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>

<h5><a name="_creating_the_stored_procedure_on_all_subscribers"></a>Creating the Stored Procedure on All Subscribers</h5>
<p>
To implement stored procedure-based replication for a statement type (INSERT, UPDATE, or DELETE) for a published table, you must create the stored procedure in the destination database of each subscriber to that article.</p>
<p>
A simple way to propagate a stored procedure to all subscribers is to edit the schema script for an article and add the CREATE PROCEDURE statement. However, this is only effective if the schema script is edited before subscription servers are initially synchronized to the article. For information on editing schema scripts, see Chapter 14, <a href="admn14_4kha.htm">Setting Up Replication</a>. </p>
<p>
Another method is to manually create the stored procedure in the destination database on each server subscribing to the article. Although this is more laborious, it does have the advantage of allowing you to implement a unique solution for each subscriber. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
