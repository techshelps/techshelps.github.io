<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Example of Adding Remote Users</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_example_of_adding_remote_users"></a>Example of Adding Remote Users</h3>
<p>
Following is an example that shows how remote users are added and mapped on a remote server. The example is provided for overview and orientation. The procedures you need to use to add remote users are more fully explained in <a href="admn10_8i9f.htm">Setting Up Remote Users</a>. </p>
<p>
This example shows how to set up a remote server for users at a travel agency. RESERVATION is the local server for all users. The remote server is AIRLINES, and you need to give the users on RESERVATION the appropriate remote login IDs. Most of the users are travel agents, and they need access to the same stored procedures from AIRLINES. There are also two accountants, who need access to a different set of stored procedures. And then there is the manager, who needs access to all of the stored procedures. You decide to map all of the travel agents to <i>agents</i>, the accountants to <i>account</i>, and the manager to <i>manage</i>.</p>
<p>
Carry out these steps from the remote server AIRLINES:
<ol>
<li>
Add the new login IDs on the remote server (AIRLINES):<p>
Using SQL Enterprise Manager, from the Server Manager window select AIRLINES; from the Manage menu, choose Logins; and from the Manage Logins dialog box, add the following login IDs and passwords.
<pre>manage, password
account, password2
agents</pre>
</li>
<li>
Use the <b>sp_addremotelogin</b> system procedure to add the remote login IDs for the users (this step maps the login ID on the remote server to the login ID on the local server):<pre>sp_addremotelogin, reservation, manage, margie
&lt;execute&gt;
sp_addremotelogin, reservation, account, dan
&lt;execute&gt;
sp_addremotelogin, reservation, account, robin
&lt;execute&gt;
sp_addremotelogin, reservation, agents</pre>
<p>
The last <b>sp_addremotelogin</b> statement above maps all of the remaining unmapped users on RESERVATION to the remote login ID agents on AIRLINE. It also inserts a NULL value in the <i>sysremotelogins</i> table. You can have only one NULL value per server in the <i>sysremotelogins</i> table.
</li>
<li>
Set agents to trusted so that the servers do not need to verify passwords:<pre>sp_remoteoption reservation, agents, null, trusted, true</pre>
<p>
For more information about setting this option, see <a href="admn10_5jce.htm">Setting the Remote Login Option</a>, later in this chapter.
</li>
<li>
Grant appropriate permissions for the remote procedures for each user. <p>
For information about granting object permissions, see Chapter 9,<a href="admn09_8ozd.htm">Managing Security</a>. 
<p>
A remote procedure can also be run by a server application. For more information about server applications, see <i>Microsoft SQL Server Programming Open Data Services</i>.
</li>
</ol>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
