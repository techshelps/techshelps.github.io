<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tips and Troubleshooting</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tips_and_troubleshooting"></a>Tips and Troubleshooting</h1>
<p>
Under conditions of rapidly occurring alerts, the delay between the event appearing in the Windows NT application log and the response by SQL Executive may increase. (Normally, it is only a few seconds.) This can occur because the alerts engine has a top response speed governed by its architecture¾SQL Executive competes with SQL Server for process bandwidth, and is designed to be economical with threads. </p>
<p>
The rate at which SQL Executive can process alerts is also dependent upon the complexity of the alert response¾that is, the number of notifications. It is a good idea to send notifications to as few operators as possible. One technique is to send notifications to one group email address rather than notifying several individual operators.</p>
<p>
If the rate of alert occurrence exceeds the rate at which SQL Executive can process alerts, a backlog of alerts will develop. If backlogs develop, increase the value for the Delay Between Responses for Recurring Alerts option for each alert. For information about setting this value, see <a href="admn17_6rqs.htm">Creating an Alert</a>, earlier in this chapter.</p>
<p>
If an alert is not firing, first check the following:
<ul>
<li>
Is the SQL Executive service running?</li>
<li>
Does the event appear in the Windows NT application log?</li>
<li>
Is the alert enabled?</li>
<li>
Are the alert's "Last Occurred" and "Count" values changing?<p>
If the alert's "Last Occurred" and "Count" values are changing, then that alert is occurring but there may be a problem with the response firing. If you have defined email or pager notifications to occur, test the email and/or pager addresses of the assigned operators by using the Test button (next to the address boxes in the Edit Operators dialog box). If a pager notification is not being received, check that the operator's pager notification schedule is set for the necessary days and hours. 
</li>
</ul>

<h5><a name="_the_effect_of_windows_nt_event_logging"></a>The Effect of Windows NT Event Logging</h5>
<p>
If you turn off Windows NT event logging (by using the Server Options feature of SQL Setup or SQL Enterprise Manager as described in Chapter 3, <a href="admn03_20vn.htm">Configuring Servers</a>), then the alerts engine will not be able to pick up events from the Windows NT application log, and alerts will not be generated. Other SQL Executive functions will operate normally, and SQL Executive will continue to write any of its own errors to the Windows NT application log.</p>

<h5><a name="_the_effect_of_the_windows_nt_event_viewer_options"></a>The Effect of the Windows NT Event Viewer Options</h5>
<p>
The Log Settings options for the Windows NT Event Viewer application affect the ability of the alerts engine to detect SQL Server events and issue alerts.
<ul>
<li>
If the computer is running the Windows NT version 3.51 operating system, then in the Event Viewer application, in the Event Log Setting dialog box, you can select the Overwrite Events as Needed option. However, be aware that if the rate of event occurrences exceeds the rate at which SQL Executive processes events, and if this rate is sustained over a sufficient period of time, then some events in the application log will be overwritten before alerts can be generated. If this occurs, SQL Executive may write alert engine events 311 and 312 to the application log. However, as with any event being written to an event log which is being wrapped, these events themselves will eventually be overwritten.</li>
<li>
If the computer is running the Windows NT version 3.50 operating system, then in the Event Viewer application, in the Event Log Setting dialog box, the Overwrite Events as Needed option must not be selected. The recommended option is Do Not Overwrite Events (Clear Log Manually). <p>
When the Do Not Overwrite Events (Clear Log Manually) option is selected, be sure to increase the Maximum Log Size setting to at least 2048KB. 
<p>
<b>Important</b>  If you select the Do Not Overwrite Events (Clear Log Manually) option, you must periodically clear the application log manually. If you do not do this, then when the application log fills no more events can be added to the log, and the SQL Server alerts engine will be unable to generate alerts on subsequent (unlogged) events.
</li>
</ul>
<p>
For information about setting the Event Viewer options, see its online Help.</p>

<h5><a name="_using_low.2d.capacity_alpha.2d.numeric_paging_systems"></a>Using Low-capacity Alpha-Numeric Paging Systems</h5>
<p>
For low-capacity alphanumeric paging systems (for example, those limited to 64 characters per page), you can prevent the notification for a single alert from being split over multiple pages by selecting the option Include Body of Email in Notification Page. This option appears in the Pager-Email tab of the Alert Engine Options dialog box.</p>

<h5><a name="_filtering_alerts_invoked_using_xp_logevent"></a>Filtering Alerts Invoked Using xp_logevent</h5>
<p>
The <b>xp_logevent</b> extended stored procedure always has a database context of <i>master</i>, so you cannot filter on database name (other than <i>master</i>) for alerts that will be invoked using <b>xp_logevent</b>.</p>
<p>
For information about <b>xp_logevent</b>, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>

<h5><a name="_square_bracket_notation_for_email_addresses"></a>Square Bracket Notation for Email Addresses</h5>
<p>
When using internet and other specially addressed emails (including pager emails), it may be necessary to suppress the name checking features (that is, the check for existence of the email name in the local address book) performed by SQL Enterprise Manager or SQLMail (<b>xp_sendmail</b>). To do this, surround the email address with square brackets: [ ].</p>
<p>
This can be done on an address-by-address basis using the Pager Email-Name box in the New Operator or Edit Operator dialog boxes. For more information, see <a href="admn17_23aq.htm">Creating an Operator</a>, earlier in this chapter.</p>
<p>
This can be set globally for the server using the To and CC line templates in the Pager Email tab of the Alert Engine Option dialog box. For more information, see <a href="admn17_76nn.htm">Setting Alert Engine Options</a>, earlier in this chapter.</p>
<p>
The square bracket notation is a feature of Windows NT Mail, not SQLMail or SQL Enterprise Manager.</p>

<h5><a name="_mail_integration_features"></a>Mail Integration Features</h5>
<p>
When running SQL Enterprise Manager on the server computer, the mail integration features described in <a href="admn17_23aq.htm">Creating an Operator</a>, earlier in this chapter, are available only under these conditions:
<ul>
<li>
SQLMail must be started after the Microsoft Mail client is started. <p>
You cannot specify the Auto Start Mail Client option using the Server Options dialog boxes of the <b>setup</b> or SQL Server programs.
</li>
<li>
SQL Enterprise Manager must be started after the Microsoft Mail client is started.</li>
<li>
In the SQL Enterprise Manager Registry key, you must add this value:<p>
HKEY_LOCAL_MACHINE<br>
  \SOFTWARE<br>
    \Microsoft<br>
      \MSSQLServer<br>
        \SQLEW
<p>
Value: UseAddressBook<br>
Type: REG_DWORD<br>
Data: 0x1
<pre></pre>
</li>
</ul>

<h5><a name="_more_about_pager_notifications"></a>More About Pager Notifications</h5>
<p>
The alert notification features of SQL Server 6.0 use SQLMail, which is written using the MAPI 0 API set. To use pager notifications, you need to install some form of mail-server-side software that can process inbound mail and convert this mail into a pager message. This software can take one of several approaches to achieve this, including these three:
<ul>
<li>
Forward the mail to a remote mail server at the pager-providers site (for example, using one of the Microsoft Mail gateway applications). The pager-provider needs to offer this service, although the software required is generally available as part of (or as an add-on to) the local mail system.</li>
<li>
Route the mail via the internet to a mail server at the pager-provider's site. This is a variation of the first approach.</li>
<li>
Use proprietary pager-provider software to process the inbound mail and do the actual dialing via an attached modem. This software acts as a mail client, periodically processing its inbox either by interpreting part or all of the email address information as the pager number to dial, or by looking up the email name in a translation table to find the pager number to dial. This software is proprietary to the pager service provider.</li>
</ul>
<p>
For specific software requirements contact your pager service provider. </p>

<h5><a name="_reducing_log_writes"></a>Avoiding Excessive Writing to the Logs</h5>
<p>
In general, it is a good idea to avoid excessing writing to the logs. If you have set up a substantial number of alerts, you may want to disable writing to the SQL Server error log altogether, and only write to the Windows NT application log. You should avoid using alerts too liberally (for example, do not send an alert every time a row in a table is changed).  </p>
<p>
To prevent writing to the SQL Server error log, use SQL Setup or SQL Enterprise Manager.</p>
<p>&nbsp;</p></body>
</HTML>
