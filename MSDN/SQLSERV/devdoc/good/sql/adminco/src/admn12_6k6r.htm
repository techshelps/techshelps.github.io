<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Re-creating and Reloading Lost Databases</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_re.2d.creating_and_reloading_lost_databases"></a>Re-creating and Reloading Lost Databases</h3>
<p>
You restore a database by re-creating the database and then reloading the most recent database dump and the succeeding transaction log dumps. </p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To re-create and reload an affected database</h5>
<ol>
<li>
If the transaction log of the damaged or inaccessible user database is on an undamaged device, use DUMP TRANSACTION with the NO_TRUNCATE clause to dump it.</li>
<li>
Examine the device allocations and uses for the damaged database by reviewing the information you gathered in  <a href="admn12_39gz.htm">Finding Information About Lost Devices and Databases</a>, earlier in this chapter. <p>
You will have to assign the same blocks of space, for the same purposes. Examine the query output. Each row with 3 in the <i>segmap</i> column represents a data allocation; each row with 4 in the column represents a log allocation. The <i>size</i> column indicates the number of 2K blocks of data. Note the order, use, and size of this information. For example:
<pre>segmap       size
-----------  ----------
          3       10240
          3        5120
          4        5120
          3        1024
          4        2048</pre>
<p>
This translates into these sizes and uses, in megabytes:
<pre>Data -- 20
Data -- 10
Log  -- 10
Data -- 2
Log  -- 4</pre>
<p>
<b>Note</b>  A 7 in the <i>segmap</i> column indicates that the data and log are on the same device, and you can recover only up to the point of the most recent database backup. If the transaction log and database are on the same device, you can perform a DUMP DATABASE, not a DUMP TRANSACTION statement. (You should perform step 4 using the LOG ON option with CREATE DATABASE. Instead, be sure that you allocate sufficient space.)
</li>
<li>
Use the DROP DATABASE statement to drop the database from the failed device. If the system reports errors, use the DROPDB clause of the DBCC DBREPAIR statement, or use the <b>sp_dbremove</b> system procedure.</li>
<li>
Re-create the database, using the CREATE DATABASE statement to duplicate all the rows from the old <i>sysusages</i> table up to and including the first log device. For example:<pre>CREATE DATABASE mydb on datadev1 = 20, datadev2 = 10
    log on logdev1 = 10</pre>
</li>
<li>
If you need more space, use the ALTER DATABASE command to re-create the rest of the entries. For example, to allocate more space on DATADEV1:<pre>alter database on datadev1 = 2 </pre>
<p>
To allocate space on another device:
<pre>alter database on datadev3 = 2</pre>
<p>
When you allocate space on existing devices, the device is automatically assigned the same usage: data or log. When you allocate space on a device that's not already in use by the database, it's always allocated as a data device. For example, to re-create the final allocation on LOGDEV1, which is already in use by the database, type:
<pre>alter database mydb on logdev1 = 4</pre>
<p>
LOGDEV1 is automatically entered into <i>sysusages</i> as a log device.
<p>
To allocate log space on a device that is not already in use by the database, follow the ALTER DATABASE command with the <b>sp_logdevice</b> procedure, like this:
<pre>alter database mydb on logdev2 = 4
sp_logdevice mydb, logdev2</pre>
</li>
<li>
Reload the database using LOAD DATABASE, and then load previously dumped logs and the newly dumped current log using LOAD TRANSACTION.</li>
</ol>
<p>
For information about using ALTER DATABASE, CREATE DATABASE, DBCC DBREPAIR, DISK INIT, DROP DATABASE, LOAD DATABASE, LOAD TRANSACTION, <b>sp_dbremove</b>, and <b>sp_dropdevice</b>, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
