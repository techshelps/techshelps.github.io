<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Testing a Backup Strategy</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_testing_a_backup_strategy"></a>Testing a Backup Strategy</h2>
<p>
Once a backup strategy has been designed, it should be thoroughly tested. In testing the strategy, as many failures as possible should be simulated so you can be sure that there are no vulnerable areas that could jeopardize the recovery of data. For example, you could implement very redundant device and disk mirroring with multiple disks in a computer, so that should any one disk drive fail, you can continue operation uninterrupted. This is a good plan, but it does not eliminate the need to do backups. Asking the question "Will this be sufficient in the event of theft of the computer?" would show that this is a vulnerable area.</p>
<p>
Testing a backup strategy will also demonstrate how much time is required to restore the databases from backups. If that amount of time is unacceptable, you may want to reevaluate the frequency with which the databases and transaction logs are being dumped, or you may want to look at the feasibility of maintaining a "warm" backup server. (For more information, see <a href="admn_e_0t9u.htm">Managing a Backup Server</a>, later in this appendix.)</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
