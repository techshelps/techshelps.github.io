<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Replication Terminology</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_replication_terminology"></a>Replication Terminology</h1>
<p>
To help you understand the information presented in this chapter, here are some replication-related definitions. This is a brief list of definitions and is not intended to serve as a comprehensive SQL Server glossary. It is provided as a quick reference, to help you understand some of the replication elements that are discussed throughout this chapter. You may find it useful to refer to this list of replication definitions as you read through this chapter; Chapter 14, "Setting Up Replication"; and Chapter 15, "Advanced Replication."
<dl>
<dt>
<b>article</b></dt>
<dd>
The basic unit of replication. An article contains data originating from a table that has been marked for replication. One or more articles are grouped within a publication.</dd>
<dt>
<b>automatic synchronization</b></dt>
<dd>
Synchronization that is accomplished automatically by SQL Server. A snapshot is taken of the table data, and along with the table schemas that snapshot is written to files for transfer. The job to copy the table schema and data is transferred, as is any other replication job, via the distribution database. No operator intervention is required.</dd>
<dt>
<b>destination database</b></dt>
<dd>
The subscribing database. The database that receives tables and data replicated from a publication database.</dd>
<dt>
<b>destination server</b></dt>
<dd>
See <i>subscription server</i>.</dd>
<dt>
<b>destination table</b></dt>
<dd>
The subscribing table, created as a replicated image of a published table. A destination table in a destination database is synchronized with and contains data derived from the published table in a publication database.</dd>
<dt>
<b>distribute</b></dt>
<dd>
To move transactions from the distribution database tables to subscription servers, where they are applied to the destination tables in the destination databases.</dd>
<dt>
<b>distribution database</b></dt>
<dd>
A store-and-forward database that holds all transactions that are waiting to be distributed to subscription servers. The distribution database receives transactions sent to it from the publication server by the log reader process and holds them until the distribution process moves them to the subscription servers.</dd>
<dt>
<b>distribution process</b></dt>
<dd>
Moves transactions from the distribution database tables to subscription servers, where they are applied to the destination tables in the destination databases. The distribution process is a subsystem of the scheduling engine in SQL Executive.</dd>
<dt>
<b>distribution server</b></dt>
<dd>
The server containing the distribution database. The distribution server receives all changes to published data, stores the changes in its distribution database, and, when appropriate (depending on scheduling and other variables), transmits them to subscription servers. The distribution server can be the same computer that is acting as the publication server, or a different computer. Also referred to as a <i>distributor</i>. See also <i>local distribution server</i>, <i>remote distribution server</i>.</dd>
<dt>
<b>distributor</b></dt>
<dd>
See <i>distribution server</i>.</dd>
<dt>
<b>filtering</b></dt>
<dd>
The method by which only selected rows or only selected columns of a table are designated for replication; the method by which partitioning is accomplished. See also <i>partitioning</i>.</dd>
<dt>
<b>horizontal filtering</b></dt>
<dd>
See <i>horizontal partitioning</i>.</dd>
<dt>
<b>horizontal partitioning</b></dt>
<dd>
Creating an article that replicates only selected rows from the base table. Subscription servers receive only that horizontally partitioned subset of data.</dd>
<dt>
<b>initial synchronization</b></dt>
<dd>
See <i>synchronization</i>.</dd>
<dt>
<b>latency</b></dt>
<dd>
The amount of time that elapses between a transaction being logged on the publication server and being successfully delivered to the destination database on the subscription server. 
<p>
Latency consists of two components: duration in the transaction log, and duration in the distribution database.
</dd>
<dt>
<b>local distribution server</b></dt>
<dd>
When a publication server also acts as its own distribution server, it is sometimes called a <i>local distribution server</i>. In this case, the publication database and the distribution database reside on the same computer. Compare with <i>remote distribution server</i>.</dd>
<dt>
<b>log reader process</b></dt>
<dd>
Moves transactions from the publication server transaction log into the distribution database. The log reader process is a subsystem of the scheduling engine in SQL Executive.</dd>
<dt>
<b>loose consistency</b></dt>
<dd>
A replication model that allows a time lag between the moment original data is altered and the replicated copies of that data are updated¾it does not guarantee that all copies will be constantly identical to the original. An advantage of loose consistency is that it supports LANs, WANs, fast and slow communication links, and intermittently connected databases. It also allows better database availability and scales much better in its implementation as compared to <i>tight consistency</i>. SQL Server 6.0 replication is based on a loose consistency model.</dd>
<dt>
<b>manual synchronization</b></dt>
<dd>
Synchronization that is accomplished by a user. As with automatic synchronization, the publication server produces files containing the schema and a snapshot of the data from the published table, but with manual synchronization, it is applied to the subscriber manually, using tape or an other medium. After a manual synchronization is accomplished, the user must inform SQL Server that the synchronization is complete. The user can obtain the table schema script (an .SCH file) and the table data file (a .TMP file) for each synchronization job from the working directory of the distribution database, which is set by default to \SQL60\REPLDATA.</dd>
<dt>
<b>no synchronization</b></dt>
<dd>
A replication option sometimes used when a destination database subscribes to a publication. Synchronization is not accomplished by SQL Server. It is the responsibility of the user setting up replication to ensure that the table schema and data are identical for the published article and the destination table. This option allows changes to replicated data to be immediately distributed to subscribers, without delay for synchronization. See also <i>automatic synchronization, manual synchronization</i>.</dd>
<dt>
<b>partitioning</b></dt>
<dd>
Creating an article that replicates only selected information from the base table. Subscription servers receive only that subset of data from the source table. Note that the replicated columns must include the primary key column(s). Sometimes referred to as <i>filtering</i>. See also <i>horizontal partitioning</i>, <i>vertical partitioning</i>.</dd>
<dt>
<b>publication</b></dt>
<dd>
The term for a group of tables that have been made available for replication as a unit. A publication can contain one or more published tables¾<i>articles</i>¾from one user database. Each user database can have one or more publications.</dd>
<dt>
<b>publication database</b></dt>
<dd>
A database that is the source of replicated data. A database containing tables that have been made available for replication.</dd>
<dt>
<b>publication server</b></dt>
<dd>
A server that has made data available for replication. A publication server maintains publication databases, makes published data from those databases available for replication, and sends copies of all changes to the published data to the distribution server. Also referred to as a <i>publisher</i>. </dd>
<dt>
<b>publish</b></dt>
<dd>
Make data available for replication.</dd>
<dt>
<b>publisher</b></dt>
<dd>
See <i>publication server</i>.</dd>
<dt>
<b>pull subscription</b></dt>
<dd>
A subscription performed while administrative focus is set on the subscription server. A subscription is created by "pulling" in a publication or an article from a publication server.
<p>
One advantage of a pull subscription is that it provides a degree of replication autonomy for a subscription server. The SA or DBO of the subscription server decides which publications will be received. In this way, the subscriber avoids receiving unwanted data from a publication server. Another advantage is that for each subscription server, subscriptions from many publication servers can be set up during one administrative session.

<p>
With a pull subscription, the act of publishing is separate from the act of subscribing, and the user administering the subscription server need not be the same person who administers the publication server. See also <i>push subscription</i>.
</dd>
<dt>
<b>push subscription</b></dt>
<dd>
A subscription performed while administrative focus is set on the publication server. As part of the process of creating or managing a publication, subscriptions are created by "pushing" out an article to one or more subscription servers.
<p>
One advantage of a push subscription is that it simplifies and centralizes subscription administration. The act of publishing is combined with the act of subscribing, and one person can perform both in the same administrative session. The need to separately administer each subscriber is eliminated. Another advantage is that for each article, many subscribers can be set up at once. 
</dd>
<dt>
<b>remote distribution server</b></dt>
<dd>
When a publication server does not act as its own distribution server but instead is configured to send transactions that are marked for replication to a distribution database on another computer, then that other computer is called a <i>remote distribution server</i>. In this case, the publication database and the distribution database reside on separate computers. Compare with <i>local distribution server</i>.</dd>
<dt>
<b>replication</b></dt>
<dd>
Duplication of table schema and data from a source database to a destination database, usually (but not necessarily) on separate servers.</dd>
<dt>
<b>restricted publication</b></dt>
<dd>
A security status. A publication marked restricted is displayed to and can be subscribed to only those servers that have been granted access. See also <i>unrestricted publication</i>.</dd>
<dt>
<b>retention</b></dt>
<dd>
The period of time that a transaction is maintained in the distribution database after it has been successfully delivered to the destination database on the subscription server.</dd>
<dt>
<b>schema script</b></dt>
<dd>
See <i>table schema script</i>.</dd>
<dt>
<b>source database</b></dt>
<dd>
See <i>publication database</i>.</dd>
<dt>
<b>subscribe</b></dt>
<dd>
Agreeing to receive a publication or an article. A destination database on a subscription server subscribes to replicated data from a publication database on a publication server.</dd>
<dt>
<b>subscriber</b></dt>
<dd>
See <i>subscription server</i>.</dd>
<dt>
<b>subscription database</b></dt>
<dd>
See <i>destination database</i>.</dd>
<dt>
<b>subscription server</b></dt>
<dd>
A subscription server maintains destination databases, which receive and maintain copies of published data. Also referred to as a <i>subscriber</i>.</dd>
<dt>
<b>synchronization</b></dt>
<dd>
Before a subscription server can receive replicated transactions from an article or a publication, the publication and destination tables must contain the same schema and data. The process that accomplishes this normally occurs once and is called synchronization. Synchronization ensures that the table schema and the table data in the publication and destination databases are made identical.
<p>
SQL Server 6.0 replication ensures that updates are applied to a subscriber only after the subscriber is synchronized (has a current snapshot of the table schema and data). Synchronization affects new subscribers only.
</dd>
<dt>
<b>synchronization process</b></dt>
<dd>
Creates synchronization files containing data from published tables and applies these files, along with table schema files, to destination database tables. The synchronization process is a subsystem of the scheduling engine in SQL Executive.</dd>
<dt>
<b>synchronize</b></dt>
<dd>
See <i>synchronization.</i></dd>
<dt>
<b>table creation script</b></dt>
<dd>
See <i>table schema script</i>. </dd>
<dt>
<b>table data file</b></dt>
<dd>
A file containing a snapshot of the data of a published table, and used during synchronization as the source of data inserted into the destination table. The data snapshot is written to a file ending in the .TMP filename extension. The file is stored in the working directory of the distribution database, which is set by default to \SQL60\REPLDATA. See also <i>table schema script</i>.</dd>
<dt>
<b>table schema script</b></dt>
<dd>
A script containing the schema of a published table, and used during synchronization to create the destination table. The schema script is written to a file ending in the .SCH filename extension. The file is stored in the working directory of the distribution database, which is set by default to \SQL60\REPLDATA. See also <i>table data file</i>.</dd>
<dt>
<b>tight consistency</b></dt>
<dd>
A replication model that guarantees that all copies will be constantly identical to the original. It is usually implemented using two-phase commit, and it requires a high-speed LAN. It also reduces database availability and is less scalable in its implementation as compared to <i>loose consistency</i>.</dd>
<dt>
<b>unrestricted publication</b></dt>
<dd>
A security status. A publication marked unrestricted (the default) is displayed to and can be subscribed to by any registered subscription server. See also <i>restricted publication</i>.</dd>
<dt>
<b>vertical filtering</b></dt>
<dd>
See <i>vertical partitioning</i>.</dd>
<dt>
<b>vertical partitioning</b></dt>
<dd>
Creating an article that replicates only selected columns from the base table. Subscription servers receive only that vertically partitioned subset of data. Note that the replicated columns must include the primary key column(s).

</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
