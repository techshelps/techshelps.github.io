<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Moving a Database</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_moving_a_database"></a>Moving a Database</h3>
<p>
You can use SQL Enterprise Manager or the LOAD DATABASE statement to move a database to another device, or to another server as long as the same character set and sort order are used on both servers. (If the character sets and sort orders differ, use SQL Transfer Manager instead.)</p>
<p>
The recipient database must be as large as, or larger than, the database to be loaded. If the recipient database is too small, SQL Server displays an error message that gives the required size. </p>
<p>
If a database will be loaded into a newly created database, use the FOR LOAD option when creating the new database. This specifies that the data pages will not be zero-initialized because the only operations allowed against that database are ALTER DATABASE FOR LOAD or LOAD DATABASE. Users cannot access the database until after a successful load. Any unused data pages will be initialized by the database load. </p>
<p>
<b>Note</b>  When you create a database with the FOR LOAD option, after completing the load(s) you must clear the database option <b>DBO Use Only</b> by using SQL Enterprise Manager or <b>sp_dboption</b>. Until you do this, users other than the DBO may not access the database.</p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To move a database to another database device</h5>
<ol>
<li>
Create the new device using SQL Enterprise Manager or the DISK INIT statement. <p>
Or, use SQL Enterprise Manager to make sure the database device exists, or <b>sp_helpdevice</b> to make sure the database device is listed in <i>sysdevices</i>.
</li>
<li>
Use SQL Enterprise Manager or the CREATE DATABASE statement to create the new database on the new database device. <ul>
<li>
The new database name must be unique.</li>
<li>
Use the FOR LOAD option.</li>
<li>
Do not place the transaction log on a separate device.</li>
<li>
The new database must be equal in size or larger than the database that will be loaded.</li>
</ul>
</li>
<li>
Dump the old database using SQL Enterprise Manager or the DUMP DATABASE statement.</li>
<li>
Load the dump into the new database using SQL Enterprise Manager or the LOAD DATABASE statement.</li>
<li>
Clear the DBO Use Only option for the new database using SQL Enterprise Manager or <b>sp_dboption</b>.</li>
<li>
If appropriate, move the transaction log to a separate device. Use SQL Enterprise Manager or the ALTER DATABASE statement, and then the <b>sp_logdevice</b> system procedure.<p>
For information about moving the transaction log, see Chapter 6, <a href="admn06_4nn7.htm">Managing Databases</a>. 
</li>
<li>
Drop the old database using SQL Enterprise Manager, the DROP DATABASE statement, or <b>sp_dbremove</b>.</li>
</ol>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To move a database to another server</h5>
<ol>
<li>
Follow the same procedure as for moving a database to another database device.</li>
<li>
If the <i>syslogins</i> table on the new server is different from the <i>syslogins</i> table on the old server, the ownership of databases and database objects will be incorrect. Use aliases to map owners to their objects on the new SQL Server.</li>
</ol>
<p>
If the dumped database uses segments to store particular tables or indexes, the new database must include devices of the same size and page order for these segments and their related data in order for the LOAD statement to work correctly. Execute the <b>sp_helpdb</b> system stored procedure with the database name to see the size and fragments. Select from the <i>sysusages</i> system table to determine the order of the device fragments. Then re-execute the CREATE DATABASE statement and the ALTER DATABASE statement to re-establish the fragments. </p>
<p>
The device fragments that the new database uses for data and for the log must appear in the same order and have the same amount of space as the fragments in the original database. For example, if the original database had 10 MB of data (on any number of fragments), followed by 3 MB of log, followed by 6 MB more of space for data, the new database must have the same order by space and usage: 10 MB for data, 3 for log, and 6 (or more) for data. In this case, the total size of the destination database must be at least as large and have at least as many fragments (assigned in the same order and have the same uses) as the load. </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
