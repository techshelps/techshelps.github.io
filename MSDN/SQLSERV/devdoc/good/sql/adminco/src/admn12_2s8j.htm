<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Transaction Log Loads</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_about_transaction_log_loads"></a>About Transaction Log Loads</h3>
<p>
Once you've restored a database, you can load the transaction log dump(s) that were accomplished after that database dump. Loading transaction logs allows you to recover as much of a database as possible in case of system failure. </p>
<p>
Backups of the transaction log must be loaded in the sequence in which they were made. SQL Server checks the timestamps on each dumped database and each dumped transaction log to see that the sequence is correct.</p>
<p>
Loading a transaction log is also referred to as <i>applying</i> a transaction log. Loading a transaction log results in re-execution of the changes it contains and in rolling back any transactions that were uncommitted when the transaction log was backed up. </p>
<p>
When the entire sequence of transaction log dumps has been loaded, the database is restored to its state at the time of the last transaction log dump, minus active transactions. (The exception to this is the DUMP TRANSACTION statement itself, which was active at that point. It is not rolled back; it is completed by the next LOAD TRANSACTION statement.)</p>
<p>
To learn how to load transaction logs, see <a href="admn12_3b8n.htm">Restoring a Database or Applying a Transaction Log</a>, earlier in this chapter.</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
