<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mixed Security</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mixed_security"></a>Mixed Security</h2>
<p>
Mixed security allows SQL Server login requests to be validated using either integrated or standard security methods. Both trusted connections (as used by integrated security) and nontrusted connections (as used by standard security) are supported.</p>
<p>
When a server's login security mode is set to mixed and a user attempts to log in to the server over a trusted (multi-protocol or named pipes) connection, SQL Server examines the login name. 
<ul>
<li>
If this login name matches the user's network username, or if the login name is blank or spaces, SQL Server uses the Windows NT integrated login rules (as for integrated security). </li>
<li>
If the requested login name is any other value, the user must supply the correct SQL Server password, and SQL Server uses its own login validation process (as for standard security).</li>
</ul>
<p>
If the login attempt is not over a trusted connection, the user must supply the correct login ID and password to establish the connection, and SQL Server uses its own login validation process (as for standard security).</p>
<p>
For instructions on setting up mixed security (beginning with an overview of each task required to do so), see Chapter 9, <a href="admn09_8ozd.htm">Managing Security</a>. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
