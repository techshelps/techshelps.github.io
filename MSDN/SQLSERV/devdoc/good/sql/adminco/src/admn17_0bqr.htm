<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Generating Alerts from Performance Monitor Thresholds</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_generating_alerts_from_performance_monitor_thresholds"></a>Generating Alerts from Performance Monitor Thresholds</h1>
<p>
Using the event logging utility, SQLALRTR.EXE, you can generate a SQL Server alert when a selected SQL Performance Monitor threshold is exceeded. To do this, you:
<ol>
<li>
Set a SQL Performance Monitor alert on a SQL Server counter.</li>
<li>
Configure SQL Performance Monitor to run SQLALRTR.EXE when the alert threshold is exceeded, thus writing a SQL Server event to the Windows NT application log.</li>
<li>
Use SQL Enterprise Manager to define an alert on that event.</li>
</ol>
<p>
When the specified SQL Performance Monitor threshold is exceeded, a Performance Monitor alert is generated, and SQLALRTR.EXE runs. It starts <b>isql</b>, which logs on to the server and issues a RAISERROR WITH LOG command. This causes an event to be written to the Windows NT application log. SQL Executive reads that event, and the alerts engine fires a SQL Server alert.</p>
<p>
Note that the SQLALRTR.EXE utility is necessary because <b>isql</b> cannot be used directly with Performance Monitor. Performance Monitor passes the Windows NT alert information as Windows NT command line parameters, and <b>isql</b> will not work correctly in that context.</p>
<p>
To generate an alert from a Performance Monitor threshold, you actually define two separate alerts: a SQL Performance Monitor alert and a SQL Server alert.</p>
<h5><img src="../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To generate an alert from a Performance Monitor threshold</h5>
<ol>
<li>
From the Microsoft SQL Server 6.0 program group, choose the SQL Performance Monitor icon.<p>
<img src="images/ad19_01.gif" border=0>
<p>
SQL Performance Monitor starts.
</li>
<li>
From the View menu, choose Alert, and then from the Edit menu, choose Add to Alert.<p>
The Add to Alert dialog box appears.
<p>
<img src="images/ad17_01x.gif" border=0>
</li>
<li>
From the Object box, select a SQL Server object, and then from the Counter box, select a counter.<p>
For a brief description of the selected counter, choose the Explain button. For more information about each SQL Server object and counter, see Chapter 19, <a href="admn19_3vs5.htm">Monitoring Server Activity and Performance</a>. 
</li>
<li>
In the Alert If box, select either the Over or Under option, and then type a threshold (a number) in the Alert If box.<p>
A Performance Monitor alert will occur when the statistic returned for that counter exceeds (if you selected Over) or falls below (if you selected Under) the threshold. 
</li>
<li>
Enter a SQLALRTR.EXE command in the Run Program on Alert box. Type:<p>
<b>sqlalrtr</b> <b>-E</b> <i>error_number</i> [<b>-S</b> <i>server</i>_<i>name</i>] [<b>-P</b> <i>password</i>] <br>
   [<b>-D</b> <i>database_name</i>] [<b>-V</b> <i>severity</i>] [<b>-T</b> ]
<p>
where
<dl>
<dt>
<b>-E</b> <i>error_number</i></dt>
<dd>
Specifies an error number that will be associated with this event, and <i>error_number</i> is the number. For information on SQL Server error numbers, see Part 8, <a href="adpt_08_8fco.htm">Troubleshooting</a>. </dd>
<dt>
<b>-S</b> <i>server</i>_<i>name</i></dt>
<dd>
Specifies the server on which the alert will be raised, with <i>server</i>_<i>name</i> the server name.</dd>
<dt>
<b>-P</b> <i>password</i></dt>
<dd>
Specifies that the command runs in the context of the SA account, and <i>password</i> is the SA password on the server.
<p>
To avoid the need to supply the SA password on the command line (a possible security exposure), configure the server to run integrated security; or use the <b>-T</b> option instead.

<p>
If you specify neither <b>-P</b> nor <b>-T</b>, then <b>-T</b> is assumed.
</dd>
<dt>
<b>-D</b> <i>database_name</i></dt>
<dd>
Specifies that the alert will be defined only for that database, with <i>database_name</i> the database name.</dd>
<dt>
<b>-V</b> <i>severity</i></dt>
<dd>
Specifies the severity level of the error, with <i>severity</i> a number between 1 and 25. For information on SQL Server error severity levels, see Part 8, <a href="adpt_08_8fco.htm">Troubleshooting</a>. </dd>
<dt>
<b>-T</b> </dt>
<dd>
Specifies a trusted connection. To use this, the Windows NT user account used by Performance Monitor must be granted (or be a member of a group that has been granted) SA privileges on the target server. Grant SA privileges using SQL Security Manager. 
</dd>
</dl>
<p>
For example, to raise error "123456" on the local server:
<pre>D:\SQL60\BINN\SQLALRTR /E123456
</pre>
<p>
<b>Note</b>  The SQLALRTR.EXE parameters (<b>-E</b>, <b>-S</b>, <b>-P</b>, <b>-D</b>, <b>-V</b>,<b> </b>and <b>-T</b>) are case-sensitive and must be entered as capital letters.
</li>
<li>
In the Run Program on Alert box, choose either the First Time option or the Every Time option.<p>
The default is Every Time.
</li>
<li>
In the Add to Alert dialog box, choose Add.<p>
The Performance Monitor alert is added. 
</li>
<li>
Optionally, repeat steps 3 through 7 to add additional Performance Monitor alerts.</li>
<li>
Choose Done.<p>
The Alerts window of SQL Performance Monitor appears. The Alert Legend displays a list of the defined Performance Monitor alerts. The Alert Log displays a list of alert occurrences.
</li>
<li>
Now that the SQL Performance Monitor alert has been defined, use SQL Enterprise Manager to create an associated SQL Server alert. <p>
Generate the SQL Server alert on the <i>error_number</i> or <i>severity</i> that was provided with the SQLALRTR.EXE command in step 5. For instructions on creating a SQL Server alert, see "Creating an Alert," earlier in this chapter.
</li>
</ol>
<p>
Once you have defined an alert, SQL Performance Monitor and the SQL Executive service must both be running for the alert to be generated.</p>
<p>
For more information about errors and severity levels, see Part 8, <a href="adpt_08_8fco.htm">Troubleshooting</a>. For more information about SQL Server performance objects and counters, see Chapter 19, <a href="admn19_3vs5.htm">Monitoring Server Activity and Performance</a>. For more information about using SQL Performance Monitor, see its online Help. For more information about SQLALRTR.EXE, see the <i>Microsoft SQL Server Transact-SQL Reference</i>. </p>
<p>
<b>Note</b>  You cannot pass parameters to a SQL Server error that is raised using the SQLALRTR.EXE utility. For example, if you run the command <b>sqlalrtr /E123456</b>, then the message for error 123456 should not take parameters. For more information on defining and using error messages which take parameters, see the discussion of RAISERROR in the <i>Microsoft SQL Server Transact-SQL Reference</i>. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
