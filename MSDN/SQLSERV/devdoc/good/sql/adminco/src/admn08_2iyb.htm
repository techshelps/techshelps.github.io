<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Permission Conflicts</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_permission_conflicts"></a>Permission Conflicts</h3>
<p>
Permissions can be administered for both groups and users. The permissions granted to a group are provided to the users who are members of that group. However, permissions are sensitive to the order in which they are granted or revoked. The examples that follow demonstrate how.</p>
<p>
There are two basic ways to set up permissions in a database or on a database object. The most straightforward is to assign specific permissions to specific users. However, if most users are going to be granted most privileges, it's easier to assign all permissions to all users and then revoke specific permission from specific users. For example, the database owner of <i>titles</i> could:
<ol>
<li>
Grant permissions on the <i>titles</i> table to all users by granting all object permissions to the <i>public</i> group.</li>
<li>
Revoke update permissions from <i>public</i> for the <i>royalty</i> and <i>advance</i> columns on <i>titles</i>.</li>
<li>
Revoke delete permissions on <i>titles</i> from the user <i>mary</i>, the group <i>sales</i>, and the user <i>john</i>.</li>
</ol>
<p>
In this example, most users have all permissions on <i>titles</i> except for update permissions on the <i>royalty</i> and <i>advance</i> columns. Users in the <i>sales</i> group, plus <i>mary</i> and <i>john</i>, are also denied delete permissions for the table.</p>
<p>
As another example, if the user <i>joe</i> is in the <i>opers</i> group, the <i>opers</i> group is granted SELECT permission on the <i>titles</i> table, and <i>joe</i>'s permission to select the <i>advance</i> column is revoked, then <i>joe</i> can select all the columns except <i>advance</i>, while the other users in his group can still select all the columns.</p>
<p>
Granting or revoking permissions for a group will change any conflicting permissions that have been assigned to any member of a group. As an example, say the owner of the <i>titles</i> table has granted different permissions to various members of the <i>sales</i> group and then decides to standardize. This database owner could:
<ol>
<li>
Revoke all permissions on <i>titles</i> from the <i>sales</i> group.</li>
<li>
Grant select permission on the <i>title</i>, <i>title_id</i>, <i>type</i>, and <i>pub_id</i> columns of <i>titles </i>to the <i>sales</i> group.</li>
</ol>
<p>
In this example, all users in <i>sales</i> now have the same permissions for <i>titles</i>.</p>
<p>
Granting or revoking permissions to the <i>public</i> group changes, for all users, any previously issued permissions that conflict with the new statement.</p>
<p>
Permissions granted and revoked in different orders can create entirely different situations. For example, the following steps leave the user <i>joe</i> without any SELECT permission on <i>titles</i> (assuming Joe belongs to the <i>public</i> group):
<ol>
<li>
Grant select permission on the <i>title_id</i> and <i>title</i> columns of the <i>titles</i> table to <i>joe</i>.</li>
<li>
Revoke select permission on the <i>titles</i> table from the <i>public</i> group.</li>
</ol>
<p>
In contrast, suppose the same permissions are issued in the opposite order:
<ol>
<li>
Revoke select permission on the <i>titles</i> table from the <i>public</i> group.</li>
<li>
Grant select permission on the <i>title_id</i> and <i>title</i> columns of the <i>titles</i> table to <i>joe</i>.</li>
</ol>
<p>
In the second example, only <i>joe</i> has select permission for <i>titles</i>, and only on the <i>title_id</i> and <i>title</i> columns.</p>
<p>
When you administer permissions for the <i>public</i> group, you are including yourself (if you are a member of the <i>public</i> group).</p>
<p>
To grant or revoke permissions, use SQL Enterprise Manager or the GRANT and REVOKE statements. For information about managing permissions with SQL Enterprise Manager, see Chapter 9, <a href="admn09_8ozd.htm">Managing Security</a>. For information about using the GRANT and REVOKE statements, see the <i>Microsoft SQL Server Transact-SQL Reference.</i></p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
