<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using DBCC MEMUSAGE</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_using_dbcc_memusage"></a>Using DBCC MEMUSAGE</h2>
<p>
The DBCC MEMUSAGE statement displays information about how SQL Server uses memory, and it provides a snapshot of both the data cache and the procedure cache. It is the only means of accurately determining the size of the SQL Server executable code.</p>
<p>
The output from DBCC MEMUSAGE provides three types of information:
<ul>
<li>
How the server's memory was allocated at startup.</li>
<li>
How much memory is used by the 20 largest objects in the buffer cache (including "pinned" tables).</li>
<li>
How much memory is used by the 12 largest objects in the procedure cache-stored procedures, triggers, views, rules, and defaults. If multiple copies of an object are in the procedure cache, DBCC MEMUSAGE sums the total memory used by them. Of the multiple copies, some are precompiled versions of the object (trees), and some are compiled versions (plans). DBCC MEMUSAGE shows the sizes of both the trees and plans, and it shows the total trees and plans used to evaluate the largest objects.</li>
</ul>
<p>
For more information, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
