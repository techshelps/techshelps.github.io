<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Procedure Cache vs. Data Cache</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_procedure_cache_vs.._data_cache"></a>Procedure Cache vs. Data Cache</h2>
<p>
When you change the <b>memory</b> configuration option, the amount of memory dedicated to the data and procedure caches changes as well. Similarly, when you change the value of the <b>procedure cache</b> option, memory is shifted between the two caches, so each cache has a different size than in the previous configuration.</p>
<p>
There is not a one-step method to increase or decrease only the data cache or the procedure cache. This makes it harder to determine how much data cache and procedure cache is best for a particular SQL Server.</p>
<p>
To more accurately measure the effects of your changes, it is best to change one cache size at a time. To change only one cache size at a time, use the <b>memory</b> and <b>procedure cache</b> options together, as described in the following example.</p>
<p>
Consider a SQL Server configured with 4096 pages (8 MB) of memory, 50 user connections, a 28K stack size, and a total cache of 1084 pages (of which 876 pages is data cache and 208 pages is procedure cache). Now, assume that the main stored procedures need 440 pages of procedure cache to store one copy of each in the cache at one time.</p>
<p>
To accommodate the main procedures without significantly changing the size of the data cache, you must increase both the <b>memory</b> and the <b>procedure cache</b> options. The new <b>memory</b> option setting is simply the old setting plus the number of additional pages needed:</p>
<p>
<i>Memory</i> = 4096  440 - 208 = 4328 Pages</p>
<p>
Because adding memory does not increase the amount of overhead, the total cache space increases to 1316 pages (1084  440 - 208). The new <b>procedure cache</b> option setting is as follows:</p>
<p>
<i>Procedure Cache</i> = (<i>Total Cache Space</i>) * (<i>Procedure Cache %</i>)</p>
<p>
Because the procedure cache percentage is equal to the desired procedure cache divided by the total cache space, the procedure cache percentage in this example is 30 percent (400 / 1316). These same calculations can be used to increase the data cache and leave the procedure cache constant.</p>
<p>
When evaluating performance associated with different cache sizes under Windows NT, you can use the Windows NT Performance Monitor. Of particular interest are the Cache Hit Ratio and Physical I/O statistics. Optimally, you want to maximize Cache Hit Ratio and minimize Physical I/O.</p>
<p>&nbsp;</p></body>
</HTML>
