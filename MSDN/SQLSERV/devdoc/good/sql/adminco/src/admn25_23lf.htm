<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error 603</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_error_603"></a>Error 603</h1>
<h4>Severity Level 19</h4>
<h4>Message Text</h4>
<pre>There are not enough system session descriptors available to run this query. The maximum number available to a process is %d. Split query and rerun.
</pre>
<h4>Explanation</h4>
<p>
This error occurs when the number of table descriptors available to a single query is limited. Complex queries can occasionally exceed this limit, especially if they are inside of a transaction.</p>
<h4>Action</h4>
<p>
Split the query or stored procedure up into smaller parts, or increase the number of open objects with the <b>sp_configure</b> system stored procedure.</p>
<p>
Occasionally, this error can be a sign that the overall system is running out of table descriptors. This limit is set by the <b>open objects</b> parameter to <b>sp_configure</b> and should be increased as appropriate.</p>
<p>
At server startup, SQL Server builds a pool of descriptor data structures in memory that will be used to describe database objects as they are referenced. The number of descriptors built is equal to <b>sp_configure 'open objects'</b>. Each time a database object is referenced for the first time, SQL Server takes one of the descriptors from this free pool and allocates it to the specific object.</p>
<p>
If multiple tasks reference the same object at the same time, it is still considered on open object. For example, if two tasks issue the following command at the same time only one descriptor is allocated to <i>table_a</i>, and this is considered one open object:</p>
<pre>UPDATE table_a set cola = @variable
</pre>
<p>
If, however, <i>table_a </i>had an update trigger, a second descriptor would be allocated to the trigger, which would count as a second open object.</p>
<p>
Each allocated descriptor has a use counter that indicates how many concurrent queries are referencing the object it defines. The use count is increased by 1 at the start of a query, and decreased by 1 at the end of the query. In the example above, the <i>table_a </i>descriptor would have a use count of 2 until the two queries finished; it would then be decreased to 0.</p>
<p>
Once the free pool of descriptors has been used up, SQL Server starts reusing inactive descriptors when it needs to allocate a new descriptor. An inactive descriptor is one with a use count of 0. The first time SQL Server has to reuse a descriptor, it will issue the following message in the error log:</p>
<pre>Warning: OPEN OBJECTS parameter may be too low; attempt was made to free up descriptors in localsdes().
Run sp_configure to increase parameter value.
</pre>
<p>
SQL Server repeats this message after each 1000 times it reuses a descriptor. If you notice these messages being issued frequently in the error log, increase the <b>sp_configure</b> system stored procedure's <b>open objects</b> parameter.</p>
<p>
If this error is associated with other errors or is not resolved by increasing the number of "open objects, " contact your primary support provider. Be sure to have the SQL Server error log and the output from <b>sp_configure </b>available for review.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
