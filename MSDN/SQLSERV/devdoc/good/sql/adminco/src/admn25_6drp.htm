<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error 1105</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_error_1105"></a>Error 1105</h1>
<h4>Severity Level 17</h4>
<h4>Message Text </h4>
<pre>Can't allocate space for object '%.*s' in database '%.*s' because the '%.*s' segment is full. If you ran out of space in Syslogs, dump the transaction log. Otherwise, use ALTER DATABASE or sp_extendsegment to increase the size of the segment.
</pre>
<h4>Explanation</h4>
<p>
This error occurs when SQL Server is unable to allocate space for a database. The object ID of the object identified in the message text indicates what type of space could not be allocated:
<ul>
<li>
If the object ID is not 8, data space could not be allocated.</li>
<li>
If the object ID is 8, log space could not be allocated.</li>
</ul>
<p>
These errors are written to the error log only when they occur during the checkpoint process. When a user process encounters this error, the message is returned to the client application without being written to the error log. </p>
<h4>Action </h4>
<p>
Use one of the following procedures to correct the error, depending on whether the error occurred during run time or recovery.</p>
<h5>Run-time 1105 errors</h5>
<p>
The specific action you take on a run-time 1105 error depends on the object ID.</p>
<p>
<b>Object ID ¹ 8</b>  In this case, the message indicates that the data segment is full on the database indicated in the message. To obtain more data space, do one or more of the following:
<ul>
<li>
Use alter database to increase the size of the data segment. </li>
<li>
Drop objects from the database.</li>
<li>
Delete rows from tables in the database.</li>
</ul>
<p>
<b>Object ID = 8</b>  In this case, the message indicates that the log segment is full on the database indicated in the message. To clear space in the log, follow these steps:
<ol>
<li>
Determine how many rows are in the <i>syslogs</i> table, as follows:<pre>use database_name
go
select count(*) from syslogs
go</pre>
</li>
<li>
Dump the inactive portion of the transaction log using the dump transaction statement. If this statement fails with the 1105 error, retry the statement using the with no_log option. </li>
<li>
Repeat step 1. If the number of rows in <i>syslogs</i> has decreased significantly, proceed to step 4. If not, an outstanding transaction is probably preventing the log from being cleared. If this is the case, restart SQL Server and repeat step 2.<p>
When SQL Server starts and the database is recovered, the outstanding transaction is rolled back, allowing the log to be cleared by a subsequent dump transaction statement. For information about managing the transaction log, see Chapter 4, "Transaction Log Management."
</li>
<li>
If the dump transaction statement was executed using either the no_log option or the truncate_only option in step 2, dump the database now, because these options prevent subsequent changes recorded in the log from being used to recover from a media failure. You must run dump database to ensure the recoverability of subsequent database modifications.<p>
<b>Note</b>  The database dump is not required if your environment does not save transaction logs for media failure recovery.
<p>
Do not assume that the occurence of error 1105 means that your transaction log is too small. If the data and the log are on the same segment, the actions described above can often free enough space without requiring you to increase the size of the transaction log.
<p>
If you are concerned that your transaction log is too small, read Chapter 4, "Transaction Log Management," before increasing the transaction log size. For information about using the alter database statement to increase log size, see the <i>Microsoft SQL Server Transact-SQL Reference</i>.
</li>
</ol>
<h5>Recovery 1105 errors</h5>
<p>
The specific action you take on a recovery 1105 error depends on which type of database it occurs on.</p>
<p>
<b>On a user database</b>  If error 1105 occurs on a user database during recovery, correct the problem using the following procedure:
<ol>
<li>
Use the <b>sp_dboption</b> system procedure to note the current user options on the database (so you can reset them in step 7).</li>
<li>
Manually set the database status to <b>no chkpt on recovery</b> (status bit 16) and <b>single user</b> (status bit 4096) by adding the two status bits together and then using the | (OR) operator, as follows:<pre>sp_configure 'allow updates', 1
go
reconfigure with override
go
begin tran
go
update master..sysdatabases
set status = status | 4112
where name = 'database_name'
go</pre>
<p>
<b>Caution</b>  Because the database was marked suspect on the original recovery attempt, this procedure also resets some internal status bits to allow the database to recover normally. <i>Do not use this procedure under any other circumstances.</i>
<p>
The value of 4112 in the SET STATUS statement corresponds to the <b>single user</b> and <b>no chkpt on recovery</b> database options.
</li>
<li>
Check that the SET STATUS statement affected only one row.</li>
<li>
If more than one row was affected, issue a rollback transaction statement. Otherwise, commit the transaction and shut down SQL Server:<pre>commit tran
go
shutdown
go</pre>
</li>
<li>
Restart SQL Server.</li>
<li>
After you restart SQL Server, dump the transaction log with the no_log option and reset the database status:<pre>dump tran database_name with no_log
go
sp_dboption database_name, 'no chkpt', false
go
sp_dboption database_name, single, false
go
use database_name
go
checkpoint
go
sp_configure 'allow updates', 0
go
reconfigure with override
go</pre>
</li>
<li>
Use <b>sp_dboption</b> to reestablish any database options such as <b>select into/bulkcopy</b> noted in step 1.</li>
</ol>
<p>
<b>On the master database</b>  If error 1105 occurs on the <i>master</i> database during recovery but SQL Server still starts, correct the problem by logging in and dumping the transaction log using the NO_LOG option, as shown in the following example:</p>
<pre>dump tran master with no_log
</pre>
<p>
If error 1105 occurs on the <i>master</i> database and prevents SQL Server from starting, contact your primary support provider.</p>
<p>
<b>On the model database</b>  If error 1105 occurs on the <i>model</i> database during recovery, SQL Server will not start. This is because the <i>tempdb</i> database, which is required to start the server, could not be built due to the problem with the <i>model</i> database. To correct this problem and restart SQL Server, use the following procedure:
<ol>
<li>
Start SQL Server with the 3608 trace flag. This trace flag causes SQL Server to recover only the <i>master</i> database at startup. For details about using trace flags, see "Using Trace Flags," in Chapter 24, "Additional Problem-solving Techniques."</li>
<li>
Execute the following statements to set the <b>no chkpt on recovery</b> option on the <i>model</i> database:<pre>sp_dboption model, 'no chkpt', true
go
use model
go
checkpoint
go</pre>
</li>
<li>
Restart SQL Server.</li>
<li>
Execute the following statement to truncate the inactive portion of the transaction log in <i>model</i>:<pre>dump tran model with no_log
go</pre>
</li>
<li>
Reset the database option on <i>model</i>:<pre>sp_dboption model, 'no chkpt', false
go
use model
go
checkpoint
go</pre>
</li>
</ol>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
