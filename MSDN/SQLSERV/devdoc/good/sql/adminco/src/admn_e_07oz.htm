<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Loading Database Dumps</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_loading_database_dumps"></a>Loading Database Dumps</h2>
<p>
You need to consider several things when loading a database from a dump. First, the target database needs to be at least as large as the database that was dumped. Attempting to load a dump into a database that is smaller than the database that the dump came from will result in a SQL Server 3105 error, stating: </p>
<pre><code>Data on dump will not fit into current database. Need xx Mbyte database.</code></pre>
<p>
In this message, <i>xx</i> is the size of the original database. You can, however, load a dump into a target database that is larger than the original database.</p>
<p>
Also consider whether the database will be loaded on the same server from which it was dumped, or if there is a potential for it to be loaded onto a different server. If the database may be dumped and loaded between servers, the code page and sort order between the servers must match. You cannot load a database on a SQL Server that is running with a code page or sort order different from the SQL Server where the dump was from. </p>
<p>
SQL Server 6.0 provides a tool, SQL Transfer Manager, which uses a graphical interface to allow you to easily transfer some or all of the data from one server to another. This is useful when the servers are using different sort orders or code pages, or when they are using different hardware architectures (for example, to move data from a SQL Server running on an Intel®-based computer to SQL Server running on a RISC-based computer). If your environment has multiple SQL Servers, it is recommended that they all be configured with the same code page and sort orders.</p>
<p>
If a database needs to be re-created and loaded from a previous dump, it is important that the database is re-created in exactly the same way that it was created. That is, the device usage, log space allocation, and segment definitions in the new database must be identical to how they were when the database was dumped. This information is kept in the <i>sysusages </i>table in the <i>master</i> database, so you should always dump the <i>master</i> database whenever a change to a database is made that records anything in <i>master</i> (such as an ALTER DATABASE or DISK INIT command). In addition, if you save the scripts you used to create the initial database, re-creating it will simply be a matter of rerunning those scripts. </p>
<p>
If a dump is loaded into a database that has data, log, or segment mappings different from the original database, DBCC CHECKALLOC may report SQL Server error 2558, stating:</p>
<pre><code>Extent not within segment: Object &lt;object id&gt;, indid &lt;index id&gt; includes extents on allocation page &lt;page number&gt; which is not in segment &lt;segment number&gt;.
</code></pre>
<p>
This error can indicate that there are data pages allocated in portions of the database intended for log pages, or log pages allocated in portions intended for data. In the first case (data pages in log space), the effect is that less space is available for the transaction log to grow. The second case (log pages in data space) is less serious, because the data space being used by log pages will eventually be freed up when the log is truncated with the DUMP TRANSACTION statement.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
