<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Alerts Overview</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_alerts_overview"></a>Alerts Overview</h1>
<p>
SQL Server 6.0 provides the ability to set alerts on SQL Server events. For example, you could generate alerts when a database is about to become full or when a database dump is unsuccessful. </p>
<p>
If the proper SQL Server options are set, SQL Server events are written to the Windows NT application (event) log. SQL Executive constantly monitors the Windows NT application log, waiting for events from SQL Server. When an event occurs, SQL Executive compares the event details against the alerts previously defined by the SQL Server administrator. If it finds a match, SQL Executive carries out the defined response. For each alert, the response can be either or both of these:
<ul>
<li>
Send email and/or pager notifications to one or more operators.</li>
<li>
Execute a task. This can be a Transact-SQL command batch or a Windows NT program (.CMD or .EXE file).</li>
</ul>
<p>
Paging is implemented via email. To support this, Microsoft Mail (provided with Windows NT) must be configured so that it is possible to send an email that will result in a page being sent. Email interfaces to pager services are provided by many telecommunications companies, and all that is normally required is the ability to route emails (for example, using Microsoft Mail's External Mail program) to a post office at the pager provider's site. For more information, contact your telecommunications provider.</p>
<p>
Whether you are using email or pager-via-email notifications, you must be running Microsoft Mail on the same computer as SQL Server. For information on setting up Microsoft Mail, see your documentation for Microsoft Windows NT or the <i>Microsoft Windows NT Resource Kit</i>. In this documentation, see Chapter 18, <a href="admn18_8fjg.htm">Setting Up Mail</a>. </p>
<p>
For information on setting up SQLMail, also see the <i>Microsoft SQL Server Transact-SQL Reference</i>. </p>
<p>
SQL Server events can either be processed by the local SQL Executive service or forwarded (by the local SQL Executive service) to the Windows NT application log on another computer that is running SQL Server 6.0. It is also possible to have a combination of the two: for example, you could have some events processed locally and some processed remotely. For more details on configuring event forwarding, see <a href="admn17_76nn.htm">Setting Alert Engine Options</a>, later in this chapter. </p>
<p>
Microsoft SQL Enterprise Manager provides a graphical interface that allows an administrator to manage the entire alerting system. The alerts capability is supported for Microsoft SQL Server 6.0 only. You must be the System Administrator (SA) to use the alerts features of SQL Enterprise Manager.</p>
<p>
Under the following circumstances, errors and messages generated by SQL Server and SQL Server applications are entered in the Windows NT application (event) log and can therefore cause SQL Executive to fire alerts:
<ul>
<li>
Severity 19 or higher <i>sysmessages</i> errors</li>
<li>
Non-<i>sysmessages</i> warnings/errors from SQL Server (severities 110, 120, and 130)</li>
<li>
Any RAISERROR statement invoked by using the WITH LOG syntax</li>
<li>
Any event logged by using <b>xp_logevent</b><p>
<b>Note</b>  RAISERROR WITH LOG is the recommended way to write to the Windows NT Application log from SQL Server.
</li>
<li>
Any <i>sysmessages</i> error modified by using <b>sp_altermessage with_log</b>, which forces an error to be written to the Windows NT application log when the error occurs.</li>
</ul>
<p>
Error messages with a severity lower than 19 can be logged by using RAISERROR, or by designating specific <i>sysmessages</i> errors as "always logged."</p>
<p>
Also note that it is not possible to set an alert on a 4002 ("Login failed") message. However, if you turn on the option to audit failed logins, then when a login fails, the server writes a system message (18456 "Login failed - User: <i>username</i>" ) in the Windows NT application log. An alert can then be set on that 18456 message.</p>
<p>
The auditing option for failed logins is a security option set by using either SQL Setup or SQL Enterprise Manager. For more information, see Chapter 9, <a href="admn09_8ozd.htm">Managing Security</a>. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
