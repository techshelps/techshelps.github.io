<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How SQL Server Uses Memory</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_how_sql.a0.server_uses_memory"></a>How SQL Server Uses Memory</h1>
<p>
SQL Server uses configuration options to control various aspects of memory allocation and performance. When you install SQL Server, the <b>setup</b> program assigns 8 MB of memory to SQL Server if the computer has less than 32 MB of RAM, and 16 MB of memory if the computer has 32 MB or more of RAM. After installation, you can and often should manually configure memory to a greater amount. After installation you can manually configure memory to a greater amount by running <b>sp_configure</b>. Note, however, that as you increase the SQL Server memory configuration, you must be sure that there is sufficient disk space to grow the virtual memory support file (PAGEFILE.SYS) sufficiently to accommodate the additional memory. For additional information, see your manuals for Windows NT.</p>
<p>
When SQL Server starts, it requests the amount of configured memory from the operating system. The operating system allocates as much as it can from physical memory and the rest as virtual memory. As memory availability on the system changes, the operating system replaces physical memory with virtual memory (and virtual memory with physical memory). The operating system allocates memory for the server executable code, the static memory used by the server, and the non-cache server data structures.</p>
<p>
An additional 5 percent of the remaining memory is allocated for miscellaneous overhead. The other 95 percent is divided between the data and procedure caches based on the value of the <b>procedure cache </b>configuration option.</p>
<p>
You can determine the current value of the <b>memory</b> configuration option (and other configuration options) by running <b>sp_configure</b>. If you run <b>sp_configure</b> without any parameters, the output includes the current settings for all configuration options. </p>
<p>
You can determine the current settings for a specific configuration option by running <b>sp_configure</b> with the option name. For example, to find the current value of the <b>memory</b> option:</p>
<pre>sp_configure 'memory'
name        minimum    maximum     config_value   run_value
----------  ---------  ----------  -------------  -----------
memory      1000       1048576     4096           4096</pre>
<p>
The output includes five columns:
<ul>
<li>
The <i>name</i> column indicates the name of the configuration option.</li>
<li>
The <i>minimum</i> and <i>maximum</i> columns indicate the SQL Server minimum and maximum values for the option.</li>
<li>
The <i>config_value</i> column of the <b>sp_configure</b> output indicates the current setting of the option.</li>
<li>
The <i>run_value</i> column indicates the actual amount of memory SQL Server is using.</li>
</ul>
<p>
For the <b>memory</b> option, the values in these columns indicate memory settings in terms of 2K pages.</p>
<p>
You can also adjust the amount of memory available to SQL Server by running <b>sp_configure</b> as follows:</p>
<p>
<b>sp_configure</b> <b>'memory'</b>, <i>config_value</i></p>
<p>
where
<dl>
<dt>
<i>config.value</i></dt>
<dd>
Is the new <b>memory</b> configuration @value.
</dd>
</dl>
<p>
<b>Important</b>  When configuring memory using <b>sp_configure</b>, be careful not to set the <b>memory</b> option to an amount greater than the amount of available memory. If SQL Server cannot obtain the memory it needs, it cannot start. If this occurs, start SQL Server in minimum configuration using the <b>-f </b>option. For details, see <i>Microsoft SQL Server Setup</i>.</p>
<p>
To view memory usage information and determine if more should be added or allocated to the procedure cache, use DBCC MEMUSAGE, as described in "Using DBCC MEMUSAGE," later in this chapter. Under Windows NT, you can also examine the Cache Hit Ratio by using the Windows NT Performance Monitor. For information about viewing SQL Server statistics using the Windows NT Performance Monitor, see Chapter 19, <a href="admn19_3vs5.htm">Monitoring Server Activity and Performance</a>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
