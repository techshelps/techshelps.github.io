<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLParamOptions</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sqlparamoptions_odbc07"></a>SQLParamOptions</h1>
<p>
The <b>SQLParamOptions</b> function allows an application to specify an array of multiple values for the parameters that are assigned by <b>SQLBindParameter</b>. By calling <b>SQLParamOptions</b> with a <i>crow</i> greater than 1, the driver generates an SQL statement batch or a stored procedure batch to execute multiple SQL statements.</p>
<p>
<b>SQLParamOptions</b> is usually used with DML. Any DDL statements that are used with <b>SQLParamOptions</b> will have the same result as executing the statement serially <i>crow</i> times. For statements that do not contain parameter markers, the statement will still be executed <i>crow</i> times.</p>
<p>
A stored procedure batch is used for <b>SQLPrepare</b>/<b>SQLExecute</b> and for canonical procedure invocations that do not use any data-at-execution parameters. Stored procedure output parameters are returned.</p>
<p>
An SQL batch (also called a language event) is used for SQL commands and for canonical procedure invocations that use data-at-execution parameters. Any stored procedure output parameters are not returned. If a SELECT statement is used, multiple results sets will be returned, and the application must use <b>SQLMoreResults</b> to process them. After <b>SQLParamData</b>, <b>SQLExecDirect</b>, or <b>SQLExecute</b> returns success, the value returned in <i>pirow</i> is initially set to 1, and <b>SQLMoreResults</b> increments this value as you process each results set.</p>
<p>
<b>SQLRowCount</b> will return the total of all rows that are affected by all statements in the SQL or stored procedure batch that contains no SELECT statements. The value returned by <b>SQLRowCount</b> is undefined if one or more SELECT statements are included. Also, when the original SQL contains multiple statements, the value returned in <i>pirow</i> can be incorrect.</p>
<p>
While processing a batch, SQL&nbsp;Server may return an error. In some cases, SQL&nbsp;Server cancels the current command only, and the remainder of the batch is processed. For these errors, one or more executions will fail, and <b>SQLExecDirect</b>, <b>SQLExecute,</b> or <b>SQLParamData</b> will return SQL_ERROR. The value returned in <i>pirow</i> will be set to <i>crow</i> because all parameter rows were processed. <b>SQLError</b> will return the errors that occurred, but there is no way to determine which parameter row(s) caused the error. Because all parameter rows were processed, rebinding and continuing execution is not necessary.</p>
<p>
In other cases, an error causes SQL&nbsp;Server to cancel the entire batch. For these errors, the value returned in <i>pirow</i> will contain the affected parameter row. You must rebind and continue execution to process the remaining parameter rows.</p>
<p>
When data truncation occurs for a parameter, processing continues for the remaining parameters. SQL_SUCCESS_WITH_INFO is returned, along with a warning message. However, when an error (such as a conversion error) occurs on the client for one of the parameters, the entire batch execution is stopped and no execution is done for any row.</p>
<p>
While <b>SQLParamData</b> returns SQL_NEED_DATA, it updates the value of <i>pirow</i> as it processes <i>data-at-exec </i>parameters, and the final <b>SQLParamData</b> updates the value of <i>pirow</i> based on any errors that are encountered during execution. Therefore, if an error is encountered with a row during execution, the value in <i>pirow</i> may be larger during the <i>data-at-exec </i>parameter processing than it is after the execution has completed.</p>
<p>
When connected to SQL&nbsp;Server 4.2<i>x</i>, <b>SQLParamOptions</b> is limited as follows:
<ul>
<li>
SQL&nbsp;Server 4.2<i>x</i> is limited to approximately 128,000 bytes for a single language event. If using <b>SQLParamOptions</b> causes this limit to be exceeded, the driver will return the SQL&nbsp;Server error message.</li>
<li>
SQL&nbsp;Server 4.2<i>x</i> does not support stored procedure batches. Therefore, any stored procedure output parameters are not returned.</li>
</ul>
<p>
<b>Note</b>  When you pass a non-null value for <i>pirow</i>, the driver will continue to place the current row number in that memory address, even if <b>SQLParamOptions</b> is effectively "turned off" by passing a <i>crow</i> of 1. Therefore, if the <i>pirow</i> address supplied by the application becomes an invalid address (for example, a local variable-leaving scope) it is possible that the driver might fail.</p>
<p>&nbsp;</p></body>
</HTML>
