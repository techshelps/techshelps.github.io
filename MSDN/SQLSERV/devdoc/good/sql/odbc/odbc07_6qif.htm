<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLSetStmtOption</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sqlsetstmtoption_odbc07"></a>SQLSetStmtOption</h1>
<p>
The <b>SQLSetStmtOption </b>function allows the caller to set various options at the statement level. The following cursor related options are supported.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=30%>Option</th>
<th align=left width=70%>Value</th>
</tr>
<tr valign=top>
<td width=30%>SQL_CONCURRENCY</td>
<td width=70%>SQL_CONCUR_READ_ONLY<br>
SQL_CONCUR_LOCKING<br>
SQL_CONCUR_ROWVER<br>
SQL_CONCUR_VALUES</td>
</tr>
<tr valign=top>
<td width=30%>SQL_CURSOR_TYPE</td>
<td width=70%>SQL_CURSOR_FORWARD_ONLY<br>
SQL_CURSOR_STATIC<br>
SQL_CURSOR_KEYSET_DRIVEN<br>
SQL_CURSOR_DYNAMIC</td>
</tr>
<tr valign=top>
<td width=30%>SQL_ROWSET_SIZE</td>
<td width=70%>Integer value that specifies the number of rows in the rowset, that is the number of rows that are returned by each call to <b>SQLExtendedFetch</b>. The default value is 1.</td>
</tr>
<tr valign=top>
<td width=30%>SQL_BIND_TYPE</td>
<td width=70%>Integer value that sets the binding orientation to be used when <b>SQLExtendedFetch</b> is called on the associated <i>hstmt</i>. Both column and row bindings are supported.</td>
</tr>
</table><br>
<p>
SQL&nbsp;Server supports read-only static cursors, and these are exposed through the SQL&nbsp;Server driver. Applications that require updatable static cursors should choose the Cursor Library implementation by setting SQL_ODBC_CURSORS to SQL_CUR_USE_ODBC. Cursors that are provided by the Cursor Library are implemented at the client. All the data is cached, and updates and deletes are issued by constructing a WHERE clause that uses the cached values.</p>
<p>
Cursors that are implemented at the server (Forward Only, Keyset, Dynamic, Read-only, and Static) can be specified with a concurrency control option of read-only, lock, row version, or row values. Cursors that are implemented by the cursor library can be read-only or row values.</p>
<p>
Mixed cursors are not supported. The SQL_KEYSET_SIZE value is automatically converted to zero (0) if a non-zero value is specified.</p>
<p>
In SQL&nbsp;Server&nbsp;6.5, the ODBC SQL&nbsp;Server driver supports the following driver-specific statement options in <b>SQLSetStmtOption</b> and <b>SQLGetStmtOption</b>.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=55%><i>fOption</i> option</th>
<th align=left width=45%><i>vParam</i> descriptions</th>
</tr>
<tr valign=top>
<td width=55%>SQL_SOPT_SS_CURRENT_COMMAND<br>
(<b>SQLGetStmtOption</b> only)</td>
<td width=45%>The current SQL command number in the batch.<p>
(Similar to <b>dbcurcmd</b>.)</p>
</td>
</tr>
<tr valign=top>
<td width=55%>SQL_SOPT_SS_TEXTPTR_LOGGING</td>
<td width=45%>SQL_TL_OFF. Text and image operations are not logged.<p>
SQL_TL_ON. Text and image operations are logged. (Default.)</p>
</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
