<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLColAttributes, SQLDescribeCol, and SQLNumResultCols</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sqlcolattributes.2c_.sqldescribecol.2c_.and_sqlnumresultcols_odbc07"></a>SQLColAttributes, SQLDescribeCol, and SQLNumResultCols</h1>
<p>
SQL&nbsp;Server returns information about a results set before it returns the data in the results set. The SQL&nbsp;Server driver returns this information to an application through the <b>SQLColAttributes</b>, <b>SQLDescribeCol</b>, and <b>SQLNumResultCols</b> functions.</p>
<p>
When connected to SQL&nbsp;Server 6.<i>x</i>, the SQL&nbsp;Server driver uses the SET FMTONLY statement to retrieve the appropriate information about a results set.</p>
<p>
When connected to SQL&nbsp;Server 4.2<i>x</i>, if an application calls any of these functions after a SELECT statement has been prepared and before it has been executed, the SQL&nbsp;Server driver submits the SELECT statement with the clause WHERE 1=2. This forces SQL&nbsp;Server to generate a results set without any rows but with the information about the results set.</p>
<p>
<b>Note</b>  When connected to SQL&nbsp;Server 4.2<i>x</i>, <b>SQLColAttributes</b>, <b>SQLDescribeCol</b>, and <b>SQLNumResultCols</b> cannot return information about a results set that is generated by a procedure if that procedure has been prepared but not executed. If the SELECT statement is the first statement in a batched statement and SQL&nbsp;Server native grammar is used (no semicolons between statements), the results of these functions are unpredictable. Note also that the word "SELECT" must be the first token in the buffer. If anything precedes the word "SELECT" in the statement to be prepared, "WHERE 1=2" will not be added to the SELECT statement and the information about the results set will not be returned.</p>
<p>
In SQL&nbsp;Server&nbsp;6.5, the ODBC SQL&nbsp;Server driver supports the following driver-specific column attributes in <b>SQLColAttributes</b>.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=51%><i>fDescType</i> parameter</th>
<th align=left width=49%><i>pfDesc</i> values</th>
</tr>
<tr valign=top>
<td width=51%>SQL_CA_SS_COLUMN_SSTYPE</td>
<td width=49%>SQLTEXT<p>
SQLVARBINARY</p>
<p>
SQLINTN</p>
<p>
SQLVARCHAR</p>
<p>
SQLBINARY</p>
<p>
SQLIMAGE</p>
<p>
SQLCHAR</p>
<p>
SQLINT1</p>
<p>
SQLBIT</p>
<p>
SQLINT2</p>
<p>
SQLINT4</p>
<p>
SQLMONEY</p>
<p>
SQLDATETIME</p>
<p>
SQLFLT8</p>
<p>
SQLFLTN</p>
<p>
SQLMONEYN</p>
<p>
SQLDATETIMN</p>
<p>
SQLFLT4</p>
<p>
SQLMONEY4</p>
<p>
SQLDATETIM4</p>
<p>
SQLDECIMAL</p>
<p>
SQLDECIMALN</p>
<p>
SQLNUMERIC</p>
<p>
SQLNUMERICN</p>
<p>
(Similar to <b>dbcoltype</b> or <b>dbalttype</b>.)</p>
</td>
</tr>
<tr valign=top>
<td width=51%>SQL_CA_SS_COLUMN_UTYPE</td>
<td width=49%>SQLudtTEXT<p>
SQLudtVARBINARY </p>
<p>
SQLudtINTN</p>
<p>
SQLudtVARCHAR</p>
<p>
SQLudtBINARY</p>
<p>
SQLudtIMAGE </p>
<p>
SQLudtCHAR</p>
<p>
SQLudtINT1</p>
<p>
SQLudtBIT</p>
<p>
SQLudtINT2</p>
<p>
SQLudtINT4</p>
<p>
SQLudtMONEY </p>
<p>
SQLudtDATETIME</p>
<p>
SQLudtFLT8</p>
<p>
SQLudtFLTN</p>
<p>
SQLudtMONEYN</p>
<p>
SQLudtDATETIMN</p>
<p>
SQLudtSYSNAME</p>
<p>
SQLudtTIMESTAMP </p>
<p>
SQLudtFLT4</p>
<p>
SQLudtMONEY4</p>
<p>
SQLudtDATETIM4</p>
<p>
SQLudtDECML</p>
<p>
SQLudtDECMLN</p>
<p>
SQLudtNUM</p>
<p>
SQLudtNUMN</p>
<p>
(Similar to <b>dbcolutype</b> or <b>dbaltutype</b>.)</p>
</td>
</tr>
<tr valign=top>
<td width=51%>SQL_CA_SS_NUM_ORDERS</td>
<td width=49%>The number of columns in the SQL statement's ORDER BY clause.<p>
(Similar to <b>dbnumorders</b>.)</p>
</td>
</tr>
<tr valign=top>
<td width=51%>SQL_CA_SS_COLUMN_ORDER</td>
<td width=49%>The SELECT list column ID of a column that appears in the SQL statement's ORDER BY clause.<p>
(Similar to <b>dbordercol</b>.)</p>
</td>
</tr>
<tr valign=top>
<td width=51%>SQL_CA_SS_COLUMN_VARYLEN</td>
<td width=49%>TRUE if the column's data can vary in length, otherwise FALSE.<p>
(Similar to <b>dbvarylen</b>.)</p>
</td>
</tr>
<tr valign=top>
<td width=51%>SQL_CA_SS_NUM_COMPUTES</td>
<td width=49%>The number of compute clauses in the current results set.<p>
(Similar to <b>dbnumcompute</b>.)</p>
</td>
</tr>
<tr valign=top>
<td width=51%>SQL_CA_SS_COMPUTE_ID</td>
<td width=49%>The compute ID of a compute row.<p>
(Similar to <b>dbnextrow</b> compute ID return value.)</p>
</td>
</tr>
<tr valign=top>
<td width=51%>SQL_CA_SS_COMPUTE_BYLIST</td>
<td width=49%>The bylist for a compute row.<p>
(Similar to <b>dbbylist</b>.)</p>
</td>
</tr>
<tr valign=top>
<td width=51%>SQL_CA_SS_COLUMN_ID</td>
<td width=49%>The SELECT list column ID for a compute column.<p>
(Similar to <b>dbaltcolid</b>.)</p>
</td>
</tr>
<tr valign=top>
<td width=51%>SQL_CA_SS_COLUMN_OP</td>
<td width=49%>SQLAOPCNT<p>
SQLAOPSUM</p>
<p>
SQLAOPAVG</p>
<p>
SQLAOPMIN</p>
<p>
SQLAOPMAX</p>
<p>
SQLAOPANY</p>
<p>
SQLAOPNOOP</p>
<p>
(Similar to <b>dbaltop</b>.)</p>
</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
