<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Server Cursors</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_using_server_cursors"></a>Using Server Cursors</h2>
<p>
There are several advantages to using server cursors, which are implemented in SQL&nbsp;Server 6.<i>x</i>.
<ul>
<li>
Performance — If you are going to access a small fraction of the data in the cursor (typical of many browsing applications), using server based cursors will give you an optimal performance because only required data (and not the entire results set) is sent over the network.</li>
<li>
Additional cursor types — Keyset and dynamic cursor types are only available if you use server cursors. In addition, the cursor library only supports forward only with read-only concurrency and static with read-only and optimistic concurrency. With server based cursors, you can use the full range of concurrency values with the different cursor types.</li>
<li>
Cleaner semantics — The cursor library simulates cursor updates by generating a SQL searched update statement. This can sometimes lead to unintended updates.</li>
<li>
Memory usage — When using server based cursors, the client does not need to cache large amounts of data or maintain information about the cursor position; the server provides that functionality.</li>
<li>
Multiple open cursors — When using server based cursors, the connection between the client and the server does not remain busy between cursor operations. This allows you to have multiple cursor <i>hstmts</i> active at the same time. The ODBC specification still restricts you to one cursor per <i>hstmt</i>. To get around the one active <i>hstmt</i> limitation associated with Type A statements, change the statement options so you get server cursors associated with Type B statements.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
