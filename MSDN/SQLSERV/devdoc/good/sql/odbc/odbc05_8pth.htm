<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Nullability Resolution</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_nullability_resolution_odbc05"></a>Nullability Resolution</h1>
<p>
In the ODBC grammar, columns for which nullability is not specified are assumed to be nullable. In the SQL&nbsp;Server grammar, columns for which nullability is not specified are assumed to be not nullable.</p>
<p>
When connected to SQL&nbsp;Server 6.<i>x</i>, the SQL&nbsp;Server driver resolves this situation by setting SET ANSI_NULL_DEFAULT_ON. This causes the server to use a default of NULL for columns where nullability is not specified except for bit columns or user-defined datatypes.</p>
<p>
When connected to SQL&nbsp;Server 4.2<i>x</i>, the SQL&nbsp;Server driver adds a NULL specification to each column definition in a CREATE TABLE statement that does not specify whether the column is nullable (except for <i>bit</i> columns, which are not nullable). It adds a NULL specification to each column definition in an ALTER TABLE statement (except for <i>bit</i> columns, which are not nullable).</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
