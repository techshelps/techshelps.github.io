<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Addressing the Issues: Management and Scalability, Access, Performance, Security, and Total Cost of Ownership</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1><a name="addressingissuesmanagementscalabilityaccessperformancesecuritytotalcostofownership"></a>Addressing the Issues: Management and Scalability, Access, Performance, Security, and Total Cost of Ownership</h1>
<p>
So now you know the basics of how the thin-client/server model works, where it might be used, and who might use it. You’ve also seen how this model will allow you to use your computing equipment efficiently and your IS support and maintenance resources wisely. In this section, I’ll present the issues involved in using the thin-client/server model from the IS perspective. Certainly, TCO is important to IS professionals. But just as key to them is what the thin-client/server solution can offer to the company in terms of management and scalability, access, performance, and security.</p>
</BODY>
</HTML>
