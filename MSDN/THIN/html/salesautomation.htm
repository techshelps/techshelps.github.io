<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sales Automation</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1><a name="salesautomation"></a>Sales Automation</h1>
<p>
Many sales automation applications are mission-critical; they need to be secure, and they require some form of version control. Client/server applications with high-powered hardware and bandwidth requirements can be expensive to implement and often provide a less than optimal solution, especially if data is replicated all over the world. Many companies still use legacy mainframe applications. A thin-client/server solution using WinFrame provides the requisite security and reliability for sales automation applications. Client/server or mainframe applications that use a thin-client/server solution for interfacing with the user solve a number of deployment problems. In addition to taking care of the problem of replicated data, the thin-client/server solution makes the best use of existing user hardware as well as system administration and support resources.</p>
<p>
The next case study shows how a thin-client/server solution can be used in sales automation. The Standard Forms company built a thin-client/server solution using WinFrame that leveraged its legacy mainframe applications and allowed the company to make its product catalog available on line.</p>
</BODY>
</HTML>
