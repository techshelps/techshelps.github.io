<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Network Operating Systems and Application Servers</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1><a name="networkoperatingsystemsapplicationservers"></a>Network Operating Systems and Application Servers</h1>
<p>
Throughout the years, network operating systems and the deployment of applications have evolved. In some cases, the applica-tion model evolved to take advantage of the network operating system; in other cases, the operating system adapted in response to application requirements. The UNIX system seems to be designed with the application in mind—for example, UNIX is an excellent platform for engineers who require lots of horsepower to run their applications. UNIX taught us the value of file and data sharing across a network. But with the 1980s came the PC revolution, the advent of personal productivity applications, and the GUI. At that time, Novell designed its network operating system with file-and-print-sharing capabilities. Microsoft Windows NT combined the best of UNIX and Novell’s NetWare product to target the evolving enterprise.</p>
<p>
Now that we’ve discussed the evolution of network operating systems, let’s talk about their relationship to an application server. The definition of an application server differs from vendor to vendor and from paradigm to paradigm. UNIX, now considered the original application server, used to be thought of as a time-sharing system. Novell’s UnixWare was touted as a “powerful UNIX operating system for deploying line-of-business applications on departmental and enterprise server systems…designed to support the server end of client/server applications, to run line- of-business applications in NetWare environments, or to run multiuser applications that have traditionally run on proprietary mainframe or mid-range systems.”</p>
<p class=indent>
Users just want to get the job done; they don’t care how the computer works.</p>
<p>
Since the introduction of UnixWare, companies such as Citrix Systems and Microsoft have again redefined the application server. For example, the Citrix WinFrame server operates as an application server in a way similar to how a UNIX server operates. Applications execute on the server, with display sent to the user’s workstation. Microsoft has envisioned more of a distributed model for an application. In the Microsoft scenario, processing is distributed between the client application that executes on a local machine and a back-end Windows NT server that processes database information and possibly business rules.</p>
<p>
In the following sections, we’ll take a closer look at some of these systems.</p>
</BODY>
</HTML>
