<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Client/Server Applications</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1><a name="clientserverapplications"></a>Client/Server Applications</h1>
<p>
Client/server applications have become increasingly popular. The bandwidth requirements for these applications have continued to change, however. As more and more IS departments deploy client/server applications across low-bandwidth connections, an increasing number of these IS teams use the thin-client/server model to improve system performance. Because users are already familiar with their applications, the IS department’s objective should be to configure the universal thin client to be as transparent as possible.</p>
<p>
Using the ICA thin client, an IS professional can completely hide the WinFrame server and technology from the user. This is commonly accomplished through the auto-logon and application-launching features of WinFrame and the ICA client. For example, let’s assume that a group of users with laptop computers running Microsoft Windows 95 regularly access a client/server application named “test.exe.” Currently, the users dial up the server using RAS accounts and log on to the network. Then they launch test.exe from an icon on their laptops, which accesses an Oracle database on an HP5000. Over RAS, the performance is slow. In this situation, you can introduce a thin-client/server solution with Win-Frame to speed things up. Once WinFrame is in use, the users do exactly the same things they did over RAS, but instead of the application executing on their laptops, it executes on the Win-Frame server.</p>
<p class=indent>
A user can execute a thin-client session from an icon on the desktop.</p>
<p>
To set up an application (for example, test.exe) under WinFrame, follow these general steps:
<ol>
<li>
Install the application (test.exe) on the WinFrame server.<br><br></li>
<li>
Install the ICA client on the user’s laptop.<br><br></li>
<li>
Create an entry in the ICA client on the user’s laptop; include username and password (unless the application doesn’t have its own security, in which case, you would probably leave the password area blank). Figure 3-8 on page 70 shows the Properties dialog box for the client as it would appear on either the Windows 95 or the Windows NT 4.0 platform.<br><br></li>
<li>
Specify test.exe as the application to launch when the user logs on to WinFrame, as shown in Figure 3-9 on page 70. When the user logs on to WinFrame, the test.exe application will launch directly, without launching the Windows desktop. When the user exits the test.exe application, the user logs off the system.<br><br></li>
<li>
Select the icon for the test.exe application that users are accustomed to seeing.</li>
</ol>
<p class=label>
<b>FIGURE 3-8</b></p>
<p class=label>
<b>ICA client entry with description of entry, network protocol, server address, and optional username, password, and domain</b></p>
<p>
<img src="f03eg08.gif" border=0></p>
<p class=label>
<b>FIGURE 3-9</b></p>
<p class=label>
<b>Specifying the executable file that will run when the client logs on to WinFrame</b></p>
<p>
<img src="f03eg09.gif" border=0></p>
<p>
These simple steps make the addition of WinFrame into a client/server environment virtually seamless. When users want to run the test.exe application, they follow the same steps that they used when logging on before the thin-client configuration options were set: they simply dial into RAS, log on to the network, and double-click on the application icon. The test.exe application is launched, and it appears as it would if it were running on the user’s desktop.</p>
<p>
In this new scenario, however, the user actually launches an ICA client, which accesses the WinFrame server, logs the user on, and runs the test.exe application. The ICA client session establishes a three-tier environment, executing the client’s application on the WinFrame server, with business rules, and any supporting database elsewhere.</p>
</BODY>
</HTML>
