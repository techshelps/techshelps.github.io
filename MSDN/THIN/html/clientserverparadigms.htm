<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Client/Server Paradigms</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1><a name="clientserverparadigms"></a>Client/Server Paradigms</h1>
<p>
In an age of information overload, client/server computing emerged as the method of choice for culling the ever-growing mountain of data. Relational database engines such as Microsoft SQL Server and Oracle continued to give more and more control over how we viewed and manipulated this data. However, as this newfound power to manipulate data from a PC increased, so did the power necessary to drive these engines.</p>
<p>
The client/server architecture seemed to provide the answer. Building on the concepts of modular programming, in which the fundamental assumption is the separation of a large piece of software into its constituent parts (“modules”), engineers developing client/server applications recognized that these modules need not all be executed within the same memory space or even on the same device. In a client/server application, the client module requests a service and the server module provides it.</p>
<p>
<b>Two-tier client/server</b> The predominant architecture today, two-tier client/server (shown in Figure 2-3) divides applications into two parts. The presentation services and the business logic functions execute at the client PC, while data access functions are handled by a database server on the network. Because two-tier client/server applications are not optimized for dial-up or WAN connections, response times are often unacceptable for remote users. Application upgrades require software and often hardware upgrades to all client PCs, resulting in potential version control problems.</p>
<p class=indent>
Client devices still require powerful computers.</p>
<p class=label>
<b>FIGURE 2-3</b></p>
<p class=label>
<b>The traditional two-tier client/server environment</b></p>
<p>
<img src="f02eg03.gif" border=0></p>
</BODY>
</HTML>
