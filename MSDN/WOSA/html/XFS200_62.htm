<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5.3 WFPDeregister</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
5.3 WFPDeregister</h5>
<p>
<b>HRESULT WFPDeregister</b>( <i>hService, dwEventClass, hWndReg, hWnd, ReqID</i> )</p>
<p>
Discontinues monitoring of the specified message class(es) from the specified service provider, by the specified <i>hWndReg</i> (or all <i>hWnd</i>'s).</p>
<p>
<b>Parameters</b> <b>HSERVICE</b>   <i>hService</i></p>
<p>
Handle to the service provider</p>
<p>
 <b>DWORD   </b><i>dwEventClass</i> </p>
<p>
The class(es) of messages from which the application is deregistering.   Specified as a set of bit masks that can be logically ORed together.  A NULL value requests that <b><i>all</i></b> message classes be deregistered from the specified window for this service provider.</p>
<p>
 <b>HWND   </b><i>hWndReg</i></p>
<p>
The window to which notification messages are posted.  A NULL value requests that <b><i>all</i></b> the application's windows be deregistered from the specified message class(es) for this <i>hService</i>.</p>
<p>
<i> </i><b>HWND   </b><i>hWnd</i></p>
<p>
The window handle which is to receive the completion message for this request.</p>
<p>
<i> </i><b>REQUESTID   </b><i>ReqID </i></p>
<p>
Request identification number.</p>
<p>
<b>Mode</b> Asynchronous</p>
<p>
<b>Comments WFPDeregister</b> does not stop asynchronous command completion messages from being posted; a robust application should be designed to accept these messages even after a deregister is issued.</p>
<p>
 A <b>WFPDeregister</b> os performed automatically if a <b>WFPClose</b> is issued without a previous <b>WFPDeregister</b>.</p>
<p>
 To deregister <b><i>all</i></b> messages for <b><i>all</i></b> <i>hWnd</i>s, the call supplies NULL values for both the <i>dwEventClass</i> and <i>hWnd</i> parameters.</p>
<p>
  See the <b>WFPRegister</b> function for a description of the types of events that may be monitored.</p>
<p>
<b>Messages </b>WFS_DEREGISTER_COMPLETE  </p>
<p>
<b>Error Codes</b> If the function return is not WFS_SUCCESS, it is one of the following error conditions, indicating that the asynchronous operation was not initiated.  Any service-specific errors that can be returned are defined in the specifications for each service class.</p>
<dl>
<dt>
WFS_ERR_CONNECTION_LOST</dt>
<dd>
The connection to the service is lost.<br>
</dd>
<dt>
WFS_ERR_INTERNAL_ERROR </dt>
<dd>
An internal inconsistency or other unexpected error occurred in the WOSA/XFS subsystem. <br>
</dd>
<dt>
WFS_ERR_INVALID_EVENT_CLASS</dt>
<dd>
The <i>dwEventClass</i>  parameter specifies one or more event classes not supported by the service.<br>
</dd>
<dt>
WFS_ERR_INVALID_HSERVICE</dt>
<dd>
The <i>hService</i> parameter is not a valid service handle.<br>
</dd>
<dt>
WFS_ERR_INVALID_HWND</dt>
<dd>
The <i>hWnd</i> parameter is not a valid window handle.<br>
</dd>
<dt>
WFS_ERR_INVALID_HWNDREG</dt>
<dd>
The <i>hWndReg</i> parameter is not a valid window handle.<br>
</dd>
<dt>
WFS_ERR_NOT_REGISTERED</dt>
<dd>
The specified <i>hWndReg</i> window was not registered to receive messages for any event classes.</dd>
</dl>
<p>
The following error condition is returned via the asynchronous command completion message, as the <i>hResult</i> from the WFSRESULT structure.  Any service-specific errors that can be returned are defined in the specifications for each service class.</p>
<dl>
<dt>
WFS_ERR_CANCELED</dt>
<dd>
The request was canceled by <b>WFSCancelAsyncRequest</b>.</dd>
</dl>
</BODY>
</HTML>
