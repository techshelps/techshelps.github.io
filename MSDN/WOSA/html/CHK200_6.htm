<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.2  WFS_INF_CHK_CAPABILITIES</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h4>
3.2  WFS_INF_CHK_CAPABILITIES</h4>
<p>
<b>Description</b></p>
<p>
This function is used to request device capability information.</p>
<p>
<b>Input Param</b></p>
<p>
None.</p>
<dl>
<dt>
<b>Output Param</b></dt>
<dd>
<pre><FONT FACE="COURIER NEW" SIZE=2>LPWFSCHKCAPS
typedef struct _wfs_chk_caps
     {
     WORD     wClass;
     WORD     fwType;
     BOOL     bCompound;
     BOOL     fMICR;
     BOOL     fOCR;
     BOOL     fAutoFeed;
     BOOL     fEndorser;
     BOOL     fEncoder;
     WORD     fwStamp;
     WORD     wImageCapture;
     USHORT   nPockets;
     LPSTR    lpszFontNames;
     LPSTR    lpszEncodeNames;
     LPSTR    lpszExtra;
     }  WFSCHKCAPS, * LPWFSCHKCAPS</FONT></pre>
</dd>
</dl>
<p>
<b><i>fwClass</i></b></p>
<p>
Specifies the logical service; value is WFS_SERVICE_CLASS_CHK.</p>
<p>
<b><i>fwType</i></b></p>
<p>
Specifies the type of the physical device; only current value is WFS_CHK_TYPECHK.</p>
<p>
<b><i>bCompound</i></b></p>
<p>
TRUE if the logical device is part of a compound device.</p>
<p>
<b><i>fMICR</i></b></p>
<p>
Can read MICR on checks.</p>
<p>
<b><i>fOCR</i></b></p>
<p>
Can read OCR on checks.</p>
<p>
<b><i>fAutoFeed</i></b></p>
<p>
Has autofeed capability;  if FALSE has only manual feed.</p>
<p>
<b><i>fEndorser</i></b></p>
<p>
A programmable endorser is present.</p>
<p>
<b><i>fEncoder</i></b></p>
<p>
An encoder is present.</p>
<p>
<b><i>fwStamp</i></b></p>
<p>
One of: </p>
<p>
WFS_CHK_STAMPNONE<BR>WFS_CHK_STAMPFRONT<BR>WFS_CHK_STAMPREAR<BR>WFS_CHK_STAMPBOTH</p>
<p>
<b><i>wImageCapture</i></b></p>
<p>
Same values as<i> wStamp</i></p>
<p>
<b><i>nPockets</i></b></p>
<p>
Number of pockets; if  0 or 1, device has no pockets.</p>
<p>
<b><i>lpszFontNames</i></b></p>
<p>
The names of the fonts supported for reading; each is terminated with a NULL and the string is terminated with two NULLs.</p>
<p>
<b><i>lpszEncodeNames</i></b></p>
<p>
The names of the fonts supported for encoding; each is terminated with a NULL and the string is terminated with two NULLs.</p>
<p>
<b><i>lpszExtra</i></b></p>
<p>
Points to a list of vendor-specific, or any other extended information.  The information is returned as a series of  “<i>key=value</i>” strings so that it is easily extensible by service providers.  Each string is null-terminated, with the final string terminating with two null characters.</p>
<p>
<b>Error Code</b></p>
<p>
There are no additional error codes generated by this command.</p>
<p>
<b>Comments  </b></p>
<p>
The font names are standardized so that applications can check for standard literals, e.g.:  CMC7, E13B.  Reserved OCR font names are TBD due to numerous local variants. (i.e. OCRA and OCRB are not enough).</p>
<p>
Applications which require or expect specific information to be present in the <i>lpszExtra</i> parameter may not be device or vendor-independent.</p>
<h2>3.3  WFS_INF_CHK_FORM_LIST</h2>
<p>
<b>Description</b></p>
<p>
This function is used to retrieve the list of forms available to the service.</p>
<p>
<b>Input Param</b></p>
<p>
None.</p>
<dl>
<dt>
<b>Output Param</b></dt>
<dd>
<pre><FONT FACE="COURIER NEW" SIZE=2>LPSTR          lpszFormList;</FONT></pre>
</dd>
</dl>
<p>
<b><i>lpszFormList</i></b></p>
<p>
Points to a list of null-terminated form names, with the final name terminating with two null characters.</p>
<p>
<b>Error Codes</b></p>
<p>
There are no additional error codes generated by this command.</p>
<h2>3.4  WFS_INF_CHK_QUERY_FORM</h2>
<p>
<b>Description</b></p>
<p>
This function is used to retrieve the details on the definition of a specified form.</p>
<dl>
<dt>
<b>Input Param</b></dt>
<dd>
<pre><FONT FACE="COURIER NEW" SIZE=2>LPSTR          lpszFormName;</FONT></pre>
</dd>
</dl>
<p>
<b><i>lpszFormName</i></b></p>
<p>
Specifies the null-terminated name of the form on which to retrieve details.</p>
<dl>
<dt>
<b>Output Param</b></dt>
<dd>
<pre><FONT FACE="COURIER NEW" SIZE=2>LPWFSFRMHEADER</FONT></pre>
</dd>
</dl>
<p>
See section 7.1.4.5  WFS_INF_PTR_QUERY_FORM, for details of this structure.</p>
<p>
<b>Error Codes</b></p>
<p>
The following additional error code can be generated by this command:</p>
<table>
<tr valign=top>
<td>
<b>Value</b></td>
<td>
<b>Meaning</b></td>
</tr>
<tr valign=top>
<td>
WFS_ERR_CHK _FORMNOTFOUND</td>
<td>
The specified form cannot be found.</td>
</tr>
</table>
<h2>3.5  WFS_INF_CHK_QUERY_FIELD</h2>
<p>
<b>Description</b></p>
<p>
This function is used to retrieve details on the definition of a single or all fields on a specified form.</p>
<p>
<b>Input Param</b></p>
<dl>
<dt>
<code>LPWFSCHKQUERYFIELD,</code> as defined below.</dt>
<dd>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_chk_query_field<BR>     {<BR>     LPSTR                    lpszFormName;<BR>     LPSTR                    lpszFieldName;<BR>     } WFSCHKQUERYFIELD, * LPWFSCHKQUERYFIELD;</FONT></pre>
</dd>
</dl>
<p>
<b><i>lpszFormName</i></b></p>
<p>
Points to the null-terminated form name.</p>
<p>
<b><i>lpszFieldName</i></b></p>
<p>
Points to the null-terminated name of the field about which to retrieve details.  If this value is NULL, then retrieve details for all fields on the form.</p>
<dl>
<dt>
<b>Output Param</b></dt>
<dd>
<pre><FONT FACE="COURIER NEW" SIZE=2>LPWFSFRMFIELD          * lpFields;</FONT></pre>
</dd>
</dl>
<p>
See Section 7.1.4.7, WFS_PTR_QUERY_FIELD  for details of this structure.</p>
<p>
<b>Error Codes</b></p>
<p>
The following additional error codes can be generated by this command:</p>
<table>
<tr valign=top>
<td>
<b>Value</b></td>
<td>
<b>Meaning</b></td>
</tr>
<tr valign=top>
<td>
WFS_ERR_CHK _FORMNOTFOUND</td>
<td>
The specified form cannot be found.</td>
</tr>
<tr valign=top>
<td>
WFS_ERR_CHK _FIELDNOTFOUND</td>
<td>
The specified field cannot be found.</td>
</tr>
</table>
</BODY>
</HTML>
