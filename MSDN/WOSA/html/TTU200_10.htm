<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.5 WFS_INF_TTU_QUERY_FIELD</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
3.5 WFS_INF_TTU_QUERY_FIELD</h5>
<p>
<b>Description </b>This command is used to retrieve details of the definition of a single or all fields on a specified form.</p>
<p>
<b>Input Param</b> <code>LPWFSTTUQUERYFIELD lpQueryField;</code></p>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_ttu_query_field<BR> {<BR> LPSTR    lpszFormName;<BR> LPSTR    lpszFieldName;<BR> } WFSTTUQUERYFIELD, * LPWFSTTUQUERYFIELD;</FONT></pre>
<p>
 <i>lpszFormName</i><b><BR></b>Pointer to the null-terminated form name.</p>
<p>
<i><b> </b>lpszFieldName<b><BR></b></i>Pointer to the null-terminated name of the field about which to retrieve details. If this value is NULL, then retrieve details for all fields on the form.</p>
<p>
<b>Output Param </b><code>LPWFSTTUFRMFIELD * lppFields;</code></p>
<p>
 <i>lppFields</i><b><BR></b>Pointer to a null-terminated array of pointers to field definition structures:</p>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_ttu_frm_field<BR> {<BR> LPSTR  lpszFieldName;<BR> WORD  fwType;<BR> WORD  fwClass;<BR> WORD  fwAccess;<BR> WORD  fwOverflow;<BR> LPSTR  lpszFormat;<BR> } WFSTTUFRMFIELD, * LPWFSTTUFRMFIELD;</FONT></pre>
<p>
 <i>lpszFieldName</i><BR>Pointer to the null-terminated field name.</p>
<p>
 <i>fwType</i><BR>Specifies the type of field and can be one of the following:</p>
<p>
Value Meaning</p>
<p>
WFS_TTU_FIELDTEXT A text field.</p>
<p>
WFS_TTU_FIELDINVISIBLE An invisible text field.</p>
<p>
WFS_TTU_FIELDPASSWORD A password field, input is echoed as ‘*’.</p>
<p>
 <i>fwClass</i><b><BR></b>Specifies the class of the field and can be one of the following:</p>
<p>
Value Meaning</p>
<p>
WFS_TTU_CLASSSTATIC<b> </b>The field data cannot be set by the application.</p>
<p>
WFS_TTU_CLASSOPTIONAL The field data can be set by the application.</p>
<p>
WFS_TTU_CLASSREQUIRED The field data must be set by the application.</p>
<p>
 <i>fwAccess</i><b><BR></b>Specifies whether the field is to be used for input, output, or both and can be a combination of the following bit-flags:</p>
<p>
Value Meaning</p>
<p>
WFS_TTU_ACCESSREAD<b> </b>The field is used for input from the physical device.</p>
<p>
WFS_TTU_ACCESSWRITE The field is used for output to the physical device.</p>
<p>
 <i>fwOverflow</i><b><BR></b>Specifies how an overflow of field data should be handled and can be one of the following:</p>
<p>
Value Meaning</p>
<p>
WFS_TTU_OVFTERMINATE<b> </b>Return an error and terminate display of the form.</p>
<p>
WFS_TTU_OVFTRUNCATE Truncate the field data to fit in the field.</p>
<p>
WFS_TTU_OVFOVERWRITE Print the field data beyond the extents of the field boundary.</p>
<p>
<b>Error Codes</b> The following additional error codes can be generated by this command:</p>
<p>
Value Meaning</p>
<p>
WFS_ERR_TTU_FORMNOTFOUND The specified form cannot be found.</p>
<p>
WFS_ERR_TTU_FORMINVALID The specified form is invalid.</p>
<p>
WFS_ERR_TTU_FIELDNOTFOUND The specified field cannot be found.</p>
<p>
WFS_ERR_TTU_FIELDINVALID The specified field is invalid.</p>
<p>
<b>Comments</b> None.</p>
</BODY>
</HTML>
