<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.2.1 Service Provider Functionality</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
3.2.1 Service Provider Functionality</h5>
<p>
The primary functions of WOSA/XFS service providers, working in conjunction with their respective services and/or device drivers, are as follows.  Note that <b><i>how</i></b> these functions are implemented is left to the service provider developer.</p>
<ul>
<li>
<u>Route the requests to the device or service, which may be on a remote workstation.</u>  <BR>Service providers may communicate with remote services in a variety of ways, such as NetBIOS, named pipes, RPC (Remote Procedure Calls), Windows Sockets, proprietary network programming interfaces, etc.<p>
</li>
<li>
<u>Translate the generic requests to resource specific commands.</u>  <BR>Note that this involves translation not just to<b><i> </i></b>service-specific commands, but to the commands native to the resource being used.  For example, the commands would not be translated to &quot;Receipt Printer Service&quot; commands, but to &quot;Brand X, Model Y Receipt Printer&quot; commands.  For example, a driver may implement device-specific translation tables or processes itself, or utilize standard operating system device interfaces (such as the Windows GDI), if they exist for the particular peripheral.<p>
</li>
<li>
<u>Arbitrate access to the resource by multiple applications.</u> <BR>Note that when a physical device includes multiple peripherals (for example, a receipt and journal printer in a single unit), this may also include arbitration of the sub-devices.<p>
</li>
<li>
<u>Manage the  interface to the resource.</u><BR>When physical devices are being controlled, this includes managing the hardware interface to the device.  For example, the service providers may use standard operating system device drivers, vendor-written proprietary device drivers, etc.<p>
</li>
<li>
<u>Manage the asynchronous nature of the services in a consistent manner with respect to the applications.</u><BR>The asynchronous nature of the SPI must always be presented back to the XFS Manager and the applications in the form of Windows messages, as in other WOSA components such as the Windows Sockets or Windows SNA APIs.    <p>
</li>
<li>
<u>Error recovery.</u><BR>In some kinds of software failures, such as an application crash, the service provider loses connection with the application.  In this situation, the service provider is responsible for an “orderly” shutdown of the session with that application.  In particular, the service provider generates a system event (see Section 3.11) indicating that the connection was lost, and if any requests from the application were outstanding, it generates a system event for each completion that would normally have generated a completion message to the application.    </li>
</ul>
</BODY>
</HTML>
