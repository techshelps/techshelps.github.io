<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.1 WFS_CMD_PIN_CRYPT</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
4.1 WFS_CMD_PIN_CRYPT</h5>
<p>
<b>Description</b> The input data is either encrypted or decrypted using the specified or selected encryption mode. The available modes are defined in the WFS_INF_PIN_CAPABILITIES command.</p>
<p>
This command can also be used for Message Authentication Code generation (i.e. MACing). For this purpose, it is possible to specify how the data is formatted before the encryption.</p>
<p>
The input data can be expanded with a fill-character to the necessary length (mandated by the encryption algorithm being used).</p>
<p>
The Start Value (or Initialization Vector) should be able to be passed encrypted like the specified encryption/decryption key. It would therefore need to be decrypted with a loaded key so the name of this key must also be passed. However, both these parameters are optional.</p>
<p>
<b>Input Param </b><code>LPWFSPINCRYPT lpCrypt;</code></p>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_pin_crypt<BR> {<BR> WORD    wMode;<BR> LPSTR    lpsKey;<BR> LPWFSXDATA  lpxKeyEncKey;<BR> WORD    wAlgorithm;<BR> LPSTR    lpsStartValueKey;<BR> LPWFSXDATA  lpxStartValue;<BR> BYTE    bPadding;<BR> BYTE    bCompression;<BR> LPWFSXDATA  lpxCryptData;<BR> } WFSPINCRYPT, * LPWFSPINCRYPT;</FONT></pre>
<p>
 <i>wMode</i><BR>Specifies whether to encrypt or decrypt, values are one of the following:</p>
<p>
Value Meaning</p>
<p>
WFS_PIN_MODEENCRYPT encrypt with key</p>
<p>
WFS_PIN_MODEDECRYPT decrypt with key</p>
<p>
This parameter does not apply to MACing.</p>
<p>
 <i>lpsKey</i><BR>Specifies the name of the stored key.</p>
<p>
 <i>lpxKeyEncKey</i><BR>If NULL, <i>lpsKey</i> is used directly for encryption/decryption. Otherwise, <i>lpsKey</i> is used to decrypt the encrypted key passed in <i>lpxKeyEncKey</i> and the result is used for encryption/decryption. Key is a double length key when used for Triple DES encryption/decryption. Users of this specification must adhere to local regulations when using Triple DES.</p>
<p>
 <i>wAlgorithm</i><BR>Specifies the encryption algorithm. Possible values are those described in WFS_INF_PIN_CAPABILITIES.</p>
<p>
<i>lpsStartValueKey<BR></i>Specifies the name of the stored key used to decrypt the <i>lpxStartValue</i> to obtain the Initialization Vector. If this parameter is NULL, <i>lpxStartValue</i> is used as the Initialization Vector.</p>
<p>
 <i>lpxStartValue</i><BR>DES and Triple DES initialization vector for CBC / CFB encryption and MACing. If this parameter is NULL <i>lpsStartValueKey</i> is used as the Start Value. If <i>lpsStartValueKey</i> is also NULL, the default value for CBC / CFB / MAC is 16 hex digits 0x0.</p>
<p>
 <i>bPadding</i><BR>Specifies the padding character for encryption.</p>
<p>
 <i>bCompression</i><BR>Specifies whether data is to be compressed (blanks removed) before building the MAC. If <i>bCompression</i> is 0x00 no compression is selected, otherwise <i>bCompression</i> holds the representation of the blank character in the actual code table.</p>
<p>
 <i>lpxCryptData</i><BR>Pointer to the data to be encrypted, decrypted, or MACed.</p>
<p>
<b>Output Param</b> <code>LPWFSXDATA lpxCryptData;</code></p>
<p>
 <i>lpxCryptData</i><BR>Pointer to the encrypted or decrypted data, or MAC value.</p>
<p>
<b>Error Codes</b> The following additional error codes can be generated by this command:</p>
<p>
Value Meaning</p>
<p>
WFS_ERR_PIN_KEYNOTFOUND The specified key was not found.</p>
<p>
WFS_ERR_PIN_KEYNOVALUE The specified key is not loaded.</p>
<p>
WFS_ERR_PIN_USEVIOLATION The specified use is not supported by this key.</p>
<p>
WFS_ERR_PIN_MODENOTSUPPORTED The specified mode is not supported.</p>
<p>
WFS_ERR_PIN_ACCESSDENIED The encryption module is either not initialized or not ready for any vendor specific reason.</p>
<p>
WFS_ERR_PIN_INVALIDKEYLENGTH The length of <i>lpxKeyEncKey</i> or <i>lpxStartValue</i> is not supported.</p>
<p>
<b>Events </b>The following additional events can be generated by this command:</p>
<p>
Value Meaning</p>
<p>
WFS_SRVE_PIN_ILLEGAL_KEY_ACCESS An error occured accessing an encryption key.</p>
<p>
<b>Comments </b>The datatype LPWFSXDATA is used to pass hexadecimal data and is defined as follows :</p>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_hex_data<BR> {<BR> USHORT  usLength;<BR> LPBYTE  lpbData;<BR> } WFSXDATA, *LPWFSXDATA;</FONT></pre>
<p>
 <i>usLength</i><BR>Length of the byte stream pointed to by <i>lpbData.</i></p>
<p>
 <i>lpbData</i><BR>Pointer to the binary data stream.</p>
</BODY>
</HTML>
