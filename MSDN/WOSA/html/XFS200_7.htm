<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.2 API and SPI Summary</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
2.2 API and SPI Summary</h5>
<p>
Sections 5 through 7 of this document<b><i> </i></b>present the interfaces that allow a financial application to communicate in a standard fashion with financial services and devices.  The functions are at a sufficiently high level to allow for seamless redirection to other parts of the underlying operating system.  A printer, for example, might rely on a set of services provided by the operating system, but in order to handle the unique characteristics of a financial printer and application, the service provider would preprocess the command, then redirect the derived commands to the operating system's printing services.  In other implementations, the printer might be supported entirely by WOSA/XFS service mechanisms, and not use the operating system printing services in any way.</p>
<p>
The API is structured as sets of: </p>
<p>
<FONT FACE="Symbol">&#183;</FONT><b><i> </i><u>Basic functions</u></b>, such as <b>StartUp</b>/<b>CleanUp</b>, <b>Open</b>/<b>Close</b>, <b>Lock</b>/<b>Unlock</b>, and <b>Execute</b>, that are common to all the WOSA Extensions for Financial Services device/service classes, </p>
<p>
<FONT FACE="Symbol">&#183;</FONT><b><i> </i><u>Administration functions</u></b>, such as device initialization, reset, suspend or resume, used for managing devices and services, and</p>
<p>
<FONT FACE="Symbol">&#183;</FONT><b><i> </i><u>Specific commands</u></b>, used to request information about a service/device, and to initiate device/service-specific functions; these are sent to devices and services as parameters of the <b>GetInfo</b> and <b>Execute</b> basic functions.  These service-specific commands are specified in a set of separate specifications, one for each service class.</p>
<p>
To the maximum extent possible, the syntax of specific<b> </b>commands that are used with multiple device/service classes is kept consistent across all devices.  A primary objective is to standardize function codes and structures for the widest possible variety of devices.  </p>
<p>
The SPI is kept as similar as possible to the API.  Some commands are processed exclusively by the XFS Manager, and so are not in the SPI, and there are minor differences in the specific parameters passed at the two interface levels.</p>
<p>
A typical scenario showing the usage of the APIs is shown below.  This example illustrates the functions used to print a form.</p>
<p>
<FONT FACE="Symbol">&#183;</FONT><b> StartUp</b> (connects the application to the XFS Manager, including version negotiation)</p>
<p>
<FONT FACE="Symbol">&#183;</FONT><b> Open</b> (establishes a session between the application and the service provider)</p>
<p>
<FONT FACE="Symbol">&#183;</FONT><b> Register</b> (specifies the messages that the application should receive from the service provider)</p>
<p>
<FONT FACE="Symbol">&#183;</FONT><b> Lock</b> (obtains exclusive access to the service by the application)</p>
<ul>
<li>
multiple <b>Execute</b> functions, passing one or more specific commands:<p>
<FONT FACE="Wingdings">&#250;</FONT><b> Print_Form</b></p>
<p>
<FONT FACE="Wingdings">&#250;</FONT> etc.</p>
</li>
</ul>
<p>
<FONT FACE="Symbol">&#183;</FONT><b> Unlock</b> (releases exclusive access to the service by the application)</p>
<p>
<FONT FACE="Symbol">&#183;</FONT><b> Deregister</b> (specifies that the application should no longer receive messages from the service provider)</p>
<p>
<FONT FACE="Symbol">&#183;</FONT><b> Close</b> (ends the session between the application and the service provider)</p>
<p>
<FONT FACE="Symbol">&#183;</FONT><b> CleanUp</b> (disconnects the application from the XFS Manager)</p>
<p>
Note that within a session (defined by <b>Open</b> and <b>Close</b>), an application may at any time change the classes of messages it wishes to receive from the service provider (using <b>Register</b>), and may either <b>Lock</b> the service only for specified periods (typically for each transaction), or for the entire session.  Also, note that several of the commands are optional, depending on how the device is being managed and shared (i.e., <b>Lock</b>/<b>Unlock</b>, <b>Register</b>/<b>Deregister</b>).</p>
</BODY>
</HTML>
