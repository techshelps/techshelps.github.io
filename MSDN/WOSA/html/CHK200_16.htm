<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>7.  Forms Language Usage</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h3>
7.  Forms Language Usage</h3>
<p>
This section covers the usage of the forms language to accomodate check readers.  The WOSA/XFS forms language is defined in section 7.1.</p>
<p>
The forms language contains the FORMAT attribute in the XFSFIELD section.  For check readers, the <i>formatstring</i> is used to generate the delimiters for the check fields; its usage is <b><i>not </i></b>application-defined.  The usage is the same for the check readers service class.  For forms intended for use with check readers, the FORMAT attribute is required:</p>
<table>
<tr valign=top>
<td>
field  Amount</td>
<td>
FORMAT &quot;:NNNNNNNNNN:&quot;</td>
</tr>
<tr valign=top>
<td>
field  AccountNum</td>
<td>
FORMAT &quot;0000NNNNNN&lt;&quot;</td>
</tr>
<tr valign=top>
<td>
field  RouteTransit</td>
<td>
FORMAT &quot;;NNNNNNNNN;&quot;</td>
</tr>
</table>
<p>
using punctuation in place of the standard field separators.  A capital N means a number to be read and returned.  A zero (“0”) means an optional number which, if present, is read and returned.  Note that all fields on a check encoder line that have optional numbers should place the zeros on the same end of the format string as an aid to the Service Provider in parsing the code line (for instance, most check readers read the MICR line right to left, so optional numbers should always be on the left side of fields which have them.). </p>
<p>
Normally, the format string, which gives the starting delimiter for each field, and the FOLLOWS clause, allow the service to parse the fields from the check's code line.  The position attributes are used to specify the minimum and maximum starting locations for each field, so that a misread delimiter character can be detected and the parsing corrected (if the service is sophisticated enough to do this).</p>
<p>
If the device supports reading multiple fonts, the FONT attribute of the XFSFIELD section might be significant.  The name of the font (e.g. CMC7, E13B, etc), given here, will cause the check reader to use the appropriate font.</p>
<p>
For endorsing checks, the field description specifies the “front” or “back” of the check using the SIDE attribute, and position relative to the trailing or (usually) leading edge of the check.</p>
</BODY>
</HTML>
