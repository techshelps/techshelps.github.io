<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.2 WFS_INF_IDC_CAPABILITIES</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
3.2 WFS_INF_IDC_CAPABILITIES</h5>
<p>
<b>Description</b> This command is used to retrieve the capabilities of the ID card unit.</p>
<p>
<b>Input Param </b>None.</p>
<p>
<b>Output Param</b> <code>LPWFSIDCCAPS lpCaps</code>;</p>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_idc_caps<BR> {<BR> WORD   wClass;<BR> WORD   fwType;<BR> BOOL   bCompound;<BR> WORD   fwReadTracks;<BR> WORD   fwWriteTracks;<BR> WORD   fwChipProtocols;<BR> USHORT   usCards;<BR> WORD   fwSecType;<BR> WORD   fwPowerOnOption;<BR> WORD   fwPowerOffOption;<BR> LPSTR   lpszExtra; <BR> } WFSIDCCAPS, * LPWFSIDCCAPS;</FONT></pre>
<p>
 <i>wClass</i><BR>Specifies the logical service class; value is WFS_SERVICE_CLASS_IDC</p>
<p>
 <i>fwType</i><BR>Specifies the type of the ID card unit as one of the following flags:</p>
<p>
Value Meaning</p>
<p>
WFS_IDC_TYPEMOTOR The ID card unit is a motor driven card unit.</p>
<p>
WFS_IDC_TYPESWIPE The ID card unit is a swipe (pull-through) card unit .</p>
<p>
WFS_IDC_TYPEDIP The ID card unit is a dip card unit.</p>
<p>
WFS_IDC_TYPECONTACTLESS The ID card unit is a contactless card unit, i.e. no insertion of the card is required.</p>
<p>
 <i>bCompound</i><BR>Specifies whether the logical device is part of a compound physical device and is either TRUE or FALSE.</p>
<p>
<b> </b><i>fwReadTracks</i><BR>Specifies the tracks that can be read by the ID card unit as a combination of the following flags:</p>
<p>
Value Meaning</p>
<p>
WFS_IDC_NOTSUPP The ID card unit can not access any track.</p>
<p>
WFS_IDC_TRACK1 The ID card unit can access track 1.</p>
<p>
WFS_IDC_TRACK2 The ID card unit can access track 2.</p>
<p>
WFS_IDC_TRACK3 The ID card unit can access track 3.</p>
<p>
 <i>fwWriteTracks</i><BR>Specifies the tracks that can be written by the ID card unit (as a combination of the flags specified in the description of <i>fwReadTracks</i>).</p>
<p>
 <i>fwChipProtocols</i><BR>Specifies the chip card protocols that are supported by the service provider as a combination of the following flags:</p>
<p>
Value Meaning</p>
<p>
WFS_IDC_NOTSUPP The ID card unit can not handle chip cards.</p>
<p>
WFS_IDC_CHIPT0 The ID card unit can handle the T=0 protocol.</p>
<p>
WFS_IDC_CHIPT1 The ID card unit can handle the T=1 protocol.</p>
<p>
WFS_IDC_CHIPT2 The ID card unit can handle the T=2 protocol.</p>
<p>
WFS_IDC_CHIPT3 The ID card unit can handle the T=3 protocol.</p>
<p>
WFS_IDC_CHIPT4 The ID card unit can handle the T=4 protocol.</p>
<p>
WFS_IDC_CHIPT5 The ID card unit can handle the T=5 protocol.</p>
<p>
WFS_IDC_CHIPT6 The ID card unit can handle the T=6 protocol.</p>
<p>
WFS_IDC_CHIPT7 The ID card unit can handle the T=7 protocol.</p>
<p>
WFS_IDC_CHIPT8 The ID card unit can handle the T=8 protocol.</p>
<p>
WFS_IDC_CHIPT9 The ID card unit can handle the T=9 protocol.</p>
<p>
WFS_IDC_CHIPT10 The ID card unit can handle the T=10 protocol.</p>
<p>
WFS_IDC_CHIPT11 The ID card unit can handle the T=11 protocol.</p>
<p>
WFS_IDC_CHIPT12 The ID card unit can handle the T=12 protocol.</p>
<p>
WFS_IDC_CHIPT13 The ID card unit can handle the T=13 protocol.</p>
<p>
WFS_IDC_CHIPT14 The ID card unit can handle the T=14 protocol.</p>
<p>
WFS_IDC_CHIPT15 The ID card unit can handle the T=15 protocol.</p>
<p>
 <i>usCards</i><BR>Specifies the maximum numbers of cards that the retain bin can hold (zero if not available).</p>
<p>
 <i>fwSecType</i><BR>Specifies the type of security module used as one of the following flags:</p>
<p>
Value Meaning</p>
<p>
WFS_IDC_SECNOTSUPP Device has no security module.</p>
<p>
WFS_IDC_SECMMBOX Security module of device is MMBox.</p>
<p>
WFS_IDC_SECCIM86 Security module of device is CIM86.</p>
<p>
 <i>fwPowerOnOption</i><BR>Specifies the power-on capabilities of the device hardware, as one of the following flags; applicable only to motor driven ID card units. </p>
<p>
Value Meaning</p>
<p>
WFS_IDC_NOACTION  No power on actions are supported by the device</p>
<p>
WFS_IDC_EJECT  The card will be ejected on power-on (or off, see <i>fwPowerOffOption</i> below).</p>
<p>
WFS_IDC_RETAIN The card will be retained on power-on (off).</p>
<p>
WFS_IDC_EJECTTHENRETAIN The card will be ejected for a specified time on power-on (off), then retained if not taken. The time for which the card is ejected is vendor dependent.</p>
<p>
WFS_IDC_READPOSITION The card will be moved into the read position on power-on (off).</p>
<p>
 <i>fwPowerOffOption</i><BR>Specifies the power-off capabilities of the device hardware, as one of the flags specified for <i>fwPowerOnOption</i>; applicable only to motor driven ID card units.</p>
<p>
 <i>lpszExtra</i><BR>Points to a list of vendor-specific, or any other extended information. The information is returned as a series of &quot;<i>key=value&quot;</i> strings so that it is easily extensible by service providers. Each string is null-terminated, with the final string terminating with two null characters.</p>
<p>
<b>Error Codes</b> There are no additional error codes generated by this command.</p>
<p>
<b>Comments</b> Applications which require or expect specific information to be present in the <i>lpszExtra</i><b> </b>parameter may not be device or vendor-independent.</p>
</BODY>
</HTML>
