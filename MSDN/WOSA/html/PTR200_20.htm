<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>7.3 WFS_CMD_PTR_READ_FORM</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
7.3 WFS_CMD_PTR_READ_FORM</h5>
<p>
<b>Description </b>This command is used to read data from input fields on the specified form. If no media is present, the device waits for the period of time specified by the <i>dwTimeOut</i> parameter in the <b>WFSExecute </b>call for media to be inserted.</p>
<p>
<b>Input Param</b> <code>LPWFSPTRREADFORM lpReadForm;</code></p>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_ptr_read_form<BR> {<BR> LPSTR  lpszFormName;<BR> LPSTR  lpszFieldNames;<BR> LPSTR  lpszMediaName;<BR> DWORD  dwMediaControl;<BR> } WFSPTRREADFORM, * LPWFSPTRREADFORM;</FONT></pre>
<p>
 <i>lpszFormName</i><b><BR></b>Pointer to the null-terminated name of the form.</p>
<p>
 <i>lpszFieldNames</i><BR>Pointer to a list of null-terminated field names from which to read input data, with the final name terminating with two null characters. If this value is NULL, then read data from all input fields on the form.</p>
<p>
 <i>lpszMediaName</i><BR>Pointer to the null-terminated media name.</p>
<p>
 <i>dwMediaControl</i><b><BR></b>Specifies the manner in which the media should be handled and can be a combination of the bit flags described under WFS_CMD_PTR_CONTROL_MEDIA.</p>
<p>
<b>Output Param </b><code>LPSTR  lpszFields;</code></p>
<p>
 <i>lpszFields</i><BR>Pointer to a series of &quot;&lt;FieldName&gt;=&lt;FieldValue&gt;&quot; strings, where each string is null-terminated with the final string terminating with two null characters. If the field is an index field, then the syntax of the string is instead &quot;&lt;FieldName&gt;<b>[</b>&lt;index&gt;<b>]</b>=&lt;FieldValue&gt;&quot;, where &lt;index&gt; specifies the zero-based element of the index field.</p>
<p>
<b>Error Codes</b> The following additional error codes can be generated by this command:</p>
<p>
Value Meaning</p>
<p>
WFS_ERR_PTR_READNOTSUPPORTED The device has no read capability.</p>
<p>
WFS_ERR_PTR_FORMNOTFOUND The specified form cannot be found.</p>
<p>
WFS_ERR_PTR_FORMINVALID The specified form definition is invalid.</p>
<p>
WFS_ERR_PTR_MEDIANOTFOUND The specified media definition cannot be found.</p>
<p>
WFS_ERR_PTR_MEDIAINVALID The specified media definition is invalid.</p>
<p>
WFS_ERR_PTR_MEDIASKEWED The media skew exceeded the limit in the form definition.</p>
<p>
WFS_ERR_PTR_FIELDSPECFAILURE The syntax of the <i>lpszFieldNames</i> member is invalid.</p>
<p>
WFS_ERR_PTR_FIELDERROR An error occurred while processing a field, causing termination of the print request. An execute event WFS_EXEE_PTR_FIELDERROR is posted with the details.</p>
<p>
<b>Events  </b>The following additional events can be generated by this command:</p>
<p>
Value Meaning</p>
<p>
WFS_EXEE_PTR_NOMEDIA No media is present in the device.</p>
<p>
WFS_EXEE_PTR_FIELDERROR A fatal error occured while processing a field.</p>
<p>
WFS_EXEE_PTR_FIELDWARNING A non-fatal error occured while processing a field.</p>
<p>
WFS_EXEE_PTR_MEDIAINSERTED Media has been inserted into the device.</p>
<p>
<b>Comments </b>All error codes (except WFS_ERR_PTR_NOMEDIAPRESENT) and events listed under the WFS_CMD_PTR_CONTROL_MEDIA command description can also occur on this command<b>.</b></p>
</BODY>
</HTML>
