<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5. Command Overview</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h4>
5. Command Overview</h4>
<dl>
<dt>
The basic operation of the print devices is managed using the <b>WFSGetInfo/WFSAsyncGetInfo</b> and <b>WFSExecute/WFSAsyncExecute</b> functions, with two primary commands:</dt>
<dd>
<b>WFS_INF_PTR_QUERY_FORM <BR></b>This command retrieves the form header information, and the list of fields. It is performed using <b>WFSGetInfo</b>, which means that it can be performed even when the service is locked by another user.<p>
<b>WFS_CMD_PTR_PRINT_FORM <BR></b>This command is performed using <b>WFSExecute</b>, and includes as parameter data the name of the form to select and the required field data values. </p>
</dd>
</dl>
<p>
This approach combines in the most efficient manner the four logical steps required to print a form:</p>
<ul>
<li>
Selecting a document form object<p>
</li>
<li>
Querying the service for the list of fields<p>
</li>
<li>
Supplying the data for each field<p>
</li>
<li>
Issuing the print command</li>
</ul>
<p>
By using a <b>WFSGetInfo</b> command for retrieval of the list of field names, rather than <b>WFSExecute</b> (which is blocked when the service is locked by another application), it is possible for an application to assemble the required set of fields for a form before locking the service. This minimizes the time that each application request ties up the service. Using <b>WFSGetInfo</b>, it is also possible to query the attributes of a particular field. This command is generally not required for most applications.</p>
<p>
The combination of form selection, field value presentation, and the print action into an atomic command -- the <b>WFSExecute: </b>WFS_CMD_PTR_PRINT_FORM command -- makes it possible to express a complete print operation with one API call. This implementation allows an application to perform a print operation without locking and subsequently unlocking the service (although locking may still be desirable for other reasons). To do multiple print operations without allowing other applications to intersperse their print requests, it is still necessary to use the lock functions. Where these multiple print functions represent a series of passbook lines (using the INDEX capability in the field definition), the <b>WFSExecute: </b>WFS_CMD_PTR_PRINT_FORM command provides support for management of the print line number. Note that if a form contains a tabular field (i.e., one with a non-zero INDEX value), and data is not supplied for some of the lines in the “table,” then those lines are left blank. </p>
<p>
Finally, for printers with the capability to read from a passbook (OCR, MICR and/or magnetic stripe), the data is read with the <b>WFSExecute: </b>WFS_CMD_PTR_READ_FORM command. The data is written using the <b>WFSExecute: </b>WFS_CMD_PTR_PRINT_FORM command. Since these devices are usable only for passbook operations, they are not defined as separate logical devices.</p>
</BODY>
</HTML>
