<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.10 WFS_CMD_PIN_GET_PINBLOCK</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
4.10 WFS_CMD_PIN_GET_PINBLOCK</h5>
<p>
<b>Description</b> This function takes the account information and a PIN entered by the user to build a formatted PIN. Encrypting this formatted PIN once or twice returns a PIN block which can be written on a magnetic card or sent to a host. The PIN block can be calculated using one of the formats specified in the WFS_INF_PIN_CAPABILITIES command.  This command clears the PIN.</p>
<p>
<b>Input Param </b><code>LPWFSPINBLOCK lpPinBlock;</code></p>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_pin_block<BR> {<BR> LPSTR   lpsCustomerData;<BR> LPSTR   lpsXORData;<BR> BYTE   bPadding;<BR> WORD   wFormat;<BR> LPSTR   lpsKey;<BR> LPSTR   lpsKeyEncKey;<BR> } WFSPINBLOCK, * LPWFSPINBLOCK;</FONT></pre>
<p>
 <i>lpsCustomerData</i><BR>Used for ANSI, ISO-0 and ISO-1 algorithm to build the formatted PIN. For ANSI and ISO-0 the PAN (Primary Account Number) is used, for ISO-1 a ten digit transaction field is required. If not used a NULL is required.<BR>Used for DIEBOLD with coordination number, as a two digit coordination number.</p>
<p>
 <i>lpsXORData</i><BR>If the formatted PIN is encrypted twice to build the resulting PIN block, this data can be used to modify the result of the first encryption by an XOR-operation.</p>
<p>
 <i>bPadding</i><BR>Specifies the padding character.</p>
<p>
 <i>wFormat</i><BR>Specifies the format of the PIN block. Possible values are:<BR>(see command WFS_INF_PIN_CAPABILITIES)</p>
<p>
 <i>lpsKey</i><BR>Specifies the key used to encrypt the formatted pin for the first time, NULL if no encryption is required.</p>
<p>
 <i>lpsEncKey</i><BR>Specifies the key used to format the once encrypted formatted PIN, NULL if no second encryption required.</p>
<p>
<b>Output Param</b> <code>LPWFSXDATA lpxPinBlock;</code></p>
<p>
 <i>lpxPinBlock</i><BR>Pointer to the encrypted/decrypted data.</p>
<p>
<b>Error Codes</b> The following additional error codes can be generated by this command:</p>
<p>
Value Meaning</p>
<p>
WFS_ERR_PIN_KEYNOTFOUND The specified key was not found</p>
<p>
WFS_ERR_PIN_KEYNOVALUE The specified key is not loaded.</p>
<p>
WFS_ERR_PIN_USEVIOLATION The specified use is not supported by this key.</p>
<p>
WFS_ERR_PIN_MODENOTSUPPORTED The specified mode is not supported.</p>
<p>
WFS_ERR_PIN_ACCESSDENIED The encryption module is either not initialized or not ready for any vendor specific reason.</p>
<p>
WFS_ERR_PIN_NOPIN PIN has been cleared.</p>
<p>
<b>Events </b>The following additional events can be generated by this command:</p>
<p>
Value Meaning</p>
<p>
WFS_SRVE_PIN_ILLEGAL_KEY_ACCESS An error occured accessing an encryption key.</p>
<p>
<b>Comments</b> None.</p>
</BODY>
</HTML>
