<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5.  Pragmatics of using the commands*^</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h3>
5.  Pragmatics of using the commands</h3>
<p>
This section discusses how the <b>WFSExecute</b> commands above map to the variety of check readers used in branch banking.</p>
<p>
Small hand-held devices which contain only a MICR or an OCR reader, and through which checks are manually swiped, will normally be managed using only the WFS_CMD_CHK_READ_FORM command.  Applications written for such devices can make sure that the check readers to which they are configured to attach are suitable by using the WFS_INF_CHK_CAPABILITIES command in <b>WFSGetInfo</b> to make sure that <i>fAutoFeed</i> is FALSE, <i>nPockets</i> is zero, and so on.</p>
<p>
Applications written for table-top check readers with autofeed and/or sorting capability should ensure that the services to which they connect have the appropriate capabilities.  The error WFS_ERR_UNSUPP_CATEGORY will be returned if the service does not have these capabilities.  In many cases, the applications for such devices will have to run on the workstation to which the check reader is directly attached in order that the commands be able to keep up with the track through which the checks are moving.</p>
</BODY>
</HTML>
