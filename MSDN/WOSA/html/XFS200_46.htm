<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.15 WFSIsBlocking</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
4.15 WFSIsBlocking</h5>
<p>
<b>BOOL WFSIsBlocking</b>( )</p>
<p>
Determines whether a thread has a blocking operation in progress.</p>
<p>
<b>Parameters</b> None</p>
<p>
<b>Return Value</b> The return value is TRUE if a blocking operation is in progress and FALSE otherwise.</p>
<p>
<b>Mode</b> Immediate</p>
<p>
<b>Comments </b>Although a call issued on a synchronous (blocking) function appears to an application as though it blocks, the XFS Manager in fact relinquishes control of the processor to allow other Windows processes to run.  Thus it is possible for an application that issues a blocking call to be re-entered, depending on the messages it receives.  Since the XFS Manager prohibits more than one outstanding blocking call per thread, an application's message processing routines need a way to determine whether they have been re-entered while the application is waiting for an outstanding blocking call to complete.  The <b>WFSIsBlocking</b> function provides this function, allowing an application to detect whether a blocking operation is already in progress, before it issues another WOSA/XFS request. </p>
<p>
 Note that if another WOSA/XFS call <b><i>is</i></b> issued in this situation, the XFS Manager returns with a WFS_ERR_OP_IN_PROGRESS error code.  See Section 3.12 for additional discussion.</p>
<p>
<b>See also WFSCancelBlockingCall</b></p>
</BODY>
</HTML>
