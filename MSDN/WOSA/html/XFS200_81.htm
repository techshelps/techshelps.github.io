<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>7. Configuration Functions</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h4>
7. Configuration Functions</h4>
<p>
See Section 3.7 for the overall discussion of configuration information.  The configuration functions are used by service providers and applications to write and retrieve the configuration information for a WOSA/XFS subsystem, which is stored in a hierarchical structure called the <u>XFS configuration registry</u>.  The structure and the functions are based on the Win32 Registry architecture and API functions, and are implemented in Windows NT and future versions of Windows using the Registry and the associated functions.  For Win32s-based implementations on Windows 3.1 and Windows for Workgroups, a subset of the functionality described here will be available; see the SDK for the definition of this subset.</p>
<p>
The logical structure of the configuration information is shown below.</p>
<p>
The XFS Manager key has the following optional values:</p>
<ul>
<li>
<u>TraceFile</u> the name of the file containing trace data. If this value is not set in the  configuration, trace data is written to the default file path\name  C:\XFSTRACE.LOG.<p>
</li>
<li>
<u>ShareFilename</u> the name of the memory mapped file used by the memory management functions  of the XFS Manager.<p>
</li>
<li>
<u>ShareFilesize</u> the size of the memory mapped file used by the memory management functions  of the XFS Manager.</li>
</ul>
<ol>
</ol>
<p>
Some additional values could be also defined in the WOSA/XFS SDK release notes. Please refer to the related document for more information.</p>
<p>
A logical service key has three <u>mandatory values</u>:</p>
<ul>
<li>
<u>class</u> the service class of the logical service. The standard values are described in the Service Class Definition Document and in  the service class include files.<p>
</li>
<li>
<u>type</u> the service type of the logical service; the standard values are in the SDK<p>
</li>
<li>
<u>provider</u> the name of the service provider that provides the logical service <BR>    (the key name of the corresponding service provider key)</li>
</ul>
<p>
A service provider key also has three mandatory values:</p>
<ul>
<li>
<u>dllname</u> the name of the file containing the service provider DLL<p>
</li>
<li>
<u>vendor_name</u> the name of the supplier of this service provider<p>
</li>
<li>
<u>version</u> the version number of this service provider</li>
</ul>
<table>
<tr valign=top>
<td>
<b>WOSA/XFS Registry Root</b></td>
<td>
<b>Second Level Keys</b></td>
<td>
<b>Third Level Keys</b></td>
<td>
<b>Values</b></td>
</tr>
</table>
<h5>WOSA/XFS_ROOT</h5>
<p>
<b> XFS_MANAGER</b></p>
<p>
<b>   </b>TraceFile=&lt;path-name&gt;\&lt;trace-file-   name&gt;</p>
<p>
   ShareFilename=&lt;path-name&gt;\     &lt;share-file-name&gt;</p>
<p>
   ShareFilesize=&lt;file size in bytes&gt;</p>
<p>
<b> </b></p>
<p>
<b> LOGICAL_SERVICES </b> </p>
<p>
<b>  &lt;Logical Service Name&gt;</b> </p>
<p>
<b>  </b> class=&lt;service class&gt;</p>
<p>
<b>  </b> type=&lt;service type&gt;</p>
<p>
<b>  </b> provider=&lt;provider name&gt;</p>
<p>
<b>  </b> &lt; optional values &gt;</p>
<p>
 </p>
<p>
<b> SERVICE_PROVIDERS </b> </p>
<p>
<b>  &lt;Provider Name&gt;</b> </p>
<p>
   dllname=&lt; DLL name&gt;</p>
<p>
   vendor_name=&lt;vendor name&gt;</p>
<p>
   version=&lt;version&gt;</p>
<p>
   &lt; optional values &gt;</p>
<p>
<b> &lt; other keys &gt; </b> </p>
</BODY>
</HTML>
