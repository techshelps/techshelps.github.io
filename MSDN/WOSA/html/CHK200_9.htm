<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.2  WFS_CMD_CHK_MULTICOMMAND</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h4>
4.2  WFS_CMD_CHK_MULTICOMMAND</h4>
<p>
<b>Description</b></p>
<p>
This function is used to encode the amount field of the check, optionally stamp and endorse the check, and select a pocket to which the check will be sorted if the device supports these capabilities.</p>
<dl>
<dt>
<b>Input Param</b></dt>
<dd>
<pre><FONT FACE="COURIER NEW" SIZE=2>LPWFSCHKMULTICOMMAND
typedef struct _wfs_in_multicommand
     {
     WORD      hDoc;     
     DWORD     dwOptions;
     BYTE    . pocket;
     LPSTR     lpszEncodeFormName;
     LPSTR     lpszEncodeFields;
     LPSTR     lpszEndorserFormName;
     LPSTR     lpszEndorserFields;
     LPSTR     lpszExtra;
     } WFSCHKMULTICOMMAND, * LPWFSCHKMULTICOMMAND;</FONT></pre>
</dd>
</dl>
<p>
<b><i>hDoc</i></b></p>
<p>
handle to the check to be processed; NULL means &quot;current&quot; check.</p>
<p>
<b><i>dwOptions</i></b></p>
<p>
Command options, as a combination of the following flags:<BR>WFS_CHK_OPTSTAMPFRONT<BR>WFS_CHK_OPTSTAMPBACK<BR>WFS_CHK_OPTENDORSEFRONT<BR>WFS_CHK_OPTENDORSEBACK<BR>WFS_CHK_OPTSORTONLY<BR>WFS_CHK_OPTTAKEIMAGE</p>
<p>
<b><i>pocket</i></b></p>
<p>
Ignored if no sorter present.</p>
<p>
<b><i>lpszEncodeFormName</i></b></p>
<p>
Name of form defining encoder fields.</p>
<p>
<b><i>lpszEncodeFields</i></b></p>
<p>
List of fieldname/value pairs for encoder.</p>
<p>
<b><i>lpszEndorserFormName</i></b></p>
<p>
Name of form defining endorser fields.</p>
<p>
<b><i>lpszEndorserFields</i></b></p>
<p>
List of fieldname/value pairs for endorser.</p>
<p>
<b><i>lpszExtra</i></b></p>
<p>
Points to a list of vendor-specific, or any other extended information.  The information is returned as a series of  “<i>key=value</i>” strings so that it is easily extensible by service providers.  Each string is null-terminated, with the final string terminating with two null characters.</p>
<p>
<b>Output Param</b></p>
<p>
None.</p>
<p>
<b>Error Codes</b></p>
<p>
The following additional error codes can be generated by this command:</p>
<table>
<tr valign=top>
<td>
<b>Value</b></td>
<td>
<b>Meaning</b></td>
</tr>
<tr valign=top>
<td>
WFS_ERR_CHK _FORMNOTFOUND</td>
<td>
Invalid form name.</td>
</tr>
<tr valign=top>
<td>
WFS_ERR_CHK _FIELDNOTFOUND</td>
<td>
Invalid field name.</td>
</tr>
<tr valign=top>
<td>
WFS_ERR_CHK _REQDFIELDMISSING</td>
<td>
A field required by the form is not supplied.</td>
</tr>
<tr valign=top>
<td>
WFS_ERR_CHK _EXTRAFIELD</td>
<td>
A field supplied by the application does not exist in this form (warning).</td>
</tr>
<tr valign=top>
<td>
WFS_ERR_CHK _FIXEDOVERWRITE</td>
<td>
The application passed a field which is marked as fixed in the form description (warning).</td>
</tr>
<tr valign=top>
<td>
WFS_ERR_CHK _FIELDSPECFAILURE</td>
<td>
The syntax of the <i>lpszFields</i> member is invalid.</td>
</tr>
<tr valign=top>
<td>
WFS_ERR_CHK _UNSUPPORTEDCAP</td>
<td>
The service does not have a capability requested in this command (i.e. a pocket sort was requested on a device with zero pockets).  This is a warning; the requested capability is ignored.</td>
</tr>
</table>
<p>
<b>Execute Events</b></p>
<table>
<tr valign=top>
<td>
WFS_EXEE_CHK _NOMEDIA</td>
<td>
No check has been inserted in the (manual mode) check reader.</td>
</tr>
<tr valign=top>
<td>
WFS_EXEE_CHK _MEDIAINSERTED</td>
<td>
A check was inserted; this is only issued following the above event.</td>
</tr>
</table>
<p>
<b>Comments</b></p>
<dl>
<dt>
The contents of the <i>lpszFields</i> parameter is as follows:</dt>
<dd>
<pre><FONT FACE="COURIER NEW" SIZE=2>fieldname=value\<b>0</b>fieldname=value\<b>0</b>.......fieldname=value\<b>0</b>\<b>0</b></FONT></pre>
</dd>
</dl>
<p>
Each <i>fieldname</i>=<i>value</i> pair is terminated with a NULL; the end of the buffer is marked with an additional NULL.</p>
<p>
If an extra field is passed to the command verb a warning message will be returned.  If a required field is missing an error message is returned and the form is not printed.  Missing optional fields don't cause a problem.  Overwriting of a fixed field results in an error and the print operation does not occur.</p>
<p>
The <i>lpszEncodeFormName</i> parameter should be the same as the form name used previously to read the encode line with WFS_CMD_CHK_READ_FORM.  Results are unpredictable if a different form name is used.</p>
</BODY>
</HTML>
