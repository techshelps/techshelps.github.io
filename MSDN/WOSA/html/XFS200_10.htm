<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.1 The XFS Manager</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
3.1 The XFS Manager</h5>
<p>
The XFS Manager provides overall management of the WOSA/XFS subsystem.  The XFS Manager is responsible for mapping the API (<b>WFS...</b>) functions to SPI (<b>WFP...</b>) functions, and calling the appropriate vendor-specific service providers.  Note that the calls are <b><i>always</i></b> to a local service provider.  </p>
<p>
The XFS Manager determines which service provider to call using the logical name parameter of the WFSOpen or WFSAsyncOpen function.  The logical name is the key providing access to the configuration information that defines the Service Class (e.g., printer, cash dispenser, etc.), the Service Type (e.g., receipt printer, journal printer, etc.) and the Service Provider (DLL file name), as well as additional information.  The logical name must be unique at least within each workstation.  See Sections 3.7 and 7 for discussions of configuration information access and management.</p>
<p>
The XFS Manager also provides the <u>Support Functions</u><i> </i>(<b>WFM...</b>) defined in Section 6 and the <u>Configuration Functions</u> (also <b>WFM...</b>) defined in Section 7. </p>
<p>
Before an application is allowed to utilize any of the services managed by the WOSA/XFS subsystem, it must first identify itself to the subsystem.  This is accomplished using the <b>WFSStartUp</b> function.  An application is only required to perform this function once, regardless of the number of WOSA/XFS services it utilizes, so this function would typically be called during application initialization.  Similarly, the complementary function, <b>WFSCleanUp</b>, is typically called during application shutdown.  If an application exits or is shut down without issuing the <b>WFSCleanUp</b> function, the XFS Manager does the cleanup automatically, including the closing of any sessions with service providers the application has left open.</p>
</BODY>
</HTML>
