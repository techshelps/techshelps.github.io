<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.8 WFS_CMD_IDC_WRITE_RAW_DATA</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
4.8 WFS_CMD_IDC_WRITE_RAW_DATA</h5>
<p>
<b>Description</b> For motor-driven card readers, the ID card unit checks whether a card has been inserted. If so, the data is written to the tracks.</p>
<p>
 If no card has been inserted, and for all other categories of devices, the ID card unit waits for the period of time specified in the <b>WFSExecute</b> call for a card to be either inserted or pulled through. The next step is writing the data to the respective tracks.</p>
<p>
 The application must pass the magnetic stripe data in ASCII without any sentinels. The data will be converted by the service provider.</p>
<p>
 This procedure is followed by data verification.</p>
<p>
<b>Input Param </b><code>LPWFSIDCCARDDATA</code> *<code>lppCardData;</code><BR>Pointer to a null-terminated array of pointers to card data structures:</p>
<pre><FONT FACE="COURIER NEW" SIZE=2>struct _wfs_idc_card_data<BR> {<BR> WORD   wDataSource;<BR> WORD   wStatus;<BR> ULONG   ulDataLength;<BR> LPBYTE   lpbData;<BR> } WFSIDCCARDDATA, * LPWFSIDCCARDDATA;</FONT></pre>
<p>
<i>wDataSource</i></p>
<p>
Specifies the source of the card data as one of the following flags:</p>
<p>
Value Meaning</p>
<p>
WFS_IDC_TRACK1 <i>lpbData</i> contains data to be written to track 1.</p>
<p>
WFS_IDC_TRACK2 <i>lpbData</i> contains data to be written to track 2.</p>
<p>
WFS_IDC_TRACK3 <i>lpbData</i> contains data to be written to track 3.</p>
<p>
<i>wStatus<BR></i>This parameter is ignored by this command.</p>
<p>
<i>ulDataLength</i></p>
<p>
Specifies the length of the following field <i>lpbData</i>.</p>
<p>
<i>lpbData</i></p>
<p>
Points to the data to be written to the track.</p>
<p>
<b>Output Param</b> None.</p>
<p>
<b>Error Codes </b>The following additional error codes can be generated by this command:</p>
<p>
Value Meaning</p>
<p>
WFS_ERR_IDC_MEDIAJAM The card is jammed. Operator intervention is required.</p>
<p>
WFS_ERR_IDC_SHUTTERFAIL The open of the shutter failed due to manipulation or hardware error. Operator intervention is required</p>
<p>
WFS_ERR_IDC_NOMEDIA The card was  removed before completion of the write action.</p>
<p>
WFS_ERR_IDC_INVALIDMEDIA No track found; card may have been inserted or pulled through the wrong way.</p>
<p>
<b>Events</b> The following additional events can be generated by this command:</p>
<p>
Value Meaning</p>
<p>
WFS_EXEE_IDC_MEDIAINSERTED This event is generated when a card is detected in the device, giving early warning of card entry to an application, allowing it to remove a user prompt and/or do other processing while the card is being written.</p>
<p>
WFS_SRVE_IDC_MEDIAREMOVED This event is generated when a card is removed before completion of a write operation.</p>
<p>
WFS_EXEE_IDC_INVALIDMEDIA The user is attempting to insert the media in the wrong orientation. The card has not been accepted into the device. The device is still ready to accept a card inserted in the correct orientation.</p>
<p>
<b>Comments </b>This is a fundamental capability of an ID card unit; thus if a write request is received by a device with no write capability, the WFS_ERR_UNSUPP_COMMAND error is returned.</p>
</BODY>
</HTML>
