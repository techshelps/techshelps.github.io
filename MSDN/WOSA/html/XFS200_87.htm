<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>7.6 WFMEnumValue</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
7.6 WFMEnumValue</h5>
<p>
<b>HRESULT  WFMEnumValue </b>(<i> hKey, iValue, lpszValue, lpcchValue, lpszData, lpcchData</i> )</p>
<p>
Enumerates the values of the specified open key.  Retrieves the name and data for one value each time it is called.</p>
<p>
<b>Parameters</b> <b>HKEY  </b><i>hKey</i></p>
<p>
Handle to a currently open key, or the predefined handle value:<BR> WFS_CFG_HKEY_XFS_ROOT<BR>The value enumerated by this function is a value of the key identified by this parameter.</p>
<p>
 <b>DWORD   </b><i>iValue</i> </p>
<p>
The index of the value to retrieve.  This parameter should be zero for the first call to this function, then incremented for each subsequent call, in order to enumerate all the values of the specified open key.</p>
<p>
Because values are not ordered, any new value will have an arbitrary index.  This means that the function may return values in any order.</p>
<p>
 <b>LPSTR   </b><i>lpszValue</i> </p>
<p>
Pointer to a buffer that receives the name of the value, including the terminating null character.</p>
<p>
<i> </i><b>LPDWORD </b> <i>lpcchValue</i></p>
<p>
Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpszValue</i> parameter.  This size should include the terminating null character.  When the function returns, this variable contains the the number of characters actually stored in the buffer, <b><i>not</i></b> including the terminating null character.</p>
<p>
 <b>LPSTR   </b><i>lpszData</i> </p>
<p>
Pointer to a buffer that receives the data for the value entry, including the terminating null character.  This parameter can be NULL, if the data is not required.</p>
<p>
<i> </i><b>LPDWORD </b> <i>lpcchData</i></p>
<p>
Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpszData</i> parameter, including the terminating null character.  When the function returns, this variable contains the the number of characters actually stored in the buffer, <b><i>not</i></b> including the terminating null character.  Ignored if <i>lpszData</i> is NULL.</p>
<p>
<b>Comments</b> While a program is using this function iteratively, it should not call any other configuration functions that would change the key being queried. </p>
<p>
<b>Error Codes</b> If the function return is not WFS_SUCCESS, it is one of the following error conditions.  </p>
<dl>
<dt>
WFS_ERR_CFG_INVALID_HKEY</dt>
<dd>
The specified <i>hKey</i> parameter does not correspond to a currently open key.<br>
</dd>
<dt>
WFS_ERR_CFG_NO_MORE_ITEMS</dt>
<dd>
There are no more values to be returned (the <i>iValue</i> parameter is greater than the index of the last value).<br>
</dd>
<dt>
WFS_ERR_CFG_NAME_TOO_LONG</dt>
<dd>
The length of the name to be returned exceeds the length of the buffer.<br>
</dd>
<dt>
WFS_ERR_CFG_VALUE_TOO_LONG</dt>
<dd>
The length of the value to be returned exceeds the length of the buffer.<br>
</dd>
<dt>
WFS_ERR_INVALID_POINTER</dt>
<dd>
A pointer parameter does not point to accessible memory.</dd>
</dl>
</BODY>
</HTML>
