<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.19 WFSAsyncOpen </TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
4.19 WFSAsyncOpen </h5>
<p>
<b>HRESULT WFSAsyncOpen</b>( <i>lpszLogicalName, hApp, lpszAppID, dwTraceLevel, dwTimeOut, lphService, hWnd, dwSrvcVersionsRequired, lpSrvcVersion, lpSPIVersion, lpRequestID</i> )</p>
<p>
Initiates a <u>session</u> (a series of service requests terminated with the <b>WFSClose</b> or <b>WFSAsyncClose</b> function) between the application and the specified service.  The asynchronous version of <b>WFSOpen.</b></p>
<p>
<b>Parameters</b> <b>LPSTR   </b><i>lpszLogicalName</i></p>
<p>
See <b>WFSOpen</b>.  </p>
<p>
 <b>HAPP   </b><i>hApp </i></p>
<p>
The application handle to be associated with the session being opened.  <BR>See <b>WFSOpen</b>, <b>WFSCreateAppHandle</b> and Sections 3.5 and 3.8.2 for details.</p>
<p>
 <b>LPSTR   </b><i>lpszAppID</i></p>
<p>
Points to a null-terminated string containing the application ID.  See <b>WFSOpen.</b></p>
<p>
 <b>DWORD   </b><i>dwTraceLevel</i></p>
<p>
See <b>WFMSetTraceLevel</b>.  NULL turns off all tracing.</p>
<p>
 <b>DWORD   </b><i>dwTimeOut</i></p>
<p>
Number of milliseconds to wait for completion (WFS_INDEFINITE_WAIT to specify a request that will wait until completion).</p>
<p>
<i> </i><b>LPHSERVICE   </b><i>lphService</i></p>
<p>
Pointer to the service handle (returned parameter).</p>
<p>
<i> </i><b>HWND   </b><i>hWnd</i></p>
<p>
The window handle which is to receive the completion message for this request.</p>
<p>
 <b>DWORD   </b><i>dwSrvcVersionsRequired</i></p>
<p>
See <b>WFSOpen.</b></p>
<p>
 <b>LPWFSVERSION</b>   <i>lpSrvcVersion</i></p>
<p>
See <b>WFSOpen</b> (returned parameter).</p>
<p>
 <b>LPWFSVERSION</b>   <i>lpSPIVersion</i></p>
<p>
See <b>WFSOpen </b>(returned parameter).</p>
<p>
<b> LPREQUESTID   </b><i>lpRequestID</i></p>
<p>
Pointer to the request identifier for this request (returned parameter).</p>
<p>
<b>Mode</b> Asynchronous</p>
<p>
<b>Comments</b> See <b>WFSOpen</b>.</p>
<p>
 The application <b><i>must</i></b> call <b>WFSFreeResult</b> to deallocate the WFSRESULT data structure which is pointed to by the completion message.  Note that a WFSRESULT structure may be returned even if the function completes with an error; see Section 3.13.</p>
<p>
<b>Messages </b>WFS_OPEN_COMPLETE </p>
<p>
<b>Error Codes</b> If the function return is not WFS_SUCCESS, it is one of the following error conditions, indicating that the asynchronous operation was not initiated:</p>
<dl>
<dt>
WFS_ERR_CONNECTION_LOST</dt>
<dd>
The connection to the service is lost.<br>
</dd>
<dt>
WFS_ERR_INTERNAL_ERROR </dt>
<dd>
An internal inconsistency or other unexpected error occurred in the WOSA/XFS subsystem. <br>
</dd>
<dt>
WFS_ERR_INVALID_APP_HANDLE </dt>
<dd>
The specified application handle is not valid, i.e., was not created by a preceding create call. <br>
</dd>
<dt>
WFS_ERR_INVALID_HWND</dt>
<dd>
The <i>hWnd</i> parameter is not a valid window handle.<br>
</dd>
<dt>
WFS_ERR_INVALID_POINTER</dt>
<dd>
A pointer parameter does not point to accessible memory.<br>
</dd>
<dt>
WFS_ERR_INVALID_SERVPROV</dt>
<dd>
The file containing the service provider is invalid or corrupted.<br>
</dd>
<dt>
WFS_ERR_INVALID_TRACELEVEL</dt>
<dd>
The <i>dwTraceLevel</i> parameter does not correspond to a valid trace level or set of levels.<br>
</dd>
<dt>
WFS_ERR_NO_SERVPROV</dt>
<dd>
The file containing the service provider does not exist.<br>
</dd>
<dt>
WFS_ERR_NOT_STARTED</dt>
<dd>
The application has not previously performed a successful <b>WFSStartUp</b>.<br>
</dd>
<dt>
WFS_ERR_OP_IN_PROGRESS</dt>
<dd>
A blocking operation is in progress on the thread; only <b>WFSCancelBlockingCall</b> and <b>WFSIsBlocking</b> are permitted at this time.<br>
</dd>
<dt>
WFS_ERR_SERVICE_NOT_FOUND</dt>
<dd>
The logical name is not a valid service provider name.<br>
</dd>
<dt>
WFS_ERR_SPI_VER_TOO_HIGH</dt>
<dd>
The range of versions of WOSA/XFS SPI support requested by the XFS Manager is higher than any supported by the service provider for the logical service being opened.<br>
</dd>
<dt>
WFS_ERR_SPI_VER_TOO_LOW</dt>
<dd>
The range of versions of WOSA/XFS SPI support requested by the a XFS Manager is lower than any supported by the service provider for the logical service being opened.<br>
</dd>
<dt>
WFS_ERR_SRVC_VER_TOO_HIGH</dt>
<dd>
The range of versions of the service-specific interface support requested by the application (in the <i>dwSrvcVersionsRequired</i> parameter of this call) is higher than any supported by the service provider for the logical service being opened.<br>
</dd>
<dt>
WFS_ERR_SRVC_VER_TOO_LOW</dt>
<dd>
The range of versions of the service-specific interface support requested by the application (in the <i>dwSrvcVersionsRequired</i> parameter of this call) is lower than any supported by the service provider for the logical service being opened.<br>
</dd>
<dt>
WFS_ERR_VERSION_ERROR_IN_SRVC</dt>
<dd>
Within the service, a version mismatch of two modules occurred.</dd>
</dl>
<p>
The following error conditions are returned via the asynchronous command completion message, as the <i>hResult</i> from the WFSRESULT structure.  Any service-specific errors that can be returned are defined in the specifications for each service class.</p>
<dl>
<dt>
WFS_ERR_CANCELED</dt>
<dd>
The request was canceled by <b>WFSCancelAsyncRequest</b>.<br>
</dd>
<dt>
WFS_ERR_DEV_NOT_READY </dt>
<dd>
The function required device access, and the device was not ready timed out. <br>
</dd>
<dt>
WFS_ERR_INTERNAL_ERROR </dt>
<dd>
An internal inconsistency or other unexpected error occurred in the WOSA/XFS subsystem. <br>
</dd>
<dt>
WFS_ERR_HARDWARE_ERROR </dt>
<dd>
The function required device access, and an error occured on the device. <br>
</dd>
<dt>
WFS_ERR_SOFTWARE_ERROR </dt>
<dd>
The function required access to configuration information, and an error occured on the software.<br>
</dd>
<dt>
WFS_ERR_TIMEOUT</dt>
<dd>
The timeout interval expired.<br>
</dd>
<dt>
WFS_ERR_VERSION_ERROR_IN_SRVC</dt>
<dd>
Within the service, a version mismatch of two modules occurred.</dd>
</dl>
<p>
<b>See also WFSOpen, WFSClose, WFSCreateAppHandle, WFSCancelAsyncRequest, WFMSetTraceLevel</b></p>
</BODY>
</HTML>
