<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.22 WFSSetBlockingHook</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
4.22 WFSSetBlockingHook</h5>
<p>
<b>HRESULT WFSSetBlockingHook</b>( <i>lpBlockFunc, lppPrevFunc</i> )</p>
<p>
Establishes an application-specific blocking routine.</p>
<p>
<b>Parameters</b> <b>XFSBLOCKINGHOOK</b> <i>lpBlockFunc</i></p>
<p>
Pointer to the procedure instance address of the blocking routine to be installed.</p>
<p>
 <b>LPXFSBLOCKINGHOOK </b><i>lppPrevFunc</i></p>
<p>
Returned pointer to a pointer to the procedure instance of the <b><i>previously</i></b> installed blocking routine.</p>
<p>
<b>Mode</b> Immediate</p>
<p>
<b>Comments</b> When this function is successfully issued by an application, it returns a pointer to the previously installed blocking routine.  The application may save this pointer so that it can be restored if desired.  If such “nesting” is not required, the application can discard this value and simply use the <b>WFSUnhookBlockingHook</b> function to restore the default routine at any time.</p>
<p>
 See Section 3.12 for a complete discussion.</p>
<p>
<b>Error Codes</b> If the function return is not WFS_SUCCESS, it is one of the following error conditions:</p>
<dl>
<dt>
WFS_ERR_INTERNAL_ERROR </dt>
<dd>
An internal inconsistency or other unexpected error occurred in the WOSA/XFS subsystem. <br>
</dd>
<dt>
WFS_ERR_NOT_STARTED</dt>
<dd>
The application has not previously performed a successful <b>WFSStartUp</b>.<br>
</dd>
<dt>
WFS_ERR_OP_IN_PROGRESS</dt>
<dd>
A blocking operation is in progress on the thread; only <b>WFSCancelBlockingCall</b> and <b>WFSIsBlocking</b> are permitted at this time.<br>
</dd>
<dt>
WFS_ERR_INVALID_POINTER</dt>
<dd>
A pointer parameter does not point to accessible memory.</dd>
</dl>
<p>
<b>See also WFSUnhookBlockingHook, WFSCancelBlockingCall, WFSIsBlocking</b></p>
</BODY>
</HTML>
