<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.3.2 Synchronous Functions</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
3.3.2 Synchronous Functions</h5>
<p>
<u>Synchronous mode</u> is also used when an operation can take an indeterminate amount of time to complete, but the application wishes to handle the function in a sequential manner.  The XFS Manager does not return control to the application until the operation has completed, thus synchronous functions are referred to as <u>blocking</u>. Each synchronous call made by an application is translated by the XFS Manager into its asynchronous SPI counterpart before being passed to the service provider.  </p>
<p>
If a blocking operation is not completed immediately in a Windows 3.x system, the XFS Manager executes a Windows message loop on behalf of the calling thread, thereby keeping the Windows system running.  See Section 3.12 for a more detailed discussion of process, threads and message loops.  In Windows NT, the calling application thread is blocked on request completion.  A thread may have only <b><i>one</i></b> blocking WOSA/XFS call outstanding at any one time.  See Section 3.12 for additional discussion of the management of synchronous functions, including replacement of the default message loop.</p>
<p>
The processing of a synchronous request (e.g., <b>WFSExecute) </b>is as follows: </p>
<ul>
<li>
The application calls the XFS Manager.<p>
</li>
<li>
The XFS Manager translates the request into an asynchronous SPI, generates a <i>RequestID</i> to track the request, provides its own window handle to receive the completion message, and calls the service provider DLL.<p>
</li>
<li>
The service provider schedules the request for deferred processing and immediately returns to the XFS Manager.<p>
</li>
<li>
The XFS Manager simulates synchronous processing as described above and in Section 3.12.<p>
</li>
<li>
At some point, the service provider processes the deferred request.<p>
</li>
<li>
On completion, the service provider posts a completion message to the window handle specified by the XFS Manager.  The message contains a pointer to a WFSRESULT data structure defining the results of the request, including the <i>RequestID</i>, the status code and the other relevant data.  <p>
</li>
<li>
The XFS Manager unpacks the information from the completion message into the appropriate parameters, and returns them to the application, unblocking the original application request.</li>
</ul>
</BODY>
</HTML>
