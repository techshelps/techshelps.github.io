<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.9 WFS_CMD_PIN_PRESENT_IDC</TITLE>
<BODY bgcolor=white>

<FONT FACE="verdana"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<h5>
4.9 WFS_CMD_PIN_PRESENT_IDC</h5>
<p>
<b>Description</b> The PIN, which was entered with the WFS_PIN_GET_PIN command, is combined with the requisite data specified by the IDC presentation algorithm and presented to the smartcard contained in the ID Card unit. The result of the presentation is returned to the application. This command will clear the PIN.</p>
<p>
<b>Input Param </b><code>LPWFSPINPRESENTIDC lpPresentIDC;</code></p>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_pin_presentidc<BR> {<BR> WORD   wPresentAlgorithm;<BR> WORD   wChipProtocol;<BR> ULONG   ulChipDataLength;<BR> LPBYTE   lpbChipData;<BR> LPVOID   lpAlgorithmData;<BR> } WFSPINPRESENTIDC, * LPWFSPINPRESENTIDC;</FONT></pre>
<p>
 <i>wPresentAlgorithm</i><BR>Specifies the algorithm that is used for presentation. Possible values are: (see command WFS_INF_PIN_CAPABILITIES).</p>
<p>
 <i>wChipProtocol</i><BR>Identifies the protocol that is used to communicate with the chip. Possible values are: (see command WFS_INF_IDC_CAPABILITIES in the Identification Card Device Class Interface).</p>
<p>
 <i>ulChipDataLength</i><BR>Specifies the length of the byte stream pointed to by <i>lpbChipData</i>.</p>
<p>
 <i>lpbChipData</i><BR>Points to the data to be sent to the chip.</p>
<p>
 <i>lpAlgorithmData<BR></i>Pointer to a structure that contains the data required for the specified presentation algorithm.<BR>For the WFS_PIN_PRESENT_CLEAR algorithm, this structure is defined as:</p>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_pin_presentclear<BR> {<BR> ULONG   ulPINPointer;<BR> USHORT   usPINOffset;<BR> } WFSPINPRESENTCLEAR, * LPWFSPINPRESENTCLEAR;</FONT></pre>
<p>
 <i>ulPINPointer</i></p>
<p>
 Describes the byte position where to insert the PIN in the <i>lpbChipData </i>buffer. The first byte of the <i>lpbChipData </i>buffer is numbered 0.</p>
<p>
 <i>usPINOffset</i></p>
<p>
 Describes the bit position where to insert the PIN in the <i>lpbChipData </i>buffer. In each byte, the most-significant bit is numbered 0, the less significant bit is numbered 7.</p>
<p>
<b>Output Param </b><code>LPWFSPINPRESENTRESULT lpPresentResult;</code></p>
<pre><FONT FACE="COURIER NEW" SIZE=2>typedef struct _wfs_pin_present_result<BR> {<BR> WORD  wChipProtocol;<BR> ULONG  ulChipDataLength;<BR> LPBYTE  lpbChipData;<BR> } WFSPINPRESENTRESULT, * LPWFSPINPRESENTRESULT;</FONT></pre>
<p>
 <i>wChipProtocol</i><BR>Identifies the protocol that was used to communicate with the chip. This field contains the same value as the corresponding field in the input structure.</p>
<p>
 <i>ulChipDataLength</i><BR>Specifies the length of the byte stream pointed to by <i>lpbChipData</i>.</p>
<p>
 <i>lpbChipData</i><BR>Points to the data responded from the chip.</p>
<p>
<b>Error Codes</b> The following additional error codes can be generated by this command:</p>
<p>
Value Meaning</p>
<p>
WFS_ERR_PIN_INVALIDDATA An error occurred while communicating with the chip.</p>
<p>
WFS_ERR_PIN_PROTOCOLNOTSUPP The specified protocol is not supported by the service provider.</p>
<p>
WFS_ERR_PIN_NOPIN PIN has not been entered or has been cleared.</p>
<p>
WFS_ERR_PIN_ACCESSDENIED The ID card unit is not ready for PIN presentation or for any vendor specific reason. The ID card service provider, if any, may have generated a service event that further describes the reason for that error code.</p>
<p>
<b>Events </b>There are no additional events generated by this command.</p>
<p>
<b>Comments</b> None.</p>
</BODY>
</HTML>
