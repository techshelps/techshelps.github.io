<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PictureClip Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbobjpicclip"></a>PictureClip Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjPicClip_C;vbobjPicClipC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjPicClip_X;vbobjPicClipX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjPicClip_P;vbobjPicClipP">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjPicClip_M;vbobjPicClipM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Events">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjPicClip_E;vbobjPicClipE">
</object></p>
<p>
The <b>PictureClip</b> control allows you to select an area of a source bitmap and then display the image of that area in a form or picture box. <b>PictureClip</b> controls are invisible at run time. This is a typical bitmap that might be used in the <b>PictureClip</b> control: </p>
<p class=label>
<b>File Name</b></p>
<p>
PICCLP32.OCX</p>
<p class=label>
<b>Class Name</b></p>
<p>
PictureClip</p>
<p class=label>
<b>Remarks</b></p>
<p>
The <b>PictureClip</b> control provides an efficient mechanism for storing multiple picture resources. Instead of using multiple bitmaps or icons, create a source bitmap that contains all the icon images required by your application. When you need to display an individual icon, use the <b>PictureClip</b> control to select the region in the source bitmap that contains that icon. </p>
<p>
For example, you could use this control to store all the images needed to display a toolbox for your application. It is more efficient to store all of the toolbox images in a single <b>PictureClip</b> control than it is to store each image in a separate picture box. To do this, first create a source bitmap that contains all of the toolbar icons. The picture at the top of this topic is an example of such a bitmap. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;For international localized applications, resource files are sometimes a more useful way to store bitmaps. For more information, refer to Chapter 16, "International Issues," in the Visual Basic <i>Programmer's Guide</i>. </p>
<p>
You can specify the clipping region in the source bitmap in one of two ways: 
<ul type=disc>
<li>
Select any portion of the source bitmap as the clipping region. Specify the upper-left corner of the clipping region using the <b>ClipX</b> and <b>ClipY</b> properties. Specify the area of the clipping region using the <b>ClipHeight</b> and <b>ClipWidth</b> properties. This method is useful when you want to view a random portion of a bitmap. <br><br></li>
<li>
Divide the source bitmap into a specified number of rows and columns. The result is a uniform matrix of picture cells numbered 0, 1, 2, and so on. You can display individual cells using the <b>GraphicCell</b> property. This method is useful when the source bitmap contains a palette of icons that you want to display individually, such as in a toolbar bitmap. </li>
</ul>
<p>
Load the source bitmap into the <b>PictureClip</b> control using the <b>Picture </b>property. You can load only bitmap (.bmp) files into the <b>PictureClip</b> control. </p>
<p class=indent>
<B><b>Distribution Note</b></B>&nbsp;&nbsp;&nbsp;When you create and distribute applications that use the <b>PictureClip</b> control, you should install PicClp32.ocx in the customer's Microsoft Windows System or System32 subdirectory. The Setup Kit included with Visual Basic provides tools to help you write setup programs that install your applications correctly. </p>
</BODY>
</HTML>
