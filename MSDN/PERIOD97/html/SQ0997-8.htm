<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A Modest Proposal: Do Metadata Early </title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<font face="verdana,arial,helvetica" size="2"><form name=x><object name=iv classid="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016">
</object></form>
<h1>A Modest Proposal: Do Metadata Early</h1>
<p>
<i>Lee Kirsten Gould</i></p>
<p>
<i>List the chores you hate most-documenting code, writing documentation, writing status reports, dealing with the version control system-and maintaining a corporate data dictionary or repository is likely to be high on your list. In this article, Lee suggests an approach that will ease the pain.</i></p>
<p>
With the growing interest in data warehouses, there's been a discernible increase in the noise level about metadata (data about data, such as that stored in the system catalog tables). Part of managing a data warehouse, or even a data mart-especially ones that assemble data from more than one source-requires handling this metadata. </p>
<p>
Despite all the hoopla about object-oriented analysis and design, most of my customers expect traditional <i>systems</i> analysis and design. I've discovered that it's least painful to add an extra step that documents the metadata early on, in the analysis phase. Let me illustrate with a simple purchasing system example.</p>
<p>
<b>Analysis phase</b></p>
<p>
In analysis, the focus is to understand the problem domain and the scope of the requirements. Here are the major areas in my hypothetical purchasing system:
<ul>
<li>
What type of goods and services are purchased?<br><br></li>
<li>
How is business transacted by the particular organization?<br><br></li>
<li>
Who are the parties involved in the transaction?<br><br></li>
<li>
What work needs to be completed in order to facilitate the transaction?<br><br></li>
<li>
How is delivery effected for the goods and services being purchased?<br><br></li>
<li>
Where are the goods and services stored, including any special considerations?<br><br></li>
<li>
How does the vendor pay for the goods and services?<p>
As part of the analysis process, a series of voluminous documents (that nobody will ever read again) details all the conclusions that the analyst reached-as well as the myriad of inaccurate assumptions that were made in order to complete the analysis. Once the documented analysis is signed off, design proceeds. Sound familiar?
<p>
Let's stop here for a moment. The information gathered in this phase is in fact <i>metadata </i>because it describes the essence of the system under construction at a very high level. The trick is to convert the conclusions from the analysis phase into suitable chunks of data that can be stored in a metadata repository. See <font face="MyriaMM_565 SB 600 NO">Figure 1</font> for a possible implementation. 
<p>
<img src="sq0997f1.gif" border=0>
<p>
<b>Figure 1. Capturing metadata for a purchasing system.</b>
<p>
If I create the sort of metadata repository depicted in Figure 1, I'll have access to an online dictionary of terminology to help me during the design phase. Furthermore, by capturing the essential information of my analysis into these metadata stores, it's possible to provide (inundate, if necessary) management with some very sophisticated and useful reports about the scope of a system being designed. I'll also have a shareable bird's-eye view of the system, which will let me and my teammates quickly determine whether we've covered all the requirements. 
<p>
<b>Design phase</b>
<p>
I tend to break the design phase into two categories: "big picture issues" and "little picture issues." Perhaps my approach will lead you to new ways of looking at system development.
<p>
<b><i>Big picture issues</i></b>
</li>
<li>
What type of database technology will be employed (relational, flat file, or object)?<br><br></li>
<li>
Which database management system will be employed (Microsoft SQL Server, Sybase, or Oracle)?<br><br></li>
<li>
What type of development platform will be used (NT, UNIX, or network)?<br><br></li>
<li>
Will this system be distributed or centralized?<br><br></li>
<li>
What development tools will be selected (C++, Java, HTML, VB, or PowerBuilder)?<br><br></li>
<li>
How many users will the system have to support?<br><br></li>
<li>
What is the budget for this system?<br><br></li>
<li>
What is the development time frame?<br><br></li>
<li>
Who will own this system for development purposes?<br><br></li>
<li>
Who will own this system for functionality and use purposes?<p>
<b><i>Little picture issues </i></b>
</li>
<li>
What is the actual structure of the underlying tables to support this system?<br><br></li>
<li>
What is the optimal way to record this information for retrieval?<br><br></li>
<li>
How is this information to be indexed?<p>
Usually, the conclusions reached during this phase are recorded using a mix of technology including documents (lots of them, right?), PowerPoint slides, spreadsheets, and presentation graphics.
<p>
However, there's a significant amount of valuable information here that <i>could</i> go into the corporate metadata repository (see <font face="MyriaMM_565 SB 600 NO">Figure 2</font>). As with the analysis phase, the problem becomes decomposing the information gathered in this process into suitable chunks to be recorded into a metadata repository.
<p>
<img src="sq0997f2.gif" border=0>
<p>
<b>Figure 2. Information from the design stage that could be added to the corporate repository or metadata store.</b>
<p>
If you use a product such as PowerBuilder's PowerDesigner (formerly Sybase's S-Designor), the metadata of the underlying data model for the system can be recorded in any relational database system, not just PowerBuilder. PowerDesigner, like most other CASE tools, therefore provides a series of views that a user can use to interrogate the underlying database, as well as documentation to enable the user to retrieve this information for use in other systems.
<p>
<b>Adding metadata from subsequent phases</b>
<p>
If you adhere to this approach, it's easy to imagine adding similar data during the development and testing phases of the system. Each of these repositories would focus on the critical issues that need to be solved in the appropriate section in order to minimize the effort involved in developing the solution, and, in the case of testing, to ensure that the resultant system meets a high standard of quality.
<p>
<b>No pain, no gain</b>
<p>
Developing a metadata repository such as this isn't a simple task and will invariably be time-consuming. However, I contend-and I'm a developer, too, remember-that the gains achieved through recording this type of information and the myriad ways it can be used within the organization more than outweigh the costs to record it. The approach suggested here enables this information to be gathered when it's still fresh in the analysts' or developers' minds.
<p>
The metadata repository developed here is, at best, an infant design. Within each organization, the nature and type of systems determine the exact scope of these metadata stores. In order to maximize this metadata design, it needs to be abstracted to better describe all the systems of the organization. Once that's done, it can be used to feed or be fed by a number of infrastructure systems used by the organization. Here are some typical systems that would fall into this category:
</li>
<li>
Budgeting systems<br><br></li>
<li>
Source code control systems<br><br></li>
<li>
Data warehouses</li>
</ul>
<p>
In <i>Future Shock, </i>Alvin Toffler wrote that the information <i>about</i> money would be more important than the money itself in the late 20th century. In my mind, metadata plays a similar role in our world. s</p>
<p>
<i>Lee Kirsten Gould is a senior consultant for Computer Consulting Services Corporation (CCSC). She has a degree in business information systems from the University of Witwatersrand in South Africa and is a Certified Sybase Professional DBA. Her interests are wine tasting, music, marathon running, and cycling, preferably in that order. lee.gould@sybase.com.</i></p>
</font></BODY>
</HTML>
