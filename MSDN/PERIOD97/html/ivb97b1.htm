<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing a Design-Time Control in Visual Basic 5.0 </title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<font face="verdana,arial,helvetica" size="2">
<h1>Writing a Design-Time Control in Visual Basic 5.0 </h1>
<p>
<i>by Srinath Vasireddy</i></p>
<p>
Design-time controls are standard ActiveX controls that can generate code for you. Like wizards, they create code in HTML pages or Active Server Pages (ASP). A design-time control has no binary runtime component. It's active only during design time and not at runtime--only the text generated by the control is active during runtime. </p>
<p>
The design-time control persists as text with the METADATA and OBJECT tags. In ASP, these tags appear within comments, since they're used only by the authoring tools and not at runtime. At runtime, ASP strips off these tags before generating the HTML page. You can build design-time controls in Visual Basic or Visual C++. In this article, we'll use VB 5.0 to build a design-time control that uses HTML tags to generate tables, as shown in Figure A. </p>
<p>
<img src="ivb97b1a.gif" border=0></p>
<p>
<b>Our HTML page looks like this in Internet Explorer.</b></p>
<p>
<b>Step by step</b></p>
<p>
To begin building the design-time control, first download and extract the Design-Time Control SDK (dcsdk.EXE); you'll find it at our Web site--<b>www.cobb.com/ivb </b>(click the Source Code hyperlink and download the nov97.zip file)--or at <b>www.microsoft.com/workshop/prog/sdk/dtctrl/dcsdkdl.htm</b>. When you extract dcsdk, it will install the file WEBDC.TLB in the \program files\design-time control sdk\samples\vb\common directory (unless you change the default path). </p>
<p>
Start VB 5.0 and create an ActiveX Control project. Name the project by choosing Project | Project Properties... from VB's main menu and entering <i>TableGen</i> in the Project Name text box, as shown in Figure B. Click OK to close the dialog box. </p>
<p>
<img src="ivb97b1b.gif" border=0></p>
<p>
<b>Name the project TableGen.</b></p>
<p>
Next, choose Project | References... from VB's main menu and click the Browse... button. Locate and select the WEBDC.TLB file and click Open. In the References dialog box, select the resulting Microsoft Web Design-time Control Type Library check box, as shown in <b>Figure C</b>, then click OK. </p>
<p>
<img src="ivb97b1c.gif" border=0></p>
<p>
<b>Add a reference to WEBDC.TLB.</b></p>
<p>
Now, change the value of the UserControl object's Name property to <i>TableGenerator</i>. Add a Label control to the User-Control; set the label's Name property to <i>lblCaption</i> and its Caption property to <i>Table Generator</i>. Your control should now appear as shown in Figure D. </p>
<p>
<img src="ivb97b1d.gif" border=0></p>
<p>
<b>Create a UserControl that looks like this.</b></p>
<p>
Add the IProvideRuntimeText interface to the general declarations section of the UserControl, as follows:</p>
<pre>Implements IprovideRuntimeText
</pre>
<p>
Next, launch the ActiveX Control Interface Wizard from the Add-Ins menu. If the wizard isn't listed, add it using the Add-Ins Manager. Remove all entries in the Selected Names list box. Then, move to the next window and add a custom member by clicking the New... button to open the Add Custom Member dialog box. Enter <i>BorderWidth</i> in the Name text box and select Property from the Type options, as shown in Figure E. Click OK and move to the next window. </p>
<p>
<img src="ivb97b1e.gif" border=0></p>
<p>
<b>Add a custom BorderWidth member to your control.</b></p>
<p>
In the Maps To section's Control combo box, select UserControl, as shown in <b>Figure F</b>. Move to the next window and click Finish; then, in the Wizard's Summary dialog box, click Close.</p>
<p>
<img src="ivb97b1f.gif" border=0></p>
<p>
<b>Set the mapping for your custom property.</b></p>
<p>
Now, choose Project | Add Property Page from the main menu and double-click on VB Property Page Wizard. Click the Add button, enter <i>ppgBorderWidth</i> in the Property Page Name dialog box, as shown in <b>Figure G</b>, and click OK. Move to the next screen, add BorderWidth to the property page from the Available Properties list, and click Finish. In the Wizard's Summary Report dialog box, click Close. Change the property page's caption to <i>Border Width</i>.</p>
<p>
<img src="ivb97b1g.gif" border=0></p>
<p>
<b>Assign a name to your new property page.</b></p>
<p>
Next, choose Tools | Procedure Attributes... from the main menu. Select BorderWidth from the Name combo box. Click the Advanced&gt;&gt; button and choose ppgBorderWidth from the Use This Page In Property Browser combo box, as shown in Figure H. Then, click OK to close the dialog box.</p>
<p>
<img src="ivb97b1h.gif" border=0></p>
<p>
<b>Enter these settings in the Procedure Attributes dialog box.</b></p>
<p>
At this point, open the UserControl's code window and enter the code from <b>Listing A</b> in the IProvideRuntimeText_GetRuntimeText function. This function is responsible for writing the contents of sGenStr into your HTML editor or ASP file. </p>
<p>
Listing A:<b> <i>The IProvideRuntimeText_GetRuntimeText function</i></b></p>
<pre>Private Function _
IProvideRuntimeText_GetRuntimeText() As String
<code>Dim sGenStr  As String</code>
<code>Dim sQuote   As String</code>

<code>sQuote = Chr$(13)</code>

<code>'TABLE is the HTML tag for defining tables, </code>
<code>'BORDER attributes define table's border width.</code>
<code>'TR is table row, TH is Table Header.</code>
<code>sGenStr = "&lt;TABLE BORDER=" &amp; m_BorderWidth &amp; _</code>
<code>" &gt;" &amp; sQuote</code>
<code>sGenStr = sGenStr &amp; "&lt;TR&gt;" &amp; sQuote</code>
<code>sGenStr = sGenStr &amp; _</code>
<code>"&lt;TH&gt; DESIGN-TIME CONTROLS &lt;/TH&gt;" &amp; sQuote</code>
<code>sGenStr = sGenStr &amp; "&lt;TH&gt; GENERATED &lt;/TH&gt;" &amp; _</code>
<code>sQuote</code>
<code>sGenStr = sGenStr &amp; "&lt;TH&gt; TABLE &lt;/TH&gt;" &amp; sQuote</code>
<code>sGenStr = sGenStr &amp; "&lt;TR&gt;" &amp; sQuote</code>
<code>sGenStr = sGenStr &amp; "&lt;/TABLE&gt;"</code>

<code>IProvideRuntimeText_GetRuntimeText = sGenStr</code>
<code>End Function</code></pre>
<p>
<b></b></p>
<p>
Save the Project as <i>TableGen</i>. Then, choose File | Make TableGen.ocx... to generate the OCX file. </p>
<p>
Open a DOS Prompt window and use regsvr32.exe to register the control, as follows: </p>
<pre>Regsvr32   tablegen.ocx</pre>
<p>
You also need to register a special component category entry in the registration database. VB 5.0 doesn't provide a way to do this. However, you can accomplish the task using the REGSVRDC.EXE tool that came with the dcsdk.EXE file download; you'll find the tool in the \program files\design-time control sdk\tools\ directory. In the DOS Prompt window, enter this command:</p>
<pre>Regsvrdc   TableGen.TableGenerator</pre>
<p>
<b>Try it out</b></p>
<p>
Open Visual InterDev and choose File | New... from the main menu. Click the Files tab and double-click the HTML Page option. Right-click on the code window and select Insert ActiveX Control... from the pop-up menu. In the resulting dialog box, click the Design-time tab and select TableGen.TableGenerator, as shown in<b> Figure I</b>; click OK. </p>
<p>
<img src="ivb97b1i.gif" border=0></p>
<p>
<b>Insert your ActiveX control into the HTML page.</b></p>
<p>
When Visual InterDev opens the control, right-click on it and select Properties. On the Properties dialog box's Border Width tab, enter <i>5</i> in the BorderWidth text box. After you close the GUI control screen, the code shown in <b>Figure J</b> will be generated. Save the file as DESIGN.HTM; when we viewed the page in Internet Explorer, it looked like Figure A. </p>
<p>
<img src="ivb97b1j.gif" border=0></p>
<p>
<b>Visual Interdev generates this HTML code.</b></p>
<p>
<b>Notes</b></p>
<p>
You can enhance the functionality of this control by adding Rows and Columns properties to the property page, then generating the table based on values set by the user. As we've demonstrated in this simple example, design-time controls open a whole new range of possibilities for Web development. </p>
<p>
<i>Srinath Vasireddy is a software consultant at Microsoft Consulting Services in Denver. He's currently working with Visual Basic 5.0, Visual InterDev, MS SQL Server, and other Microsoft products used for developing Intranet and Internet applications. You can reach Srinath at srinathv@msn.com.</i></p>
</font></BODY>
</HTML>
