<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Publishing Access 97 Data on the Web </title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<Font face="verdana,arial,helvetica" size="2">

<h1><a name="publishingaccess97dataonweb"></a>Publishing Access 97 Data on the Web </h1>
<p class=indent>
by Rick Dobson</p>
<p>
One of the best ways to share your Access data with others is to put the information on the Web. Visitors to a Web site don't even need to have Access installed on their computer to view the data. The Publish To The Web wizard can publish Access 97 database objects to Web servers using any of three different methods.</p>
<p>
The wizard offers two ways to handle dynamic publishing of database objects to the Web. One technique uses HTX/IDC technology, and the other relies on Active Server Pages (ASP). <i>Dynamic publishing</i> is like putting a mirror on the Web server that instantly reflects changes to the underlying database objects. If you want site visitors to see any changes to the database immediately, then you'll want to use either of the dynamic publishing formats. In a future article, we'll focus on the HTX/IDC technique. </p>
<p>
Power users and departmental gurus should consider publishing database objects via the <i>static HTML</i> route, the easiest of the three techniques. Static publishing is like putting a snapshot of a database object on your Web server. You can publish a table, query, or form as a datasheet or the Web version of a printed report. For example, this technique is useful for publishing reports that provide data revisions at regular intervals (say, monthly or quarterly), rather than displaying the most recent change to the database between reports.</p>
<p>
In this article, we'll present the basics of static Web publishing using Access 97. You'll see how to publish datasheets and printed reports. Our examples and recommendations will guide you around the pitfalls so you can successfully put this technique to work with a minimum amount of effort.</p>
<p>
Visit <b>www.cabinc.win.net</b> to see working online examples of the Web pages we describe in this article. The Publish To The Web wizard generated all pages at the site in the exact manner we'll describe.</p>
<h3>Statically publishing a datasheet</h3>
<p>
You invoke the Publish To The Web wizard by choosing File | Save As HTML from the main menu. The wizard's first window asks if you want to use a profile. If you find yourself repeatedly making a nearly identical set of wizard screen selections, you'll save time and effort by creating a profile. </p>
<p>
The wizard's second window is very important: It lets you pick the database object you want to publish. For our first example, we selected for publication the Northwind database's Categories table, as shown in Figure A.</p>
<p>
<b>Figure A</b></p>
<p>
<img src="adj97c1a.gif" border=0></p>
<p>
<b>The second Publish To The Web wizard window lets you select database objects for publication to the Web. </b></p>
<p>
Notice that you can select from any of four database object types. When publishing statically, you'll use the datasheet (Tables) representation for queries and forms that should look like a table. A datasheet appears by default as a single scrollable window. The Reports format automatically includes pagination that matches the printed report. </p>
<p>
You must complete only two other wizard windows to statically publish a datasheet. First, in the window that asks for a default format to create, choose Static HTML, as shown in Figure B. Second, if the data will reside on a local intranet, you need to designate a folder that your Web server shares for reading. Figure B also shows the beginning of an address that points to a subfolder of the WWWROOT folder in the WEBSHARE directory on a computer named CAB536; the computer runs a Personal Web Server from its WEBSHARE directory. Make sure the folder holding your files has read permission from your Web server.</p>
<p>
<b>Figure B</b></p>
<p>
<img src="adj97c1b.gif" border=0></p>
<p>
<b>You can select a publishing format and designate a folder on the LAN in which to publish.</b></p>
<p>
If you aren't publishing the HTML files to a local intranet server, you can store them in any folder for transmission to an Internet site. Use your favorite means for transmitting the files from your computer to the Web server.</p>
<p>
Since the wizard publishes plain HTML, you can actually publish the pages to a folder on any server, including one from Netscape. Just as you can publish static Web pages to any server, you can also read them with any browser. </p>
<p>
Figure C shows our final published datasheet in a browser. The Address box indicates that the wizard published the table in the virtual staticExs directory for the CAB586 Web server. The Address box also reveals a naming convention practice that the wizard follows: It appends the string <i>_1</i> to the database object name when it constructs a file for the object. If you republish a datasheet to a server and you want to retain an earlier version, rename the first version—otherwise, the wizard will automatically save over it. The HTML file type in Figure C is suitable for any server, including a Unix server.</p>
<p>
<b>Figure C</b></p>
<p>
<img src="adj97c1c.gif" border=0></p>
<p>
<b>Our published datasheet looks like this in a browser window.</b></p>
<p>
The original Access table includes embedded bitmap images of the product categories in the Picture field. This field appears blank in the published datasheet because the wizard doesn't publish bitmap images. If it's essential to make available embedded images or other embedded objects, you can do so by creating a new table with a Hyperlink data type for the embedded objects. Let's work through this technique.</p>
<h3>Datasheets with embedded objects</h3>
<p>
Access 97's new Hyperlink data type lets you simulate embedded objects. Figure D shows a table that includes hyperlinks to images of the products in each category. You simply place hyperlinks in a table field that points to the embedded objects—when a user clicks the hyperlink, the hyperlink will open the appropriate application for the file to which it points.</p>
<p>
<b>Figure D</b></p>
<p>
<img src="adj97c1d.gif" border=0></p>
<p>
<b>This new version of the Categories table includes hyperlinks pointing to images of the products in a category.</b></p>
<p>
The hyperlinks in Figure D point to BMP files. We used this file type for convenience, since the original application used BMP files. If you were constructing a working site, you'd convert the images from BMP to either GIF or JPG format; doing so would conserve space and speed file transport time over the Web.</p>
<p>
The Hyperlink data type can contain up to three parts: displaytext, address, and subaddress. As a minimum, the hyperlink data type must contain either an address or subaddress part. Either or both of these parts point the hyperlink to a specific location. The displaytext is a literal field that may offer more meaning to a user than a hyperlink address. For example, the <i>Graphic for:</i> column in Figure D shows displaytext parts for the first two category IDs. However, the third category ID's hyperlink doesn't have a displaytext part.</p>
<p>
Hyperlinks have their own syntax, and you can write code to construct them and insert them into a table field. But for a small set of records, you can often manually insert the hyperlink in the table cells just as quickly.</p>
<p>
To insert a hyperlink manually into a table cell, enter the cell and click the Insert Hyperlink tool on the Access toolbar to open the dialog box shown in Figure E. If you want to replace an existing hyperlink, we recommend removing the old hyperlink before entering the new one, so you start with a blank cell.</p>
<p>
<b>Figure E</b></p>
<p>
<img src="adj97c1e.gif" border=0></p>
<p>
<b>The Insert Hyperlink dialog box looked like this after we browsed to the Beverages address.</b>
<ul type=disc>
<li>
Use the Browse... button to select the file to which the hyperlink should point. Enter a subaddress, if appropriate, in the Named Location In File text box, then click OK to complete the entry. Right-click on the cell and select Hyperlink from the speed menu, then click in the Display Text box on the submenu. Type the text that you want to display instead of the hyperlink address and subaddress parts, then press [Enter]. When you do so, your display text will appear in the cell. </li>
</ul>
<p>
We tested the process by making a copy of the Northwind database's Categories table and naming it tblMyCategories. Then, we deleted the Picture field and added the <i>Graphic for:</i> field. Next, we copied the embedded category bitmaps to the Web site folder and inserted hyperlinks for each category in the manner we just described. Finally, we published the new table. This new table permits simulation of the embedded graphics in the original Categories table—it generates the result shown in Figure D.</p>
<h3>Backgrounds and logos</h3>
<p>
Neither datasheet published in Figure C or D appears with a background image or credit indicating who created it and with what software. Web sites routinely provide such niceties, and the Access 97's Publish To The Web wizard accommodates this general practice—somewhat. Figure F shows the same published table as in Figure D, but with two logos in the lower-left corner. In addition, this figure includes a background image.</p>
<p>
<b>Figure F</b></p>
<p>
<img src="adj97c1f.gif" border=0></p>
<p>
<b>This version of the Categories table includes a pair of logos and a background image.</b></p>
<p>
You must complete two tasks to achieve the look in Figure F: Compose the HTML for the page, and store the three images referenced by HTML at a location consistent with the point referenced by the HTML. The Publish To The Web wizard will compose most of the HTML. Then, you can use this HTML as a model for the minor part that the wizard doesn't complete. The wizard provides no support for copying the images to the target folder. Happily, this is a trivial task, but it's easy to forget or break a link to an image.</p>
<p>
The wizard's third screen lets you select a template that includes a background image, logo, text, or other features. A Browse... button lets you view the template file selections directly with your browser to get a feel for which one contributes the most to your site's appearance; all the templates are HTML files. For instance, you can find the background and Created with Microsoft Access logo from Figure F in the 100.HTM template file, which resides in the directory \Program Files\Microsoft Office\Templates\Access. </p>
<p>
Listing A shows excerpts from the HTML for Figure F. It includes the HTML for the table caption and its column headings, as well as the first row of data. In addition, the HTML includes samples of the layout for the logos.</p>
<p>
<b>Listing A: Excerpts from Figure F's HTML</b></p>
<pre><code>&lt;html&gt;
&lt;head&gt;
&lt;title&gt;tblMyCategories&lt;/title&gt;
&lt;/head&gt;
&lt;body background="100.jpg"&gt;
&lt;table border="1" cellspacing="0" bgcolor="#FFFFFF"&gt;
  &lt;caption align="top"&gt;&lt;font color="#000000" 
    face="Arial"&gt;&lt;b&gt;tblMyCategories&lt;/b&gt;&lt;/font&gt;
    &lt;/caption&gt;
  &lt;font color="#000000" face="Arial"&gt;&lt;THEAD&gt;&lt;/font&gt;
  &lt;tr&gt;
    &lt;th bgcolor="#C0C0C0" bordercolor="#000000"&gt;&lt;font
    color="#000000" size="2" face="Arial"&gt;Category 
    ID&lt;/font&gt;&lt;/th&gt;
    &lt;th bgcolor="#C0C0C0" bordercolor="#000000"&gt;&lt;font
    color="#000000" size="2" face="Arial"&gt;Category 
    Name&lt;/font&gt;&lt;/th&gt;
    &lt;th bgcolor="#C0C0C0" bordercolor="#000000"&gt;&lt;font
    color="#000000" size="2" 
    face="Arial"&gt;Description&lt;/font&gt;&lt;/th&gt;
    &lt;th bgcolor="#C0C0C0" bordercolor="#000000"&gt;&lt;font
    color="#000000" size="2" face="Arial"&gt;Graphic 
    for:&lt;/font&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;font color="#000000" 
  face="Arial"&gt;&lt;/THEAD&gt;&lt;/font&gt;&lt;font
  color="#000000" face="Arial"&gt;&lt;TBODY&gt;&lt;/font&gt;
  &lt;tr&gt;
    &lt;td align="right" valign="top" 
    bordercolor="#C0C0C0"&gt;&lt;font
    color="#000000" size="2" 
    face="Arial"&gt;1&lt;/font&gt;&lt;/td&gt;
    &lt;td valign="top" bordercolor="#C0C0C0"&gt;&lt;font
    color="#000000" size="2" 
    face="Arial"&gt;Beverages&lt;/font&gt;&lt;/td&gt;
    &lt;td valign="top" bordercolor="#C0C0C0"&gt;&lt;font
    color="#000000" size="2" face="Arial"&gt;Soft 
    drinks, coffees, teas, beers, and 
    ales&lt;/font&gt;&lt;/td&gt;
    &lt;td valign="top" bordercolor="#C0C0C0"&gt;&lt;a
    href="\\Cab586\WWWROOT\StaticExs\Beverages.bmp"&gt;
    &lt;font color="#0000FF" size="2" 
    face="Arial"&gt;&lt;u&gt;Beverages&lt;/u&gt;&lt;/font&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
.
.
.
&lt;/table&gt;
&lt;p&gt;&lt;font color="#000000" face="Arial"&gt;&lt;br&gt;
&lt;br&gt;
&lt;img src="CABGrey.gif" width="114" height="43"&gt; 
&lt;img src="msaccess.jpg" width="114" height="43"&gt; &lt;/font&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>
Use your company logo to replace the image file CABGrey.GIF. You can adjust the width and height attributes to size the image. You can also leave out the <i>Created with Microsoft Access</i> logo if it doesn't fit the theme of your pages.</p>
<p>
In order to see the background image referenced in the leading Body tag, you must copy the JPG file to the destination folder for your Web site. You also must copy the <i>Created with Microsoft Access</i> JPG image. Finally, you must copy your company logo. After you copy all three images, the HTML and the image files will work together to adorn your Web pages.</p>
<h3>Publishing Access reports</h3>
<p>
The Publish To The Web wizard provides built-in features for publishing Access reports to the Web. Instead of creating one long scrollable datasheet, the wizard prepares a series of Web pages with First, Previous, Next, and Last hyperlinks that let you jump from one page to another. These Web pages correspond to the printed pages of a report.</p>
<p>
You don't have to perform any special steps to get the benefits that come with reports—simply select a report as the database object you want to publish. The wizard will respond by including the hyperlinks for jumping between pages.</p>
<p>
While the wizard performs many valuable functions, you may have to hand-edit the Web page collection that it generates. First, the wizard doesn't copy any graphics in your reports. You can use the techniques we demonstrated earlier to manually insert graphics. Second, if you need to delete or add a page to the collection of Web pages generated by the wizard, you'll have to make appropriate revisions to the automatically generated hyperlinks. Third, the wizard doesn't always work well with rigidly formatted layouts, such as order forms. You'll need to develop traditional Web form solutions for these situations.</p>
<p>
Figures G and H show the kind of improvements you can make by spending two or three minutes with your favorite Web editor. Figure G shows the Seafood page from the Northwind database's Catalog report; the wizard automatically generated this page. We used FrontPage Express to transform the base output from the wizard to the result that appears in Figure H.</p>
<p>
<b>Figure G</b></p>
<p>
<img src="adj97c1g.gif" border=0></p>
<p>
<b>The Publish To The Web wizard generated the Seafood page from Northwind's Catalog report.</b></p>
<p>
<b>Figure H</b></p>
<p>
<img src="adj97c1h.gif" border=0></p>
<p>
<b>We edited the raw output to enliven our Web page.</b></p>
<p>
The transformation involved just four steps. We inserted the seafood bitmap, aligned it to the right edge of the page, inserted a blank row after the bitmap, and placed a gray background color behind the column headings. Collectively, the changes make our Seafood page match almost perfectly the Print Preview version you can display directly from Access. However, the version in Figure G is available over the Web, and it can reach a much larger audience because users don't need Access or a LAN connection to view the report page.</p>
<h3>Publishing without perishing</h3>
<p>
The Publish To The Web wizard makes it a snap to create Web sites that publish Access datasheets and printed reports. Beginners should explore the static HTML route to publishing, because the wizard generates the HTML and doesn't require any special ODBC connections. In addition, static publishing is ideal for publishing data at fixed, regular intervals.</p>
<p>
Static publishing is one of the best ways to make Access data available to a large audience of Web surfers. This is the case because static publishing places HTML on a Web server; the server, in turn, sends the HTML to site visitors. Dynamic publishing, in contrast, requires a query of the database engine in order to get the data ready for sending to a browser. Since Access targets workgroup instead of enterprise solutions, it can bog down if thousands of site visitors launch requests at the same time.</p>
<p>
If you need to edit the basic HTML produced by the wizard, consider using an HTML editor, such as FrontPage Express. This combination will allow you to publish Access database objects to the Web without perishing in a flurry of HTML code and ODBC connections.</p>
<p>
-----------------------------</p>
<p>
Rick Dobson, Ph.D., is president of CAB, Inc., a consultancy offering database, Internet, and Office development services. Rick is Microsoft-certified to train developers in Access and Office 97 development. He's a contributing editor to <i>Microsoft Interactive Developer</i> and a frequent contributor to <i>Byte</i>. You can reach Rick online at RickD@cabinc.win.net or by fax at (502) 426-3743.</p>
<p>
-------------------------------</p>
<p>
This article is reproduced from the December 1997 issue of <i>Microsoft Office Developer's Journal</i>. <i>Microsoft Office Developer's Journal</i> is an independently produced publication of The Cobb Group. No part of this article may be used or reproduced in any fashion (except in brief quotations used in critical articles and reviews) without prior consent of The Cobb Group. To contact The Cobb Group, please call (800) 223-8720 or (502) 493-3200.</p>
<p>
Copyright © 1997 The Cobb Group, a division of Ziff-Davis Inc. The Cobb Group and The Cobb Group logo are trademarks of Ziff-Davis Inc. All rights reserved. Reproduction in whole or in part in any form or medium without express written permission of Ziff-Davis is prohibited. </p>
</font></BODY>
</HTML>
