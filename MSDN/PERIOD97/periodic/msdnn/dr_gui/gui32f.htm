<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What's in a Name</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" size=2 color="#000000">

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<p><!--webbot bot="HTMLMarkup" startspan --><basefont face="verdana,arial,helvetica" size=2 color="#000000"><!--webbot
bot="HTMLMarkup" endspan --><font size="5">What's in a Name:
Overridden and Hidden</font></p>

<h2><font size="2">Dear Dr. GUI: </font></h2>

<p><font size="2">I am using Microsoft Visual C++ 4.0, and I am
experiencing what to me seems like a strange problem. </font></p>

<p><font size="2" face="Courier New">class CBase</font></p>

<p><font size="2" face="Courier New">{</font></p>

<p><font size="2" face="Courier New">public:</font></p>

<p><font size="2" face="Courier New">virtual MyFunc( int );</font></p>

<p><font size="2" face="Courier New">virtual MyFunc( void );</font></p>

<p><font size="2" face="Courier New">};</font></p>

<p>&nbsp;</p>

<p><font size="2" face="Courier New">class CDerived : public
CBase</font></p>

<p><font size="2" face="Courier New">{</font></p>

<p><font size="2" face="Courier New">public:</font></p>

<p><font size="2" face="Courier New">virtual MyFunc( void ); </font></p>

<p><font size="2" face="Courier New">};</font></p>

<p><font size="2">As you can see, the base class has two virtual
functions, the derived class overrides one of these virtual
functions. This code compiles without a problem as expected.</font></p>

<p><font size="2">Now we create an instance of the derived class
as follows and use it.</font></p>

<p><font size="2" face="Courier New">CDerived a;</font></p>

<p><font size="2" face="Courier New">a.MyFunc( 10 );</font></p>

<p><font size="2">The compiler does not like this. The error that
is thrown out reads something like this: </font></p>

<p><font size="2" face="Courier New">error C2660: 'MyFunc' :
function does not take 1 parameters.</font></p>

<p><font size="2">This has been tried on both Visual C++ 4.0 and
4.1. I see what is happening, but I don't understand why
shouldn't MyFunc(int) be inherited from the base class? </font></p>

<p><font size="2">Chris Taylor</font></p>

<h2><font size="2">Dr. GUI replies: </font></h2>

<p><font size="2">This is because of the C++ rule of name-hiding
(you can look in the C++ ARM under name-hiding). When a virtual
function in a base class B is overloaded and then overridden in a
derived class C, the override of the virtual function in the
derived class C &quot;hides&quot; all overloads of the function
name in the base class. </font></p>
</font></body>
</html>
