<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft Data Access SDK Overview</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h1><a name="dasdk_overview"></a>Microsoft Data Access SDK Overview</h1>
<p>
The Microsoft<sup>®</sup> Data Access SDK is the primary source of information and instruction on using data access technologies. Its tools, samples, and documentation are designed to help developers create solutions for their data access needs. For the latest news and updates about the data access technologies, go to the Microsoft Data Access Web site <a href="http://www.microsoft.com/data"><b>http://www.microsoft.com/data</b></a>.</p>
<p>
For information on support for Microsoft data access components, see the <a href="developer%20technology%20technical%20support_8q47.htm">Getting Help from Microsoft Technical Support page</a>.</p>
<p>
<a href="dasdk%20legalese_1bqr.htm">© 1998 Microsoft Corporation. All rights reserved.</a></p>
<h2>Universal Data Access</h2>
<p>
Universal Data Access is the Microsoft strategy for providing access to information across the enterprise. Universal Data Access provides high-performance access to a variety of relational and nonrelational information sources, and an easy-to-use programming interface that is tool and language independent. These technologies enable you to integrate diverse data sources, create easy-to-maintain solutions, and use your choice of best-of-breed tools, applications, and platform services. </p>
<p>
Universal Data Access does not require expensive and time-consuming movement of data into a single data store, nor does it require commitment to a single vendor’s products. Universal Data Access is based on open industry specifications with broad industry support, and works with all major established database platforms.</p>
<p>
The Microsoft Universal Data Access Web site (www.microsoft.com/data/) provides a central location for you to learn about Universal Data Access and the technologies that make it possible. Here you will find information and the latest news about these technologies.</p>
<h2><a name="dasdk_microsoft_data_access_components"></a>Microsoft Data Access Components Overview</h2>
<p>
The Microsoft<sup>®</sup> Data Access Components (MDAC) are the key technologies that enable Universal Data Access. Data-driven client/server applications deployed over the Web or a LAN can use these components to easily integrate information from a variety of sources, both relational (SQL) and nonrelational. These components include Microsoft<sup>®</sup> ActiveX<sup>®</sup> Data Objects (ADO), OLE DB, and Open Database Connectivity (ODBC).</p>
<h3>ActiveX Data Objects (ADO)</h3>
<p>
<a href="mk:@MSITStore:ado200.chm::/sdkadooverview_4piv.htm">Microsoft ActiveX Data Objects (ADO)</a> is the strategic application programming interface (API) to data and information. ADO provides consistent, high-performance access to data and supports a variety of development needs, including the creation of front-end database clients and middle-tier business objects that use applications, tools, languages, or Internet browsers. ADO is designed to be the one data interface needed for single and multitier client/server and Web-based data-driven solution development. The primary benefits of ADO are ease of use, high speed, low memory overhead, and a small disk footprint. </p>
<p>
ADO provides an easy-to-use interface to OLE DB, which provides the underlying access to data. ADO is implemented minimal network traffic in key scenarios, and a minimal number of layers between the front end and data source—all to provide a lightweight, high-performance interface. ADO is easy to use because it uses a familiar metaphor—the COM automation interface, available from all leading Rapid Application Development (RAD) tools, database tools, and languages on the market today.</p>
<h3>OLE DB</h3>
<p>
<a href="mk:@MSITStore:oledb200.chm::/sdkoledboverview_0cs7.htm">OLE DB</a> is the Microsoft strategic system-level programming interface to data across the organization. OLE DB is an open specification designed to build on the success of ODBC by providing an open standard for accessing all kinds of data. Whereas ODBC was created to access relational databases, OLE DB is designed for relational and nonrelational information sources, including mainframe ISAM/VSAM and hierarchical databases; e-mail and file system stores; text, graphical, and geographical data; custom business objects; and more. </p>
<p>
OLE DB defines a collection of COM interfaces that encapsulate various database management system services. These interfaces enable the creation of software components that implement such services. OLE DB components consist of <i>data providers</i>, which contain and expose data<i>; data consumers</i>, which use data; and <i>service components</i>, which process and transport data (such as query processors and cursor engines). OLE DB interfaces are designed to help components integrate smoothly so that OLE DB component vendors can bring high-quality OLE DB components to market quickly. In addition, OLE DB includes a bridge to ODBC to enable continued support for the broad range of ODBC relational database drivers available today. </p>
<h3>Open Database Connectivity (ODBC)</h3>
<p>
The <a href="mk:@MSITStore:odbc200.chm::/sdkodbcoverview_4vcn.htm">Microsoft Open Database Connectivity (ODBC)</a> interface is an industry standard and a component of Microsoft<sup>®</sup> Windows<sup>®</sup> Open Services Architecture (WOSA). The ODBC interface makes it possible for applications to access data from a variety of database management systems (DBMSs). ODBC permits maximum interoperability—an application can access data in diverse DBMSs through a single interface. Furthermore, that application will be independent of any DBMS from which it accesses data. Users of the application can add software components called drivers, which create an interface between an application and a specific DBMS.</p>
<p class=label>
<b>Next:</b></p>
<p>
<a href="roadmap_8z74.htm">Getting Around the Data Access SDK</a></p>
<p>
<a href="samplesoverview_5tiv.htm">Building Solutions Using Data Access Technologies</a></p>
<p>
<a href="installingdasdk_2vaj.htm">Installing the Data Access SDK</a></p>
<p>
<a href="redistributingdacmps_2tbn.htm">Redistributing Data Access Components</a></p>
</font></BODY>
</HTML>
