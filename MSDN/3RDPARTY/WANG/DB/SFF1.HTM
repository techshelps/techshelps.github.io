<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Attribute Structure</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<h2>Attribute Structure</H2><p>  </P>
<p>typedef struct tagOIAN_MARK_ATTRIBUTES{</P>
<p>UINT uType;            // The type of the mark.<BR>                // 1 = Image embedded<BR>                // 2 = Image reference<BR>                // 3 = Straight line<BR>                // 4 = Freehand line<BR>                // 5 = Hollow rectangle<BR>                // 6 = Filled rectangle<BR>                // 7 = Typed text<BR>                // 8 = Text from file<BR>                // 9 = Text stamp<BR>                //10 = Attach-a-Note<BR>                //12 = Form</P>
<p>LRECT lrBounds;        // Rectangle in FULLSIZE units; equivalent to type RECT. <BR>                // Can be a rectangle or two points. </P>
<p>RGBQUAD rgbColor1;        // The main color; for example, the color of all lines, <BR>                // all rectangles, and standalone text. </P>
<p>RGBQUAD rgbColor2;        // The secondary color; for example, the color of the text of <BR>                // an Attach-a-Note. </P>
<p>BOOL bHighlighting;        // TRUE — The mark is drawn highlighted. Highlighting <BR>                // performs the same function as a highlighting marker on a <BR>                // piece of paper. Valid only for lines, rectangles, and <BR>                // freehand. </P>
<p>BOOL bTransparent;        // TRUE — The mark is drawn transparent. A transparent <BR>                // mark does not draw white pixels. That is, transparent <BR>                // replaces white pixels with whatever is behind those pixels. <BR>                // Available only for images. </P>
<p>UINT uLineSize;        // The width of the line in pixels. </P>
<p>UINT uReserved1;        // Reserved; must be set to 0. </P>
<p>UINT uReserved2;        // Reserved; must be set to 0. </P>
<p>LOGFONT lfFont;        // The font information for the text, consisting of standard <BR>                // font attributes of font size, name, style, effects, and <BR>                // background color. </P>
<p>DWORD bReserved3;        // Reserved; must be set to 0x0FF83F.</P>
<p>time_t Time;            // The time that the mark was first saved, in seconds, from <BR>                // 00:00:00 1-1-1970 GMT. Every annotation mark has <BR>                // time as one of its attributes. If you do not set the time before <BR>                // the file is saved, the time is set to the date and time that the <BR>                // save was initiated. This time is in the form returned by the <BR>                // "time" C call, which is the number of seconds since <BR>                // midnight 00:00:00 on 1-1-1970 GMT. If necessary, refer <BR>                // to your C documentation for a more detailed description. </P>
<p>BOOL bVisible;        // TRUE — The mark is currently set to be visible. <BR>                // Annotation marks can be visible or hidden. </P>
<p>DWORD dwReserved4;    // Reserved; must be set to 0. </P>
<p>long lReserved[10];        // Must be set to 0. </P>
<p>}OIAN_MARK_ATTRIBUTES;</P></BODY></HTML>
