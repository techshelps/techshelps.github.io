<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SmsEnumObjects</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="sms_smsenumobjects"></a>SmsEnumObjects</h1>
<p>
The <b>SmsEnumObjects</b> function enumerates objects.</p>
<pre><code><b>SMS_STATUS SmsEnumObjects(
  HANDLE</b><i> hConn</i><b>,         </b>// Handle to a connection that has been 
                        // established via SmsDataSourceConnect.
<b>  char</b><i> *pszObjectType</i><b>,  </b>// Pointer to the object type you want to 
                        // enumerate.
<b>  SMSBUFF</b><i> *pPredecessors</i><b>,  </b>// Pointer to an array of predecessor 
                           // objects required for locating the 
                           // requested object.
<b>  DWORD</b><i> ctPredecessors</i><b>, </b>// Size of the <i>pPredecessors</i> array.
<b>  OJBDESCRIPTOR</b><i> *pObjects</i><b>,  </b>// Pointer to an array containing the 
                            // details of the requested object type.
<b>  DWORD</b><i> *pCtObjects     </i>// On entry, points to the size of the 
                        // <i>pObjects</i> array; on exit, points to the 
                        // actual number of requested objects known to 
                        // the system.
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hConn</i></dt>
<dd>
Handle to a connection that has been established via the <a href="sheapi_89mc.htm"><b>SmsDataSourceConnect</b></a> function.</dd>
<dt>
<i>*pszObjectType</i></dt>
<dd>
Points to the object type you want to enumerate.</dd>
<dt>
<i>*pPredecessors</i></dt>
<dd>
For non-first-class objects, this parameter points to an array containing a list of the predecessor objects that must be given to the system in order to locate the requested object. For first-class objects, this parameter is not used and may be set to NULL.</dd>
<dt>
<i>ctPredecessors</i></dt>
<dd>
Specifies the number of entries in the <i>pPredecessors</i> array. </dd>
<dt>
<i>*pObjects</i></dt>
<dd>
Points to an array containing the details of the requested object type. Your application must ensure that the array specified by <i>pObjects </i>is large enough to contain the number of requested objects. See the following remarks.</dd>
<dt>
<i>*pCtObjects</i></dt>
<dd>
On entry, this parameter points to a DWORD value that specifies the number of entries in the <i>pObjects</i> array. On exit, this parameter points to a DWORD value that contains the actual number of the requested objects known to the system.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The<b> SmsEnumObjects</b> function returns a status code SMS_STATUS. If successful, the function returns a status of SMS_OK. Otherwise, it returns one of the following manifest constants:
<dl>
<dt>
SMS_MORE_DATA </dt>
<dd>
The entry value of<i> pCtObjects</i> is less than the number of objects known to the system. The function returns this value in <i>pCtObjects</i>, but does not copy any information to the <i>pObjects</i> array.</dd>
<dt>
SMS_PARAMETER_ERROR</dt>
<dd>
The value of <i>pszObjectType</i> is NULL.</dd>
<dt>
SMS_NOT_FOUND</dt>
<dd>
Either the object type pointed to by <i>pszObjectType </i>or the predecessor objects pointed to by <i>pPredecessors </i>were not found.</dd>
<dt>
SMS_ERROR</dt>
<dd>
The internal object lists could not be found. This indicates a fundamental error related to the connection to the SMS database.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <i>pPredecessor</i> parameter is not used for first-class objects (that is, objects that are known directly by the API without any additional information). In this case, <i>pPredecessor </i>may be set to NULL.</p>
<p>
To get the correct size for the <i>pObjects</i> array, call the <b>SmsEnumObjects</b> function with <i>pObjects</i> set to NULL or with <i>pCtObjects</i> set to zero. <b>SmsEnumObjects</b> will assign the count of the requested objects to <i>pCtObjects</i> and return a status of SMS_MORE_DATA. After getting the correct value for <i>pCtObjects</i>, call the <b>SmsEnumObjects</b> function again using the correct value for <i>pCtObjects</i> and a <i>pObjects</i> array with a size that matches the count specified by <i>pCtObjects</i>.</p>
<p>
If the entry value of <i>pCtObjects</i> is less than the number of the requested objects known to the system, the function does not copy any information to the <i>pObjects</i> array and returns a status of SMS_MORE_DATA.</p>
<p>
If the entry value of <i>pCtObjects</i> is greater than the number of the requested objects known to the system, the function writes all requested objects to the <i>pObjects</i> array and returns a status of SMS_OK.</p>
<h4>See Also</h4>
<p>
<a href="sheapi_89mc.htm"><b>SmsDataSourceConnect</b></a>, <a href="sheapi_9bg3.htm"><b>SmsEnumObjectTypes</b></a></p>
<p>&nbsp;</p></body>
</HTML>
