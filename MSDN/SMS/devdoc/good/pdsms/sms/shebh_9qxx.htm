<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ParserTemporaryLockFrame</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="sms_parsertemporarylockframe"></a>ParserTemporaryLockFrame</h1>
<p>
The <b>ParserTemporaryLockFrame</b> function locks a frame when it enters a parser, and unlocks the frame when it exits.</p>
<pre><code><b>LPBYTE ParserTemporaryLockFrame(
  HFRAME</b><i> hFrame  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFrame</i></dt>
<dd>
Specifies the handle to the frame to get a pointer to.
</dd>
</dl>
<h4>Return Values</h4>
<p>
A pointer to the first byte of data in the frame.</p>
<h4>Remarks</h4>
<p>
Parsers should not call <b>LockFrame</b>. If a parser takes a lock and then gets faulted or returns without unlocking, it leaves the system in a state where it cannot change protocols or cut/copy frames. Parsers should use <b>ParserTemporaryLockFrame</b>, which grants a lock only during the context of the API entry into the parser. The lock is released on exit from the parser for that frame. This means that the pointer will be valid only after the parser returns from the <b>AttachProperties</b> or <b>RecognizeFrame</b> call.</p>
<p>&nbsp;</p></body>
</HTML>
