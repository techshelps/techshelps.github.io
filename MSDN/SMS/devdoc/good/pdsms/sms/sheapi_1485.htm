<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DATASOURCE Structure</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="sms_struct_datasource"></a>DATASOURCE</h1>
<p>
<b>DATASOURCE</b> is a union of structures that specifies the site database to which your application needs to connect. The <b>DATASOURCE</b> union is used by the <a href="sheapi_89mc.htm"><b>SmsDataSourceConnect</b></a> function. </p>
<pre><code>typedef union {
    GENERIC type;
    SQL_CONNECT_PARAMS sqlParams;
    DIR_PARAMS dirParams;
} DATASOURCE;
</code></pre>
<p>
Before calling <b>SmsDataSourceConnect</b>, your application must set the appropriate values for the members in the <b>DATASOURCE</b> structure. For Microsoft SQL Server, your application must set the server name, login identifier, password, database, public encryption key, and a pointer to a decryption function for the <b>sqlParams</b> structure within the <b>DATASOURCE</b> union.</p>
<p>
Currently, SMS supports one database type: Microsoft SQL Server. However, the SMS API is designed to allow support of other types of databases in the future.</p>
<h4>Members</h4>
<dl>
<dt>
<b>GENERIC</b></dt>
<dd>
A structure used only by the SMS API for extracting the type of datasource, so that the particular datasource used does not need to be explicitly implied.
<pre><code>typedef struct _GENERIC {
    DATASOURCE_TYPE ds;
} GENERIC;
</code></pre>

<p>
The DATASOURCE_TYPE enumerated type currently supports only DB_SQL (DB_OTHER and DIRECTORY are not implemented):

<pre><code>typedef enum { DB_SQL, DB_OTHER, DIRECTORY } DATASOURCE_TYPE;
</code></pre>
</dd>
<dt>
<b>SQL_CONNECT_PARAMS</b></dt>
<dd>
A structure used to store the information used to connect to an SMS database on a Microsoft SQL Server.
<pre><code>typedef struct _SQL_CONNECT_PARAMS {
    DATASOURCE_TYPE ds;
    char *pszServer;
    char *pszUserName;
    char *pszPasswd;
    char *pszDbName;
    char *pszKey;
    PDECRYPTFUNC pFunc;
} SQL_CONNECT_PARAMS;
</code></pre>

<dl>
<dt>
<b>ds</b></dt>
<dd>
Points to a string that specifies the datasource type of the SMS database.</dd>
<dt>
<b>pszServer</b></dt>
<dd>
Points to a string that specifies the name of the SQL Server containing the SMS database.</dd>
<dt>
<b>pszUserName</b></dt>
<dd>
Points to a string that specifies the login identifier used to connect to the SQL Server.</dd>
<dt>
<b>pszPasswd</b></dt>
<dd>
Points to a string that specifies the password for the login identifier.</dd>
<dt>
<b>pszDbName</b></dt>
<dd>
Points to a string that specifies the database name of the SMS site database.</dd>
<dt>
<b>pszKey</b></dt>
<dd>
Points to a string that specifies the decryption key if the login identifier and password are encrypted.</dd>
<dt>
<b>pFunc</b></dt>
<dd>
Points to a decryption function. PDECRYPTFUNC is a prototype for a decryption function.
<p>
When the <a href="sheapi_89mc.htm"><b>SmsDataSourceConnect</b></a> function is called, the login identifier and password can be passed in encrypted form. If <b>pFunc</b> is NULL, no encryption function is called. If the decryption function pointer is not NULL, the function will attempt to call the specified function both for the login identifier and password.

<p>
Your application must supply the decryption function that returns the decrypted data in the first parameter:

<pre><code>typedef void (*PDECRYPTFUNC)(char *pszBuffer, char *pszDecryptMe, char *pszKey);
</code></pre>

</dd>
</dl>
</dd>
</dl>
<h4>Example</h4>
<pre><code>//Structure that specifies the site database to connect to.
DATASOURCE dsParams;

//Assign values to the structure
//The type of database
    dsParams.sqlParams.ds          = DB_SQL;
//SQL Server name
    dsParams.sqlParams.pszServer   = "Jonathan1";
//Login ID
    dsParams.sqlParams.pszUserName = "sa";
//Password for Login ID
    dsParams.sqlParams.pszPasswd   = "britain";
//Name of the site database
    dsParams.sqlParams.pszDbName   = "SMS";
//Pointer to encryption function. No function is used in this example.
    dsParams.sqlParams.pFunc       = NULL;
//Encryption key. No encryption key is used in this example.
    dsParams.sqlParams.pszKey      = "";
 </code></pre>
<h4>See Also</h4>
<p>
<a href="sheapi_89mc.htm"><b>SmsDataSourceConnect</b></a>, <a href="sheapi_44z8.htm"><b>SmsDataSourceDisconnect</b></a></p>
<p>&nbsp;</p></body>
</HTML>
