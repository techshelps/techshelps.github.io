<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AttachPropertyInstanceEx</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="sms_attachpropertyinstanceex"></a>AttachPropertyInstanceEx</h1>
<p>
The <b>AttachPropertyInstanceEx</b> function attaches a property to a frame, thus creating a <b>PROPERTYINST</b> and a <b>PROPERTYINSTEX</b> structure for that frame in the PROPERTYINSTTABLE for the frame.</p>
<pre><code><b>DWORD AttachPropertyInstanceEx(
  HFRAME</b><i> hFrame</i><b>,        </b>
<b>  HPROPERTY</b><i> hProperty</i><b>,  </b>
<b>  DWORD</b><i> Length</i><b>,         </b>
<b>  LPVOID</b><i> lpData</i><b>,        </b>
<b>  DWORD</b><i> LengthEx</i><b>,       </b>
<b>  LPVOID</b><i> lpDataEx</i><b>,      </b>
<b>  DWORD</b><i> HelpID</i><b>,         </b>
<b>  DWORD</b><i> IndentLevel</i><b>,    </b>
<b>  DWORD</b><i> IFlags          </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFrame</i></dt>
<dd>
Specifies the handle to the frame to which to add the property.</dd>
<dt>
<i>hProperty</i></dt>
<dd>
Specifies the handle for the property to add.</dd>
<dt>
<i>Length</i></dt>
<dd>
Specifies the length of the data in the frame in bytes. Length can be zero.</dd>
<dt>
<i>lpData</i></dt>
<dd>
Specifies a pointer to the data in the frame where the Properties original value is located. <i>lpData</i> can be NULL.</dd>
<dt>
<i>LengthEx</i></dt>
<dd>
Specifies the length of the extended data in bytes.</dd>
<dt>
<i>lpDataEx</i></dt>
<dd>
Specifies a pointer to the extended data, usually a stack variable.</dd>
<dt>
<i>HelpID</i></dt>
<dd>
Specifies a number (from 0 to 2047) signifying a Help identifier used to set context-sensitive Help on the property. The number is relative to the Help file identified with the property database identified in the <b>CreatePropertyDatabase</b> call.</dd>
<dt>
<i>IndentLevel</i></dt>
<dd>
Specifies a number (from 0 to 15) signifying an indentation level for hierachical displays. Properties of type PROP_TYPE_SUMMARY should always be level 0. All other properties are the parser writer's prerogative, but starting at 1 will provide the most consistent display. The current user interface uses levels 0–9. Level 15 is a special level that allows the parser to attach a hidden property that will not normally be displayed.</dd>
<dt>
<i>IFlags</i></dt>
<dd>
Specifies a bitfield that has the following definitions:
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=6%>1</td>
<td width=94%>IFLAG_ERROR</td>
</tr>
<tr valign=top>
<td width=6%>2</td>
<td width=94%>IFLAG_SWAPPED (WORD or DWORD byte is non-Intel format at attach time)</td>
</tr>
<tr valign=top>
<td width=6%>4</td>
<td width=94%>IFLAG_UNICODE (STRING is UNICODE at attach time)</td>
</tr>
</table><br>


<p>
Note that earlier parsers set the <i>fError</i> DWORD to 0 or 1, which will map to IFLAG_ERROR.

</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value is the error code.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Error code</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>BHERR_SUCCESS</td>
<td width=52%>No problems were encountered.</td>
</tr>
<tr valign=top>
<td width=48%>BHERR_INVALID_HPROPERTY</td>
<td width=52%>The <i>hProperty</i> was invalid.</td>
</tr>
<tr valign=top>
<td width=48%>BHERR_INVALID_HFRAME</td>
<td width=52%>The <i>hFrame</i> was invalid.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
This function is used to attach a property to a frame, thus creating a <b>PROPERTYINST</b> and a <b>PROPERTYINSTEX</b> structure for that frame in the PROPERTYINSTTABLE for the frame. This function will add the information to the Frame as a <b>PROPERTYINST</b> structure.</p>
<p>
The <b>AttachPropertyInstanceEx</b> function is used when data needs to be generated external to the frame data in order to more clearly describe the protocol. For example, the Ethernet parser generated a property that describes the length of the frame. Another example would be where the SMB parser converts the time to a SYSTEMTIME format and attaches the converted time with <b>AttachPropertyInstanceEx</b> so that the Generic Formatter will format it.</p>
<p>
<b>Note</b>  A copy of the <i>lpDataEx</i> structure is made (of <i>LengthEx</i> length) so that it can be in a temporary variable when calling this function. If the <i>lpDataEx</i> pointer is NULL, or the <i>LengthEx</i> parameter is zero, then the "ex" parameters will be ignored and <b>AttachPropertyInstance</b> will be called.</p>
<p>&nbsp;</p></body>
</HTML>
