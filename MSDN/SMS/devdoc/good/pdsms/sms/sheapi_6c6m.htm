<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SmsAddToken</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="sms_smsaddtoken"></a>SmsAddToken</h1>
<p>
The <b>SmsAddToken</b> function adds a <a href="sheapio_2sfn.htm">token</a> at the specified index in the specified <a href="sheapio_19f7.htm">filter</a> or <a href="sheapio_0cvm.htm">inventory rules folder</a>.</p>
<pre><code><b>SMS_STATUS SmsAddToken(
  HANDLE</b><i> hFilter</i><b>, </b>// Handle to filter or inventory rules folder.
<b>  ANDOR</b><i> opAndOr</i><b>,  </b>// Control token for connecting the expression to 
                  // adjacent expression.
<b>  TOKEN</b><i> *pTokenInfo</i><b>,</b>
<b>                  </b>// Pointer to token structure containing the 
                  // expression token.
<b>  INT</b><i> iIndex      </i>// Location to insert the control token and 
                  // expression token.
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFilter</i></dt>
<dd>
Specifies the handle to the filter or inventory rules folder where the token will be added.</dd>
<dt>
<i>opAndOr</i></dt>
<dd>
Specifies whether an OP_AND or OP_OR control token is used to connect to the adjacent expression token or subclause. See the <a href="sheapi_399u.htm"><b>ANDOR</b></a> enumerated type.

<p>
<b>Important</b>  For <a href="sheapio_027m.htm">attribute filters</a>, <a href="sheapio_2fjm.htm">group filters</a>, <a href="sheapio_4iia.htm">site filters</a>, and <a href="sheapio_6xma.htm">architecture filters</a>, tokens can only be connected using an OP_OR control token—this means that your application must pass OP_OR for the <i>opAndOr</i> parameter when calling the <b>SmsAddToken</b> function to add a token to one of these filter types. If your application passes OP_AND for the <i>opAndOr</i> parameter, a status of SMS_PARAMETER_ERROR is returned.

</dd>
<dt>
<i>pTokenInfo</i></dt>
<dd>
Specifies the <a href="sheapi_0awe.htm"><b>TOKEN</b></a> structure containing the information for the expression token to add to the filter or inventory rules folder.</dd>
<dt>
<i>iIndex</i></dt>
<dd>
Specifies the location where the specified control token <i>opAndOr</i> and expression token <i>pTokenInfo</i> are inserted within the set of expressions contained in the specified filter or inventory rules folder. The new tokens are added after the token specified by <i>iIndex</i>. If any tokens follow the token specified by <i>iIndex</i>, the indexes for those tokens are incremented to account for the addition of the new tokens. There are also special index values that place the new tokens at the beginning or end of the set tokens within a filter or inventory rules folder.
<dl>
<dt>
AT_START</dt>
<dd>
Specifies that the expression token will be inserted at the beginning of the filter or inventory rules folder, and the control token will be added after the expression token.</dd>
<dt>
AT_END</dt>
<dd>
Specifies that the control token will be inserted at the end of the filter or inventory rules folder, and the expression token will be added after the control token.
</dd>
</dl>

<p>
The index is an integer that represents a token's position within a filter or inventory rules folder. The index for the first token is always zero. If the filter or inventory rules folder is empty (that is, it contains no tokens), the expression token is added as the first token and no control token is added. If the index does not exist within the filter or inventory rules folder (that is, if the index is greater than the current number of tokens in the filter or inventory rules filter), the new tokens are added at the end of the filter or inventory rules filter.


<p>
<b>Note</b>  Because the indexes of tokens following added tokens are modified to account for the new tokens, your application should not rely on the index to identify a token. Your application should use the <a href="sheapi_8jzi.htm"><b>SmsGetToken</b></a> to verify the contents of the token. In addition, when your application is building a filter or inventory rules folder, it is recommended that your application use the AT_START or AT_END index values to add tokens to the filter or inventory rules folder sequentially. 

<p>
When tokens are added or removed from a filter or inventory rules folder, the indexes of the tokens that follow the added or removed tokens are adjusted. For example, if a filter has five tokens (indexes 0, 1, 2, 3,and 4) and <b>SmsAddToken</b> is used to add a token at index 2, the new control token would be index 3 and the new expression would be index 4. The tokens that were previously at index 3 and 4 now have index 5 and 6.

</dd>
</dl>
<h4>Return Values</h4>
<p>
The <b>SmsAddToken</b> function returns a status code SMS_STATUS. If successful, the function returns a status of SMS_OK. Otherwise, it returns the following manifest constants:
<dl>
<dt>
SMS_INVALID_HANDLE</dt>
<dd>
The specified handle is not a valid filter handle or inventory rules folder handle.</dd>
<dt>
SMS_PARAMETER_ERROR</dt>
<dd>
One or more of the parameters in the <a href="sheapi_0awe.htm"><b>TOKEN</b></a> structure is invalid, or the pointer to the <b>TOKEN</b> structure is NULL.
<p>
If your application attempted to add a token to an inventory rules folder and the <b>szTokenString</b> member of the <b>TOKEN</b> structure also uses the <b>retrieve</b> keyword, the <b>szTokenString</b> member may contain a file name that specifies an incorrect location for the file. <b>SmsAddToken</b> will not add the token to the inventory rules folder and will return a status of SMS_PARAMETER_ERROR.

<p>
If your application passes OP_AND for the <i>opAndOr</i> parameter for an attribute filter, group filter, site filter, or architecture filter, a status of SMS_PARAMETER_ERROR is returned.

</dd>
</dl>
<h4>Remarks</h4>
<p>
For filters of type GROUP_FILTER, the SMS API engine does not validate the existence of the group specified by a group token. Your application is responsible for creating a token for a valid group class.</p>
<h4>Example</h4>
<pre><code>// Add a token to the end of an architecture filter.
TOKEN Token;
memset( &amp;Token, 0, sizeof (TOKEN) ); // Clear the Token structure.

//**************************************************************
//******* Set the expression token to "Architecture is equal to 
//******* Personal Computer".
// Set the name of the value to be evaluated.
strcpy( Token.szName, "Architecture");

// Set the operator used to evaluate the expression.
Token.dwOp = QOP_STR_EQ; // Use the equals operator.

// Set the value to evaulate.
strcpy( Token.szValue, "Personal Computer"); 

// Add the token to the filter.
stat = SmsAddToken( hFilter, // Specifies the handle to filter.
                    OP_AND,  // Use the AND control token to connect
                             // the expression.
                    &amp;Token,  // Specifies the structure containing
                             // the expression token.
                    AT_END   // Add the token to the end of 
                             // the filter.
                  );
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
