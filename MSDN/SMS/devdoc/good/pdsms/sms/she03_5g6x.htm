<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>[FileIndex] (required)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="sms_.5b.fileindex.5d_28.required.29"></a>[File<i>Index</i>] (required)</h2>
<p>
For the files specified in the <b>PackageDetectionRule</b> entry in the [Setup Package for Inventory] key, the PDF must have a key that defines each file. Each file corresponds to a key that defines the attributes of the file. The file key heading must have the following form: [File<i> index</i>] where <i>index</i> is a unique integer that identifies the file within the PDF and the inventory rule. The <i>index</i> should start at 1 and increase by 1 for each additional file.</p>
<p>
The Filename entry is required. All other attributes are optional.
<dl>
<dt>
<b>Filename</b> (required)</dt>
<dd>
The name of the file.
<p>
Example:

<pre><code>Filename = EXCEL.EXE
 </code></pre>
</dd>
<dt>
<b>Collect</b></dt>
<dd>
This entry specifies whether the SMS system should collect a copy of this file and store it on the site server. You can specify TRUE or FALSE.
<p>
Example:

<pre><code>Collect = FALSE
 </code></pre>
</dd>
<dt>
<b>BYTE</b></dt>
<dd>
This entry specifies a value stored at a specific location in the file. This attribute requires two entries (separated by a comma and a space): Location is the data offset in bytes, and Value is the value stored at the offset. By default, the entries are decimal. To specify a hexadecimal number, start the hexadecimal number with 0x.
<p>
Example:

<pre><code>BYTE = 20000, 216
</code></pre>
</dd>
<dt>
<b>Checksum</b></dt>
<dd>
This entry detects the sum of all values stored at a specific set of bytes and compares the sum to a specified value. This attribute requires three entries (separated by a comma and a space): Start Location is the data offset where the summed values begin (in bytes), Length is the total number of bytes that are summed, and Checksum Value is the value checked against the summed values. By default, the entries are decimal. To specify a hexadecimal number, start the hexadecimal number with 0x.
<p>
Example:

<pre><code>Checksum = 10000, 300, 32444
</code></pre>
</dd>
<dt>
<b>CRC</b></dt>
<dd>
This entry detects the sum of all values stored at a specific set of bytes and compares the sum to a specified value. Unlike <b>Checksum</b>, <b>CRC</b> takes into account the sequence of the summed bytes. This makes it a more reliable identification of a file. In this attribute’s settings, Start Location is the data offset where the summed values begin (in bytes), Length is the total number of bytes that are summed, and Checksum Value is the value checked against the summed values. 
<p>
SMS uses the CCITT-CRC standard to evaluate the CRC value. You must specify a CRC value computed with the CCITT-CRC algorithm.

<p>
By default, the entries are decimal. To specify a hexadecimal number, start the hexadecimal number with 0x.

<p>
Example:

<pre><code>CRC = 5000, 300, 38707
</code></pre>
</dd>
<dt>
<b>Date</b></dt>
<dd>
The date of the file in decimal format: MM, DD, YY. The entries must be separated by a comma and a space.
<p>
Example:

<pre><code>Date = 9, 2, 93
</code></pre>
</dd>
<dt>
<b>Size</b></dt>
<dd>
The size of the file (in bytes).
<p>
Example:

<pre><code>Size = 2766592
</code></pre>
</dd>
<dt>
<b>Time</b></dt>
<dd>
The time of the file (using the 24-hour clock) in hours and minutes. The entries must be separated by a comma and a space.
<p>
Example:

<pre><code>Time = 14, 18
</code></pre>
</dd>
<dt>
<b>LONG</b></dt>
<dd>
An unsigned LONG value. This attribute requires two entries (separated by a comma and a space): Location is the data offset in bytes, and Value is the value stored at the offset.
<p>
Example:

<pre><code>LONG = 30000, 1346373702
</code></pre>
</dd>
<dt>
<b>WORD</b></dt>
<dd>
A WORD value. This attribute requires two entries (separated by a comma and a space): Location is the data offset in bytes, and Value is the value stored at the offset.
<p>
Example:

<pre><code>WORD = 40001, 15488
</code></pre>
</dd>
<dt>
<b>Token</b> # (1–4)</dt>
<dd>
A string value. This attribute requires two entries (separated by a comma and a space): Location is the data offset in bytes, and Value is the string value stored at the offset. The string value must be enclosed by double quotation marks. You can define up to four separate StringValue entries.
<dl>
<dt>
Example:</dt>
</dl>

<pre><code>Token 1 = 710, "WIN"
Token 2 = 714, "EXCEL"
 </code></pre>
</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
