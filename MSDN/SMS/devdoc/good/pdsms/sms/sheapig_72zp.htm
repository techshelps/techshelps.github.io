<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ATTRIBUT.EXE</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="sms_attribut.exe"></a>ATTRIBUT.EXE</h2>
<h4>Overview</h4>
<p>
This sample is a console mode application that displays folder properties by using the Attribute filter. This filter is applied to a site container in order to enumerate specified properties of a machine of architecture type Personal Computer. This technique is used because it is faster than setting group filters and then retrieving specified machine group scalars.</p>
<p>
Much of the code in this sample is written to be generic, so this is a good sample to use when you need to enumerate folders of unknown type.</p>
<p>
The later portions of this code demonstrate techniques for handling specific types of folders. In general, when dealing with a folder that may contain many subfolders, it is recommended that you open and examine each subfolder in turn. For instance, when examining a domain folder, you should follow this technique, and you should not close the folder until all machines in the domain have been displayed. On the other hand, if the folder does not contain many subfolders, it is usually more efficient to open each subfolder, store the handles in a temporary list, and then close the folder.</p>
<h4>Running the Program</h4>
<p>
ATTRIBUT.EXE is a console application that requires you to input the SQL Server name, Database name, SQL Logon ID, and Password. It then displays folder properties for the machines, starting in the root site. When it is finished displaying the folders, the program quits.</p>
<h4>Functions</h4>
<p>
This program illustrates usage of the following SMS functions:</p>
<p>
<a href="sheapi_18ky.htm"><b>SmsAPIVer</b></a><br>
<a href="sheapi_89mc.htm"><b>SmsDataSourceConnect</b></a><br>
<a href="sheapi_44z8.htm"><b>SmsDataSourceDisconnect</b></a><br>
<a href="sheapi_0bea.htm"><b>SmsOpenContainer</b></a><br>
<a href="sheapi_2vg2.htm"><b>SmsCloseContainer</b></a><br>
<a href="sheapi_4u79.htm"><b>SmsPopulate</b></a><br>
<a href="sheapi_45pw.htm"><b>SmsGetFolderCount</b></a><br>
<a href="sheapi_58ky.htm"><b>SmsGetNextFolder</b></a><br>
<a href="sheapi_0tt1.htm"><b>SmsGetFolderType</b></a><br>
<a href="sheapi_7tb8.htm"><b>SmsGetFolderID</b></a><br>
<a href="sheapi_15iq.htm"><b>SmsCloseFolder</b></a><br>
<a href="sheapi_9ab8.htm"><b>SmsGetScalarCount</b></a><br>
<a href="sheapi_16ia.htm"><b>SmsGetNextScalar</b></a><br>
<a href="sheapi_3gvm.htm"><b>SmsCreateFilter</b></a><br>
<a href="sheapi_3z5e.htm"><b>SmsSetFilter</b></a><br>
<a href="sheapi_4zsi.htm"><b>SmsCloseFilter</b></a><br>
<a href="sheapi_6c6m.htm"><b>SmsAddToken</b></a></p>
<h4>Program Flow</h4>
<p>
This program opens a site container, then constructs and applies an Attribute filter, a Site filter, and an Architecture filter. The code then populates the container with the folder for the root site, opens the folder, and displays the folder's properties (the folder type, and the number of scalars and subfolders the folder contains). Because the folder display function is recursive, calling this function with the root site folder will cause all folders in the site hierarchy to be displayed.</p>
<p>&nbsp;</p></body>
</HTML>
