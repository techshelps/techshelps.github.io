<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PDF.EXE</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="sms_pdf..exe"></a>PDF.EXE</h2>
<h4>Overview</h4>
<p>
PDF.EXE is a console application that processes a PDF file and creates a package in the SMS site server database. The main purpose of this program is to provide a working sample to developers who may want to process PDFs and load them into SMS from their own applications. This code demonstrates datasource connection, folder creation, scalar and token manipulation, folder display, SMS API version identification, and helper functions.</p>
<h4>Running the Program</h4>
<p>
PDF.EXE runs as a console application. To run the program, you can type either <b>PDF</b> or <b>PDF <i>filename</i>.PDF</b>. The program prompts you to enter the information needed to connect to the SQL server and then prompts you to enter the name of the PDF file if you did not specify one on the command line. Specify the file name with the .PDF extension. At this point, the program may prompt you for a directory as follows:
<ul>
<li>
An import directory, if the package will be set up for workstations and the PDF file does not specify an import directory.</li>
<li>
A setup directory, if the package will be set up for sharing and the PDF file does not specify a setup directory.</li>
</ul>
<p>
In either case, if you do not enter a directory at the prompt, the package will not be completely set up in SMS.</p>
<h4>Functions</h4>
<p>
<a href="sheapi_18ky.htm"><b>SmsAPIVer</b></a><b><br>
<a href="sheapi_89mc.htm">SmsDataSourceConnect</a><br>
<a href="sheapi_44z8.htm">SmsDataSourceDisconnect</a><br>
<a href="sheapi_0bea.htm">SmsOpenContainer</a><br>
<a href="sheapi_2vg2.htm">SmsCloseContainer</a><br>
<a href="sheapi_9mlu.htm">SmsCreateFolder</a><br>
<a href="sheapi_88tu.htm">SmsLinkFolder</a><br>
<a href="sheapi_2s36.htm">SmsCommitFolder</a><br>
<a href="sheapi_62sy.htm">SmsSetScalar</a><br>
<a href="sheapi_16ia.htm">SmsGetNextScalar</a><br>
<a href="sheapi_9ab8.htm">SmsGetScalarCount</a><br>
<a href="sheapi_15iq.htm">SmsCloseFolder</a><br>
<a href="sheapi_9mlu.htm">SmsCreateFolder</a><br>
<a href="sheapi_29o3.htm">SmsManipulateTokens</a><br>
<a href="sheapi_6c6m.htm">SmsAddToken</a><br>
<a href="sheapi_97g4.htm">SmsGetTokenCount</a><br>
<a href="sheapi_8jzi.htm">SmsGetToken</a><br>
<a href="sheapi_7tb8.htm">SmsGetFolderID</a><br>
<a href="sheapi_0tt1.htm">SmsGetFolderType</a><br>
<a href="sheapi_45pw.htm">SmsGetFolderCount</a><br>
<a href="sheapi_58ky.htm">SmsGetNextFolder</a><br>
<a href="sheapi_15iq.htm">SmsCloseFolder</a><br>
<a href="sheapi_1gx0.htm">SmsRewind</a><br>
<a href="sheapi_58ky.htm">SmsGetNextFolder</a></b></p>
<h4>Program Flow</h4>
<p>
After logging on to a datasource and obtaining any missing information from the user, the program creates the package and displays package details in the console.</p>
<p>&nbsp;</p></body>
</HTML>
