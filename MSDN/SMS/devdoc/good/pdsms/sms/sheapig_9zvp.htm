<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NEWJOB.EXE</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="sms_newjob.exe"></a>NEWJOB.EXE</h2>
<h4>Overview</h4>
<p>
This is a console mode application that illustrates how to view, create, and delete jobs. There are four types of jobs in SMS: Run Command On Workstation jobs, Share Package On Server jobs, Remove Package From Server jobs, and System jobs. Of these, all except System jobs can be created and deleted from the SMS API. All job types can be viewed.</p>
<p>
This sample shows how the <b>SmsDescribeFolder</b> function is used to retrieve a template description of the folder and the scalars that it contains.</p>
<h4>Running the Program</h4>
<p>
NEWJOB.EXE runs as a console application. The program prompts you to enter the information needed to connect to SQL Server, then it creates and populates a job container. At this point the program enters a loop and prompts you to view a job, delete a job, create a job, or quit the program. Enter:</p>
<p class=indent1>
<b>C</b> to create a new job</p>
<p class=indent1>
<b>N</b> to view the next job folder</p>
<p class=indent1>
<b>D</b> to delete the current job folder</p>
<p class=indent1>
<b>X</b> to exit the program</p>
<p>
</p>
<h4>Functions</h4>
<p>
<a href="sheapi_89mc.htm"><b>SmsDataSourceConnect</b></a><br>
<a href="sheapi_44z8.htm"><b>SmsDataSourceDisconnect</b></a><br>
<a href="sheapi_0bea.htm"><b>SmsOpenContainer</b></a><br>
<a href="sheapi_2vg2.htm"><b>SmsCloseContainer</b></a><br>
<a href="sheapi_4u79.htm"><b>SmsPopulate</b></a><br>
<a href="sheapi_0tt1.htm"><b>SmsGetFolderType</b></a><br>
<a href="sheapi_45pw.htm"><b>SmsGetFolderCount</b></a><br>
<a href="sheapi_58ky.htm"><b>SmsGetNextFolder</b></a><br>
<a href="sheapi_7tb8.htm"><b>SmsGetFolderID</b></a><br>
<a href="sheapi_9mlu.htm"><b>SmsCreateFolder</b></a><br>
<a href="sheapi_2nua.htm"><b>SmsDescribeFolder</b></a><br>
<a href="sheapi_88tu.htm"><b>SmsLinkFolder</b></a><br>
<a href="sheapi_0pte.htm"><b>SmsUnlinkFolder</b></a><br>
<a href="sheapi_2s36.htm"><b>SmsCommitFolder</b></a><br>
<a href="sheapi_9ab8.htm"><b>SmsGetScalarCount</b></a><br>
<a href="sheapi_16ia.htm"><b>SmsGetNextScalar</b></a><br>
<a href="sheapi_62sy.htm"><b>SmsSetScalar</b></a><br>
<a href="sheapi_1gx0.htm"><b>SmsRewind</b></a></p>
<h4>Program Flow</h4>
<p>
After logging on to a datasource, a job container is created and populated. (No filters are used in this program, so you will be able to view all jobs in the system.) The program then enters a loop asking whether the user wants to view the next job folder, delete the currently viewed folder, or create a new folder. Both deletion and creation are two-stage processes. Only when the <b>SmsCommitFolder</b> function is called will the folder be either deleted from or inserted into the datasource.</p>
<p>
For folder creation, the user is asked which of the three types of folders that support creation the user wants to create. The creation process then continues by soliciting scalar information from the user. For each scalar that can be set, the user is given the name of the scalar and its type. When all scalars have been set, the folder is displayed and the user is asked to confirm the creation. Successful folder creation depends on the validity of the scalar settings.</p>
<p>&nbsp;</p></body>
</HTML>
