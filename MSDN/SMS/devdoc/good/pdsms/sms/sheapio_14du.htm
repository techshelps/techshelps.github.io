<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Retrieve scalars for the persistent filters</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="sms_retrieve_scalars_for_the_persistent_filters_proc2"></a>Retrieve scalars for the persistent filters</h3>
<p>
After your application gets the handle to a persistent filter, your application can retrieve the scalars for that filter. A persistent filter has four scalars:
<dl>
<dt>
<b>Query Key</b></dt>
<dd>
String that corresponds to the identifier of the query. The identifier is an eight-character identifier that the SMS system assigns to the query when it is first added to the site database. Note that the default queries provided with SMS have a six-character identifier.</dd>
<dt>
<b>Name</b></dt>
<dd>
String that corresponds to the Query Name in the Query Properties of the query in the SMS Administrator.</dd>
<dt>
<b>Comment</b></dt>
<dd>
String that corresponds to Comment in the Query Properties of the query in the SMS Administrator.</dd>
<dt>
<b>Architecture</b></dt>
<dd>
String that corresponds to Architecture in the Query Properties of the query in the SMS Administrator.
</dd>
</dl>
<p>
Unlike the scalars for folders, the scalars for persistent filters can be retrieved in sequence only.</p>
<p>
To retrieve scalars in sequence, use the <a href="sheapi_16ia.htm"><b>SmsGetNextScalar</b></a> function. <b>SmsGetNextScalar</b> retrieves the next scalar in the list of scalars within the persistent filter and writes the scalar's information into a <a href="sheapi_4nci.htm"><b>SCALAR</b></a> structure. To start at the beginning of the list again, use <a href="sheapi_1gx0.htm"><b>SmsRewind</b></a> to reset a filter's internal scalar index so that the filter's scalars can be reiterated.</p>
<p>
Example:</p>
<pre><code>// Get the next scalar in the persistent filter 
// and print it on the screen.

SCALAR scalar;
char szName[50];          //Buffer for scalar name.
char szValue[BUFF_SIZE];  //Buffer for string value.

scalar.pszName  = szName;
scalar.pszValue = szValue;
scalar.dwLen = sizeof(szValue)-1;

// Retrieve the next scalar.
stat = SmsGetNextScalar(hFilter,  // Handle to filter.
                        &amp;scalar   // Pointer to SCALAR struct to 
                                  // place data for the scalar.
                        );

// Print the scalar name and value.
printf("\t%20s: %s\n", scalar.pszName, scalar.pszValue);
</code></pre>
<p>&nbsp;</p></body>
</HTML>
