<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Generic Formatter</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="sms_the_generic_formatter"></a>The Generic Formatter</h1>
<p>
The generic formatter should be used whenever possible. Using Network Monitor's formatting routines instead of writing your own will not only reduce the code size, but it will also allow for Network Monitor performance adjustments and fixups to porting problems for other platforms without impacting your parser.</p>
<p>
Even if the generic formatter is not exactly what you need, you should still use the formatting routines that it calls if you must build your own string. For example, if you want to take the generic formatting routine's output for a WORD that looks like this:</p>
<pre><code>Privilege ID   (PID) = 0x0029
</code></pre>
<p>
and add something to the end of it to make it look like:</p>
<pre><code>Privilege ID   (PID) = 0x0029   The Process has privileges
</code></pre>
<p>
then you should call the format function that the Generic Formatter calls. In this case, you would call <b>FormatPropertyDataAsWord</b> and then append your string.</p>
<p>
The following table shows how the generic formatter will format the different property types:</p>
<h4>PROP_TYPE_VOID</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=55%>Property qualifier</th>
<th align=left width=45%>Example output</th>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_NONE</td>
<td width=45%>"<code>XYZ</code>"</td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_RANGE</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_BITFIELD</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_LABELED_SET</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_LABELED_BITFIELD</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_CONST</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_FLAGS</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_ARRAY</td>
<td width=45%></td>
</tr>
</table><br>
<h4>PROP_TYPE_SUMMARY</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=55%>Property qualifier</th>
<th align=left width=45%>Example output</th>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_NONE</td>
<td width=45%>"<code>XYZ</code>"</td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_RANGE</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_BITFIELD</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_LABELED_SET</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_LABELED_BITFIELD</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_CONST</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_FLAGS</td>
<td width=45%></td>
</tr>
<tr valign=top>
<td width=55%>PROP_QUAL_ARRAY</td>
<td width=45%></td>
</tr>
</table><br>
<h4>PROP_TYPE_BYTE</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Property qualifier</th>
<th align=left width=55%>Example output</th>
</tr>
<tr valign=top>
<td width=45%>PROP_QUAL_NONE</td>
<td width=55%><code>"XYZ = 10 (0xa)"</code></td>
</tr>
<tr valign=top>
<td width=45%>PROP_QUAL_RANGE</td>
<td width=55%><code>"XYZ = 10 (0xa) Range:(1 (0x1) - 20 (0x14))"</code></td>
</tr>
<tr valign=top>
<td width=45%>PROP_QUAL_BITFIELD</td>
<td width=55%></td>
</tr>
<tr valign=top>
<td width=45%>PROP_QUAL_LABELED_SET</td>
<td width=55%>Calls <b>FormatLabeledSet</b> function.</td>
</tr>
<tr valign=top>
<td width=45%>PROP_QUAL_LABELED_BITFIELD</td>
<td width=55%>Calls <b>FormatLabeledSetAsFlags</b> function.</td>
</tr>
<tr valign=top>
<td width=45%>PROP_QUAL_CONST</td>
<td width=55%>No output results.</td>
</tr>
<tr valign=top>
<td width=45%>PROP_QUAL_FLAGS</td>
<td width=55%><code>...0 = Label Off String<br>
..1. = Label On String <br>
.0.. = Label Off String<br>
0... = Label Off String</code></td>
</tr>
<tr valign=top>
<td width=45%>PROP_QUAL_ARRAY</td>
<td width=55%><code>"XYZ = 00 0a ff ..."</code></td>
</tr>
</table><br>
<h4>PROP_TYPE_WORD</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=46%>Property qualifier</th>
<th align=left width=54%>Example output</th>
</tr>
<tr valign=top>
<td width=46%>PROP_QUAL_NONE</td>
<td width=54%><code>"XYZ = 10 (0xa)"</code></td>
</tr>
<tr valign=top>
<td width=46%>PROP_QUAL_RANGE</td>
<td width=54%><code>"XYZ = 10 (0xa) Range:(1 (0x1) - 20 (0x14))</code></td>
</tr>
<tr valign=top>
<td width=46%>PROP_QUAL_BITFIELD</td>
<td width=54%>No output results.</td>
</tr>
<tr valign=top>
<td width=46%>PROP_QUAL_LABELED_SET</td>
<td width=54%>Calls <b>FormatLabeledWordSet</b> function.</td>
</tr>
<tr valign=top>
<td width=46%>PROP_QUAL_LABELED_BITFIELD</td>
<td width=54%>Calls <b>FormatLabeledWordSetAsFlags</b> function.</td>
</tr>
<tr valign=top>
<td width=46%>PROP_QUAL_CONST</td>
<td width=54%>No output results.</td>
</tr>
<tr valign=top>
<td width=46%>PROP_QUAL_FLAGS</td>
<td width=54%><code>.......0 = Label Off String<br>
......1. = Label On String <br>
.....0.. = Label Off String<br>
....0... = Label Off String<br>
...1.... = Label On String<br>
..0..... = Label Off String<br>
.0...... = Label Off String<br>
0....... = Label Off String</code></td>
</tr>
<tr valign=top>
<td width=46%>PROP_QUAL_ARRAY</td>
<td width=54%><code>"XYZ = 0000 000a ffff ..."</code></td>
</tr>
</table><br>
<h4>PROP_TYPE_DWORD</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=42%>Property qualifier</th>
<th align=left width=58%>Example output</th>
</tr>
<tr valign=top>
<td width=42%>PROP_QUAL_NONE</td>
<td width=58%><code>"XYZ = 10 (0xa)"</code></td>
</tr>
<tr valign=top>
<td width=42%>PROP_QUAL_RANGE</td>
<td width=58%><code>"XYZ = 10 (0xa) Range:(1 (0x1) - 20 (0x14))</code></td>
</tr>
<tr valign=top>
<td width=42%>PROP_QUAL_BITFIELD</td>
<td width=58%></td>
</tr>
<tr valign=top>
<td width=42%>PROP_QUAL_LABELED_SET</td>
<td width=58%>Calls <b>FormatLabeledDwordSet</b> function.</td>
</tr>
<tr valign=top>
<td width=42%>PROP_QUAL_LABELED_BITFIELD</td>
<td width=58%>Calls <b>FormatLabeledDwordSetAsFlags</b> function.</td>
</tr>
<tr valign=top>
<td width=42%>PROP_QUAL_CONST</td>
<td width=58%>No output results.</td>
</tr>
<tr valign=top>
<td width=42%>PROP_QUAL_FLAGS</td>
<td width=58%><code>...............0 = Label Off String<br>
..............1. = Label On String <br>
.............0.. = Label Off String<br>
............0... = Label Off String<br>
...........1.... = Label On String<br>
..........0..... = Label Off String<br>
.........0...... = Label Off String<br>
........0....... = Label Off String<br>
(and so on)</code></td>
</tr>
<tr valign=top>
<td width=42%>PROP_QUAL_ARRAY</td>
<td width=58%><code>"XYZ = 00000000 0000000a ffffffff ..."</code></td>
</tr>
</table><br>
<h4>PROP_TYPE_LARGEINT</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=51%>Property qualifier</th>
<th align=left width=49%>Example output</th>
</tr>
<tr valign=top>
<td width=51%>PROP_QUAL_NONE<p>
PROP_QUAL_RANGE</p>
<p>
PROP_QUAL_BITFIELD</p>
<p>
PROP_QUAL_LABELED_SET</p>
<p>
PROP_QUAL_LABELED_BITFIELD</p>
<p>
PROP_QUAL_CONST</p>
<p>
PROP_QUAL_FLAGS</p>
<p>
PROP_QUAL_ARRAY</p>
</td>
<td width=49%>No output results.</td>
</tr>
</table><br>
<h4>PROP_TYPE_ADDR</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=52%>Property qualifier</th>
<th align=left width=48%>Example output</th>
</tr>
<tr valign=top>
<td width=52%>PROP_QUAL_NONE<p>
PROP_QUAL_RANGE</p>
<p>
PROP_QUAL_BITFIELD</p>
<p>
PROP_QUAL_LABELED_SET</p>
<p>
PROP_QUAL_LABELED_BITFIELD</p>
<p>
PROP_QUAL_CONST</p>
<p>
PROP_QUAL_FLAGS</p>
<p>
PROP_QUAL_ARRAY</p>
</td>
<td width=48%>No output results.</td>
</tr>
</table><br>
<h4>PROP_TYPE_TIME</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=53%>Property qualifier</th>
<th align=left width=47%>Example output</th>
</tr>
<tr valign=top>
<td width=53%>PROP_QUAL_NONE<p>
PROP_QUAL_RANGE</p>
<p>
PROP_QUAL_BITFIELD</p>
<p>
PROP_QUAL_LABELED_SET</p>
<p>
PROP_QUAL_LABELED_BITFIELD</p>
<p>
PROP_QUAL_CONST</p>
<p>
PROP_QUAL_FLAGS</p>
<p>
PROP_QUAL_ARRAY</p>
</td>
<td width=47%>Calls <b>FormatPropertyDataAsTime</b> function.</td>
</tr>
</table><br>
<h4>PROP_TYPE_STRING</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=53%>Property qualifier</th>
<th align=left width=47%>Example output</th>
</tr>
<tr valign=top>
<td width=53%>PROP_QUAL_NONE<p>
PROP_QUAL_RANGE</p>
<p>
PROP_QUAL_BITFIELD</p>
<p>
PROP_QUAL_LABELED_SET</p>
<p>
PROP_QUAL_LABELED_BITFIELD</p>
<p>
PROP_QUAL_CONST</p>
<p>
PROP_QUAL_FLAGS</p>
<p>
PROP_QUAL_ARRAY</p>
</td>
<td width=47%><code>"XYZ = String, which was attached as an AttachPropertyInstEx."</code></td>
</tr>
</table><br>
<h4>PROP_TYPE_IP_ADDRESS</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=53%>Property qualifier</th>
<th align=left width=47%>Example output</th>
</tr>
<tr valign=top>
<td width=53%>PROP_QUAL_NONE<p>
PROP_QUAL_RANGE</p>
<p>
PROP_QUAL_BITFIELD</p>
<p>
PROP_QUAL_LABELED_SET</p>
<p>
PROP_QUAL_LABELED_BITFIELD</p>
<p>
PROP_QUAL_CONST</p>
<p>
PROP_QUAL_FLAGS</p>
<p>
PROP_QUAL_ARRAY</p>
</td>
<td width=47%><code>"XYZ = 129.65.100.2"</code></td>
</tr>
</table><br>
<h4>PROP_TYPE_BYTESWAPPED_WORD</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>Property qualifier</th>
<th align=left width=53%>Example output</th>
</tr>
<tr valign=top>
<td width=47%>PROP_QUAL_NONE</td>
<td width=53%><code>"XYZ = 10 (0xa)"</code></td>
</tr>
<tr valign=top>
<td width=47%>PROP_QUAL_RANGE</td>
<td width=53%><code>"XYZ = 10 (0xa) Range:(1 (0x1) - 20 (0x14))</code></td>
</tr>
<tr valign=top>
<td width=47%>PROP_QUAL_BITFIELD</td>
<td width=53%>No output results.</td>
</tr>
<tr valign=top>
<td width=47%>PROP_QUAL_LABELED_SET</td>
<td width=53%>Calls <b>FormatLabeledWordSet</b> function.</td>
</tr>
<tr valign=top>
<td width=47%>PROP_QUAL_LABELED_BITFIELD</td>
<td width=53%>Calls <b>FormatLabeledWordSetAsFlags</b> function.</td>
</tr>
<tr valign=top>
<td width=47%>PROP_QUAL_CONST</td>
<td width=53%>No output results.</td>
</tr>
<tr valign=top>
<td width=47%>PROP_QUAL_FLAGS</td>
<td width=53%><code>.......0 = Label Off String<br>
......1. = Label On String <br>
.....0.. = Label Off String<br>
....0... = Label Off String<br>
...1.... = Label On String<br>
..0..... = Label Off String<br>
.0...... = Label Off String<br>
0....... = Label Off String</code></td>
</tr>
<tr valign=top>
<td width=47%>PROP_QUAL_ARRAY</td>
<td width=53%><code>"XYZ = 0000 000a ffff ..."</code></td>
</tr>
</table><br>
<h4>PROP_TYPE_BYTESWAPPED_DWORD</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Property qualifier</th>
<th align=left width=57%>Example output</th>
</tr>
<tr valign=top>
<td width=43%>PROP_QUAL_NONE</td>
<td width=57%><code>"XYZ = 10 (0xa)"</code></td>
</tr>
<tr valign=top>
<td width=43%>PROP_QUAL_RANGE</td>
<td width=57%><code>"XYZ = 10 (0xa) Range:(1 (0x1) - 20 (0x14))</code></td>
</tr>
<tr valign=top>
<td width=43%>PROP_QUAL_BITFIELD</td>
<td width=57%>No output results.</td>
</tr>
<tr valign=top>
<td width=43%>PROP_QUAL_LABELED_SET</td>
<td width=57%><b>Calls FormatLabeledDwordSet function.</b></td>
</tr>
<tr valign=top>
<td width=43%>PROP_QUAL_LABELED_BITFIELD</td>
<td width=57%><b>Calls FormatLabeledDwordSetAsFlags function.</b></td>
</tr>
<tr valign=top>
<td width=43%>PROP_QUAL_CONST</td>
<td width=57%>No output results.</td>
</tr>
<tr valign=top>
<td width=43%>PROP_QUAL_FLAGS</td>
<td width=57%><code>...............0 = Label Off String<br>
..............1. = Label On String <br>
.............0.. = Label Off String<br>
............0... = Label Off String<br>
...........1.... = Label On String<br>
..........0..... = Label Off String<br>
.........0...... = Label Off String<br>
........0....... = Label Off String<br>
(and so on)</code></td>
</tr>
<tr valign=top>
<td width=43%>PROP_QUAL_ARRAY</td>
<td width=57%><code>"XYZ = 00000000 0000000a ffffffff ..."</code></td>
</tr>
</table><br>
<h4>PROP_TYPE_OBJECT_IDENTIFIER</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=33%>Property qualifier</th>
<th align=left width=67%>Example output</th>
</tr>
<tr valign=top>
<td width=33%>PROP_QUAL_NONE</td>
<td width=67%><code>"OID = 1.3.6.1.2.1.1.3.0"</code></td>
</tr>
</table><br>
<h4>PROP_TYPE_VINES_IP_ADDRESS</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=33%>Property qualifier</th>
<th align=left width=67%>Example output</th>
</tr>
<tr valign=top>
<td width=33%>PROP_QUAL_NONE</td>
<td width=67%><code>"Address = 172345:52"</code></td>
</tr>
</table><br>
<h4>PROP_TYPE_VAR_LEN_SMALL_INT</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=33%>Property qualifier</th>
<th align=left width=67%>Example output</th>
</tr>
<tr valign=top>
<td width=33%>PROP_QUAL_NONE</td>
<td width=67%><code>"Version = 2"</code></td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
