<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SmsEnumFilters</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="sms_smsenumfilters"></a>SmsEnumFilters</h1>
<p>
The <b>SmsEnumFilters</b> function retrieves an array of <a href="sheapi_7a3z.htm"><b>FILTER_INFO</b></a> structures that contain information about each <a href="sheapio_19f7.htm">filter</a> type supported by SMS API.</p>
<pre><code><b>SMS_STATUS SmsEnumFilters(
  FILTER_INFO</b><i> *paFI</i><b>,</b>
<b>                 </b>// Pointer to an array of FILTER_INFO structures.
<b>  DWORD</b><i> *pCount  </i>// Pointer to the count of filter types supported 
                 // by the SMS API.
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>paFI</i></dt>
<dd>
Specifies a pointer to an array of <a href="sheapi_7a3z.htm"><b>FILTER_INFO</b></a> structures. This array will receive information about each filter type supported by the SMS API. Your application must ensure that the array specified by <i>paFI</i> is large enough to contain the number of filter types supported by the SMS API. See the following remarks.</dd>
<dt>
<i>pCount</i></dt>
<dd>
Points to a DWORD that specifies the count of filter types supported by the SMS API.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The <b>SmsEnumFilters</b> function returns a status code SMS_STATUS. If successful, the function returns a status of SMS_OK. Otherwise, it returns the following manifest constant:
<dl>
<dt>
SMS_MORE_DATA</dt>
<dd>
The buffer specified by <i>paFI</i> is not big enough, and the function returns the count of container types in the DWORD specified by <i>pCount</i>. Or <i>paFI</i> or <i>pCount</i> were set to NULL and the count of container types was returned to the <i>pCount</i>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Your application must ensure that the array specified by <i>paFI</i> is large enough to contain the number of filter types supported by the SMS API.</p>
<p>
To get the correct size for the <i>paFI</i> array, call the <b>SmsEnumFilters</b> function with <i>paFI</i> set to NULL or with <i>pCount</i> set to zero. <b>SmsEnumFilters</b> will assign the count of filter types to <i>pCount</i> and return a status of SMS_MORE_DATA. After getting the correct value for <i>pCount</i>, call the <b>SmsEnumFilters</b> function again using the correct value for <i>pCount</i> and a <i>paFI</i> array with a size that matches the count specified by <i>pCount</i>.</p>
<p>
If the value for <i>pCount</i> is less than the number of filter types, the function writes the number of filter types specified by <i>pCount</i> to the <i>paFI</i> array and returns a status of SMS_MORE_DATA.</p>
<p>
If the value for <i>pCount</i> is greater than the number of filter types, the function writes all filter types to the <i>paFI</i> array and returns a status of SMS_OK.</p>
<h4>Example</h4>
<pre><code>// Get information about all filter types.

DWORD ctFilters = 0;
FILTER_INFO *pAvailFilterList = NULL;

// Use SmsEnumFilters to get the number of filter types.
SmsEnumFilters(0, &amp;ctFilters);

// Allocate memory for the array of 
// FILTER_INFO structures
pAvailFilterList = new FILTER_INFO[ctFilters];
SmsEnumFilters(pAvailFilterList, &amp;ctFilters);
 </code></pre>
<h4>See Also</h4>
<p>
<a href="sheapi_7a3z.htm"><b>FILTER_INFO</b></a></p>
<p>&nbsp;</p></body>
</HTML>
