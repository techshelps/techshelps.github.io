<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Package Filters (PACKAGE_FILTER)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="sms_package_filter"></a>Package Filters (PACKAGE_FILTER)</h3>
<p>
A package filter specifies the packages that are retrieved for a package container. A package filter enables your application to retrieve packages with workstation, sharing, or inventory properties set. If no package filter is set on a package container, all packages in the site database are retrieved for the container. Package filters can only be applied to package containers.</p>
<p>
Using the <a href="sheapi_6c6m.htm"><b>SmsAddToken</b></a> function, your application can add tokens to a package filter. Each expression token represents an attribute. For package filters, the tokens can be connected by using an OP_OR or OP_AND control token.</p>
<p>
The <b>TOKEN</b> structure that contains the expression token must have the following members:
<dl>
<dt>
<b>szName</b></dt>
<dd>
A string that specifies the name of the package property to be evaluated by the expression.
<p>
Currently, only one property can be evaluated: PackageType. PackageType specifies that the type of package is being evaluated.
</dd>
<dt>
<b>DwOp</b></dt>
<dd>
A DWORD value that specifies the operator used to evaluate the expression.
<p>
For package filters, this operator can only be QOP_STR_EQ.
</dd>
<dt>
<b>SzValue</b></dt>
<dd>
A string that specifies the value to be evaluated for the property specified by <b>szName</b>.
<p>
There are three values available for PackageType: Workstation, Server, and Inventory.

<p>
For example, if PackageType is set for <b>szName</b>, the string "Workstation" would specify a package with Workstation properties set.

</dd>
</dl>
<p>
For example, your application could create a package filter with a token that specifies a PackageType of Workstation. Your application could set this filter as the only filter on a package container. When your application populates the container, it contains folders that represent all packages that have Workstation properties defined.</p>
<h4>Example</h4>
<pre><code>// Function to add a token to a package filter so that
// the filter retrieves the package folders that
// are available for Run Command On Workstation jobs.

SMS_STATUS AddTokenToPackageFilter(HANDLE hFilter) 
                         //  Handle to package filter.
{
SMS_STATUS stat;
TOKEN Token;
// Clear the Token structure.
memset( &amp;Token, 0, sizeof (TOKEN) );

// Set the expression token to 
// szName = "PackageType"
// dwOp = QOP_STR_EQ
// szValue = "Workstation"

// Set the package property.
strcpy( Token.szName, "PackageType");
// Set the operator to string equals.
Token.dwOp = QOP_STR_EQ;
// Set the type of package.
strcpy( Token.szValue, "Workstation"); 

// Add the token to the filter.
stat = SmsAddToken( hFilter, // Specifies the handle to filter.
                    OP_OR,  // Use the OR control token to 
                             // add a token to the package filter.
                    &amp;Token,  // Specifies the structure containing
                             // the expression token.
                    AT_END   // Adds the token to the end of 
                             // the filter.
                  );


if (stat == SMS_OK)    
    printf("The token was successfully added to the filter.\n");
else 
    printf("SmsAddToken error: %d\n", stat);

return stat;
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
