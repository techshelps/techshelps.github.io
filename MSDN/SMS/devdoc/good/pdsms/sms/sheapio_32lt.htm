<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set a filter</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="sms_set_a_filter_proc1"></a>Set a filter</h3>
<p>
If you do not set a filter, all objects for the container type will be returned when the container is populated. You can set one or more filters on a container.</p>
<h5><img src="../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To set a filter on the container to specify the objects you want to find</h5>
<ol>
<li>
Use the <a href="sheapi_3gvm.htm"><b>SmsCreateFilter</b></a> function to create a filter for use on the container.<p>
The <b>SmsCreateFilter</b> function takes three parameters:
<ul>
<li>
The type of filter</li>
<li>
A handle to the specified database connection</li>
<li>
A pointer to a handle that is assigned the handle to the new filter. You use the handle to manage the filter.</li>
</ul>
<p>
Example:
<pre><code>// Create a job filter.
HANDLE hFilter;
stat = SmsCreateFilter( JOB_FILTER, // Type of filter.
                        hConnect,   // Handle to database
                                    // connection.
                        &amp;hFilter    // Assign handle to new filter
                      );            // to hFilter.
</code></pre>
</li>
<li>
Use the token functions to add tokens to the filter. Each token represents an expression used to identify the objects to find.<p>
To add a token to a filter, use the <a href="sheapi_6c6m.htm"><b>SmsAddToken</b></a> function.
<p>
The <b>SmsAddToken</b> function takes four parameters:
<ul>
<li>
The handle to the filter</li>
<li>
The operator control token, which specifies how the expression token is connected to the adjacent expression token or subclause</li>
<li>
A pointer to the structure containing the expression token</li>
<li>
The location where the token is to be inserted.</li>
</ul>
<p>
Example:
<pre><code>// Add a token to the job filter that
// finds all Run Command On Workstation jobs.

TOKEN Token;
// Clear the Token structure.
memset( &amp;Token, 0, sizeof (TOKEN) );

// Set the expression token to 
// "JobType is equal to Install".

// Set the attribute name to JobType.
strcpy( Token.szName, "JobType");
// Set the operator used to evaluate the expression.
Token.dwOp = QOP_STR_EQ; // Use the equals operator.
// Set the value to evaluate.
strcpy( Token.szValue, "Install"); 

// Add the token to the filter.
stat = SmsAddToken( hFilter, // Specifies the handle to filter.
                    OP_AND,  // Use the AND control token to 
                             // connect the expression to 
                             // adjacent expressions.
                    &amp;Token,  // Specifies the structure 
                             // containing the expression 
                             // token.
                    AT_END   // Add the token to the end of 
                             // the filter.
                  );
 </code></pre>
</li>
<li>
Use the <a href="sheapi_3z5e.htm"><b>SmsSetFilter</b></a> function to apply the filter to the container.<p>
The <b>SmsSetFilter</b> function takes two parameters:
<ul>
<li>
The handle to the container to which you want to apply the filter</li>
<li>
The handle to the filter to assign to the container.</li>
</ul>
<pre><code>// Apply the filter to the container.
stat = SmsSetFilter ( hContainer,  // Handle to container.
                      hFilter      // Handle to filter.
                    );
 </code></pre>
</li>
<li>
If the filter will not be applied to any other containers, use the <a href="sheapi_4zsi.htm"><b>SmsCloseFilter</b></a> function to close the filter and decrement the usage count of the filter. When the usage count is zero, the memory used by the filter is deallocated.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
