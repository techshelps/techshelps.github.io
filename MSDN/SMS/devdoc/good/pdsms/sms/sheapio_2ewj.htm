<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handling Tokens</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="sms_handling_tokens"></a>Handling Tokens</h2>
<p>
When you create or edit a filter or an inventory rules folder, you handle the expression tokens as clauses or subclauses.</p>
<p>
A <i>clause</i> is the combination of an expression token (or subclause) and its adjacent logical operator. You must add and delete expression tokens as clauses.</p>
<p>
A <i>subclause</i> is a set of expression tokens that can be logically treated as a single expression token. A subclause starts and ends with an expression token. You can explicitly group subclauses with parentheses.</p>
<p>
In addition to combining expression tokens with logical operators, you can group a set of expression tokens together. A <i>group</i> is a set of expression tokens that are explicitly grouped together with parentheses. You can group only a set of expression tokens that form a subclause.</p>
<p>
By making a set of expression tokens a group, you ensure that the group's expression tokens are treated as a single entity. Groups have a higher operator precedence than the logical operators (<b>AND</b> and <b>OR</b>).</p>
<p>
Groups make complex queries easier to read. You can also use groups to clarify how <b>OR</b> clauses will be evaluated.</p>
<p>&nbsp;</p></body>
</HTML>
