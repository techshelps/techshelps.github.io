<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Filter Containers</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="sms_filter_containers"></a>Filter Containers</h1>
<p>
Using the SMS API, your application can manage the queries in a site database. In the SMS API, queries are represented as persistent machine filters in a filter container.</p>
<p>
You manage persistent machine filters within a filter container by using the Filter Container functions. You handle persistent machine filters and their tokens by using the Filter functions.</p>
<p>
Using the <a href="sheapi_0hiq.htm"><b>SmsOpenFilterContainer</b></a> function, your application can open a filter container. When your application opens a filter container, the filter container is populated with persistent filters.</p>
<p>
After a filter container has been opened, your application can read the contents of each filter in the filter container and the tokens within each filter.</p>
<p>
After a filter container is opened, the order of the filters within that particular filter container is fixed. Using the <a href="sheapi_92uq.htm"><b>SmsGetNextFilter</b></a> function, your application can access the filters in the filter container sequentially. <b>SmsGetNextFilter</b> returns the handle to the next filter in the list of filters within a filter container. To start at the beginning of the list again, use <a href="sheapi_1gx0.htm"><b>SmsRewind</b></a> to reset a filter container's internal filter index so that its filters can be reiterated.</p>
<p>
Using the <a href="sheapi_83ac.htm"><b>SmsGetFilterByID</b></a> function, your application can access a particular filter by its identifier. The identifier uniquely identifies the filter. The identifier is an eight-character identifier that the SMS system assigns to the persistent filter (which represents a query).</p>
<p>
The steps to create a persistent filter are the same as those for creating a transient machine filter, with the addition of two steps to:
<ul>
<li>
Set the scalars for the persistent filter.</li>
<li>
Commit the machine filter to the filter container (that is, write the machine filter to the site database).</li>
</ul>
<p>
After a machine filter is committed to a filter container, that filter becomes a persistent filter.</p>
<p>
Currently, the SMS API does not support deletion of persistent filters from the site database.</p>
<p>
For information about creating persistent filters (SMS queries), see <a href="sheapio_4acp.htm">General Steps for Using the SMS API to Manage Queries</a>.</p>
<p>&nbsp;</p></body>
</HTML>
