<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SmsOpenContainer</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="sms_smsopencontainer"></a>SmsOpenContainer</h1>
<p>
The <b>SmsOpenContainer</b> function opens a <a href="sheapio_1jar.htm">container</a> for the type of object that you want to access in the site database.</p>
<pre><code><b>SMS_STATUS SmsOpenContainer(
  DWORD</b><i> cType</i><b>,         </b>// Type of container.
<b>  HANDLE</b><i> hConnection</i><b>,  </b>// Handle to database connection.
<b>  HANDLE</b><i> *phContainer  </i>// Pointer to the handle that will receive 
                       // the pointer to the new container.
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cType</i></dt>
<dd>
Specifies the type of container to open. See <a href="sheapi_22sz.htm">Container types</a>.</dd>
<dt>
<i>hConnection</i></dt>
<dd>
Specifies the handle to the database connection. A database connection is established using <a href="sheapi_89mc.htm"><b>SmsDataSourceConnect</b></a>.</dd>
<dt>
<i>phContainer</i></dt>
<dd>
Points to the handle that is assigned the handle to the container. You use the handle to manage the container.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The <b>SmsOpenContainer</b> function returns a status code SMS_STATUS. If successful, the function returns a status of SMS_OK. Otherwise, it returns one of the following manifest constants:
<dl>
<dt>
SMS_INVALID_HANDLE</dt>
<dd>
The specified connection handle is not valid.</dd>
<dt>
SMS_INVALID_CONTAINER_ID</dt>
<dd>
An unknown container type was specified.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Note that you can open multiple containers. For example, you could open two job containers to handle two types of job <a href="sheapio_5g1f.htm">folders</a> independently—one with a <a href="sheapio_19f7.htm">filter</a> set to get Run Command On Workstation job folders (<a href="sheapio_335e.htm">F_INSTALLJOB</a>), and another container with a filter set to get Share Package On Server job folders (<a href="sheapio_8dde.htm">F_SRVINSTALL</a>).</p>
<p>
After your application uses the <b>SmsOpenContainer</b> function to open a container, the container is empty, that is, it contains no folders. Your application must use the <a href="sheapi_4u79.htm"><b>SmsPopulate</b></a> function to fill the container with objects from the site database. Before your application calls the <b>SmsPopulate</b> function, it can apply filters that specify criteria for retrieving objects (which are represented as folders within the container) from the database. Your application can create filters by using the <a href="sheapi_3gvm.htm"><b>SmsCreateFilter</b></a> function, set tokens for the filter by using the <a href="sheapi_6c6m.htm"><b>SmsAddToken</b></a> function, and apply the filter to the container by using the <a href="sheapi_3z5e.htm"><b>SmsSetFilter</b></a> function. After applying filters to a container, your application must use the <b>SmsPopulate</b> function to query the site database for folders that meet the criteria set by the filters applied to the container. If no filters are applied to a container, all objects of the type supported by the container are retrieved by <b>SmsPopulate</b>.</p>
<p>
After populating a container, your application can access the folders by using the <a href="sheapi_58ky.htm"><b>SmsGetNextFolder</b></a> function. For subfolders within a folder, <a href="sheapi_9okk.htm"><b>SmsGetFolderByID</b></a> can also be used to retrieve subfolders. Note that <a href="sheapi_9okk.htm"><b>SmsGetFolderByID</b></a> cannot be used to retrieve a top-level folder in a container.</p>
<p>
After your application has finished using a container, it should free the memory used by the container by calling the <a href="sheapi_2vg2.htm"><b>SmsCloseContainer</b></a> function.</p>
<p>
If your application needs to open a filter container, it must call the <a href="sheapi_0hiq.htm"><b>SmsOpenFilterContainer</b></a> function to open a filter container.</p>
<h4>See Also</h4>
<p>
<a href="sheapi_89mc.htm"><b>SmsDataSourceConnect</b></a>, <a href="sheapi_4u79.htm"><b>SmsPopulate</b></a>, <a href="sheapi_3gvm.htm"><b>SmsCreateFilter</b></a>, <a href="sheapi_3z5e.htm"><b>SmsSetFilter</b></a>, <a href="sheapi_3z5e.htm"><b>SmsSetFilter</b></a>, <a href="sheapi_58ky.htm"><b>SmsGetNextFolder</b></a>, <a href="sheapi_9okk.htm"><b>SmsGetFolderByID</b></a>, <a href="sheapi_2vg2.htm"><b>SmsCloseContainer</b></a>, <a href="sheapi_0hiq.htm"><b>SmsOpenFilterContainer</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
