<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SmsGetNextFilter</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="sms_smsgetnextfilter"></a>SmsGetNextFilter</h1>
<p>
The <b>SmsGetNextFilter</b> function retrieves the handle to the next persistent <a href="sheapio_19f7.htm">filter</a> of the specified type from the specified <a href="sheapio_5mk3.htm">filter container</a>.</p>
<pre><code><b>SMS_STATUS SmsGetNextFilter(
  HANDLE</b><i> hFContainer</i><b>,  </b>// Handle to filter container.
<b>  DWORD</b><i> frType</i><b>,        </b>// Filter type.
<b>  HANDLE</b><i> *phFilter     </i>// Pointer to handle that receives the next 
                       // filter's handle.
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFContainer</i></dt>
<dd>
Specifies the handle to the filter container from which to retrieve the next persistent filter.</dd>
<dt>
<i>frType</i></dt>
<dd>
Specifies the filter type. See <a href="sheapi_9dtf.htm">Filter Types</a>. A specific filter type must be specified—F_ANY is an invalid parameter for <i>frType</i>. Currently, <a href="sheapio_9tma.htm">MACHINE_FILTER</a> is the only type of filter supported by filter containers. If your application specifies a filter type other than MACHINE_FILTER, <b>SmsGetNextFilter</b> returns SMS_INVALID_FILTER_ID.</dd>
<dt>
<i>phFilter</i></dt>
<dd>
Receives the handle to the next persistent filter.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The <b>SmsGetNextFilter</b> function returns a status code SMS_STATUS. If successful, the function returns a status of SMS_OK. Otherwise, it returns one of the following manifest constants:
<dl>
<dt>
SMS_INVALID_FILTER_ID</dt>
<dd>
No filters of the specified filter type were found in the filter container.</dd>
<dt>
SMS_NO_MORE_DATA</dt>
<dd>
No filter was retrieved because the end of the filter list was reached.
</dd>
</dl>
<h4>Remarks</h4>
<p>
After a filter container is opened, the order of the filters within that particular filter container is fixed. The sequence is determined by the order in which the persistent filters were retrieved. <b>SmsGetNextFilter</b> opens the next filter in the filter container.</p>
<p>
Note that a filter opened by the <b>SmsGetNextFilter</b> remains open until it is closed by using <a href="sheapi_4zsi.htm"><b>SmsCloseFilter</b></a>. The memory allocated for the filter is not deallocated until the usage count for the filter is zero, that is, when all handles to the filter are closed and the filter container itself is closed using <a href="sheapi_888i.htm"><b>SmsCloseFilterContainer</b></a>.</p>
<p>
Because <b>SmsGetNextFilter</b> reads filters sequentially, your application must explicitly reset the filter list to start at the beginning of the list again. When <b>SmsGetNextFilter</b> has reached the end of the filter list, it returns SMS_NO_MORE_DATA. To start at the beginning of the filter list again, your application can use <a href="sheapi_1gx0.htm"><b>SmsRewind</b></a>. <b>SmsRewind</b> enables your application to iterate the filters again from the beginning of the filter list.</p>
<p>
Using the <a href="sheapi_83ac.htm"><b>SmsGetFilterByID</b></a> function, your application can also access a particular filter by its identifier.</p>
<h4>See Also</h4>
<p>
<a href="sheapi_4zsi.htm"><b>SmsCloseFilter</b></a>, <a href="sheapi_888i.htm"><b>SmsCloseFilterContainer</b></a>, <a href="sheapi_83ac.htm"><b>SmsGetFilterByID</b></a>, <a href="sheapi_1gx0.htm"><b>SmsRewind</b></a></p>
<p>&nbsp;</p></body>
</HTML>
