<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Information and Guidelines for Visual Basic Programmers</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconinformationguidelinesforvisualbasicprogrammers"></a>Information and Guidelines for Visual Basic Programmers</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconInformationGuidelinesForVisualBasicProgrammers_C;veconInformationGuidelinesForVisualBasicProgrammersC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconInformationGuidelinesForVisualBasicProgrammers_T;veconInformationGuidelinesForVisualBasicProgrammersT">
</object></p>
<p>
To access the Visual Studio Analyzer programming interfaces from within Visual Basic, you need to add two type library references to your Visual Basic project. Once you add the type library references, you can access the methods within the programming interfaces using the Object Browser.</p>
<p class=label>
<b>To add the Visual Studio Analyzer type library references</b>
<ol>
<li>
Click the <b>Project</b> menu, and then click <b>References</b>.<br><br></li>
<li>
In the <b>Available references</b> box, select the check box for the following two type libraries:<ul type=disc>
<li>
MSVSA Automatable Event Source Installer<br><br></li>
<li>
MSVSA Automatable Inproc Event Creator</li>
</ul>
</li>
<li>
Click <b>OK</b>.</li>
</ol>
<p>
These libraries give you access to the event source installer and in-process event creator classes. You can use the Object Browser to access the methods for each class.</p>
<h2>Constants for Visual Studio Analyzer Predefined Events</h2>
<p>
Visual Studio Analyzer ships with a number of predefined events. These events are identified by global unique identifiers (GUIDs) and must be referred to by their GUID each time you use them in code. However, you can make using these predefined events a little easier for yourself by creating constants for these events and saving them in a global file. You can then include that file in your projects that contain code for customizing Visual Studio Analyzer.</p>
<p>
The predefined events and their GUIDs are listed in file vaids.h. This file contains C++ declarations. You can use this file as a source to create your file of Visual Basic constants.</p>
<p>
For example, the DEBUG_EVENT_CALL predefined event appears in vaids.h as follows:</p>
<pre><code>DECLARE_GUID(DEBUG_EVENT_CALL, 6c736d61, bcbf, 11d0, 8a, 23, 00, aa, 00, b5, 8e, 10);
</code></pre>
<p>
In your file, use the following format:</p>
<pre><code>Public Const DEBUG_EVENT_CALL = "{6c736d6-bcbf-11d0-8a23-00aa00b58e10}"
</code></pre>
</BODY>
</HTML>
