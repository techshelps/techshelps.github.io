<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VSABeginSession</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vemthvsarpclvaabeginsession"></a>VSABeginSession</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vemthVsaRpclVaaBeginSession_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vemthVsaRpclVaaBeginSession_T">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vemthVsaRpclVaaBeginSession_X">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vemthVsaRpclVaaBeginSession_A">
</object></p>
<p>
Starts a Visual Studio Analyzer session with the calling component. You assign a unique identifier to the session. Events that are generated during this session are stamped with the session identifier, which helps you identify the true source of an event, particularly in cases where multiple copies of the component are running at the same time.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>HRESULT VSABeginSession ([in] long </b><i>vaaId</i>,<b><br>
[in, string] wchar_t </b><i>*guidSourceID</i>,<b><br>
[in, string] wchar_t </b><i>*strSessionName</i><b>)</b>;</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>vaaId</i></p>
<p class=indent>
Unique identifier for this session of the component. This identifier is returned when you call <b>VSAOpenConnection</b>.</p>
<p class=dt>
<i>guidSourceID</i></p>
<p class=indent>
A unique identifier for this component. Multiple sessions from this component can exist at the same time on the same machine. This ID is defined when you register a component with Visual Studio Analyzer.</p>
<p class=dt>
<i>strSessionName</i></p>
<p class=indent>
A session identifier, which must be unique among all instances of this component until the machine is restarted.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Each Visual Studio Analyzer in-process event creator object can accept only one call to <b>BeginSession</b>. If your object supports multiple simultaneous sessions, such as a Web server running on more than one port, you can choose to create multiple in-process event creator objects.</p>
<p>
The code does not validate whether <i>strSessionName</i> is unique. If it is not unique, the user might be unable to distinguish events from the two sessions. This lack of checking allows for two servers that represent one conceptual session to coexist and operate correctly.</p>
<p>
This function will fail if <i>guidSourceID</i> is not properly registered.</p>
<p>
You can use the default user component, DEBUG_EVENT_SOURCE_USER, which is already registered, if you want a quick way to generate events without a lot of overhead. The default user component is registered automatically when you install Visual Studio Analyzer.</p>
<p>
You can make repeated calls to <b>BeginSession</b> and <b>EndSession</b> on the same object, as long as you have a matching <b>BeginSession</b> call for each <b>EndSession</b> call. You cannot nest calls.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Accepted</b></td>
<td class=label width=50%><b>Not Accepted</b></td>
</tr>
<tr valign=top>
<td width=50%>BeginSession</td>
<td width=50%>BeginSession</td>
</tr>
<tr valign=top>
<td width=50%>EndSession</td>
<td width=50%>BeginSession</td>
</tr>
<tr valign=top>
<td width=50%>BeginSession</td>
<td width=50%>EndSession</td>
</tr>
<tr valign=top>
<td width=50%>EndSession</td>
<td width=50%>EndSession</td>
</tr>
</table><br>
</BODY>
</HTML>
