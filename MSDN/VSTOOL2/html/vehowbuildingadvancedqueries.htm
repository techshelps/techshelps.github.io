<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating and Refining Visual Studio Analyzer Filters</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vehowbuildingadvancedqueries"></a>Creating and Refining Visual Studio Analyzer Filters</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vehowBuildingAdvancedQueries_C">
</object></p>
<p>
With Visual Studio Analyzer filters, you can focus the data you use in your application analysis. Through filters, you determine which Visual Studio Analyzer events to collect and to include in an event log. You define a filter before you start collecting events. After you have collected events, you refine the filter to help you focus on the events that are most important to your analysis. You can have multiple filters to help you view the data in different ways.</p>
<p>
To work with filters, you use the Filter Editor dialog box, which contains both a graphical and a textual interface. You can build most filters using the graphical interface. However, some complex filters, such as those that use comparison operators, cannot be represented using the graphical interface; you must build those filters using the textual interface, which you can access by clicking Edit Text. You can resize the Filter Editor dialog box to a size that suits you, and the dialog box will remember its size between sessions.</p>
<p>
Visual Studio Analyzer also includes sample filters you can use to get started, or you can open an existing filter. Visual Studio Analyzer filters are saved as text files with the extension .vaf.</p>
<p class=label>
<b>To create a filter</b>
<ol>
<li>
In the <b>Project Explorer</b>, select <b>Filters</b>.<br><br></li>
<li>
Right-click to display the shortcut menu, and then click <b>Add Item</b>.<br><br></li>
<li>
Click <b>Filter</b>.<p class=tl>
A path and file name are proposed for you in the <b>Name</b> box.</P></li>
<li>
In the <b>Name</b> box, change the path or file name if you want.<br><br></li>
<li>
Click <b>Open</b>.<p class=tl>
The <b>Filter Editor</b> dialog box opens so you can define your filter.</P></li>
</ol>
<p class=label>
<b>To define a filter</b>
<ol>
<li>
Click the <b>View</b> menu, and then click <b>Designer</b>.<p class=tl>
The <b>Filter Editor</b> dialog box displays, enabling you to construct a filter graphically. To edit a filter's text directly instead, click <b>Edit Text</b>. You can also open the filter text editor by clicking the <b>View</b> menu, and then clicking <b>Code</b>.</P><p class=tl>
The Filter Editor uses standard Boolean syntax for filter expressions. For guidelines on defining filters using the filter text editor, see <a href="veconfiltersyntaxreference.htm">Filter Syntax Reference</a>.</P><p class=tl>
The <b>Filter Editor</b> dialog box is displayed in the following illustration. It is a resizable dialog box that you can resize by dragging, and it will remember its size for subsequent uses.</P><p>
<img src="ve2wmd1.gif" border=0></P></li>
<li>
Select the machines or processes, components, categories, and events that you want monitored.<p class=tl>
As you make selections, the text version of your filter is shown below the check boxes. Each selection you make within a single column is joined to the next using a logical OR. Each selection you make across columns is joined to the next using a logical AND.</P><p class=tl>
If you cannot express your filter the way you want on the first tab, click the rightmost <b>OR</b> tab at the top of the box, or press the INSERT key followed by the SPACE key. Another <b>OR</b> tab is added and the choices you make on that tab will be added to the filter using a logical OR. You can add as many additional tabs as you need.</P></li>
<li>
Click <b>OK</b>.<p class=tl>
Changes you make to a filter take effect as soon as you click <b>OK</b>. To save changes to a filter, click <b>Save All</b> on the <b>File</b> menu.</P></li>
</ol>
<p class=label>
<b>To use a predefined filter</b>
<ol>
<li>
Right-click the <b>Filters</b> node in the <b>Project Explorer</b>, and then click <b>Add Predefined Filter</b>.<br><br></li>
<li>
Click the name of the filter you want.<p class=tl>
The filter is added to the <b>Filters</b> node in the <b>Project Explorer</b>. You can open it in the <b>Filter Editor</b> and modify it to reflect your needs.</P></li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can also add a predefined filter with the <b>Add Item</b> command.</p>
<p class=label>
<b>To save a filter</b>
<ul type=disc>
<li>
Click <b>File</b>, and then click <b>Save All</b>.<p class=tl>
This saves the filter as part of the project.</P></li>
</ul>
<p class=label>
<b>To open an existing filter</b>
<ol>
<li>
Right-click the <b>Filters</b> node in the <b>Project Explorer</b>, and then click <b>Add Item</b>.<br><br></li>
<li>
Click the <b>Existing</b> tab.<br><br></li>
<li>
Navigate to the project that contains the filter you want and select the filter.<br><br></li>
<li>
Click <b>Open</b>.</li>
</ol>
<p class=label>
<b>To set a filter as the recording filter</b></p>
<p>
In order for a filter to take effect when you collect events, you must mark the filter as the recording filter.
<ol>
<li>
Right-click the filter to display the shortcut menu.<br><br></li>
<li>
Click <b>Set Record Filter</b>.</li>
</ol>
<p class=label>
<b>To apply a filter to a Visual Studio Analyzer view</b></p>
<p>
You can change the filter that is applied to a Visual Studio Analyzer view. If you have more than one view open, you can apply the same filter to all views (one at a time; there is no command to apply a filter to all views at once) or apply a different filter to each view. If you apply the same filter to multiple views, any changes you make to the filter are reflected immediately in each view, unless you disable automatic updates by turning off AutoFilter for that view and clearing the filter applied to that view.
<ol>
<li>
Click in the view to which you want to apply the filter.<br><br></li>
<li>
In the <b>Project Explorer</b>, select the filter you want to apply.<br><br></li>
<li>
Right-click to display the shortcut menu, and then click <b>Apply Filter to View</b>.</li>
</ol>
<p class=label>
<b>To clear a filter from a view</b>
<ol>
<li>
Click in the view from which you want to clear the filter.<br><br></li>
<li>
Click <b>Analyzer</b>, and then click <b>Clear View Filter</b>. You can also right-click in the view to display the shortcut menu, and then click <b>Clear View Filter</b>.</li>
</ol>
<p class=label>
<b>To disable automatic view updates when filters change</b></p>
<p>
If a view has AutoFilter turned on, it shares its filter settings with other windows. For example, if you clear a filter from one view, all other views with AutoFilter turned on are also cleared of that filter. You can disable updates by turning AutoFilter off. However, if you have applied a filter to a view, any modifications you make to the applied filter will always affect the view, independent of the AutoFilter setting.
<ol>
<li>
Click in the view for which you want to disable updates.<br><br></li>
<li>
Right-click to display the shortcut menu, and then click <b>AutoFilter</b>.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To re-enable automatic updates to views, click <b>AutoFilter</b> on the view's shortcut menu again.</p></li>
</ol>
</BODY>
</HTML>
