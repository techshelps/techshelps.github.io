<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering New Event Categories with Visual Studio Analyzer</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconregisteringneweventcategories"></a>Registering New Event Categories with Visual Studio Analyzer</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconRegisteringNewEventCategories_C;veconRegisteringNewEventCategoriesC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconRegisteringNewEventCategories;veconRegisteringNewEventCategories_T;veconRegisteringNewEventCategoriesT">
</object></p>
<p>
You can use event categories to group related events, partly to make it easier to locate the events within the event log, and partly to provide context for the kinds of interaction events represent. A typical Visual Studio Analyzer event log can contain thousands of events; categories provide a way to locate particular events more quickly. The Visual Studio Analyzer user can see categories listed within the Filter Editor.</p>
<p>
<img src="ve4ox01.gif" border=0></p>
<p>
If you choose to use event categories, you can use those that Visual Studio Analyzer provides, or you can define your own. The following table lists those that Visual Studio Analyzer provides:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Predefined Event Category</b></td>
<td class=label width=47%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=53%>DEBUG_EVENT_CATEGORY_STARTSTOP</td>
<td width=47%>Events generated by components starting or shutting down.</td>
</tr>
<tr valign=top>
<td width=53%>DEBUG_EVENT_CATEGORY_CALLRETURN</td>
<td width=47%>Events generated by the function calls and returns.</td>
</tr>
<tr valign=top>
<td width=53%>DEBUG_EVENT_CATEGORY_QUERYRESULT</td>
<td width=47%>Events generated by the starting and completing of database queries.</td>
</tr>
<tr valign=top>
<td width=53%>DEBUG_EVENT_CATEGORY_TRANSACTION</td>
<td width=47%>Events generated by transactions, including start, commit, and rollback.</td>
</tr>
<tr valign=top>
<td width=53%>DEBUG_EVENT_CATEGORY_ALL</td>
<td width=47%>All events.</td>
</tr>
<tr valign=top>
<td width=53%>DEBUG_EVENT_CATEGORY_MEASURED_ALL</td>
<td width=47%>All measured events. A measured event is generated by a dynamic event source and signifies a measurement of an item, such as CPU usage.</td>
</tr>
</table><br>
<p>
Add the code for registering event categories to your component installation or startup code after the code for registering your component with Visual Studio Analyzer.</p>
<h2>Defining Custom Event Categories</h2>
<p>
You must take the following steps with code in your component in order to register your custom event categories.
<ol>
<li>
Register your component with Visual Studio Analyzer.<p class=tl>
If you want your component to generate Visual Studio Analyzer events, you must add code that will register the component with Visual Studio Analyzer. See <a href="vehowregisteringneweventsources.htm">Registering New Components with Visual Studio Analyzer</a> for information on how to do this.</P></li>
<li>
Call the <b>RegisterEventCategory</b> method of the event source installer object for each category you want to define.<p class=tl>
The <b>RegisterEventCategory</b> method registers the name and ID of each event category.</P><p class=tl>
You can arrange categories in a hierarchy with the <i>guidParentID</i> parameter. A hierarchy allows you to define additional levels of categorization. For example, consider the Visual Studio Analyzer events that Performance Monitor generates. These events are categorized to represent the different objects and instances that are providing performance data.</P><p>
<img src="ve4ox02.gif" border=0></P><p class=tl>
If you register categories without specifying the <i>guidParentID</i> parameter, your categories will be displayed in the Filter Editor at the same level (top) as the All Events category. If you want your categories to appear subordinate to the All Events category, specify DEBUG_EVENT_CATEGORY_ALL for <i>guidParentID</i>.</P><p class=tl>
The interface exposed by the event source installer object is not a dual interface; therefore, the version of the interface you use depends on the language in which your component is written.</P><table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Language</b></td>
<td class=label width=50%><b>Event Installer Interface</b></td>
</tr>
<tr valign=top>
<td width=50%>Visual Basic, Visual J++</td>
<td width=50%><a href="veifcisystemdebugeventinstall.htm">IsystemDebugEventInstallAuto</a></td>
</tr>
<tr valign=top>
<td width=50%>Visual C++</td>
<td width=50%><a href="veifcisystemdebugeventinstall.htm">ISystemDebugEventInstall</a></td>
</tr>
</table><br>
<p class=tl>
If your component is not COM-enabled, use the Visual Studio Analyzer standard RPC interface, <a href="veifcvsarpcl.htm">VsaRpcl</a>.</P></li>
<li>
Register the events you plan to generate.<p class=tl>
You can use any of the Visual Studio Analyzer system-defined events with your component, but you must register each event that you plan to generate. See <a href="veconregisteringnewevents.htm">Registering New Events with Visual Studio Analyzer</a> for information on how to do this.</P></li>
</ol>
</BODY>
</HTML>
