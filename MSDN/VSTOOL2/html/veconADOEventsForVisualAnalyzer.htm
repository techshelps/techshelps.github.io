<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADO Events for Visual Studio Analyzer</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconadoeventsforvisualanalyzer"></a>ADO Events for Visual Studio Analyzer</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconADOEventsForVisualAnalyzer_C;veconADOEventsForVisualAnalyzerC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconADOEventsForVisualAnalyzer_T;veconADOEventsForVisualAnalyzerT">
</object></p>
<p>
ADO version 2.0 is capable of generating Visual Studio Analyzer events. You can use these events to trace ADO interactions in your distributed applications.</p>
<p>
Other Microsoft-supplied technologies are also capable of generating Visual Studio Analyzer events; see <a href="veconabouteventsources.htm">Microsoft Components That Generate Visual Studio Analyzer Events</a> for a complete list.</p>
<p class=label>
<b>Visual Studio Analyzer Events Generated by ADO</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=24%><b>Event</b></td>
<td class=label width=41%><b>Event description</b></td>
<td class=label width=35%><b>Event data</b></td>
</tr>
<tr valign=top>
<td width=24%>ConnectionClose</td>
<td width=41%>Indicates that ADO is disconnecting from an OLE DB data source.</td>
<td width=35%>None.</td>
</tr>
<tr valign=top>
<td width=24%>ConnectionOpen</td>
<td width=41%>Indicates that ADO is connecting to an OLE DB data source.</td>
<td width=35%>The connection string used to connect to the data source, if the client provides it.</td>
</tr>
<tr valign=top>
<td width=24%>Find</td>
<td width=41%>Indicates that an ADO client has called the ADO Recordset.Find function.</td>
<td width=35%>Criteria for the Find operation; records are matched against this criteria.</td>
</tr>
<tr valign=top>
<td width=24%>GetRows</td>
<td width=41%>Indicates that an ADO client has called the ADO Recordset.GetRows function.</td>
<td width=35%>Number of rows being fetched.</td>
</tr>
<tr valign=top>
<td width=24%>QueryResult</td>
<td width=41%>Indicates that the database has returned a resultset in response to a query.</td>
<td width=35%>None.</td>
</tr>
<tr valign=top>
<td width=24%>QuerySend</td>
<td width=41%>Indicates that ADO is executing a command. This event can be triggered by the following functions:<p>
Connection.Execute<br>
Command.Execute<br>
Connection.<i>stored procedure name</i><br>
Recordset.Open</p>
</td>
<td width=35%>The SQL statements that comprise the query.</td>
</tr>
<tr valign=top>
<td width=24%>RecordsetOpen</td>
<td width=41%>Indicates that ADO is opening a recordset on a remote server. Applies to three-tier scenarios only.</td>
<td width=35%>The source (typically the row-returning command text) with which the recordset is opened.</td>
</tr>
<tr valign=top>
<td width=24%>Sort</td>
<td width=41%>Indicates that ADO is prepared to filter or sort the data.</td>
<td width=35%>Sort or filter criteria being applied to the recordset data.</td>
</tr>
<tr valign=top>
<td width=24%>Transaction Rollback</td>
<td width=41%>Indicates that ADO is aborting the current local transaction.</td>
<td width=35%>Returns true or false. If true, the abort is retaining, meaning that another transaction will be started right after this one aborts. If false, the abort is not retaining.</td>
</tr>
<tr valign=top>
<td width=24%>TransactionCommit</td>
<td width=41%>Indicates that ADO is committing a local transaction on the OLE DB provider.</td>
<td width=35%>Returns true or false. If true, the commit is retaining, meaning that another transaction will be started right after this one commits. If false, the commit is not retaining.</td>
</tr>
<tr valign=top>
<td width=24%>TransactionStart</td>
<td width=41%>Indicates that ADO is beginning a local transaction on the OLE DB provider.</td>
<td width=35%>Isolation level at which ADO is starting the transaction. The isolation level indicates which level of changes made by other transactions can be seen.</td>
</tr>
<tr valign=top>
<td width=24%>UpdateBatch</td>
<td width=41%>Indicates that ADO is sending an update batch to the provider. Applies to three-tier scenarios only.</td>
<td width=35%>The name of the remote server, if any, to which ADO is sending the updates.</td>
</tr>
</table><br>
</BODY>
</HTML>
