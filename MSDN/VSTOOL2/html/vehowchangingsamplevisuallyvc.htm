<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changing the Sample Visually</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vehowchangingsamplevisuallyvc"></a>Changing the Sample Visually</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vehowChangingSampleVisuallyVC_C">
</object></p>
<h2>Updating the Model</h2>
<p>
In the previous exercise, you browsed the specification of the ECourse class. Now, suppose that you want to add a new integer property to the ECourse class, named <code>m_Credits</code>, to represents the number of credits each course grants upon completion.</p>
<p class=label>
<b>To change the properties of the ECourse class</b>
<ol>
<li>
As in the previous exercise, double-click the ECourse class in the Business Services pane. This displays the Class Specification for ECourse. Click the Properties tab to view the member variables of the class. <br><br></li>
<li>
Use the right mouse button to click inside the list of properties. Click <b>Insert</b> from the popup menu. Type m_Credits for the property name and press Enter.<br><br></li>
<li>
Double-click with the left mouse button in the Type column of m_Credits. The Property Specification for m_Credits appears. Assign a type of int and an Initial value of 0. <br><br></li>
<li>
Click <b>OK</b> on the Property Specification and Class Specification to save your changes.</li>
</ol>
<h2>Generating C++ Code</h2>
<p>
Up to this point in the tutorial, no C++ code has been generated from the Visual Modeler.</p>
<p class=label>
<b>To generate code for the changed ECourse class</b>
<ol>
<li>
In Visual Modeler, open the Browser window by clicking <b>Browser</b> on<b> </b>the <b>View</b> menu. <br><br></li>
<li>
Expand the Component View by clicking the <b>+</b> icon to the left of the Component View folder icon.<br><br></li>
<li>
Right-click the &lt;&lt;EXE&gt;&gt; Enroll node and click <b>Generate Code</b> from the popup menu.<br><br></li>
<li>
In the <b>Open Microsoft Visual C++ Project</b> dialog box, navigate to and select the Enroll.dsw project.<br><br></li>
<li>
The <b>Code Generation - Summary</b> dialog box appears. Examine the Summary and Log tabs for information regarding the code generation.<br><br></li>
<li>
Open ECourse.h in the Visual C++ project window to view the C++ class declaration for ECourse with the new <code>m_Credits</code> integer member variable.<br><br></li>
<li>
(Optional) To add the credit field to the form, edit the IDD_COURSE_FORM resource in the Enroll.rc resource file. To persist the new <code>m_Credits</code> variable in the database, add a column for that variable in the Course table of StdReg32.mdb. <br><br></li>
<li>
Build the sample by clicking <b>Build enroll.exe</b> from the <b>Build</b> menu. <br><br></li>
<li>
Run the sample by clicking <b>Execute enroll.exe</b> from the <b>Build</b> menu.</li>
</ol>
</BODY>
</HTML>
