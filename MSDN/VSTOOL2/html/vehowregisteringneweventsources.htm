<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering New Components with Visual Studio Analyzer</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vehowregisteringneweventsources"></a>Registering New Components with Visual Studio Analyzer</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vehowRegisteringNewEventSources_C;vehowRegisteringNewEventSourcesC">
</object></p>
<p>
If you want your component to generate Visual Studio Analyzer events, the first thing you must do is add code that will register the component with Visual Studio Analyzer. Add this code to your component's installation or startup code, depending on when you want to register your component. You can register your component with Visual Studio Analyzer at one of three times:
<ul type=disc>
<li>
When your component is installed.<br><br></li>
<li>
Every time your component starts.<br><br></li>
<li>
Every time your component starts, after verifying that the component isn’t already registered.</li>
</ul>
<p>
The following lists the steps you must take with code in your component in order to register that component with Visual Studio Analyzer:
<ol>
<li>
Create an instance of the event source installer object.<p class=tl>
The event source installer object is a COM object that provides methods for registering your component with the Visual Studio Analyzer Event Monitor. How you create this object depends on the language in which your component is written, as shown in the following table:</P><table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=16%><b>Language</b></td>
<td class=label width=84%><b>Code to Create an Event Source Installer Instance</b></td>
</tr>
<tr valign=top>
<td width=16%>Visual Basic</td>
<td width=84%><pre><code>dim mESI As MSVSAEventSourceInstaller </code><pre><code>Set mESI = New MSVSAEventSourceInstaller</code></pre>
<p>
— or —</p>
<pre><code>dim mESI As new MSVSAEventSourceInstaller </code></pre>
</pre>
</td>
</tr>
<tr valign=top>
<td width=16%>Visual C++</td>
<td width=84%><pre><code>HRESULT hr = CoCreateInstance(CLSID_VSA_ESI, NULL, CLSCTX_INPROC_SERVER, IID_ISystemDebugEventInstall,
 (void **)&amp;m_pInstall);</code></pre>
</td>
</tr>
<tr valign=top>
<td width=16%>Visual J++</td>
<td width=84%><pre><code>static ISystemDebugEventInstallAuto m_ESA = null;</code><pre><code>private static void SampleCreateESA()
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; m_ESA = new MSVSAEventSourceInstaller();
 &nbsp; }</code></pre>
</pre>
</td>
</tr>
</table><br>
</li>
<li>
Call the <b>RegisterSource</b> or <b>RegisterDynamicSource</b> methods of the event source installer object, so that your component is registered.<p class=tl>
The <b>RegisterSource</b> method registers your component as a normal component. Most components fall into this category. Use the <b>RegisterDynamicSource</b> method to register your component as a dynamic component, which generates events at defined intervals.</P><p class=tl>
The interface exposed by the event source installer object is not a dual interface; therefore, the version of the interface you use depends on the language in which your component is written:</P><table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Language</b></td>
<td class=label width=50%><b>Event Installer Interface</b></td>
</tr>
<tr valign=top>
<td width=50%>Visual Basic, Visual J++</td>
<td width=50%><a href="veifcisystemdebugeventinstall.htm">IsystemDebugEventInstallAuto</a></td>
</tr>
<tr valign=top>
<td width=50%>Visual C++</td>
<td width=50%><a href="veifcisystemdebugeventinstall.htm">ISystemDebugEventInstall</a></td>
</tr>
</table><br>
<p class=tl>
If your component is not COM-enabled, use the Visual Studio Analyzer standard RPC interface, <a href="veifcvsarpcl.htm">VsaRpcl</a>.</P></li>
<li>
Register any custom event categories you plan to use (optional).<p class=tl>
See <a href="veconregisteringneweventcategories.htm">Registering New Event Categories with Visual Studio Analyzer</a> for information on how to do this.</P></li>
<li>
Register the events you plan to generate.<p class=tl>
See <a href="veconregisteringnewevents.htm">Registering New Events with Visual Studio Analyzer</a> for information on how to do this.</P></li>
</ol>
</BODY>
</HTML>
