<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Browsing the Enroll System Design Model</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vehowbrowsingenrollsystemdesignmodelvc"></a>Browsing the Enroll System Design Model</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vehowBrowsingEnrollSystemDesignModelVC_C">
</object></p>
<p>
In this exercise, you'll use Visual Modeler to get acquainted with the design model of the course administration system.</p>
<h2>Opening the Enroll System Design Model</h2>
<p class=label>
<b>To open the course administration system design model</b>
<ol>
<li>
Start Visual Modeler. Click Start, then Programs, Microsoft Visual C++ 6.0, Microsoft Visual C++ 6.0 Tools, Microsoft Visual Modeler 6.0.<br><br></li>
<li>
Click <b>Open</b> on the <b>File</b> menu.<br><br></li>
<li>
In the <b>Load Model from</b> dialog box, open the folder where the ENROLLVM sample has been installed. <br><br></li>
<li>
Double-click the Enroll.mdl file. Visual Modeler opens the sample model and displays a diagram called the Three-Tiered Service Model.</li>
</ol>
<p>
When you open the model, you'll see the architecture of the course administration application; that is, you'll see the classes of the design model and the relations between them. Defining and maintaining the architecture and relationships within the system are among the most important aspects of large-scale iterative development.</p>
<p>
The Three-Tiered Service Model diagram supports the three-tiered architectural approach used when building Microsoft Visual C++ applications. It separates the contents of the system into three conceptual tiers of services: user services (left pane), business services (middle pane), and data services (right pane). It is a special kind of class diagram, called a three-tiered diagram.</p>
<p>
To the left in the application window, a browser window lists the contents of the course system design model in a hierarchical order. (If you cannot see the browser in your Visual Modeler application window, click <b>Browser</b> on the <b>View</b> menu.) </p>
<p>
The diagram notation used in this tutorial is a subset of the Unified Modeling Language (UML). Please refer to the Visual Modeler online help for descriptions of the different modeling constructs. To open this help, click <b>Help</b>, then <b>Visual Modeler Help Topics</b> in the Visual Modeler.</p>
<h2>Browsing the Class Diagrams</h2>
<p>
The User Services diagram, located on the left pane of the Three-Tiered Service Model, is the diagram of the MFC document/view structure for the course administration system's user interface. The Business Services pane in the middle separates out the Course and Section objects of the application.</p>
<p>
In the visual representation that the User Services diagram provides, the general structure of the application can be understood without browsing the source code. As an example, examine the details of the ECourse class.</p>
<p class=label>
<b>To look at the details of the ECourse class</b>
<ol>
<li>
Double-click the ESection class in the Business Services pane. This displays the Class Specification for ESection (double-click below the title of the class if a drop-down list is displayed instead). This specification enumerates the methods, properties, and other aspects of the ESection class. Click the Properties tab to view the member variables of the class. <br><br></li>
<li>
Close the specification.</li>
</ol>
</BODY>
</HTML>
