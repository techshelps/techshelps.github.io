<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FireEvent</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vemthisystemdebugeventfirefireevent"></a>FireEvent</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vemthISystemDebugEventFireFireEvent_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vemthISystemDebugEventFireFireEvent_T">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vemthISystemDebugEventFireFireEvent_X">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vemthISystemDebugEventFireFireEvent_A">
</object></p>
<p>
Generates a registered event from the calling component.</p>
<p class=label>
<b>Syntax</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=16%>Visual Basic</td>
<td width=84%><i>object</i><b>.FireEvent(</b><i>guidEvent As String</i>, <i>rgKeys</i>, <i>rgValues</i>, <i>rgCount As Long</i>, <i>dwFlags As eVSAEventFlags</i><b>)</b></td>
</tr>
<tr valign=top>
<td width=16%>Visual C++</td>
<td width=84%><b>HRESULT FireEvent(<br>
REFGUID</b> <i>guidEvent</i>,<br>
<b>int</b> <i>nEntries</i>,<br>
<b>LPCDWORD</b> <i>rgKeys</i>,<br>
<b>LPCDWORD</b> <i>rgValues</i>,<br>
<b>LPCDWORD</b> <i>rgTypes</i>,<br>
<b>DWORD</b> <i>dwTimeLow</i>,<br>
<b>LONG</b> <i>dwTimeHigh</i>,<br>
<b>VSAEventFlags</b> <i>dwFlags</i><b>)</b>;</td>
</tr>
<tr valign=top>
<td width=16%>Visual J++</td>
<td width=84%><i>object</i>.<b>FireEvent(</b><i>String</i> <i>guidEvent</i>, <i>Variant rgKeys</i>,<i> Variant rgValues</i>, <i>int rgCount</i>, <i>int dwFlags</i><b>)</b>;</td>
</tr>
</table><br>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>object</i></p>
<p class=indent>
A unique instance of the in-process event creator object.</p>
<p class=dt>
<i>guidEvent</i></p>
<p class=indent>
The event being generated. Events have many possible parameters, which are specified in the <i>rgKeys</i> and <i>rgValues</i> arrays. In Visual C++, the parameter types are specified in the <i>rgType</i> array.</p>
<p class=indent>
<b>Visual C++</b>: [in]</p>
<p class=dt>
<i>rgCount, nEntries</i></p>
<p class=indent>
Number of entries in the <i>rgKeys</i>, <i>rgValues</i>, and <i>rgTypes</i> arrays.</p>
<p class=indent>
<b>Visual C++</b>: [in]</p>
<p class=dt>
<i>rgKeys</i></p>
<p class=indent>
Names of event fields passed for this event. See <a href="vecolvsastandardparameter.htm">VSAStandardParameter</a> for a list of available event fields. In Visual C++, the <i>cVSAParameterKeyMask</i> and <i>cVSAParameterKeyString</i> values in <i>rgTypes</i> define whether the event field names are passed as strings or as predefined indexes.</p>
<p class=indent>
<b>Visual C++</b>: [in size_is(nEntries)]</p>
<p class=indent>
<b>Visual J++</b>: This value must be initialized as a SafeArray or the call to <b>FireEvent</b> will fail.</p>
<p class=dt>
<i>rgValues</i></p>
<p class=indent>
Values for the event fields passed for this event. In Visual C++, information in the <i>rgTypes</i> array defines whether the values are Unicode strings, ANSI strings, GUIDs, DWORDs, or BYTEArrays.</p>
<p class=indent>
<b>Visual C++</b>: [in size_is(nEntries)]</p>
<p class=indent>
<b>Visual J++</b>: This value must be initialized as a SafeArray or the call to <b>FireEvent</b> will fail.</p>
<p class=dt>
<i>rgTypes</i></p>
<p class=indent>
<b>Visual C++</b>: [in size_is(nEntries)] Data types for values in the <i>rgKeys</i> and <i>rgValues</i> arrays. See <a href="vecolvsaparametertype.htm">VSAParameterType</a> for more information.</p>
<p class=dt>
<i>dwTimeLow</i></p>
<p class=indent>
<b>Visual C++</b>: [in] The local time of the event, or 0. (Low 32 bits.)</p>
<p class=dt>
<i>dwTimeHigh</i></p>
<p class=indent>
<b>Visual C++</b>: [in] The local time of the event, or 0. (High 32 bits.)</p>
<p class=dt>
<i>dwFlags</i></p>
<p class=indent>
Provides default values for a group of event parameters. See <a href="vecolvsaeventflags.htm">VSAEventFlags</a> for more information.</p>
<p class=indent>
<b>Visual C++</b>: [in]</p>
<p class=indent>
<b>Visual Basic</b>: Possible values are <b>cVSAEventStandard</b>, <b>cVSAEventDefaultSource</b>, or <b>cVSAEventDefaultTarget</b>.</p>
<p class=label>
<b>Remarks</b></p>
<p>
<b>Visual Basic</b>: Use the <i>rgKeys</i> and <i>rgValues</i> arrays in the <a href="#vemthisystemdebugeventfirefireevent">FireEvent</a> call to pass information about the event. These arrays work together; the <i>rgKeys</i> array holds the names of the various fields for an event; the <i>rgValues</i> array holds the value for each field. You can dimension these arrays as either fixed-count or dynamic; for example:</p>
<pre><code>Dim Keys (1 to 2) As String, Values (1 to 2) as String
</code></pre>
<p>
<b>Visual C++</b>: Set the <i>dwTimeLow</i> and <i>dwTimeHigh</i> parameters using the return value of the <b>QueryPerformanceCounter</b> function. If you pass in 0 for these parameters, Visual Studio Analyzer defaults to the current time. If you know that the event happened at a different time, you should pass that time in.</p>
</BODY>
</HTML>
