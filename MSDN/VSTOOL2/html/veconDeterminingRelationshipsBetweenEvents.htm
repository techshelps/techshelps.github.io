<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining the Relationships Between Events</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vecondeterminingrelationshipsbetweenevents"></a>Determining the Relationships Between Events</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconDeterminingRelationshipsBetweenEvents_C;veconDeterminingRelationshipsBetweenEventsC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconDeterminingRelationshipsBetweenEvents_T;veconDeterminingRelationshipsBetweenEventsT">
</object></p>
<p>
Events such as function call and return, database query send and result, and transaction start and commit are related to each other because they show both the client and server interaction. Showing these relationships to the Visual Studio Analyzer user assists in analyzing performance and isolating faults. The <i>CorrelationID</i> and <i>CausalityID</i> event parameters contain strings that you can match so that the Visual Studio Analyzer user will see related events properly.</p>
<p>
A typical function call and return scenario generates four events in the sequence shown in the following illustrated:</p>
<p>
<img src="ve4p9k1.gif" border=0>
<ol>
<li>
The first event contains the event parameters and is generated just before a call to a function actually occurs.<br><br></li>
<li>
The second event, identical to the first except for the timestamp, is generated when the call arrives at the called function (this is the Enter event).<br><br></li>
<li>
The third event (Leave) is generated as the call leaves the called function.<br><br></li>
<li>
The fourth event is generated when the call returns, and contains the ReturnValue parameter.</li>
</ol>
<p>
Often you will have only the Call and Return events, not the Call, Enter, Leave, and Return events. If you do have all four events, you should provide the same <i>CorrelationID</i> value for all four of these events so that they can be matched. The Source and Target event parameters should be the same for both the call and return events: that is, if A calls B, and then B returns to A, the Source parameter is A in both cases, and the Target parameter is B.</p>
<p>
If it is not feasible to provide identical <i>CorrelationID</i> values for all four events, then at a minimum you should provide the same <i>CorrelationID</i> value for the Enter/Leave event pair and for the Call/Return pair. If it is not feasible to provide identical <i>CorrelationID</i> values for even the Enter/Leave or Call/Return pairs, at minimum you should provide the events with identical <i>CausalityID</i> values.</p>
</BODY>
</HTML>
