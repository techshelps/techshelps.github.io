<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Command Object (ADO)</TITLE>

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME=MS-HKWD CONTENT="Command Object (ADO)">
<META NAME="Keywords" CONTENT="Active Data Objects, ADO">
<META NAME="Platform" CONTENT="Windows">
<META NAME="ROBOTS" CONTENT="all">

<!--@ SNIFF_START -->
<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../code/ver.js"></SCRIPT>
<!--@ SNIFF_END -->

<SCRIPT DEFER SRC="../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Microsoft ActiveX Data Objects"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../art/headbare.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Microsoft ActiveX Data Objects"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" ID=TOC HREF="../contents.htm">Contents</A>  <IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../index.htm">Index</A>  <IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="idx01.htm">Topic Contents</A>
</PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1><a name="adobjcommand"></a>Command Object</H1>
<p>A <b>Command</b> object is a definition of a specific command that you intend to execute against a data source.
<p><a href="obj01_1.htm"><img src="art/objconn.gif" border=0></a><BR><img src="art/parchild.gif" border=0><img src="art/objcomma.gif" border=0><BR><img src="art/space.gif" border=0><img src="art/parchild.gif" border=0><a href="obj02_2.htm"><img src="art/colparam.gif" border=0></a>
<p><b>Collections</b>
<p><a href="obj02_2.htm"><b>Parameters</b></a>, <a href="obj02_3.htm"><b>Properties</b></a>
<p><b>Methods</b>
<p><a href="mth01_9.htm"><b>CreateParameter</b></a>, <a href="mth02_2.htm"><b>Execute</b></a>
<p><b>Properties</b>
<p><a href="pro01_2.htm"><b>ActiveConnection</b></a>, <a href="pro02_1.htm"><b>CommandText</b></a>, <a href="pro02_2.htm"><b>CommandTimeout</b></a>, <a href="pro02_3.htm"><b>CommandType</b></a>, <a href="pro04_3.htm"><b>Name</b></a>, <a href="pro05_4.htm"><b>Prepared</b></a>, <a href="pro07_2.htm"><b>State</b></a>
<p><b>Remarks</b>
<p>Use a <b>Command</b> object to query a database and return records in a <a href="obj01_6.htm"><b>Recordset</b></a> object, to execute a bulk operation, or to manipulate the structure of a database. Depending on the functionality of the provider, some <b>Command</b> collections, methods, or properties may generate an error when referenced.
<p>With the collections, methods, and properties of a <b>Command</b> object, you can do the following:
<ul>
<li>
Define the executable text of the command (for example, an SQL statement) with the <a href="pro02_1.htm"><b>CommandText</b></a> property.<br><br></li>
<li>
Define parameterized queries or stored-procedure arguments with <a href="obj01_4.htm"><b>Parameter</b></a> objects and the <a href="obj02_2.htm"><b>Parameters</b></a> collection.<br><br></li>
<li>
Execute a command and return a <b>Recordset</b> object if appropriate with the <a href="mth02_2.htm"><b>Execute</b></a> method.<br><br></li>
<li>
Specify the type of command with the <a href="pro02_3.htm"><b>CommandType</b></a> property prior to execution to optimize performance.<br><br></li>
<li>
Control whether or not the provider saves a prepared (or compiled) version of the command prior to execution with the <a href="pro05_4.htm"><b>Prepared</b></a> property.<br><br></li>
<li>
Set the number of seconds a provider will wait for a command to execute with the <a href="pro02_2.htm"><b>CommandTimeout</b></a> property.<br><br></li>
<li>
Associate an open connection with a <b>Command</b> object by setting its <b>ActiveConnection</b> property.<br><br></li>
<li>
Set the <b>Name</b> property to identify the <b>Command</b> object as a method on the associated <b>Connection</b> object.<br><br></li>
<li>
Pass a <b>Command</b> object to the <b>Source</b> property of a <b>Recordset</b> in order to obtain data.</li>
</ul>
<p><b>Note   </b>To execute a query without using a <b>Command</b> object, pass a query string to the <b>Execute</b> method of a <b>Connection</b> object or to the <b>Open</b> method of a <b>Recordset</b> object. However, a <b>Command</b> object is required when you want to persist the command text and re-execute it, or use query parameters.
<p>To create a <b>Command</b> object independently of a previously defined <a href="obj01_1.htm"><b>Connection</b></a> object, set its <a href="pro01_2.htm"><b>ActiveConnection</b></a> property to a valid connection string. ADO still creates a <b>Connection</b> object, but it doesn't assign that object to an object variable. However, if you are associating multiple <b>Command</b> objects with the same connection, you should explicitly create and open a <b>Connection</b> object; this assigns the <b>Connection</b> object to an object variable. If you do not set the <b>Command</b> objects' <b>ActiveConnection</b> property to this object variable, ADO creates a new <b>Connection</b> object for each <b>Command</b> object, even if you use the same connection string.
<p>To execute a <b>Command</b>, simply call it by its <b>Name</b> property on the associated <b>Connection</b> object. The <b>Command</b> must have its <b>ActiveConnection</b> property set to the <b>Connection</b> object. If the <b>Command</b> has parameters, pass values for them as arguments to the method.
<p><b>See Also</b>
<p><a href="idx02.htm">Using OLE DB Providers with ADO</a>
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>