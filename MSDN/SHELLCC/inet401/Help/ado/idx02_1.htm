<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft OLE DB Provider for ODBC</TITLE>

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME=MS-HKWD CONTENT="Microsoft OLE DB Provider for ODBC">
<META NAME="Keywords" CONTENT="Active Data Objects, ADO">
<META NAME="Platform" CONTENT="Windows">
<META NAME="ROBOTS" CONTENT="all">

<!--@ SNIFF_START -->
<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../code/ver.js"></SCRIPT>
<!--@ SNIFF_END -->

<SCRIPT DEFER SRC="../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Microsoft ActiveX Data Objects"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../art/headbare.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Microsoft ActiveX Data Objects"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" ID=TOC HREF="../contents.htm">Contents</A>  <IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../index.htm">Index</A>  <IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="idx01.htm">Topic Contents</A>
</PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1><a name="adidxodbcproviderspecifics"></a>Microsoft OLE DB Provider for ODBC</H1>
<p>The Microsoft&reg; ODBC Provider allows ADO to connect to any ODBC data source. ODBC drivers are available for every major DBMS in use today, including Microsoft SQL Server, Microsoft Access (Microsoft Jet database engine), and Microsoft FoxPro&reg;, as well as non-Microsoft database products such as Oracle. The provider is free-threaded and unicode enabled.
<p>The provider supports transactions, although different DBMS engines offer different types of transaction support. For example, Microsoft Access supports nested transactions, up to five levels deep.
<p>This is the default provider for ADO and, when used with Microsoft SQL Server 6.5, all provider-dependent ADO 1.5 properties and methods are supported, except as noted in the ADO language reference topics.
<p><b>Connection String Parameters</b>
<p>To connect to this provider, set the <b>Provider=</b> argument of the <a href="pro02_4.htm"><b>ConnectionString</b></a> property to
<pre>MSDASQL</PRE>
<p>Reading the <a href="pro05_5.htm"><b>Provider</b></a> property will return this string as well.
<p>Because this is the default provider for ADO, if you omit the <b>Provider=</b> parameter from the connection string, ADO will attempt to establish a connection to this provider.
<p>The provider does not support any specific connection parameters in addition to those defined by ADO. However, the provider will pass any non-ADO connection parameters to the ODBC driver manager. 
<p>Because you can omit the <b>Provider</b> parameter, you can therefore compose an ADO connection string that is identical to an ODBC connection string for the same data source, using the same parameter names (<b>DRIVER=</b>, <b>DATABASE=</b>, <b>DSN=</b>, and so on), values, and syntax as you would when composing an ODBC connection string. You can connect with or without a predefined data source name (DSN) or FileDSN.
<p>Syntax with a DSN or FileDSN:
<p><b>&quot;</b>[<b>Provider=MSDASQL;</b>] { <b>DSN=</b><i>name</i> | <b>FileDSN=</b><i>filename</i> } <b>;</b> [<b>DATABASE=</b><i>database</i><b>;</b>] <b>UID=</b><i>user</i><b>;</b> <b>PWD=</b><i>password</i><b>&quot;</b>
<p>Syntax without a DSN (DSN-less connection):
<p><b>&quot;</b>[<b>Provider=MSDASQL;</b>] <b>DRIVER=</b><i>driver</i><b>;</b> <b>SERVER=</b><i>server</i><b>;</b> <b>DATABASE=</b><i>database</i><b>;</b> <b>UID=</b><i>user</i><b>;</b> <b>PWD=</b><i>password</i><b>&quot;</b>
<p>If you use a <b>DSN</b> or <b>FileDSN</b>, it must be defined through the ODBC Administrator in the Windows Control Panel. As an alternative to setting a <b>DSN</b>, you can specify the ODBC driver (<b>DRIVER=</b>), such as &quot;SQLServer,&quot; the server name (<b>SERVER=</b>), and the database name (<b>DATABASE=</b>).
<p>You can also specify a user account name (<b>UID=</b>), and the password for the user account (<b>PWD=</b>) in the ODBC-specific parameters or in the standard ADO-defined <b>User ID</b> and <b>Password</b> parameters. If you include both the ADO and the ODBC-specific parameters for these values, the ADO parameters take precedence.
<p>Although a <b>DSN</b> definition already specifies a database, you can specify a <b>DATABASE</b> parameter in addition to a <b>DSN</b> to connect to a different database. This also changes the <b>DSN</b> definition to include the specified database. It is a good idea to always include the <b>DATABASE</b> parameter when you use a <b>DSN</b>. This will ensure that you connect to the proper database because another user may have changed the default database parameter since you last checked the <b>DSN</b> definition.
<p><b>Command Text</b>
<p>How you use the <b>Command</b> object largely depends on the data source, and what type of query or command statement it will accept.
<p>ODBC does provide a specific syntax for calling stored procedures. For the <b>CommandText</b> property of a <b>Command</b> object, the <b><i>CommandText</i></b> argument to the <b>Execute</b> method on a <b>Connection</b> object, or the <b><i>Source</i></b> argument to the <b>Open</b> method on a <b>Recordset</b> object, pass in a string having this syntax:
<p><b>&quot;{</b> [ <b>? = </b>] <b>call</b> <i>procedure</i> [ <b>(</b> <b>?</b> [<b>, ? </b>[ <b>,</b> … ]] <b>)</b> ] <b>}&quot;</b>
<p>Where each <b>?</b> references an object in the <b>Parameters</b> collection. The first <b>?</b> references <b>Parameters</b>(0), the next <b>?</b> references <b>Parameters</b>(1), and so on.
<p>The parameter references are optional and depend on the structure of the stored procedure. If calling a stored procedure that defines no parameters, your string would look like this:
<p><b>&quot;{</b> <b>call </b><i>procedure</i><b> }&quot;</b>
<p>If you have two query parameters, your string would look like this:
<p><b>&quot;{ call </b><i>procedure</i><b> ( ?, ? ) }&quot;</b>
<p>If the stored procedure wants to return a value, the return value is treated as another parameter. If you have no query parameters, but you do have a return value, your string would look like this:
<p><b>&quot;{ ? = call </b><i>procedure</i><b> }&quot;</b>
<p>Finally, if you have a return value and two query parameters, your string would look like this:
<p><b>&quot;{ ? = call</b> <i>procedure</i> <b>( ?, ? ) }&quot;</b>
<p><b>Recordset Behavior</b>
<p>The following tables list the standard ADO methods and properties available on a <b>Recordset</b> object opened with this provider.
<p>For more detailed information on <b>Recordset</b> behavior for your provider configuration, run the <b>Supports</b> method, and enumerate the <b>Properties</b> collection of the <b>Recordset</b> to determine whether provider-specific dynamic properties are present.
<p>Availability of standard ADO <b>Recordset</b> properties:

<TABLE>
<tr><TD><b>Property</b></TD><TD><b>ForwardOnly</b></TD><TD><b>Dynamic</b></TD><TD><b>Keyset</b></TD><TD><b>Static</b></td></TR>
<TR><TD><b>AbsolutePage</b></TD><TD>not available</TD><TD>not available</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR><TD><b>AbsolutePosition</b></TD><TD>not available</TD><TD>not available</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR><TD><b>ActiveConnection</b></TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR><TD><b>BOF</b></TD><TD>read-only</TD><TD>read-only</TD><TD>read-only</TD><TD>read-only</td></TR>
<TR><TD><b>Bookmark</b></TD><TD>not available</TD><TD>not available</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR><TD><b>CacheSize</b></TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR><TD><b>CursorLocation</b></TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR><TD><b>CursorType</b></TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR><TD><b>EditMode</b></TD><TD>read-only</TD><TD>read-only</TD><TD>read-only</TD><TD>read-only</td></TR>
<TR><TD><b>EOF</b></TD><TD>read-only</TD><TD>read-only</TD><TD>read-only</TD><TD>read-only</td></TR>
<TR><TD><b>Filter</b></TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR><TD><b>LockType</b></TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR><TD><b>MarshalOptions</b></TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR><TD><b>MaxRecords</b></TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</TD><TD>read/write</td></TR>
<TR>
<TD>
<b>PageCount</b></TD><TD>
not available</TD><TD>
not available</TD><TD>
read-only</TD><TD>
read-only</td>
</tr>
<tr>
<TD>
<b>PageSize</b></TD><TD>
read/write</TD><TD>
read/write</TD><TD>
read/write</TD><TD>
read/write</td>
</tr>
<tr>
<TD>
<b>RecordCount</b></TD><TD>
not available</TD><TD>
not available</TD><TD>
read-only</TD><TD>
read-only</td>
</tr>
<tr>
<TD>
<b>Source</b></TD><TD>
read/write</TD><TD>
read/write</TD><TD>
read/write</TD><TD>
read/write</td>
</tr>
<tr>
<TD>
<b>State</b></TD><TD>
read-only</TD><TD>
read-only</TD><TD>
read-only</TD><TD>
read-only</td>
</tr>
<tr>
<TD>
<b>Status</b></TD><TD>
read-only</TD><TD>
read-only</TD><TD>
read-only</TD><TD>
read-only</td>
</tr>
</table><br>
<p>The <b>AbsolutePosition</b> and <b>AbsolutePage</b> properties are write-only when ADO is used with version 1.0 of the Microsoft OLE DB Provider for ODBC.
<p>Availability of standard ADO <b>Recordset</b> methods:
<TABLE>
<tr>
<TD>
<b>Method</b></TD><TD>
<b>ForwardOnly</b></TD><TD>
<b>Dynamic</b></TD><TD>
<b>Keyset</b></TD><TD>
<b>Static</b></td>
</tr>
<tr>
<TD>
</td>
</tr>
<tr>
<TD>
<b>AddNew</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>CancelBatch</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>CancelUpdate</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>Clone</b></TD><TD>
No</TD><TD>
No</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>Close</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>Delete</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>GetRows</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>Move</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>MoveFirst</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>MoveLast</b></TD><TD>
No</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>MoveNext</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>MovePrevious</b></TD><TD>
No</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>NextRecordset*</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>Open</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>Requery</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>Resync</b></TD><TD>
No</TD><TD>
No</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>Supports</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>Update</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
<tr>
<TD>
<b>UpdateBatch</b></TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</TD><TD>
Yes</td>
</tr>
</table><br>
<p>*Not supported for Microsoft Access databases.
<p>For specific implementation details and functional information about the Microsoft OLE DB Provider for ODBC, consult the documents &quot;Microsoft OLE DB Provider for ODBC&quot; and the &quot;Microsoft OLE DB Programmer's Reference,&quot; available in the OLE DB SDK, which you can review or download at Microsoft OLE DB Web page. The &quot;Microsoft ODBC Programmer's Reference&quot; is available on the Microsoft ODBC Web page.
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>