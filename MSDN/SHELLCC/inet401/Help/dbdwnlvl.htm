<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Authoring Data Binding for Other Browsers</TITLE>

<META NAME=MS-HKWD CONTENT="Authoring Data Binding for Other Browsers">
<META NAME="Keywords" CONTENT="Internet Client SDK">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = ''	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="Authoring_Data_Bindi"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Authoring Data Binding for Other Browsers"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="art/headIC.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Authoring Data Binding for Other Browsers"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" ID=TOC HREF="contents.htm">Contents</A>  <IMG SRC="art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="index.htm">Index</A>  <IMG SRC="art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="faq.htm">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>Authoring Data Binding for Other Browsers</H1>
<BR CLEAR=ALL>
<P>This article guides Web authors through the process of developing pages that support data binding while still maintaining compatibility with down-level browsers.
<P>When writing content for the Internet, Web authors are often interested in reaching the widest possible audience, and that means creating content that works with the myriad of available Web browsers. This section shows authors how to use server scripts to construct pages that are targeted toward both Microsoft&#174; Internet Explorer 4.0 and other down-level browsers. By detecting the user agent on the server, Web authors can provide a superior user experience by taking advantage of the data binding features in Internet Explorer 4.0 and still maintain compatibility with other clients that do not support data binding.

<P>Most pages that deal with data provide the user with one or more of the following capabilities:

<UL><LI>Displaying the current record. Navigational support allows the user to sequentially view additional records.

<LI>Displaying all the records that meet a given criteria. These records are typically displayed in tabular format.

<LI>Updating the data. Elements on the page can be edited, and changes can be synchronized with the database.
</UL>
<P>Given these features, the Web author should consider the implementation of four functional areas so that they leverage Internet Explorer 4.0 and are still compatible with other browsers:

<UL><LI><A HREF="dbdwnlvl.htm#db_downlevel_template">Generating a Template on the Server</A><LI><A HREF="dbdwnlvl.htm#db_downlevel_dso">Conditionally Supplying Data Source Objects</A><LI><A HREF="dbdwnlvl.htm#db_downlevel_scripting">Scripting the User interface</A><LI><A HREF="dbdwnlvl.htm#db_downlevel_update">Supporting Data Update</A></UL>
<H2><A NAME="db_downlevel_template">Generating a Template on the Server</A></H2>
<P>Typically, a template processor, such as Active Server Pages (ASP), is used to generate HTML on the server before sending it to the client. The template processor accesses the data and expands the template into an HTML page that contains the data. To take advantage of the Internet Explorer 4.0 data binding features, authors should take the following steps when authoring their pages:

<UL><LI>Isolate the elements on the page into groups of bound elements and static elements. To accomplish this, break the page into frames, or isolate portions of the page using the <A HREF="dhtml/references/html/DIV.htm#DIV">DIV</A> element. 

<LI>For current record functionality:
<OL><LI>Write a server-side template that displays the bound elements in the page.
<LI>Within this template, differentiate between browsers as follows:
<UL><LI>For Internet Explorer 4.0, write out the elements with the data binding attributes.
<LI>For other browsers, perform the same operations as today. 
 
That is, expand the template with a single record and manage state on the server so a page with the next and previous records can be sent to users when requested.
</UL>
</OL>
<LI>For table repetition functionality:
<OL><LI>For Internet Explorer 4.0, write out only the table template with the data binding attributes.
<LI>For other browsers, perform the same operations as today. That is, expand the table on the server and generate the HTML.
</OL>
</UL>
<H3><A NAME="Examples">Examples</A></H3>
<P>The following examples demonstrate current record functionality and table repetition.

<P><B>Current record functionality</B>

<P>When Internet Explorer is the browser, include the current record template in the page.

<P>First create a frame set as the base document.

<PRE>&lt;FRAMESET ROWS="20%, 50%, 30%"&gt;
&lt;FRAME SRC="nav.htm" NAME="nav_frame" SCROLLING=NO NORESIZE&gt;
&lt;FRAME SRC="product.asp" NAME="product_frame" SCROLLING=NO NORESIZE&gt;
&lt;FRAME SRC="similar.asp" NAME="similar_frame" SCROLLING=YES NORESIZE&gt;
&lt;/FRAMESET&gt;
</PRE>
<P>In the server-side script, author code to conditionally build the page.

<PRE>.
.
.
&lt;DIV DATASRC="#ProductList" DATAFLD="Product_Title"&gt;
    &lt;% If Not IsIE4OrLater() Then %&gt; &lt;%= RSProductList("Product_Title") %&gt;
    &lt;% End If %&gt;
&lt;/DIV&gt;

&lt;HR&gt;

&lt;H2&gt;Overview&lt;/H2&gt;

.
.
.
Price: &lt;INPUT TYPE=TEXT DATASRC=#ProductList      DATAFLD="Column9"     &lt;% If Not IsIE4OrLater() Then %&gt;     VALUE=&lt;%= RSProductList("Price")%&gt;     &lt;% End If %&gt;&gt;
.
.
.
</PRE>
<P>RSProductList is a reference to a recordset opened at the start of the page (not shown). This recordset is only created on the server if Internet Explorer 4.0 is not the browser.

<P>When Internet Explorer 4.0 is not being used, the contents of the DIV is filled with data from the Title field in the database, and the VALUE of the INPUT tag is set to the value supplied by the recordset. When Internet Explorer 4.0 is used, these elements are synchronized with data supplied by the data source object on the client side. The DATASRC attribute is applied in both cases since down-level browsers ignore unrecognized tags. Code to insert a data source object when the browser is Internet Explorer 4.0 is shown <A HREF="dbdwnlvl.htm#db_downlevel_dso">below</A>.


<P><B>Table Repetition</B>

<P>When Internet Explorer 4.0 is the browser, the frame identified as similar_frame in the above FRAMESET example contains a template in which the table containing the list of similar products is bound on the client.

<P>The code for the table follows:

<PRE>&lt;TABLE DATASRC="#SimilarList"&gt;
  &lt;% If Not IsIE4OrLater() Then %&gt;
    &lt;% Do While Not RsSimilarList.EOF %&gt;
      &lt;TR&gt; &lt;TD&gt;&lt;%= RsSimilarList("Product Name") %&gt;&lt;/TD&gt; &lt;TD&gt;&lt;%= RsSimilarList("Price") %&gt;&lt;/TD&gt;
      &lt;/TR&gt;
    &lt;% RsSimilarList.MoveNext
       Loop
    %&gt;
  &lt;% Else %&gt;
      &lt;TR&gt; &lt;TD&gt;&lt;SPAN DATAFLD="#Product_Title"&gt;&lt;/SPAN&gt;&lt;/TD&gt; &lt;TD&gt;&lt;SPAN DATAFLD="#Price"&gt;&lt;/SPAN&gt;&lt;/TD&gt;
      &lt;/TR&gt;
  &lt;% End If %&gt;
&lt;/TABLE&gt;
</PRE>
<P>When Internet Explorer 4.0 is not the client browser, the server expands the table with the rows on the server. When Internet Explorer 4.0 is the browser, data binding is used. In either case, the DATASRC attribute is applied to the TABLE because down-level browsers simply ignore it.

<H2><A NAME="db_downlevel_dso">Conditionally Supplying Data Source Objects</A></H2>
<P>To enable data binding on the client, Internet Explorer 4.0 uses a data source object (DSO) on the page to supply the data. Other browsers rely on server processing to merge data from a database into an HTML template. A number of approaches can be used to conditionally include the DSO on the page:

<H3><A NAME="Examples">Examples</A></H3>
<P>Write a conditional statement in the server script that includes the DSO only when Internet Explorer 4.0 is detected as the browser.

<PRE>&lt;% If IsIE4OrLater() Then %&gt;
    &lt;OBJECT ID=DSC1 CLASSID="clsid:..."&gt; &lt;PARAM 
    &lt;/OBJECT&gt;
&lt;% End If %&gt; 
</PRE>
<P>Write client-side script that first checks the browser version and then dynamically adds the object to the page if appropriate. The following code relies upon the existence of a DIV element as a placeholder and sets its <A HREF="dhtml/references/properties/innerHTML.htm#innerHTML">innerHTML</A> property to an OBJECT tag represented by a Tabular Data Control.

<PRE>&lt;SCRIPT&gt;
if (((navigator.appVersion.indexOf("4.0")&gt;0)
    &amp;&amp; (navigator.appVersion.indexOf("MSIE"))&gt;0)) divDSO.innerHTML = "&lt;OBJECT      classid="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"     ID=tdcComposers HEIGHT=0 WIDTH=0&gt;         &lt;PARAM NAME="DataURL" VALUE="composer.csv"&gt;         &lt;PARAM NAME="UseHeader" VALUE="True"&gt;     &lt;/OBJECT&gt;";
&lt;/SCRIPT&gt; 
</PRE>
<P>Include the object tag regardless of the browser type. Non-Internet Explorer 4.0 browsers will ignore the component.


<H2><A NAME="db_downlevel_scripting">Scripting the User Interface</A></H2>
<P>Since Internet Explorer 4.0 performs all data operations such as navigation on the client, while other browsers require a round-trip to the server and a new page to be rendered, authors should detect the user agent and script user interface elements to work in both scenarios.

<H3><A NAME="Example">Example</A></H3>
<P>The following example illustrates event-handling code behind a button that moves to the next record in the data set. This script can be used on all browsers.

<PRE>&lt;SCRIPT FOR=cmdNext EVENT=onclick&gt;
    if (((navigator.appVersion.indexOf("4.0")&gt;0) &amp;&amp;     (navigator.appVersion.indexOf("MSIE"))&gt;0)) document.product_frame.dsc1.recordset.MoveNext();
    else &lt;!-- ask server for new page containing next record --&gt;
&lt;/SCRIPT&gt;
</PRE>
<H2><A NAME="db_downlevel_update">Supporting Data Update</A></H2>
<P>The current model for presenting data to users for update requires writing a form and then using the HTML SUBMIT functionality to send the updates to the server, where a server process changes the values in the database. A more detailed look at this model follows:

<OL><LI>A page is displayed on the client consisting of a form page containing elements for user input as well as a Submit button. The values of the elements are set to the current values in the database.
<LI>After the user completes the edits, she clicks the Submit button.
<LI>All the data on the form is sent to a server process (CGI, ISAPI, ASP). The process determines which data was changed and updates the database appropriately.
<LI>The process returns an HTML page to the browser indicating the success or failure of the update.
</OL>
<P>To incorporate the Internet Explorer 4.0 data binding model into this scenario, the author can do the following:

<OL><LI>Add a data source object (DSO) that supports data update to the page.
<LI>Use the <A HREF="dhtml/content/databind/architecture.htm#ch_databind_extensions">data binding extensions</A> to bind the user input elements on the page to the DSO.
<LI>Allow the user to modify the data.
<LI>Provide the user with an element, such as a button, that calls the DSO-specific method that commits changes and updates the database. For <A HREF="rds/gs01.htm">RDS</A> this method is <B>SubmitChanges</B>.
</OL>
<P>Using Internet Explorer 4.0, the user remains on the page to do subsequent processing. A new page is not required because changes are committed to the data on the back end.

<H3><A NAME="Example">Example</A></H3>
<P>In the example scenario, the price of the product is displayed. The user can edit this price by changing the data in the text box. This behavior is identical in all browsers. The key difference is the code behind the button that submits the data. In Internet Explorer 4.0, this button calls the DSO-specific method that commits the changes. Other browsers require the use of a Submit button.

<P>The script for a Submit button follows:

<PRE>&lt;SCRIPT&gt;
  &lt;SCRIPT FOR=cmdSubmit EVENT=onclick&gt;
  {
    if (((navigator.appVersion.indexOf("4.0")&gt;0) &amp;&amp;       (navigator.appVersion.indexOf("MSIE"))&gt;0))
    {
      document.ProductList.SubmitChanges();
      return false; // disable default processing
    }
  }
&lt;/SCRIPT&gt;
</PRE>
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>