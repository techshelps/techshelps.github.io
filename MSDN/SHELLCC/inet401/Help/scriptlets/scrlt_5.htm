<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Default Scriptlets</TITLE>

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME=MS-HKWD CONTENT="Using Default Scriptlets">
<META NAME="Keywords" CONTENT="Scriplets">
<META NAME="Platform" CONTENT="Windows">
<META NAME="ROBOTS" CONTENT="all">

<!--@ SNIFF_START -->
<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../code/ver.js"></SCRIPT>
<!--@ SNIFF_END -->

<SCRIPT DEFER SRC="../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Microsoft Scriptlet Technology"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../art/headbarc.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Microsoft Scriptlet Technology"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR><TR><TD><PRE><IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" ID=TOC HREF="../contents.htm">Contents</A>  <IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../index.htm">Index</A>  <IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="scrlt.htm">Topic Contents</A>
</PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1><a name="wbusing_default_interface_descriptions"></a>Using Default Interface Descriptions</H1>
<p>
If there is no Public_Description object defined in the scriptlet, the scriptlet container object exposes properties and methods using variables and functions in the scriptlet that follow certain naming conventions. To expose scriptlet properties and methods, use these conventions:
<ul>
<li>
Use the prefix <code><FONT FACE="Courier" SIZE="2">public_</FONT></code> to indicate that a variable or function should be exposed by the scriptlet.<br><br></li>
<li>
To create a read/write property, declare a variable scoped at the page level (that is, not defined inside a function) and give it a <code><FONT FACE="Courier" SIZE="2">public_</FONT></code> prefix.<br><br></li>
<li>
To create a method, define a function with the prefix <code><FONT FACE="Courier" SIZE="2">public_</FONT></code>.<br><br></li>
<li>
To create a readable property as a function, define a function with the prefix <code><FONT FACE="Courier" SIZE="2">public_get_</FONT></code>.<br><br></li>
<li>
To create a writable property as a function, define a function with the prefix <code><FONT FACE="Courier" SIZE="2">public_put_</FONT></code>.</li>
</ul>
<p>
<b>Note&nbsp;&nbsp;&nbsp;</b>When a property or method is exposed, its name in the host application does not have the <code><FONT FACE="Courier" SIZE="2">public_</FONT></code> prefix. For example, if you define a property called <code><FONT FACE="Courier" SIZE="2">public_MyTitle</FONT></code> in the scriplet, its name in the host application is <code><FONT FACE="Courier" SIZE="2">MyTitle</FONT></code>.
<p>
The following table shows examples of variables and functions in a scriptlet, and the resulting interface that they expose in the host application.

<BR CLEAR=ALL><P>
<TABLE>
<TR><TD><b>Example</b></TD><TD><b>Exposed As</b></TD><TD><b>Used in container</b></td></tr>

<TR><TD><pre>var public_Color = &quot;red&quot;</pre></TD><TD>Property</TD><TD><pre>vColor = SC1.Color SC1.Color = &quot;blue&quot;</pre></td></tr>

<TR><TD><pre>function public_look(param)</pre></TD><TD>Method</TD><TD><pre>SC1.look(param)</pre></td></tr>

<TR><TD><pre>function public_get_C()</pre></TD><TD>Property (read)</TD><TD><pre>x = SC1.C</pre></td></tr>

<TR><TD><pre>function public_put_C(param)</pre></TD><TD>Property (write)</TD><TD><pre>SC1.C = &quot;test&quot;</pre></td></tr>

<TR><TD><pre>function look()</pre></TD><TD>Not available<BR>(no <code><FONT FACE="Courier" SIZE="2">public_</FONT></code> prefix)</td></tr>

<TR><TD><pre>function get_C()</pre></TD><TD>Not available<BR>(no <code><FONT FACE="Courier" SIZE="2">public_</FONT></code> prefix)</td></tr>

<TR><TD><pre>var Color = red;</pre></TD><TD>Not available<BR>(no <code><FONT FACE="Courier" SIZE="2">public_</FONT></code> prefix)</td></tr>

<TR><TD><pre>var get_Color = red;</pre></TD><TD>Not available<BR>(no <code><FONT FACE="Courier" SIZE="2">public_</FONT></code> prefix)</td></tr>
</table><br>
<p>
For example, the following example shows a portion of a page containing a paragraph named &quot;P1.&quot; The script block following the paragraph exposes a property called <code><FONT FACE="Courier" SIZE="2">P1Text</FONT></code> and a method called <code><FONT FACE="Courier" SIZE="2">SetText</FONT></code>.
<pre>&lt;P ID=P1&gt;This is a paragraph of text.&lt;/P&gt;

&lt;SCRIPT LANGUAGE=&quot;JavaScript&quot;&gt;
&lt;!--
public_P1Text = P1.innerText
function public_SetText(newText){
   P1.innerText = newText;
}
// --&gt;
&lt;/SCRIPT&gt;
</pre>
<p>
The scriptlet reserves the function name prefixes <code><FONT FACE="Courier" SIZE="2">public_get_</FONT></code> and <code><FONT FACE="Courier" SIZE="2">public_put_</FONT></code> to define properties. For example, if the scriptlet contains a function named <code><FONT FACE="Courier" SIZE="2">public_get_MyText</FONT></code>, it will be treated as a property called <code><FONT FACE="Courier" SIZE="2">MyText</FONT></code>. If you attempt to call the function <code><FONT FACE="Courier" SIZE="2">public_get_MyText</FONT></code> as a method using the syntax <code><FONT FACE="Courier" SIZE="2">SC1.get_MyText()</FONT></code>, an error will result, because the function itself is exposed only as if it were a property named <code><FONT FACE="Courier" SIZE="2">MyText</FONT></code>.
<p>
<b>See Also</b>
<p>
<a href="scrlt_4.htm">Creating a Public_Description Object</a>
<p>
<a href="scrlt_8.htm">Handling Standard Events</a>
<p>
<a href="scrlt_9.htm">Defining Custom Events</a>
<p>
<a href="scrlt_6.htm">Adding Scriptlets to Your Application</a>

<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>
