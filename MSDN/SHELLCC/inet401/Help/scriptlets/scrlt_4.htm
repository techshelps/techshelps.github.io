<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Public_Description Object</TITLE>

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME=MS-HKWD CONTENT="Creating a Public_Description Object">
<META NAME="Keywords" CONTENT="Scriplets">
<META NAME="Platform" CONTENT="Windows">
<META NAME="ROBOTS" CONTENT="all">

<!--@ SNIFF_START -->
<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../code/ver.js"></SCRIPT>
<!--@ SNIFF_END -->

<SCRIPT DEFER SRC="../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Microsoft Scriptlet Technology"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../art/headbarc.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Microsoft Scriptlet Technology"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR><TR><TD><PRE><IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" ID=TOC HREF="../contents.htm">Contents</A>  <IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../index.htm">Index</A>  <IMG SRC="../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="scrlt.htm">Topic Contents</A>
</PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1><a name="wbcreating_a_public_description_object"></a>Creating a Public_Description Object</H1>
<p>
A Public_Description object is a JavaScript object that provides runtime access to the properties and methods defined by the object's <i>constructor function</i>. A skeleton Public_Description object with its constructor function looks like this:
<pre>&lt;SCRIPT LANGUAGE=&quot;JavaScript&quot;&gt;
   var Public_Description = new CreateScriplet();

   Function CreateScriptlet(){
      // statements here to define properties and methods
   }
&lt;/SCRIPT&gt;
</pre>
<p>
<b>Note&nbsp;&nbsp;&nbsp;</b>You do not use the constructor function to define events. For details, see <a href="scrlt_7.htm">Defining Event Handlers</a>.
<p>
When you create the Public_Description object, the constructor function that you assign to it can have any name, as long as the corresponding function appears somewhere in the scriptlet. Within the constructor function, you declare the properties and methods that you want to expose within the scriptlet in the following ways:

<BR CLEAR=ALL><P>
<TABLE>
<TR><TD><b>Constructor syntax</b></TD><TD><b>Creates</b></td></tr>

<TR><TD width=300>This.<i>PropertyName</i> = <i>expression</i>; </TD><TD>Creates a read-write property.</td></tr>

<TR><TD>This.get_<i>PropertyName</i> = <i>function;</i><br>This.put_<i>PropertyName</i> = <i>function;</i></TD><TD>Creates a property using a function, which allows you set a property value based on a condition or trigger an event when the property is set. The function called by the property definition can be in any active scripting language. To make a property read-only, do not provide the put_ function declaration; to make it write-only, do not provide the get_ function declaration.</td></tr>

<TR><TD>This.<i>method</i> = <i>methodFunction;</i></TD><TD>Creates a method defined by the function <i>methodFunction</i>.</td></tr>
</table><br>
<p>
For example, the following Public_Description object defines two properties and a method. The first property, <code><FONT FACE="Courier" SIZE="2">DefaultTitle</FONT></code>, is created as an expression. The second property, <code><FONT FACE="Courier" SIZE="2">CalculatedTitle</FONT></code>, is created as a set of functions. The method <code><FONT FACE="Courier" SIZE="2">toggleColor</FONT></code> is defined using the function <code><FONT FACE="Courier" SIZE="2">TColor</FONT></code>.
<pre>&lt;SCRIPT LANGUAGE=&quot;JavaScript&quot;&gt;
// Public_Description object used to declare scriplet
var Public_Description = new ScriptletObject();

// general object description
function ScriptletObject()
{
   this.DefaultTitle = window.document.title;   //property
   this.get_CalculatedTitle = readCTitle;      //property (read)
   this.put_CalculatedTitle = writeCtitle;      //property (write)
   this.ToggleColor = TColor;                     //method
}

// read function for CalculatedTitle property
function readCTitle(){
   if (window.document.title) == &quot;&quot;
      return &quot;This document has no title&quot;;
   else
      return window.document.title;
}

// write function for CalculatedTitle property
function writeCTitle(passedValue){
   if !(passedValue) == &quot;&quot; 
      window.document.title = passedValue;
}

// function for ToggleColor method
function TColor(){
   if (window.document.bgcolor) == &quot;#ff0000&quot;{
      // doc is red, make it blue
      window.document.bgcolor = &quot;#0000ff;}
   else{
      // doc is not red, make it red
      window.document.bgcolor = &quot;#ff0000&quot;;}
}
&lt;/SCRIPT&gt;
</pre>
<p>
<b>See Also</b>
<p>
<a href="scrlt_5.htm">Using Default Interface Descriptions</a>
<p>
<a href="scrlt_8.htm">Handling Standard Events</a>
<p>
<a href="scrlt_9.htm">Defining Custom Events</a>

<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>
