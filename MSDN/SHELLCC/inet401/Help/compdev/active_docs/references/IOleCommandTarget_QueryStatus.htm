<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleCommandTarget::QueryStatus</TITLE>

<META NAME=MS-HKWD CONTENT="IOleCommandTarget::QueryStatus">
<META NAME="Keywords" CONTENT="Component Development">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="IOleCommandTarget_QueryStatus"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="IOleCommandTarget::QueryStatus"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbarc.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="IOleCommandTarget::QueryStatus"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR><TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="references.htm#ch_ax_make">Topic Contents</A>
</PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="IOleCommandTarget_Exec.htm">IOleCommandTarget::Exec</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="IOleDocument.htm">IOleDocument</A>
</PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<h1>IOleCommandTarget::QueryStatus</h1>

<PRE>[input_sync] HRESULT QueryStatus(
    const GUID *pguidCmdGroup,
    ULONG cCmds,
    OLECMD *prgCmds,
    OLECMDTEXT *pCmdText
   );
</PRE>

<P>Queries the object for the status of one or more commands generated by user interface events.

<UL>
<LI>Returns one of the following values:
<TABLE>
<TR><TD>S_OK
 </TD><TD>The command status and any optional strings were returned successfully. 
</TD></TR><TR><TD> E_FAIL
 </TD><TD>The query failed.
</TD></TR><TR><TD>E_POINTER
 </TD><TD>The <I>prgCmds</I> argument is NULL.
</TD></TR><TR><TD>E_UNEXPECTED 
 </TD><TD>The query was received at a time that the object was not expecting it. 
</TD></TR><TR><TD>OLECMDERR_E_UNKNOWNGROUP
 </TD><TD>The <I>pguidCmdGroup</I> parameter is not NULL but does not specify a recognized command group.
</TD></TR></TABLE>
</UL>
<DL><DT><I>pguidCmdGroup</I>
 </DT><DD>[unique][in] Globally unique identifier of the command group; can be NULL to specify the standard group. All the commands that are passed in the <I>prgCmds</I> array must belong to the group specified by this parameter.
</DD><DT><I>cCmds</I>
 </DT><DD>[in] Number of commands in the <I>prgCmds</I> array.
</DD><DT><I>prgCmds</I>
 </DT><DD>[in,out] Caller-allocated array of <A HREF="OLECMD.htm#OLECMD">OLECMD</A> structures that indicates the commands for which the caller needs status information. This method fills the <B>cmdf</B> member of each structure with values taken from the <A HREF="OLECMDF.htm#OLECMDF">OLECMDF</A> enumeration.
</DD><DT><I>pCmdText</I>
 </DT><DD>[unique][in,out] Address of an <A HREF="OLECMDTEXT.htm#OLECMDTEXT">OLECMDTEXT</A> structure in which to return name and/or status information of a single command. Can be NULL to indicate that the caller does not need this information.
</DD></DL>

<P>Callers use this method to determine which commands are supported by a target object. The caller can then disable unavailable commands that would otherwise be routed to the object. The caller can also use this method to get the name or status of a single command.

<P><B>Notes to Callers</B>

<P>The caller passes an array of <A HREF="OLECMD.htm#OLECMD">OLECMD</A> structures in <I>prgCmds</I> that describes the commands of interest from the group specified in <I>pguidCmdGroup</I>, where each structure's <B>cmdID</B> member is set to a command identifier and the <B>cmdf</B> member is set to zero.

<P><B>Notes to Implementers</B>

<P>The object receiving the call fills the <B>cmdf</B> member for each command with values taken from the <A HREF="OLECMDF.htm#OLECMDF">OLECMDF</A> enumeration to describe the status of each command.

<P>The called object should first mark the command as described above. Then, if the command is supported (OLECMDF_SUPPORTED), the object should check the OLECMDTEXTF_ flags in the <B>cmdtextf</B> member of <I>pCmdText</I>. If the OLECMDTEXTF_NAME flag is specified, the object should copy the localized name of the command (for example, "Open", "Copy", and so on) into the <B>rgwz</B> member of <I>pCmdText</I>. Attention should be paid to the size specified by the <B>cwBuf</B> member of <I>pCmdText</I>.

<P>If the caller sets the OLECMDTEXTF_STATUS flag, the object should instead write a localized status string for the command into the <B>rgwz</B> member. The status string is typically contextual and depends on the state of the command&#151;enabled/disabled, for example. If the buffer is not big enough, the object should zero-terminate the buffer. Whether the buffer is big enough or not, the object must return the total actual size of the string that it attempted to copy in the <B>cwActual</B> member of <I>pCmdText</I>.

<P>If the command array contains more than one command, the textual information should be returned for the first command in the array that the object supports. Typically, this functionality is used to show the status text of a command. The caller can use either a stack or a global variable for <B>rgwz</B>, because memory for this parameter is not dynamically allocated.

<P>Because <B>IOleCommandTarget::QueryStatus</B> is defined with the [input_sync] attribute, the implementing object cannot yield or make another non-input_sync RPC call while executing it.

<P>A command target must implement this function; E_NOTIMPL is not an acceptable return value.
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>
