<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLECMDID</TITLE>

<META NAME=MS-HKWD CONTENT="OLECMDID">
<META NAME="Keywords" CONTENT="Component Development">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="OLECMDID"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="OLECMDID"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbarc.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="OLECMDID"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR><TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="references.htm#ch_ax_make">Topic Contents</A>
</PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="OLECMDF.htm">OLECMDF</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="OLECMDTEXTF.htm">OLECMDTEXTF</A>
</PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<h1>OLECMDID</h1>

<PRE>typedef enum  
{
     OLECMDID_OPEN               =  1, 
     OLECMDID_NEW                =  2, 
     OLECMDID_SAVE               =  3, 
     OLECMDID_SAVEAS             =  4, 
     OLECMDID_SAVECOPYAS         =  5, 
     OLECMDID_PRINT              =  6, 
     OLECMDID_PRINTPREVIEW       =  7, 
     OLECMDID_PAGESETUP          =  8, 
     OLECMDID_SPELL              =  9, 
     OLECMDID_PROPERTIES         = 10, 
     OLECMDID_CUT                = 11, 
     OLECMDID_COPY               = 12, 
     OLECMDID_PASTE              = 13, 
     OLECMDID_PASTESPECIAL       = 14, 
     OLECMDID_UNDO               = 15, 
     OLECMDID_REDO               = 16, 
     OLECMDID_SELECTALL          = 17, 
     OLECMDID_CLEARSELECTION     = 18, 
     OLECMDID_ZOOM               = 19, 
     OLECMDID_GETZOOMRANGE       = 20  
     OLECMDID_UPDATECOMMANDS     = 21  
     OLECMDID_REFRESH            = 22  
     OLECMDID_STOP               = 23  
     OLECMDID_HIDETOOLBARS       = 24  
     OLECMDID_SETPROGRESSMAX     = 25  
     OLECMDID_SETPROGRESSPOS     = 26  
     OLECMDID_SETPROGRESSTEXT    = 27  
     OLECMDID_SETTITLE           = 28  
     OLECMDID_SETDOWNLOADSTATE   = 29  
     OLECMDID_STOPDOWNLOAD       = 30  
     OLECMDID_ONTOOLBARACTIVATED = 31,
     OLECMDID_FIND               = 32,
     OLECMDID_DELETE             = 33,
     OLECMDID_HTTPEQUIV          = 34,
     OLECMDID_HTTPEQUIV_DONE     = 35,
     OLECMDID_ENABLE_INTERACTION = 36,
     OLECMDID_ONUNLOAD           = 37
} OLECMDID; 
</PRE>

<P>Specifies which command to execute. (The commands in this enumeration are the standard commands defined by Microsoft&#174; Office 95.) A single value from this enumeration is passed in the <I>nCmdID</I> parameter of the <A HREF="IOleCommandTarget_Exec.htm#IOleCommandTarget_Exec">IOleCommandTarget::Exec</A> method.

<DL><DT>OLECMDID_OPEN
 </DT><DD>File menu, Open command.
</DD><DT>OLECMDID_NEW
 </DT><DD>File menu, New command.
</DD><DT>OLECMDID_SAVE
 </DT><DD>File menu, Save command.
</DD><DT>OLECMDID_SAVEAS
 </DT><DD>File menu, Save As command.
</DD><DT>OLECMDID_SAVECOPYAS
 </DT><DD>File menu, Save Copy As command.
</DD><DT>OLECMDID_PRINT
 </DT><DD>File menu, Print command.
</DD><DT>OLECMDID_PRINTPREVIEW 
 </DT><DD>File menu, Print Preview command.
</DD><DT>OLECMDID_PAGESETUP
 </DT><DD>File menu, Page Setup command.
</DD><DT>OLECMDID_SPELL
 </DT><DD>Tools menu, Spelling command.
</DD><DT>OLECMDID_PROPERTIES
 </DT><DD>File menu, Properties command.
</DD><DT>OLECMDID_CUT
 </DT><DD>Edit menu, Cut command.
</DD><DT>OLECMDID_COPY
 </DT><DD>Edit menu, Copy command.
</DD><DT>OLECMDID_PASTE
 </DT><DD>Edit menu, Paste command.
</DD><DT>OLECMDID_PASTESPECIAL
 </DT><DD>Edit menu, Paste Special command.
</DD><DT>OLECMDID_UNDO
 </DT><DD>Edit menu, Undo command.
</DD><DT>OLECMDID_REDO
 </DT><DD>Edit menu, Redo command.
</DD><DT>OLECMDID_SELECTALL
 </DT><DD>Edit menu, Select All command.
</DD><DT>OLECMDID_CLEARSELECTION
 </DT><DD>Edit menu, Clear command.
</DD><DT>OLECMDID_ZOOM
 </DT><DD>View menu, Zoom command (see below for details).
</DD><DT>OLECMDID_GETZOOMRANGE
 </DT><DD>Retrieves zoom range applicable to View Zoom (see below for details).
</DD><DT>OLECMDID_UPDATECOMMANDS
 </DT><DD>Informs the receiver, usually a frame, of state changes. The receiver can then query the status of the commands whenever convenient. 
</DD><DT>OLECMDID_REFRESH
 </DT><DD>Asks the receiver to refresh its display. Implemented by the document/object.
</DD><DT>OLECMDID_STOP
 </DT><DD>Stops all current processing. Implemented by the document/object.
</DD><DT>OLECMDID_HIDETOOLBARS
 </DT><DD>View menu, Toolbars command. Implemented by the document/object to hide its toolbars. 
</DD><DT>OLECMDID_SETPROGRESSMAX
 </DT><DD>Sets the maximum value of a progress indicator if one is owned by the receiving object, usually a frame. The minimum value is always zero. 
</DD><DT>OLECMDID_SETPROGRESSPOS
 </DT><DD>Sets the current value of a progress indicator if one is owned by the receiving object, usually a frame. 
</DD><DT>OLECMDID_SETPROGRESSTEXT
 </DT><DD>Sets the text contained in a progress indicator if one is owned by the receiving object, usually a frame. If the receiver currently has no progress indicator, this text should be displayed in the status bar (if one exists) as with the
<object id="hhal_3" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_3.Click()>IOleInPlaceFrame::SetStatusText</A> method.
</DD><DT>OLECMDID_SETTITLE
 </DT><DD>Sets the title bar text of the receiving object, usually a frame. 
</DD><DT>OLECMDID_SETDOWNLOADSTATE
 </DT><DD>Sent by the object when its download state changes. Takes a VT_BOOL parameter, which is TRUE if the object is downloading data or FALSE if it is not. 
</DD><DT>OLECMDID_STOPDOWNLOAD
 </DT><DD>Stops the download when executed. Typically, this command is propagated to all contained objects. When queried, sets MSOCMDF_ENABLED. Implemented by the document/object. 
</DD><DT>OLECMDID_ONTOOLBARACTIVATED
 </DT><DD>Notifies the object that one of the container's toolbars has received the focus. The object should UI-deactivate any child objects, hide any selection, and set an internal flag. The object should reset this flag when the object gets notified that it or one of its child objects or toolbars has received the focus. While this flag is set, the object should call the container's <A HREF="IOleCommandTarget_QueryStatus.htm#IOleCommandTarget_QueryStatus">IOleCommandTarget::QueryStatus</A> method to determine the state of edit items (cut, copy, and paste) and call the container's <A HREF="IOleCommandTarget_Exec.htm#IOleCommandTarget_Exec">IOleCommandTarget::Exec</A> method to forward any edit commands to the container. If the object has edit items in its toolbars or menus, they should also be enabled or disabled according to the container's <B>IOleCommandTarget::QueryStatus</B> results. The container's <A HREF="IOleCommandTarget.htm#IOleCommandTarget">IOleCommandTarget</A> interface can be retrieved by calling the container's
<object id="hhal_4" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_4.Click()>QueryInterface</A> method, requesting IID_IOleCommandTarget.
</DD><DT>OLECMDID_FIND
 </DT><DD>Not currently implemented.
</DD><DT>OLECMDID_DELETE
 </DT><DD>TBD.
</DD><DT>OLECMDID_HTTPEQUIV
 </DT><DD>Sent from the Active Document to the container when the parser finds a META HTTP-EQUIV tag in the document. Takes a VT_BSTR parameter that contains the parameter to the META tag, which is equivalent to an HTTP header. The Active Document can send this command more than once, but must send OLECMDID_HTTPEQUIV_DONE after all the META HTTP-EQUIV tags are processed.
</DD><DT>OLECMDID_HTTPEQUIV_DONE
 </DT><DD>Sent from the Active Document to the container when there are no other META HTTP-EQUIV tags in the document. The Active Document must send this command after sending one or more OLECMDID_HTTPEQUIV commands.
</DD><DT>OLECMDID_ENABLE_INTERACTION
 </DT><DD>Sent by the container to tell the object to either pause or resume any multimedia (audio or animation) in the document. Takes a VT_BOOL parameter, which is TRUE if the multimedia should be resumed or FALSE if it should be paused. The Internet Explorer 4.0 browser uses this command to inform the object of when it is minimized or completely covered by another window so that the object can pause playing of multimedia information. 
</DD><DT>OLECMDID_ONUNLOAD
 </DT><DD>Sent by the browser before a new navigation is initiated or the browser is being closed. This provides the opportunity for a document to query the user if any unsaved data should be saved. Returning S_OK allows the navigation to close. Returning S_FALSE prevents the operation. This command is sent only once. Because navigation is asynchronous, it is important to remember that the user can make changes in a page or document after this command is received but before the new page is displayed.
</DD></DL>

<P>In OLE compound documents technology, an object that is being edited in-place disables the Zoom control on its toolbar and the Zoom command on its View menu, because the Zoom command applies logically to the container document, not to the object. The OLECMDID_ZOOM and OLECMDID_GETZOOMRANGE commands notify the container's frame object of the zoom range it should use to display an Active Document in its user interface. The container frame is the client-side object that implements
<object id="hhal_5" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_5.Click()>IOleInPlaceFrame</A> and, optionally, <A HREF="IOleCommandTarget.htm#IOleCommandTarget">IOleCommandTarget</A>.

<P>The OLECMDID_ZOOM command takes one LONG argument as input and writes one LONG argument on output. This command is used for three purposes:
<UL>
<LI>To query the current zoom value. The caller of <A HREF="IOleCommandTarget_Exec.htm#IOleCommandTarget_Exec">IOleCommandTarget::Exec</A> passes OLECMDEXECOPT_DONTPROMPTUSER as the execute option in the <I>nCmdExecOpt</I> parameter and NULL for <I>pvaIn</I>. The object returns the current zoom value in <I>pvaOut</I>. When the object goes UI active, it retrieves the current zoom value from the container's frame object using this same mechanism and updates its zoom control with the returned value. 
<LI>To display the Zoom dialog box. The caller of <A HREF="IOleCommandTarget_Exec.htm#IOleCommandTarget_Exec">IOleCommandTarget::Exec</A> passes OLECMDEXECOPT_PROMPTUSER in <I>nCmdExecOpt</I>. The caller can optionally pass the initial value for the dialog box through <I>pvaIn</I>; otherwise <I>pvaIn</I> must be NULL. If the user clicks Cancel, the object returns OLECMDERR_E_CANCELED. If the user clicks OK, the object passes the user-selected value in <I>pvaOut</I>. When the user chooses the Zoom command from the View menu, the object calls the container's frame object in the same manner. The container then zooms the document to the user-selected value, and the object updates its Zoom control with that value.
<LI>To set a Zoom value. The caller of <A HREF="IOleCommandTarget_Exec.htm#IOleCommandTarget_Exec">IOleCommandTarget::Exec</A> passes OLECMDEXECOPT_DONTPROMPTUSER in <I>nCmdExecOpt</I> and passes the zoom value to apply through <I>pvaIn</I>. The object validates and normalizes the new value and returns the validated value in <I>pvaOut</I>. When the user selects a new zoom value (using the Zoom control on the toolbar, for instance), the object calls the container's frame object in this manner. The container zooms the document to 100 percent, and the object updates the Zoom control with that value.
</UL>

<P>The OLECMDID_GETZOOMRANGE command is used to determine the range of valid zoom values from an object that implements <A HREF="IOleCommandTarget.htm#IOleCommandTarget">IOleCommandTarget</A>. The caller passes MSOCMDEXECOPT_DONTPROMPTUSER in <I>nCmdExecOpt</I> and NULL for <I>pvaIn</I>. The object returns its zoom range as a DWORD in <I>pvaOut</I>, where the HIWORD contains the maximum zoom value and the LOWORD contains the minimum zoom value. Typically this command is used when the user drops down the Zoom control on the toolbar of the UI-active object. The applications and objects that support this command are required to support all the integral zoom values that are within the (min,max) pair they return.
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>
