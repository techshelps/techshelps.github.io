<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft Chat Protocol Control 2.0 Visual Basic Overview (Beta1 Release)</TITLE>
<META NAME=MS-HKWD CONTENT="Microsoft Chat Protocol Control 2.0 Visual Basic Overview (Beta1 Release)">
<META NAME="Keywords" CONTENT="Component Library">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ch_mschatpr_vb_ovr"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Microsoft Chat Protocol Control 2.0 Visual Basic Overview (Beta1 Release)"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbare.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Microsoft Chat Protocol Control 2.0 Visual Basic Overview (Beta1 Release)"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="mschat2_0.htm#part_chat2_0">Topic Contents</A>
</PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="mschat2_0.htm">Microsoft Chat Protocol 2.0</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="VB_ref.htm">Microsoft Chat Protocol Control 2.0 Visual Basic Reference (Beta1 Release)</A>
</PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>Microsoft Chat Protocol Control 2.0 Visual Basic Overview (Beta1 Release)</H1>
<BR CLEAR=ALL>
<P>The Microsoft&#174; Chat Protocol Control 2.0 is an ActiveX&#153; control that allows the user to participate in a chat, or conversation, between two or more users connected to a chat server.
<P>The Chat Protocol control allows the user to communicate both text and data, including arrays, Booleans, errors, currencies, and dates.
<P>Stand-alone Microsoft Visual Basic&#174; or Microsoft Visual C++&#174; applications containing the Chat Protocol control or HTML pages that utilize the Chat Protocol control are referred to as <I>chat clients</I>. These chat clients communicate with a chat server through either the IRC (Internet Relay Chat) or IRCX (Extended Internet Relay Chat) protocols. The Chat Protocol control abstracts the IRC/IRCX protocols by the heavy use of objects and properties, thus insulating the developer from unnecessary knowledge of these protocols.
<P>Because the Microsoft Chat Protocol Control 2.0 does not implement a user interface, developers are free to design and implement their own.
<P><A CLASS=tctop HREF="VB_ovr.htm#mschatpr_vb_ovr_mschatpr"><IMG SRC="../../../art/arrowb.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowb.gif">The Chat Protocol Control</A><BR>
<P><A CLASS=tctop HREF="VB_ovr.htm#mschatpr_vb_ovr_depend"><IMG SRC="../../../art/arrowb.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowb.gif">Dependencies</A><BR>
<P><A CLASS=tctop HREF="VB_ovr.htm#mschatpr_vb_ovr_licen"><IMG SRC="../../../art/arrowb.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowb.gif">Licensing and Distribution</A><BR>
<P><A CLASS=tctop HREF="VB_ovr.htm#mschatpr_vb_ovr_using"><IMG SRC="../../../art/arrowb.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowb.gif">Using the Chat Protocol Control</A><BR>
<!--********************************************************************************--><!--********************************************************************************--><H2><A NAME="mschatpr_vb_ovr_mschatpr">The Chat Protocol Control</A></H2>
<P>The Chat Protocol control is an ActiveX control that can be hosted by Microsoft Visual Basic or Microsoft Visual C++ applications. Web authors can also insert the Chat Protocol control into an HTML file with the &lt;OBJECT&gt; tag, and use Microsoft Visual Basic Scripting Edition (VBScript) to manipulate the control's properties, methods, and events. Web pages can be designed to query the user list, query the room lists, monitor the chat for specific events such as language type, notify when friends are online, and assign them specific privileges in a chat room. 
<!--********************************************************************************--><!--********************************************************************************--><H2><A NAME="mschatpr_vb_ovr_depend">Dependencies</A></H2>
<P>The Chat Protocol control requires the presence of the Mschatpr.ocx on the user's computer. These files can be obtained by installing the Internet Client SDK. To implement Web pages that use the Chat Protocol control, the Web server must have access to a chat server. If the Chat Protocol control is implemented as a stand-alone client application, the computer running this application must have access to a chat server. The Chat Protocol control enables the connection from the user's computer to a chat channel, or chat room, on the chat server. 

<!--********************************************************************************--><!--********************************************************************************--><H2><A NAME="mschatpr_vb_ovr_licen">Licensing and Distribution</A></H2>
<P>The Chat Protocol control is an ActiveX control that can be hosted by any ActiveX control container. This control is available for installation and redistribution on all computers with validly licensed copies of Microsoft operating system products (for example, Windows NT&#174;, Windows&#174; 95, and so on). For further information on licensing issues, refer to the License.txt file distributed with the Internet Client SDK.
<!--********************************************************************************--><!--********************************************************************************--><H2><A NAME="mschatpr_vb_ovr_using">Using the Chat Protocol Control</A></H2>
<P>To use the Chat Protocol control, you can either directly log on to the chat server, or connect to the server prior to logging on.
<P>You can connect to the server first to determine what security packages are available on the server. The following method is used to do this.
<P><I>object</I>.<B>Connect</B> <I>ServerName</I>
<P>The following method is used to log on to a chat server.
<P><I>object</I>.<B>Login</B> <I>ServerName</I>, <I>Nickname</I> [, <I>UserName</I>] [, <I>RealName</I>] [, <I>Password</I>] [, <I>SecurityPackages</I>] 

<P>After logging on, you can add a <A HREF="references/chanobj.htm#Channel">Channel</A> object to the <A HREF="references/chancoll.htm#Channels">Channels</A> collection with the <A HREF="references/Add.htm#Add">Add</A> method. The <B>Channels</B> collection object is a standard Visual Basic collection object that uses the standard <B>Add</B> and <A HREF="references/Remove.htm#Remove">Remove</A> methods and the <A HREF="references/Item.htm#Item">Item</A> and <A HREF="references/Count.htm#Count">Count</A> properties.
<P><A HREF="references/Add.htm#Add">Add</A> method: 
<P><I>value</I>=<I>object</I>.<B>Add</B>[(<I>Index</I>] [, <I>Key</I>)] 
<P>After the <A HREF="references/chanobj.htm#Channel">Channel</A> object is created, you can join a channel with the <A HREF="references/JoinChannel.htm#JoinChannel">JoinChannel</A> or <A HREF="references/CreateChannel.htm#CreateChannel">CreateChannel</A> method. The <B>CreateChannel</B> method can be used only on an IRCX server.
<P><A HREF="references/JoinChannel.htm#JoinChannel">JoinChannel</A> method:
<P><I>object</I>.<B>JoinChannel</B> [<I>ChannelName</I>] [, <I>ChannelKeyword</I>]
<P><A HREF="references/CreateChannel.htm#CreateChannel">CreateChannel</A> method: 
<P><I>object</I>.<B>CreateChannel</B> [<I>ChannelName</I>] [, <I>ChannelKeyword</I>] [, <I>ChannelModes</I>] [, <I>MaxMemberCount</I>] 
<P><B>Example</B>
<P>The following example adds <A HREF="references/chanobj.htm#Channel">Channel</A> objects to the <A HREF="references/chancoll.htm#Channels">Channels</A> collection with the <A HREF="references/Add.htm#Add">Add</A> method, and then joins
the "Questions" Channel with the <A HREF="references/JoinChannel.htm#JoinChannel">JoinChannel</A> method:
<PRE>Dim chan1, chan2 As Channel
Set chan1 = MsChatPr1.Channels.Add(1, "Questions")
Set chan2 = MsChatPr1.Channels.Add(2, "Answers")
MsChatPr1.Channels(1).JoinChannel "Questions"
</PRE>
<P>All the channel methods and properties are available after the channel has been joined. For example, the <A HREF="references/SendMessage.htm#SendMessage">SendMessage</A> method sends text or data to the channel or a selective set of channel members.
<P><I>object</I>.<B>SendMessage</B> <I>MessageType</I>, <I>Message</I> [, <I>RecipientNicknames</I>] [, <I>DataMessageTag</I>]
<P><B>Example</B>
<P>The following example sends a regular string to the channel.
<PRE>MsChatPr1.Channels(1).SendMessage msgtNormal, "How are you?"
</PRE>
<P>For incoming messages, the <A HREF="references/OnMessage.htm#OnMessage">OnMessage</A> event is fired. You can use this event to update the user interface of the chat client.
<P><I>object</I>_<B>OnMessage</B>(<I>Channel</I>, <I>SenderNickname</I>, <I>MessageType</I>, <I>Message</I>, <I>RecipientNicknames</I>, <I>DataMessageTag</I>)
<P>To leave the channel, the <A HREF="references/LeaveChannel.htm#LeaveChannel">LeaveChannel</A> method closes the current channel.
<P><I>object</I>.<B>LeaveChannel</B> 
<P>The <A HREF="references/Remove.htm#Remove">Remove</A> method removes a <A HREF="references/chanobj.htm#Channel">Channel</A> object from the <A HREF="references/chancoll.htm#Channels">Channels</A> collection.
<P><I>object</I>.<B>Remove</B> <I>Index</I>
<!--********************************************************************************-->
<H3><A NAME="Querying_the_Server_">Querying the Server for Information</A></H3>
<P>Information regarding the server, a channel, a user, or a member can be obtained asynchronously or synchronously.
<P>The Chat Protocol control supports sophisticated querying by the use of the <A HREF="references/items.htm#ChatItems">ChatItems</A> object. These queries relate to the server, a channel, a user, or a member. Generally, the information provided by the server is exposed to you through a <B>ChatItems</B> object.
<P>The following example shows how to construct a <A HREF="references/items.htm#ChatItems">ChatItems</A> object to query the server for all users whose nicknames start with the letter 'a'.
<PRE>Dim UserQueryItems As ChatItems
Set UserQueryItems = New ChatItems
UserQueryItems.AssociatedType = "Query"
UserQueryItems.Item("Nickname") = "a"
UserQueryItems.Item("NicknameOp") = "StartsWith"
MsChatPr1.ListUsers UserQueryItems
Set UserQueryItems = Nothing
</PRE>
<P><B>Note:</B>  Because VBScript does not have a <B>New</B> operator, you need to use the control's <A HREF="references/NewChatItems.htm#NewChatItems">NewChatItems</A> property to create a new <A HREF="references/items.htm#ChatItems">ChatItems</A> object. Therefore, in VBScript, the first two lines of the preceding example would be:
<PRE>Dim UserQueryItems
Set UserQueryItems = MsChatPr1.NewChatItems
</PRE>
<P>Information can also be queried synchronously using the object properties. However, the control will be blocked until the server returns the required information. If the server has not returned the required information within a customizable period, the control throws a time-out error and unblocks. If the server sends the information later, the information will be exposed to the user through an event. You can alter this time-out period through the <A HREF="references/PropertyAccessTimeOut.htm#PropertyAccessTimeOut">PropertyAccessTimeOut</A> property.
<!--********************************************************************************-->
<H3><A NAME="The_OBJECT_Tag_for_H">The OBJECT Tag for HTML Pages</A></H3>
<P>The following example uses the OBJECT tag to implement the Chat Protocol control. 
<PRE>&lt;OBJECT ID=MsChatPr1
STANDBY="Downloading the Microsoft Chat Protocol Control"
CODETYPE="application/x-oleobject"
CLASSID="CLSID:039397C0-46DF-11D0-99CB-00C04FD64497"
CODEBASE="MsChatPr.Cab"&gt;
&lt;/OBJECT&gt;
</PRE>
<!--**********************REVISION HISTORY***************************
25/July/97 a-sharol: began work on reference for MsChat Protocol
06/08/97 a-sharol:  met with Regis Brid, discussed questions, made suggested changes
11/08/97 a-sharol:  made corrections to error code section and implemented changes
                    suggested by Matt Oshry on 08/08/97
11/08/97 a-sharol:  finished changes suggested by Regis
14/08/97 a-sharol:  added introduction and proofreading corrections
20/08/97 a-sharol:  final changes from Regis, incl. Hex values for enumerations
22/08/97 a-sharol:  added descriptions to remaining undescribed enumerations
15/09/97 a-sharol:  resolved most editor queries
16/09/97 a-sharol:  finished the weird examples in ConvertedString
16/09/97 a-sharol:  created linked table for error codes and put section in alpha order
************************END REVISION HISTORY*************************-->
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>
