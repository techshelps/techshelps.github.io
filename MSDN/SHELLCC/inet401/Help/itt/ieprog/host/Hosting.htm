<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reusing MSHTML</TITLE>

<META NAME=MS-HKWD CONTENT="Reusing MSHTML">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ch_MSHTML_programming"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Reusing MSHTML"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Reusing MSHTML"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../IEProg.htm#book_browsing">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="../wb/enums/RefreshConstants.htm">RefreshConstants</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="ifaces/Interfaces.htm">Advanced Hosting Interfaces</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>Reusing MSHTML</H1>

<P>IE4/MSHTML is a rendering engine and parser for HTML. It is the main HTML component of the IE4 Web browser and can be reused in other applications. It hosts ActiveX&#153; Controls and supports the OC96 specification for windowless controls. Controls that use the OC96 interfaces can gain in performance, and they can be transparent and have an irregular shape. 
<P>IE4/MSHTML itself is an Active Document, so it may be hosted by implementing the Active Document interfaces in an application. IE4/MSHTML can also be customized by aggregation to create a special-purpose HTML Active Document. Applications that contain IE4/MSHTML supply their own toolbars and menu UI. The container can also override the default context menus. 
<P>It is also possible to use IE4/MSHTML without UI activation to make use of IE4/MSHTML's ability to parse HTML. By loading HTML, you can use the object model to access the underlying HTML and modify any elements. COM objects hosted by IE4/MSHTML (such as ActiveX Controls) also have the ability to access the Dynamic HTML object model and, as a result, closely integrate with the IE4/MSHTML container to affect the host.
<P>For many purposes, it is more appropriate to host the WebBrowser control to integrate browsing into an application. The WebBrowser control implements support for in-place linking and navigation in addition to IE4/MSHTML. For additional information on the WebBrowser control, see <A HREF="../IEProg.htm#book_browsing">Reusing the WebBrowser and MSHTML</A>.
<P><A CLASS=tctop HREF="Hosting.htm#Containing_IE4_MSHTM"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Containing IE4/MSHTML</A><BR>
<P><A CLASS=tctop HREF="Hosting.htm#doc_host_UI"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Replacing IE4/MSHTML's User Interface</A><BR>
<P><A CLASS=tctop HREF="Hosting.htm#Substituting_User_Pr"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Substituting User Preferences</A><BR>
<P><A CLASS=tctop HREF="Hosting.htm#Loading_HTML_and_Ref"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Loading HTML and Referenced Data</A><BR>
<P><A CLASS=tctop HREF="Hosting.htm#Automating_IE4_MSHTM"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Automating IE4/MSHTML</A><BR>
<P><A CLASS=tctop HREF="Hosting.htm#Scripts_within_IE4_M"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Scripts within IE4/MSHTML</A><BR>
<P><A CLASS=tctop HREF="Hosting.htm#Sending_and_Receivin"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Sending and Receiving Commands</A><BR>
<P><A CLASS=tctop HREF="Hosting.htm#Terminology"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Terminology</A><BR>
<H2><A NAME="Containing_IE4_MSHTM">Containing IE4/MSHTML</A></H2>
<P>IE4/MSHTML can be hosted to form an integral part of an application. There are two ways that this can be done.

<OL><LI><B>Host IE4/MSHTML as an Active Document.</B> IE4/MSHTML is an Active Document and can be hosted in an application that implements the Active Document Hosting interfaces. In this mode of operation, IE4/MSHTML supplies its own UI for context menus to the containing application, although the container can replace the UI, if required, by implementing additional interfaces.<LI><B>Aggregate IE4/MSHTML to create an Active Document.</B> If a host needs to provide extra services and functionality, but it still needs to be an Active Document for use within another application, it can do so by aggregating IE4/MSHTML. This allows the host to take advantage of IE4/MSHTML's implementation of Active Document server interfaces without having to re-implement them. This still allows the host to wrap IE4/MSHTML to provide additional functionality and its own UI.</OL>
<H3><A NAME="Hosting_IE4_MSHTML_a">Hosting IE4/MSHTML as an Active Document</A></H3>
<P>As an Active Document, IE4/MSHTML follows the standard OLE mechanisms for negotiating with the container for menu merging and displaying its toolbars. IE4/MSHTML supports only the single view implementation of Active Documents. Commands can be sent and received using the
<object id="hhal_3" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_IOleCommandTarget>
</object><A HREF=JavaScript:hhal_3.Click()>IOleCommandTarget</A> interface that is also part of the Active Document specification. The standard NULL command set is supported as well as a set of extended commands specific to IE4/MSHTML. 

<P>A host of IE4/MSHTML can turn off IE4/MSHTML's menus and toolbars and supply its own UI. The host may also intercept any of IE4/MSHTML's UI, such as context menus and message boxes. For more information about intercepting UI, see <A HREF="Hosting.htm#doc_host_UI">Replacing IE4/MSHTML's User Interface</A>. For more information about implementing an Active Document host, see
<object id="hhal_4" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Programming_an_Active_Document_Container>
</object><A HREF=JavaScript:hhal_4.Click()>Programming an Active Document Container</A>. 



<H3><A NAME="Aggregating_IE4_MSHT">Aggregating IE4/MSHTML</A></H3>
<P>If your application is using IE4/MSHTML to implement an Active Document that customizes IE4/MSHTML's behavior, a host may aggregate with IE4/MSHTML to create a new class. IE4/MSHTML is designed to support aggregation. Overriding a small number of interfaces can customize much of IE4/MSHTML's behavior. 


<H4><A NAME="Creating_a_new_Activ">Creating a new Active Document</A></H4>
<P>The minimum interfaces that need to be supplied by an aggregator are
<object id="hhal_5" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_5.Click()>IOleObject</A> and the IPersist* interfaces. 

<P>These interfaces supply the object's ClassID and UserType (through
<object id="hhal_6" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_6.Click()>IOleObject::GetUserClassID</A>,
<object id="hhal_7" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_7.Click()>IOleObject::GetUserType</A>, and
<object id="hhal_8" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_8.Click()>IPersist::GetClassID</A> methods). The aggregator should supply its own implementations to differentiate the new object from IE4/MSHTML. 

<P>Some common functionality that can be customized by aggregation includes: 

<UL><LI>Commands can be added. Simply override the
<object id="hhal_9" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_IOleCommandTarget>
</object><A HREF=JavaScript:hhal_9.Click()>IOleCommandTarget</A> interface (described later in this document).<LI>Automation interfaces can be added. When doing this, be sure to override <B>IProvideClassInfo</B> as well as
<object id="hhal_10" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_10.Click()>IDispatch</A> and
<object id="hhal_11" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_11.Click()>IConnectionPointContainer</A> (discussed later in this document).</UL>
<P>Other customization can be done by supplying services to IE4/MSHTML. 


<H4><A NAME="Supplying_services_a">Supplying services and ambient properties when aggregating</A></H4>
<P>IE4/MSHTML provides or uses interfaces that allow an aggregator to supply ambient properties to it without having to implement a full client site for hosting IE4/MSHTML. The site object normally supplies ambient properties, but a site object has a number of other interfaces that are not trivial to implement. Using this technique, the aggregator can let the container's client site pass through to IE4/MSHTML while the aggregator still supplies ambient properties.



<H2><A NAME="doc_host_UI">Replacing IE4/MSHTML's User Interface</A></H2>
<P>If IE4/MSHTML is tightly integrated into an application, it may be desirable to have the application supply its own menus, toolbars and other UI. To do this, the host can supply optional services to IE4/MSHTML that allow the host to hook into and replace IE4/MSHTML's UI. In implementing these interfaces, a host knows that IE4/MSHTML is the component being hosted and has knowledge of IE4/MSHTML's command set.

<P>When replacing IE4/MSHTML's UI, the host turns off IE4/MSHTML's menus and toolbars and can replace them. This does not involve any negotiation. A host of IE4/MSHTML can display message boxes, Help UI, and all in-place active UI on behalf of IE4/MSHTML by implementing two interfaces, <A HREF="ifaces/idochostuihandler/IDocHostUIHandler.htm#IDocHostUIHandler">IDocHostUIHandler</A> and <A HREF="ifaces/idochostshowui/IDocHostShowUI.htm#IDocHostShowUI">IDocHostShowUI</A>.

<P>To replace the menus, toolbars, and other UI for IE4/MSHTML, the host should implement the <A HREF="ifaces/idochostuihandler/IDocHostUIHandler.htm#IDocHostUIHandler">IDocHostUIHandler</A> interface. IE4/MSHTML will obtain this interface by calling the host's client site
<object id="hhal_12" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_12.Click()>QueryInterface</A>, requesting IID_IDocHostUIHandler. If the host does not implement a client site, it can <B>QueryInterface</B> IE4/MSHTML for the <A HREF="ifaces/icustomdoc/ICustomDoc.htm#ICustomDoc">ICustomDoc</A> interface and call the <A HREF="ifaces/icustomdoc/SetUIHandler.htm#ICustomDoc__SetUIHan">ICustomDoc::SetUIHandler</A> method to set IE4/MSHTML's UI handler.

<P>When <A HREF="ifaces/idochostuihandler/IDocHostUIHandler.htm#IDocHostUIHandler">IDocHostUIHandler</A> is present, IE4/MSHTML delegates a number of 
<object id="hhal_13" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_13.Click()>IOleInPlaceObject</A> and
<object id="hhal_14" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_14.Click()>IOleInPlaceActiveObject</A> methods directly to it, allowing a host to hook into methods such as
<object id="hhal_15" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_15.Click()>IOleInPlaceActiveObject::TranslateAccelerator</A> and
<object id="hhal_16" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_16.Click()>IOleInPlaceActiveObject::ResizeBorder</A>. Returning S_OK on the <A HREF="ifaces/idochostuihandler/ShowUI.htm#IDocHostUIHandler__S">IDocHostUIHandler::ShowUI</A> method called by IE4/MSHTML will cause IE4/MSHTML to hide its menus and toolbars and not call the
<object id="hhal_17" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_17.Click()>IOleInPlaceFrame</A> methods for menu merging and border space negotiation. 

<P>To supply message boxes and Help UI, the host should implement the 
<A HREF="ifaces/idochostshowui/IDocHostShowUI.htm#IDocHostShowUI">IDocHostShowUI</A> interface. IE4/MSHTML will obtain this interface by calling the host's client site
<object id="hhal_18" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_18.Click()>QueryInterface</A>, requesting IID_IDocHostShowUI. The site object implements both
<object id="hhal_19" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_IOleDocumentSite>
</object><A HREF=JavaScript:hhal_19.Click()>IOleDocumentSite</A> and
<object id="hhal_20" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_20.Click()>IOleClientSite</A>. 

<H2><A NAME="Substituting_User_Pr">Substituting User Preferences</A></H2>
<P>As IE4/MSHTML may be used in a number of different host environments, there is a requirement that each host environment be able to set different default user preferences in the registry. IE4/MSHTML allows its host to specify a special registry key under which to store the default preferences. 

<P>IE4/MSHTML calls <A HREF="ifaces/idochostuihandler/GetOptionKeyPath.htm#IDocHostUIHandler__G">IDocHostUIHandler::GetOptionKeyPath</A> on the host at initialization to allow the host to specify the registry location for the preference settings. IE4/MSHTML then uses this registry key to store and get the settings for its preference property pages. If the host returns S_FALSE for this method, or the returned registry key path is NULL or empty, then IE4/MSHTML will revert to its own default set of options. 



<H2><A NAME="Loading_HTML_and_Ref">Loading HTML and Referenced Data</A></H2>
<P>There are three situations where IE4/MSHTML needs to resolve URLs or load data: 

<OL><LI><B>When an HTML page is loaded into IE4/MSHTML.</B> IE4/MSHTML is capable of loading pages from URLs (or any other asynchronous moniker) or from files.<LI><B>When data (for example, an &lt;IMG&gt; tag) is referred to on the HTML page.</B> A host can optionally supply a service to IE4/MSHTML to assist in resolving these references.<LI><B>When a hyperlink needs to be followed.</B> IE4/MSHTML invokes the standard hyperlinking API. A host may optionally provide the hyperlinking support so that IE4/MSHTML can link to the new object within the host frame.</OL>
<H3><A NAME="Loading_an_HTML_page">Loading an HTML page</A></H3>
<P>For a host to get IE4/MSHTML to load and display the page at a specific URL, the host constructs a moniker using the <A HREF="../../monikers/functions/CreateURLMoniker.htm#CreateURLMoniker">CreateURLMoniker</A> API call. Then it calls <A HREF="../../monikers/ifaces/ipersistmoniker/Load.htm#IPersistMoniker__Loa">IPersistMoniker::Load</A> on IE4/MSHTML. IE4/MSHTML's implementation of <A HREF="../../monikers/ifaces/ipersistmoniker/IPersistMoniker.htm#IPersistMoniker">IPersistMoniker</A> is specifically designed to support the loading of data asynchronously over slow links. 

<P>More information about these interfaces can be found in the <A HREF="../../monikers/overview.htm#ch_urlmon_ovr">Asynchronous and URL Monikers Overview</A> section of the Internet Client SDK. 

<P>IE4/MSHTML is also capable of simple synchronous loading and saving of HTML through
<object id="hhal_21" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_21.Click()>IPersistStreamInit</A> or asynchronous loading from a file through
<object id="hhal_22" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_22.Click()>IPersistFile</A>.


<H3><A NAME="Resolving_Hyperlinks">Resolving Hyperlinks</A></H3>
<P>If a user clicks on a link within an HTML page viewed in IE4/MSHTML, IE4/MSHTML will call the <A HREF="../../hlink/functions/HlinkNavigate.htm#HlinkNavigate">HlinkNavigate</A> API (after having set up an <A HREF="../../hlink/ifaces/ihlink/IHlink.htm#IHlink">IHlink</A> object). If the host does not implement <A HREF="../../hlink/ifaces/ihlinkframe/IHlinkFrame.htm#IHlinkFrame">IHlinkFrame</A>, this API launches a separate application to follow the hyperlink. 

<P>Hosts that wish to act as browsers (and navigate within the same frame) can implement <A HREF="../../hlink/ifaces/ihlinkframe/IHlinkFrame.htm#IHlinkFrame">IHlinkFrame</A> on the <A HREF="../../../dhtml/references/objects/FRAME.htm#FRAME">FRAME</A> object. The <A HREF="../../hlink/functions/HlinkNavigate.htm#HlinkNavigate">HlinkNavigate</A> API calls <A HREF="../../hlink/ifaces/ihlinkframe/Navigate.htm#IHlinkFrame::Navigate">IHlinkFrame::Navigate</A>, allowing a browser application to hide the previous instance of IE4/MSHTML and create, load, and show a new instance of IE4/MSHTML (or other Active Document) to display the new page. 

<P>For more information on hyperlinking, see <A HREF="../../hlink/HLink.htm#book_hlinks">Hyperlinks</A>. 

<P>Because the WebBrowser control has built-in support for hyperlinking, hosting the WebBrowser control is the preferred solution here. 



<H2><A NAME="Automating_IE4_MSHTM">Automating IE4/MSHTML</A></H2>
<P>IE4/MSHTML can be automated using
<object id="hhal_23" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_23.Click()>IDispatch</A> and
<object id="hhal_24" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_24.Click()>IConnectionPointContainer</A>-style automation interfaces. These interfaces allow a host to automate IE4/MSHTML through the object model.

<H2><A NAME="Scripts_within_IE4_M">Scripts within IE4/MSHTML</A></H2>
<P>IE4/MSHTML is responsible for loading and running scripts that appear within HTML. Because scripting is done by using the ActiveX Scripting interfaces, any ActiveX script engine can be hosted by IE4/MSHTML.

<P>For more information about ActiveX scripting engines and hosts, see
<object id="hhal_25" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_ActiveX_Scripting>
</object><A HREF=JavaScript:hhal_25.Click()>ActiveX Scripting</A>. 



<H2><A NAME="Sending_and_Receivin">Sending and Receiving Commands</A></H2>
<P>Because IE4/MSHTML is an Active Document, it communicates with its host using the
<object id="hhal_26" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_IOleCommandTarget>
</object><A HREF=JavaScript:hhal_26.Click()>IOleCommandTarget</A> interface. With this interface, the following details are communicated to the hosting frame. 

<UL><LI>Menu/Toolbar Enabling &#150; The common menus and toolbar buttons found on the host (Cut, Copy, Paste, and so on) are enabled and disabled by sending IE4/MSHTML commands and queries.<LI>IE4/MSHTML Commands &#150; Common functions like Refresh, Stop, and Hide Toolbars are sent by the host to IE4/MSHTML through commands.<LI>Status Bar Updates &#150; Progress and status bar text information is communicated to the hosting frame by IE4/MSHTML through commands.</UL>
<P>In addition to the standard command group, IE4/MSHTML supports a group of IE4/MSHTML-specific commands that provide simple access to a number of IE4/MSHTML-specific features. For more information, see the
<object id="hhal_27" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_OLECMDID>
</object><A HREF=JavaScript:hhal_27.Click()>OLECMDID</A> enumeration.


<H2><A NAME="Terminology">Terminology</A></H2>
<P><B>ActiveX&#153; Control</B> &#150; Also known as an OLE Control. An ActiveX Control is a contained mini-application. It can (optionally) maintain state, draw itself, persist itself, have its own window, respond to automation methods, throw events, take keyboard focus, respond to mouse and keyboard input, and show merged menu and toolbar UI. Most of the control interfaces are documented in MSDN. The <I>OC96</I> and <I>OLE Controls/COM Objects for the Internet</I> specifications introduce a number of new interfaces for controls to improve their performance and make them suitable for the Internet. Further extensions supported by IE4/MSHTML are discussed later in this section. 

<P><B>Active Document</B> &#150; Also known as an OLE Document Object or Doc Object. An Active Document is a contained object; the container provides the frame and some basic UI. In such containers, the Active Document may be interchanged with other Active Documents while the containing frame and its UI remain constant. Examples of Active Document containers include the Office Binder and Internet Explorer 3.0x, where the Active Document could change to Microsoft&#174; Word or Excel while maintaining the same outer frame application. An Active Document is similar to an OLE Embedding scenario or an ActiveX Control, but its interfaces are designed to support an object that is at the top level and takes up the entire content area of the frame. There are specific interfaces required to support Active Document functionality. For more information, see
<object id="hhal_28" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Active_Documents>
</object><A HREF=JavaScript:hhal_28.Click()>Active Documents</A>. 

<P><B>ActiveX Scripting</B> &#150; A standard set of interfaces that allows for language-independent script integration to applications. Any script engine (VBScript, JScript, or a third party scripting language, for example) that supports the standard interfaces can be integrated with an ActiveX script host such as IE4/MSHTML. 

<P><B>IE4/MSHTML</B> &#150; An Active Document that is capable of rendering HTML and laying out contained ActiveX Controls. In this document, it refers to an instance of the IE4/MSHTML COM object that implements
<object id="hhal_29" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_29.Click()>IOleObject</A>,
<object id="hhal_30" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_IOleDocument>
</object><A HREF=JavaScript:hhal_30.Click()>IOleDocument</A>,
<object id="hhal_31" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_IOleDocumentView>
</object><A HREF=JavaScript:hhal_31.Click()>IOleDocumentView</A>, and many other interfaces. 

<P><B>Aggregation</B> &#150; A kind of run-time inheritance. By aggregating, an object can extend and enhance the functionality of another object but still take advantage of the functionality and interfaces of the aggregated object. Objects can be designed to be aggregated or not. IE4/MSHTML is designed to be aggregated. 

<P><B>Site</B> &#150; The object supplied by a container to a contained object through
<object id="hhal_32" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_32.Click()>IOleObject::SetClientSite</A>. Containers of an ActiveX object must supply a site before doing anything else. IE4/MSHTML gets much of its information about its geometry, activation, ambient properties, and so on, from its container site. (In this specification, there's no distinction between IE4/MSHTML's container document site and its view site.) IE4/MSHTML also supplies a site for each ActiveX Control it hosts. 

<P><B>Container</B> &#150; The ActiveX object that owns the site obtained through <B>IOleClientSite::GetContainer</B> (may be null). From the container, the contained objects may be enumerated through
<object id="hhal_33" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Introduction_to_ActiveX_Controls>
</object><A HREF=JavaScript:hhal_33.Click()>IOleContainer::EnumObjects</A>. This concept of containment should not be confused with the concept of containment used for scripting and supplied by automation interfaces. Some contained automation objects are not contained ActiveX objects, and some contained ActiveX objects cannot be automated. 

<P><B>Frame</B> &#150; The outer application frame, with menu and toolbar space, supplied to an ActiveX object through <B>IOleInPlaceSite::GetWindowContext</B>. This is the object with which IE4/MSHTML negotiates for menu and toolbar space and also for hyperlinks. 

<P><B>Document Window</B> &#150; The document window, with toolbar space, supplied to an ActiveX object through <B>IOleInPlaceSite::GetWindowContext</B>. (In MDI it is the document window, and in SDI it is NULL.) IE4/MSHTML currently ignores the document window. 

<P><B>Command</B> &#150; A simple action sent to an ActiveX object through the
<object id="hhal_34" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_IOleCommandTarget>
</object><A HREF=JavaScript:hhal_34.Click()>IOleCommandTarget</A> interface. Commands usually correspond to user-level commands, like the commands on menus, and can be enabled or disabled by the command target. A command can be sent to the frame, the container site, IE4/MSHTML, or a control. 

<P><B>Automation</B> &#150; A set of standards to allow an object to be programmed by scripts. Every object that can be automated can have methods and properties that can be used by a script, as well as events that can trigger scripts to be run. 

<P><B>Dispatch Interface</B> &#150; An interface inheriting from
<object id="hhal_35" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_35.Click()>IDispatch</A> that is used to access named automation properties and methods of an object from a script. 

<P><B>Event Interface</B> &#150; A callback interface attached to an object using
<object id="hhal_36" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_36.Click()>IConnectionPointContainer</A>. Used by script engines to get notification of events thrown by objects. 

<P><B>Type Info</B> &#150; A structure used to specify properties, methods, and events (automatable or otherwise). Can be obtained from a dispatch interface through
<object id="hhal_37" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_37.Click()>IDispatch</A> or an object that supplies IProvideClassInfo*. 

<P><B>X Object</B> &#150; An object that IE4/MSHTML wraps around each hosted control to supply common, per-control, container-owned properties and events. IE4/MSHTML aggregates the X object to the control, if possible, and merges types with the control. 

<P><B>Service</B> &#150; A service supplied by the host to an ActiveX object through the
<object id="hhal_38" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_38.Click()>IServiceProvider</A> interface on the container site. Each service is identified by a service identifier (SID), allowing access to interfaces and methods. 

<P><B>Ambient</B> &#150; A property owned by the container and supplied to an ActiveX object through the
<object id="hhal_39" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_39.Click()>IDispatch</A> interface on its hosting site. 


<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>