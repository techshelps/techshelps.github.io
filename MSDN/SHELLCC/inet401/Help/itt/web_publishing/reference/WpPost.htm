<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WpPost</TITLE>

<META NAME=MS-HKWD CONTENT="WpPost">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="WpPost"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="WpPost"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="WpPost"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../reference.htm#ch_wpsdk_ref">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="WpListSites.htm">WpListSites</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="WpPostEx.htm">WpPostEx</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>WpPost</H1>

<PRE>DWORD WpPost(
&#009;[in]&#009;&#009;HWND &#009;hWnd
&#009;[in]&#009;&#009;DWORD&#009;dwNumLocalPaths
&#009;[in]&#009;&#009;LPTSTR *&#009;pszLocalPaths
&#009;[in, out]&#009;&#009;LPDWORD&#009;pdwSiteNameBufLen
&#009;[in, out]&#009;&#009;LPTSTR&#009;szSiteName
&#009;[in, out]&#009;&#009;LPDWORD&#009;pdwDestURLBufLen
&#009;[in, out]&#009;&#009;LPTSTR&#009;szDestURL
&#009;[in]&#009;&#009;DWORD&#009;dwFlags
&#009;);
</PRE>
<P>Posts files and directories to a desired site.
<UL><LI>Returns NO_ERROR if successful. Otherwise, returns an error code, which may be one of the following:
<TABLE>
<TR><TD>WEBPOST_ERROR_INIT_FAILED</TD><TR><TD>WEBPOST_ERROR_PROV_QI</TD><TR><TD>WEBPOST_ERROR_POST_FILES</TD><TR><TD>WEBPOST_ERROR_INIT_FILES</TD><TR><TD>WEBPOST_ERROR_COCREATE_WIZARD</TD><TR><TD>WEBPOST_ERROR_HTTP_GET_FAILED</TD><TR><TD>WEBPOST_ERROR_EXTENDED_ERROR</TD><TR><TD>WEBPOST_ERROR_NO_EXT_ERROR_INFO</TD></TABLE>
<P>For further information on error codes, see <A HREF="errors.htm#wpsdk_b">Appendix B, Error Codes</A>.
</UL>
<DL>
<DT><I>hWnd</I> </DT><DD>Optional. Window handle to receive focus upon completion of this API call. May be NULL.
</DD><DT><I>dwNumLocalPaths</I> </DT><DD>Number of elements in the array pointed to by <I>pszLocalPaths</I>.
</DD><DT><I>pszLocalPaths</I> </DT><DD>String names of files or directories to be posted. If the string specifies a directory (and the WPF_NO_RECURSIVE_POST flag is not set in the <I>dwFlags </I>parameter), all the files in that directory are posted.
</DD><DT><I>pdwSiteNameBufLen</I> </DT><DD>Size, in bytes, of buffer <I>szSiteName. </I>On return, contains the actual number of bytes used in <I>szSiteName</I>. If <I>szSiteName</I> is NULL or too small, this parameter shows the necessary size of the buffer to allocate.
</DD><DT><I>szSiteName</I> </DT><DD>The posting site name. This parameter and the <I>szDestURL</I> parameter may not both be NULL or empty if the WPF_NO_WIZARD flag is set. 
</DD><DT><I>pdwDestURLBufLen</I> </DT><DD>Size, in bytes, of buffer <I>szDestURL. </I>On return, contains the actual number of bytes used in <I>szDestURL</I>. If <I>szDestURL</I> is NULL or too small, this parameter shows the necessary size of the buffer to allocate.
</DD><DT><I>szDestURL</I> </DT><DD>The destination URL. If this parameter is non-NULL and of sufficient size, and the WPF_NO_WIZARD flag is not set, then on return it will contain the destination URL for the site. 
</DD><DT><I>dwFlags</I> </DT><DD>Action flags. Possible values are shown in the following table.
<TABLE>
<TR><TD><B>Value
 </B></TD><TD><B>Meaning
</B></TD></TR>
<TR><TD>WPF_FIRST_FILE_AS_DEFAULT </TD><TD>Take the first file specified in <I>pszLocalPaths</I> as the file that will be shown as the default page. </TD></TR>
<TR><TD>WPF_NO_RECURSIVE_POST </TD><TD>If any element in <I>pszLocalPaths</I> points to a directory, do not post files recursively. </TD></TR>
<TR><TD>WPF_NO_WIZARD </TD><TD>Do not prompt the user for any input. </TD></TR>
<TR><TD>WPF_NO_DIRECT_LOOKUP </TD><TD>Do not attempt to look up the site based on the site name. This has the same effect as a NULL or empty <I>szSiteName</I>.</TD></TR>
<TR><TD>WPF_NO_URL_LOOKUP </TD><TD>Do not attempt to look up the site based on the site URL. This has the same effect as a NULL or empty <I>szSiteURL</I>.</TD></TR>
<TR><TD>WPF_NO_PROGRESS_DLGS </TD><TD>Do not show the "Publishing files" progress bar during the transfer of files to the destination computer.</TD></TR>
<TR><TD>WPF_NO_UI </TD><TD>Predefined combination of WPF_NO_WIZARD and WPF_NO_PROGRESS_DLGS.</TD></TR>
<TR><TD>WPF_SHOWPAGE_WELCOME </TD><TD>Forces the wizard to display the initial "Publish Your Files on the Web" page. Normally this page is skipped if the only other page being displayed is the Finish page. Note that the WPF_NO_WIZARD flag overrides this one.</TD></TR>
<TR><TD>WPF_SHOWPAGE_SRCFILE </TD><TD>Forces the wizard to display the "Select a File or Folder" page. Normally this page is skipped if the path or paths to publish are specified in the call to <B>WpPost</B>. Note that the WPF_NO_WIZARD flag overrides this one.</TD></TR>
<TR><TD>WPF_SHOWPAGE_DESTSITE </TD><TD>Forces the wizard to display the "Select a Web Server" page. Normally this page is skipped if the site name is specified in the call to <B>WpPost</B>. Note that the WPF_NO_WIZARD flag overrides this one.</TD></TR>
<TR><TD>WPF_SHOWPAGE_PROVIDER </TD><TD>Forces the wizard to display any and all pages associated with the service provider. Note that it is the responsibility of service provider implementations to be compliant with this flag (see the specification of the <A HREF="AddWizardPages.htm#AddWizardPages">AddWizardPages</A> SPI function.) Note that the WPF_NO_WIZARD flag overrides this one.</TD></TR>
<TR><TD>WPF_SHOWPAGE_ALL </TD><TD>Predefined combination of WPF_SHOWPAGE_*. Note that the WPF_NO_WIZARD flag overrides this one.</TD></TR></TABLE>
</DD></DL>
<P>The following tables explain how whether <I>dwFlags</I> has the WPF_NO_WIZARD flag set and the various values of the <I>szSiteName</I> and the <I>szDestURL</I> parameters affect what <B>WpPost</B> does.

<P><I>dwFlags</I> has the WPF_NO_WIZARD flag set
<TABLE>
<TR><TD></TD>
<TD><B>szDestURL == NULL</B></TD>
<TD><B>szDestURL</B> == existing site Y</TD>
<TD><B>szDestURL</B> is prefixed by an existing site Y</TD>
<TD><B>szDestURL</B> is new </TD>
</TR>
<TR><TD><B>szSiteName == NULL</B></TD>
<TD>Returns E_INVALIDARG</TD>
<TD>Posts to site Y</TD>
<TD>Posts to site Y; publishes to URL <I>szDestURL</I></TD>
<TD>Creates a new site</TD>
</TR>
<TR><TD><B>szSiteName</B> == existing site X</TD>
<TD>Posts to site X</TD>
<TD>If X == Y, posts to that site; otherwise, returns E_INVALIDARG</TD>
<TD>If X == Y, posts to that site and publishes to to URL <I>szDestURL</I>; otherwise, returns E_INVALIDARG</TD>
<TD>Returns E_INVALIDARG</TD>
</TR>
<TR><TD><B>szSiteName</B> is new</TD>
<TD>Returns E_INVALIDARG</TD>
<TD>Creates a new site</TD>
<TD>Creates a new site</TD>
<TD>Creates a new site</TD>
</TR>
</TABLE>
<P><I>dwFlags </I>does not have the WPF_NO_WIZARD flag set
<TABLE>
<TR><TD></TD>
<TD><B>szDestURL == NULL</B></TD>
<TD><B>szDestURL</B> == existing site Y</TD>
<TD><B>szDestURL</B> is prefixed by an existing site Y</TD>
<TD><B>szDestURL</B> is new</TD>
</TR>
<TR><TD><I>szSiteName == NULL</I></TD>
<TD>Creates a new site; displays all Wizard pages</TD>
<TD>Posts to site Y; displays Welcome and Finish Wizard pages</TD>
<TD>Posts to site Y; publishes to URL <I>szDestURL</I>; displays Welcome and Finish Wizard pages</TD>
<TD>Creates a new site; displays all Wizard pages except URL</TD>
</TR>
<TR><TD><I>szSiteName</I> == existing site X</TD>
<TD>Posts to site X; displays Welcome and Finish Wizard pages</TD>
<TD>Posts to site X; displays Welcome and Finish Wizard pages</TD>
<TD>Posts to site X; displays Welcome and Finish Wizard pages</TD>
<TD>Posts to site X; displays Welcome and Finish Wizard pages</TD>
</TR>
<TR><TD><I>szSiteName</I> is new</TD>
<TD>Creates a new site; displays all Wizard pages except Name the Web Server</TD>
<TD>Creates a new site; displays all Wizard pages except Name the Web Server and URL</TD>
<TD>Creates a new site; displays all Wizard pages except Name the Web Server and URL</TD>
<TD>Creates a new site; displays all Wizard pages except Name the Web Server and URL</TD>
</TR>
</TABLE>
<P>If the wizard is invoked (the WPF_NO_WIZARD flag is not set), the wizard will examine the information specified in the call to <B>WpPost</B> and display the minimum set of pages necessary to complete the publishing process (this minimum-UI behavior may be overridden with the WPF_SHOWPAGE flags.) If the user is prompted to enter the friendly name and/or URL for the site, this information is returned to the caller of <B>WpPost</B> in the buffers provided.

<P>If the wizard is not invoked, <B>WpPost</B> calls <A HREF="WpBindToSite.htm#WpBindToSite">WpBindToSite</A> to get an interface pointer to the provider that owns the specified site. If the <B>WpBindToSite</B> call fails, <B>WpPost</B> tries to create the site by calling <A HREF="WpCreateSite.htm#WpCreateSite">WpCreateSite</A>. Note that <B>WpPost</B> passes the destination URL to <B>WpBindToSite</B>and <B>WpCreateSite</B>. When calling <B>WpCreateSite</B>, it also passes NULL for the local base directory, indicating that this site does not use the local base directory feature and that all posts to this site should go to the root destination URL; and it passes NULL for the service provider, specifying that the service provider should be determined by auto-binding. If the site's provider cannot be determined from the site name passed to <B>WpPost</B> or an auto-bind, <B>WpPost</B> will fail.

<P>Since <B>WpPost</B> relies on <A HREF="WpBindToSite.htm#WpBindToSite">WpBindToSite</A> to do site lookup, all site lookup functionality resides within <B>WpBindToSite</B>. The procedure followed when performing this lookup is detailed under <B>WpBindToSite</B>.

<P><B>Examples</B>
<BR><B>C/C=++</B>
<PRE>{
&#009;HRESULT hResult = NOERROR;
&#009;LPTSTR szLocalPaths = {"c:\\MyDir"};

&#009;hResult = WpPost(NULL, 1, &amp;szLocalPaths, 0, NULL, 0, NULL, 0);
}
</PRE>
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>