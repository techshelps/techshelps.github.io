<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>InternetErrorDlg</TITLE>

<META NAME=MS-HKWD CONTENT="InternetErrorDlg">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="InternetErrorDlg"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="InternetErrorDlg"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="InternetErrorDlg"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../reference.htm#ch_wininet">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="InternetConnect.htm">InternetConnect</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="InternetFindNextFile.htm">InternetFindNextFile</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>InternetErrorDlg</H1>

<PRE>DWORD InternetErrorDlg(
    IN HWND hWnd,
    IN OUT HINTERNET hInternet,
    IN DWORD dwError,
    IN DWORD dwFlags,
    IN OUT LPVOID *lppvData
);
</PRE>
<P>Displays a dialog box for the error that is passed to <B>InternetErrorDlg</B>, if an appropriate dialog box exists. If the FLAGS_ERROR_UI_FILTER_FOR_ERRORS flag is used, the function also checks the headers for any hidden errors and displays a dialog box if needed.

<UL><LI>Returns ERROR_SUCCESS, ERROR_CANCELLED, or <A HREF="../constants/errors.htm#ERROR_INTERNET_FORCE">ERROR_INTERNET_FORCE_RETRY</A>.



</UL>
<DL>
<DT><I>hWnd</I> </DT><DD>Handle to the parent window for any needed dialog box. This parameter can be NULL if no dialog box is needed. 
</DD><DT><I>hInternet</I> </DT><DD>Handle to the Internet connection used in the call to <A HREF="HttpSendRequest.htm#HttpSendRequest">HttpSendRequest</A>.
</DD><DT><I>dwError</I> </DT><DD>Error value for which to display a dialog box. Can be one of the following values:
<DL>
<DT>ERROR_INTERNET_HTTP_TO_HTTPS_ON_REDIR </DT><DD>Notifies the user of the zone crossing to and from a secure site.
</DD><DT>ERROR_INTERNET_INCORRECT_PASSWORD </DT><DD>Displays a dialog box for obtaining the user's name and password. (On Microsoft Windows&#174; 95, the function first attempts to use any cached authentication information for the server being accessed, before displaying a dialog box.)
</DD><DT>ERROR_INTERNET_INVALID_CA </DT><DD>Notifies the user that the Win32 Internet function does not recognize the certificate authority that generated the certificate for this Secure Sockets Layer (SSL) site.
</DD><DT>ERROR_INTERNET_POST_IS_NON_SECURE </DT><DD>Displays a warning about posting data to the server through a nonsecure connection.
</DD><DT>ERROR_INTERNET_SEC_CERT_CN_INVALID </DT><DD>Indicates that the SSL certificate Common Name (hostname field) is incorrect. Displays an Invalid SSL Common Name dialog box, and lets the user view the incorrect certificate. Also allows the user to select a certificate in response to a server request.
</DD><DT>ERROR_INTERNET_SEC_CERT_DATE_INVALID </DT><DD>Tells the user that the SSL certificate has expired.
</DD></DL>
</DD><DT><I>dwFlags</I> </DT><DD>Action flags. Can be a combination of these values:
<DL>
<DT>FLAGS_ERROR_UI_FILTER_FOR_ERRORS </DT><DD>Scans the returned headers for errors. Call after using <A HREF="HttpSendRequest.htm#HttpSendRequest">HttpSendRequest</A>. This option detects any hidden errors, such as an authentication error.
</DD><DT>FLAGS_ERROR_UI_FLAGS_CHANGE_OPTIONS </DT><DD>If the function succeeds, stores the results of the dialog box in the Internet handle.
</DD><DT>FLAGS_ERROR_UI_FLAGS_GENERATE_DATA </DT><DD>Queries the Internet handle for needed information. The function constructs the appropriate data structure for the error. (For example, for Cert CN failures, the function grabs the certificate.)
</DD><DT>FLAGS_ERROR_UI_SERIALIZE_DIALOGS </DT><DD>Serializes authentication dialog boxes for concurrent requests on a password cache entry. The <I>lppvData</I> parameter should contain the address of a pointer to an <A HREF="../structures/INTERNET_AUTHNOTIFY_DATA.htm#INTERNET_AUTHNOTIFY_">INTERNET_AUTHNOTIFY_DATA</A> structure, and the client should implement a thread-safe, nonblocking callback function.
</DD></DL>
</DD><DT><I>lppvData</I> </DT><DD>Address of a data structure. The structure can be different for each error that needs to be handled.
</DD></DL>
<P>Authentication errors are hidden, since the call to <A HREF="HttpSendRequest.htm#HttpSendRequest">HttpSendRequest</A> will complete successfully, but the status code would indicate that the proxy or server requires authentication. The FLAGS_ERROR_UI_FILTER_FOR_ERRORS flag causes the function to search the headers for status codes that indicate that user input is needed.

<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>