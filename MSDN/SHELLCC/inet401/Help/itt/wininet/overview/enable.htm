<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Enabling Internet Functionality</TITLE>

<META NAME=MS-HKWD CONTENT="Enabling Internet Functionality">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="Enable_Internet"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Enabling Internet Functionality"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Enabling Internet Functionality"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="introduction.htm#ch_winineto">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="establish.htm">Establishing a Dial-Up Connection to the Internet</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="common.htm">Common Functions</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>Enabling Internet Functionality</H1>

<P>To compile programs that utilize the Win32 Internet functions, the header file, Wininet.h, must be in the include directory, and the library file, Wininet.lib, must be in the library directory of the C/C++ compiler being used. 

<P>Before using the Win32 Internet functions, the application should attempt to make a connection to the Internet by using the <A HREF="../functions/InternetAttemptConnect.htm#InternetAttemptConne">InternetAttemptConnect</A> function. This function calls the dial-up dialog box to initiate a connection to the Internet or check if a connection already exists. If this function fails, the application can enter offline mode, which allows it to access information that was cached during previous connections to the Internet.

<P>The <A HREF="../functions/InternetCheckConnection.htm#InternetCheckConnect">InternetCheckConnection</A> function can be used to check the connection to the Internet. It attempts to ping the server designated by the Uniform Resource Locator (URL) that is passed to the function. If the FLAG_ICC_FORCE_CONNECTION flag is set and NULL was given as the URL, the function checks to see if there is an entry in the WinInet server database for the nearest server. If one exists, the function pings that server.

<P>To begin using the Win32 Internet functions, use the <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A> function to establish the characteristics of the Internet connection being used. <B>InternetOpen</B> creates the root HINTERNET handle that is used to establish HTTP, FTP, and Gopher sessions. <B>InternetOpen</B> does not test the connection to the Internet to verify that the characteristics passed to the function are correct.

<P>Use the <A HREF="../functions/InternetConnect.htm#InternetConnect">InternetConnect</A> function to create a specific session. <B>InternetConnect</B> initializes an FTP, Gopher, or HTTP session for the specified site using the arguments passed to it and creates an HINTERNET handle that is a branch off the root handle. <B>InternetConnect</B> does not attempt to access or establish a connection to the specified site, except in the case of an FTP session. <A HREF="../functions/FtpFindFirstFile.htm#FtpFindFirstFile">FtpFindFirstFile</A>, <A HREF="../functions/FtpOpenFile.htm#FtpOpenFile">FtpOpenFile</A>, <A HREF="../functions/GopherFindFirstFile.htm#GopherFindFirstFile">GopherFindFirstFile</A>, <A HREF="../functions/GopherOpenFile.htm#GopherOpenFile">GopherOpenFile</A>, and <A HREF="../functions/HttpOpenRequest.htm#HttpOpenRequest">HttpOpenRequest</A> functions use the handle created by <B>InternetConnect</B> to establish a connection to the specified site.

<P>The following diagram illustrates the hierarchy of the HINTERNET handles.

<P>
<P><IMG SRC="../../../art/AX_WNT01.gif" WIDTH="357" HEIGHT="223" ALT="HINTERNET handles hierarchy" >
<P>
<P>The <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A> function, which creates the root HINTERNET handle, is at the top level. The next level contains the <A HREF="../functions/InternetOpenUrl.htm#InternetOpenUrl">InternetOpenUrl</A> function and the <A HREF="../functions/InternetConnect.htm#InternetConnect">InternetConnect</A> function. The functions that use the HINTERNET handle returned by <B>InternetConnect</B> make up the last level. For more information about HINTERNET handles and the handle hierarchy, see <A HREF="appendix_a.htm#HINTERNET">Appendix A: HINTERNET Handles</A>.



<H2><A NAME="Using_InternetOpen">Using InternetOpen</A></H2>
<P>To enable a connection to the Internet, a root HINTERNET handle must be created by using <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A>. Information about the user agent (the application calling the Internet functions), the type of access to the Internet, the proxy names, the hosts and addresses that bypass the proxy, and the behavior are passed to <B>InternetOpen</B>. 



<H3><A NAME="Setting_the_user_age">Setting the user agent</A></H3>
<P>The <I>lpszAgent</I> parameter of <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A> should be given a string that contains the name of the application or entity accessing the Internet. This string is used as the user agent in the HTTP protocol. For example, Internet Explorer uses "Microsoft Internet Explorer".



<H3><A NAME="Setting_access_types">Setting access types</A></H3>
<P><A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A> supports three access types: 

<UL><LI>Use INTERNET_OPEN_TYPE_DIRECT if the system on which the application is running uses a direct connection to the Internet. The <I>lpszProxyName</I> and <I>lpszProxyBypass</I> parameters of <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A> are not used and should be set to NULL.

<LI>Use INTERNET_OPEN_TYPE_PROXY if the system on which the application is running uses one or more proxy servers to access the Internet. <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A> uses the proxy servers indicated by <I>lpszProxyName</I> and bypasses the proxy for any host names or IP addresses specified by <I>lpszProxyBypass</I>.

<LI>Use INTERNET_OPEN_TYPE_PRECONFIG to instruct your application to retrieve the configuration from the registry. 
</UL>
<P>INTERNET_OPEN_TYPE_PRECONFIG looks at the registry values ProxyEnable, ProxyServer, and ProxyOverride. These values are located under HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings.

<P>If ProxyEnable is zero, the application uses INTERNET_OPEN_TYPE_DIRECT. Otherwise, the application uses INTERNET_OPEN_TYPE_PROXY and uses the ProxyServer and ProxyOverride information.

<P>The Win32 Internet functions provide support for SOCKS type proxies only if Microsoft Internet Explorer is installed. The installation of Internet Explorer installs the Wsock32n.dll, which the Win32 Internet functions need to support SOCKS proxies. The Wsock32n.dll is not redistributable. 



<H3><A NAME="Listing_proxy_server">Listing proxy servers</A></H3>
<P>The Win32 Internet functions recognize two types of proxies: CERN type proxies (HTTP only) and TIS FTP proxies (FTP only). If Internet Explorer is installed, the Win32 Internet functions also support SOCKS type proxies. <A HREF="../functions/InternetConnect.htm#InternetConnect">InternetConnect</A> assumes, by default, that the specified proxy is a CERN proxy. If the access type is set to INTERNET_OPEN_TYPE_DIRECT or INTERNET_OPEN_TYPE_PRECONFIG, the <I>lpszProxyName</I> parameter of <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A> should be set to NULL. Otherwise, the value passed to <I>lpszProxyName</I> must contain the proxies in a space-delimited string. The proxy listings can contain the port number that is used to access the proxy.


<P>To list a proxy for a specific protocol, the string must follow the format "&lt;protocol&gt;=&lt;protocol&gt;://&lt;proxy_name&gt;". The valid protocols are http, https, ftp, and gopher. For example, to list an FTP proxy, a valid string would be "ftp=ftp://ftp_proxy_name:21", where "ftp_proxy_name" is the name of the FTP proxy and "21" is the port number that must be used to access the proxy. If the proxy uses the default port number for that protocol, the port number can be omitted. If a proxy name is listed by itself, it is used as the default proxy for any protocols that do not have a specific proxy specified. For example, "http=http://http_proxy other" would use "http_proxy" for any HTTP operations, while all other protocols (such as FTP and Gopher) would use "other".



<H3><A NAME="Listing_the_proxy_by">Listing the proxy bypass</A></H3>
<P>Host names or IP addresses that are known locally can be listed in the proxy bypass. This list can contain wildcards, "*", which cause the application to bypass the proxy server for addresses that fit the specified pattern. To list multiple addresses and host names, separate them with blank spaces in the proxy bypass string. If the "&lt;local&gt;" macro is specified, the function bypasses any host name that does not contain a period.

<P>The following example shows sample calls to <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A> using different proxy bypass strings. The comments above each call describe what effect the bypass string has on the host names that are accessed from the HINTERNET handle it creates.

<PRE>/* bypass the proxy for any host name that does not 
    contain a period */
hInternetRoot = InternetOpen("WinInet Example", 
    INTERNET_OPEN_TYPE_PROXY,"proxy","&lt;local&gt;", 0);

/* bypass the proxy for any host name that starts with the 
    letters "ms" */
hInternetRoot = InternetOpen("WinInet Example", 
    INTERNET_OPEN_TYPE_PROXY,"proxy","ms*", 0);

/* bypass the proxy for any host name that contains "int", 
    such as "internet" and "painter" */
hInternetRoot = InternetOpen("WinInet Example", 
    INTERNET_OPEN_TYPE_PROXY,"proxy","*int*", 0);

/* bypass the proxy for the host name "example" and any 
    host name that contains "test" */
hInternetRoot = InternetOpen("WinInet Example", 
    INTERNET_OPEN_TYPE_PROXY,"proxy","example *test*", 0);
</PRE>
<H2><A NAME="Internet_Connect">Using InternetConnect</A></H2>
<P>To begin a Gopher, FTP, or HTTP session, the <A HREF="../functions/InternetConnect.htm#InternetConnect">InternetConnect</A> function must create a handle off the root handle returned by the <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A> function. <B>InternetConnect</B> sets the server address, port number, user name, password, and type of service.

<P><A HREF="../functions/InternetConnect.htm#InternetConnect">InternetConnect</A> uses the root HINTERNET handle created by <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A> to establish a session handle. If the INTERNET_FLAG_ASYNC flag was set in the call to <B>InternetOpen</B>, the call to <B>InternetConnect</B> should include a nonzero context value.

<P>The server name can be a constant string or a variable containing a string value of type LPSTR. This string can contain either the host name (for example, www.servername.com) or IP number of the site in ASCII dotted-decimal format (for example, 11.0.1.45).

<P>The server port is the TCP/IP port number to connect to on the server. <A HREF="../functions/InternetConnect.htm#InternetConnect">InternetConnect</A> uses the default port for the selected service type if the INTERNET_INVALID_PORT_NUMBER value is used. There are four server port defaults included with the Win32 Internet functions.
<TABLE>
<TR><TD><B>Value
 </B></TD><TD><B>Meaning
</B></TD></TR>
<TR><TD>INTERNET_DEFAULT_FTP_PORT </TD><TD>Use the default port for FTP servers (port 21).</TD></TR>
<TR><TD>INTERNET_DEFAULT_GOPHER_PORT </TD><TD>Use the default port for Gopher servers (port 70).</TD></TR>
<TR><TD>INTERNET_DEFAULT_HTTP_PORT </TD><TD>Use the default port for HTTP servers (port 80).</TD></TR>
<TR><TD>INTERNET_DEFAULT_HTTPS_PORT </TD><TD>Use the default port for HTTPS servers (port 443).</TD></TR>
<TR><TD>INTERNET_DEFAULT_SOCKS_PORT </TD><TD>Uses the default port for SOCKS firewall servers (port 1080).</TD></TR></TABLE>
<H3><A NAME="Defining_the_user_na">Defining the user name and password</A></H3>
<P>The user name is the address of a NULL-terminated string that contains the name of the user to log on. If this parameter is NULL, the function uses an appropriate default, except for HTTP; a NULL parameter in HTTP causes the server to return an error. For the FTP protocol, the default is anonymous.

<P>The password is the address of a NULL-terminated string that contains the password to use to log on. If both <I>lpszUsername</I> and <I>lpszPassword</I> are NULL, the function uses the default anonymous password. In the case of FTP, the default anonymous password is the user's e-mail name. If <I>lpszUsername</I> is not NULL and <I>lpszPassword</I> is NULL, the function uses a blank password. There are four possible settings of <I>lpszUsername</I> and <I>lpszPassword</I>, which produce the behaviors shown in the following table.

<TABLE>
<TR><TD><B><I>lpszUsername</I>
</B></TD>
<TD><B><I>lpszPassword</I>
</B></TD>
<TD><B>User name sent to FTP server
</B></TD>
<TD><B>Password sent to FTP server
</B></TD>
</TR>
<TR><TD>NULL</TD>
<TD>NULL</TD>
<TD>"anonymous"</TD>
<TD>User's e-mail name</TD>
</TR>
<TR><TD>Non-NULL string</TD>
<TD>NULL</TD>
<TD><I>lpszUsername</I></TD>
<TD>""</TD>
</TR>
<TR><TD>NULL</TD>
<TD>Non-NULL string</TD>
<TD>ERROR</TD>
<TD>ERROR</TD>
</TR>
<TR><TD>Non-NULL string</TD>
<TD>Non-NULL string</TD>
<TD><I>lpszUsername</I></TD>
<TD><I>lpszPassword</I></TD>
</TR>
</TABLE>
<P>This information can be changed by using the <A HREF="../functions/InternetSetOption.htm#InternetSetOption">InternetSetOption</A> and <A HREF="../functions/InternetErrorDlg.htm#InternetErrorDlg">InternetErrorDlg</A> functions. <B>InternetSetOption</B> changes the user name and password values, while <B>InternetErrorDlg</B> displays a dialog box requesting the proper user name and password.





<H3><A NAME="Defining_the_session">Defining the session</A></H3>
<P>To define the session that is being established, <A HREF="../functions/InternetConnect.htm#InternetConnect">InternetConnect</A> must have the service type, flags, and context value set.

<P>There are three service types available to <A HREF="../functions/InternetConnect.htm#InternetConnect">InternetConnect</A>: INTERNET_SERVICE_FTP, INTERNET_SERVICE_GOPHER, and INTERNET_SERVICE_HTTP. INTERNET_SERVICE_HTTP is used for both HTTP and HTTPS sessions.

<P>INTERNET_FLAG_PASSIVE is the only service-specific flag used by the Win32 Internet functions. This flag can be set when the service type is INTERNET_SERVICE_FTP in order to use passive FTP semantics.

<P>For all synchronous operations, the value of <I>dwContext</I> should be set to zero. If asynchronous operations were established by setting the INTERNET_FLAG_ASYNC flag in the call to <A HREF="../functions/InternetOpen.htm#InternetOpen">InternetOpen</A>, a nonzero value should be supplied for <I>dwContext</I>. For more information on asynchronous operations, see <A HREF="common.htm#Set_Async">Setting up asynchronous operations</A>.

<P>For FTP sessions, <A HREF="../functions/InternetConnect.htm#InternetConnect">InternetConnect</A> tries to establish a connection to the server on the Internet. HTTP and Gopher sessions do not establish a connection until a function attempts to get information from the server.




<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>