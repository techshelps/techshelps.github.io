<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Asynchronous and URL Monikers Overview</TITLE>

<META NAME=MS-HKWD CONTENT="Asynchronous and URL Monikers Overview">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ch_urlmon_ovr"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Asynchronous and URL Monikers Overview"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Asynchronous and URL Monikers Overview"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="monikers.htm#book_monikers">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="monikers.htm">Asynchronous and URL Monikers</A>
<IMG SRC="../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="appendix_a.htm">Appendix A: MIME Type Detection in Internet Explorer 4.0</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>Asynchronous and URL Monikers Overview</H1>

<P>Monikers bind objects or Uniform Resource Locators (URLs). This section covers the moniker functionality exported by the Urlmon.dll dynamic-link library (DLL).

<P><A CLASS=tctop HREF="overview.htm#Introduction"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Introduction</A><BR>
<P><A CLASS=tctop HREF="overview.htm#About_URLs_and_Name_"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">About URLs and Name Spaces</A><BR>
<P><A CLASS=tctop HREF="overview.htm#AboutMonikers"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">About Monikers</A><BR>
<P><A CLASS=tctop HREF="overview.htm#Creating_a_URL_Monik"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Creating a URL Moniker</A><BR>
<P><A CLASS=tctop HREF="overview.htm#Handling_BINDINFO_St"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Handling BINDINFO Structures</A><BR>
<P><A CLASS=tctop HREF="overview.htm#Using_the_URL_Functi"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Using the URL Functions</A><BR>
<P><A CLASS=tctop HREF="appendix_a.htm#MIME_DETECT"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Appendix A: MIME Type Detection in Internet Explorer 4.0</A><BR>
<H3><A NAME="Introduction">Introduction</A></H3>

<P>If you want to compile programs that use the functionality provided in Urlmon.dll, you must make sure the Urlmon.h header file is in the include directory, and the Urlmon.lib library file is in the library directory, of the C/C++ compiler you use.

<P>This documentation assumes that you have an understanding of Microsoft&#174; Win32&#174; programming. Also, for asynchronous monikers, asynchronous pluggable protocols, and URL monikers you should have an understanding of OLE and COM programming. For the Internet-related interfaces, methods, and functions, an understanding of the format and syntax of URLs is also required. For more information, see RFC 1738, <I>Uniform Resource Locators (URL)</I>. You can find this document at <A HREF="http://ds.internic.net/rfc/rfc1738.txt" TARGET="_top">http://ds.internic.net/rfc/rfc1738.txt</A>.<IMG SRC="../../art/external.gif" WIDTH="19" HEIGHT="8" ALT="External Link" >




<H3><A NAME="About_URLs_and_Name_">About URLs and Name Spaces</A></H3>
<P>A Uniform Resource Locator (URL) follows the syntax described in RFC 1738, which specifies a protocol scheme followed by a scheme-specific portion (&lt;scheme&gt;:&lt;scheme-specific portion&gt;). For example, in the URL http://www.microsoft.com/, "http" is the scheme and "//www.microsoft.com/" is the scheme-specific portion.

<P>The beginning portion of the scheme-specific portion of the URL contains the server name. This portion of the URL is often referred to as the URL name space.




<H3><A NAME="AboutMonikers">About Monikers</A></H3>
<P>Monikers are used as the basis for linking in OLE. After a moniker is bound to an object, the moniker's
<object id="hhal_3" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_3.Click()>IMoniker</A> interface can be used to locate, activate, and access the bound object without having any other specific information on where the actual object is located. For standard monikers, this binding process occurs synchronously, which does not impact performance dramatically because the moniker and object are usually on a local system. Examples of objects that can be bound to a moniker include files, items, and pointers.

<P>Binding a moniker to a URL synchronously impacts performance because the process has to wait for responses from the network before completing the binding process. That is where asynchronous monikers, URL monikers, and the URL functions come in.



<H4><A NAME="Asynchronous_Moniker">Asynchronous Monikers</A></H4>
<P>The functionality provided in Urlmon.dll allows a client program to create monikers that can instantiate a named object and return a pointer to one of the object's interfaces asynchronously.

<P><B>Interfaces related to asynchronous monikers</B>
<UL><LI><A HREF="ifaces/iasyncmoniker/IAsyncMoniker.htm#IAsyncMoniker">IAsyncMoniker</A>
<LI><A HREF="ifaces/ibinding/IBinding.htm#IBinding">IBinding</A>
<LI><A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A>
<LI><A HREF="ifaces/ipersistmoniker/IPersistMoniker.htm#IPersistMoniker">IPersistMoniker</A>
</UL>
<P><B>Functions related to asynchronous monikers</B>
<UL><LI><A HREF="functions/CreateAsyncBindCtx.htm#CreateAsyncBindCtx">CreateAsyncBindCtx</A>
<LI><A HREF="functions/IsAsyncMoniker.htm#IsAsyncMoniker">IsAsyncMoniker</A>
<LI><A HREF="functions/RegisterBindStatusCallback.htm#RegisterBindStatusCa">RegisterBindStatusCallback</A>
<LI><A HREF="functions/RevokeBindStatusCallback.htm#RevokeBindStatusCall">RevokeBindStatusCallback</A>
</UL>
<H4><A NAME="URL_Monikers">URL Monikers</A></H4>
<P>A URL moniker is a specific implementation of asynchronous monikers that allows a client program to create a moniker whose data is referenced by a URL.

<P><B>Interfaces related to URL monikers</B>
<UL><LI><A HREF="ifaces/iauthenticate/IAuthenticate.htm#IAuthenticate">IAuthenticate</A>
<LI><A HREF="ifaces/ibindhost/IBindHost.htm#IBindHost">IBindHost</A>
<LI><A HREF="ifaces/icodeinstall/ICodeInstall.htm#ICodeInstall">ICodeInstall</A>
<LI><A HREF="ifaces/ihttpnegotiate/IHttpNegotiate.htm#IHttpNegotiate">IHttpNegotiate</A>
<LI><A HREF="ifaces/ihttpsecurity/IHttpSecurity.htm#IHttpSecurity">IHttpSecurity</A>
<LI><A HREF="ifaces/iwindowforbindingui/IWindowForBindingUI.htm#IWindowForBindingUI">IWindowForBindingUI</A>
<LI><A HREF="ifaces/iwininethttpinfo/IWinInetHttpInfo.htm#IWinInetHttpInfo">IWinInetHttpInfo</A>
<LI><A HREF="ifaces/iwininetinfo/IWinInetInfo.htm#IWinInetInfo">IWinInetInfo</A>
</UL>
<P><B>Functions related to URL monikers</B>
<UL><LI><A HREF="functions/CoGetClassObjectFromURL.htm#CoGetClassObjectFrom">CoGetClassObjectFromURL</A>
<LI><A HREF="functions/CreateFormatEnumerator.htm#CreateFormatEnumerat">CreateFormatEnumerator</A>
<LI><A HREF="functions/CreateURLMoniker.htm#CreateURLMoniker">CreateURLMoniker</A>
<LI><A HREF="functions/FindMediaTypeClass.htm#FindMediaTypeClass">FindMediaTypeClass</A>
<LI><A HREF="functions/IsValidURL.htm#IsValidURL">IsValidURL</A>
<LI><A HREF="functions/MkParseDisplayNameEx.htm#MkParseDisplayNameEx">MkParseDisplayNameEx</A>
<LI><A HREF="functions/RegisterFormatEnumerator.htm#RegisterFormatEnumer">RegisterFormatEnumerator</A>
<LI><A HREF="functions/RegisterMediaTypeClass.htm#RegisterMediaTypeCla">RegisterMediaTypeClass</A>
<LI><A HREF="functions/RegisterMediaTypes.htm#RegisterMediaTypes">RegisterMediaTypes</A>
<LI><A HREF="functions/RevokeFormatEnumerator.htm#RevokeFormatEnumerat">RevokeFormatEnumerator</A>
<LI><A HREF="functions/UrlMkGetSessionOption.htm#UrlMkGetSessionOptio">UrlMkGetSessionOption</A>
<LI><A HREF="functions/UrlMkSetSessionOption.htm#UrlMkSetSessionOptio">UrlMkSetSessionOption</A>
</UL>
<H4><A NAME="URL_Functions">URL Functions</A></H4>
<P>The URL functions combine the capabilities of asynchronous monikers and URL monikers into easy-to-use functions.

<P><B>URL functions</B>
<UL><LI><A HREF="functions/URLDownloadToCacheFile.htm#URLDownloadToCacheFi">URLDownloadToCacheFile</A>
<LI><A HREF="functions/URLDownloadToFile.htm#URLDownloadToFile">URLDownloadToFile</A>
<LI><A HREF="functions/URLOpenBlockingStream.htm#URLOpenBlockingStrea">URLOpenBlockingStream</A>
<LI><A HREF="functions/URLOpenPullStream.htm#URLOpenPullStream">URLOpenPullStream</A>
<LI><A HREF="functions/URLOpenStream.htm#URLOpenStream">URLOpenStream</A>
</UL>
<H3><A NAME="Creating_a_URL_Monik">Creating a URL Moniker</A></H3>
<P>Follow these steps to create a URL moniker for an application:

<OL><LI>Optional, but recommended. Implement the <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> interface.

<LI>Optional, but recommended. Create an instance of your <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> interface.

<LI>Call <A HREF="functions/CreateURLMoniker.htm#CreateURLMoniker">CreateURLMoniker</A> with the URL and get the
<object id="hhal_4" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_4.Click()>IMoniker</A> interface.

<LI>Call <A HREF="functions/CreateAsyncBindCtx.htm#CreateAsyncBindCtx">CreateAsyncBindCtx</A> and get the
<object id="hhal_5" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_5.Click()>IBindCtx</A> interface.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, call <A HREF="functions/RegisterBindStatusCallback.htm#RegisterBindStatusCa">RegisterBindStatusCallback</A> with the
<object id="hhal_6" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_6.Click()>IBindCtx</A> and <B>IBindStatusCallback</B> interfaces.




<LI>Call one of the
<object id="hhal_7" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_7.Click()>IMoniker</A> binding methods (either
<object id="hhal_8" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_8.Click()>IMoniker::BindToStorage</A> or
<object id="hhal_9" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_9.Click()>IMoniker::BindToObject</A>) with the
<object id="hhal_10" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_10.Click()>IBindCtx</A> interface. In the asynchronous case (where <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented), the client application may get a pointer to the
<object id="hhal_11" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_11.Click()>IStream</A> or
<object id="hhal_12" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_12.Click()>IStorage</A> interface. The client application should call the
<object id="hhal_13" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_13.Click()>IUnknown::Release</A> method on the interface and use the interface returned in the <A HREF="ifaces/ibindstatuscallback/OnDataAvailable.htm#IBindStatusCallback_">IBindStatusCallback::OnDataAvailable</A> call.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, the <A HREF="ifaces/ibindstatuscallback/GetBindInfo.htm#IBindStatusCallback_">IBindStatusCallback::GetBindInfo</A> method is called by the
<object id="hhal_14" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_14.Click()>IMoniker</A> binding method to get the bind information.

<P><B>Warning</B> The size of the <A HREF="structures/BINDINFO.htm#BINDINFO">BINDINFO</A> structure used by <A HREF="ifaces/ibindstatuscallback/GetBindInfo.htm#IBindStatusCallback_">IBindStatusCallback::GetBindInfo</A> has changed with the release of Microsoft Internet Explorer 4.0. Developers must write code that checks the size of the <B>BINDINFO</B> structure that is passed into their implementation of the <B>IBindStatusCallback::GetBindInfo</B> method before writing to members of the structure. For more information, see the <A HREF="overview.htm#Handling_BINDINFO_St">Handling BINDINFO Structures</A> section.

<P>

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, the <A HREF="ifaces/ibindstatuscallback/OnStartBinding.htm#IBindStatusCallback_">IBindStatusCallback::OnStartBinding</A> method will be called.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, the <A HREF="ifaces/ibindstatuscallback/OnProgress.htm#IBindStatusCallback_">IBindStatusCallback::OnProgress</A> method will be called.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, either <A HREF="ifaces/ibindstatuscallback/OnDataAvailable.htm#IBindStatusCallback_">IBindStatusCallback::OnDataAvailable</A> (if
<object id="hhal_15" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_15.Click()>IMoniker::BindToStorage</A> was used) or <A HREF="ifaces/ibindstatuscallback/OnObjectAvailable.htm#IBindStatusCallback_">IBindStatusCallback::OnObjectAvailable</A> (if
<object id="hhal_16" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_16.Click()>IMoniker::BindToObject</A> was used) will be called.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, steps 9 and 10 are repeated until the binding is completed.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, the <A HREF="ifaces/ibindstatuscallback/OnStopBinding.htm#IBindStatusCallback_">IBindStatusCallback::OnStopBinding</A> method will be called.
</OL>
<P>Follow these steps to create a URL moniker for a control:

<OL><LI>Optional, but recommended. Implement the <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> interface.

<LI>Optional, but recommended. Create an instance of the <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> interface.

<LI>Call <A HREF="functions/CreateAsyncBindCtx.htm#CreateAsyncBindCtx">CreateAsyncBindCtx</A> and get the
<object id="hhal_17" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_17.Click()>IBindCtx</A> interface.

<LI>Call <A HREF="ifaces/ibindhost/CreateMoniker.htm#IBindHost__CreateMon">IBindHost::CreateMoniker</A> with the
<object id="hhal_18" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_18.Click()>IBindCtx</A> interface and get the
<object id="hhal_19" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_19.Click()>IMoniker</A> interface.

<LI>Call one of the <A HREF="ifaces/ibindhost/IBindHost.htm#IBindHost">IBindHost</A> binding methods (either <A HREF="ifaces/ibindhost/MonikerBindToStorage.htm#IBindHost__MonikerBi">IBindHost::MonikerBindToStorage</A> or <A HREF="ifaces/ibindhost/MonikerBindToObject.htm#IBindHost__MonikerBi">IBindHost::MonikerBindToObject</A>) with the
<object id="hhal_20" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_20.Click()>IBindCtx</A>,
<object id="hhal_21" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_21.Click()>IMoniker</A>, and <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> (if implemented) interfaces.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, the <A HREF="ifaces/ibindstatuscallback/GetBindInfo.htm#IBindStatusCallback_">IBindStatusCallback::GetBindInfo</A> method is called by the
<object id="hhal_22" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_22.Click()>IMoniker</A> binding method to get the bind information.




<P><B>Warning</B> The size of the <A HREF="structures/BINDINFO.htm#BINDINFO">BINDINFO</A> structure used by <A HREF="ifaces/ibindstatuscallback/GetBindInfo.htm#IBindStatusCallback_">IBindStatusCallback::GetBindInfo</A> has changed with the release of Microsoft Internet Explorer 4.0. Developers must write code that checks the size of the <B>BINDINFO</B> structure that is passed into their implementation of the <B>IBindStatusCallback::GetBindInfo</B> method before writing to members of the structure. For more information, see the <A HREF="overview.htm#Handling_BINDINFO_St">Handling BINDINFO Structures</A> section.

<P>

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, the <A HREF="ifaces/ibindstatuscallback/OnStartBinding.htm#IBindStatusCallback_">IBindStatusCallback::OnStartBinding</A> method will be called.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, the <A HREF="ifaces/ibindstatuscallback/OnProgress.htm#IBindStatusCallback_">IBindStatusCallback::OnProgress</A> method will be called.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, either <A HREF="ifaces/ibindstatuscallback/OnDataAvailable.htm#IBindStatusCallback_">IBindStatusCallback::OnDataAvailable</A> (if <A HREF="ifaces/ibindhost/MonikerBindToStorage.htm#IBindHost__MonikerBi">IBindHost::MonikerBindToStorage</A> was used) or <A HREF="ifaces/ibindstatuscallback/OnObjectAvailable.htm#IBindStatusCallback_">IBindStatusCallback::OnObjectAvailable</A> (if <A HREF="ifaces/ibindhost/MonikerBindToObject.htm#IBindHost__MonikerBi">IBindHost::MonikerBindToObject</A> was used) will be called.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, steps 8 and 9 are repeated until the binding is completed.

<LI>If <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> has been implemented, the <A HREF="ifaces/ibindstatuscallback/OnStopBinding.htm#IBindStatusCallback_">IBindStatusCallback::OnStopBinding</A> method will be called.
</OL>
<P><B>Note</B>  IE4/MSHTML does not support the <A HREF="ifaces/ibindstatuscallback/IBindStatusCallback.htm#IBindStatusCallback">IBindStatusCallback</A> interface. Applications that are hosting IE4/MSHTML and want to get callbacks on the progress of the bind operation should implement the
<object id="hhal_23" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_23.Click()>IPropertyNotifySink</A> interface.
<H3><A NAME="Handling_BINDINFO_St">Handling BINDINFO Structures</A></H3>
<P>The <A HREF="structures/BINDINFO.htm#BINDINFO">BINDINFO</A> structure is used by methods, such as <A HREF="ifaces/ibindstatuscallback/GetBindInfo.htm#IBindStatusCallback_">IBindStatusCallback::GetBindInfo</A>, to pass information that specifies how a bind operation should be handled. To properly write information to this structure, the client application should:

<UL><LI>Clear the <A HREF="structures/BINDINFO.htm#BINDINFO">BINDINFO</A> structure.
<LI>Check the size of the <A HREF="structures/BINDINFO.htm#BINDINFO">BINDINFO</A> structure to determine what version has been passed.
</UL>
<P>Clearing the <A HREF="structures/BINDINFO.htm#BINDINFO">BINDINFO</A> structure, before writing information into it, prevents members that are not being used from containing incorrect data. The following code fragment demonstrates how to clear the structure.

<PRE>//pbindinfo is a pointer to a BINDINFO structure
DWORD cbSize = pbindinfo-&gt;cbSize;        
memset(pbindinfo,0,cbSize);
pbindinfo-&gt;cbSize = cbSize;
</PRE>
<P>Since the size of the <A HREF="structures/BINDINFO.htm#BINDINFO">BINDINFO</A> structure has increased in Internet Explorer 4.0, client applications should check the size of the structure that is passed into their implementation of any methods that use this structure.

<P>The following sample demonstrates how to check the size of the structure for accessing members of the <A HREF="structures/BINDINFO.htm#BINDINFO">BINDINFO</A> structure beyond <B>cbstgmedData</B>.

<PRE>if (pbindinfo-&gt;cbSize &gt;= offsetof(BINDINFO, dwReserved))
{
    // Write to additional fields.
}
else
{
    // Added functionality is not available, so make any adjustments necessary.
}
</PRE>
<H3><A NAME="Using_the_URL_Functi">Using the URL Functions</A></H3>
<P>The <A HREF="functions/URLDownloadToCacheFile.htm#URLDownloadToCacheFi">URLDownloadToCacheFile</A>, <A HREF="functions/URLDownloadToFile.htm#URLDownloadToFile">URLDownloadToFile</A>, <A HREF="functions/URLOpenBlockingStream.htm#URLOpenBlockingStrea">URLOpenBlockingStream</A>, <A HREF="functions/URLOpenPullStream.htm#URLOpenPullStream">URLOpenPullStream</A>, and <A HREF="functions/URLOpenStream.htm#URLOpenStream">URLOpenStream</A> functions combine the capabilities of asynchronous monikers and URL monikers into easy-to-use functions.

<P>The following sample demonstrates how to use the <A HREF="functions/URLOpenBlockingStream.htm#URLOpenBlockingStrea">URLOpenBlockingStream</A> function.

<PRE>IStream* pStream;
char buffer[0x100];
DWORD dwGot;
HRESULT hr = NOERROR;

// Open a blocking type stream to the web site stored in the string szWebSite.
URLOpenBlockingStream( 0, szWebSite, &amp;pStream, 0, 0);

do {
    hr = pStream-&gt;Read( buffer, sizeof(buffer), &amp;dwGot );
    // Do something with contents of buffer. 
} while( SUCCEEDED(hr) &amp;&amp; hr != S_FALSE);

return TRUE;

pStream-&gt;Release();
</PRE>
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>