<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Property Sheets</TITLE>

<META NAME=MS-HKWD CONTENT="Property Sheets">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, Common controls">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ch_prpsheet"></A>
<!--NAV_LINKS_START-->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Property Sheets"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Property Sheets"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR><TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../CommCtls.htm#book_cc">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="../progbar/structures/PBRANGE.htm">PBRANGE</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="RefList.htm">Property Sheet Reference</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>Property Sheets</H1>
<BR CLEAR=ALL>
<P>A <I>property sheet</I> is a window that allows the user to view and edit the properties of an item. For example, a spreadsheet application can use a property sheet to allow the user to set the font and border properties of a cell or to view and set the properties of a device, such as a disk drive, printer, or mouse.
<P><A CLASS=tctop HREF="PropSheet.htm#About_Property_Sheet"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">About Property Sheets</A><BR>
<P><A CLASS=tctop HREF="PropSheet.htm#Using_Property_Sheet"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Using Property Sheets</A><BR>
<P><A CLASS=tctop HREF="PropSheet.htm#Property_Sheet_Updat"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Property Sheet Updates in Internet Explorer</A><BR>
<P><A CLASS=tctop HREF="RefList.htm#propsheet_PropSheet"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Property Sheet Reference</A><BR>
<!--************************************************************--><H2><A NAME="About_Property_Sheet">About Property Sheets</A></H2>
<P>This document assumes that you have a thorough understanding of dialog box templates and dialog box procedures. If you don't, you should read the "Dialog Boxes" chapter in the Platform SDK before continuing with this overview chapter. 

<P>To implement property sheets in your application, include the Prsht.h header file in your project. Prsht.h contains all of the identifiers used with property sheets. 

<P>A property sheet contains one or more overlapping child windows called <I>pages</I>, each containing control windows for setting a group of related properties. For example, a page can contain the controls for setting the font properties of an item, including the type style, point size, color, and so on. Each page has a tab that the user can select to bring the page to the foreground of the property sheet. The following illustration shows a property sheet for viewing and setting the properties of a floppy disk drive.

<P><IMG SRC="../../../art/ps_scrn.gif" WIDTH="367" HEIGHT="419" ALT="Property sheet used for viewing and setting the properties of a floppy disk drive." >

<H3><A NAME="Property_Sheet_Dialo">Property Sheet Dialog Boxes</A></H3>
<P>A property sheet and the pages it contains are actually dialog boxes. The property sheet is a system-defined dialog box that manages the pages and provides a common container for them. The property sheet dialog box can be modal or modeless. It includes a frame, a title bar, and four buttons: OK, Cancel, Apply Now, and Help. (The Help button may be hidden as in the preceding illustration.) The dialog box procedures for the pages receive notification messages when the user clicks the buttons. 

<P>Each page in a property sheet is an application-defined modeless dialog box that manages the control windows used to view and edit the properties of an item. You provide the dialog box template used to create each page as well as the dialog box procedure that manages the controls and sets the properties of the corresponding item. 

<P>A property sheet sends notification messages to the dialog box procedure for a page when the page is gaining or losing the activation and when the user clicks the OK, Cancel, Apply Now, or Help button. The notifications are sent in the form of <A HREF="../common/messages/WM_NOTIFY.htm#WM_NOTIFY">WM_NOTIFY</A> messages. The <I>lParam</I> parameter is the address of an <A HREF="../common/structures/NMHDR.htm#NMHDR">NMHDR</A> structure that includes the window handle to the property sheet dialog box. 

<P>Some notification messages require a page to return either TRUE or FALSE in response to the <A HREF="../common/messages/WM_NOTIFY.htm#WM_NOTIFY">WM_NOTIFY</A> message. To do this, the page must use the
<object id="hhal_3" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_3.Click()>SetWindowLong</A> function to set the DWL_MSGRESULT value for the page dialog box to either TRUE or FALSE. 

<H3><A NAME="Pages">Pages</A></H3>
<P>A property sheet must contain at least one page, but it cannot contain more than the value of MAXPROPPAGES as defined in the Win32 header files. Each page has a zero-based index that the property sheet assigns according to the order in which the page is added to the property sheet. The indexes are used in messages that you send to the property sheet. 

<P>A property page can contain a nested dialog box. If it does, you must include the WS_EX_CONTROLPARENT style for the top-level dialog box and call the
<object id="hhal_4" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_4.Click()>IsDialogMessage</A> function with the handle to the parent dialog box. This ensures that the user can use mnemonics and the dialog box navigation keys to move the focus to controls in the nested dialog box.

<P>Each page has a corresponding icon and label. The property sheet creates a tab for each page and displays the icon and label in the tab. All property sheet pages are expected to use a nonbold font. To ensure that the font is not bold, specify the DS_3DLOOK style in the dialog box template. 

<P>The dialog box procedure for a page must not call the
<object id="hhal_5" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_5.Click()>EndDialog</A> function. Doing so will destroy the entire property sheet, not just the page. 

<P>The minimum size for a property sheet page is 212 dialog units horizontally and 114 dialog units vertically. If a page dialog is smaller than this, the page will be enlarged until it meets the minimum size. 

The Prsht.h header file contains three sets of recommended sizes for property sheet pages. PROP_SM_CXDLG and PROP_SM_CYDLG define the recommended dimensions for a small property sheet page. PROP_MED_CXDLG and PROP_MED_CYDLG define the recommended dimensions for a medium-sized property sheet page. PROP_LG_CXDLG and PROP_LG_CYDLG define the recommended dimensions for a large property sheet page. Prsht.h also contains recommended dimensions for property sheet wizard pages. See <A HREF="PropSheet.htm#ps_wizards">Wizard Property Sheets</A> for an explanation of these dimensions. Using these recommended sizes will help ensure visual consistency between your application and other Microsoft&#174; Windows&#174; applications.

<P>Use the following values to set the sizes of the elements in your property sheet pages:

<P><TABLE>
<TR><TD><B><A NAME="PROP_SM_CXDLG">PROP_SM_CXDLG</A></B>
 </TD><TD>Width, in dialog units, of a small property sheet page.</TD></TR><TR><TD><B><A NAME="PROP_SM_CYDLG">PROP_SM_CYDLG</A></B>
 </TD><TD>Height, in dialog units, of a small property sheet page.</TD></TR><TR><TD><B><A NAME="PROP_MED_CXDLG">PROP_MED_CXDLG</A></B>
 </TD><TD>Width, in dialog units, of a medium-sized property sheet page.</TD></TR><TR><TD><B><A NAME="PROP_MED_CYDLG">PROP_MED_CYDLG</A></B>
 </TD><TD>Height, in dialog units, of a medium-sized property sheet page.</TD></TR><TR><TD><B><A NAME="PROP_LG_CXDLG">PROP_LG_CXDLG</A></B>
 </TD><TD>Width, in dialog units, of a large property sheet page.</TD></TR><TR><TD><B><A NAME="PROP_LG_CYDLG">PROP_LG_CYDLG</A></B>
 </TD><TD>Height, in dialog units, of a large property sheet page.</TD></TR></TABLE>
<H3><A NAME="Property_Sheet_Creat">Property Sheet Creation</A></H3>
<P>Before creating a property sheet, you must define one or more pages. This involves filling a <A HREF="structures/PROPSHEETPAGE.htm#PROPSHEETPAGE">PROPSHEETPAGE</A> structure with information about the page&#151;its icon, label, dialog box template, dialog box procedure, and so on&#151;and then specifying the address of the structure in a call to the <A HREF="functions/CreatePropertySheetPage.htm#CreatePropertySheetPage">CreatePropertySheetPage</A> function. The function returns a handle to the HPROPSHEETPAGE type that uniquely identifies the page. 

<P>To create a property sheet, you specify the address of a <A HREF="structures/PROPSHEETHEADER.htm#PROPSHEETHEADER">PROPSHEETHEADER</A> structure in a call to the <A HREF="functions/PropertySheet.htm#PropertySheet">PropertySheet</A> function. The structure defines the icon and title for the property sheet and also includes the address of an array of HPROPSHEETPAGE handles. When <B>PropertySheet</B> creates the property sheet, it includes the pages identified in the array. The pages appear in the property sheet in the same order that they are contained in the array.

<P>Another way to create a property sheet is to specify an array of <A HREF="structures/PROPSHEETPAGE.htm#PROPSHEETPAGE">PROPSHEETPAGE</A> structures instead of an array of HPROPSHEETPAGE handles. In this case, <A HREF="functions/PropertySheet.htm#PropertySheet">PropertySheet</A> creates handles for the pages before adding them to the property sheet. 

<P>When a page is created, the dialog box procedure for the page receives a WM_INITDIALOG message. The message's <I>lParam</I> parameter is the address of the <A HREF="structures/PROPSHEETPAGE.htm#PROPSHEETPAGE">PROPSHEETPAGE</A> structure used to create the page. The dialog box can save the information in the structure and use it later to modify the page.

<P><A HREF="functions/PropertySheet.htm#PropertySheet">PropertySheet</A> automatically sets the size and initial position of a property sheet. The position is based on the position of the owner window, and the size is based on the largest page specified in the array of pages when the property sheet was created. If you want the pages to match the width of the four buttons at the bottom of the property sheet, set the width of the widest page to 190 dialog units. 

<H3><A NAME="Adding_and_Removing_">Adding and Removing Pages</A></H3>
<P>After creating a property sheet, an application can add a page by using the <A HREF="messages/PSM_ADDPAGE.htm#PSM_ADDPAGE">PSM_ADDPAGE</A> message. Note that the size of the property sheet cannot change after it has been created, so the new page must be no larger than the largest page currently in the property sheet. 

<P>An application removes a page by using the <A HREF="messages/PSM_REMOVEPAGE.htm#PSM_REMOVEPAGE">PSM_REMOVEPAGE</A> message. When you define a page, you can specify the address of a <A HREF="functions/PropSheetPageProc.htm#PropSheetPageProc">PropSheetPageProc</A> callback function that the property sheet calls when it is creating or removing the page. Using <B>PropSheetPageProc</B> gives you an opportunity to perform initialization and cleanup operations for individual pages. 

<P>When a property sheet is destroyed, it automatically destroys all of the pages that have been added to it. The pages are destroyed in reverse order from that specified in the array used to create the pages. To destroy a page that was created by the <A HREF="functions/CreatePropertySheetPage.htm#CreatePropertySheetPage">CreatePropertySheetPage</A> function but was not added to the property sheet, use the <A HREF="functions/DestroyPropertySheetPage.htm#DestroyPropertySheetPage">DestroyPropertySheetPage</A> function.

<H3><A NAME="Property_Sheet_Title">Property Sheet Title and Page Labels</A></H3>
<P>You specify the title of a property sheet in the <A HREF="structures/PROPSHEETHEADER.htm#PROPSHEETHEADER">PROPSHEETHEADER</A> structure used to create the property sheet. If the <B>dwFlags</B> member includes the PSH_PROPTITLE value, the property sheet adds the "Properties for" prefix to the specified title string. You can change the title after a property sheet is created by using the <A HREF="messages/PSM_SETTITLE.htm#PSM_SETTITLE">PSM_SETTITLE</A> message. 

<P>By default, a property sheet uses the name string specified in the dialog box template as the label for a page. You can override the name string by including the PSP_USETITLE value in the <B>dwFlags</B> member of the <A HREF="structures/PROPSHEETPAGE.htm#PROPSHEETPAGE">PROPSHEETPAGE</A> structure that defines the page. When PSP_USETITLE is specified, the <B>pszTitle</B> member must contain the address of the label string for the page.

<H3><A NAME="Page_Activation">Page Activation</A></H3>
<P>A property sheet can have only one active page at a time. The page that has the activation is at the foreground of the overlapping stack of pages. The user activates a page by selecting its tab; an application activates a page by using the <A HREF="messages/PSM_SETCURSEL.htm#PSM_SETCURSEL">PSM_SETCURSEL</A> message. 

<P>The property sheet sends the <A HREF="notifications/PSN_KILLACTIVE.htm#PSN_KILLACTIVE">PSN_KILLACTIVE</A> notification message to the page that is about to lose the activation. In response, the page should validate any changes that the user has made to the page. If the page requires additional user input before losing the activation, it should use the
<object id="hhal_6" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_6.Click()>SetWindowLong</A> function to set the DWL_MSGRESULT value of the page to TRUE. Also, the page should display a message box that describes the problem and provides the recommended action. The page should set DWL_MSGRESULT to FALSE when it is okay to lose the activation. 

<P>Before the page that is gaining the activation is visible, the property sheet sends the <A HREF="notifications/PSN_SETACTIVE.htm#PSN_SETACTIVE">PSN_SETACTIVE</A> notification message to the page. The page should respond by initializing its control windows.

<H3><A NAME="Help_Button">Help Button</A></H3>
<P>When a page is activated, the property sheet determines whether to enable or disable the Help button for the page by checking for the PSP_HASHELP style. If the page has this style, it supports the Help button. If the PSP_HASHELP style is not present, the button is disabled.

<P>When the user clicks the Help button, the active page receives the <A HREF="notifications/PSN_HELP.htm#PSN_HELP">PSN_HELP</A> notification message. The page should respond by displaying Help information, typically by calling the <A HREF="../../shell/functions/WinHelp.htm#WinHelp">WinHelp</A> function.

<H3><A NAME="OK__Cancel__and_Appl">OK, Cancel, and Apply Now Buttons</A></H3>
<P>The OK and Apply Now buttons are similar; both direct a property sheet's pages to validate and apply the property changes that the user has made. The only difference is that clicking the OK button causes the property sheet to be destroyed after the changes are applied. 

<P>When the user clicks the OK or Apply Now button, the property sheet sends the <A HREF="notifications/PSN_KILLACTIVE.htm#PSN_KILLACTIVE">PSN_KILLACTIVE</A> notification message to the active page, giving it an opportunity to validate the user's changes. If the page determines that the changes are valid, it should call the
<object id="hhal_7" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_7.Click()>SetWindowLong</A> function to set the DWL_MSGRESULT value for the page to FALSE. In this case, the property sheet sends the <A HREF="notifications/PSN_APPLY.htm#PSN_APPLY">PSN_APPLY</A> notification message to each page, directing them to apply the new properties to the corresponding item. If the page determines that the user's changes are not valid, it should set DWL_MSGRESULT to TRUE and display a dialog box informing the user of the problem. The page remains active until it sets DWL_MSGRESULT to FALSE in response to a <B>PSN_KILLACTIVE</B> message. An application can use the <A HREF="messages/PSM_APPLY.htm#PSM_APPLY">PSM_APPLY</A> message to simulate the selection of the Apply Now button. 

<P>The Apply Now button is initially disabled when a page becomes active, indicating that there are not yet any property changes to apply. When the page receives input through one of its controls indicating that the user has edited a property, the page should send the <A HREF="messages/PSM_CHANGED.htm#PSM_CHANGED">PSM_CHANGED</A> message to the property sheet. The message causes the property sheet to enable the Apply Now button. If the user subsequently clicks the Apply Now or Cancel button, the page should reinitialize its controls and then send the <A HREF="messages/PSM_UNCHANGED.htm#PSM_UNCHANGED">PSM_UNCHANGED</A> message to again disable the Apply Now button.

<P>Sometimes the Apply Now button causes a page to make a change to a property sheet, and the change cannot be undone. When this happens, the page should send the <A HREF="messages/PSM_CANCELTOCLOSE.htm#PSM_CANCELTOCLOSE">PSM_CANCELTOCLOSE</A> message to the property sheet. The message causes the property sheet to change the text of the OK button to "Close," indicating that the applied changes cannot be canceled. 

<P>Sometimes a page makes a change to the system configuration that requires Windows to be restarted or the system rebooted before the change can take effect. After making such a change, a page should send either the <A HREF="messages/PSM_RESTARTWINDOWS.htm#PSM_RESTARTWINDOWS">PSM_RESTARTWINDOWS</A> or <A HREF="messages/PSM_REBOOTSYSTEM.htm#PSM_REBOOTSYSTEM">PSM_REBOOTSYSTEM</A> message to the property sheet. These messages cause the <A HREF="functions/PropertySheet.htm#PropertySheet">PropertySheet</A> function to return the ID_PSRESTARTWINDOWS or ID_PSREBOOTSYSTEM value after the property sheet is destroyed. 

<P>The property sheet sends the <A HREF="notifications/PSN_RESET.htm#PSN_RESET">PSN_RESET</A> notification message to all pages when the user clicks the Cancel button, indicating that the property sheet is about to be destroyed. A page should use the notification to perform cleanup operations.

<H3><A NAME="ps_wizards">Wizard Property Sheets</A></H3>
<P>You can create a special type of property sheet called a <I>wizard</I>, which consists of a sequence of dialog boxes that guide the user through the steps of an operation, such as setting up a device or creating a birthday card. In a wizard property sheet, the pages do not have tabs, and only one page is visible at a time. Also, instead of having OK and Apply Now buttons, a wizard property sheet has a Back button, a Next or Finish button, and a Cancel button. To tell the property sheet which buttons to enable, use the <A HREF="messages/PSM_SETWIZBUTTONS.htm#PSM_SETWIZBUTTONS">PSM_SETWIZBUTTONS</A> message with the PSWIZB_BACK, PSWIZB_NEXT, PSWIZB_FINISH, and PSWIZB_DISABLEDFINISH values. 

<P>You create and initialize a wizard property sheet just as you would a standard property sheet, except that you must include the PSH_WIZARD value in the <B>dwFlags</B> member of the <A HREF="structures/PROPSHEETHEADER.htm#PROPSHEETHEADER">PROPSHEETHEADER</A> structure. The system ignores the <B>pszCaption</B> member; instead, it puts the label of the current page in the title bar of the property sheet. When the user switches from one page to the next, the system updates the title using the label of the current page. 

<P>Use the following values to set the sizes of the elements in your wizard property sheet. Using these values ensures that your pages conform to the Windows standards.

<P><TABLE>
<TR><TD><B><A NAME="WIZ_BODYCX">WIZ_BODYCX</A></B>
 </TD><TD>Width of the body of a page in a wizard property sheet. The body does not include the bitmap area.</TD></TR><TR><TD><B><A NAME="WIZ_BODYX">WIZ_BODYX</A></B>
 </TD><TD>Horizontal coordinate of the upper-left corner of the body of a page in a wizard property sheet. Use zero for the vertical coordinate of the body of a page. </TD></TR><TR><TD><B><A NAME="WIZ_CXBMP">WIZ_CXBMP</A></B>
 </TD><TD>Width of the bitmap area in a page of a wizard property sheet. Use WIZ_CYDLG for the height of the bitmap area. </TD></TR><TR><TD><B><A NAME="WIZ_CXDLG">WIZ_CXDLG</A></B>
 </TD><TD>Width of a page in a wizard property sheet.</TD></TR><TR><TD><B><A NAME="WIZ_CYDLG">WIZ_CYDLG</A></B>
 </TD><TD>Height of a page in a wizard property sheet.</TD></TR></TABLE>
<P>The dialog box procedure for a page in a wizard property sheet receives all of the same notification messages as a standard property sheet page. In addition, a wizard property sheet page receives three notification messages that a standard property sheet page does not receive: <A HREF="notifications/PSN_WIZBACK.htm#PSN_WIZBACK">PSN_WIZBACK</A>, <A HREF="notifications/PSN_WIZNEXT.htm#PSN_WIZNEXT">PSN_WIZNEXT</A>, and <A HREF="notifications/PSN_WIZFINISH.htm#PSN_WIZFINISH">PSN_WIZFINISH</A>. A wizard page receives these notifications when the user clicks the Back, Next, or Finish button. 

<P>When the user clicks the Back or Next button, the property sheet advances to the previous or next page. An application can prevent the property sheet from advancing by setting the DWL_MSGRESULT value to -1 in response to the <A HREF="notifications/PSN_WIZBACK.htm#PSN_WIZBACK">PSN_WIZBACK</A> or <A HREF="notifications/PSN_WIZNEXT.htm#PSN_WIZNEXT">PSN_WIZNEXT</A> notification. To jump to a page other than the previous or next one, an application should set DWL_MSGRESULT to the identifier of the dialog box to be displayed.

<P>The system automatically destroys the wizard property sheet when the user clicks the Finish button. An application can prevent the wizard from being destroyed by setting DWL_MSGRESULT to a nonzero value in response to the <A HREF="notifications/PSN_WIZFINISH.htm#PSN_WIZFINISH">PSN_WIZFINISH</A> notification message.

<H3><A NAME="Property_Sheet_Exten">Property Sheet Extensions</A></H3>
<P>A <I>property sheet extension</I> is a dynamic-link library (DLL) that adds one or more pages to a property sheet created by another module. The module that creates the property sheet includes an <A HREF="functions/AddPropSheetPageProc.htm#AddPropSheetPageProc">AddPropSheetPageProc</A> callback function that the extension DLL calls to add a page. The function receives the handle to a page and an application-defined 32-bit value.

<P>The extension DLL also contains a callback function called <A HREF="functions/ExtensionPropSheetPageProc.htm#ExtensionPropSheetPageProc">ExtensionPropSheetPageProc</A>, which receives the address of <A HREF="functions/AddPropSheetPageProc.htm#AddPropSheetPageProc">AddPropSheetPageProc</A> from the module that creates the property sheet. The extension DLL must export <B>ExtensionPropSheetPageProc</B> by name. 

<P>The Windows header files include two prototypes for defining property sheet callback functions. To define <A HREF="functions/AddPropSheetPageProc.htm#AddPropSheetPageProc">AddPropSheetPageProc</A>, use the following prototype:

<PRE>typedef BOOL (CALLBACK FAR * LPFNADDPROPSHEETPAGE)(HPROPSHEETPAGE, LPARAM);
</PRE>
<P>To define <A HREF="functions/ExtensionPropSheetPageProc.htm#ExtensionPropSheetPageProc">ExtensionPropSheetPageProc</A>, use the following prototype:

<PRE>typedef BOOL (CALLBACK FAR * LPFNADDPROPSHEETPAGES)(LPVOID, LPFNADDPROPSHEETPAGE, LPARAM);
</PRE>
<H2><A NAME="Using_Property_Sheet">Using Property Sheets</A></H2>
<P>This section contains examples that demonstrate how to create a property sheet and process notification messages. 

<H3><A NAME="Creating_a_Property_">Creating a Property Sheet</A></H3>
<P>The example in this section creates a property sheet that contains two pages&#151;one for setting the font properties of a cell in a spreadsheet and another for setting the border properties of the cell. The example defines the pages by filling a pair of <A HREF="structures/PROPSHEETPAGE.htm#PROPSHEETPAGE">PROPSHEETPAGE</A> structures and specifying the address in the <A HREF="structures/PROPSHEETHEADER.htm#PROPSHEETHEADER">PROPSHEETHEADER</A> structure that is passed to the <A HREF="functions/PropertySheet.htm#PropertySheet">PropertySheet</A> function. The dialog box templates, icons, and labels for the pages are loaded from the resources contained in the application's executable file. The icon for the property sheet is also loaded from the application's resources.

<PRE>&#009;// DoPropertySheet - creates a property sheet that contains two pages.
&#009;// hwndOwner - handle to the owner window of the property sheet.
&#009;//
&#009;// Global variables
&#009;//     g_hinst - instance handle
&#009;extern HINSTANCE g_hinst;

&#009;VOID DoPropertySheet(HWND hwndOwner)
&#009;{
    PROPSHEETPAGE psp[2];
    PROPSHEETHEADER psh;

    psp[0].dwSize = sizeof(PROPSHEETPAGE);
    psp[0].dwFlags = PSP_USEICONID | PSP_USETITLE;
    psp[0].hInstance = g_hinst;
    psp[0].pszTemplate = MAKEINTRESOURCE(DLG_FONT);
    psp[0].pszIcon = MAKEINTRESOURCE(IDI_FONT);
    psp[0].pfnDlgProc = FontDialogProc;
    psp[0].pszTitle = MAKEINTRESOURCE(IDS_FONT)
    psp[0].lParam = 0;
    psp[0].pfnCallback = NULL;

    psp[1].dwSize = sizeof(PROPSHEETPAGE);
    psp[1].dwFlags = PSP_USEICONID | PSP_USETITLE;
    psp[1].hInstance = g_hinst;
    psp[1].pszTemplate = MAKEINTRESOURCE(DLG_BORDER);
    psp[1].pszIcon = MAKEINTRESOURCE(IDI_BORDER);
    psp[1].pfnDlgProc = BorderDialogProc;
    psp[1].pszTitle = MAKEINTRESOURCE(IDS_BORDER);
    psp[1].lParam = 0;
    psp[1].pfnCallback = NULL;

    psh.dwSize = sizeof(PROPSHEETHEADER);
    psh.dwFlags = PSH_USEICONID | PSH_PROPSHEETPAGE;
    psh.hwndParent = hwndOwner;
    psh.hInstance = g_hinst;
    psh.pszIcon = MAKEINTRESOURCE(IDI_CELL_PROPERTIES);
    psh.pszCaption = (LPSTR) "Cell Properties";
    psh.nPages = sizeof(psp) / sizeof(PROPSHEETPAGE);
    psh.nStartPage = 0;
    psh.ppsp = (LPCPROPSHEETPAGE) &amp;psp;
    psh.pfnCallback = NULL;

    PropertySheet(&amp;psh);
    return;
}
</PRE>
<H3><A NAME="Processing_Notificat">Processing Notification Messages</A></H3>
<P>A property sheet sends <A HREF="../common/messages/WM_NOTIFY.htm#WM_NOTIFY">WM_NOTIFY</A> messages to retrieve information from the pages and to notify the pages of user actions. The <I>lParam</I> parameter of the message is the address of an <A HREF="../common/structures/NMHDR.htm#NMHDR">NMHDR</A> structure, which contains the handle to the property sheet dialog box, the handle to the page dialog box, and a notification code. The page must respond to some notification messages by setting the DWL_MSGRESULT value of the page to either TRUE or FALSE. 

<P>The following example is a code fragment from the dialog box procedure for a page. It shows how to process the <A HREF="notifications/PSN_HELP.htm#PSN_HELP">PSN_HELP</A> notification message.

<PRE>&#009;case WM_NOTIFY:
&#009;    switch (((NMHDR FAR *) lParam)-&gt;code) {

        case PSN_HELP:
             {
             char szBuf[FILE_LEN]; // buffer for name of help file

             // Display help for the font properties page.
             LoadString(g_hinst, IDS_HELPFILE, &amp;szBuf, FILE_LEN)
             WinHelp(((NMHDR FAR *) lParam)-&gt;hwndFrom, &amp;szBuf,
                 HELP_CONTEXT, IDH_FONT_PROPERTIES);
             break;
             }
        .
        . // Process other property sheet notifications here.
        .
    }
</PRE>
<H2><A NAME="Property_Sheet_Updat">Property Sheet Updates in Internet Explorer</A></H2>
<P>Property sheets in Microsoft&#174; Internet Explorer support the following new features.
<DL>
<DT><B>New Notification</B>
 </DT><DD>The <A HREF="notifications/PSN_GETOBJECT.htm#PSN_GETOBJECT">PSN_GETOBJECT</A> notification has been added to allow a page to be an OLE drop target.
</DD><DT><B>Updated Structures</B>
 </DT><DD>The <A HREF="structures/PROPSHEETHEADER.htm#PROPSHEETHEADER">PROPSHEETHEADER</A> and <A HREF="structures/PROPSHEETPAGE.htm#PROPSHEETPAGE">PROPSHEETPAGE</A> structures have been updated to support new features. See the references for these structures for more information.
</DD></DL>
<!-- ************************************************** -->
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>