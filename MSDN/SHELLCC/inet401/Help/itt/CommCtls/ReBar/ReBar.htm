<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Rebar Controls</TITLE>

<META NAME=MS-HKWD CONTENT="Rebar Controls">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, Common controls">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ch_rb_make"></A>
<!--NAV_LINKS_START-->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Rebar Controls"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Rebar Controls"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR><TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../CommCtls.htm#book_cc">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="../propsheet/structures/PSHNOTIFY.htm">PSHNOTIFY</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="RefList.htm">Rebar Control Reference</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>Rebar Controls</H1>
<BR CLEAR=ALL>
<P><I>Rebar controls</I> act as containers for child windows. An application assigns child windows, which are often other controls, to a rebar control band. Rebar controls contain one or more bands, and each band can have any combination of a gripper bar, a bitmap, a text label, and a child window. However, bands cannot contain more than one child window. 

<P><A CLASS=tctop HREF="ReBar.htm#About_Rebar"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">About Rebar Controls</A><BR>
<P><A CLASS=tctop HREF="ReBar.htm#Using_Rebar_Controls"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Using Rebar Controls</A><BR>
<P><A CLASS=tctop HREF="RefList.htm#rebar_ReBar"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Rebar Control Reference</A><BR>
<!--************************************************************--><H2><A NAME="About_Rebar">About Rebar Controls</A></H2>
<P>A rebar control displays the child window over a specified background bitmap. As you dynamically reposition a rebar control band, the rebar control manages the size and position of the child window assigned to that band.

<P>The following illustration shows a rebar control that has two bands. One contains a combo box, and the other contains a transparent toolbar control.

<P>
<P><IMG SRC="../../../art/RB_Scrn.gif" WIDTH="435" HEIGHT="195" ALT="Rebar control with bands containing a combo box and a transparent toolbar control." >
<P>

<P><B>Note</B>  The rebar control is implemented in version 4.70 and later of Comctl32.dll.
<H3><A NAME="Rebar_Bands_and_Chil">Rebar Bands and Child Windows</A></H3>
<P>An application defines a rebar band's traits by using the <A HREF="messages/RB_INSERTBAND.htm#RB_INSERTBAND">RB_INSERTBAND</A> and <A HREF="messages/RB_SETBANDINFO.htm#RB_SETBANDINFO">RB_SETBANDINFO</A> messages. These messages accept the address of a <A HREF="structures/REBARBANDINFO.htm#REBARBANDINFO">REBARBANDINFO</A> structure as the <I>lParam</I> parameter. The <B>REBARBANDINFO</B> structure members define the traits of a given band. To set a band's traits, set the <B>cbSize</B> member to indicate the size of the structure, in bytes. Then set the <B>fMask</B> member to indicate which structure members your application is filling.

<P>To assign a child window to a band, include the RBBIM_CHILD flag in the <B>fMask</B> member of the <B>REBARBANDINFO</B> structure, and then set the <B>hwndChild</B> member to the child window's handle. Applications can set the minimum allowable width and height of a child window in the <B>cxMinChild</B> and <B>cyMinChild</B> members.

<P>When a rebar control is destroyed, it destroys any child windows assigned to the bands within it. To prevent the control from destroying child windows assigned to its bands, remove the bands by sending the <A HREF="messages/RB_DELETEBAND.htm#RB_DELETEBAND">RB_DELETEBAND</A> message, and then reset the parent to another window with the
<object id="hhal_3" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_3.Click()>SetParent</A> function before destroying the rebar control.

<H3><A NAME="The_Rebar_Control_Us">The Rebar Control User Interface</A></H3>
<P>All rebar control bands can be resized, except those that use the RBBS_FIXEDSIZE style. To resize or change the order of bands within the control, click and drag a band's gripper bar. The rebar control automatically resizes and repositions child windows assigned to its bands. Additionally, you can toggle the size of a band by clicking on the band text, if there is any.

<H3><A NAME="The_Rebar_Control_s_">The Rebar Control's Image List</A></H3>
<P>If an application is using an image list with a rebar control, it must send the <A HREF="messages/RB_SETBARINFO.htm#RB_SETBARINFO">RB_SETBARINFO</A> message before adding bands to the control. This message accepts the address of a <A HREF="structures/REBARINFO.htm#REBARINFO">REBARINFO</A> structure as the <I>lParam</I> parameter. Before sending the message, prepare the <B>REBARINFO</B> structure by setting the <B>cbSize</B> member to the size of the structure, in bytes. Then, if the rebar control is going to display images on the bands, set the <B>fMask</B> member to the RBIM_IMAGELIST flag and assign an image list handle to the <B>himl</B> member. If the rebar will not use band images, set <B>fMask</B> to zero.

<H3><A NAME="Rebar_Control_Messag">Rebar Control Message Forwarding</A></H3>
<P>A rebar control forwards all <A HREF="../common/messages/WM_NOTIFY.htm#WM_NOTIFY">WM_NOTIFY</A> window messages to its parent window. Additionally, a rebar control forwards any messages sent to it from windows assigned to its bands, like
<object id="hhal_4" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_4.Click()>WM_CHARTOITEM</A>,
<object id="hhal_5" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_5.Click()>WM_COMMAND</A>, and others.

<H3><A NAME="Custom_Draw_Support">Custom Draw Support</A></H3>
<P>Rebar controls support custom draw functionality. For more information, see <A HREF="../custdraw/CustDraw.htm#About_CustomDraw">About Custom Draw</A>.
 
<H2><A NAME="Using_Rebar_Controls">Using Rebar Controls</A></H2>
<P>This section gives sample code that demonstrates how to implement a rebar control. 

<H3><A NAME="RebarSample_CreateRebar">Creating a Rebar Control</A></H3>
<P>An application creates a rebar control by calling the
<object id="hhal_6" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_6.Click()>CreateWindowEx</A> function, specifying REBARCLASSNAME as the window class. The application must first register the window class by calling the <A HREF="../common/functions/InitCommonControlsEx.htm#InitEx_Function">InitCommonControlsEx</A> function, while specifying the ICC_COOL_CLASSES bit in the accompanying <A HREF="../common/structures/INITCOMMONCONTROLSEX.htm#InitEx_Structure">INITCOMMONCONTROLSEX</A> structure.

<P>The following sample creates a rebar control with two bands&#151;one that contains a combo box and another that contains a toolbar. The sample includes the <A HREF="Styles.htm#RBS_VARHEIGHT">RBS_VARHEIGHT</A> style to allow the control to use variable band height. After creating the rebar control, CreateRebar creates the child windows with calls to two application-defined functions, CreateComboBox and CreateToolbar. Before adding each band, CreateRebar initializes the <B>cbSize</B> member of the <A HREF="structures/REBARBANDINFO.htm#REBARBANDINFO">REBARBANDINFO</A> structure, as required by the <A HREF="messages/RB_INSERTBAND.htm#RB_INSERTBAND">RB_INSERTBAND</A> message. Then it sets the value of the structure's <B>fMask</B> member to reflect which members contain valid data. CreateRebar sets the <B>cyMinChild</B> member for each band to allow for the height of the control within it. The <B>cxMinChild</B> member is zero to allow the user to completely hide the control within a given band. 

<PRE>HWND WINAPI CreateRebar(HWND hwndOwner)
{
   REBARINFO     rbi;
   REBARBANDINFO rbBand;
   RECT          rc;
   HWND   hwndCB, hwndTB, hwndRB;
   DWORD  dwBtnSize;
   INITCOMMONCONTROLSEX icex;

   icex.dwSize = sizeof(INITCOMMONCONTROLSEX);
   icex.dwICC   = ICC_COOL_CLASSES|ICC_BAR_CLASSES;
   InitCommonControlsEx(&amp;icex);

   hwndRB = CreateWindowEx(WS_EX_TOOLWINDOW,
                           REBARCLASSNAME,
                           NULL,
                           WS_CHILD|WS_VISIBLE|WS_CLIPSIBLINGS|
                           WS_CLIPCHILDREN|RBS_VARHEIGHT|CCS_NODIVIDER,
                           0,0,0,0,
                           hwndOwner,
                           NULL,
                           g_hinst,
                           NULL);
   if(!hwndRB)
      return NULL;

   // Initialize and send the REBARINFO structure.
   rbi.cbSize = sizeof(REBARINFO);  // Required when using this struct.
   rbi.fMask  = 0;
   rbi.himl   = (HIMAGELIST)NULL;
   if(!SendMessage(hwndRB, RB_SETBARINFO, 0, (LPARAM)&amp;rbi))
      return NULL;

   // Initialize structure members that both bands will share.
   rbBand.cbSize = sizeof(REBARBANDINFO);  // Required
   rbBand.fMask  = RBBIM_COLORS | RBBIM_TEXT | RBBIM_BACKGROUND | 
                   RBBIM_STYLE | RBBIM_CHILD  | RBBIM_CHILDSIZE | 
                   RBBIM_SIZE;
   rbBand.fStyle = RBBS_CHILDEDGE | RBBS_FIXEDBMP;
   rbBand.hbmBack= LoadBitmap(g_hinst, MAKEINTRESOURCE(IDB_BACKGRND));   
   
   // Create the combo box control to be added.
   hwndCB = CreateComboBox(hwndRB);
   
   // Set values unique to the band with the combo box.
   GetWindowRect(hwndCB, &amp;rc);
   rbBand.lpText     = "Combo Box";
   rbBand.hwndChild  = hwndCB;
   rbBand.cxMinChild = 0;
   rbBand.cyMinChild = rc.bottom - rc.top;
   rbBand.cx         = 200;

   // Add the band that has the combo box.
   SendMessage(hwndRB, RB_INSERTBAND, (WPARAM)-1, (LPARAM)&amp;rbBand);

   // Create the toolbar control to be added.
   hwndTB = CreateToolbar(hwndOwner, dwStyle);

   // Get the height of the toolbar.
   dwBtnSize = SendMessage(hwndTB, TB_GETBUTTONSIZE, 0,0);

   // Set values unique to the band with the toolbar.
   rbBand.lpText     = "Tool Bar";
   rbBand.hwndChild  = hwndTB;
   rbBand.cxMinChild = 0;
   rbBand.cyMinChild = HIWORD(dwBtnSize);
   rbBand.cx         = 250;

   // Add the band that has the toolbar.
   SendMessage(hwndRB, RB_INSERTBAND, (WPARAM)-1, (LPARAM)&amp;rbBand);

   return (hwndRB);
}
</PRE>

<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>