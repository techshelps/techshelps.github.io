<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAGELISTDRAWPARAMS</TITLE>

<META NAME=MS-HKWD CONTENT="IMAGELISTDRAWPARAMS">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, Common controls">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="IMAGELISTDRAWPARAMS"></A>
<!--NAV_LINKS_START-->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="IMAGELISTDRAWPARAMS"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="IMAGELISTDRAWPARAMS"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR><TR><TD><PRE><IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../ImageList.htm#ch_il_refs">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="IMAGEINFO.htm">IMAGEINFO</A>
<IMG SRC="../../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="../../ipaddress/IPAddress.htm">IP Address Controls</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>IMAGELISTDRAWPARAMS</H1>
<BR CLEAR=ALL>
<PRE>typedef struct _IMAGELISTDRAWPARAMS {
    DWORD       cbSize;
    HIMAGELIST  himl;
    int         i;
    HDC         hdcDst;
    int         x;
    int         y;
    int         cx;
    int         cy;
    int         xBitmap;
    int         yBitmap;
    COLORREF    rgbBk;
    COLORREF    rgbFg;
    UINT        fStyle;
    DWORD       dwRop;
} IMAGELISTDRAWPARAMS, FAR * LPIMAGELISTDRAWPARAMS;
</PRE>
<P>Contains information about an image list draw operation and is used with the <A HREF="../functions/ImageList_DrawIndirect.htm#ImageList_DrawIndire">ImageList_DrawIndirect</A> function.
<DL><DT><B>cbSize</B>
 </DT><DD>Size of this structure, in bytes.
</DD><DT><B>himl</B>
 </DT><DD>Handle to the image list that contains the image to be drawn.
</DD><DT><B>i</B>
 </DT><DD>Zero-based index of the image to be drawn.
</DD><DT><B>hdcDst</B>
 </DT><DD>Handle to the destination device context.
</DD><DT><B>x</B> and <B>y</B>
 </DT><DD>Coordinates where the image will be drawn.
</DD><DT><B>cx</B> and <B>cy</B>
 </DT><DD>Values that specify the number of pixels to be drawn, relative to the upper-left corner of the drawing operation as specified by <B>xBitmap</B> and <B>yBitmap</B>. If <B>cx</B> and <B>cy</B> are zero, <B>ImageList_DrawIndirect</B> draws the entire valid section. The function does not ensure that the parameters are valid. 
</DD><DT><B>xBitmap</B> and <B>yBitmap</B>
 </DT><DD>Coordinates that specify the upper-left corner of the drawing operation with respect to the image itself. Pixels of the image that are to the left of <B>xBitmap</B> and above <B>yBitmap</B> are not drawn.
</DD><DT><B>rgbBk</B>
 </DT><DD>Image background color. This parameter can be an application-defined <B>RGB</B> value or one of the following values:
 <TABLE>
<TR><TD>CLR_DEFAULT
 </TD><TD>Default background color. The image is drawn using the image list background color.
 </TD></TR><TR><TD>CLR_NONE
 </TD><TD>No background color. The image is drawn transparently.
 </TD></TR></TABLE>
<P>This parameter is used only if the image list identified by <B>himl</B> was created with the ILC_MASK value.
</DD><DT><B>rgbFg</B>
 </DT><DD>Image foreground color. This parameter can be an application-defined <B>RGB</B> value or one of the following values:
 <TABLE>
<TR><TD>CLR_DEFAULT
 </TD><TD>Default foreground color. The image is drawn using the system highlight color as the foreground color.
 </TD></TR><TR><TD>CLR_NONE
 </TD><TD>No blend color. The image is blended with the color of the destination device context.
 </TD></TR></TABLE>
<P>This parameter is used only if <B>fStyle</B> includes the ILD_BLEND25 or ILD_BLEND50 flag. 

</DD><DT><B>fStyle</B>
 </DT><DD>Flag specifying the drawing style and, optionally, the overlay image. See the comments section at the end of this topic for information on the overlay image. This parameter can be one or more of the following values: 
 <DL>
<DT>ILD_BLEND25 
 </DT><DD>Draws the image, blending 25 percent with the blend color specified by <B>rgbFg</B>. This value has no effect if the image list does not contain a mask.
 </DD><DT>ILD_FOCUS
 </DT><DD>Same as ILD_BLEND25.
 </DD><DT>ILD_BLEND50
 </DT><DD>Draws the image, blending 50 percent with the blend color specified by <B>rgbFg</B>. This value has no effect if the image list does not contain a mask.
 </DD><DT>ILD_SELECTED
 </DT><DD>Same as ILD_BLEND50.
 </DD><DT>ILD_BLEND
 </DT><DD>Same as ILD_BLEND50.
 </DD><DT>ILD_MASK
 </DT><DD>Draws the mask.
 </DD><DT>ILD_NORMAL
 </DT><DD>Draws the image using the background color for the image list. If the background color is the CLR_NONE value, the image is drawn transparently using the mask.
 </DD><DT>ILD_ROP
 </DT><DD>Draws the image using the raster operation code specified by the <B>dwRop</B> member.
 </DD><DT>ILD_TRANSPARENT
 </DT><DD>Draws the image transparently using the mask, regardless of the background color. This value has no effect if the image list does not contain a mask.
 </DD></DL>
</DD><DT><B>dwRop</B>
 </DT><DD>Value specifying a raster operation code. These codes define how the color data for the source rectangle will be combined with the color data for the destination rectangle to achieve the final color. This member is ignored if the <B>fStyle</B> member does not include the ILD_ROP flag.
 <P>Some common raster operation codes include: 
 <TABLE>
<TR><TD>BLACKNESS
 </TD><TD>Fills the destination rectangle using the color associated with index zero in the physical palette. (This color is black for the default physical palette.)
 </TD></TR><TR><TD>DSTINVERT
 </TD><TD>Inverts the destination rectangle.
 </TD></TR><TR><TD>MERGECOPY
 </TD><TD>Merges the source rectangle colors with the specified pattern by using the Boolean AND operator.
 </TD></TR><TR><TD>MERGEPAINT
 </TD><TD>Merges the inverted source rectangle colors with the destination rectangle colors by using the Boolean OR operator.
 </TD></TR><TR><TD>NOTSRCCOPY
 </TD><TD>Copies the inverted source rectangle to the destination.
 </TD></TR><TR><TD>NOTSRCERASE
 </TD><TD>Combines the source and destination rectangle colors by using the Boolean OR operator. Inverts the resultant color.
 </TD></TR><TR><TD>PATCOPY
 </TD><TD>Copies the specified pattern into the destination bitmap.
 </TD></TR><TR><TD>PATINVERT
 </TD><TD>Combines the specified pattern colors with the destination rectangle colors by using the Boolean XOR operator.
 </TD></TR><TR><TD>PATPAINT
 </TD><TD>Combines the pattern colors with the inverted source rectangle colors by using the Boolean OR operator. Combines the result with the destination rectangle colors by using the Boolean OR operator.
 </TD></TR><TR><TD>SRCAND
 </TD><TD>Combines the source and destination rectangle colors by using the Boolean AND operator.
 </TD></TR><TR><TD>SRCCOPY
 </TD><TD>Copies the source rectangle directly to the destination rectangle.
 </TD></TR><TR><TD>SRCERASE
 </TD><TD>Combines the destination rectangle's inverted colors with the source rectangle colors by using the Boolean AND operator.
 </TD></TR><TR><TD>SRCINVERT
 </TD><TD>Combines the source and destination rectangle colors by using the Boolean XOR operator.
 </TD></TR><TR><TD>SRCPAINT
 </TD><TD>Combines the source and destination rectangle colors by using the Boolean OR operator.
 </TD></TR><TR><TD>WHITENESS
 </TD><TD>Fills the destination rectangle using the color associated with index one in the physical palette. (This color is white for the default physical palette.)
 </TD></TR></TABLE>
</DD></DL>
<P>An overlay image is an image that is drawn on top of the primary image specified in the <B>i</B> member of this structure. To specify an overlay image, logically OR the <B>fStyle</B> member with the <B>INDEXTOOVERLAYMASK</B> macro, passing the one-based index of the overlay image in the macro. This image must have been previously specified as an overlay image using the <B>ImageList_SetOverlayImage</B> API. 

<P>To extract the overlay image from the <B>fStyle</B> member, logically AND <B>fStyle</B> with the <B>ILD_OVERLAYMASK</B> value.

<P><B>Version 4.70</B><!--  ****************************************************** 	--><!--  ****************************************************** 	-->
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>