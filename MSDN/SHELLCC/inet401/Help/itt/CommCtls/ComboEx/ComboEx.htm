<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ComboBoxEx Controls</TITLE>

<META NAME=MS-HKWD CONTENT="ComboBoxEx Controls">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, Common controls">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ch_cbx_make"></A>
<!--NAV_LINKS_START-->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="ComboBoxEx Controls"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="ComboBoxEx Controls"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR><TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../CommCtls.htm#book_cc">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="../animation/notifications/ACN_STOP.htm">ACN_STOP</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="RefList.htm">ComboBoxEx Control Reference</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>ComboBoxEx Controls</H1>
<BR CLEAR=ALL>
<P>A <I>ComboBoxEx control</I> is an extension of the combo box control that provides native support for item images. To make item images easily accessible, the control provides image list support. By using this control, you can provide the functionality of a combo box without having to manually draw item graphics.
<P><A CLASS=tctop HREF="ComboEx.htm#About_ComboBoxEx_Con"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">About ComboBoxEx Controls</A><BR>
<P><A CLASS=tctop HREF="ComboEx.htm#Using_ComboBoxEx_Con"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Using ComboBoxEx Controls</A><BR>
<P><A CLASS=tctop HREF="RefList.htm#comboboxex_ref"><IMG SRC="../../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">ComboBoxEx Control Reference</A><BR>
<H2><A NAME="About_ComboBoxEx_Con">About ComboBoxEx Controls</A></H2>
<P>Effectively, a ComboBoxEx control creates a child combo box and performs owner draw tasks for you based on an assigned image list. Therefore, the CBS_OWNERDRAWFIXED style is implied and you need not use it when creating the control. Because image lists are used to provide item graphics, the CBS_OWNERDRAWVARIABLE style cannot be used.

<P>A ComboBoxEx control must be initialized by calling the <A HREF="../common/functions/InitCommonControlsEx.htm#InitEx_Function">InitCommonControlsEx</A> function, specifying ICC_USEREX_CLASSES in the accompanying <A HREF="../common/structures/INITCOMMONCONTROLSEX.htm#InitEx_Structure">INITCOMMONCONTROLSEX</A> structure.

<P>You can create a ComboBoxEx control by using the
<object id="hhal_3" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_3.Click()>CreateWindowEx</A> function and specifying WC_COMBOBOXEX as the window class. The class is registered when the <A HREF="../common/functions/InitCommonControlsEx.htm#InitEx_Function">InitCommonControlsEx</A> function is called as explained above.

<P>ComboBoxEx controls are created without a default image list. To use item images, you must create an image list for the ComboBoxEx control and assign it to the control using the <A HREF="messages/CBEM_SETIMAGELIST.htm#CBEM_SETIMAGELIST">CBEM_SETIMAGELIST</A> message. If you do not assign an image list to the ComboBoxEx control, the control displays item text only.


<!-- ************************************************** -->
<H3><A NAME="ComboBoxEx_Control_S">ComboBoxEx Control Styles</A></H3>
<P>ComboBoxEx controls only support the following styles. All other styles are ignored by the controls.

<P><UL><LI>CBS_SIMPLE
<LI>CBS_DROPDOWN
<LI>CBS_DROPDOWNLIST
<LI>WS_CHILD
</UL>
<P>Because the ComboBoxEx control performs owner draw tasks for you based on an assigned image list, the CBS_OWNERDRAWFIXED style is implied; you need not use it when creating the control. Because image lists are used to provide item graphics, the CBS_OWNERDRAWVARIABLE style cannot be used. The ComboBoxEx control also supports <A HREF="Styles.htm#ComboEx_ExtendedStyles">extended styles</A> that provide additional features.


<!-- ************************************************** -->
<H3><A NAME="ComboBoxEx_Control_I">ComboBoxEx Control Items</A></H3>
<P>ComboBoxEx controls maintain item information using a <A HREF="structures/COMBOBOXEXITEM.htm#COMBOBOXEXITEM">COMBOBOXEXITEM</A> structure. This structure includes members for item indexes, image indexes (normal, selection state, and overlay), indentation values, text strings, and item-specific values.
<P>The ComboBoxEx control provides easy access to and manipulation of items through messaging. To add or delete an item, send the <A HREF="messages/CBEM_INSERTITEM.htm#CBEM_INSERTITEM">CBEM_INSERTITEM</A> or <A HREF="messages/CBEM_DELETEITEM.htm#CBEM_DELETEITEM">CBEM_DELETEITEM</A> message. You can modify items currently in the control using the <A HREF="messages/CBEM_SETITEM.htm#CBEM_SETITEM">CBEM_SETITEM</A> message.


<!-- ************************************************** -->
<H3><A NAME="Callback_Items">Callback Items</A></H3>
<P>ComboBoxEx controls support callback item attributes. You can specify an item as a callback item when you add it to the control using <A HREF="messages/CBEM_INSERTITEM.htm#CBEM_INSERTITEM">CBEM_INSERTITEM</A>. When you assign values to an item's <A HREF="structures/COMBOBOXEXITEM.htm#COMBOBOXEXITEM">COMBOBOXEXITEM</A> structure, you must specify the appropriate callback flag values. The following are <B>COMBOBOXEXITEM</B> structure members and their corresponding callback flag values.
<TABLE>
<TR><TD><B>Member </B></TD><TD><B>Callback value
</B></TD></TR><TR><TD><B>pszText</B> </TD><TD>LPSTR_TEXTCALLBACK</TD></TR><TR><TD><B>iImage</B> </TD><TD>I_IMAGECALLBACK</TD></TR><TR><TD><B>iSelectedImage</B> </TD><TD>I_IMAGECALLBACK</TD></TR><TR><TD><B>iOverlay</B> </TD><TD>I_IMAGECALLBACK</TD></TR><TR><TD><B>iIndent</B> </TD><TD>I_INDENTCALLBACK</TD></TR></TABLE>
<P>The control will request information about callback items by sending <A HREF="notifications/CBEN_GETDISPINFO.htm#CBEN_GETDISPINFO">CBEN_GETDISPINFO</A> notification messages. This notification is sent in the form of a <A HREF="../common/messages/WM_NOTIFY.htm#WM_NOTIFY">WM_NOTIFY</A> message. When your application processes this message, it must provide the requested information for the control. If you set the <B>mask</B> member of the accompanying <A HREF="structures/COMBOBOXEXITEM.htm#COMBOBOXEXITEM">COMBOBOXEXITEM</A> structure to CBEIF_DI_SETITEM, the control will store the item data and will not request it again.

<!-- ************************************************** -->
<H3><A NAME="ComboBoxEx_Control_I">ComboBoxEx Control Image Lists</A></H3>
<P>If you want a ComboBoxEx control to display icons with items, you must provide an image list. ComboBoxEx controls support up to three images for an item&#151;one for its selected state, one for its nonselected state, and one for an overlay image. Assign an existing image list to a ComboBoxEx control using the <A HREF="messages/CBEM_SETIMAGELIST.htm#CBEM_SETIMAGELIST">CBEM_SETIMAGELIST</A> message.
<P>The <A HREF="structures/COMBOBOXEXITEM.htm#COMBOBOXEXITEM">COMBOBOXEXITEM</A> structure contains members that represent the image indexes for each image list (selected, unselected, and overlay). For each item, set these members to display the desired images. It is not necessary to specify image indexes for each type of image. You can mix and match image types as you like, but always set the <B>mask</B> member of the <B>COMBOBOXEXITEM</B> structure to indicate which members are being used. The control ignores members that have not been flagged as valid.

<!-- ************************************************** -->
<H3><A NAME="About_ComboBoxEx_Con">About ComboBoxEx Control Notification Messages</A></H3>
<P>A ComboBoxEx control sends notification messages to report changes within itself or to request callback item information. The parent of the control receives all
<object id="hhal_4" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_4.Click()>WM_COMMAND</A> messages from the combo box contained within the ComboBoxEx control. The ComboBoxEx control sends its own notifications using <A HREF="../common/messages/WM_NOTIFY.htm#WM_NOTIFY">WM_NOTIFY</A> messages. As a result, the control's owner must be prepared to process both forms of notification messages.
<P>Following are the ComboBoxEx-specific notification messages.
<TABLE>
<TR><TD><B>Notification </B></TD><TD><B>Description
</B></TD></TR><TR><TD><A HREF="notifications/CBEN_BEGINEDIT.htm#CBEN_BEGINEDIT">CBEN_BEGINEDIT</A> </TD><TD>Signals that the user has activated the drop-down list or clicked in the control's edit box.</TD></TR><TR><TD><A HREF="notifications/CBEN_ENDEDIT.htm#CBEN_ENDEDIT">CBEN_ENDEDIT</A> </TD><TD>Signals that the user has selected an item from the drop-down list or has concluded an edit operation within the edit box.</TD></TR><TR><TD><A HREF="notifications/CBEN_DELETEITEM.htm#CBEN_DELETEITEM">CBEN_DELETEITEM</A> </TD><TD>Reports that an item was deleted.</TD></TR><TR><TD><A HREF="notifications/CBEN_GETDISPINFO.htm#CBEN_GETDISPINFO">CBEN_GETDISPINFO</A> </TD><TD>Requests information about an item's attributes.</TD></TR><TR><TD><A HREF="notifications/CBEN_INSERTITEM.htm#CBEN_INSERTITEM">CBEN_INSERTITEM</A> </TD><TD>Signals that an item was inserted in the control.</TD></TR></TABLE>
<!-- ************************************************** --><H3><A NAME="ComboBoxEx_Control_M">ComboBoxEx Control Message Forwarding</A></H3>
<P>The following are the standard combo box messages that a ComboBoxEx control forwards to its child combo box. Some of these messages may be processed by the ComboBoxEx control either before or after the message has been forwarded.

<UL><LI><object id="hhal_5" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_5.Click()>CB_DELETESTRING</A>
<LI><object id="hhal_6" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_6.Click()>CB_FINDSTRINGEXACT</A>
<LI><object id="hhal_7" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_7.Click()>CB_GETCOUNT</A>
<LI><object id="hhal_8" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_8.Click()>CB_GETCURSEL</A>
<LI><object id="hhal_9" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_9.Click()>CB_GETDROPPEDCONTROLRECT</A>
<LI><object id="hhal_10" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_10.Click()>CB_GETDROPPEDSTATE</A>
<LI><object id="hhal_11" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_11.Click()>CB_GETITEMDATA</A>
<LI><object id="hhal_12" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_12.Click()>CB_GETITEMHEIGHT</A>
<LI><object id="hhal_13" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_13.Click()>CB_GETLBTEXT</A>
<LI><object id="hhal_14" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_14.Click()>CB_GETLBTEXTLEN</A>
<LI><object id="hhal_15" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_15.Click()>CB_GETEXTENDEDUI</A>
<LI><object id="hhal_16" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_16.Click()>CB_LIMITTEXT</A>
<LI><object id="hhal_17" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_17.Click()>CB_RESETCONTENT</A>
<LI><object id="hhal_18" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_18.Click()>CB_SELECTSTRING</A>
<LI><object id="hhal_19" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_19.Click()>CB_SETCURSEL</A>
<LI><object id="hhal_20" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_20.Click()>CB_SETDROPPEDWIDTH</A>
<LI><object id="hhal_21" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_21.Click()>CB_SETEXTENDEDUI</A>
<LI><object id="hhal_22" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_22.Click()>CB_SETITEMDATA</A>
<LI><object id="hhal_23" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_23.Click()>CB_SETITEMHEIGHT</A>
<LI><object id="hhal_24" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_24.Click()>CB_SHOWDROPDOWN</A>
</UL>
<P>Following are the windows messages that a ComboBoxEx control forwards to its parent window:
<UL><LI><object id="hhal_25" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_25.Click()>WM_COMMAND</A> (This includes all of the CBN_ notifications.)
<LI><A HREF="../common/messages/WM_NOTIFY.htm#WM_NOTIFY">WM_NOTIFY</A>
</UL>
<!-- ************************************************** --><H2><A NAME="Using_ComboBoxEx_Con">Using ComboBoxEx Controls</A></H2>
<!-- ************************************************** --><P>This section contains sample code and information about the following topics related to ComboBoxEx controls:
<UL><LI><A HREF="ComboEx.htm#Creating_a_ComboBoxE">Creating a ComboBoxEx Control</A>
<LI><A HREF="ComboEx.htm#Preparing_ComboBoxEx">Preparing ComboBoxEx Items and Images</A>
<LI><A HREF="ComboEx.htm#Supporting_Callback_">Supporting Callback Items</A>
<LI><A HREF="ComboEx.htm#Processing_ComboBoxE">Processing ComboBoxEx Notifications</A>
</UL>
<!-- ************************************************** --><H3><A NAME="Creating_a_ComboBoxE">Creating a ComboBoxEx Control</A></H3>
<P>To create a ComboBoxEx control, call the
<object id="hhal_26" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_26.Click()>CreateWindowEx</A> function, using WC_COMBOBOXEX as the window class. You must first register the window class by calling the <A HREF="../common/functions/InitCommonControlsEx.htm#InitEx_Function">InitCommonControlsEx</A> function, while specifying the ICC_USEREX_CLASSES bit in the accompanying <A HREF="../common/structures/INITCOMMONCONTROLSEX.htm#InitEx_Structure">INITCOMMONCONTROLSEX</A> structure. 
<P>The following application-defined function creates a ComboBoxEx control with the CBS_DROPDOWN style in the main window. 
<PRE>// CreateComboEx - Registers the ComboBoxEx window class and creates
// a ComboBoxEx control in the client area of the main window.
//
// g_hwndMain - A handle to the main window.
// g_hinst    - A handle to the program instance.

HWND WINAPI CreateComboEx(void)
{
    HWND hwnd;
    INITCOMMONCONTROLSEX icex;
    
    icex.dwSize = sizeof(INITCOMMONCONTROLSEX);
    icex.dwICC = ICC_USEREX_CLASSES;

    InitCommonControlsEx(&amp;icex);

    hwnd = CreateWindowEx(0, WC_COMBOBOXEX, NULL,
					WS_BORDER | WS_VISIBLE |
					WS_CHILD | CBS_DROPDOWN,
					// No size yet--resize after setting image list.
					0,      // Vertical position of Combobox
					0,      // Horizontal position of Combobox
					0,      // Sets the width of Combobox
					100,    // Sets the height of Combobox
					g_hwndMain,
					NULL,
					g_hinst,
					NULL);
    return (hwnd);
}
</PRE>
<!-- ************************************************** --><H3><A NAME="Preparing_ComboBoxEx">Preparing ComboBoxEx Items and Images</A></H3>
<P>To add an item to a ComboBoxEx control, first define a <A HREF="structures/COMBOBOXEXITEM.htm#COMBOBOXEXITEM">COMBOBOXEXITEM</A> structure. Set the <B>mask</B> member of the structure to indicate which members you want the control to use. Set the specified members of the structure to the values you want, and then send the <A HREF="messages/CBEM_INSERTITEM.htm#CBEM_INSERTITEM">CBEM_INSERTITEM</A> message to add the item to the control.
<P>The following application-defined function adds 15 items to an existing ComboBoxEx control. 
Note that the <B>mask</B> member of the <A HREF="structures/COMBOBOXEXITEM.htm#COMBOBOXEXITEM">COMBOBOXEXITEM</A> structure includes flag values that tell the control to display images for each item.
<PRE>#define MAX_ITEMS 15

// AddItems - Uses the CBEM_INSERTITEM message to add items to an
// existing ComboBoxEx control.

BOOL WINAPI AddItems(HWND hwndCB)
{
    //  Declare and init locals.
    COMBOBOXEXITEM cbei;
    int iCnt;

    typedef struct {
        int iImage;
        int iSelectedImage;
        int iIndent;
        LPTSTR pszText;
    } ITEMINFO, *PITEMINFO;

    ITEMINFO IInf[] = {
        { 0, 3,  0, "first"}, 
        { 1, 4,  1, "second"},
        { 2, 5,  2, "third"},
        { 0, 3,  0, "fourth"},
        { 1, 4,  1, "fifth"},
        { 2, 5,  2, "sixth"},
        { 0, 3,  0, "seventh"},
        { 1, 4,  1, "eighth"},
        { 2, 5,  2, "ninth"},
        { 0, 3,  0, "tenth"},
        { 1, 4,  1, "eleventh"},
        { 2, 5,  2, "twelfth"},
        { 0, 3,  0, "thirteenth"},
        { 1, 4,  1, "fourteenth"},
        { 2, 5,  2, "fifteenth"}
    };

    // Set the mask common to all items.
    cbei.mask = CBEIF_TEXT | CBEIF_INDENT |
                CBEIF_IMAGE| CBEIF_SELECTEDIMAGE;

    for(iCnt=0;iCnt&lt;MAX_ITEMS;iCnt++){
        // Initialize the COMBOBOXEXITEM struct.
        cbei.iItem          = iCnt;
        cbei.pszText        = IInf[iCnt].pszText;
        cbei.cchTextMax     = sizeof(IInf[iCnt].pszText);
        cbei.iImage         = IInf[iCnt].iImage;
        cbei.iSelectedImage = IInf[iCnt].iSelectedImage;
        cbei.iIndent        = IInf[iCnt].iIndent;

        // Tell the ComboBoxEx to add the item. Return FALSE if 
        // this fails.
        if(SendMessage(hwndCB,CBEM_INSERTITEM,0,(LPARAM)&amp;cbei) == -1)
            return FALSE;
    }
    
    // Assign the existing image list to the ComboBoxEx control 
    // and return TRUE.
    SendMessage(hwndCB,CBEM_SETIMAGELIST,0,(LPARAM)g_himl);
    
    // Set size of control to make sure it's displayed correctly now
    // that the image list is set.
    SetWindowPos(hwndCB,NULL,20,20,250,120,SWP_NOACTIVATE);

    return TRUE;    
}
</PRE>
<!-- ************************************************** --><H3><A NAME="Supporting_Callback_">Supporting Callback Items</A></H3>
<P>If your application is going to use callback items in a ComboBoxEx control, it must be prepared to handle the <A HREF="notifications/CBEN_GETDISPINFO.htm#CBEN_GETDISPINFO">CBEN_GETDISPINFO</A> notification message. A ComboBoxEx control sends this notification whenever it needs the owner to provide specific item information. For more information about callback items, see <A HREF="ComboEx.htm#Callback_Items">Callback Items</A>.
<P>The following application-defined function processes <A HREF="notifications/CBEN_GETDISPINFO.htm#CBEN_GETDISPINFO">CBEN_GETDISPINFO</A> by providing attributes for a given item. Note that it sets the <B>mask</B> member of the incoming <A HREF="structures/COMBOBOXEXITEM.htm#COMBOBOXEXITEM">COMBOBOXEXITEM</A> structure to CBEIF_DI_SETITEM. Setting <B>mask</B> to this value makes the control retain the item information so it will not need to request the information again.
<PRE>// DoItemCallback - Processes CBEN_GETDISPINFO by providing item
// attributes for a given callback item.

void WINAPI DoItemCallback(PNMCOMBOBOXEX pNMCBex)
{
    DWORD dwMask = pNMCBex-&gt;ceItem.mask;

    if(dwMask &amp; CBEIF_TEXT)
        ;// Provide item text.

    if(dwMask &amp; CBEIF_IMAGE)
        ;// Provide an item image index.

    /*
     * Provide other callback information as desired.
     */

    // Make the ComboBoxEx control hold onto the item information.
    pNMCBex-&gt;ceItem.mask = CBEIF_DI_SETITEM;
}
</PRE>
<!-- ************************************************** --><H3><A NAME="Processing_ComboBoxE">Processing ComboBoxEx Notifications</A></H3>
<P>A ComboBoxEx control notifies its parent window of events by sending <A HREF="../common/messages/WM_NOTIFY.htm#WM_NOTIFY">WM_NOTIFY</A> messages. Because the control uses a child combo box, it forwards all
<object id="hhal_27" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_27.Click()>WM_COMMAND</A> notification messages it receives to the parent window to be processed. Therefore, your application must be prepared to process <B>WM_NOTIFY</B> messages from the ComboBoxEx and <B>WM_COMMAND</B> messages forwarded from the ComboBoxEx's child combo box control.
<P>The example in this section handles the <A HREF="../common/messages/WM_NOTIFY.htm#WM_NOTIFY">WM_NOTIFY</A> and
<object id="hhal_28" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_28.Click()>WM_COMMAND</A> messages from a ComboBoxEx control by calling a corresponding application-defined function to process them.
<PRE>LRESULT CALLBACK WndProc (HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
{
    switch(msg){
        case WM_COMMAND:
            // If this is an "old style" combo box notification, handle it.
            if((HWND)lParam == g_hwndCB)
                DoOldNotify(hwnd,  wParam);  
            break;

        case WM_NOTIFY:
            return (DoCBEXNotify(hwnd, lParam));

        case WM_PAINT:
            hdc = BeginPaint(hwnd, &amp;ps);
            EndPaint(hwnd, &amp;ps);
            break;

        case WM_DESTROY:
            PostQuitMessage(0);
            break;

        default:
            return DefWindowProc(hwnd, msg, wParam, lParam);
            break;
    }
    return FALSE;
}
</PRE>

<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>