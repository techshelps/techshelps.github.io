<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TBBUTTONINFO</TITLE>

<META NAME=MS-HKWD CONTENT="TBBUTTONINFO">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, Common controls">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="TBBUTTONINFO"></A>
<!--NAV_LINKS_START-->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="TBBUTTONINFO"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="TBBUTTONINFO"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR><TR><TD><PRE><IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../RefList.htm#tb_ref">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="TBBUTTON.htm">TBBUTTON</A>
<IMG SRC="../../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="TBINSERTMARK.htm">TBINSERTMARK</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>TBBUTTONINFO</H1>
<BR CLEAR=ALL>
<PRE>typedef struct {
    UINT cbSize;
    DWORD dwMask;
    int idCommand;
    int iImage;
    BYTE fsState;
    BYTE fsStyle;
    WORD cx;
    DWORD lParam;
    LPTSTR pszText;
    int cchText;
} TBBUTTONINFOA, *LPTBBUTTONINFOA;
</PRE>
<P>Contains or receives information for a specific button in a toolbar.

<DL><DT><B>cbSize</B>
 </DT><DD>Size of the structure, in bytes. This member must be filled in prior to sending the associated message.
</DD><DT><B>dwMask</B>
 </DT><DD>Set of flags that indicate which members contain valid information. This member must be filled in prior to sending the associated message. This can be one or more of the following values: 
 <TABLE>
<TR><TD>TBIF_COMMAND
 </TD><TD>The <B>idCommand</B> member contains valid information or is being requested.
 </TD></TR><TR><TD>TBIF_IMAGE
 </TD><TD>The <B>iImage</B> member contains valid information or is being requested.
 </TD></TR><TR><TD>TBIF_LPARAM
 </TD><TD>The <B>lParam</B> member contains valid information or is being requested.
 </TD></TR><TR><TD>TBIF_SIZE
 </TD><TD>The <B>cx</B> member contains valid information or is being requested.
 </TD></TR><TR><TD>TBIF_STATE
 </TD><TD>The <B>fsState</B> member contains valid information or is being requested.
 </TD></TR><TR><TD>TBIF_STYLE
 </TD><TD>The <B>fsStyle</B> member contains valid information or is being requested.
 </TD></TR><TR><TD>TBIF_TEXT
 </TD><TD>The <B>pszText</B> member contains valid information or is being requested.
 </TD></TR></TABLE>
</DD><DT><B>idCommand</B>
 </DT><DD>Command identifier of the button.
</DD><DT><B>iImage</B>
 </DT><DD>Image index of the button. If this member is set to I_IMAGECALLBACK, the toolbar will send the <A HREF="../notifications/TBN_GETDISPINFO.htm#TBN_GETDISPINFO">TBN_GETDISPINFO</A> notification to retrieve the image index when it is needed. 
</DD><DT><B>fsState</B>
 </DT><DD>State flags of the button. This can be one or more of the <A HREF="../States.htm#tb_button_states">toolbar button states</A>. 
</DD><DT><B>fsStyle</B>
 </DT><DD>Style flags of the button. This can be one or more of the <A HREF="../Styles.htm#tb_styles">toolbar button styles</A>. 
</DD><DT><B>cx</B>
 </DT><DD>Width of the button, in pixels.
</DD><DT><B>lParam</B>
 </DT><DD>Application-defined 32-bit value associated with the button.
</DD><DT><B>pszText</B>
 </DT><DD>Address of a character buffer that contains or receives the button text. 
</DD><DT><B>cchText</B>
 </DT><DD>Size of the buffer at <B>pszText</B>. If the button information is being set, this member is ignored.
</DD></DL>
<P><B>Version 4.71</B>

<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>