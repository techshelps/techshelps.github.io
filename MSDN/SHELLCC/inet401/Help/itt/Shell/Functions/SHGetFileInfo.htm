<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SHGetFileInfo</TITLE>

<META NAME=MS-HKWD CONTENT="SHGetFileInfo">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, Windows Shell API">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">

<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="SHGetFileInfo"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="SHGetFileInfo"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="SHGetFileInfo"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../RefList.htm#ch_shell_ref">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="SHGetDiskFreeSpace.htm">SHGetDiskFreeSpace</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="SHGetInstanceExplorer.htm">SHGetInstanceExplorer</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>SHGetFileInfo</H1>
<BR CLEAR=ALL>
<PRE>WINSHELLAPI DWORD WINAPI SHGetFileInfo(
    LPCTSTR pszPath,
    DWORD dwFileAttributes,
    SHFILEINFO FAR *psfi,
    UINT cbFileInfo,
    UINT uFlags
);
</PRE>
<P>Retrieves information about an object in the file system, such as a file, a folder, a directory, or a drive root.

<UL><LI>Returns a value whose meaning depends on the <I>uFlags</I> parameter. If <I>uFlags</I> contains the SHGFI_EXETYPE flag, the return value specifies the type of the executable file. It will be one of the following values: 
<TABLE>
<TR><TD><B>Value
 </B></TD><TD><B>Executable File Type</B></TD></TR>
<TR><TD>0 </TD><TD>Nonexecutable file or an error condition</TD></TR>
<TR><TD>LOWORD = NE or PE and HIWORD = 3.0, 3.5, or 4.0 </TD><TD>Windows application</TD></TR>
<TR><TD>LOWORD = MZ and HIWORD = 0 </TD><TD>MS-DOS .exe, .com, or .bat file</TD></TR>
<TR><TD>LOWORD = PE and HIWORD = 0 </TD><TD>Win32 console application</TD></TR>
</TABLE>
<P>If <I>uFlags</I> contains SHGFI_SYSICONINDEX, the return value is the handle to the system image list that contains the large icon images. If SHGFI_SMALLICON is included with SHGFI_SYSICONINDEX, the return value is the handle to the image list that contains the small icon images. 

<P>If <I>uFlags</I> does not contain SHGFI_EXETYPE or SHGFI_SYSICONINDEX, the return value is nonzero if successful, or zero otherwise.

</UL>
<DL><DT><I>pszPath</I>
 </DT><DD>Address of a buffer that contains the path and file name. Both absolute and relative paths are valid. 

 <P>If the <I>uFlags</I> parameter includes the SHGFI_PIDL flag, this parameter must be the address of an <A HREF="../structures/ITEMIDLIST.htm#ITEMIDLIST">ITEMIDLIST</A> (PIDL) structure that contains the list of item identifiers that uniquely identifies the file within the shell's namespace. The PIDL must be a fully qualified PIDL. Relative PIDLs are not allowed. 

 <P>If the <I>uFlags</I> parameter includes the SHGFI_USEFILEATTRIBUTES flag, this parameter does not have to be a valid file name. The function will proceed as if the file exists with the specified name and with the file attributes passed in the <I>dwFileAttributes</I> parameter. This allows you to obtain information about a file type by passing just the extension for <I>pszPath</I> and passing FILE_ATTRIBUTE_NORMAL in <I>dwFileAttributes</I>.

 <P>This string can use either short (the 8.3 form) or long file names.

</DD><DT><I>dwFileAttributes</I>
 </DT><DD>Combination of one or more file attribute flags (FILE_ATTRIBUTE_ values). If <I>uFlags</I> does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.
</DD><DT><I>psfi</I>
 </DT><DD>Address of a <A HREF="../structures/SHFILEINFO.htm#SHFILEINFO">SHFILEINFO</A> structure to receive the file information. 
</DD><DT><I>cbFileInfo</I>
 </DT><DD>Size, in bytes, of the <A HREF="../structures/SHFILEINFO.htm#SHFILEINFO">SHFILEINFO</A> structure pointed to by the <I>psfi</I> parameter. 
</DD><DT><I>uFlags</I>
 </DT><DD>Flags that specify the file information to retrieve. This parameter can be a combination of the following values:
 <TABLE>
<TR><TD>SHGFI_ATTR_SPECIFIED  </TD><TD>Modifies SHGFI_ATTRIBUTES. Indicates that the <B>dwAttributes</B> member of the <A HREF="../structures/SHFILEINFO.htm#SHFILEINFO">SHFILEINFO</A> structure at <I>psfi</I> contains the specific attributes that are desired. These attributes will be passed to <A HREF="../ifaces/ishellfolder/GetAttributesOf.htm#IShellFolder_GetAttributesOf">IShellFolder::GetAttributesOf</A>. If this flag is not specified, 0xFFFFFFFF will be passed to <B>GetAttributesOf</B>, requesting all attributes. This flag cannot be specified with the SHGFI_ICON flag. </TD></TR>
<TR><TD>SHGFI_ATTRIBUTES </TD><TD>Retrieve the item attributes. The attributes are copied to the <B>dwAttributes</B> member of the structure specified in the <I>psfi</I> parameter. These are the same attributes that are obtained from <A HREF="../ifaces/ishellfolder/GetAttributesOf.htm#IShellFolder_GetAttributesOf">IShellFolder::GetAttributesOf</A>. </TD></TR>
<TR><TD>SHGFI_DISPLAYNAME </TD><TD>Retrieve the display name for the file. The name is copied to the <B>szDisplayName</B> member of the structure specified in <I>psfi</I>. The returned display name uses the long file name, if there is one, rather than the 8.3 form of the file name.  </TD></TR>
<TR><TD>SHGFI_EXETYPE </TD><TD>Retrieve the type of the executable file if <I>pszPath</I> identifies an executable file. This flag cannot be specified with any other flags. </TD></TR>
<TR><TD>SHGFI_ICON </TD><TD>Retrieve the handle to the icon that represents the file and the index of the icon within the system image list. The handle is copied to the <B>hIcon</B> member of the structure specified by <I>psfi</I>, and the index is copied to the <B>iIcon</B> member. The return value is the handle to the system image list. </TD></TR>
<TR><TD>SHGFI_ICONLOCATION </TD><TD>Retrieve the name of the file that contains the icon representing the file. The name is copied to the <B>szDisplayName</B> member of the structure specified in <I>psfi</I>.  </TD></TR>
<TR><TD>SHGFI_LARGEICON </TD><TD>Modify SHGFI_ICON, causing the function to retrieve the file's large icon.  </TD></TR>
<TR><TD>SHGFI_LINKOVERLAY </TD><TD>Modify SHGFI_ICON, causing the function to add the link overlay to the file's icon. </TD></TR>
<TR><TD>SHGFI_OPENICON </TD><TD>Modify SHGFI_ICON, causing the function to retrieve the file's open icon. A container object displays an open icon to indicate that the container is open.  </TD></TR>
<TR><TD>SHGFI_PIDL </TD><TD>Indicate that <I>pszPath</I> is the address of an <A HREF="../structures/ITEMIDLIST.htm#ITEMIDLIST">ITEMIDLIST</A> structure rather than a path name.  </TD></TR>
<TR><TD>SHGFI_SELECTED </TD><TD>Modify SHGFI_ICON, causing the function to blend the file's icon with the system highlight color.  </TD></TR>
<TR><TD>SHGFI_SHELLICONSIZE </TD><TD>Modify SHGFI_ICON, causing the function to retrieve a shell-sized icon. If this flag is not specified the function sizes the icon according to the system metric values.  </TD></TR>
<TR><TD>SHGFI_SMALLICON </TD><TD>Modify SHGFI_ICON, causing the function to retrieve the file's small icon.  </TD></TR>
<TR><TD>SHGFI_SYSICONINDEX </TD><TD>Retrieve the index of the icon within the system image list. The index is copied to the <B>iIcon</B> member of the structure specified by <I>psfi</I>. The return value is the handle to the system image list. </TD></TR>
<TR><TD>SHGFI_TYPENAME </TD><TD>Retrieve the string that describes the file's type. The string is copied to the <B>szTypeName</B> member of the structure specified in <I>psfi</I>. </TD></TR>
<TR><TD>SHGFI_USEFILEATTRIBUTES </TD><TD>Indicates that the function should not attempt to access the file specified by <I>pszPath</I>. Rather, it should act as if the file specified by <I>pszPath</I> exists with the file attributes passed in <I>dwFileAttributes</I>. This flag cannot be combined with the SHGFI_ATTRIBUTES, SHGFI_EXETYPE, or SHGFI_PIDL flags.  </TD></TR>
</TABLE>
</DD></DL>
<!-- *************************************************************************** -->
<!--CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>