<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ShellExecute</TITLE>

<META NAME=MS-HKWD CONTENT="ShellExecute">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, Windows Shell API">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">

<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ShellExecute"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="ShellExecute"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="ShellExecute"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../RefList.htm#ch_shell_ref">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="SHEmptyRecycleBin.htm">SHEmptyRecycleBin</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="ShellExecuteEx.htm">ShellExecuteEx</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>ShellExecute</H1>
<BR CLEAR=ALL>
<PRE>HINSTANCE ShellExecute(
    HWND hwnd, 
    LPCTSTR lpOperation,
    LPCTSTR lpFile, 
    LPCTSTR lpParameters, 
    LPCTSTR lpDirectory,
    INT nShowCmd
);&#009;
</PRE>
<P>Opens or prints a specified file. 
<UL><LI>Returns a value greater than 32 if successful, or an error value that is less than or equal to 32 otherwise. The following table lists the error values. The return value is cast as an HINSTANCE for backward compatibility with 16-bit Windows applications. 
<TABLE>
<TR><TD>0 </TD><TD>The operating system is out of memory or resources.</TD></TR>
<TR><TD>ERROR_FILE_NOT_FOUND </TD><TD>The specified file was not found.</TD></TR>
<TR><TD>ERROR_PATH_NOT_FOUND </TD><TD>The specified path was not found.</TD></TR>
<TR><TD>ERROR_BAD_FORMAT </TD><TD>The .exe file is invalid (non-Win32&#174; .exe or error in .exe image).</TD></TR>
<TR><TD>SE_ERR_ACCESSDENIED </TD><TD>The operating system denied access to the specified file. </TD></TR>
<TR><TD>SE_ERR_ASSOCINCOMPLETE </TD><TD>The file name association is incomplete or invalid.</TD></TR>
<TR><TD>SE_ERR_DDEBUSY </TD><TD>The DDE transaction could not be completed because other DDE transactions were being processed.</TD></TR>
<TR><TD>SE_ERR_DDEFAIL </TD><TD>The DDE transaction failed.</TD></TR>
<TR><TD>SE_ERR_DDETIMEOUT </TD><TD>The DDE transaction could not be completed because the request timed out.</TD></TR>
<TR><TD>SE_ERR_DLLNOTFOUND </TD><TD>The specified dynamic-link library was not found. </TD></TR>
<TR><TD>SE_ERR_FNF </TD><TD>The specified file was not found. </TD></TR>
<TR><TD>SE_ERR_NOASSOC </TD><TD>There is no application associated with the given file name extension.</TD></TR>
<TR><TD>SE_ERR_OOM </TD><TD>There was not enough memory to complete the operation.</TD></TR>
<TR><TD>SE_ERR_PNF </TD><TD>The specified path was not found.</TD></TR>
<TR><TD>SE_ERR_SHARE </TD><TD>A sharing violation occurred.</TD></TR>
</TABLE>
</UL>
<DL><DT><I>hwnd</I>
 </DT><DD>Window handle to a parent window. This window receives any message boxes that an application produces. For example, an application may report an error by producing a message box.
</DD><DT><I>lpOperation</I>
 </DT><DD>Address of a null-terminated string that specifies the operation to perform. The following operation strings are valid:
<TABLE>
<TR><TD>"open" </TD><TD>The function opens the file specified by the <I>lpFile</I> parameter. The file can be an executable file or a document file. It can also be a folder.</TD></TR>
<TR><TD>"print" </TD><TD>The function prints the file specified by <I>lpFile</I>. The file should be a document file. If the file is an executable file, the function opens the file, as if "open" had been specified.</TD></TR>
<TR><TD>"explore" </TD><TD>The function explores the folder specified by <I>lpFile</I>. </TD></TR>
</TABLE>
<P>This parameter can be NULL. In that case, the function opens the file specified by <I>lpFile</I>. 
</DD><DT><I>lpFile</I>
 </DT><DD>Address of a null-terminated string that specifies the file to open or print or the folder to open or explore. The function can open an executable file or a document file. The function can print a document file. 
</DD><DT><I>lpParameters</I>
 </DT><DD>If the <I>lpFile</I> parameter specifies an executable file, <I>lpParameters</I> is an address to a null-terminated string that specifies the parameters to be passed to the application.
 </DD><DD>If <I>lpFile</I> specifies a document file, <I>lpParameters</I> should be NULL. 
</DD><DT><I>lpDirectory</I>
 </DT><DD>Address of a null-terminated string that specifies the default directory. 
</DD><DT><I>nShowCmd</I>
 </DT><DD>If <I>lpFile</I> specifies an executable file, <I>nShowCmd</I> specifies how the application is to be shown when it is opened. This parameter can be one of the following values: 
<TABLE>
<TR><TD>SW_HIDE </TD><TD>Hides the window and activates another window.</TD></TR>
<TR><TD>SW_MAXIMIZE </TD><TD>Maximizes the specified window.</TD></TR>
<TR><TD>SW_MINIMIZE </TD><TD>Minimizes the specified window and activates the next top-level window in the z-order.</TD></TR>
<TR><TD>SW_RESTORE </TD><TD>Activates and displays the window. If the window is minimized or maximized, Windows restores it to its original size and position. An application should specify this flag when restoring a minimized window.</TD></TR>
<TR><TD>SW_SHOW </TD><TD>Activates the window and displays it in its current size and position. </TD></TR>
<TR><TD>SW_SHOWDEFAULT </TD><TD>Sets the show state based on the SW_ flag specified in the
<object id="hhal_3" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_3.Click()>STARTUPINFO</A> structure passed to the
<object id="hhal_4" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_4.Click()>CreateProcess</A> function by the program that started the application. An application should call
<object id="hhal_5" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_5.Click()>ShowWindow</A> with this flag to set the initial show state of its main window.</TD></TR>
<TR><TD>SW_SHOWMAXIMIZED </TD><TD>Activates the window and displays it as a maximized window.</TD></TR>
<TR><TD>SW_SHOWMINIMIZED </TD><TD>Activates the window and displays it as a minimized window.</TD></TR>
<TR><TD>SW_SHOWMINNOACTIVE </TD><TD>Displays the window as a minimized window. The active window remains active.</TD></TR>
<TR><TD>SW_SHOWNA </TD><TD>Displays the window in its current state. The active window remains active.</TD></TR>
<TR><TD>SW_SHOWNOACTIVATE </TD><TD>Displays a window in its most recent size and position. The active window remains active.</TD></TR>
<TR><TD>SW_SHOWNORMAL </TD><TD>Activates and displays a window. If the window is minimized or maximized, Windows restores it to its original size and position. An application should specify this flag when displaying the window for the first time.</TD></TR>
</TABLE>
<P>If <I>lpFile</I> specifies a document file, <I>nShowCmd</I> should be zero. 
</DD></DL>
<P>You can use this function to open or explore a shell folder. To open a folder, use either of the following calls:
<PRE>ShellExecute(handle, NULL, path_to_folder, NULL, NULL, SW_SHOWNORMAL);
</PRE>
<P>or
<PRE>ShellExecute(handle, "open", path_to_folder, NULL, NULL, SW_SHOWNORMAL);
</PRE>
<P>To explore a folder, use the following call:
<PRE>ShellExecute(handle, "explore", path_to_folder, NULL, NULL, SW_SHOWNORMAL);
</PRE>
<P>If <I>lpOperation</I> is NULL, the function opens the file specified by <I>lpFile</I>. If <I>lpOperation</I> is "open" or "explore", the function will attempt to open or explore the folder. 

<P>To obtain information about the application that is launched as a result of calling <B>ShellExecute</B>, use <A HREF="ShellExecuteEx.htm#ShellExecuteEx">ShellExecuteEx</A>.
<!-- *************************************************************************** -->
<!--CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>