<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>File Parser Constants</TITLE>

<META NAME=MS-HKWD CONTENT="File Parser Constants">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, Windows Shell API">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">

<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="sec_fileparser_constants"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="File Parser Constants"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="File Parser Constants"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="FileParser.htm#ch_fileparser">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="FileParser.htm">File Parsers</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="../FileView.htm">File Viewers</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>File Parser Constants</H1>
<BR CLEAR=ALL>
<P>The following vector object values and vector attribute values are used with the vector graphics functions.

<H2><A NAME="Vector_object_values">Vector object values</A></H2>
<TABLE>
<TR><TD>SO_ARC </TD><TD>Draws an arc. <I>dwDataSize</I> must be four times the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of four <B>SOPOINT</B> structures. </TD></TR>
<TR><TD>SO_ARCANGLE </TD><TD>Draws an arc by defining the angles of the two points on the ellipse that locate the start and end of the arc. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOARCINFO.htm#SOARCINFO">SOARCINFO</A> structure, and <I>pData</I> must be the address of a <B>SOARCINFO</B> structure that defines the arc. </TD></TR>
<TR><TD>SO_ARCANGLECLOCKWISE </TD><TD>Draws an arc in the clockwise direction by defining the angles of the two points on the ellipse that locate the start and end of the arc. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOARCINFO.htm#SOARCINFO">SOARCINFO</A> structure, and <I>pData</I> must be the address of a <B>SOARCINFO</B> structure.</TD></TR>
<TR><TD>SO_ARCCLOCKWISE </TD><TD>Draws an arc in the clockwise direction. <I>dwDataSize</I> must be four times the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of four <B>SOPOINT</B> structures. </TD></TR>
<TR><TD>SO_BEGINGROUP </TD><TD>Starts the definition of a group. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOGROUPINFO.htm#SOGROUPINFO">SOGROUPINFO</A> structure added to <B>GroupInfo.nTransforms</B> times the size of the <A HREF="../structures/SOTRANSFORM.htm#SOTRANSFORM">SOTRANSFORM</A> structure, and <I>pData</I> must be the address of a <B>SOGROUPINFO</B> structure followed by the number of <B>SOTRANSFORM</B> structures defined in the <B>nTransforms</B> member of the <B>SOGROUPINFO</B> structure. The transformations will occur to all objects in the group in the order supplied. For more information, see the SO_OBJECTTRANSFORM vector attribute value.</TD></TR>
<TR><TD>SO_BEGINPATH </TD><TD>Starts the definition of a path. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOPATHINFO.htm#SOPATHINFO">SOPATHINFO</A> structure added to <B>GroupInfo.nTransforms</B> times the size of the <A HREF="../structures/SOTRANSFORM.htm#SOTRANSFORM">SOTRANSFORM</A> structure, and <I>pData</I> must be the address of a <B>SOPATHINFO</B> structure followed by the number of <B>SOTRANSFORM</B> structures defined in the <B>nTransforms</B> member of the <B>SOPATHINFO</B> structure. The transformations will occur to all objects in the path in the order supplied. For more information, see the SO_OBJECTTRANSFORM vector attribute value later in this section.
<P>This item is used to begin the definition of a path. Paths are a collection of points connected by lines that form opened or closed objects. Multiple subpaths may be created using SO_CLOSESUBPATH while defining a path. Note that the current object and group transformations will also apply during creation of a path. This allows maximum flexibility with transforming paths. Any object can be rendered to create the path. However, due to current limitations, text objects will not be added to the path. Multiple levels of paths are also allowed.</TD></TR>
<TR><TD>SO_BEGINSYMBOL </TD><TD>Starts the definition of a symbol. A symbol is collection of vector commands that together make up a single symbol. Symbols are considered in the wrapping algorithm of frame text. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SORECT.htm#SORECT">SORECT</A> structure, and <I>pData</I> must be the address of a <B>SORECT</B> structure that identifies the bounding rectangle of all commands used within the symbol. </TD></TR>
<TR><TD>SO_BEGINTEXTFRAME </TD><TD>Starts the definition of a text frame. A text frame is used in conjunction with SO_TEXTINPARA to wrap text within a frame. Text is wrapped according to the SO_PARAINDENTS vector attribute value. Symbols are included in the wrapping algorithm. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SORECT.htm#SORECT">SORECT</A> structure, and <I>pData</I> must be the address of a <B>SORECT</B> structure that identifies the bounding rectangle of the text frame. 
</TD></TR>
<TR><TD>SO_CHORD </TD><TD>Draws a chord. <I>dwDataSize</I> must be four times the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of four <B>SOPOINT</B> structures. </TD></TR>
<TR><TD>SO_CHORDANGLE </TD><TD>Draws a chord by defining the angles of the two points on the ellipse that locate the start and end of the chord. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOARCINFO.htm#SOARCINFO">SOARCINFO</A> structure, and <I>pData</I> must be the address of a <B>SOARCINFO</B> structure that defines the chord in terms of the arc located on the chord. </TD></TR>
<TR><TD>SO_CLOSESUBPATH </TD><TD>Closes the current subpath. <I>dwDataSize</I> must be zero, and <I>pData</I> must be NULL. </TD></TR>
<TR><TD>SO_CPARCANGLE </TD><TD>Draws an arc from the current point pivoting around the center point of the specified sweep angle. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOCPARCANGLE.htm#SOCPARCANGLE">SOCPARCANGLE</A> structure, and <I>pData</I> must be the address of a <B>SOCPARCANGLE</B> structure that gives the center point of the arc and the sweep angle. </TD></TR>
<TR><TD>SO_CPARCTRIPLE </TD><TD>Draws a circle arc from the current point through the first point and ending at the second point. <I>dwDataSize</I> must be two times the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of two <B>SOPOINT</B> structures. </TD></TR>
<TR><TD>SO_CPELLIPSE </TD><TD>Draws an ellipse around the current point with an x- and y-radius described by the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> data. <I>dwDataSize</I> must be the size of the <B>SOPOINT</B> structure, and <I>pData</I> must be the address of a variable containing the x- and y-radius values.</TD></TR>
<TR><TD>SO_CPLINE </TD><TD>Draws a line from the current pen position. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of a variable containing the point to draw to.</TD></TR>
<TR><TD>SO_CPPIEANGLE </TD><TD>Draws a pie with the current position as the center and with the given start and sweep angles. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOCPPIEANGLE.htm#SOCPPIEANGLE">SOCPPIEANGLE</A> structure, and <I>pData</I> must be the address of a <B>SOCPPIEANGLE</B> structure that gives the radius of the circle.</TD></TR>
<TR><TD>SO_CPRECTANGLE </TD><TD>Draws a rectangle starting at the current pen position. <I>dwDataSize</I> must be the size of <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of a variable containing the point to be the opposite corner of the rectangle.</TD></TR>
<TR><TD>SO_CPSET </TD><TD>Moves the current pen position to this point. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of the variable containing the point.
</TD></TR>
<TR><TD>SO_DRAWPATH </TD><TD>Strokes, fills, or both strokes and fills the current path with the current pen and brush. Since the group, path, and object transformations were applied when the path was created, they are not applied again. <I>dwDataSize</I> must be the size of a WORD, and <I>pData</I> must be the address of a variable containing the SODP_STROKE or SODP_FILL value, or both.
</TD></TR>
<TR><TD>SO_ELLIPSE </TD><TD>Draws an ellipse. <I>dwDataSize</I> must be two times the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of two <B>SOPOINT</B> structures. </TD></TR>
<TR><TD>SO_ENDGROUP </TD><TD>Ends the definition of a group. <I>dwDataSize</I> must be zero, and <I>pData</I> must be NULL. </TD></TR>
<TR><TD>SO_ENDPATH </TD><TD>Ends the definition of a path. <I>dwDataSize</I> must be zero, and <I>pData</I> must be NULL.</TD></TR>
<TR><TD>SO_ENDPOLY </TD><TD>Ends drawing of a polygon. <I>dwDataSize</I> must be zero, and <I>pData</I> must be NULL. </TD></TR>
<TR><TD>SO_ENDSYMBOL </TD><TD>Ends the definition of a symbol. <I>dwDataSize</I> must be zero, and <I>pData</I> must be NULL.</TD></TR>
<TR><TD>SO_ENDTEXTFRAME </TD><TD>Ends the definition of a text frame. <I>dwDataSize</I> must be zero, and <I>pData</I> must be NULL.
</TD></TR>
<TR><TD>SO_FLOODFILL </TD><TD>Fills the area with the given color. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure plus the size of the
<object id="hhal_3" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_3.Click()>SOCOLORREF</A> structure, and <I>pData</I> must be the address of a variable containing the coordinates of the point to start at followed by the RGB color value to use to fill the area.
</TD></TR>
<TR><TD>SO_LINE </TD><TD>Draws a line from point 1 to point 2 using the current pen. <I>dwDataSize</I> must be two times the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of two <B>SOPOINT</B> structures. </TD></TR>
<TR><TD>SO_PARAEND </TD><TD>Ends a paragraph. <I>dwDataSize</I> must be zero, and <I>pData</I> must be NULL.</TD></TR>
<TR><TD>SO_PIE </TD><TD>Draws a pie shape. <I>dwDataSize</I> must be four times the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of four <B>SOPOINT</B> structures. </TD></TR>
<TR><TD>SO_PIEANGLE </TD><TD>Draws a pie by defining the angles of the two points on the ellipse that locate the start and end of the pie. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOARCINFO.htm#SOARCINFO">SOARCINFO</A> structure, and <I>pData</I> must be the address of a <B>SOARCINFO</B> structure that defines the pie in terms of the arc located on the pie. </TD></TR>
<TR><TD>SO_POINTS </TD><TD>Specifies vertices of a polygon. <I>dwDataSize</I> must be N times the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of consecutively stored <B>SOPOINT</B> structures. At most,
<object id="hhal_4" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_4.Click()>SOMAXPOINTS</A> can be passed in a single SO_POINTS object. Multiple SO_POINTS objects can be generated to define all of the points associated with a polygon object. The number of points defined in SO_STARTPOLY must be defined using SO_POINTS before the object is closed with SO_ENDPOLY.</TD></TR>
<TR><TD>SO_RECTANGLE </TD><TD>Draws a rectangle. <I>dwDataSize</I> must be two times the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be the address of two <B>SOPOINT</B> structures. </TD></TR>
<TR><TD>SO_ROUNDRECT </TD><TD>Draws a rectangle with rounded corners. <I>dwDataSize</I> must be three times the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure, and <I>pData</I> must be address of the three <B>SOPOINT</B> structures. </TD></TR>
<TR><TD>SO_SETPIXEL </TD><TD>Sets the color of a pixel. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOPOINT.htm#SOPOINT">SOPOINT</A> structure plus the size of the
<object id="hhal_5" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_5.Click()>SOCOLORREF</A> structure, and <I>pData</I> must be the address of a variable containing the pixel point followed by the RGB color value to set.</TD></TR>
<TR><TD>SO_STARTPOLY </TD><TD>Starts drawing of a polygon. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOPOLYINFO.htm#SOPOLYINFO">SOPOLYINFO</A> structure, and <I>pData</I> must be the address of a <B>SOPOLYINFO</B> structure.</TD></TR>
<TR><TD>SO_TEXTATARCANGLE </TD><TD>Draws text at the given location. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOTEXTATARCANGLE.htm#SOTEXTATARCANGLE">SOTEXTATARCANGLE</A> structure plus the length of the text string, and <I>pData</I> must be the address of a <B>SOTEXTATARCANGLE</B> structure followed by the text string.</TD></TR>
<TR><TD>SO_TEXTATPOINT </TD><TD>Draws text at the given point. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOTEXTATPOINT.htm#SOTEXTATPOINT">SOTEXTATPOINT</A> structure plus the length of the text string, and <I>pData</I> must be the address of a <B>SOTEXTATPOINT</B> structure followed by the text string.</TD></TR>
<TR><TD>SO_TEXTINPARA </TD><TD>Draws the text string in the current font and text attributes at the current wrap location. The wrap location is moved by the text extent. Any words that would extend beyond the right indent of the frame are wrapped. This object is only valid within a text frame. <I>dwDataSize</I> must be the size of an INT plus the length of the text string, and <I>pData</I> must be the address of an integer variable containing the size of the text string that follows. </TD></TR>
<TR><TD>SO_TEXTINRECT </TD><TD>Draws text in a rectangle. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOTEXTINRECT.htm#SOTEXTINRECT">SOTEXTINRECT</A> structure plus the length of the text string, and <I>pData</I> must be the address of a <B>SOTEXTINRECT</B> structure followed by the text string.</TD></TR>
</TABLE>
<H2><A NAME="Vector_attribute_val">Vector attribute values</A></H2>
<TABLE>
<TR><TD>SO_BKCOLOR </TD><TD>Sets the background color used for styled lines, hatched brushes, and text when the background mode is SOBK_OPAQUE. <I>dwDataSize</I> must be the size of the
<object id="hhal_6" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_6.Click()>SOCOLORREF</A> structure, and <I>pData</I> must be the address of a variable containing an RGB or palette-relative color value. To set this value, use the <A HREF="../macros/SORGB.htm#SORGB">SORGB</A> or
<object id="hhal_7" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_7.Click()>SOPALETTE</A> macro.</TD></TR>
<TR><TD>SO_BKMODE </TD><TD>Sets the background mode. <I>dwDataSize</I> must be the size of an INT, and <I>pData</I> must be the address of a variable containing either the SOBK_OPAQUE or SOBK_TRANSPARENT value.</TD></TR>
<TR><TD>SO_CLIPMODE </TD><TD>Sets the clipping mode. <I>dwDataSize</I> must be the size of a WORD, and <I>pData</I> must be the address of a variable containing either the SO_DONOTCLIP or SO_CLIPTOPATH value.</TD></TR>
<TR><TD>SO_DRAWMODE </TD><TD>Sets the drawing mode used when drawing the pen and interiors. <I>dwDataSize</I> must be the size of an INT, and <I>pData</I> must be the address of a variable containing one of these values: 
<TABLE>
<TR><TD>SOR2_BLACK </TD><TD>SOR2_NOT</TD></TR>
<TR><TD>SOR2_COPYPEN </TD><TD>SOR2_NOTCOPYPEN</TD></TR>
<TR><TD>SOR2_MASKNOTPEN </TD><TD>SOR2_NOTMASKPEN</TD></TR>
<TR><TD>SOR2_MASKPEN </TD><TD>SOR2_NOTMERGEPEN</TD></TR>
<TR><TD>SOR2_MASKPENNOT </TD><TD>SOR2_NOTXORPEN</TD></TR>
<TR><TD>SOR2_MERGENOTPEN </TD><TD>SOR2_WHITE</TD></TR>
<TR><TD>SOR2_MERGEPEN </TD><TD>SOR2_XORPEN</TD></TR>
<TR><TD>SOR2_NOP</TD></TR>
</TABLE></TD></TR>
<TR><TD>SO_OBJECTTRANSFORM </TD><TD>Sets object transformations. <I>dwDataSize</I> must be the size of an INT plus nCount times the size of the <A HREF="../structures/SOTRANSFORM.htm#SOTRANSFORM">SOTRANSFORM</A> structure, and <I>pData</I> must be one INT (nCount) followed by that number of <B>SOTRANSFORM</B> structures. The transformations will occur in the order supplied. </TD></TR>
<TR><TD>SO_PARAALIGN </TD><TD>Sets the alignment of paragraph text being built into a text frame. <I>dwDataSize</I> must be the size of a WORD, and <I>pData</I> must be the address of a 16-bit variable containing the SO_ALIGNLEFT, SO_ALIGNCENTER, SO_ALIGNRIGHT, or SO_ALIGNJUSTIFY value.</TD></TR>
<TR><TD>SO_PARAINDENTS </TD><TD>Sets the paragraph indents within a text frame, defining the first, left, and right indents of paragraph text being built into the frame. These values are only valid when within a text frame. All values are in the current coordinate system. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOPARAINDENTS.htm#SOPARAINDENTS">SOPARAINDENTS</A> structure, and <I>pData</I> must be the address of a <B>SOPARAINDENTS</B> structure.</TD></TR>
<TR><TD>SO_POINTRELATION </TD><TD>Sets the coordinate orientation. <I>dwDataSize</I> must be the size of an INT, and <I>pData</I> must be the address of a variable containing the SOPR_ABSOLUTE or SOPR_RELATIVE value.</TD></TR>
<TR><TD>SO_POLYFILLMODE </TD><TD>Sets the polygon-filling mode. <I>dwDataSize</I> must be the size of an INT, and <I>pData</I> must be the address of a variable containing either the SOPF_ALTERNATE or SOPF_WINDING value.</TD></TR>
<TR><TD>SO_SELECTBRUSH </TD><TD>Selects the given brush. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOLOGBRUSH.htm#SOLOGBRUSH">SOLOGBRUSH</A> structure, and <I>pData</I> must be the address of a <B>SOLOGBRUSH</B> structure.</TD></TR>
<TR><TD>SO_SELECTFONT </TD><TD>Selects the given font. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOLOGFONT.htm#SOLOGFONT">SOLOGFONT</A> structure, and <I>pData</I> must be the address of a <B>SOLOGFONT</B> structure.</TD></TR>
<TR><TD>SO_SELECTPEN </TD><TD>Selects the given pen. <I>dwDataSize</I> must be the size of the <A HREF="../structures/SOLOGPEN.htm#SOLOGPEN">SOLOGPEN</A> structure, and <I>pData</I> must be the address of a <B>SOLOGPEN</B> structure.</TD></TR>
<TR><TD>SO_TEXTCHAREXTRA </TD><TD>Sets the text character extra value. <I>dwDataSize</I> must be the size of an INT, and <I>pData</I> must be the address of a variable containing a value. This attribute affects text objects.</TD></TR>
<TR><TD>SO_TEXTCOLOR </TD><TD>Sets the foreground color. <I>dwDataSize</I> must be the size of the
<object id="hhal_8" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_8.Click()>SOCOLORREF</A> structure, and <I>pData</I> must be the address of a variable containing an RGB or a palette-relative color value. To set this value, use the <A HREF="../macros/SORGB.htm#SORGB">SORGB</A> or
<object id="hhal_9" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Further_Reading>
</object><A HREF=JavaScript:hhal_9.Click()>SOPALETTE</A> macro.</TD></TR>
</TABLE>
<!--*************************************************************-->
<!--CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>