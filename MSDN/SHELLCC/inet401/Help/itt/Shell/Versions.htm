<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Shell Versions</TITLE>

<META NAME=MS-HKWD CONTENT="Shell Versions">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, Windows Shell API">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">

<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ch_shell_versions"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Shell Versions"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Shell Versions"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="Shell.htm#book_shell">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="Shell.htm">Windows Shell API</A>
<IMG SRC="../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="AppBars.htm">Application Desktop Toolbars</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>Shell Versions</H1>
<BR CLEAR=ALL>
<P>Microsoft&#174; Internet Explorer 4.0 introduces updates to shell interfaces, functions, and other programming elements. This section describes how to determine which version your application is running on and how to target your application for a specific version.
<P><A CLASS=tctop HREF="Versions.htm#shell_dll_version"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Shell DLL Versions</A><BR>
<P><A CLASS=tctop HREF="Versions.htm#shell_project_versions"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">Project Versions</A><BR>
<H2><A NAME="shell_dll_version">Shell DLL Versions</A></H2>
<P>Because of ongoing enhancements, different versions of Shell32.dll implement different features. Throughout this section, programming elements are marked with a version number. This version number indicates that the programming element is implemented in that version and later versions of Shell32.dll. If no version number is specified, the programming element is implemented in all versions. Many programming elements are now contained in Shdocvw.dll, but this file was not included with standard Microsoft&#174; Windows&#174; 95 or Windows NT&#174; 4.0 operating systems. Therefore, Shell32.dll will provide the required version information. 

<P>The following table outlines the different versions of Shell32.dll and the platforms on which they are contained.

<TABLE>
<TR><TD><B>Version</B></TD><TD><B>Platform</B></TD></TR>
<TR><TD>4.00</TD><TD>Windows 95, Windows NT 4.0, Internet Explorer 3.0, and Internet Explorer 4.0 without Web Integrated Desktop.</TD></TR>
<TR><TD>4.71</TD><TD>Internet Explorer 4.0 with Web Integrated Desktop.</TD></TR>
<TR><TD>4.72</TD><TD>Internet Explorer 4.01 with Web Integrated Desktop.</TD></TR>
</TABLE>
<P>The following function retrieves the major and minor version numbers of the Shell32.dll that is installed on the local system.


<PRE>#include &lt;windows.h&gt;
#include &lt;shlwapi.h&gt;

HRESULT GetShell32Version(LPDWORD pdwMajor, LPDWORD pdwMinor)
{
HINSTANCE   hShell32;

if(   IsBadWritePtr(pdwMajor, sizeof(DWORD)) || 
      IsBadWritePtr(pdwMinor, sizeof(DWORD)))
   return E_INVALIDARG;

*pdwMajor = 0;
*pdwMinor = 0;

//Load the DLL.
hShell32 = LoadLibrary(TEXT("shell32.dll"));

if(hShell32)
   {
   HRESULT           hr = S_OK;
   DLLGETVERSIONPROC pDllGetVersion;
   
   /*
   You must get this function explicitly because earlier versions of the DLL 
   don't implement this function. That makes the lack of implementation of the 
   function a version marker in itself.
   */
   pDllGetVersion = (DLLGETVERSIONPROC)GetProcAddress(hShell32, TEXT("DllGetVersion"));
   
   if(pDllGetVersion)
      {
      DLLVERSIONINFO    dvi;
      
      ZeroMemory(&amp;dvi, sizeof(dvi));
      dvi.cbSize = sizeof(dvi);
   
      hr = (*pDllGetVersion)(&amp;dvi);
      
      if(SUCCEEDED(hr))
         {
         *pdwMajor = dvi.dwMajorVersion;

         *pdwMinor = dvi.dwMinorVersion;
         }
      }
   else
      {
      /*
      If GetProcAddress failed, the DLL is a version previous to the one 
      shipped with IE 3.x.
      */
      *pdwMajor = 4;
      *pdwMinor = 0;
      }
   
   FreeLibrary(hShell32);

   return hr;
   }

return E_FAIL;
}
</PRE>
<H2><A NAME="shell_project_versions">Project Versions</A></H2>
<P>To help you ensure that your application is compatible with different targeted versions of the shell, a version macro has been added to the shell header files. This version macro is used to define, exclude, or redefine certain definitions for different versions of the DLL. The macro name is <B>_WIN32_IE</B>, and you, the developer, are responsible for defining the macro as a hexadecimal number. This version number defines the target version of the application that is using the DLL. The following are the currently available version numbers and the effect each has on your application.

<TABLE>
<TR><TD><B>Version</B></TD><TD><B>Description</B></TD></TR>
<TR><TD>0x0200</TD><TD>The application will be compatible with Shell32.dll version 4.00 and later. The application will not, however, be able to implement the features that were added after version 4.00 of Shell32.dll.</TD></TR>
<TR><TD>0x0400</TD><TD>The application will be compatible with Shell32.dll version 4.71 and later. The application will not, however, be able to implement the features that were added after version 4.71 of Shell32.dll.</TD></TR>
<TR><TD>0x0401</TD><TD>The application will be compatible with Shell32.dll version 4.72 and later. The application will not, however, be able to implement the features that were added after version 4.72 of Shell32.dll.</TD></TR>
</TABLE>
<P>The most effective way to define this macro in your project is to add the following to the compiler directives in your make file (substitute the desired version number for 0x0400). 

<PRE>/D _WIN32_IE=0x0400 
</PRE>
<P>Another method that can be used is to add a line similar to the following in your source code <I>before</I> including any header files (substitute the desired version number for 0x0400).

<PRE>#define _WIN32_IE 0x0400
#include &lt;shlobj.h&gt;
</PRE>
<P>If you do not define this macro in your project, it will automatically be defined as 0x0400.

<!--CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>