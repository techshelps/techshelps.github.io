<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PathCanonicalize</TITLE>

<META NAME=MS-HKWD CONTENT="PathCanonicalize">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies, Windows Shell API">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">

<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="PathCanonicalize"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="PathCanonicalize"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="PathCanonicalize"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../SHLWAPI.htm#ch_shell_LWAPI">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="PathBuildRoot.htm">PathBuildRoot</A>
<IMG SRC="../../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="PathCombine.htm">PathCombine</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>PathCanonicalize</H1>
<BR CLEAR=ALL>
<PRE>BOOL PathCanonicalize(
    LPTSTR  lpszDst,
    LPCTSTR lpszSrc
    );
</PRE>
<P>Canonicalizes a path. 

<UL><LI>Returns TRUE if successful, or FALSE otherwise.
</UL>
<DL><DT><I>lpszDst</I>
</DT><DD>Address of a string that receives the canonicalized path. This buffer should be at least as large as the buffer at <I>lpszSrc</I>. 
</DD><DT><I>lpszSrc</I>
</DT><DD>Address of the path to be canonicalized.
</DD></DL>
<P>This function allows the user to specify what to remove from a path by inserting special character sequences into the path. The ".." sequence indicates to remove the path part from the current position to the previous path part. The "." sequence indicates to skip over the next path part to the following path part. The root part of the path cannot be removed.

<P> 
<B>Example:</B>
<PRE>#include &lt;windows.h&gt;
#include &lt;iostream.h&gt;
#include "Shlwapi.h"

void main( void )
{
&#009;// Path_1 destination buffer.
&#009;char buffer_1[] = "JustABufferToHoldTheCanonicalizedPathForAnExample";
&#009;char *lpStr1;
&#009;lpStr1 = buffer_1;

&#009;// Path_2 to be Canonicalized.
&#009;char buffer_2[] = "A:\\name_1\\.\\name_2\\..\\name_3";
&#009;char *lpStr2;
&#009;lpStr2 = buffer_2;

&#009;// Path_3 to be Canonicalized.
&#009;char buffer_3[] = "A:\\name_1\\..\\name_2\\.\\name_3";
&#009;char *lpStr3;
&#009;lpStr3 = buffer_3;

&#009;// Path_4 to be Canonicalized.
&#009;char buffer_4[] = "A:\\name_1\\name_2\\.\\name_3\\..\\name_4";
&#009;char *lpStr4;
&#009;lpStr4 = buffer_4;

&#009;// Path_5 to be Canonicalized.
&#009;char buffer_5[] = "A:\\name_1\\.\\name_2\\.\\name_3\\..\\name_4\\..";
&#009;char *lpStr5;
&#009;lpStr5 = buffer_5;

    // Path_6 to be Canonicalized.
&#009;char buffer_6[] = "C:\\..";
&#009;char *lpStr6;
&#009;lpStr6 = buffer_6;

    cout &lt;&lt; "The un-canonicalized path 2 is : " &lt;&lt; lpStr2
         &lt;&lt; "\nThe return value is            : " 
         &lt;&lt; PathCanonicalize(lpStr1,lpStr2)
         &lt;&lt; "\nThe canonicalized path 1 is    : " &lt;&lt; lpStr1 &lt;&lt; endl;

    cout &lt;&lt; "\nThe un-canonicalized path 3 is : " &lt;&lt; lpStr3
         &lt;&lt; "\nThe return value is            : " 
         &lt;&lt; PathCanonicalize(lpStr1,lpStr3)
         &lt;&lt; "\nThe canonicalized path 1 is    : " &lt;&lt; lpStr1 &lt;&lt; endl;

    cout &lt;&lt; "\nThe un-canonicalized path 4 is : " &lt;&lt; lpStr4
         &lt;&lt; "\nThe return value is            : " 
         &lt;&lt; PathCanonicalize(lpStr1,lpStr4)
         &lt;&lt; "\nThe canonicalized path 1 is    : " &lt;&lt; lpStr1 &lt;&lt; endl;

    cout &lt;&lt; "\nThe un-canonicalized path 5 is : " &lt;&lt; lpStr5
         &lt;&lt; "\nThe return value is            : " 
         &lt;&lt; PathCanonicalize(lpStr1,lpStr5) 
         &lt;&lt; "\nThe canonicalized path 1 is    : " &lt;&lt; lpStr1 &lt;&lt; endl;

    cout &lt;&lt; "\nThe un-canonicalized path 6 is : " &lt;&lt; lpStr6
         &lt;&lt; "\nThe return value is            : " 
         &lt;&lt; PathCanonicalize(lpStr1,lpStr6)
         &lt;&lt; "\nThe canonicalized path 1 is    : " &lt;&lt; lpStr1 &lt;&lt; endl;&#009;
}
OUTPUT:
---------
The un-canonicalized path 2 is : A:\name_1\.\name_2\..\name_3
The return value is            : 1
The canonicalized path 1 is    : A:\name_1\name_3

The un-canonicalized path 3 is : A:\name_1\..\name_2\.\name_3
The return value is            : 1
The canonicalized path 1 is    : A:\name_2\name_3

The un-canonicalized path 4 is : A:\name_1\name_2\.\name_3\..\name_4
The return value is            : 1
The canonicalized path 1 is    : A:\name_1\name_2\name_4

The un-canonicalized path 5 is : A:\name_1\.\name_2\.\name_3\..\name_4\..
The return value is            : 1
The canonicalized path 1 is    : A:\name_1\name_2

The un-canonicalized path 6 is : C:\..
The return value is            : 1
The canonicalized path 1 is    : C:\
</PRE>
<!-- ************************************************** -->
<!--CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>