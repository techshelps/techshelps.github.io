<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Profile Assistant</TITLE>

<META NAME=MS-HKWD CONTENT="Profile Assistant">
<META NAME="Keywords" CONTENT="Active Channels, Active Desktop items, Software Update Channels">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ch_profile_asst"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Profile Assistant"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../art/headbarb.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Profile Assistant"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="tools.htm#content_tools">Topic Contents</A>

</PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="tools.htm">Tools</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>Profile Assistant</H1>

<P>This document describes how Web publishers can use the new Microsoft&#174; Internet Explorer 4.0 Profile Assistant to collect profile information from the user. All information submitted to the Web server requires the user's approval.

<P><A HREF="profile_assistant.htm#sec_profile_intro"><IMG SRC="../../art/arrowr.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowr.gif">Introduction</A><BR>

<P><A HREF="profile_assistant.htm#sec_profile_using"><IMG SRC="../../art/arrowr.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowr.gif">Using the Profile Assistant</A><BR>

<P><A HREF="profile_assistant.htm#sec_profile_form"><IMG SRC="../../art/arrowr.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowr.gif">Authoring an HTML Form</A><BR>
<!--****************************************************************--><H2><A NAME="sec_profile_intro">Introduction</A></H2>

<P>The Platform for Privacy Preferences (P3) is a World Wide Web Consortium (W3C) project determining the overall architecture for enabling privacy on the Web. The Profile Assistant in Internet Explorer 4.0 is the first implementation of the types of privacy capabilities enabled by P3. 

<P>This new architecture defines a means by which user profiles can be exchanged between Web clients and servers while respecting the user's right to privacy. This profile information is valuable, but it cannot be used by companies or service organizations unless a standard mechanism is defined by which the information can be programmatically accessed on either the client or the server. Such a mechanism must respect a user's privacy constraints. Therefore, a Web site cannot be allowed to retrieve user information to which it is not entitled. Sites should not be hindered, however, from accessing profile information with the informed consent of the user, as defined by the P3 architecture. 

<P>This article includes a description of the scripting object model exposed on the client user-agent (Internet Explorer 4.0). The new <A HREF="../../dhtml/references/objects/userProfile.htm#userProfile">userProfile</A> object allows Web publishers to create scripts in Web pages that request read access to private information within the constraints of the privacy guidelines defined by the P3 architecture. Note that Internet Explorer 4.0 does not yet allow for write access to the user profile as specified in the P3 architecture. Instead, Internet Explorer 4.0 implements a subset of the P3 schema, which is undergoing the standardization process at the W3C. To install the Profile Assistant, you must use either the "standard" or "full" installation option for Internet Explorer 4.0. The Profile Assistant is available only on the Microsoft&#174; Windows&#174; 95 and Windows NT&#174; versions of Internet Explorer 4.0.

<H2><A NAME="sec_profile_using">Using the Profile Assistant</A></H2>

<P>The purpose of the Profile Assistant is to make it easy for users to share registration and demographic information with sites that require this information. The goal is to eliminate the need for users to repeatedly enter information such as their address or e-mail name for each site's registration page. This is accomplished, while at the same time maintaining user privacy, by giving users complete control over access to their data. User information is stored securely in protected storage on the client computer. Web servers can request to read this information, but it is shared only if users give their consent in the Profile Assistant confirmation dialog box. This dialog box is required, and it is not possible to access this data without the user's permission. 

<H3><A NAME="sec_profile_data">Populating the client data store</A></H3>

<P>In Internet Explorer 4.0, the user can enter data into the secure client profile storage by using an edit dialog box accessed through the Content tab in the View/Internet Options dialog box. This form allows the user to enter or change all data elements in the store. Note that the Profile Assistant is automatically populated with registration information collected from the user by Internet Explorer 4.0. If there is no data, or if you wish to edit the data previously collected, follow this simple process:
<OL>
<LI>Open the Internet Explorer 4.0 browser.
<LI>From the View menu, select Internet Options.
<LI>From the Internet Options dialog box, click the Content tab.
<LI>On the Content tab, click the Edit Profile button.
<LI>Enter or edit your information, and click OK.
</OL>

<P>The following illustration shows a typical Profile Assistant data entry.

<P><IMG SRC="../../art/pa_data.gif" WIDTH="503" HEIGHT="424" ALT="Profile Assistant Data Entry">

<P> 

<H2><A NAME="sec_profile_form">Authoring an HTML Form</A></H2>

<P>Authoring an HTML form for use with the Profile Assistant is accomplished by adding some scripting code to an HTML page. This makes retrofitting existing forms easy. Note that if your registration page is viewed frequently in the same session, you may want to write some scripting code to ensure that the user is prompted only once. Please view the source for the sample page (Proftest.htm) shown in the next section. 

<H3><A NAME="sec_profile_om">Object model for the Profile Assistant</A></H3>

<P>To be able to write scripts for the Profile Assistant, you need to first understand the Profile Assistant object and its associated methods. The object model consists of a single object, the <A HREF="../../dhtml/references/objects/userProfile.htm#userProfile">userProfile</A> object. This object is available to scripts running on Internet Explorer 4.0 through the HTML document object model as window.navigator.<B>userProfile</B>.

<P>The following diagram shows the relation of objects in the object model.

<PRE>
    window
      |
      +---navigator
             |
             +---userProfile

</PRE>
<H4><A NAME="sec_profile_methods">Methods of the userProfile object</A></H4>

<P>The <B>userProfile</B> object provides methods that allow a script to request read access to a user's profile information and also to perform read actions. Note that the requests are queued up before the action of reading or writing is performed. This simplifies the user's experience by prompting for profile release permissions once for a batch of requests. Web pages utilizing the Profile Assistant should follow this logic sequence:

<OL>
<LI>Use <A HREF="../../dhtml/references/methods/clearRequest.htm#clearRequest">clearRequest</A> to clear out the request queue.
<PRE>clearRequest();

</PRE>
<LI>Perform a series of <B>addReadRequest</B>s   to fill the request queue with the items that will be requested from the client storage. This method uses a predefined attribute name as the parameter.
<PRE>addReadRequest("Vcard.FirstName");

</PRE>
<LI>Issue a <A HREF="../../dhtml/references/methods/doReadRequest.htm#doReadRequest">doReadRequest</A> to prompt the user with the confirmation dialog box. When confirmed, return the requested data from the client store. Parameters are an integer (0-12) representing a standard <I>usage code</I> and optional strings for the header.

<PRE>doReadRequest(10, "XYZ Corp.");

</PRE>
<LI>Access the data elements that have been pulled from the client with the <A HREF="../../dhtml/references/methods/getAttribute.htm#getAttribute_0">getAttribute</A> method. This method takes a predefined attribute name as a parameter and returns the user's stored value as a string.
<PRE>getAttribute("Vcard.FirstName");

</PRE>
</OL>
<H4><A NAME="sec_profile_example">Profile Assistant scripting examples</A></H4>

<P>The following excerpt is an example of a script written in JScript that can be run on Internet Explorer 4.0 to read various values from the user's profile information store. 

<P><B>Note</B>  User profile attributes are specified with the format Vcard.<I>attribute</I>. The Vcard_<I>attribute</I> format is no longer supported by Internet Explorer 4.0. 
<PRE>
// This ensures that the request queue is in a clean, known state.
navigator.userProfile.clearRequest();

// Queue up a request for read access to multiple profile attributes.
navigator.userProfile.addReadRequest("Vcard.FirstName");
navigator.userProfile.addReadRequest("Vcard.Gender");

// Request access to specific information via a confirmation dialog box.
navigator.userProfile.doReadRequest(usage-code, "Foobar Inc.");

// Perform read operations to access the information.
name = navigator.userProfile.getAttribute("Vcard.FirstName");
gender  = navigator.userProfile.getAttribute("Vcard.Gender");

// The script can now use the 'name' and 'gender' variables
// to personalize content or to send information back to the server.

</PRE>

<P>An HTML page called Proftest.htm containing the HTML code shown in the next section is available in the Samples directory of the Internet Client SDK. This is a simple registration form that asks the user to enter a name, an e-mail address, and a telephone number. When navigating to this form, users will be prompted with a dialog box informing them that profile information is being requested. As you will see, there are several elements to this user interface:

<UL>
<LI>The URL of the site requesting the user's information. 
<LI>A list of all the data elements requested. The Profile Assistant allows the user to view exactly what information is being requested and to deliberately exclude information if desired.
<LI>The usage code that specifies how the data will be used by the site. An example would be "disclosed to others, who may contact you for marketing of services and/or products". A list of usage codes is provided with the <A HREF="../../dhtml/references/methods/doReadRequest.htm#doReadRequest">doReadRequest</A> documentation.
<LI>Information about the connection security. Since the user's information is transferred over the Internet, the data is only as secure as its connection. This identifies if data is transferred over an SSL connection and, if so, allows the user to verify the site identity by viewing the certificate. 
</UL>

<P>The information provided on the dialog box helps the user verify who is requesting the data, choose which particular data elements (if any) to share with the Web publisher, and understand the intended usage as specified by the site. Clicking the OK button will add the information to the form. Users consenting to the information request will not be asked for confirmation when visiting this page later unless the "Always allow site to see checked items" box is cleared. 


<P>The following illustration shows the Profile Assistant confirmation dialog box.

<P><IMG SRC="../../art/pa_conf.gif" WIDTH="384" HEIGHT="431" ALT="Profile Assistant Confirmation Dialog Box">

<P> 

<P>The following HTML file (Proftest.htm) shows how a simple page can be set up to populate a form with data requested from the user's profile. If the user chooses not to disclose information from one or more of the requested fields, those text fields will remain blank. An explanation of the script is provided after the listing of the entire HTML page.

<P><B>Note</B>  This sample must be placed on an HTTP server to work properly. If the file is opened locally with the "file://" protocol, it will automatically access the profile data without requiring user consent.

<PRE>&lt;html&gt;

&lt;head&gt;
&lt;title&gt;Sample Profile Assistant HTML&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;form method=POST action="http://www.foobar.com/cgi/bin/collectInfo"&gt;
&lt;table&gt;
  &lt;tr&gt;
    &lt;td align="right"&gt;Last Name:       &lt;/td&gt;
    &lt;td align="left"&gt;&lt;input type=text name=user  size=32 maxlength=80&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="right"&gt;Email:       &lt;/td&gt;
    &lt;td align="left"&gt;&lt;input type=text name=email  size=32 maxlength=80&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="right"&gt;Phone #:       &lt;/td&gt;
    &lt;td align="left"&gt;&lt;input type=text name=phone  size=16 maxlength=80&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;td&gt;&lt;input type=submit&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;

&lt;script language="JavaScript"&gt;

    var profile = navigator.userProfile;

    profile.clearRequest();

    profile.addReadRequest("Vcard.LastName");
    profile.addReadRequest("Vcard.Email");
    profile.addReadRequest("Vcard.Business.Phone");

    profile.doReadRequest(1,"foobar Inc.");

    var myForm = document.forms[0];

    myForm.elements["user"].value = profile.getAttribute("Vcard.LastName");
    myForm.elements["email"].value = profile.getAttribute("Vcard.Email");
    myForm.elements["phone"].value = profile.getAttribute("Vcard.Business.Phone");

    profile.clearRequest();

&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;

</PRE>

<P>Following is a step-by-step explanation of the required elements for the Profile Assistant and how they are used in the preceding example. 

<PRE>var profile = navigator.userProfile;

</PRE>

<P>Set the variable <I>profile</I> to be client.userProfile so less typing is required. This is an optional step.

<PRE>profile.clearRequest();

</PRE>

<P>Clear the queue of requests for profile information. 

<PRE>profile.addReadRequest("Vcard.LastName");
profile.addReadRequest("Vcard.Email");
profile.addReadRequest("Vcard.Business.Phone");

</PRE>

<P>Queue up requests for user information. All fields the Web publisher wants to view should be added to the request queue at this time.

<PRE>profile.doReadRequest(1,"Foobar Inc.");

</PRE>

<P>Begin processing the current batch of read requests and display the user confirm/deny dialog box. This example shows that the Web publisher has specified a usage code of 1, indicating the data will be used for research and product development purposes. The name of the organization requesting this information is "Foobar Inc."

<PRE>myForm.elements["user"].value = profile.getAttribute("Vcard.LastName");
myForm.elements["email"].value = profile.getAttribute("Vcard.Email");
myForm.elements["phone"].value = profile.getAttribute("Vcard.Business.Phone");

</PRE>

<P>Populate the form input fields using the data obtained from the user with the <A HREF="../../dhtml/references/methods/getAttribute.htm#getAttribute_0">getAttribute</A> method. 

<PRE>profile.clearRequest();

</PRE>

<P>Clear the queue of requests for profile information. This is an optional step.

<P>When opened in the browser, the HTML file is displayed as:

<P><IMG SRC="../../art/pa_html.gif" WIDTH="526" HEIGHT="393" ALT="Example HTML File">

<P>
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>