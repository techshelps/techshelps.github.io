<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dynamic Styles</TITLE>

<META NAME=MS-HKWD CONTENT="Dynamic Styles">
<META NAME="Keywords" CONTENT="Dynamic HTML, DHTML, IE4, Internet Explorer 4.0">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="bk_dstyles"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Dynamic Styles"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../art/headbara.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Dynamic Styles"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../dhtml.htm">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="../dhtml.htm">Dynamic HTML</A>
<IMG SRC="../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="changing.htm">Changing Element Styles</A></PRE></TD></TR>
</TABLE>
<!-- NAVLINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1><A NAME="dhtml_styles">Dynamic Styles</A></H1>
<BR CLEAR=ALL>

<P>You can dynamically change the style of any HTML element in a document. You can change colors, typefaces, spacing, indentation, position, and even the visibility of text. Because the Dynamic HTML object model makes every HTML element and attribute accessible, it is easy to use scripts to dynamically read and change styles. The following section describes dynamic styles and provides a general explanation of how to use the object model to examine and modify styles.

<!-- * * * * * * * * * * * * * * * * * * * * * * *-->
<H2><A NAME="Making_Styles_Dynami">Making Styles Dynamic</A></H2>
<P>Web authors gained unprecedented control over the look of documents with the introduction of cascading style sheets (CSS) in Internet Explorer 3.0. CSS allows authors and readers to attach a style to Web pages that defines the presentation of content by modifying style attributes of corresponding HTML elements.

<P>Microsoft&#174; Internet Explorer 4.0 takes CSS technology a step further, providing the ability to dynamically change any HTML attribute, at any time, on any element. Using simple JavaScript, JScript, or VBScript (Visual Basic&#174; Scripting Edition), the attributes for any HTML element can be modified in response to any document or user event, and the page will automatically reflow without reloading the page from the server. This means that, for example, the <A HREF="../references/html/STYLE.htm#STYLE">STYLE</A> element can be changed to change an element's inline CSS style, or any other HTML attribute (such as the <A HREF="../references/properties/src_2.htm#src_2">SRC</A> attribute on an <A HREF="../references/html/IMG.htm#IMG">IMG</A> element). 

<H3><A NAME="Dynamic_Styles_Are_E">Dynamic Styles Are Easy</A></H3>
<P>You might expect that this new functionality will require that you learn a new set of HTML tags. However, dynamic styles have been designed to require no new HTML. CSS attributes can be set from the style sub-object for each element, while regular HTML attributes are accessed as properties on each element. For instance, to change the color of text within an <A HREF="../references/objects/H1.htm#H1">H1</A> heading to red when the user moves the mouse over the heading, all you need to add is a simple piece of code known as an event handler.

<PRE>&lt;H1 onmouseover="this.style.color = 'red';"&gt;Make me red&lt;/H1&gt;
</PRE>

<P>The event handler, onmouseover="this.style.color = 'red';" takes a predefined action (onmouseover) and assigns an action for it to carry out when it fires (this.style.color = 'red'). It is just as easy to change not only the style but the content of a SRC attribute in the same manner.

<PRE>&lt;IMG src="before.gif" onmouseover="this.src = 'after.gif';"&gt;
</PRE>

<P>In this example, as the mouse moves over the image, its source changes from "before.gif" to "after.gif". For more information on using event handlers, see <A HREF="../doc_object/event_model.htm#dom_event">Understanding the Event Model</A>.


<H3><A NAME="Documents_Are_Dynami">Documents Are Dynamic</A></H3>
<P>When the color of an element is changed dynamically, it still fits into the same physical space in the document as it did before the color change. This is a relatively simple task for the browser to carry out. However, there are other styles, such as <A HREF="../references/properties/fontSize.htm#fontSize">fontSize</A> or <A HREF="../references/properties/fontFamily.htm#fontFamily">fontFamily</A>, that, when changed, actually change the size of the element and the amount of space required to display that element in the document. Internet Explorer 4.0 handles each such change automatically by reflowing a document to ensure that all the elements fit perfectly without reloading the document from the server. 

<PRE>&lt;html&gt;
&lt;body&gt;
This is some text. 
&lt;span style="color:blue" onclick="this.style.fontSize = '30'"&gt;

This is more text.&lt;/span&gt;
This is even more text. 
&lt;/body&gt;
&lt;/html&gt;
</PRE>

<P><BUTTON onclick="if (CheckCAB(3)) {window.open('../../../samples/dhtml/overview/style_01.htm')} else { ALink(3, 'comp3.htm') }">Show Me</BUTTON>
<BR CLEAR=ALL><P>Initially, the document has two lines of text, identical in font size and color. After clicking "This is more text," the text changes, increasing in size and changing to blue. The browser automatically adjusts the line spacing to accommodate the new text size.

<H3><A NAME="Powerful_Attributes">Powerful Attributes</A></H3>
<P>Because Internet Explorer 4.0 automatically reflows the document when attribute values change, some very powerful functionality can be built with very small amounts of code. For example, using the CSS <A HREF="../references/css/display.htm#display">display</A> attribute, you can make elements on the page disappear, and treat them as if they were never on the page in the first place. 

<PRE>&lt;html&gt;
&lt;body&gt;
&lt;div style="cursor: hand" onclick="toggle(document.all.HideShow);"&gt;
Click Here&lt;/div&gt;
&lt;span style="color: blue" id=HideShow&gt;This will go away&lt;/span&gt;&lt;br&gt;
This is some text
&lt;script&gt;
function toggle(e) {
  if (e.style.display == "none") {
     e.style.display = "";
  } else {
     e.style.display = "none";
  }
}
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</PRE>

<P><BUTTON onclick="if (CheckCAB(3)) {window.open('../../../samples/dhtml/overview/style_02.htm')} else { ALink(3, 'comp3.htm') }">Show Me</BUTTON>
<BR CLEAR=ALL><P>This HTML displays three lines. When the user clicks the line that says "Click Here", the browser changes the <A HREF="../references/css/display.htm#display">display</A> attribute of the <A HREF="../references/html/SPAN.htm#SPAN">SPAN</A> element with the text "This will go away" to display: none, and the text beneath shifts up to occupy its space. When clicked again, the <B>display</B> attribute is reset so that the "Click Here" text is visible again. 

<P>Notice that by simply setting display: none on an element, it disappears and the browser automatically reclaims the space it occupied. This mechanism can be used to create pages that display new information, such as an expandable table of contents, as the user interacts with individual entries. The two supported values for the <A HREF="../references/properties/display.htm#display">display</A> property are none and "" (or null). 

<P>The sample above also makes use of the CSS <A HREF="../references/css/cursor.htm#cursor">cursor</A> attribute. The cursor attribute allows a Web author to specify what the cursor will look like when it is over an element. In this case, the hand cursor was chosen to indicate that the text titled "Click Here" would perform an action when clicked, just like a text link on a Web page. Using the <B>cursor</B> attribute eliminates the need to use an anchor tag to have the cursor change to a hand, indicating the contents are "clickable". 

<P>The set of valid values for the <B>cursor</B> attribute are crosshair, default, hand, move, e-resize, ne-resize, nw-resize, n-resize, se-resize, sw-resize, s-resize, w-resize, text, wait, and help. 

<P>While the <A HREF="../references/css/display.htm#display">display</A> property makes an element invisible and allows the browser to reclaim the space that it occupied, the <A HREF="../references/css/visibility.htm#visibility">visibility</A> property can be used to simply make an element disappear, but still reserve its space in the document. 

<P>The following example is identical to the previous demonstration, except it uses the <A HREF="../references/css/visibility.htm#visibility">visibility</A> property instead of the <A HREF="../references/css/display.htm#display">display</A> property.

<PRE>&lt;html&gt;
&lt;body&gt;
&lt;div style="cursor: hand" onclick="toggle(document.all.HideShow);"&gt;

Click Here&lt;/div&gt;
&lt;span style="color: blue" id=HideShow&gt;This will go away&lt;/span&gt;&lt;br&gt;
This is some text
&lt;script&gt;
function toggle(e) {
  if (e.style.visibility == "hidden") {
     e.style.visibility = "visible";
  } else {
     e.style.visibility = "hidden";
  }
}
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</PRE>

<P><BUTTON onclick="if (CheckCAB(3)) {window.open('../../../samples/dhtml/overview/style_03.htm')} else { ALink(3, 'comp3.htm') }">Show Me</BUTTON>
<BR CLEAR=ALL><P>Notice how in this example the line of text will become invisible, but the content below does not shift up to reclaim its space. 

<H3><A NAME="Special_Consideratio">Special Considerations</A></H3>
<P>You might have noticed that many CSS properties have a dash in their name (such as background-color). The dash, as you may know, isn't a valid character for identifiers in most scripting languages. To get around this little problem, continue to use the dashed name when specifying the CSS attribute in HTML or in a style sheet, but when accessing the attribute as a script property, remove the dash, and capitalize the next letter. For example: 

<P><B>background-color</B> becomes <B>backgroundColor</B> 

<P><B>border-left</B> becomes <B>borderLeft</B> 

<P><B>margin-bottom</B> becomes <B>marginBottom</B> 

<P>The CSS attribute names specified in the HTML or style sheet are listed in the <A HREF="../references/css/attributes.htm#ie40_cssref">CSS Attributes</A> section of the SDK. The corresponding scriptable properties are listed as properties of the style object in the <A HREF="../references/objects/objects.htm#om40_objects">Objects</A> section of the SDK. 

<P>Also notice that while any CSS property can be set at any time, the current settings on the <A HREF="../references/html/STYLE.htm#STYLE">STYLE</A> element will only reflect its inline styles, and not any inherited styles that are defined in a global style sheet with a <B>STYLE</B> or <A HREF="../references/objects/LINK.htm#LINK">LINK</A> tag. The following example shows what happens when a style is defined both globally and inline.

<PRE>&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
.class1 {font-family: arial}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id=SetByClass class=Class1&gt;Set By Class&lt;/div&gt;
&lt;div style="font-family: arial"&gt;
      &lt;div id=Inherited&gt;Inherited&lt;/div&gt;
&lt;/div&gt;
&lt;div id=DirectlySet style="font-family: arial"&gt;Directly Set&lt;/div&gt;
&lt;div id=SetWithScript&gt;Set with Script&lt;/div&gt;
&lt;script&gt;
      alert(SetByClass.style.fontFamily);
      alert(Inherited.style.fontFamily);
      alert(DirectlySet.style.fontFamily);
      SetWithScript.style.fontFamily = "arial";
      alert(SetWithScript.style.fontFamily);
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</PRE>

<P><BUTTON onclick="if (CheckCAB(3)) {window.open('../../../samples/dhtml/overview/style_04.htm')} else { ALink(3, 'comp3.htm') }">Show Me</BUTTON>
<BR CLEAR=ALL><P>When this document loads, four alert dialog boxes pop up successively. The first two are blank, while the next two contain the text "arial." While all the text on the document is Arial, referencing style.fontFamily will show "arial" only on the <A HREF="../references/objects/DIV.htm#DIV">DIV</A> that had the <A HREF="../references/css/font-family.htm#font_family">font-family</A> property set with an inline style or was previously set with script. 

<H3><A NAME="Additional_Topics">Additional Topics</A></H3>
<P>With Internet Explorer 4.0, authors have total control over all attributes of all elements, at any time. Changes made to attributes that cause the page to change shape are handled automatically, with no additional script intervention by the author. Changing attributes through script can be done simply with inline script, or by pointing to a function where the element is accessed through a collection on the document. For more information about accessing elements through collections, see <A HREF="../doc_object/scripting_elements_collections.htm#dhtml_elements">Scripting with Elements and Collections</A>, or simply dive into the reference for details on the document collections and details on each HTML attribute that can be changed. You might also want to check out the event bubbling information for how to bind event handlers to one of the many events that the document can fire. The following topics describe some specific topics of dynamic styles:

<UL>
<LI><A HREF="changing.htm#dhtml_change">Changing Element Styles</A>
<LI><A HREF="style_sheets.htm#dhtml_managing">Managing Style Sheets</A>
<LI><A HREF="printing.htm#dhtml_printing">Style Sheets and Printing</A>
</UL>

<H3>Related SDK sections:</H3>

<UL>
<LI><A HREF="../doc_object/scripting_elements_collections.htm#dhtml_elements">Scripting with Elements and Collections</A>
<LI><A HREF="../doc_object/event_model.htm#dom_event">Understanding the Event Model</A>
<LI><A HREF="../references/css/attributes.htm#ie40_cssref">CSS Attributes</A>
<LI><A HREF="../references/html/elements.htm#ie40_htmlref">HTML Elements</A>
<LI><A HREF="../references/objects/objects.htm#om40_objects">Objects</A>
</UL>
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>