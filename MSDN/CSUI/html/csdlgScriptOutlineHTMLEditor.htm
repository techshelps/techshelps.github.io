<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Script Outline, HTML Editor</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="csdlgscriptoutlinehtmleditor"></a>Script Outline Window</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csdlgScriptOutlineHTMLEditor_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csdlgScriptOutlineHTMLEditor_T">
</object></p>
<p>
The Script Outline window displays the available object model for your document and the scripts on the page when you are working in Source view of the HTML editor. In the Script Outline window, you can:
<ul type=disc>
<li>
Display a tree view of all elements on your page that have their ID or NAME attribute set.<br><br></li>
<li>
Display events for each element.<br><br></li>
<li>
Navigate quickly to any script in the page.<br><br></li>
<li>
Quickly create new handlers for events on the page.</li>
</ul>
<p>
The Script Outline window is available in Source view of the HTML editor. In its initial state, the tree view displays nodes listed in the following table:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=blue width=39%><b>Node</b></td>
<td class=blue width=61%><b>Contains</b></td>
</tr>
<tr valign=top>
<td width=39%>Client Objects and Events</td>
<td width=61%>A hierarchy of the elements that support client script or have client script attached. Under the node for each element is a list of the events for which you can write handlers.</td>
</tr>
<tr valign=top>
<td width=39%>Client Scripts</td>
<td width=61%>A set of nodes for each client script on the page. There is a node for each script block on the page, and a separate node for each function or subroutine defined within a script block. <p>
There is also a node for inline scripts defined as part of a control definition, as in this example:</p>
<pre><code>&lt;INPUT TYPE="button" 
NAME="button1" 
ONCLICK="alert('Clicked!')"&gt;</code></pre>
</td>
</tr>
<tr valign=top>
<td width=39%>Server Objects and Events</td>
<td width=61%>A list of nodes for each element that supports server script or that has server script attached. Under each node is a list of the event for which you can write handlers.<p>
The Server Object and Events node also displays the Microsoft Internet Information Server object model, including the Session object, Application object, and so on. In the Script Outline window, these objects do not display events.</p>
</td>
</tr>
<tr valign=top>
<td width=39%>Server Scripts</td>
<td width=61%>A set of nodes for each server script on the page. Functions and subroutines are identified by name. Inline server script appears in tree, but is not identified by name.</td>
</tr>
</table><br>
<p class=indent>
<b>Note</b> &nbsp; The Script Outline does not include elements that are added to a page using an INCLUDE file.</p>
<h2>Navigating to Scripts</h2>
<p>
You can use the Script Outline window to move between scripts.</p>
<p class=blue>
<b>To navigate between scripts</b>
<ul type=disc>
<li>
Expand the appropriate script node in the Script Outline window until you see the script you want to go to, and then click the script's name. The insertion point in the edit pane moves to the script.</li>
</ul>
<p>
If you are working in a script in the edit pane, you can synchronize the Script Outline window so you can see where you are in the context of the whole page.</p>
<p class=blue>
<b>To synchronize your position with the Script Outline window</b>
<ul type=disc>
<li>
Right click anyehwere in the Script Outline window, and then select <b>Synch Script Outline</b>.</li>
</ul>
<h2>Creating Scripts</h2>
<p>
When you expand the node for an object in the Script Outline window, the node displays a list of events for which you can create a handler. If the event name is bold, a handler already exists for that event.</p>
<p>
You can create new event handlers for events listed in the Script Outline window. You can also insert new script blocks even if they are not associated with a particular event.</p>
<p class=blue>
<b>To create a new event handler</b>
<ol>
<li>
Expand the appropriate object node until you see the event name for which you want to create a script<br><br></li>
<li>
Double-click the name of the event.<p class=tl>
The editor inserts a new script block with a skeleton handler for the event you selected. The handler is created in the default language for the current context. For example, if you are creating a server script, the handler is in the default language for the server.
</li>
</ol>
<h2>Arranging Scripts</h2>
<p>
You can arrange the nodes or script either by declaration or alphabetically.</p>
<p class=blue>
<b>To arrange scripts</b>
<ul type=disc>
<li>
Right click anywhere in the <b>Script Outline</b> window, select <b>Sort</b>, and then select <b>Alphabetically</b> or <b>By Declaration</b>.</li>
</ul>
<p>
If you arrange scripts by declaration, each script block has a node. When you open the node, it displays the names of individual procedures (functions or subroutines) and public variable. The nodes are arranged according to their order in the page.</p>
<p>
If you arrange script nodes alphabetically, the scripts are displayed as individual nodes by their name. Script blocks that do not contain named procedures are displayed in order according to the name of the language in which they are written (for example, VBScript). If a script block contains only one procedure, the procedure name is displayed.</p>
</BODY>
</HTML>
