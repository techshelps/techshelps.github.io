<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>New Breakpoint Dialog Box</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="csdlgnewbreakpointsdialogbox"></a>New Breakpoint Dialog Box</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csdlgNewBreakpointsDialogBox_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csdlgNewBreakpointsDialogBox_T">
</object></p>
<p>
Allows you to specify a new named breakpoint.</p>
<p>
In the New Breakpoint dialog box you can:
<ul type=disc>
<li>
Create a breakpoint for a method in your project.<br><br></li>
<li>
Define a conditional expression for the breakpoint.<br><br></li>
<li>
Specify the number of times a breakpoint should be hit before stopping code execution.</li>
</ul>
<h2>Options</h2>
<h3>Location</h3>
<p class=dt>
<b>Name</b></p>
<p class=indent>
Displays the name of the function that the breakpoint is assigned to. If you enter a method name in this text box, the development environment will search your projects, predefined classes, and all available packages for the method and place a breakpoint on the first valid line of code in the method. If multiple methods exist with the same name, the Choose Breakpoints dialog box is displayed. In this dialog box you can choose the method in which you want to set a breakpoint.</p>
<p class=atl>
<span class=blue><b>Note</b></span>&nbsp;&nbsp;&nbsp;If you enter a class name, all of the methods of that class are displayed.</p>
<p class=dt>
<b>File</b></p>
<p class=indent>
Displays the name of the file that contains the breakpoint and the line in the file where the breakpoint exists. You cannot edit this text box.</p>
<h3>Condition</h3>
<p>
Displays the conditional expression defined for this breakpoint (if one has been defined). Conditional breakpoints allow you to define a condition that causes the breakpoint to stop code execution on the breakpoint's line of code. Otherwise, the breakpoint will be bypassed and the program will continue to run.</p>
<p class=dt>
<b>Is True</b></p>
<p class=indent>
When selected, indicates that the condition is true.</p>
<p class=dt>
<b>Is Changed</b></p>
<p class=indent>
When selected, indicates that the condition has changed.</p>
<h3>Hit Count</h3>
<p>
When selected, the specified breakpoint will only stop code execution when one of the conditions specified in the Hit Count section occurs.</p>
<p class=dt>
<b>Break When Hit Count</b></p>
<p class=indent>
Allows you to specify a hit count situation that must occur for the breakpoint to stop code execution.</p>
<p class=tl>
<b>Is Equal To</b>&nbsp;&nbsp;&nbsp;This option causes the breakpoint to stop code execution when the breakpoint is hit a certain number of times. The text box provided allows you to specify the number of hits the breakpoint should wait until stopping code execution.</p>
<p class=tl>
<b>Is A Multiple Of</b>&nbsp;&nbsp;&nbsp;This option causes the breakpoint to stop code execution when the breakpoint hit count is a multiple of the number specified in the provided text box.</p>
<p class=tl>
<b>Is Greater Than or Equal To</b>&nbsp;&nbsp;&nbsp;This option causes the breakpoint to stop code execution when the breakpoint hit count is greater than or equal to the number specified in the provided text box.</p>
<p class=dt>
<b>Current Hit Count</b></p>
<p class=indent>
Displays the current number of times that a breakpoint's code has been carried out. This display increments only during debugging.</p>
<p class=dt>
<b>Reset</b></p>
<p class=indent>
Resets the hit count to zero.</p>
</BODY>
</HTML>
