<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Directory Access Callback Functions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_using_directory_access_callback_functions"></a>Using Directory Access Callback Functions</h2>
<p>
Certain <a href="glossary_1oo4.htm#_edk_directory_access_functions">directory access functions</a> let you use callback functions, which provide added control. For example, an application can receive exported data directly instead of having the data exported to a file on the disk. To do this, the application specifies an export callback function when the <a href="function_1cac.htm"><b>BatchExport</b></a><b> </b>function is called. When the <b>BatchExport</b> function executes, it calls the callback function once for each entry it exports, passing it a pointer to the exported data. This functionality lets you use the <b>BatchExport</b> function for line-by-line exporting.</p>
<p>
The three different kinds of callback functions are specified in the parameters passed in calls to export functions. For example, the <b>BatchExport</b> function takes one parameter, <i>lpBexportParms</i> (a pointer to a <a href="structs_4nxv.htm"><b>BEXPORT_PARMS</b></a> structure), which contains parameters for directory export operations. <b>BEXPORT_PARMS</b> contains all three fields used to specify callback functions. If the pointer to the callback structure is left NULL, default behavior — described for each callback in this list — is invoked.
<ul>
<li>
The <b>ProgressCallBacks</b> structure contains pointers to functions used to display the progress of the export operation. When the <b>BatchExport</b> function finishes executing an atomic export operation, it calls one or more of the progress callback functions, which, for example, can increment a counter or otherwise display progress information. Default behavior means that <b>BatchExport</b> displays progress information in a standard progress dialog box. </li>
<li>
The <b>ErrorCallback</b> structure holds the address of a function to be called for each error encountered. Default behavior means that <b>BatchExport</b> writes errors to the Windows NT event log. </li>
<li>
The <b>ExportCallback</b> structure holds the address of a function that is called once for each entry exported from the directory. When <b>BatchExport</b> calls this function, it passes a pointer to the exported data. Default behavior means that <b>BatchExport</b> exports data into an export file indicated by <b>pszExportFile</b>. </li>
</ul>
<p>
The <a href="function_45mc.htm"><b>NTExport</b></a> and <a href="function_4sfo.htm"><b>NWExport</b></a> functions are used to export user accounts from Windows NT and Novell NetWare Servers respectively, so that that this data can later be imported into a Microsoft Exchange Server directory. These two functions are called in order with the <a href="structs_3q9f.htm"><b>NTEXPORT_PARMS</b></a> and <a href="structs_9x2r.htm"><b>NWEXPORT_PARMS</b></a> structures acting as parameters. These structures in turn contain the <b>ProgressCallBacks</b> and <b>ErrorCallback</b> members, as well as the <b>ExportCallback</b> member, which is used to point to an export callback function.</p>
<p>
Callbacks can also be used when importing data. The <a href="structs_5k1f.htm"><b>BIMPORT_PARMS</b></a> structure (which contains the <b>ProgressCallBacks</b> and <b>ErrorCallback</b><i> </i>members) is used as a parameter for the <b>BatchImport</b> function. In this case, the appropriate functions specified in <b>ProgressCallBacks</b> are called each time a line is imported from the import file.</p>
<p>&nbsp;</p></body>
</HTML>
