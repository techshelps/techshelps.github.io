<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Extension-Data Attribute</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_edk_using_the_extension_data_attribute"></a>Using the Extension-Data Attribute</h1>
<p>
Every directory object can store two kinds of data: standard configuration data provided by the <a href="glossary_1ood.htm#_edk_microsoft_exchange_server_administrator_program">Microsoft Exchange Server Administrator program</a>, and extension (custom) data provided by an <a href="glossary_1oo1.htm#_edk_administrator_extension_dll">Administrator extension DLL</a>. <a href="glossary_1oo5.htm#_edk_extension_data">Extension data</a> is stored in the Extension-Data attribute. You can use extension data on any individual <a href="glossary_1oof.htm#_edk_object">object</a> in the <a href="glossary_1oo4.htm#_edk_directory">directory</a>, including your application's object and other objects it may interact with.</p>
<p>
You should implement extension data when your application needs to expose information about itself that is outside the application's schema. A&nbsp;common example is the use of extension data to configure an application's general behavior. For example, any application that processes messages could store the following as extension data:
<ul>
<li>
The default number of attempts at sending a message.</li>
<li>
The maximum number of threads to use for processing messages.</li>
<li>
The polling interval: a setting that determines whether to use notifications to look for incoming messages or to poll for them after set intervals.</li>
<li>
A line-wrap setting: the maximum number of characters to keep on each line in the body of a message is processing.</li>
</ul>
<p>
</p>
<p>
The Extension-Data attribute is a multivalued, binary attribute available on all directory objects. Each value in the attribute has a maximum size of 64K. It&nbsp;is used to associate application-specific custom data with a Microsoft Exchange Server directory object. </p>
<p>
Because more than one application can associate its custom data with the same object, the Administrator extension functions allow each binary part of the Extension-Data attribute to be assigned a unique owner tag. An owner tag is a null-terminated Unicode string added to the start of each Extension-Data binary part. This Unicode string must be in Intel (little-endian) byte order. </p>
<p>
The following diagram shows a directory object with an Extension-Data attribute. The Extension-Data attribute has two binary parts, which are identified by their owner tags, Ext1 and Ext2.</p>
<p>
<img src="images/edg10_09.gif" border=0></p>
<p>
<b>Extension Data attribute on a directory object</b></p>
<p>
The following diagram shows the value whose owner tag is Ext2. Within this value, the data in the data fields that follow can be of varying types. </p>
<p>
<img src="images/edg10_10.gif" border=0></p>
<p>
<b>The Extension Data attribute consists of an owner tag and a data section</b></p>
<p>&nbsp;</p></body>
</HTML>
