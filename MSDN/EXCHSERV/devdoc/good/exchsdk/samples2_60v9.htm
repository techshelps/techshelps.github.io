<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the .CSV File</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_using_the_.csv_file"></a>Using the .CSV File</h2>
<p>
FIMPORT logs on to <a href="glossary_1ood.htm#_edk_mapi">MAPI</a> using the profile specified in the command line. It opens the .CSV formatted text file specified in the command line, parses the first line of the .CSV file for additional parameters, and parses the second line of the file for column headings. </p>
<p>
FIMPORT determines from a table of MAPI and Microsoft Exchange Server message properties whether each column in the .CSV file refers to a standard message property or to a named property. For named properties, the property type is governed by a prefix on the column header, and defaults to TEXT. Then FIMPORT appends, updates or replaces the information in each message with the information from the file.</p>
<p>
The text of the FIMPORT2.CSV file that serves as input to FIMPORT is as follows:</p>
<pre><code>Command, Folderpath=@DEFAULT\@PR_IPM_INBOX_ENTRYID, Class=IPM.Note
pr_subject, pr_body, attach, s:Message Number In French
Message Number One,Here is the first message.,fimport2.txt,Un
Message Number Two,Here is the second message.,fimport2.txt,Deux
Message Number Three,Here is the third message.,fimport2.txt,Trois
 </code></pre>
<h4>CSV File Format</h4>
<p>
The first line of the .CSV file is an optional command line that is interpreted along with the typed command line. The second line of the .CSV file, which is required, is a definition of the columns with each column representing a property that will be replaced in each message of the destination folder. The remainder of the file consists of the values for each column. The format is as follows:</p>
<p>
<b>&lt;<i>File</i>&gt; ==  [&lt;<i>Firstline</i>&gt;] &lt;<i>Secondline</i>&gt; &lt;<i>CSVBody</i>&gt;</b> <b>EOF</b></p>
<p>
<b>&lt;<i>Firstline</i>&gt; </b>==&nbsp;<b>[</b>"<b>COMMAND,</b>"<b>]</b> </p>
<p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>[&lt;<i>Operation</i>&gt; ","]</b> </p>
<p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>[FOLDERPATH=&lt;<i>Folder path</i>&gt; ","]</b> </p>
<p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>[CLASS=&lt;<i>MessageClass</i>&gt; ","]</b> </p>
<p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>[SETREAD</b> <b>","]</b> </p>
<p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>[EFD]</b> </p>
<p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>EOL</b></p>
<p>
<b>&lt;<i>Secondline</i>&gt; == &lt;<i>ColumnList</i>&gt;</b> <b>EOL</b></p>
<p>
<b>&lt;<i>CSVBody</i>&gt;</b> == <b>&lt;<i>Thirdline</i>&gt;</b> <b>[&lt;<i>CSVBody</i>&gt;]</b></p>
<p>
<b>&lt;<i>Thirdline</i>&gt;</b> <b>== &lt;<i>PropValueList</i>&gt;</b> <b>EOL</b></p>
<p>
<b>&lt;<i>ColumnList</i>&gt;</b> == <b>&lt;<i>Column</i>&gt;</b> <b>","</b> <b>[&lt;<i>ColumnList</i>&gt;]</b></p>
<p>
<b>&lt;<i>PropValueList</i>&gt;</b> == <b>&lt;<i>PropValue</i>&gt;</b> "<b>,</b>" <b>[&lt;<i>PropValue</i>&gt;]</b></p>
<p>
<b>&lt;<i>Column</i>&gt; == [&lt;<i>TypePrefix</i>&gt;] &lt;<i>PropName</i>&gt;</b></p>
<p>
<b>&lt;<i>PropName</i>&gt;</b> == any valid property tag string - for standard properties they would typically be prefixed with PR</p>
<p>
TypePrefix ==  <b>L:</b> | <b>S:</b> | <b>T:</b> | <b>U:</b></p>
<h4>Notes  </h4>
<p>
The same number of terms should appear in <b>&lt;<i>Secondline</i>&gt; </b>as in <b>&lt;<i>Thirdline</i>&gt;</b></p>
<p>
Type prefixes</p>
<p>
<b>L - PT-LONG</b></p>
<p>
<b>S - PT-STRING</b></p>
<p>
<b>T - PT-SYSTIME</b></p>
<p>
<b>U - PT-UNICODE</b></p>
<p>
<b>B -</b> <b>PT-BOOLEAN</b></p>
<p>
Default is <b>PT-STRING</b></p>
<p>
In the FIMPORT2.CSV sample file shown above, the first line of the file uses special characters signified by the @sign. These special characters cause the process to read the corresponding properties from the environment. The @DEFAULT entry causes the name of the default message store to be used. @IPM_* is a special equate that is passed in to <b>HrMAPIFindFolderEx</b>() which returns the designated property value. These characters can be used on the command line or in the first line of the file. </p>
<p>
The ATTACH keyword, which is located in the second (column definitions) line of FIMPORT2.CSV as shown above, is a special value that can be used in place of a property name. It indicates that this column contains a list of files that will be attached to the message rather than a normal property value.</p>
<p>&nbsp;</p></body>
</HTML>
