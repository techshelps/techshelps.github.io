<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Calling the Advise Function to Start Notifications</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_calling_the_advise_function_to_start_notifications"></a>Calling the Advise Function to Start Notifications</h2>
<p>
The client side of the Microsoft Exchange Server information store provider buffers calls to the MAPI <b>Advise</b> function, and does not send it to the server until it is forced through by a later function call. In other words, although there is no MAPI_DEFERRED_ERRORS flag on the <b>Advise</b> function, a call to <b>Advise</b> works as if this flag is available and always set.</p>
<p>
This means that an application cannot simply call <b>Advise</b> and wait for notifications to appear. It must call <b>Advise</b> and then, for example, call <b>IMAPIProps::GetProps</b> on a property known not to be cached on the client. This <b>GetProps</b> call can be executed on any object, such as the information store itself.</p>
<p>
An RPC can initiate the return of notifications, but an <b>Advise</b> call itself does not force an RPC.</p>
<p>
If your application is about to make several function calls, one of which is <b>Advise</b>, make sure that <b>Advise</b> is not the last call. For example, this order is incorrect:
<ol>
<li>
<b>OpenNote</b></li>
<li>
<b>OpenEntry</b></li>
<li>
<b>GetProps</b></li>
<li>
<b>Advise</b> (on the new message)</li>
</ol>
<p>
The following order is correct because at least one call after <b>Advise</b> causes an RPC:
<ol>
<li>
<b>OpenNote</b></li>
<li>
<b>OpenEntry</b></li>
<li>
<b>Advise</b> (on the new message)</li>
<li>
<b>GetProps</b></li>
</ol>
<p>
If you are working with a table, you could also call the <b>QueryRows</b> function, which causes an RPC and forces any <b>Advise</b> requests to the server.</p>
<p>
To summarize, call <b>Advise </b>in a way that you know causes the information store (server side) to receive the <b>Advise</b> call to make sure notifications are enabled, and then check that there is a mechanism by which the store sends notifications.</p>
<p>&nbsp;</p></body>
</HTML>
