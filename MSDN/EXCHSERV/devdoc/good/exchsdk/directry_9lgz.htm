<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Associated Windows NT Accounts</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_edk_working_with_associated_windows_nt_accounts"></a>Working with Associated Windows NT Accounts</h3>
<p>
Using the <a href="glossary_1ood.htm#_edk_microsoft_exchange_server_administrator_program">Microsoft Exchange Server Administrator program</a>, you can set or change the Windows NT account associated with a Microsoft Exchange mailbox. You make this setting on the <b>General</b> property page for the Recipient object, using the <b>Primary Windows NT Account</b> button.</p>
<p>
Setting the Primary Windows NT Account has these results:
<ul>
<li>
It determines the Windows NT security account that will have mailbox owner permissions on the mailbox. These directory <a href="glossary_1oog.htm#_edk_permission">permissions</a> are granted only within the directory on the mailbox object for the security account, and are unrelated to the Windows NT security privileges held by that account.</li>
<li>
It links the Windows NT security account to the <a href="objects_00ms.htm">mailbox object</a>. This allows for linked administration of the mailbox and the security account, but has no affect on the account's <a href="glossary_1oon.htm#_edk_windows_nt_server_security">Windows NT security</a> privileges.</li>
</ul>
<p>
Windows NT security privileges are granted or denied to Windows NT security accounts through the data structure known as a <a href="glossary_1oon.htm#_edk_windows_nt_security_descriptor">Windows NT security descriptor</a>. It describes specific object-access permissions granted to specific security accounts. For example, a mailbox's Primary Windows NT Account — identified by the <a href="sch_attr_8a5w.htm">Assoc-NT-Account</a> attribute — has its own entry in the NT Security Descriptor, which in turn is stored in the <a href="sch_attr_3tma.htm">NT-Security-Descriptor</a> attribute.  </p>
<p>
The Assoc-NT-Account attribute does not contain the security account's textual name, but rather a binary string known as a <a href="glossary_1ooj.htm#_edk_security_identifier_sid_">security identifier (SID)</a>. Every object in the Windows NT Security Domain has a SID, and most, such as Windows NT user accounts, also have names — for example, REDMOND\fredb.</p>
<p>
The directory access functions provide a mapping between the text name of the security account and the binary SID. The <a href="function_1v1w.htm"><b>BatchImport</b></a> and <a href="function_1q79.htm"><b>DAPIWrite</b></a> functions accept a Windows NT Account name and call the Win32 function <b>LookupAccountName</b> to obtain a SID. <a href="function_1cac.htm"><b>BatchExport</b></a> and <a href="function_26qs.htm"><b>DAPIRead</b></a> obtain the account name by calling the Win32 <b>LookupAccountSid</b> function . For more information, see<a href="compnent_3zw9.htm"> About Directory Security</a>.</p>
<h4>Using the Primary Windows NT Account Attribute</h4>
<p>
You can also work with the Primary Windows NT Account value programmatically. To do this with directory access functions, you would look up (export) or change (import) the <a href="sch_attr_8a5w.htm">Assoc-NT-Account</a> attribute. With MAPI, this attribute is accessible as the <a href="props2_06t0.htm">PR_EMS_AB_ASSOC_NT_ACCOUNT</a> property. </p>
<h4>Making Security Settings with the Directory Access Functions</h4>
<p>
When a Primary Windows NT account is assigned to a mailbox, the directory access functions automatically modify the underlying security attribute (<a href="sch_attr_3tma.htm">NT-Security-Descriptor</a>) to grant mailbox owner rights to the account. This permissions change can take effect only if the application calling directory access functions is running under an account that has a <a href="compnent_1u43.htm">role</a> of Permissions Admin, rather than just Admin. </p>
<p>
The directory access functions do not allow complete manipulation of security settings. For example, while you can use the directory access <a href="directry_6cz7.htm">pseudo attributes</a> to assign roles like User, Admin, and Permissions Admin, you cannot set the arbitrary rights combinations that you could set from the Administrator program. </p>
<p>
You can, however, import an NT-Security-Descriptor setting, but only when using directory access <a href="directry_6ixx.htm">raw mode</a>. That is, you can build a Windows NT security descriptor using standard Windows NT security functions (such as <b>LookupAccountSid</b>), but to place it in the NT-Security-Descriptor attribute you need to call a directory access import function (<a href="function_1v1w.htm"><b>BatchImport</b></a> or <a href="function_1q79.htm"><b>DAPIWrite</b></a>) with the DAPI_RAW_MODE control flag set. If you are attempting to set the <a href="glossary_1oon.htm#_edk_windows_nt_security_descriptor">security descriptor</a>, it will need to be a self-relative security descriptor. (For more information on absolute and self-relative security descriptors, see Security Descriptors in the Microsoft Platform SDK.)</p>
<h4>Making Security Settings with MAPI</h4>
<p>
If you have used MAPI to set the <a href="props2_06t0.htm">PR_EMS_AB_ASSOC_NT_ACCOUNT</a> property, you will need to grant mailbox owner rights as well. Because this attribute on its own does not grant rights, the main underlying security attribute (PR_EMS_AB_NT_SECURITY_DESCRIPTOR) must also be updated to specify the rights you want the mailbox owner to have. </p>
<p>
You will now need to add the account to the Windows NT security descriptor with the correct ACCESS_MASK structure.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To add a new Windows NT account to the Windows NT security descriptor</h5>
<p>
This simplified procedure contains the basic steps for adding a Windows NT account. For more complete information, see the Platform SDK documentation, including the overview of <a href="glossary_1oon.htm#_edk_windows_nt_server_security">Windows NT security</a>. </p>
<p>
Before you begin, you need to know the Windows NT account name (or SID), the name of the security domain the account will be a member of, and the permissions to be granted to the account.
<ol>
<li>
If you do not already know the SID for the account in the appropriate security domain, obtain it by calling the Win32 security function <b>LookupAccountName</b>.  </li>
<li>
Place this SID with the appropriate rights in an access control entry (ACE) in an <a href="glossary_1oo1.htm#_edk_access_control_list_acl_">access control list (ACL)</a> in a <a href="glossary_1oon.htm#_edk_windows_nt_security_descriptor">security descriptor</a>. <p>
In order to grant or revoke specific permissions to given Windows NT Accounts, you need to set the correct bits in the ACCESS_MASK structure in the access control entry when you build the security descriptor. For more information on the ACCESS_MASK structure, see the Win32 Structures documentation in the "Reference" section of the Microsoft Platform SDK. 
</li>
<li>
Convert this security descriptor into self-relative form (so that all members of the Win32 SECURITY_DESCRIPTOR structure are located contiguously in memory) for storage on the <a href="props3_34xe.htm">PR_EMS_AB_NT_SECURITY_DESCRIPTOR</a> property. </li>
</ol>
<p>&nbsp;</p></body>
</HTML>
