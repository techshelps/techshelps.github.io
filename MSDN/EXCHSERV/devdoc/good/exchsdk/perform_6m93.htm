<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the MAPI_DEFERRED_ERRORS Flag</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_using_the_mapi_deferred_errors_flag"></a>Using the MAPI_DEFERRED_ERRORS Flag</h2>
<p>
The primary purpose of the MAPI_DEFERRED_ERRORS flag is to defer error reporting. You can also use this flag to reduce RPCs generated by an application. When the MAPI_DEFERRED_ERRORS flag is set, error reporting is deferred until the <b>IMAPIProp::GetHierarchyTable</b> method or the <b>GetProps</b> method is called. A secondary effect is that function calls are also deferred until the information is actually required. For example, when the MAPI_DEFERRED_ERRORS flag is set, the MAPI <b>OpenEntry</b> function will execute. It will not, however, actually open a <a href="glossary_1oo6.htm#_edk_folder">folder</a> and require an RPC until information is requested from the folder. The <b>OpenEntry</b> call and the information request are cached at the client. </p>
<p>
Using the MAPI_DEFERRED_ERRORS flag makes error handling slightly more difficult because the calling application does not immediately receive the information for the <b>OpenEntry</b> call. If the folder you want to open does not exist, you will not see the error until you actually try to retrieve information from the <a href="glossary_1ooj.htm#_edk_server">server</a>. To minimize this problem, make your error handling more generic and plan for events that may occur in later function calls.</p>
<p>
The MAPI_DEFERRED_ERRORS flag also adds some complexity to the client and even more complexity to providers, but it dramatically reduces the number of RPCs. Testing shows that using MAPI_DEFERRED_ERRORS can reduce network overhead as much as 50 percent by reducing the number of round trips to the server, as well as increasing scalability of the server. </p>
<h4>Example: Using the MAPI_DEFERRED_ERRORS Flag</h4>
<p>
A <a href="glossary_1oo3.htm#_edk_client_application">client application</a> requests information from the server every 30 seconds by calling the <b>GetContentsTable</b>, <b>SetColumns</b>, and <b>GetRowCount</b> methods. The first call to <b>GetContentsTable</b> causes an RPC, and then <b>SetColumns</b> and <b>GetRowCount</b> each cause an RPC. </p>
<p>
If the MAPI_DEFERRED_ERRORS flag is set on the <b>GetContentsTable</b> function call, all three operations are combined into one RPC. This significantly enhances the application’s performance.</p>
<p>
</p>
<p>
<b>Note</b>  The advantage gained by using the MAPI_DEFERRED_ERRORS flag varies according to service provider. A client application working with an information store service provider running on a remote server may perform much more quickly with the MAPI_DEFERRED_ERRORS flag set. However, if the same client application is working with an <a href="glossary_1oo9.htm#_edk_information_store">information store</a> service provider running on the local computer, it may show no improvement at all because the data is retrieved locally and no RPCs result.</p>
<p>&nbsp;</p></body>
</HTML>
