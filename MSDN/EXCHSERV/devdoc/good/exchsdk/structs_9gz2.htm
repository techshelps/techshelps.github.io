<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACTION</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_edk_action"></a>ACTION</h1>
<p>
The <b>ACTION</b> structure contains one or more actions that are executed when a rule on a public folder is triggered.</p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=23%>Header file:</td>
<td width=77%>EDKMDB.H</td>
</tr>
</table><br>
<pre><code>typedef struct
{
  ACTTYPE          cttype;
  ULONG            ulActionFlavor;
  LPSRestriction   lpRes;
  LPSPropTagArray  lpPropTagArray;
  ULONG            ulFlags;
  ULONG            dwAlignPad;
 
  union
  {
    struct
    {
      ULONG      cbStoreEntryId;
      LPENTRYID  lpStoreEntryId;
      ULONG      cbFldEntryId;
      LPENTRYID  lpFldEntryId;
    }  actMoveCopy;
 
    struct
    {
      ULONG      cbEntryId;
      LPENTRYID  lpEntryId;
      GUID       guidReplyTemplate;
    }  actReply;  

    struct
    {
      ULONG    cbData;
      BYTE  *  pbData;
    }  actDeferAction;
 
    SCODE       scBounceCode;
    LPADRLIST   lpadrlist;
    SPropValue  propTag;
  };
}  ACTION, FAR * LPACTION;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>acttype</b></dt>
<dd>
The type of action:
<dl>
<dt>
OP_MOVE</dt>
<dd>
Moves the message.</dd>
<dt>
OP_COPY</dt>
<dd>
Copies the message.</dd>
<dt>
OP_REPLY</dt>
<dd>
Replies to the message.</dd>
<dt>
OP_OOF_REPLY</dt>
<dd>
Sends an Out of Office reply to the message.</dd>
<dt>
OP_DEFER_ACTION</dt>
<dd>
Doesn’t do anything right now.</dd>
<dt>
OP_BOUNCE</dt>
<dd>
Rejects the message back to the sender.</dd>
<dt>
OP_FORWARD</dt>
<dd>
Forwards the message to another recipient.</dd>
<dt>
OP_DELEGATE</dt>
<dd>
Assigns the message to another recipient.</dd>
<dt>
OP_TAG</dt>
<dd>
Adds a property to the message.</dd>
<dt>
OP_DELETE</dt>
<dd>
Deletes the message.</dd>
<dt>
OP_MARK_AS_READ</dt>
<dd>
Marks the message as read.
</dd>
</dl>
</dd>
<dt>
<b>ulActionFlavor</b></dt>
<dd>
For <b>acttype</b> OP_REPLY, you can set:
<dl>
<dt>
DO_NOT_SEND_TO_ORIGINATOR</dt>
<dd>
Does not send a copy of the message to the originator. Default.</dd>
</dl>
</dd>
<dt>
<b>lpRes</b></dt>
<dd>
Action restriction. This member is unused and must be set to NULL.</dd>
<dt>
<b>lpPropTagArray</b></dt>
<dd>
Properties to tag the message. This member is unused and must be set to NULL.</dd>
<dt>
<b>ulFlags</b></dt>
<dd>
User-defined flags.</dd>
<dt>
<b>dwAlignPad</b></dt>
<dd>
Padding to align the structure on an 8-byte (64 bit) boundary.
</dd>
</dl>
<p>
The next four members specify where the message or the copy of the message ends up when <b>acttype</b> is OP_MOVE or OP_COPY, respectively:
<dl>
<dt>
<b>cbStoreEntryId</b></dt>
<dd>
The number of bytes in the store entry identifier where the <b>lpStoreEntryId</b> member points.</dd>
<dt>
<b>lpStoreEntryId</b> </dt>
<dd>
The entry identifier of the store where the message is copied or moved.</dd>
<dt>
<b>cbFldEntryId</b></dt>
<dd>
The number of bytes in the folder entry identifier where the <b>lpFldEntryId</b> member points.</dd>
<dt>
<b>lpFldEntryId</b> </dt>
<dd>
The entry identifier of the folder where the message is copied or moved.
</dd>
</dl>
<p>
The next three members specify the reply when <b>acttype</b> is OP_REPLY or OP_OOF_REPLY:
<dl>
<dt>
<b>cbEntryId</b></dt>
<dd>
The number of bytes in the entry identifier where the <b>lpEntryId</b> member points.</dd>
<dt>
<b>lpEntryId</b></dt>
<dd>
The entry identifier.</dd>
<dt>
<b>guidReplyTemplate</b></dt>
<dd>
The template of the reply.
</dd>
</dl>
<p>
The next two members specify the deferment action when <b>acttype</b> is OP_DEFER_ACTION:
<dl>
<dt>
<b>cbData</b></dt>
<dd>
The number of bytes in the <b>pbData</b> member.</dd>
<dt>
<b>pbData</b></dt>
<dd>
A buffer of data that is sent to the client process to interpret.</dd>
<dt>
<b>scBounceCode</b></dt>
<dd>
An error code to set when <b>acttype</b> is OP_BOUNCE:
<dl>
<dt>
BOUNCE_MESSAGE_SIZE_TOO_LARGE</dt>
<dd>
The message was refused because it was too large.</dd>
<dt>
BOUNCE_FORMS_MISMATCH</dt>
<dd>
The form was refused because it was developed on an incompatible DLL.</dd>
<dt>
BOUNCE_ACCESS_DENIED</dt>
<dd>
The message was denied for unknown reasons.</dd>
</dl>
</dd>
<dt>
<b>lpadrlist</b></dt>
<dd>
Points to an array of <b>ADRLIST</b> structures, which contain the addresses when <b>acttype</b> is OP_FORWARD or OP_DELEGATE.</dd>
<dt>
<b>propTag</b></dt>
<dd>
Points to an <b>SPropValue</b> structure, which contains properties when <b>acttype</b> is OP_TAG.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <a href="intrface_5d84.htm"><b>IExchangeFolderRules::HrGet</b></a> and <a href="intrface_1jec.htm"><b>IExchangeFolderRules::HrInsert</b></a> methods both contain a parameter that points to an ACTIONS structure, which contains an array of pointers to ACTION structures.</p>
<p>
For additional information on this structure, see <a href="infostor_79gz.htm">Working with Rules</a>. For information on the <b>ADRLIST</b> and <b>SPropValue</b> structures, see the <i>MAPI Programmer’s Reference</i></p>
<h4>See Also</h4>
<p>
<a href="structs_66er.htm"><b>ACTIONS</b></a></p>
<p>&nbsp;</p></body>
</HTML>
