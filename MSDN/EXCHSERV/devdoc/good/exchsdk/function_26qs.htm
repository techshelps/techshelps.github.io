<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAPIRead</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_edk_dapiread"></a>DAPIRead</h1>
<p>
The <b>DAPIRead</b> function reads (exports) attributes from a directory object.</p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=23%>Header file: </td>
<td width=77%>DAPI.H</td>
</tr>
<tr valign=top>
<td width=23%>Library: </td>
<td width=77%>DAPI.LIB</td>
</tr>
<tr valign=top>
<td width=23%>Unicode: </td>
<td width=77%>Yes</td>
</tr>
</table><br>
<pre><code><b>PDAPI_EVENT DAPIRead (
  DAPI_HANDLE</b><i>&nbsp;hDAPISession</i><b>,  </b>
<b>  DWORD</b><i> dwFlags</i><b>,           </b>
<b>  LPTSTR</b><i>&nbsp;pszObjectName</i><b>,    </b>
<b>  DAPI_ENTRY</b><i> pAttList</i><b>,     </b>
<b>  PDAPI_ENTRY *</b><i> ppValues</i><b>,  </b>
<b>  PDAPI_ENTRY&nbsp;*</b><i>&nbsp;ppAttributes  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hDAPISession</i></dt>
<dd>
Input parameter. Specifies the directory operation session handle obtained through <a href="function_3vuc.htm"><b>DAPIStart</b></a>.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Input parameter. Accepts defined values that control the directory read operations. Use the bitwise OR operator (|) to enable multiple operations:
<dl>
<dt>
DAPI_READ_DEFINED_ATTRIBUTES</dt>
<dd>
Returns all attributes that are set for the current object.</dd>
<dt>
DAPI_READ_ALL_ATTRIBUTES</dt>
<dd>
Returns all attributes that are defined for the class of the current object.</dd>
<dt>
DAPI_MODIFY_REPLACE_PROPERTIES</dt>
<dd>
Overwrites any existing properties when modifying.</dd>
</dl>

<p>
You can also set these flags in the <i>lpDAPIParms</i>-&gt;<b>dwFlags</b> parameter member in the <b>DAPIStart</b> function. They remain in effect unless you override them. If both of these flags are set, DAPI_READ_ALL_ATTRIBUTES takes precedence.
</dd>
<dt>
<i>pszObjectName</i></dt>
<dd>
Input parameter. Points to a string containing the name of the object to read. If specified as a relative distinguished name (RDN), it is combined with the <i>lpDAPIParms</i><b>-&gt;pszBasePoint</b> and <i>lpDAPIParms</i><b>-&gt;pszParentContainer</b> parameter members in the <b>DAPIStart</b> function. If specified with the prefix "/cn=", the string is concatenated to the session <b>pszBasePoint</b>. If specified with the prefix "/o=", the string is taken to be a fully qualified distinguished name (DN).</dd>
<dt>
<i>pAttList</i></dt>
<dd>
Input parameter. Points to a <a href="structs_7n5l.htm"><b>DAPI_ENTRY</b></a> structure containing the names of the attributes to read. The session default list is overridden for the present call only. This parameter is ignored if either DAPI_READ_ALL_ATTRIBUTES or DAPI_READ_DEFINED_ATTRIBUTES is set in <i>dwFlags</i>.
<p>
If you specify export attributes in <i>pAttList</i>, the first attribute in <i>pAttList</i> must be NM_OBJECT_CLASS; otherwise, <b>DAPIRead</b> fails.

<p>
Normally, you cannot read the attributes of deleted objects. If you want to read the attributes of an object that has been deleted, but not purged, include the NM_IS_DELETED attribute.
</dd>
<dt>
<i>ppValues</i></dt>
<dd>
Output parameter. Points to the address where the pointer to a <b>DAPI_ENTRY</b> structure containing the values read from the DIT entry is stored. The pointer returned must be freed by a call to <a href="function_6zqx.htm"><b>DAPIFreeMemory</b></a>.</dd>
<dt>
<i>ppAttributes</i></dt>
<dd>
Output parameter. If either DAPI_READ_ALL_ATTRIBUTES or DAPI_READ_DEFINED_ATTRIBUTES is set in <i>dwFlag</i>, points to the address where a <b>DAPI_ENTRY</b> structure containing the names of the attributes read from the DIT is stored. Otherwise, this parameter is NULL. If this value is not NULL, you must release the pointer with a call to <b>DAPIFreeMemory</b> before your program exits.</dd>
</dl>
<p>
</p>
<h4>Return Values</h4>
<dl>
<dt>
NULL</dt>
<dd>
No errors were encountered.</dd>
<dt>
A pointer to a <a href="structs_19pw.htm"><b>DAPI_EVENT</b></a> structure</dt>
<dd>
An error was encountered.</dd>
</dl>
<h4>Remarks</h4>
<p>
If the return value is non-NULL, you must release the <b>DAPI_EVENT</b> structure with a call to <a href="function_6zqx.htm"><b>DAPIFreeMemory</b></a> before your program exits.</p>
<p>
For more information on the <b>DAPIRead</b> function, see <a href="directry_6pkj.htm">Using Directory Access Functions</a>.</p>
<h4>See Also</h4>
<p>
<a href="function_1cac.htm"><b>BatchExport</b></a>, <a href="function_1v1w.htm"><b>BatchImport</b></a>, <a href="function_9j38.htm"><b>DAPIEnd</b></a>, <a href="function_1q79.htm"><b>DAPIWrite</b></a></p>
<p>&nbsp;</p></body>
</HTML>
