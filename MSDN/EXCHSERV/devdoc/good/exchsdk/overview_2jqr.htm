<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Server Applications</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_edk_about_server_applications"></a>About Server Applications</h1>
<p>
You  can add services to Microsoft Exchange Server systems by extending the Microsoft Exchange Server Administrator program or by developing a separate server application. </p>
<p>
The Administrator program is used to perform operations such as creating mailboxes, managing basic<b> </b>Microsoft Exchange Server components, and managing directory objects. You can extend the Administrator program by adding custom property pages and adding application-specific extension data.</p>
<p>
Server applications for Microsoft Exchange Server interact with user services such as the information store and the directory. Server application components can reside on a server running Microsoft Exchange Server, or on any computer running Windows NT Server, even if that system is not running Microsoft Exchange Server.</p>
<p>
Microsoft Exchange Server runs as a mail server on the Windows NT Server operating system, which allows it to take advantage of the platform’s reliability, scalability, and multitasking capabilities. For example, Windows NT Server multitasking allows Microsoft Exchange Server to simultaneously update directory information, transfer information to a client, and route information to other servers and foreign systems.</p>
<p>
The following figure shows how clients such as the directory and the information store access Microsoft Exchange Server services with complete independence from the underlying network. All communication between clients and services in the Microsoft Exchange Server environment is handled through <a href="glossary_1ooi.htm#_edk_remote_procedure_call_rpc_">remote procedure call (RPC)</a> messages that can travel over almost any type of network, including Novell NetWare, Microsoft networks, and TCP/IP. </p>
<p>
<img src="images/edk31.gif" border=0></p>
<p>
<b>Client access of services running on Microsoft Exchange Server</b></p>
<p>
Because services running on Microsoft Exchange Server support standard interfaces such as <a href="glossary_1ood.htm#_edk_mapi">MAPI</a>, clients can access them the same way they access other MAPI service providers. This simplifies Microsoft Exchange Server client application development. Programmers use APIs that they may have already used to access other MAPI services. Using these open interfaces, developers can build applications that include electronic mail, group scheduling, forms routing, bulletin boards, and workflow automation. Microsoft Exchange Server also allows existing MAPI-compliant applications from third-party vendors to interact with services running on Microsoft Exchange Server.</p>
<p>&nbsp;</p></body>
</HTML>
