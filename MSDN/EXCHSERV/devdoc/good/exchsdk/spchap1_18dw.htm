<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Object</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_splus_oviewapplication_object"></a>Application Object</h2>
<p>
At the top of the object hierarchy is the Application object, which represents an instance of the Schedule+ application. It is the base object through which all other objects are accessed. It is also the only object that can be retrieved directly by applications. In Visual Basic, this means that the Application object is the only object that the <b>CreateObject</b> function returns.</p>
<p>
The following sample code uses the <b>CreateObject</b> function to return the Application object into an object variable:</p>
<pre><code>Dim objApp As Object
Set objApp = CreateObject("SchedulePlus.Application")
 </code></pre>
<p>
For more information on the <b>CreateObject</b> function, see the <i>Microsoft Visual Basic Programming System for Windows Programmer’s Guide</i>.</p>
<p>
All other objects, such as appointments and tasks, are accessed through properties defined on the Application object. All primary table objects are nested within the Schedule object. The table object hierarchy, as shown in the following figure, is important because it determines the correct syntax to use in your Visual Basic applications.</p>
<p>
<img src="images/sp01_03.gif" border=0></p>
<p>&nbsp;</p></body>
</HTML>
