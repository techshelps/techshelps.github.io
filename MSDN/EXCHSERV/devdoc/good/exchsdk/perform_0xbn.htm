<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using MAPI Function Calls on Tables</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_edk_using_mapi_function_calls_on_tables"></a>Using MAPI Function Calls on Tables</h1>
<p>
Microsoft Exchange Client applications make frequent calls to MAPI table functions. Optimizing the use of table functions can result in significant performance improvements. </p>
<h4>Using QueryRows</h4>
<p>
Efficient use of the <b>IMAPITable::QueryRows</b> method can improve performance when accessing table data. Instead of calling the <b>IMAPITable::GetRowCount</b> method and using the returned value in a subsequent call to <b>QueryRows</b>, first estimate the maximum number of rows possible in the table. Then call <b>QueryRows</b>(<i>&lt;large number&gt;</i>) to ask for all the rows at once. <b>QueryRows</b> returns the row count, along with the other information. If you do not get every row, request the remaining rows. To query all rows most efficiently, use the MAPI <b>HrQueryAllRows</b> function. See the <i>MAPI Programmer’s Reference</i> for details on this function.</p>
<p>
It is also advantageous to run the <b>QueryRows</b> method on as many columns as needed in a single operation, and to use default formats. When rows and columns are not in the default format, queries usually incur more overhead.</p>
<p>
For more information, see <a href="infostor_1vcj.htm">Ordering Function Calls to Ensure Table Notifications</a>. </p>
<h4>Using SetColumns</h4>
<p>
Efficient use of the <b>SetColumns</b> method also improves performance. Follow these guidelines:
<ul>
<li>
Always call <b>SetColumns</b> before calling the <b>Advise</b>, <b>SortTable</b>, or <b>Restrict</b> methods. </li>
<li>
Call the <b>Advise</b> method <i>after</i> calling the <b>HrQueryAllRows</b> MAPI function unless there is a good reason not to do so. This reduces overhead because <b>HrQueryAllRows</b> may also perform a <b>SetColumns</b>, <b>SortTable</b>, and/or a <b>Restrict</b> operation. </li>
<li>
If you must use <b>SetColumns</b>, be sure you have set the minimum number of columns needed.</li>
<li>
Never call <b>SetColumns</b>, <b>Restrict</b>, or <b>SortTable</b> twice on the same table. </li>
<li>
Combine multiple <b>Restrict</b> calls into a single call.</li>
</ul>
<p>
</p>
<p>
Calls to the <b>Restrict</b> method are generally expensive to the server in terms of network overhead. For example, message tables are large. Therefore, restrictions are proportional to the number of messages in the database. Avoid doing a <b>Restrict</b> call whenever possible. Calls to <b>Restrict</b> for special tables like Rules and Forms are notable exceptions because the server is able to perform these restrictions in memory. </p>
<p>&nbsp;</p></body>
</HTML>
