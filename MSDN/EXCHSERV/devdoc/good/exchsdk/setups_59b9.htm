<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initializing the Extension-Data Attribute</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_edk_initializing_the_extension_data_attribute"></a>Initializing the Extension-Data Attribute </h3>
<p>
The Extension-Data attribute can be used by server applications to store custom data in the directory. This data can be manipulated through custom property pages implemented by <a href="glossary_1oo1.htm#_edk_administrator_extension_dll">Administrator extension DLLs</a>. For more information, see <a href="admin_4nsj.htm">Administrator Program Extensions</a>. </p>
<p>
During the setup procedure, the Extension-Data attribute must be initialized. You can use the CFGCODE utility to create a file holding default Extension-Data values. Once this extension data file is created, it can be used during application setup. When the customer runs the setup program, the file can be copied directly into the directory object's Extension-Data attribute. Its binary contents are formatted correctly for storage in the Microsoft Exchange Server directory as an attribute on the application object. For more information on CFGCODE.EXE, see <a href="samples1_723p.htm">CFGCODE: Generating a Packed Property Structure</a>.</p>
<p>
The setup program also performs this write operation using <a href="glossary_1oo4.htm#_edk_directory_access_functions">directory access function</a> calls.</p>
<p>&nbsp;</p></body>
</HTML>
