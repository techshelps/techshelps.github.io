<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Server Application Development Options</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_server_application_development_options"></a>Server Application Development Options</h2>
<p>
Many options are available to developers writing <a href="glossary_1ooj.htm#_edk_service">services</a> for Microsoft Exchange Server. The following topics discuss development options for server applications. </p>
<h4>Set and Manipulate Access Control List for Folders</h4>
<p>
You can set and manipulate <a href="glossary_1oo1.htm#_edk_access_control_list_acl_">access control list (ACL)</a> entries  on folders in the server store. (Note: This cannot be done from the <a href="glossary_1oo1.htm#_edk_active_messaging_library">Active Messaging Library</a>.) Visual C++ can be used to set and manipulate ACL entries. See <a href="compnent_63qr.htm">About Access Control Lists</a> and<a href="samples1_7fzg.htm"> ACLEDIT: Modifying an ACL</a>. </p>
<h4>Set and Manipulate Rules for Folders or Mailboxes</h4>
<p>
You can set and manipulate <a href="glossary_1ooi.htm#_edk_rule">rules</a> on inboxes or folders. Rules are evaluated by the server when incoming messages arrive. This action may take place immediately or be deferred until the client logs on. When you manipulate rules with your application, you can only specify actions that can be carried out by the server. Visual C++ can be used to set and manipulate rules. See <a href="samples3_7rcj.htm">RULEEDIT: Manipulating Rules</a>.</p>
<h4>Create and Delete Folders Using Your Application</h4>
<p>
You can create and delete folders using the Microsoft Exchange Client or <a href="glossary_1ood.htm#_edk_mapi">MAPI</a>. (Note: The <a href="glossary_1oo1.htm#_edk_active_messaging_library">Active Messaging Library</a> does not support this functionality.) You can also make folders invisible on <a href="glossary_1oo9.htm#_edk_information_store">information stores</a>. but not in the <a href="glossary_1oog.htm#_edk_public_folder">public folder</a> hierarchy displayed by the Microsoft Exchange Client. To restrict visibility, the folder must be created beneath another folder that has restricted user permissions. See <a href="samples3_04tp.htm">TOOLFORM: Creating a C or C++ Form</a> and the <i>Microsoft Exchange Server</i> <i>Application Designer’s Guide</i>.</p>
<h4>Create Custom Actions for Personal Folder Stores</h4>
<p>
You can create custom actions for a <a href="glossary_1oog.htm#_edk_personal_folder_store_pst_">personal folder store (PST)</a> based on <a href="glossary_1ooi.htm#_edk_rule">rules</a>. Custom actions are only available for PSTs because the necessary executable file must run on the client. However, the action could access the server-based information store. Most available tools can be used to create this type of application. See <a href="samples1_04vi.htm">CRARUN: Creating a Custom Rule Action</a>.</p>
<h4>Create Custom Storage in Messages, Folders, and Directory Entries</h4>
<p>
You can create new fields and store information in a message. You can add named properties to a MAPI folder <a href="glossary_1oof.htm#_edk_object">object</a>, and you can add named properties to any <a href="glossary_1oo4.htm#_edk_directory">directory</a> entry. The <a href="glossary_1oo1.htm#_edk_administrator_program">Administrator program</a> provides custom properties for some applications. You can also use MAPI and Visual C++ to create these application types. See <a href="samples2_3pi9.htm">EXTDATVW: Viewing and Editing Extension Data</a> and <a href="admin_4nsj.htm">Administrator Program_Extensions</a>.</p>
<h4>Create Customized Conflict Resolution for Forms</h4>
<p>
You can override the default conflict-resolution options provided with Microsoft Exchange Server. Such an application is attached to a <a href="glossary_1oo6.htm#_edk_form">form</a>. Microsoft Exchange Server functions, MAPI functions, and Visual C++ can be used to create this type of application. See <a href="forms_3goj.htm">Resolving Message Conflicts with Forms</a>.</p>
<h4>Add Property Pages for Information Stores, Folders, or Messages</h4>
<p>
You can add <a href="glossary_1oog.htm#_edk_property_page">property pages</a> for the following objects:
<ul>
<li>
<a href="glossary_1oo9.htm#_edk_information_store">Information stores</a></li>
<li>
<a href="glossary_1oo6.htm#_edk_folder">Folders</a></li>
<li>
Messages</li>
</ul>
<p>
</p>
<p>
Visual C++ can be used to create new property pages. For more information, see <a href="admin_4nsj.htm">Administrator Program_Extensions</a>.</p>
<h4>Tie Your Application’s Administration to the Administrator Program</h4>
<p>
You can control your application from the Administrator program by adding new property pages that manipulate objects exposed through the Administrator program. Microsoft Exchange Server functions and Visual C++ can be used to create these types of applications. See <a href="admin_3er0.htm">Creating an Administrator Extension DLL</a>.</p>
<h4>Create a Service with New Functionality</h4>
<p>
You can combine any of the other development options listed here to create new functionality for Microsoft Exchange Server. The Microsoft Exchange Server functions, Win32 functions, and Visual C++ can all be used. See <a href="dsignapp_9z3n.htm">Server Applications</a>.  </p>
<p>&nbsp;</p></body>
</HTML>
