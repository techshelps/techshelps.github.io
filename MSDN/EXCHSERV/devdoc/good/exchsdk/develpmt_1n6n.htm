<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Custom Tools with Microsoft Visual C++</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_creating_custom_tools_with_microsoft_visual_c_"></a>Creating Custom Tools with Microsoft Visual C++</h2>
<p>
You can create custom tools that perform common tasks, then add them to your Visual C++ development environment. Once you create a custom tool, it appears as an option on the <b>Tools</b> menu. </p>
<p>
To create a custom tool, choose the <b>Customize</b> option at the <b>Tools</b> menu of Visual C++. Click the <b>Tools</b> tab, then enter settings that describe the custom tool into the text boxes of the <b>Tools</b> page. For more information, click the <b>Add</b> button on the <b>Tools</b> page. Click <b>Help</b> on the <b>Add Tool</b> dialog box. </p>
<h3>Examples: Custom Tools </h3>
<p>
The following examples show the settings you specify to add tools to the <b>Tools</b> menu. </p>
<h4>Tool for Building a Separate File</h4>
<p>
This tool builds a file that is not part of the project you currently have open. You can use the tool when you do not want to open a separate project, or add that file to your current project.</p>
<pre><code>Menu Text                &amp;nmake Other
Command:                 nmake.exe
Arguments:               (blank)
Initial Directory:       $Filedir
Prompt for Arguments:    (blank)
Redirect to Output Win   X
Close Window on Exit     (blank)
 </code></pre>
<h4>Tool for Rebuilding EXCHSDK.LIB</h4>
<p>
This tool rebuilds EXCHSDK.LIB after you have used NMAKE OTHER to build a library.</p>
<pre><code>Menu Text                Make &amp;ExchSDK.Lib
Command:                 nmake.exe
Arguments:               clean all
Initial Directory:       \edk\src\exchsdk (or your path)
Prompt for Arguments:    (blank)
Redirect to Output Win   X
Close Window on Exit     (blank)
 </code></pre>
<h4>Tool for Deleting the .EXE File or DLL</h4>
<p>
This tool deletes the executable file or DLL that you normally build with the current makefile.</p>
<pre><code>Menu Text                &amp;Delete Target
Command:                 c:\winnt\system32\cmd.exe (or your path)
Arguments:               /c "echo del $Target" &amp; del $Target
Initial Directory:       (blank)
Prompt for Arguments:    blank)
Redirect to Output Win   (blank)
Close Window on Exit     (blank)
 </code></pre>
<h4>Tool for Making a File Writeable</h4>
<p>
This tool changes a read-only file to one that is writeable.</p>
<pre><code>Menu Text                 Read/&amp;Write
Command:                  c:\winnt\system32\cmd.exe (or your path)
Arguments:                /c  Attrib -r $Filename
Initial Directory:        $Filedir
Prompt for Arguments:     (blank)
Redirect to Output Win    (blank)
Close Window on Exit      X
 </code></pre>
<h4>Tool for Making a File Read-Only</h4>
<p>
This tool changes a file that is read/write to read-only.</p>
<pre><code>Menu Text                Read Only
Command:                 c:\winnt\system32\cmd.exe (or your path)
Arguments:               /c  Attrib +r $Filename
Initial Directory:       $Filedir
Prompt for Arguments:    (blank)
Redirect to Output Win   (blank)
Close Window on Exit     X
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
