<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reading Messages in a Folder</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_reading_messages_in_a_folder"></a>Reading Messages in a Folder</h2>
<p>
Before you can open messages in a folder, you must open the information store and the folder itself. See <a href="infostor_6ehx.htm">Opening an Information Store</a>, <a href="infostor_65ki.htm">Opening an Existing Public Folder</a>, and <a href="infostor_6cdu.htm">Opening an Existing Private or Personal Folder</a>.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To read the messages in a folder</h5>
<ol>
<li>
Open the folder contents table, using the <b>IMAPIFolder::GetContentsTable</b> method. </li>
<li>
Set the columns of the contents table to specify which properties are to be retrieved for each message. One of the properties to retrieve is PR_ENTRYID because you will use it in step 4. . </li>
<li>
Query the contents table by calling the MAPI <b>HrQueryAllRows</b> function or the <b>IMAPITable::QueryRows</b> method.</li>
<li>
Open a message with a call to the MAPI <b>OpenEntry</b> method.</li>
<li>
After opening the message, you can choose to indicate that the message has been read.</li>
</ol>
<p>
The following sample code illustrates these steps. </p>
<pre><code>// Open folder contents table.
hr = lpFolder-&gt;GetContentsTable(
    MAPI_DEFERRED_ERRORS,
    &amp;lpFolderTable);

// Here we're primarily interested in ENTRYIDs, and wish to sort by submission time.
    static SizedSPropTagArray( 1L, PropEntryID) = { 1L, {PR_ENTRYID}};
    static SizedSSortOrderSet( 1L, SortSubmitTime) =
    { 1L, 0L, 0L, { PR_CLIENT_SUBMIT_TIME, TABLE_SORT_ASCEND}};

// Read table.  If you perform this action inside a loop, you may 
   wish to use the MAPI
// SetColumns and SortTable functions before this call.  They only 
   need to be performed
// once when the contents table is retrieved.
hr = HrQueryAllRows(
    lpFolderTable,
    (LPSPropTagArray)&amp;PropEntryID,
    NULL,           // no restriction
    (LPSSortOrderSet)&amp;SortSubmitTime,
    NULL,
    0L,
    &amp;lpMessageRows);

// Read rows one at a time
ULONG i = 0L;
ULONG ulObjType = 0L;
LPMESSAGE lpMessage = NULL;
for (i = 0L; i &lt; lpMessageRows-&gt;cRows; i++)
{
    // Open the message    
    hr = lpFolder-&gt;OpenEntry(
        0L,
        lpMessageRows-&gt;aRow[i].lpProp[0].bin.cb,
        lpMessageRows-&gt;aRow[i].lpProp[0].bin.lpb,
        NULL,
        MAPI_MODIFY | MAPI_DEFERRED_ERRORS,
        &amp;ulObjType,
        (LPUNKNOWN*)&amp;lpMessage);

    // Indicate this message has been read
    hr = lpMessage-&gt;SetReadFlag( MAPI_DEFERRED_ERRORS);

    //
    // Perform message processing here...
    //

    // Delete the message
    hr = lpFolder-&gt;DeleteMessage(
        lpMessageRows-&gt;aRow[i].lpProp[0].bin, 
        0L,
        NULL,
        0L);
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
