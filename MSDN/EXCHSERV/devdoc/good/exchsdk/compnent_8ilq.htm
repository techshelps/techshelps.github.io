<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Process of Synchronization</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_edk_the_process_of_synchronization"></a>The Process of Synchronization</h3>
<p>
The synchronization process begins when the agent process is started. This <a href="glossary_1oo1.htm#_edk_agent">agent</a> process may be a Windows NT service started by the system or a process run from a command prompt. Once the agent process is running, it performs two initialization steps: 
<ul>
<li>
Determines the source for changes by opening the relevant <a href="glossary_1oo9.htm#_edk_information_store">information store</a> using a MAPI call, locating the folder from which changes are to be retrieved, and obtaining the <a href="glossary_1ooj.htm#_edk_synchronizer">synchronizer</a> interface for this object.</li>
<li>
Determines the destination for changes by opening the relevant information store, locating the folder that is to receive the changes, and obtaining the <a href="glossary_1oo3.htm#_edk_collector">collector</a> interface for this object.</li>
</ul>
<p>
</p>
<p>
The agent communicates with the collector only during this initialization. At all other times the agent communicates only with the synchronizer. </p>
<p>
Once initialization has been completed, the agent makes periodic calls to the synchronizer requesting it to perform a defined synchronization. The synchronizer gathers and sends the changes and in turn makes a request to the collector to import the changes. The collector at the receiving information store imports the changes and, if the import was successful, sends a message indicating success. Following each successful import the synchronizer updates the synchronization state. This process continues until the requested synchronization is complete. The synchronizer then replies to the agent with a task-completion notification.</p>
<h4>Two-way Replication</h4>
<p>
This process is similar for both synchronization and two-way replication. However, synchronization requires a single agent, collector, synchronizer, and synchronization state, while two-way replication requires a second collector, synchronizer, and synchronization state. The second synchronization state in a two-way replication is used by the synchronizer to verify that changes passed from one information store are not being returned, thus avoiding circular synchronization.</p>
<p>
<img src="images/bisync.gif" border=0></p>
<p>
<b>Two-way replication of information stores</b></p>
<p>
During two-way replication, state information is shared between the collector and synchronizer pair of a single information store and not between the collector and synchronizer pair that are exchanging data.</p>
<p>
Inter-site and inter-organization synchronization has additional complexity because of its distributed nature. The potential lack of network connectivity means that a direct connection between the collector and the synchronizer is not practical. In such cases a proxy collector must store the changes locally and propagate the changes to the remote site. An agent at the remote site can import the changes into the information store using the remote site collector. How the changes are propagated is an implementation decision for the designer of the collector at the receiving store.</p>
<p>
Microsoft Exchange Server has implemented ICS using two collectors and two synchronizers. One collector/synchronizer pair is used for the hierarchy table of the folder being synchronized, and the other pair is used for the contents table of that folder.</p>
<p>&nbsp;</p></body>
</HTML>
