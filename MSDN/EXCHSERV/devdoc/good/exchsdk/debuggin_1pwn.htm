<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Debugging</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_edk_application_debugging"></a>Application Debugging</h1>
<p>
Choosing the best debugging methods and tools are an important part of the development process for any Microsoft Exchange Server application. For example, the most efficient way to begin debugging a <a href="glossary_1ooj.htm#_edk_server_application">server application</a> is to run it as a Windows NT Server console application, which allows you to step through your code from the first instruction. Then, when the application is running smoothly, you can attach the Microsoft Visual C++ debugger to the running process. </p>
<p>&nbsp;</p></body>
</HTML>
