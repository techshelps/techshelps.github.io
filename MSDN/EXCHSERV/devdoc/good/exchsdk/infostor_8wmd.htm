<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Message</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_creating_a_message"></a>Creating a Message</h2>
<p>
When creating a new message, some message properties are required and others are optional. For example, it is important that you set the PR_MESSAGE_CLASS property of the message. See step 3 of the following procedure. </p>
<p>
For a list of message properties that are automatically set, see <a href="objects_3age.htm">Properties Set at Message Creation</a>. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To create a message</h5>
<ol>
<li>
Open the folder in which you want the new message to exist. See <a href="infostor_65ki.htm">Opening an Existing Public Folder</a> and <a href="infostor_6cdu.htm">Opening an Existing Private or Personal Folder</a>.</li>
<li>
Create a new message with a call to the <b>IMAPIFolder::CreateMessage</b> method. This creates the message object and returns an LPMESSAGE pointer to it, which gives access to the MAPI <b>IMessage</b> interface on the new object.</li>
<li>
Be sure to set the PR_MESSAGE_CLASS property. You can set this and other properties on the message by calling <b>IMAPIProp::CopyProps</b> or <b>IMAPIProp::SetProps</b>.  </li>
<li>
Commit the properties you have set by calling <b>IMAPIProp::SaveChanges</b>. The message will appear in the folder in which it was created.</li>
</ol>
<p>
The following sample code illustrates these steps:</p>
<pre><code>    // Create new message with MAPI call...
        hr = lpNewFolder-&gt;CreateMessage(
        NULL,        // Interface ID, must be NULL for client apps
        MAPI_DEFERRED_ERRORS,
        &amp;lpNewMessage);
    
// Set appropriate message properties.  Here's a list of the most common...
    // PR_SENDER_NAME,
    // PR_SENDER_ENTRYID,
    // PR_SENDER_ADDRTYPE,
    // PR_SENDER_EMAIL_ADDRESS,
    // PR_SENT_REPRESENTING_NAME,
    // PR_SENT_REPRESENTING_ENTRYID,
    // PR_SENT_REPRESENTING_ADDRTYPE,
    // PR_SENT_REPRESENTING_EMAIL_ADDRESS,
    // PR_CLIENT_SUBMIT_TIME,
    // PR_MESSAGE_DELIVERY_TIME,
    // PR_IMPORTANCE,
    // PR_EXPIRY_TIME,
    // PR_MESSAGE_ATTACHMENTS,
    // PR_RTF_COMPRESSED or PR_BODY
    // PR_SUBJECT
    // PR_MESSAGE_CLASS
    
    // SaveChanges commits the current state of the message.
    // Must use KEEP_OPEN_READWRITE or KEEP_OPEN_READONLY if you
    // intend to access the message later.
    hr = lpNewMessage-&gt;SaveChanges( KEEP_OPEN_READWRITE );
 </code></pre>
<p>
<b>Note</b>  The maximum number of messages that a folder in a <a href="glossary_1oog.htm#_edk_personal_folder_store_pst_">personal folder store (PST)</a> can hold is 16,383. Once this number has been reached, an attempt to create another message in the folder results in the error MAPI_E_TABLE_TOO_BIG being returned by the call to the <b>IMAPIProp::SaveChanges</b> method.</p>
<p>&nbsp;</p></body>
</HTML>
