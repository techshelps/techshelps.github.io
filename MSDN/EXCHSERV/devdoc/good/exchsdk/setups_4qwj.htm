<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About the Setup Process</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_edk_about_the_setup_process"></a>About the Setup Process</h1>
<p>
A primary function of the setup program is to copy all necessary files from the installation medium to the server's hard disk. Depending on the application's level of interaction with Microsoft Exchange Server system components, the setup program must also ensure that the application is recognized by the components and can communicate with them.</p>
<p>
The amount of interaction between the <a href="glossary_1ooj.htm#_edk_server_application">server application</a> and Microsoft Exchange Server depends on the application's design. Server applications can be developed that depend very little on Microsoft Exchange Server. For example, a Windows application that displays an icon to start it and supplies an interface to configure and control it may not need to include a <a href="glossary_1ood.htm#_edk_mapi">MAPI</a> profile or to register with Windows NT Server. You only need to build a simple installation program for this type of application.</p>
<p>
However, this independence from Microsoft Exchange Server and Windows NT Server has its drawbacks. For example, if you design your application to use the <a href="glossary_1oon.htm#_edk_windows_nt_registry">Windows NT Registry</a>, you can use the utility functions provided with the Microsoft Exchange Server SDK to more easily manage the application's configuration information — including both standard data and <a href="glossary_1oo5.htm#_edk_extension_data">extension data</a>. </p>
<p>
The following setup program description explains what is gained when Windows NT Server and Microsoft Exchange Server components work closely together.</p>
<p>
Most server application setup programs follow the process described in the following illustration. </p>
<p>
<img src="images/edk09.gif" border=0></p>
<p>
<b>Tasks performed by a server application during a complete installation on Windows NT Server in a Microsoft Exchange Server environment</b></p>
<p>
If your setup program performs all these tasks, your application can be controlled and monitored through Windows NT (Server or Workstation) and Microsoft Exchange Server and Client by the following methods:
<ul>
<li>
<b>Services dialog box of the Windows NT Control Panel</b>  Allows an administrator to start, stop, pause, or continue any installed application, as well as pass startup parameters to the application.</li>
<li>
<b>Microsoft Exchange Server Administrator program</b>  Allows an administrator to edit an application's object <a href="glossary_1oo1.htm#_edk_attribute">attributes</a> displayed on <a href="glossary_1oog.htm#_edk_property_sheet">property sheets</a>.</li>
<li>
<b>Microsoft Exchange Client</b>  Allows an administrator to log on as the application to verify, for example, that a <a href="glossary_1ood.htm#_edk_mailbox_agent">mailbox agent</a> is receiving messages and if the messages are being processed correctly. </li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
