<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>String(UTC Time)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sch_string_utc_time_"></a>String(UTC Time)</h1>
<p>
This syntax stores date and time in a single string.  Corresponds to X.500's UTC-Time-Syntax.</p>
<p>
The string format is defined in X.208 section 33.3.  It consists of three concatenated parts:  (1) YYMMDD; (2) hhmm or hhmmss (both are acceptable); and (3) "Z" to indicate that the time given is coordinated universal time, or "-HHMM" to indicate that the time given is local time which is HHMM slower than universal time, or "+HHMM" to indicate that the time given is local time which is HHMM faster than universal time.  Note that the first two digits of the year are not stored in this string but can be easily deduced (at least until the year 2080 or so).</p>
<p>
Some example legal values are "9101311455Z", "910131145503Z", "9101314455-0500", "910131145503+0130".  This string is stored as single-byte ASCII characters, and no code page number is stored with it.</p>
<p>
Although ordering is supported, in a <b>deviation from X.500</b> it is done only as an ASCII case-ignore string sort (like String(Teletex)), not by properly interpreting the meaning of the strings.</p>
<h4>Value checking</h4>
<p>
Any valid String(Teletex) value is accepted; no attempt is made to ensure that the string contains a valid time string.</p>
<p>
&nbsp;&nbsp;&nbsp;&nbsp;OM SYNTAX:  String (UTC Time)</p>
<p>
&nbsp;&nbsp;&nbsp;&nbsp;MATCHES FOR EQUALITY ORDERING</p>
<p>
&nbsp;&nbsp;&nbsp;&nbsp;::= { attributeSyntax 11 }</p>
<p>&nbsp;</p></body>
</HTML>
