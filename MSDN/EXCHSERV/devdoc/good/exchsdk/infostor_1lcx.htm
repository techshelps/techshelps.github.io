<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Backing Up Directory or Information Store Data</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_backing_up_directory_or_information_store_data"></a>Backing Up Directory or Information Store Data</h2>
<p>
The following procedures outline a typical methodology to programmatically back up the directory and information store databases. The first procedure explains how to perform a full backup. The second procedure explains differential and incremental backups.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To perform a full backup of data</h5>
<ol>
<li>
Call <a href="function_1j39.htm"><b>HrBackupPrepare</b></a> to get a client-side context handle and to specify the backup method. In this call, specify that the type of backup to be performed is FULL.</li>
<li>
Call <a href="function_21pv.htm"><b>HrBackupGetDatabaseNames</b></a><b> </b>to get a list of the files to backup. These files cannot be backed up using normal file copy routines. They must be backed up using <a href="function_24f9.htm"><b>HrBackupOpenFile</b></a> and <a href="function_7x2c.htm"><b>HrBackupRead</b></a>. Each file name in the list is preceded by a one-byte token (defined in EDBBCLI.H) that indicates the type of file. This token should be saved along with the data backup so it can be matched with the proper directory returned by <a href="function_4l4j.htm"><b>HrRestoreGetDatabaseLocations</b></a> at restore time. For more information, see <a href="infostor_1khf.htm">Backup File Locations</a>.</li>
<li>
Call <b>HrBackupOpenFile</b> to open the file for each file in the list returned by <b>HrBackupGetDatabaseNames</b>. When the file has been successfully opened, call <b>HrBackupRead</b> to read the data in that file. When the file has been read and stored to the desired location, call <a href="function_3gdh.htm"><b>HrBackupClose</b></a>.</li>
<li>
Release the memory returned by <b>HrBackupGetDatabaseNames</b> by calling <a href="function_9e3p.htm"><b>BackupFree</b></a> on it.</li>
<li>
Call <a href="function_0qpf.htm"><b>HrBackupGetBackupLogs</b></a> to get a list of transaction log files to back up. These files are all located in the current log file path (configurable in the <a href="glossary_1ood.htm#_edk_microsoft_exchange_server_administrator_program">Microsoft Exchange Server Administrator program</a>). For a full backup, one of the files returned in this list will be a patch file that contains the changes that occurred to the database while the backup was running. As with the files returned by <b>HrBackupGetDatabaseNames </b>(see step 2), each file returned by <b>HrBackupGetBackupLogs</b> will be preceded by a token indicating the file type that should be saved and matched with tokens returned by <b>HrRestoreGetDatabaseLocations</b> at restore time.</li>
<li>
Call <b>HrBackupOpenFile</b>, <b>HrBackupRead</b>, and <b>HrBackupClose</b> for this list of files in the same manner as step 3.</li>
<li>
Release the memory returned by <b>HrBackupGetBackupLogs</b> by calling <b>BackupFree</b> on it.</li>
<li>
Call <a href="function_2ib7.htm"><b>HrBackupTruncateLogs</b></a><b> </b>to delete the log files.</li>
</ol>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To perform differential or incremental backup of data</h5>
<ol>
<li>
Call <a href="function_1j39.htm"><b>HrBackupPrepare</b></a> to get a client-side context handle and to specify the backup method. In this call, specify that the type of backup to be performed is Logs Only (for differential or incremental). Under certain situations, a differential or incremental backup may not be possible in certain situations such as when a full has not been performed because a defragmentation or migration has been performed on the database, or transaction log files are out of sequence on the disk, or Circular Logging is enabled on the database. If <b>HrBackupPrepare</b> fails for the type of backup you wish to perform, a full backup should be performed before retrying a differential or incremental backup.</li>
<li>
Call <a href="function_0qpf.htm"><b>HrBackupGetBackupLogs</b></a> to get a list of transaction log files to backup. These files are all located in the current log file path (configurable in Microsoft Exchange Administrator). Each file returned by <b>HrBackupGetBackupLogs</b> will be preceded by a token indicating the file type, which should be saved and matched with tokens returned by <b>HrRestoreGetDatabaseLocations</b> at restore time.</li>
<li>
Call <b>HrBackupOpenFile</b>, <b>HrBackupRead</b>, and <b>HrBackupClose</b> for this list of files.</li>
<li>
Release the memory returned by <b>HrBackupGetBackupLogs</b> by calling <b>BackupFree</b> on it.</li>
<li>
<i>This step is performed only for incremental (not differential) backups </i><p>
Call <a href="function_2ib7.htm"><b>HrBackupTruncateLogs</b></a><b> </b>to delete the log files.
<p>
<b>Important</b>  Do not call <b>HrBackupTruncateLogs</b> if the backup is unsuccessful. If you call <b>HrBackupTruncateLogs</b> and the backup is not successful, your database will not be recoverable if it is interrupted before a clean shutdown.
</li>
<li>
Call <b>HrBackupEnd</b> to release the backup context.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
