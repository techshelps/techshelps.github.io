<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging a Service as a Console Application</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_debugging_a_service_as_a_console_application"></a>Debugging a Service as a Console Application</h2>
<p>
The easiest way to begin debugging a service of Windows NT Server is to artificially run it as a console application — in other words, at a command prompt . This method allows you to step through your code from the first instruction, provides more complete access to the Visual C++ debugger, and supplies a window for viewing <a href="glossary_1ood.htm#_edk_mapi">MAPI</a> messages.</p>
<p>
To set up your service as a console application, you need to handle the return codes from the <a href="glossary_1ooj.htm#_edk_service_control_manager">service control manager</a> and then take the appropriate code path in your startup code.   </p>
<p>
In other words, when an application runs as a service of Windows NT Server, the service control manager is usually called to find the application's main function. If the process is artificially running as a console application, calls to the service control manager fail. This is when you should branch, and call your main function explicitly. </p>
<p>
To run your application as a console  application, you must include the WINWRAP.LIB library in your makefile. This will handle the service control manager calls. If you do not include this library, look at the library's source code and make the necessary changes to your application's main function.</p>
<p>
For sample code that illustrates this mechanism, see the <a href="samplgw_0rxv.htm">sample gateway application</a> GWSAMPLE.C. To run the sample gateway as a console application under the Visual C++ debugger, include the <i>notserv</i> startup parameter in your process. To run your executable, choose <b>Settings</b> from the <b>Project</b> menu, and then choose <b>Debug</b>.</p>
<p>
<b>Note</b>  The<i> notserv</i> argument must always be the first argument specified.</p>
<p>&nbsp;</p></body>
</HTML>
