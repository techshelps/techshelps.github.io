<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAPI_PARMS</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_edk_dapi_parms"></a>DAPI_PARMS </h1>
<p>
The <b>DAPI_PARMS</b> structure contains a set of common parameters that are applied to directory calls during the directory session.</p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=23%>Header file:</td>
<td width=77%>DAPI.H</td>
</tr>
<tr valign=top>
<td width=23%>Unicode:</td>
<td width=77%>Yes</td>
</tr>
</table><br>
<pre><code>typedef struct
{
  DWORD        dwDAPISignature;
  DWORD        dwFlags;
  LPTSTR       pszDSAName;
  LPTSTR       pszBasePoint;
  LPTSTR       pszContainer;
  LPTSTR       pszNTDomain;    
  LPTSTR       pszCreateTemplate;
  PDAPI_ENTRY  pAttributes;
}  DAPI_PARMS, *PDAPI_PARMS, *LPDAPI_PARMS;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwDAPISignature</b></dt>
<dd>
Set this value to DAPI_SIGNATURE.</dd>
<dt>
<b>dwFlags</b></dt>
<dd>
Defined values that control directory operations. Use the bitwise OR operator (|) to enable multiple operations. If you set one of this first group of flags in <a href="function_3vuc.htm"><b>DAPIStart</b></a>, you cannot change them in <a href="function_1q79.htm"><b>DAPIWrite</b></a>:
<dl>
<dt>
DAPI_MODIFY_REPLACE_PROPERTIES</dt>
<dd>
Overwrites any existing properties when modifying. If this flag is not specified, the imported file’s data is appended to any existing data associated with the property.</dd>
<dt>
DAPI_CREATE_NT_ACCOUNT</dt>
<dd>
Creates a Windows NT security account whenever a mailbox is created. The Windows NT security account password must be changed on the next logon (the first time the newly created account is used). If a Windows NT account for the user already exists, a warning is posted and the existing account is not changed, but an attempt is still made to create a mailbox. Windows NT account creation is only attempted when a mailbox object is being created in the directory.
<p>
This flag is ignored when importing custom recipients and distribution lists. The function sets the ASSOC-NT-ACCOUNT property (or attribute) to be that of the Windows NT user if the account creation occurred without error. If ASSOC-NT-ACCOUNT is specified in the import file, this value is used instead of the name of the newly created user. The account will be created in the Windows NT Security Domain specified in the <b>pszNTDomain</b> parameter, unless overridden in the Assoc-NT-Account property value, such as seattle\dougie.

<p>
This flag implies DAPI_RESTRICT_ACCESS.
</dd>
<dt>
DAPI_CREATE_RANDOM_PASSWORD</dt>
<dd>
Generates random passwords for newly created Windows NT accounts. If this flag is specified, the function creates a password of random uppercase and lowercase characters of a length equal to the minimum required password length for the Windows NT Server domain. The account name and password will be written into the password file. A password of at least four characters is generated if the minimum password length is less then or equal to four.
<p>
If this flag is not set, the password is constructed using the account name and padded with Xs to meet the minimum required password length.
</dd>
<dt>
DAPI_DELETE_NT_ACCOUNT</dt>
<dd>
When deleting a mailbox, the Windows NT Account named by the mailbox property Assoc-NT-Account will be deleted if this flag is set. If the account does not exist, a warning will be logged, but mailbox deletion will proceed.  </dd>
<dt>
DAPI_RESTRICT_ACCESS</dt>
<dd>
Applies a Windows NT Server security descriptor to created objects.</dd>
</dl>

<p>
<b>Miscellaneous Flags</b>

<dl>
<dt>
DAPI_FORCE_SCHEMA_LOAD</dt>
<dd>
Unloads a previously loaded schema and read the schema again. The default action is to reuse the previously loaded schema if it is read from the same messaging site.</dd>
<dt>
DAPI_RAW_MODE</dt>
<dd>
Imports data in raw mode; which means import lines are taken literally. No properties are inherited or constructed. Aliases for property and class names are not recognized.</dd>
<dt>
DAPI_OVERRIDE_CONTAINER</dt>
<dd>
The container specified in the parameter block overrides the contents of the container column. By default, the value specified in the Obj-Container column overrides the container specified in the parameter block.</dd>
</dl>

<p>
<b>Flags for</b> <a href="function_26qs.htm"><b>DAPIRead</b></a>

<p>
You can also set these flags in <b>DAPIStart</b>. They remain in effect until you override them. If both flags are set, DAPI_READ_ALL_ATTRIBUTES takes precedence.

<dl>
<dt>
DAPI_READ_DEFINED_ATTRIBUTES</dt>
<dd>
Returns all attributes that are set for the current object.</dd>
<dt>
DAPI_READ_ALL_ATTRIBUTES</dt>
<dd>
Returns all attributes that are defined for the class of the current object.</dd>
</dl>

<p>
<b>Flags that control event filtering:</b>

<dl>
<dt>
DAPI_EVENT_MIN </dt>
<dd>
Logs only start and stop messages, but not warning or error messages.</dd>
<dt>
DAPI_EVENT_SOME </dt>
<dd>
Logs start, stop, and error messages.</dd>
<dt>
DAPI_EVENT_ALL </dt>
<dd>
Logs start, stop, error, and warning messages.
</dd>
</dl>
</dd>
<dt>
<b>pszDSAName</b></dt>
<dd>
The computer name of the directory service agent from which to export objects. You can use MAPI function calls to determine this name. See the <i>MAPI Programmer’s Reference</i> for more information. 
<p>
If NULL, the function attempts to find a directory service agent on the local computer and use its name. Otherwise, the function broadcasts for servers and uses the name that is returned as a result of the broadcast.
</dd>
<dt>
<b>pszBasePoint</b></dt>
<dd>
The distinguished name (DN) of the messaging site or DN of the container that serves as the basepoint in the directory information tree for bulk operations. The basepoint is the point in the directory information tree under which the calling application will perform bulk-object creation or manipulation operations. See <a href="function_1cac.htm"><b>BatchExport</b></a> for an explanation of what occurs when this value is either NULL or an empty string (““).</dd>
<dt>
<b>pszContainer</b></dt>
<dd>
The DN or relative distinguished name (RDN) of the default container where the bulk operation begins. If this member is NULL, the directory functions assume that the container is below the level indicated by the <b>pszBasePoint</b> member. If this member is an RDN, the directory functions assume that the container is relative to the level indicated by the <b>pszBasePoint</b> member. The container name in the import file can override this value.</dd>
<dt>
<b>pszNTDomain</b></dt>
<dd>
The name of the primary Windows NT Server domain in which to create or find Windows NT accounts. If this parameter is NULL, the function uses the primary Windows NT Server domain name (the domain on which the executing process’s machine account is logged on). If Windows NT accounts are being created, it is best to specify an actual value for this parameter (that it not be NULL).</dd>
<dt>
<b>pszCreateTemplate</b></dt>
<dd>
A DN (or RDN) of the user object that serves as the template for creating new user objects. If this member is an RDN, the directory functions use the <b>pszBasePoint</b> and <b>pszContainer</b> members to determine the path to the template. If this member is NULL, the directory functions do not use a template when creating new user objects.</dd>
<dt>
<b>pAttributes</b></dt>
<dd>
Points to a <a href="structs_7n5l.htm"><b>DAPI_ENTRY</b></a> structure containing the names of attributes used in the session’s <a href="function_26qs.htm"><b>DAPIRead</b></a> and <a href="function_1q79.htm"><b>DAPIWrite</b></a> function calls. If this member is NULL, <b>DAPIRead</b> and <b>DAPIWrite</b> use attributes passed as arguments.

<p>
<b>Note</b>  In <b>DAPIStart</b>, the value of the <b>pAttributes</b> member takes precedence over any conflicting <b>dwFlags</b> member values.

</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>DAPI_PARMS</b> structure is a parameter to the <b>DAPIStart</b> function.</p>
<p>
For an example of how to initialize the DAPI_PARMS structure, look at the code just before the <b>DAPIStart</b> function call in the DIRSYNC.C code sample.</p>
<h4>See Also</h4>
<p>
<a href="structs_4nxv.htm"><b>BEXPORT_PARMS</b></a>, <a href="structs_5k1f.htm"><b>BIMPORT_PARMS</b></a>, <a href="structs_7n5l.htm"><b>DAPI_ENTRY</b></a>, <a href="function_3vuc.htm"><b>DAPIStart</b></a></p>
<p>&nbsp;</p></body>
</HTML>
