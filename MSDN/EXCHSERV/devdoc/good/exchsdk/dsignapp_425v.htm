<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Client Extension Development Options</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_client_extension_development_options"></a>Client Extension Development Options</h2>
<p>
Instead of developing a separate application or a new user interface, you can extend the Microsoft Exchange Client. You can add command extensions, event extensions, <a href="glossary_1oog.htm#_edk_property_sheet">property sheet</a> extensions, and advanced search criteria, as discussed in the following topics. </p>
<h4>Add Menu Commands to the Microsoft Exchange Client </h4>
<p>
Writing a <a href="glossary_1oo3.htm#_edk_client_extension">client extension</a> is the most common way to add menu commands to the Microsoft Exchange Client. A client extension can be created using several different methods:
<ul>
<li>
Program the extension with Visual C++. This is the most common way to add functionality. </li>
<li>
Use form verbs, which can be listed in the .CFG file used to install a form. The form will then appear in the <b>Compose</b> menu of the Microsoft Exchange Client. </li>
<li>
Use the APPEXEC feature as a development shortcut. It provides backward compatibility with Microsoft Mail 3.x and launches an .EXE file from a menu command.</li>
</ul>
<p>
</p>
<p>
For more information, see the <i>Microsoft Exchange Client Extensions Programmer's Reference.</i> </p>
<h4>Install and Use Customized Event Handling</h4>
<p>
You can build custom event handling into the Microsoft Exchange Client so the client can launch your application at the critical time during normal processing. Examples of events that can be synchronized with your application include:
<ul>
<li>
Delivery of a new message</li>
<li>
Reading of message properties (before or after)</li>
<li>
Resolving an address (before or after)</li>
<li>
Submitting a message for delivery (before or after)</li>
<li>
Opening, reading, or writing an attachment</li>
</ul>
<p>
</p>
<p>
Visual C++ can be used to create customized event handling. For message delivery, the application can be tied to the <a href="glossary_1ood.htm#_edk_mapi_spooler">MAPI spooler</a>. For more information, see <a href="samples1_04vi.htm">CRARUN: Creating a Custom Rule Action</a> and <a href="infostor_6iur.htm">Requesting Object Notifications</a>.</p>
<h4>Create Advanced Search Criteria</h4>
<p>
You can replace the advanced search criteria window with a custom search criteria window. Visual C++ and advanced search criteria extensions can be used to create this functionality. Keep in mind that only one advanced search criteria window at a time is available, so make the context for using yours as specific as possible.</p>
<h4>Add a New Pane to the Viewer Window</h4>
<p>
You can add another pane to the <a href="glossary_1oom.htm#_edk_viewer">Viewer</a> window. The limits of Viewer window development are discussed in <a href="dsignapp_8jn7.htm">Client Application Development Options</a>. </p>
<p>
For complete information about developing <a href="glossary_1oo3.htm#_edk_client_extension">client extensions</a>, see the <i>Microsoft Exchange Client Extensions Programmer's Reference</i>.</p>
<p>&nbsp;</p></body>
</HTML>
