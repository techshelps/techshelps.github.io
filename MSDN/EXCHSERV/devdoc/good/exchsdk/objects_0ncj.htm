<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Required and Optional Message Properties</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_edk_required_and_optional_message_properties"></a>Required and Optional Message Properties</h4>
<p>
Every object has a set of required properties and a set of optional properties. Depending on the object, the service provider supplying the implementation, and the property, a MAPI client can have read/write or read-only access to a property in either set. A required read/write property is a property that must exist on an object before it can be successfully saved with the <b>IMAPIProp::SaveChanges </b>method. A required read-only property is a property that always exists on an object and is therefore always available by calling either <b>IMAPIProp::GetProps</b> or <b>IMAPIProp::OpenProperty</b>. Read-only properties are typically computed by the service provider supplying the object implementation.</p>
<p>
In contrast, MAPI clients cannot expect optional properties to be available or set to valid values. When a MAPI client or service provider calls <b>GetProps</b>, asking for an unavailable property, it succeeds with the warning MAPI_W_ERRORS_RETURNED. However, a call to the MAPI method <b>IMAPIProp::OpenProperty</b> fails with the error MAPI_E_NOT_FOUND. MAPI clients and service providers must verify that a requested property is returned before attempting to use it.</p>
<p>
When an optional property is included as one of the columns in a table, some of the rows might have valid values for the column while others might not. Whether or not a valid value exists for a column depends on whether or not the object providing the information for the row sets the property. Depending on the implementation of the object, a non-existent property can be represented in the table as PR_NULL or an arbitrary value. Users of tables must be careful to differentiate between properties that are nonexistent and have meaningless values and properties that do exist and have valid values. </p>
<p>
To determine exactly which properties are currently set for an object, MAPI clients and service providers can call <b>IMAPIProp::GetPropList</b>. <b>GetPropList</b> lets a caller find out what is available before an attempt to open a potentially nonexistent property is made. Because there is no standard set of properties that all objects of a specific type support, it is impossible to guess whether or not an object supports a particular property. Calling <b>GetPropList</b> eliminates the guesswork.</p>
<p>&nbsp;</p></body>
</HTML>
