<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Designing Property Pages</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_designing_property_pages"></a>Designing Property Pages</h2>
<p>
<a href="glossary_1oog.htm#_edk_property_page">Property pages</a> are dialog boxes that you create with a Windows resource editor. They have specific design requirements.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To design a property page dialog box</h5>
<ol>
<li>
The following two controls are required on every property page:<pre><code>ICON 6031, IDC_ADMINICON,6,6,18,20,WS_GROUP
LTEXT "", IDC_TITLE, 35,8,180,16, WS_GROUP
 </code></pre>
<p>
These controls define standard positions for displaying a title and an icon on the property page. When the property page dialog box is initialized, it is sent a WM_INITDIALOG message. The <a href="glossary_1oo1.htm#_edk_administrator_extension_dll">Administrator extension DLL</a> calls the <a href="function_89wu.htm"><b>PADMIN_SetIcon</b></a> and <a href="function_9azp.htm"><b>PADMIN_SetTitle</b></a> functions to specify where the icon and title are to be displayed, by passing the IDC_ADMINICON and IDC_TITLE resource IDs to the Administrator program.
<p>
The Platform SDK Resource Editor can be used to create the Icon and Text controls, paying attention to the pixel positions that indicate control size and screen placement. Alternatively, you can type the two lines above, verbatim, into your RC file using a text editor.
</li>
<li>
Create at least one tab-stopped control for each property page.</li>
<li>
Write a standard Windows dialog procedure for each property-page dialog box.</li>
<li>
Make sure that the <i>hwnd</i> handle you supply to the dialog procedure of your custom property page is the <i>hwnd</i> handle of the property page itself, not the <i>hwnd</i> of the entire property sheet. <p>
This is important if you intend to display child message or dialog boxes from within the custom property page. In this case, the parent of the <i>hwnd</i> handle should be passed. You can easily obtain this handle by using the Win32 <b>GetParent</b> function. Failing to pass the <i>hwnd</i> handle of the parent window will cause your new dialog box to be nonmodal. This procedure is illustrated in the validation code in the SGWADMIN.CPP file, which is the extension DLL of the sample gateway application. The SGWADMIN.CPP file is located in the BKOFFICE\samples\exchange\SGWADMIN directory. 
<p>
The <b>bValidate</b> member function displays a message box and passes the correct <i>hWnd</i> handle if the user enters invalid data.
</li>
</ol>
<p>
<b>Note</b>  One Administrator extension DLL can support multiple languages. This means you do not have to write additional DLLs if you must localize your application. The Microsoft Exchange Server Administrator program is currently localized into French, German, English (US), and Japanese versions. </p>
<p>&nbsp;</p></body>
</HTML>
