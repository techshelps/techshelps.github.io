<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Saving RTF Text as a Message Property in RTF</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_edk_saving_rtf_text_as_a_message_property_in_rtf"></a>Saving RTF Text as a Message Property in RTF</h3>
<p>
In this case, you are starting with text already in RTF format—perhaps produced by a rich text editor—and you want to save this RTF text into a valid PR_RTF_COMPRESSED property on a message. You must start with a message that does not already contain a PR_RTF_COMPRESSED property. This can be either an existing message or a new message.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To save RTF text into PR_RTF_COMPRESSED</h5>
<ol>
<li>
Open the destination message object with a call to the <b>IMAPIFolder::CreateMessage</b> method (for a new message) or <b>IMAPIFolder::OpenEntry </b>(for an existing message). This call returns an LPMESSAGE pointer to a message object.</li>
<li>
Create the PR_RTF_COMPRESSED message property with a call to the <b>IMAPIProp::OpenProperty</b> method. In this function call, pass the LPMESSAGE pointer to the destination message object, the <b>IID_IStream</b> interface identifier in the <i>lpiid</i> parameter, and the MAPI_CREATE and MAPI_MODIFY flags in the <i>ulFlags</i> parameter.</li>
<li>
Call the MAPI <b>WrapCompressedRTFStream</b> function. This call returns an unwrapped (uncompressed) stream on the PR_RTF_COMPRESSED property. </li>
<li>
Write the original RTF data to the uncompressed stream, using the <b>IStream::CopyTo</b> or <b>IStream::Write</b> methods.</li>
<li>
Call <b>IStream::Commit</b> on the uncompressed stream. This call saves the property in compressed format. </li>
</ol>
<p>&nbsp;</p></body>
</HTML>
