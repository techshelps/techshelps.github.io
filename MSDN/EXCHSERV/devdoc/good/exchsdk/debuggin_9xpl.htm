<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a DEBUG Version of MAPI</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_using_a_debug_version_of_mapi"></a>Using a DEBUG Version of MAPI</h2>
<p>
By default, the RETAIL version of MAPI is installed on your development computer. You can replace the standard DLLs with the DEBUG version of the MAPI DLLs, which are located on the distribution medium. Installing the DEBUG MAPI DLLs changes the behavior of your MAPI-compliant application so that it displays asserts for many different conditions, and provides other valuable testing information. </p>
<p>
The volume of output produced by the DEBUG version of MAPI can be alarming, especially if you apply it to a function that already runs smoothly. The MAPI DEBUG version will point out obscure problems that may not have previously appeared, such as memory leaks. It points out MAPI objects that have not been freed, and memory that was allocated but not released. This internal method is more specific than most outside memory checkers.</p>
<p>
Please note that the steps for installing DEBUG MAPI DLLs on Windows NT Server differ from those used for Windows 95.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To install debug MAPI DLLs for Windows NT Server</h5>
<ol>
<li>
Change to the debug MAPI DLL directory on the distribution medium drive:<p>
<b>CD MSTOOLS\MAPI\WINNTRT\CHECKED</b>
</li>
<li>
Copy the files into the SYSTEM32 directory:<p>
<b>COPY *.* C:\WINNT\SYSTEM32</b>
</li>
</ol>
<p>
</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To install debug MAPI DLLs for Windows 95</h5>
<ol>
<li>
Change to the following directory on the development computer: <p>
<b>CD C:\MSTOOLS\BIN</b>
</li>
<li>
Run the N2D (normal-to-debug) batch file with no switches set:<p>
Type<b> N2D</b>
</li>
</ol>
<p>
</p>
<p>
When you no longer need to test your application by running it with MAPI debug DLLs, you can reinstall the nondebug version. </p>
<p>
You can reinstall standard MAPI DLLs from the \\MSTOOLS\MAPI\WINNTRT directory. These files have the same names as their debug counterparts in the MSTOOLS\MAPI\WINNTRT\CHECKED directory.</p>
<p>
To simplify this task, you can write a batch file to copy the files. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To reinstall nondebug MAPI DLLs for Windows NT Server</h5>
<ol>
<li>
To use a batch file, enter the following lines into a text file, designating the distribution medium in the first line:<p>
<b>CD MSTOOLS\MAPI\WINNTRT\CHECKED</b>
<p>
<b>FOR %%F IN (*.*) DO: </b>
<p>
<b>COPY ..\%%F C:\WINNT\SYSTEM32</b>
</li>
<li>
Run this file by typing its name at the command line.</li>
<li>
Save this file and use it if you need to reinstall the nondebug MAPI DLLs.</li>
</ol>
<p>
</p>
<p>
It is not necessary to use a batch file. You can enter these commands at a command prompt instead. Type the following :</p>
<p class=indent1>
<b>FOR %F IN (*.*) DO COPY ..\%F C:\WINNT\SYSTEM32</b></p>
<p>
Reinstalling MAPI DLLs for Windows 95 can also be done from a batch file or from the command line.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To reinstall nondebug MAPI DLLs for Windows 95</h5>
<ol>
<li>
Change to the following directory on the development computer:<p>
<b>CD C:\MSTOOLS\BIN</b>
<p>
This assumes that the MSTOOLS directory has been installed on the C drive. 
</li>
<li>
Run the D2N (debug-to-normal) batch file with no switches set:<p>
Type<b> D2N</b>
</li>
</ol>
<p>
</p>
<h4>Setting Values in MAPIDBG.INI</h4>
<p>
The MAPI DEBUG DLLs and their behavior are controlled by the MAPIDBG.INI file. For Windows NT Server, this file is located in the %SYSTEMROOT% directory. For Windows 95, it is located in the %WINDR% directory.</p>
<h4>Changing DEBUG MAPI DLL Behavior</h4>
<p>
You can change the behavior of the DEBUG DLLs. For example, you can modify the <b>VirtualMemory</b> DLL tag, the <b>AssertLeaks</b> or <b>DumpLeaks</b> DLL settings, and the <b>FillMemory</b> and <b>FillByte</b> DLL settings.</p>
<p>
If set to 1, the <b>VirtualMemory</b> tag allocates memory and alerts you to memory overruns. If you do overrun memory, it will usually cause a general protection fault rather than allow random overrunning. The <b>VirtualMemory</b> tag clearly shows overrunning because memory is allocated in distinct blocks away from other allocations, and adjoining pages will also be protected. Do not use this setting in a nondebug environment. It is useful only for testing and debugging.  </p>
<p>
The <b>AssertLeaks</b> or <b>DumpLeaks</b> settings display message boxes that describe memory leaks, as well as MAPI objects that have not been freed. They also describe MAPI memory that is allocated but not freed when your application closes. </p>
<p>
When you allocate or free memory, you can turn on memory fills using the <b>FillMemory</b> and <b>FillByte</b> settings. This allows you to clearly see what memory is freed or initialized.</p>
<p>
You can set the following values in the MAPIDBG.INI file:</p>
<pre><code>[General]
DebugTrace=&lt;0/1&gt;
AssertLeaks=&lt;0/1&gt;
AssertBadBlocks=&lt;0/1&gt;           ;Default is on.
VirtualMemory=&lt;0/1/4&gt;
MemoryFillRandom=&lt;0/1&gt;
CheckHeapOften=&lt;0/1&gt;
EventLog=&lt;0/1&gt;
VerboseSpooling=&lt;0/1&gt;
LowPrioritySpooling=&lt;0/1&gt;       ;Default is on.
[Memory Management]
VirtualMemory=&lt;0/1/4&gt;
AssertLeaks=&lt;0/1&gt;
DumpLeaks=&lt;0/1&gt;
FillMemory=&lt;0/1&gt;
FillByte=&lt;0xNN&gt;                 ;Where NN is some hex number.
SharedMemMaxSize=&lt;# of bytes&gt;   ;0 is default. Grow as big as necessary.
[MAPIX]
FlushRegistry=&lt;0/1&gt;             ;0 is default 
[Remoting]
TraceCalls=&lt;0/1&gt;
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
