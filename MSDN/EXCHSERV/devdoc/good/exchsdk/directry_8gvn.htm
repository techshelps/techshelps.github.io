<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Network and RPC Error Codes for Directory Operations</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_network_and_rpc_error_codes_for_directory_operations"></a>Network and RPC Error Codes for Directory Operations</h2>
<p>
The following table lists error codes returned because of network or RPC-related errors when using MAPI to access the directory. These types of errors are usually encountered when the server is low on resources such as memory.</p>
<p>
<b>RPC-Related MAPI Error Codes</b></p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>RPC Error</th>
<th align=left width=53%>MAPI Error Returned</th>
</tr>
<tr valign=top>
<td width=47%>RPC_S_OUT_OF_MEMORY</td>
<td width=53%>MAPI_E_NOT_ENOUGH_MEMORY</td>
</tr>
<tr valign=top>
<td width=47%>RPC_S_OUT_OF_RESOURCES</td>
<td width=53%>MAPI_E_NOT_ENOUGH_RESOURCES</td>
</tr>
<tr valign=top>
<td width=47%>RPC_S_SERVER_TOO_BUSY</td>
<td width=53%>MAPI_E_BUSY</td>
</tr>
<tr valign=top>
<td width=47%>RPC_S_CALL_CANCELLED</td>
<td width=53%>MAPI_E_USER_CANCEL</td>
</tr>
<tr valign=top>
<td width=47%>Other errors</td>
<td width=53%>MAPI_E_NETWORK_ERROR</td>
</tr>
</table><br>
<p>
Most calls to MAPI methods can return these types of errors. You can handle the errors by placing the individual MAPI call into a retry loop that repeats the function call until the error is no longer encountered. You can also place all the code for working with a given message (including individual MAPI calls) into a retry loop. This process differs from that in use by the information store. See <a href="infostor_0lmb.htm">Network and RPC Error Codes for Information Store Operations</a>.</p>
<p>
In a call to the <b>IAddrBook::PrepareRecips</b> function, several address book service providers may be used. If one of the RPC errors listed in the preceding table occurs, this call may fail for some of the service providers — but not necessarily for all. MAPI discards errors from each service provider, which means that the expected list of properties in each ADRENTRY<b> </b>structure may not be present, or may be incomplete.</p>
<h4>WaitForCompletion Not Implemented</h4>
<p>
The Microsoft Exchange Server address book provider does not implement the MAPI method <b>IMAPITable::WaitForCompletion</b>. This means that your applications should not call this method, nor should they call the methods <b>IMAPITable::SortTable</b> or <b>IMAPITable::Restrict</b> with the flag TBL_ASYNC set.</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
