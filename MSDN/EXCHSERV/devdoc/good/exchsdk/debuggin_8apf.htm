<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging Initialization Routines</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_debugging_initialization_routines"></a>Debugging Initialization Routines</h2>
<p>
Usually, the simplest way to use the debugger is to attach it to a running service. However, if you are debugging the service's initialization routines because the service won't start, you may not be able to connect the debugger to your application before the problem appears. To debug initialization routines, you can forego the debugger entirely and use the log file, or insert hard-coded breakpoints in your code. You can also set up a specialized environment within the debugger to debug initialization routines.</p>
<p>
To use the debugger with an initialization routine, you must first edit the <a href="glossary_1oon.htm#_edk_windows_nt_registry">Windows NT Registry</a> so that the <a href="glossary_1ooj.htm#_edk_service_control_manager">service control manager</a> will start both the debugger and the service. Set the value of the ImagePath environment variable to contain a command line that executes the service under a debugger. As an example, the following procedure shows how to debug the Schedule service (one of the default services of Windows NT Server).</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To debug the Schedule service</h5>
<ol>
<li>
Start the <a href="debuggin_9jg2.htm">REGEDT32.EXE</a> program and locate the following registry key:<pre><code>\\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Schedule
 </code></pre>
</li>
<li>
Change the associated value entry for <b>ImagePath</b> from:<pre><code>%SystemRoot%\System32\AtSvc.Exe
 </code></pre>
<p>
to the following:
<pre><code>msvc %SystemRoot%\System32\AtSvc.Exe
 </code></pre>
</li>
<li>
In the <b>Control Panel,</b> choose <b>Services</b>. Select the <b>Schedule</b> service and choose <b>StartUp</b>. In the <b>Log On As </b>field of the <b>Service</b> dialog box, click <b>Allow Service to Interact with Desktop</b>. Click <b>OK</b>.</li>
<li>
In the <b>Services</b> dialog box, click <b>Start</b>. Visual C++ should start immediately.</li>
<li>
Activate the Visual C++ window to begin the debugging process.</li>
</ol>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
