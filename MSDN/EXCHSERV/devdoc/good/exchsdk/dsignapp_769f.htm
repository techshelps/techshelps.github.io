<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Forms, Schedule+, and Gateway Development Options</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_forms_schedule_and_gateway_development_options"></a>Forms, Schedule+, and Gateway Development Options</h2>
<p>
<a href="glossary_1oo6.htm#_edk_form">Forms</a>, Schedule+, and <a href="glossary_1oo7.htm#_edk_gateway">gateways</a> are applications that can be integrated into client and server applications. The following topics discuss application development ideas.</p>
<h4>Developing Customized Forms  </h4>
<p>
You can use Microsoft Exchange Forms Designer to create simple <a href="glossary_1oo6.htm#_edk_form">forms</a> that are tightly integrated with the Microsoft Exchange Client through MAPIFORM.VBX and MSRICHED.VBX. The Forms Designer produces 16-bit Visual Basic 4.0 forms on both 16-bit and 32-bit platforms. </p>
<p>
You can also use C or C++ to develop custom forms. These forms typically perform better than those developed using Visual Basic because you can use callback functions, have read/write access to the MAPI directory, and write 16-bit or 32-bit code. There is also client integration. </p>
<h4>Installing Customized Forms</h4>
<p>
Forms can be manually installed by choosing the <b>Forms Manager</b> dialog box in the Microsoft Exchange Client. Forms will be automatically downloaded to the Forms directory at the client if the version is different. You can specify other forms to download by adding to the [Files] section of the .CFG file.</p>
<p>
It may be necessary to create custom setup code for some types of client extensions or applications that must be installed. You can design a setup program that users run before using the application. You can also create a self-installing form that installs itself, runs, then deletes itself when it is invoked.</p>
<p>
The Microsoft Exchange Server SDK provides helper routines to facilitate setting up a server application. Alternately, MAPI calls can be made to install a form. For more information, see <a href="samples2_1hpp.htm">INSTFORM: Installing a Sample Form</a></p>
<h4>Replacing the Forms Manager</h4>
<p>
You can replace the Forms Manager with a custom application. (Note: Only one instance of Forms Manager can exist on any computer at one time.) MAPI or Visual C++ can be used to design a custom Forms Manager. See the <i>Microsoft Exchange Server Application Designer’s Guide</i> for more information.</p>
<h4>Customizing the Schedule+ Interface</h4>
<p>
It is possible for an application to manipulate all Schedule+ <a href="glossary_1oof.htm#_edk_object">objects</a>, which include:
<ul>
<li>
Schedules</li>
<li>
Appointments</li>
<li>
Attendees</li>
<li>
Alarms</li>
<li>
Events</li>
<li>
Items</li>
<li>
Projects</li>
<li>
Tasks</li>
<li>
Contacts</li>
</ul>
<p>
</p>
<p>
<a href="glossary_1oo1.htm#_edk_automation">Automation</a> (formerly known as OLE Automation), Visual Basic, and Visual C++ can be used to control Schedule+ objects. See <a href="spchap1_7t4j.htm">Customizing Schedule+ Menus</a> and <a href="spchap1_5t2r.htm">Programmable Objects</a>.</p>
<h4>Using Schedule+ for Workflow Applications</h4>
<p>
Workflow applications are commonly used to manipulate Schedule+ objects. You can use Schedule+ objects to route a form based on the available times for each user. The routing can be tied to Schedule+ free/busy times. See the <i>Microsoft</i> <i>Schedule+ Programmer’s Reference</i>.</p>
<h4>Writing Gateways to Other Mail Systems</h4>
<p>
You can write a gateway application to a foreign mail system. The Microsoft Exchange Server SDK provides a sample gateway that can be used or modified. See <a href="samplgw_0rxv.htm">Sample Gateway and Applications</a><i>.</i> </p>
<p>&nbsp;</p></body>
</HTML>
