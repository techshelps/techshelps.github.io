<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Logging On to a Mailbox as a Privileged Service</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_logging_on_to_a_mailbox_as_a_privileged_service"></a>Logging On to a Mailbox as a Privileged Service</h2>
<p>
The <a href="function_57zi.htm"><b>HrMailboxLogon</b></a> and <a href="function_46sm.htm"><b>HrMailboxLogoff</b></a> functions are designed to simplify the task of performing basic mailbox management. The sample code in the following section shows how to implement the two functions listed.  </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To log on to a mailbox as a privileged service</h5>
<ol>
<li>
Open the default information store or another information store. For more information, see <a href="infostor_6ehx.htm">Opening an Information Store</a>. This action creates the information store object and returns a LPMDB pointer to it. </li>
<li>
Call the <b>HrMailboxLogon</b> function. The following sample code shows how to log on to a mailbox using the <b>HrMailboxLogon </b>function. (For more granular control, use the <b>IExchangeManageStore </b>interface. See <a href="infostor_5ixx.htm">Using the <b>IExchangeManageStore</b> Interface</a>.)</li>
</ol>
<p>
The full source code for this sample application is located in BKOFFICE\SAMPLES\EXCHANGE\MBLSAMPL\MBLSAMPL.C. For clarity, error handling is not included in this code sample.</p>
<pre><code>// --------------------------------------------------------------
// Opening a mailbox using privileged access - without error detection.
// --------------------------------------------------------------

AnyFunction()
{
    LPTSTR          lpszProfileName = "Admin Profile";
    LPTSTR          lpszPassword    = NULL;
    LPTSTR          lpszServer      = "/O=Organization/OU=Site/CN=Servers/CN=ServerName/CN=NULL";
    LPTSTR          lpszMailbox     = "/O=Organization/OU=Site/CN=Recipients/CN=MailboxName";
    LPMAPISESSION   lplhSession     = NULL;
    LPMDB           lpMDB           = NULL;     // Ptr to default msg store interface.
    LPMDB           lpMailboxMDB    = NULL;     // Ptr to any another's msg store interface.
    ULONG           cbeid           = 0;      
    LPENTRYID       lpeid           = NULL;   

    MAPIInitialize( NULL);

    MAPILogonEx( 0, lpszProfileName, lpszPassword, 
                 MAPI_NEW_SESSION | MAPI_LOGON_UI | MAPI_EXTENDED, &amp;lplhSession);

    HrMAPIFindDefaultMsgStore( lplhSession, &amp;cbeid, &amp;lpeid);

    MAPICALL( lplhSession)-&gt;OpenMsgStore( lplhSession, 0, cbeid, lpeid,
              NULL, MDB_NO_DIALOG | MAPI_BEST_ACCESS, &amp;lpMDB);

    HrMailboxLogon( lplhSession, lpMDB, lpszMsgStoreDN, lpszMailboxDN, &amp;lpMailboxMDB);

    // Now lpMailboxMDB contains the MAPI interface needed to access the mail box requested.
    ...
}
 </code></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
