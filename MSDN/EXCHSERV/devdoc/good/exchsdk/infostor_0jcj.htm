<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Queue of Notifications</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_the_queue_of_notifications"></a>The Queue of Notifications</h2>
<p>
The server maintains a fixed-size queue of notifications. When the queue limit of 64 notifications is exceeded, the information store provider first tries to collapse notifications. For example, notifications that describe the specific changes in a table are changed into TABLE_CHANGED notifications, which state simply that the table has changed. It no longer provides the row that has been added, deleted, or modified. At this point, the client must reload the entire table to ensure accuracy. When the queue limit is exceeded, it is also possible that some notifications are lost.</p>

<h4><a name="_edk_table_reload_notifications"></a>TABLE_RELOAD Notifications</h4>
<p>
The TABLE_RELOAD flag indicates a need to re-read the table data and start over. When a client receives the TABLE_RELOAD event, it should assume that nothing about the table is still valid. All bookmarks, instance keys, short-term entry identifiers, and status and positioning information are obsolete.</p>
<p>
In almost every case, an application should respond the same way to a TABLE_CHANGED event as to a TABLE_RELOAD event: namely, it should read all the table data again.</p>
<p>&nbsp;</p></body>
</HTML>
