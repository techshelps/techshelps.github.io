<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Selecting Objects to Export</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_edk_selecting_objects_to_export"></a>Selecting Objects to Export</h2>
<p>
Although <a href="glossary_1oo4.htm#_edk_directory_access_functions">directory access functions</a> do not provide generic filtering capabilities, you can use them to select <a href="glossary_1oof.htm#_edk_object">objects</a> (by query) to be exported from the <a href="glossary_1oo4.htm#_edk_directory">directory</a>, through the <a href="function_1cac.htm"><b>BatchExport</b></a> function. To do this, you specify up to three <a href="glossary_1oo1.htm#_edk_attribute">attributes</a> and the values they must contain for the object to be exported. These three attributes can be used as filtering criteria:
<ul>
<li>
<b>USN-Changed</b>  This sequential number indicates when the object was updated relative to other objects on the server. Filtering by this number allows all objects whose USN-Changed is greater than the specified number to be exported. In the <b>BatchExport</b> function call, this attribute is specified in <b>ulUSNBase</b>.</li>
<li>
<b>Object-Class</b>  Filtering by object class means exporting only recipients, only distribution lists, only containers, and so on. You can filter by any object class (or combination of classes) in the schema. Objects of different classes are exported in the order you specify. This fact is useful later when the order in which objects are imported may be significant. For example, you wouldn't want to export <a href="glossary_1ood.htm#_edk_mailbox">mailboxes</a> and their <a href="glossary_1oo3.htm#_edk_container">containers</a>, and then later import the mailboxes before importing their containers. In a call to the <b>BatchExport</b> function, this attribute is specified in the <b>rgpszClasses</b> parameter. </li>
<li>
<b>Home-Server</b>  Designates the home server of the object. The <b>BatchExport</b> function first looks for the <a href="glossary_1oo4.htm#_edk_distinguished_name_dn_">distinguished name (DN)</a> of a <a href="glossary_1ooj.htm#_edk_site">site</a> in the <b>pszHomeServer </b>member of the <a href="structs_4nxv.htm"><b>BEXPORT_PARMS</b></a> structure passed in the <b>BatchExport</b> call. If no site is specified in <b>pszHomeServer</b>, the site name is sought in the DN passed in the <b>pszBasePoint </b>member. If <b>pszBasePoint </b>also does not contain a site, the site name is taken from the DN of the server on which the export process is running. </li>
</ul>
<p>
<b>Note</b>&nbsp;&nbsp;Home-Server is a <a href="glossary_1oog.htm#_edk_pseudo_attribute">pseudo-attribute</a>, which means it is not part of the <a href="glossary_1oo4.htm#_edk_directory_schema">directory schema</a>, and can be used only by <a href="glossary_1oo4.htm#_edk_directory_access_functions">directory access functions</a>. It was created so that you can define a list of <a href="glossary_1ooj.htm#_edk_server">servers</a> for filtering the export operation, the same way you can filter changes by their relative update order with USN-Changed. For more information, see <a href="directry_6cz7.htm">Using Directory Access Pseudo-Attributes</a>.</p>
<p>
The <b>BatchExport</b> function exports objects in all classes you specify. The export operation is then restricted by applying the USN-Changed and Home-Server filters. The <b>BatchExport</b> function does not let you filter objects with other attributes such as When-Changed and When-Created. </p>
<p>
However, by providing a callback function you can do specialized filtering. Because data is passed to your callback function when it is called, you can filter on any criteria you want. You can then use those criteria to decide how to use the exported data, such as whether to write it to a file. Filtering objects or attributes in this manner involves overhead in reading the data from the directory information tree.</p>
<p>
Importing objects does not involve filtering. All objects specified in the import file are imported.</p>
<p>&nbsp;</p></body>
</HTML>
