<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Properties</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_edk_properties"></a>Properties</h1>
<p>
A property is a specific attribute of a Microsoft Exchange Server object. Properties describe something about the object, such as the subject line of a message or the address type of a distribution list. The Microsoft Exchange Server defines many properties, some to describe many objects and some that are appropriate only for a particular type of object. You can extend the set of Microsoft Exchange Server properties by creating new, custom properties. Many Microsoft Exchange Server properties are directly derived from MAPI properties. See the <i>MAPI Programmer's Reference</i> for further information on MAPI properties.</p>
<p>
An object and its properties exist in only one of the following locations:
<ul>
<li>
<b>An information store</b>  You can access information store object properties through the interfaces and functions of the Microsoft Exchange Server SDK, such as using the <a href="function_91id.htm"><b>HrOpenExchangePublicStore</b></a><b> </b>function to open the public information store. See <a href="infostor_2l0z.htm">Information Store Operations</a> for further information on opening the information store.</li>
<li>
<b>A user’s MAPI profile</b>  You can access user profile properties only through the MAPI <b>IProfAdmin</b> interface. For more information, see the <i>MAPI Programmer's Reference</i>.</li>
<li>
<b>The Microsoft Exchange Server directory</b>  You can access the properties of directory objects through the directory access functions (see <a href="directry_6pkj.htm">Using Directory Access Functions</a>). Many directory attributes are equivalent to MAPI address book properties and as such are accessible through the MAPI <b>IAddrBook</b> interface. For more information on this mapping, see <a href="directry_0n3d.htm">Accessing Directory Attributes with MAPI</a>. For general information on using these properties with MAPI, see <a href="directry_41gz.htm">Using MAPI with Directory Objects</a>.</li>
</ul>
<p>
Use the MAPI <b>IMAPIProp </b>interface to access an object’s properties. All objects that have properties implement an interface that inherits from <b>IMAPIProp</b>. Some of the inherited interfaces, such as the MAPI <b>IMessage</b> interface (implemented by message objects), have unique methods beyond those inherited from <b>IMAPIProp</b>. Service providers can implement new object properties, which only the provider can access. For further information, see the <i>MAPI Programmer's Reference</i>.</p>
<p>
There are different types of properties, depending on the type of data that the property value contains, such as an integer, real number, text, or Boolean (see <a href="props1_27n7.htm">Property Types</a>).</p>
<p>
The MAPI <b>SPropValue </b>structure contains information about a property’s type, value, and identifier. For further information, see the <i>MAPI Programmer's Reference</i>.</p>
<p>
The property identifier is a unique number within a specific range of numbers (see MAPIDEFS.H). In addition, each property has a property tag, which consists of a numeric representation of the property type concatenated with its property identifier.</p>
<p>
Property tag names share a common format. Beginning with the PR prefix, they are composed of one or more words that describe the property joined by underscores. For example, PR_USER_NAME is the tag for the property that contains the name of a user of a message store.</p>
<p>
Sometimes the same property can be expressed in different units. In such cases, you may see the same property tag with one of the following suffixes:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=9%>_A</th>
<td width=91%>Expressed as an ANSI string</td>
</tr>
<tr valign=top>
<td width=9%><b>_O</b></td>
<td width=91%>Expressed as an object</td>
</tr>
<tr valign=top>
<td width=9%><b>_T</b></td>
<td width=91%>Expressed as a teletext string</td>
</tr>
<tr valign=top>
<td width=9%><b>_W</b></td>
<td width=91%>Expressed as a wide (Unicode) value</td>
</tr>
</table><br>
<p>
For example, the PR_EMS_AB_IS_MEMBER_OF_DL property (an object that lists the distribution lists that include this mailbox) can be expressed as follows:
<ul>
<li>
PR_EMS_AB_IS_MEMBER_OF_DL_A</li>
<li>
PR_EMS_AB_IS_MEMBER_OF_DL_O</li>
<li>
PR_EMS_AB_IS_MEMBER_OF_DL_T</li>
<li>
PR_EMS_AB_IS_MEMBER_OF_DL_W</li>
</ul>
<p>
All these properties have the same definition, but are expressed in different units.</p>
<p>&nbsp;</p></body>
</HTML>
