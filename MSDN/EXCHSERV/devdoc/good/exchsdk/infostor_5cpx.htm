<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Logging On to a Mailbox Using the IExchangeManageStore Interface</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_edk_logging_on_to_a_mailbox_using_the_iexchangemanagestore_interface"></a>Logging On to a Mailbox Using the IExchangeManageStore Interface</h3>
<p>
The following procedure uses the <b>CreateStoreEntryID</b> method of the <b>IExchangeManageStore</b> interface to log on to a <a href="glossary_1ood.htm#_edk_mailbox">mailbox</a>. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To log on to a mailbox using the IExchangeManageStore interface</h5>
<ol>
<li>
Create a <a href="glossary_1oog.htm#_edk_profile">profile</a> that lists an information store to which your service will log on. The service’s Windows NT security ID should be listed as the owner of the store. This store is usually not used for any purpose other than logging on to MAPI.</li>
<li>
Initialize MAPI using <b>MAPIInitialize</b>.</li>
<li>
Log on to MAPI using <b>MAPILogonEx</b> and specify the previously created profile.</li>
<li>
Get the entry identifier of the default information store, which in this case is the Microsoft Exchange Server information store. Use the <b>HrMAPIFindDefaultMsgStore</b> function or make direct MAPI calls to perform this action.</li>
<li>
Open the mailbox listed in the profile using the <b>IMAPISession::OpenMsgStore</b> function. Microsoft Exchange Server examines the Windows NT security identifier under which your application is running and compares this with the <a href="glossary_1oo1.htm#_edk_access_control_list_acl_">access control list (ACL)</a> that has been set on the mailbox object in the Microsoft Exchange Server <a href="glossary_1oo4.htm#_edk_directory">directory</a>. If the application does not have the appropriate rights, the call to <b>OpenMsgStore</b> will fail.</li>
<li>
Obtain a pointer to <b>IExchangeManageStore</b> by calling the <b>QueryInterface</b> method of the message store object.</li>
<li>
Call <b>IExchangeManageStore::CreateStoreEntryID</b>, passing the <a href="glossary_1oo4.htm#_edk_distinguished_name_dn_">distinguished names (DNs)</a> of the server and the mailbox, as well as the privileges your service is to have for the mailbox. For example, you could specify an OR’d combination of bits such as OPENSTORE_USE_ADMIN_PRIVILEGE | OPENSTORE_TAKE_OWNERSHIP. The function formats an entry identifier and does not access the information store. This means calls to the <b>CreateStoreEntryID</b> function are relatively fast and require no server resources.</li>
<li>
Open the information store using the pointer to the entry identifier that is returned from <b>CreateStoreEntryID</b>. Do this by calling the <b>IMAPISession::OpenMsgStore</b> method. In this call, make sure to specify the flag MDB_TEMPORARY. Otherwise, the store you are opening may be added to your profile.</li>
</ol>
<p>
</p>
<p>
The following sample code shows how to implement the previously listed steps. The sample code is the implementation of the <b>HrMailboxLogon</b> function, located in \BKOFFICE\SAMPLES\EXCHANGE\LIBSRC\MBLOGON\MBLOGON.C.</p>
<p>
<b>Note</b>  The MBLOGON sample application includes error checking. For clarity, error checking has been removed from this code sample. </p>
<pre><code>// -----------------------------------------------------------------
// HrMailboxLogon() without any error detection.
// -----------------------------------------------------------------

HRESULT HrMailboxLogon(
   IN  LPMAPISESSION   lplhSession,            // ptr to MAPI session handle
   IN  LPMDB           lpMDB,                  // ptr to message store
   IN  LPTSTR          lpszMsgStoreDN,         // ptr to server DN
   IN  LPTSTR          lpszMailboxDN,          // ptr to mailbox DN
   OUT LPEXCHANGEMANAGESTORE *lppXManageStore, // ptr to manage mailbox interface ptr
   OUT LPMDB           *lppMailboxMDB)         // ptr to mailbox message store ptr
{
    ULONG       cbeid   = 0;      // count of bytes in entry ID
    LPENTRYID   lpeid   = NULL;   // Entry ID of default store

    MAPICALL( lpMDB)-&gt;QueryInterface( lpMDB, (REFIID) &amp;IID_IExchangeManageStore,
        (LPVOID*) lppXManageStore);

    MAPICALL( *lppXManageStore)-&gt;CreateStoreEntryID(
        *lppXManageStore, lpszMsgStoreDN, lpszMailboxDN,
        OPENSTORE_USE_ADMIN_PRIVILEGE | OPENSTORE_TAKE_OWNERSHIP,
        &amp;cbeid, &amp;lpeid);

    MAPICALL( lplhSession)-&gt;OpenMsgStore(
        lplhSession, 0, cbeid, lpeid, NULL, MDB_NO_DIALOG | MAPI_BEST_ACCESS, 
        lppMailboxMDB);

    MAPIFREEBUFFER( lpeid);
    
    return( NOERROR);
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
