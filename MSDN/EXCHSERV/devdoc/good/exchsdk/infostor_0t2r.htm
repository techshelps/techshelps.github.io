<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Obtaining Microsoft Exchange Server Interfaces</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_edk_obtaining_microsoft_exchange_server_interfaces"></a>Obtaining Microsoft Exchange Server Interfaces</h1>
<p>
Many of the programming tasks that manipulate information store data rely on the use of Microsoft Exchange Server interfaces. Most of these interfaces are available through the extensibility mechanism that MAPI provides for objects. </p>
<p>
This mechanism is the support MAPI provides for properties that are themselves objects. These object properties have the type PT_OBJECT and implement the <b>IUnknown</b> interface. For properties of this type, call the <b>IMAPIProp::OpenProperty</b> method instead of <b>GetProps</b>. As indicated in the following table, you need to pass the correct value in the <i>lpiid</i> parameter to obtain the correct interface.</p>
<p>
In some cases, you obtain an interface pointer by calling a function designed to return that pointer, such as <b>HrFolderACLsOpen</b>.</p>
<p>
The following table lists the interfaces provided by Microsoft Exchange Server and the actions you take to obtain a pointer to each. </p>
<p>
<b>Microsoft Exchange Server Interfaces</b></p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=36%>Interface</th>
<th align=left width=64%>To obtain a pointer to this interface</th>
</tr>
<tr valign=top>
<td width=36%><a href="intrface_2u9f.htm"><b>IExchangeExportChanges</b></a></td>
<td width=64%>The controlling process (agent) must open the store and call the MAPI <b>IMAPIProp::OpenProperty</b> method on either the <a href="props1_6fjm.htm">PR_CONTENTS_SYNCHRONIZER</a> property (to synchronize the contents of a folder) or the <a href="props4_4xbm.htm">PR_HIERARCHY_SYNCHRONIZER</a> property (to synchronize the hierarchy of a folder). When calling the <b>OpenProperty</b> method, pass the value IID_IExchangeExportChanges in the <i>lpiid</i> parameter.</td>
</tr>
<tr valign=top>
<td width=36%><a href="intrface_8wfn.htm"><b>IExchangeFavorites</b></a></td>
<td width=64%>Call the MAPI <b>IMAPIProp::GetProps</b> method with the PR_IPM_FAVORITES_ENTRYID property and then the MAPI <b>IMsgStore::OpenEntry</b> method with that entry identifier. When calling the <b>OpenEntry</b> method, pass the value IID_IExchangeFavorites in the <i>lpInterface </i>parameter. </td>
</tr>
<tr valign=top>
<td width=36%><a href="intrface_6iur.htm"><b>IExchangeFolderACLs</b></a></td>
<td width=64%>Call the <a href="function_1e7i.htm"><b>HrFolderACLsOpen</b></a> function.</td>
</tr>
<tr valign=top>
<td width=36%><a href="intrface_1qgj.htm"><b>IExchangeFolderRules</b></a></td>
<td width=64%>Call the <a href="function_341a.htm"><b>HrFolderRulesOpen</b></a> function.</td>
</tr>
<tr valign=top>
<td width=36%><a href="intrface_9j1v.htm"><b>IExchangeImportContentsChanges</b></a></td>
<td width=64%>The controlling process (agent) must open the store and call the MAPI <b>IMAPIProp::OpenProperty</b> method on the PR_COLLECTOR property of the object. When calling the <b>OpenProperty</b> method, pass the value IID_IExchangeImportContentsChanges in the <i>lpiid</i> parameter.</td>
</tr>
<tr valign=top>
<td width=36%><a href="intrface_7tpv.htm"><b>IExchangeImportHierarchyChanges</b></a></td>
<td width=64%>The controlling process (agent) must open the store and call the MAPI <b>IMAPIProp::OpenProperty</b> method on the PR_COLLECTOR property of the object. When calling the <b>OpenProperty</b> method, pass the value IID_IExchangeImportHierarchyChanges in the <i>lpiid</i> parameter.</td>
</tr>
<tr valign=top>
<td width=36%><a href="intrface_6f6t.htm"><b>IExchangeManageStore</b></a></td>
<td width=64%>Call the <b>QueryInterface</b> method of the information store object. </td>
</tr>
<tr valign=top>
<td width=36%><a href="intrface_1iw5.htm"><b>IExchangeModifyTable</b></a></td>
<td width=64%>Call the MAPI <b>IMAPIProp::OpenProperty</b> method on any property of type PT_OBJECT. When calling the <b>OpenProperty</b> method, pass the value IID_IExchangeModifyTable in the <i>lpiid</i> parameter.</td>
</tr>
<tr valign=top>
<td width=36%><a href="intrface_208e.htm"><b>IExchangeRuleAction</b></a></td>
<td width=64%>Call the MAPI <b>IMAPIProp::OpenProperty</b> method on the PR_CLIENT_ACTIONS property of the object. When calling the <b>OpenProperty</b> method, pass the value IID_IExchangeRuleAction in the <i>lpiid</i> parameter.</td>
</tr>
</table><br>
<p>
For more information, see <a href="intrface_3bg3.htm">Microsoft Exchange Server Interfaces</a>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
