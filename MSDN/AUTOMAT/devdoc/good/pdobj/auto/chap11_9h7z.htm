<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISupportErrorInfo::InterfaceSupportsErrorInfo</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_isupporterrorinfo_interfacesupportserrorinfo"></a>ISupportErrorInfo::InterfaceSupportsErrorInfo</h1>
<p>
<b>HRESULT InterfaceSupportsErrorInfo(</b></p>
<pre><code><b>REFIID </b><i> riid  </i>
<b>);</b>
 </code></pre>
<p>
Indicates whether or not an interface supports the <b>IErrorInfo </b>interface.</p>
<h4>Parameter</h4>
<dl>
<dt>
<i>riid</i></dt>
<dd>
Pointer to an interface identifier (IID).
</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Return value</th>
<th align=left width=59%>Meaning</th>
</tr>
<tr valign=top>
<td width=41%>S_OK </td>
<td width=59%>Interface supports <b>IErrorInfo.</b></td>
</tr>
<tr valign=top>
<td width=41%>S_FALSE</td>
<td width=59%>Interface does not support<b> IErrorInfo</b>.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
Objects that support the <b>IErrorInfo</b> interface must also implement this interface.</p>
<p>
Programs that receive an error return value should call <b>QueryInterface</b> to get a pointer to the <b>ISupportErrorInfo</b> interface, and then call <b>InterfaceSupportsErrorInfo</b> with the <i>riid</i> of the interface that returned the return value. If <b>InterfaceSupportsErrorInfo </b>returns S_FALSE, then the error object does not represent an error returned from the caller, but from somewhere else. In this case, the error object can be considered incorrect and should be discarded.</p>
<p>
If <b>ISupportErrorInfo </b>returns S_OK, use the <a href="chap11_2nlb.htm"><b>GetErrorInfo</b></a><b> </b>function to get a pointer to the error object.</p>
<h4>Example</h4>
<p>
The following example implements the <b>ISupportErrorInfo</b> for the Lines sample. The <b>IErrorInfo</b> implementation also supports the <b>AddRef</b>, <b>Release</b>, and <b>QueryInterface</b> members inherited from the <b>IUnknown</b> interface.</p>
<pre><code>CSupportErrorInfo::CSupportErrorInfo(IUnknown FAR* punkObject, REFIID riid)
{
    m_punkObject = punkObject;
    m_iid = riid;
}


STDMETHODIMP
CSupportErrorInfo::QueryInterface(REFIID iid, void FAR* FAR* ppv)
{
    return m_punkObject-&gt;QueryInterface(iid, ppv);
}


STDMETHODIMP_(ULONG)
CSupportErrorInfo::AddRef(void)
{
    return m_punkObject-&gt;AddRef();
}

STDMETHODIMP_(ULONG)
CSupportErrorInfo::Release(void)
{
    return m_punkObject-&gt;Release();
}

STDMETHODIMP
CSupportErrorInfo::<b>InterfaceSupportsErrorInfo</b>(REFIID riid)
{
    return (riid == m_iid) ? NOERROR : ResultFromScode(S_FALSE);
}
</code></pre>
<p>&nbsp;</p></body>
</HTML>
