<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEnumVARIANT::Clone</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_ienumvariant_clone"></a>IEnumVARIANT::Clone</h1>
<pre><code><b>HRESULT Clone( 
  IEnumVARIANT FAR* FAR* </b><i> ppEnum  </i>
<b>);</b>
 </code></pre>
<p>
Creates a copy of the current state of enumeration.</p>
<h4>Parameter</h4>
<dl>
<dt>
<i>ppEnum</i></dt>
<dd>
On return, pointer to the location of the clone enumerator.
</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=35%>Return value</th>
<th align=left width=65%>Meaning</th>
</tr>
<tr valign=top>
<td width=35%>S_OK</td>
<td width=65%>Success.</td>
</tr>
<tr valign=top>
<td width=35%>E_OUTOFMEMORY</td>
<td width=65%>Insufficient memory to complete the operation.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
Using this function, a particular point in the enumeration sequence can be recorded, and then returned to at a later time. The returned enumerator is of the same actual interface as the one that is being cloned.</p>
<p>
There is no guarantee that exactly the same set of variants will be enumerated the second time as was enumerated the first. Although an exact duplicate is desirable, the outcome depends on the collection being enumerated. You may find that it is impractical for some collections to maintain this condition (for example, an enumeration of the files in a directory).</p>
<h4>Example</h4>
<p>
The following code implements <b>IEnumVariant::Clone </b>for collections in the Lines sample file Enumvar.cpp.</p>
<pre><code>STDMETHODIMP
<b>CEnumVariant::Clone</b>(IEnumVARIANT FAR* FAR* ppEnum)
{
    CEnumVariant FAR* penum = NULL;
    HRESULT hr;

    *ppenum = NULL;

    hr = CEnumVariant::Create(m_psa, m_cElements, &amp;penum);
    if (FAILED(hr))
        goto error;
    penum-&gt;AddRef();
    penum-&gt;m_lCurrent = m_lCurrent;

    *ppenum = penum;
    return NOERROR;

error:
    if (penum)
        penum-&gt;Release();
    return hr;
}
</code></pre>
<p>&nbsp;</p></body>
</HTML>
