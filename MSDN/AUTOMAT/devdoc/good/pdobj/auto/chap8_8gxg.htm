<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>struct</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_struct"></a>struct</h1>
<p>
This statement defines a C-style structure.</p>
<h4>Syntax</h4>
<p>
<b>typedef [</b><i>attributes</i><b>]<br>
struct </b>[<i>tag</i>] <b>{</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>memberlist</i><br>
<b>}</b> <i>structname</i><b>;</b></p>
<h4>Syntax Elements</h4>
<dl>
<dt>
<i>attributes</i></dt>
<dd>
The attributes<b> helpstring, helpcontext, uuid, <a href="chap8_8mum.htm">hidden</a></b><i>,</i> and<b> version </b>are accepted before a <b>struct </b>statement. The attributes<b> helpstring, helpcontext,</b><i> </i>and <a href="chap8_3ylv.htm#_oa96_string_8"><b>string</b></a><b> </b>are accepted on a structure member. For more information about the attributes accepted before a structure definition, see "<a href="chap8_97n7.htm">Attribute Descriptions</a>" earlier in this chapter. Attributes (including the brackets) can be omitted. If <b>uuid</b> is omitted, the structure is not specified uniquely in the system.</dd>
<dt>
<i>tag</i></dt>
<dd>
An optional tag, as with a C <b>struct</b>.</dd>
<dt>
<i>memberlist</i></dt>
<dd>
List of structure members defined with C syntax.</dd>
<dt>
<i>structname</i></dt>
<dd>
Name by which the structure is known in the type library.
</dd>
</dl>
<h4>Comments</h4>
<p>
The <b>struct</b> keyword must be preceded with a <b>typedef</b>. The structure description must precede other references to the structure in the library. Members of a <b>struct </b>can be of any built-in type, or any type defined lexically as a <b>typedef</b> before the <b>struct</b>. For a description of how strings and arrays can be entered, see the sections "<a href="chap8_0dwz.htm">String Definitions</a>" and "<a href="chap8_9zzn.htm">Array Definitions</a>" earlier in this chapter.</p>
<h4>Example</h4>
<pre><code>typedef [uuid(BFB7334B-822A-1068-8849-00DD011087E8),
    helpstring("A task"), helpcontext(1019)]
struct {
    DATE startdate;
    DATE enddate;
    BSTR ownername;
    SAFEARRAY (int) subtasks;
    int A_C_array[10];
} TASKS;
</code></pre>
<p>&nbsp;</p></body>
</HTML>
