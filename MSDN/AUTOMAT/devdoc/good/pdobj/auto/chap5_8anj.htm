<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDispatch::GetTypeInfo</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_idispatch_gettypeinfo"></a>IDispatch::GetTypeInfo</h1>
<pre><code><b>HRESULT GetTypeInfo( 
  unsigned int </b><i> iTInfo</i><b>,         </b>
<b>  LCID </b><i> lcid</i><b>,                   </b>
<b>  ITypeInfo FAR* FAR* </b><i> ppTInfo  </i>
<b>);</b>
 </code></pre>
<p>
Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>iTInfo</i></dt>
<dd>
The type information to return. Pass 0 to retrieve type information for the <b>IDispatch</b> implementation.</dd>
<dt>
<i>lcid</i></dt>
<dd>
The locale identifier for the type information. An object may be able to return different type information for different languages. This is important for classes that support localized member names. For classes that do not support localized member names, this parameter can be ignored.</dd>
<dt>
<i>ppTInfo</i></dt>
<dd>
Receives a pointer to the requested type information object.

</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Return value</th>
<th align=left width=60%>Meaning</th>
</tr>
<tr valign=top>
<td width=40%>S_OK</td>
<td width=60%>Success; the type information element exists.</td>
</tr>
<tr valign=top>
<td width=40%>DISP_E_BADINDEX</td>
<td width=60%>Failure; <i>iTInfo</i> argument was not 0.</td>
</tr>
<tr valign=top>
<td width=40%>TYPE_E_ELEMENTNOTFOUND</td>
<td width=60%>Failure; <i>iTInfo</i> argument was not 0.</td>
</tr>
</table><br>
<h4>Example</h4>
<p>
The following code from the sample file Lines.cpp loads information from the type library and implements the member function <b>GetTypeInfo</b>: </p>
<pre><code>// These lines are from CLines::Create load type information for the
// Lines collection from the type library. 
    hr = LoadTypeInfo(&amp;pLines-&gt;m_ptinfo, IID_ILines);
    if (FAILED(hr))
        goto error;

// Additional code omitted for brevity.

// This function implements GetTypeInfo for the CLines collection.
STDMETHODIMP
CLines::<b>GetTypeInfo</b>(
        UINT iTInfo,
        LCID lcid,
        ITypeInfo FAR* FAR* ppTInfo)
{
    *ppTInfo = NULL;

    if(iTInfo != 0)
        return ResultFromScode(DISP_E_BADINDEX);

    m_ptinfo-&gt;AddRef();
    *ppTInfo = m_ptinfo;

    return NOERROR;
}
 </code></pre>
<h4>See also</h4>
<p>
<a href="chap5_0mnc.htm"><b>CreateStdDispatch</b></a><b>, <a href="chap5_5wbz.htm">CreateDispTypeInfo</a></b>.</p>
<p>&nbsp;</p></body>
</HTML>
