<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VariantCopyInd</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_variantcopyind"></a>VariantCopyInd</h1>
<pre><code><b>HRESULT VariantCopyInd( 
  VARIANT FAR* </b><i> pvarDest</i><b>,  </b>
<b>  VARIANTARG FAR* </b><i> pvargSrc  </i>
<b>);</b>
 </code></pre>
<p>
Frees the destination variant and makes a copy of the source VARIANTARG, performing the necessary indirection if the source is specified to be VT_BYREF.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>pvarDest</i></dt>
<dd>
Pointer to the VARIANTARG that will receive the copy.</dd>
<dt>
<i>pvargSrc</i></dt>
<dd>
Pointer to the VARIANTARG that will be copied.
</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=37%>Return value</th>
<th align=left width=63%>Meaning</th>
</tr>
<tr valign=top>
<td width=37%>S_OK</td>
<td width=63%>Success.</td>
</tr>
<tr valign=top>
<td width=37%>DISP_E_ARRAYISLOCKED</td>
<td width=63%>The variant contains an array that is locked.</td>
</tr>
<tr valign=top>
<td width=37%>DISP_E_BADVARTYPE</td>
<td width=63%>The source and destination have an invalid variant type (usually uninitialized).</td>
</tr>
<tr valign=top>
<td width=37%>E_OUTOFMEMORY</td>
<td width=63%>Memory could not be allocated for the copy.</td>
</tr>
<tr valign=top>
<td width=37%>E_INVALIDARG</td>
<td width=63%>The argument <i>pvargSrc</i> was VT_ARRAY.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
This function is useful when a copy of a variant is needed, and to guarantee that it is not VT_BYREF, such as when handling arguments in an implementation of <a href="chap5_61id.htm"><b>IDispatch::Invoke</b></a>.</p>
<p>
For example, if the source is a (VT_BYREF | VT_I2), the destination will be a BYVAL | VT_I2. The same is true for all legal VT_BYREF combinations, including VT_VARIANT.</p>
<p>
If <i>pvargSrc</i> is (VT_BYREF | VT_VARIANT), and the contained variant is VT_BYREF, the contained variant is also dereferenced.</p>
<p>
This function frees any existing contents of <i>pvarDest</i>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.1 and later. <br>
&nbsp;&nbsp;<b>Windows:</b> Use Windows 95 and later. <br>
&nbsp;&nbsp;<b>Header:</b> Declared in oleauto.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with oleaut32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
