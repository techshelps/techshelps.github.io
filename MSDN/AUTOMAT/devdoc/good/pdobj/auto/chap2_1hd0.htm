<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interpreting Arguments and Strings Based on the Locale ID</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_oa96_interpreting_arguments_and_strings_based_on_the_locale_id"></a>Interpreting Arguments and Strings Based on the Locale ID</h2>
<p>
Some methods or properties need to interpret arguments based on the LCID. These methods or properties can require that an LCID be passed as an argument. Therefore, properties should be designed to have an LCID parameter.</p>
<p>
The following example code of an object description language file implements a property that takes a LCID. </p>
<pre><code>[
    uuid(83219430-CB36-11cd-B774-00DD01103DE1),
    helpstring("Bank Account object."),
    oleautomation,
    dual
    ]
    interface IBankAccount : IDispatch
    {
        [propget, helpstring("Returns account balance formatted for the             country described by localeID.")]
        HRESULT CheckingBalance([in, lcid] long localeID, [out, retval]         BSTR* retval);
        :
    }
 </code></pre>
<p>
In this example, <b>get_CheckingBalance</b> returns a currency string that contains the balance in the checking account. The currency string should be correctly formatted depending on the locale that is passed in. <b>ConvertCurrency</b> is a private function that converts the checking balance to the currency of the country described by the LCID. The string form of converted currency is placed in<b> m_szBalance</b>. <b>GetCurrencyFormat</b> is a 32-bit Windows function that formats a currency string for the given locale.</p>
<p>
The following represents the information contained in the header file:</p>
<pre><code>class FAR CBankAccount : public IBankAccount
{
    public:
    // IUnknown methods (omitted).
        :

    // IDispatch methods (omitted).
        :

    // IBankAccount methods.
    STDMETHOD(get_CheckingBalance)(long llcid, BSTR FAR* pbstr);
        :
}
 </code></pre>
<p>
The following represents the .cpp file:</p>
<pre><code>STDMETHODIMP
CBankAccount::get_CheckingBalance(long llcid, BSTR FAR* pbstr)
{
    TCHAR ach[100];
    ConvertCurrency(llcid);
        GetCurrencyFormat(llcid, 0, m_szBalance, NULL, ach,
        sizeof(ach));
        *pbstr = SysAllocString(ach);         // Return currency string                                                 // formatted according to 
                                            // locale ID. 
                                     
        return NOERROR;
}
 </code></pre>
<p>
The LCID is commonly used to parse strings that contain locale-dependent information. For example, a function that takes a string such as "6/11/96" needs the LCID to determine whether the month is June (6) or November (11). You should not use the LCID for output strings, including error strings. These strings should always be displayed in the current system language.</p>
<p>&nbsp;</p></body>
</HTML>
