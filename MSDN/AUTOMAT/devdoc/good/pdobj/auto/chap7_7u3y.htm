<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SysAllocStringLen</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_sysallocstringlen"></a>SysAllocStringLen</h1>
<pre><code><b>BSTR SysAllocStringLen( 
  OLECHAR FAR* </b><i> pch</i><b>, </b>
<b>  unsigned int </b><i> cch  </i>
<b>);</b>
 </code></pre>
<p>
Allocates a new string, copies <i>cch</i> characters from the passed string into it, and then appends a null character. </p>
<p>
Note: This function does NOT convert a char * string into a unicode BSTR. The BSTR  returned with this function can only be used with 16 bit applications.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>pch</i></dt>
<dd>
A pointer to <i>cch</i> characters to copy, or Null to keep the string uninitialized.</dd>
<dt>
<i>cch</i></dt>
<dd>
Number of characters to copy from <i>pch.</i><b> </b>A null character is placed afterwards, allocating a total of <i>cch</i>+1 characters.
</dd>
</dl>
<h4>Return Value</h4>
<p>
Points to a copy of the string, or Null if insufficient memory exists.</p>
<h4>Comments</h4>
<p>
If <i>pch</i> is Null, a string of the requested length is allocated, but not initialized. The <i>pch</i> string can contain embedded null characters and does not need to end with a Null. Free the returned string later with <a href="chap7_2g6f.htm"><b>SysFreeString</b></a>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.1 and later. <br>
&nbsp;&nbsp;<b>Windows:</b> Use Windows 95 and later. <br>
&nbsp;&nbsp;<b>Header:</b> Declared in oleauto.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with oleaut32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
