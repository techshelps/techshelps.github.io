<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Building a Type Library</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_oa96_building_a_type_library"></a>Building a Type Library</h2>
<p>
The MIDL compiler and the MkTypLib utility build type libraries. These tools are  described in Chapter 8, "<a href="chap8_75b9.htm">Type Libraries and the Object Description Language</a>." </p>
<h5>&nbsp;&nbsp;&nbsp;&nbsp;To create a type library from an object description script</h5>
<p>
Run the MIDL compiler or MkTypLib tool on the script. For example:</p>
<pre><code>MIDL /TLB output.tlb /H output.h inscript.odl</code></pre>
<p>
or</p>
<pre><code>MKTYPLIB /TLB output.tlb /H output.h inscript.odl
</code></pre>
<p>
Based on the object description script <code>inscript.odl</code>, the example creates a type library named <code>output.tlb</code> and a header file named <code>output.h</code>.</p>
<p>
After creating the type library, you can include it in the resource step of building your application, or leave it as a stand-alone file. In either case, be sure to specify the file name and path of the library in the application's registration (.reg) file, so Automation can find the type library when necessary. See the following section for information on registering the type library.</p>
<h5>&nbsp;&nbsp;&nbsp;&nbsp;To build an application that uses a type library</h5>
<ol>
<li>
Include the header file in the project.</li>
<li>
Compile the project.</li>
<li>
Optionally, use the Resource Compiler (RC) to bind the type library with the compiled project. The type library can bind with DLLs or executable files. For example, to bind a type library named <code>output.tlb</code> with a DLL, use the following statement in the .rc file for the DLL:<pre><code>1 typelib output.tlb
</code></pre>
</li>
</ol>
<p>
A DLL that contains a type library resource usually has the .olb (object library) extension.</p>
<p>&nbsp;</p></body>
</HTML>
