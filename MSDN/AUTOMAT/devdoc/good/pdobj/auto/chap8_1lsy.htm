<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Differences between MIDL and MkTypLib</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_oa96_differences_between_midl_and_mktyplib"></a>Differences Between MIDL and MkTypLib</h2>
<p>
There are a few key areas in which the MIDL compiler differs from the MkTypLib utility. Most of these differences arise because MIDL is more C-syntax oriented than MkTypLib. All of the differences described here, with the exception of floating point constants and the <b>enum</b> scope, can be resolved by using the <b>/mktyplib203</b> MIDL compiler option (see “The /mktyplib203 Option” later in this chapter). This switch forces MIDL to behave like MkTypLib.exe, version 2.03, the last release of MkTypLib.exe.</p>
<p>
In general, you will want to use the MIDL syntax in your .idl files. However, the <b>/mktyplib203</b> option is useful if you need to compile an existing .odl file, or otherwise maintain compatibility with MkTypLib.</p>
<p>&nbsp;</p></body>
</HTML>
