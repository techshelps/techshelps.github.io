<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SafeArrayAllocDescriptor</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_safearrayallocdescriptor"></a>SafeArrayAllocDescriptor</h1>
<pre><code><b>HRESULT SafeArrayAllocDescriptor( 
  unsigned int </b><i> cDims</i><b>,          </b>
<b>  SAFEARRAY FAR* FAR* </b><i> ppsaOut  </i>
<b>);</b>
 </code></pre>
<p>
Allocates memory for a safe array descriptor.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>cDims</i></dt>
<dd>
The number of dimensions of the array.</dd>
<dt>
<i>ppsaOut</i></dt>
<dd>
Pointer to a location in which to store the created array descriptor.
</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=30%>Return value</th>
<th align=left width=70%>Meaning</th>
</tr>
<tr valign=top>
<td width=30%>S_OK</td>
<td width=70%>Success.</td>
</tr>
<tr valign=top>
<td width=30%>E_INVALIDARG</td>
<td width=70%>The argument <i>psa</i> was not a valid safe array descriptor.</td>
</tr>
<tr valign=top>
<td width=30%>E_UNEXPECTED</td>
<td width=70%>The array could not be locked. </td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
This function allows the creation of safe arrays that contain elements with data types other than those provided by <a href="chap7_1rvp.htm"><b>SafeArrayCreate</b></a>. After creating an array descriptor using <b>SafeArrayAllocDescriptor</b>, set the element size in the array descriptor, an call <a href="chap7_26ox.htm"><b>SafeArrayAllocData</b></a> to allocate memory for the array elements.</p>
<h4>Example</h4>
<p>
The following example creates a safe array using the <b>SafeArrayAllocDescriptor</b> and <b>SafeArrayAllocData</b> functions.</p>
<pre><code>SAFEARRAY FAR* FAR*ppsa;
unsigned int ndim =  2;
HRESULT hresult = SafeArrayAllocDescriptor( ndim, ppsa );
if( FAILED( hresult ) )
    return ERR_OutOfMemory;
(*ppsa)-&gt;rgsabound[ 0 ].lLbound = 0;
(*ppsa)-&gt;rgsabound[ 0 ].cElements = 5;
(*ppsa)-&gt;rgsabound[ 1 ].lLbound = 1;
(*ppsa)-&gt;rgsabound[ 1 ].cElements = 4;
hresult = SafeArrayAllocData( *ppsa );
if( FAILED( hresult ) ) {
    SafeArrayDestroyDescriptor( *ppsa )
    return ERR_OutOfMemory;
}
</code></pre>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.1 and later. <br>
&nbsp;&nbsp;<b>Windows:</b> Use Windows 95 and later. <br>
&nbsp;&nbsp;<b>Header:</b> Declared in oleauto.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with oleaut32.lib.</p>
<h4>See Also</h4>
<p>
<a href="chap7_26ox.htm"><b>SafeArrayAllocData</b></a>, <a href="chap7_1529.htm"><b>SafeArrayDestroyData</b></a>, <a href="chap7_7vw2.htm"><b>SafeArrayDestroyDescriptor</b></a></p>
<p>&nbsp;</p></body>
</HTML>
