<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITypeInfo::GetDllEntry</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_itypeinfo_getdllentry"></a>ITypeInfo::GetDllEntry</h1>
<pre><code><b>HRESULT GetDllEntry( 
  MEMBERID </b><i> memid</i><b>,                </b>
<b>  INVOKEKIND </b><i> invKind</i><b>,            </b>
<b>  BSTR FAR* </b><i> pBstrDllName</i><b>,        </b>
<b>  BSTR FAR* </b><i> pBstrName</i><b>,           </b>
<b>  unsigned short FAR* </b><i> pwOrdinal  </i>
<b>);</b>
 </code></pre>
<p>
Retrieves a description or specification of an entry point for a function in a DLL.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>memid</i></dt>
<dd>
ID of the member function whose DLL entry description is to be returned.</dd>
<dt>
<i>invKind</i></dt>
<dd>
Specifies the kind of member identified by <i>memid</i>. This is important for properties, because one <i>memid</i> can identify up to three separate functions.</dd>
<dt>
<i>pBstrDllName</i></dt>
<dd>
If not Null, the function sets <i>pBstrDllName</i> to a BSTR that contains the name of the DLL.</dd>
<dt>
<i>pBstrName</i></dt>
<dd>
If not Null, the function sets <i>lpbstrName</i> to a BSTR that contains the name of the entry point. If the entry point is specified by an ordinal, *<i>lpbstrName</i> is set to Null.</dd>
<dt>
<i>pwOrdinal</i></dt>
<dd>
If not Null, and if the function is defined by an ordinal, then <i>lpwOrdinal</i> is set to point to the ordinal.

</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Return value</th>
<th align=left width=46%>Meaning</th>
</tr>
<tr valign=top>
<td width=54%>S_OK </td>
<td width=46%>Success.</td>
</tr>
<tr valign=top>
<td width=54%>E_OUTOFMEMORY</td>
<td width=46%>Out of memory.</td>
</tr>
<tr valign=top>
<td width=54%>E_INVALIDARG</td>
<td width=46%>One or more of the arguments is invalid.</td>
</tr>
<tr valign=top>
<td width=54%>E_NOINTERFACE</td>
<td width=46%>OLE could not find an implementation of one or more required interfaces.</td>
</tr>
<tr valign=top>
<td width=54%>TYPE_E_ELEMENTNOTFOUND</td>
<td width=46%>The element was not found.</td>
</tr>
<tr valign=top>
<td width=54%>TYPE_E_IOERROR</td>
<td width=46%>The function could not read from the file.</td>
</tr>
<tr valign=top>
<td width=54%>TYPE_E_INVDATAREAD</td>
<td width=46%>Invalid data.</td>
</tr>
<tr valign=top>
<td width=54%>TYPE_E_UNSUPFORMAT</td>
<td width=46%>The type library has an older format.</td>
</tr>
<tr valign=top>
<td width=54%>TYPE_E_INVALIDSTATE</td>
<td width=46%>The type library could not be opened.</td>
</tr>
<tr valign=top>
<td width=54%>TYPE_E_WRONGTYPEKIND</td>
<td width=46%>Type mismatch.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
The caller passes in a member ID, which represents the member function whose entry description is desired. If the function has a DLL entry point, the name of the DLL that contains the function, as well as its name or ordinal identifier, are placed in the passed-in pointers allocated by the caller. If there is no DLL entry point for the function, an error is returned.</p>
<p>
If the type description inherits from another type description, this function is recursive to the base type description, if necessary, to find the item with the requested member ID.</p>
<p>
The caller should use <a href="chap7_2g6f.htm"><b>SysFreeString</b></a><b>()</b> to free the BSTRs referenced by <i>pBstrName</i> and <i>pBstrDllName</i>.</p>
<p>&nbsp;</p></body>
</HTML>
