<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VariantClear</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_variantclear"></a>VariantClear</h1>
<pre><code><b>HRESULT VariantClear( 
  VARIANTARG FAR* </b><i> pvarg  </i>
<b>);</b>
 </code></pre>
<p>
Clears a variant.</p>
<h4>Parameter</h4>
<dl>
<dt>
<i>pvarg</i></dt>
<dd>
Pointer to the VARIANTARG to clear.
</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=37%>Return value</th>
<th align=left width=63%>Meaning</th>
</tr>
<tr valign=top>
<td width=37%>S_OK</td>
<td width=63%>Success.</td>
</tr>
<tr valign=top>
<td width=37%>DISP_E_ARRAYISLOCKED</td>
<td width=63%>The variant contains an array that is locked.</td>
</tr>
<tr valign=top>
<td width=37%>DISP_E_BADVARTYPE</td>
<td width=63%>The variant type <i>pvarg</i> is not a valid type of variant.</td>
</tr>
<tr valign=top>
<td width=37%>E_INVALIDARG</td>
<td width=63%>One of the arguments is invalid.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
Use this function to clear variables of type VARIANTARG (or VARIANT) before the memory containing the VARIANTARG is freed (as when a local variable goes out of scope).</p>
<p>
The function clears a VARIANTARG by setting the <i>vt</i> field to VT_EMPTY and the <i>wReserved</i> field to 0.<b> </b>The current contents of the VARIANTARG are released first. If the <i>vt </i>field is VT_BSTR, the string is freed. If the <i>vt </i>field is VT_DISPATCH, the object is released.<b> </b>If the <i>vt</i> field has the VT_ARRAY bit set, the array is freed.</p>
<p>
In certain cases, it may be preferable to clear a variant in code without calling <b>VariantClear</b>. For example, you can change the type of a VT_I4 variant to another type without calling this function. However, you must call <b>VariantClear</b> if a VT_type is received but cannot be handled. Using <b>VariantClear </b>in these cases ensures that code will continue to work if  Automation adds new variant types in the future.</p>
<h4>Example</h4>
<pre><code>for(i = 0; i &lt; celt; ++i)
    <b>VariantClear</b>(&amp;rgvar[i]);
</code></pre>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.1 and later. <br>
&nbsp;&nbsp;<b>Windows:</b> Use Windows 95 and later. <br>
&nbsp;&nbsp;<b>Header:</b> Declared in oleauto.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with oleaut32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
