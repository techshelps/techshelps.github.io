<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEnumVARIANT::Next</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_ienumvariant_next"></a>IEnumVARIANT::Next</h1>
<pre><code><b>HRESULT Next( 
  unsigned long </b><i> celt</i><b>,              </b>
<b>  VARIANT FAR* </b><i> rgVar</i><b>,              </b>
<b>  unsigned long FAR* </b><i> pCeltFetched  </i>
<b>);</b>
 </code></pre>
<p>
Attempts to get the next <i>celt</i> items in the enumeration sequence, and return them through the array pointed to by <i>rgVar</i>.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>celt</i></dt>
<dd>
The number of elements to be returned.</dd>
<dt>
<i>rgVar</i></dt>
<dd>
An array of at least size <i>celt</i> in which the elements are to be returned.</dd>
<dt>
<i>pCeltFetched</i></dt>
<dd>
Pointer to the number of elements returned in <i>rgVar</i>, or Null.
</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=35%>Return value</th>
<th align=left width=65%>Meaning</th>
</tr>
<tr valign=top>
<td width=35%>S_OK</td>
<td width=65%>The number of elements returned is <i>celt.</i></td>
</tr>
<tr valign=top>
<td width=35%>S_FALSE </td>
<td width=65%>The number of elements returned is less than <i>celt</i>.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
If fewer than the requested number of elements remain in the sequence, <b>Next </b>returns only the remaining elements. The actual number of elements returned is passed through *<i>pCeltFetched</i>, unless it is Null.</p>
<h4>Example</h4>
<p>
The following code implements <b>IEnumVariant::Next</b> for collections in the Lines sample file Enumvar.cpp.</p>
<pre><code>STDMETHODIMP
<b>CEnumVariant::Next</b>(ULONG cElements, VARIANT FAR* pvar, ULONG FAR* pcElementFetched)
{
    HRESULT hr;
    ULONG l;
    long l1;
    ULONG l2;

    if (pcElementFetched != NULL)
        *pcElementFetched = 0;

    for (l=0; l&lt;cElements; l++)
        VariantInit(&amp;pvar[l]);

    // Retrieve the next cElements elements.
    for (l1=m_lCurrent, l2=0; l1&lt;(long)(m_lLBound+m_cElements) &amp;&amp; 
        l2&lt;cElements; l1++, l2++)
    {
        hr = SafeArrayGetElement(m_psa, &amp;l1, &amp;pvar[l2]); 
        if (FAILED(hr))
            goto error; 
    }
    // Set count of elements retrieved.
    if (pcElementFetched != NULL)
        *pcElementFetched = l2;
    m_lCurrent = l1;

    return  (l2 &lt; cElements) ? ResultFromScode(S_FALSE) : NOERROR;

error:
    for (l=0; l&lt;cElements; l++)
        VariantClear(&amp;pvar[l]);
    return hr;
}
</code></pre>
<p>&nbsp;</p></body>
</HTML>
