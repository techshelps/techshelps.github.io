<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>importlib</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_importlib"></a>importlib</h1>
<p>
This directive makes types that have already been compiled into another type library available to the library currently being created. All <b>importlib</b> directives must precede the other type descriptions in the library.</p>
<h4>Syntax</h4>
<p>
<b>importlib</b>(<i>filename</i>);</p>
<h4>Syntax Element</h4>
<dl>
<dt>
<i>filename</i></dt>
<dd>
The location of the type library file when MkTypLib is executed.
</dd>
</dl>
<h4>Comments</h4>
<p>
The <b>importlib</b> directive makes any type defined in the imported library accessible from within the library being compiled. Ambiguity is resolved as the current library is searched for the type. If the type cannot be found, MkTypLib searches the imported library that is lexically first, and then the next, and so on. To import a type name in code, the name should be entered as <i>libname.typename, </i>where<i> libname </i>is the library name as it appeared in the <a href="chap8_99ix.htm"><b>library</b></a> statement when the library was compiled.</p>
<p>
The imported type library should be distributed with the library being compiled.</p>
<h4>Example</h4>
<p>
The following example imports the libraries Stdole.tlb and Mydisp.tlb:</p>
<pre><code>library BrowseHelper
{
    importlib("stdole.tlb");
    importlib("mydisp.tlb");
// Additional text omitted.
}
</code></pre>
<p>&nbsp;</p></body>
</HTML>
