<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetErrorInfo</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_seterrorinfo"></a>SetErrorInfo</h1>
<pre><code><b>HRESULT SetErrorInfo(
  DWORD </b><i> dwReserved</i><b>,     </b>
<b>  IErrorInfo </b><i> *perrinfo  </i>
<b>);</b>
 </code></pre>
<p>
Sets the error information object for the current thread of execution.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwReserved</i></dt>
<dd>
Reserved for future use. Must be zero.</dd>
<dt>
<i>perrinfo</i></dt>
<dd>
Pointer to an error object.
</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Return value</th>
<th align=left width=59%>Meaning</th>
</tr>
<tr valign=top>
<td width=41%>S_OK </td>
<td width=59%>Success.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
This function releases the existing error information object, if one exists, and sets the pointer to <i>perrinfo</i>. Use this function after creating an error object that associates the object with the current thread of execution. </p>
<p>
If the property or method that calls <b>SetErrorInfo</b> is called by <a href="chap5_1e79.htm"><b>DispInvoke</b></a><b>,</b> then <b>DispInvoke</b> will fill the EXCEPINFO parameter with the values specified in the error information object. <b>DispInvoke</b> will return DISP_E_EXCEPTION when the property or method returns a failure return value for <b>DispInvoke.</b> </p>
<p>
Virtual function table (VTBL) binding controllers that do not use <a href="chap5_61id.htm"><b>IDispatch::Invoke</b></a> can get the error information object by using <a href="chap11_2nlb.htm"><b>GetErrorInfo</b></a>. This allows an object that supports a dual interface to use <b>SetErrorInfo,</b> regardless of whether the client uses VTBL binding or <b>IDispatch</b>.</p>
<h4>Example</h4>
<pre><code>ICreateErrorInfo *pcerrinfo;
    IErrorInfo *perrinfo;
    HRESULT hr;

hr = CreateErrorInfo(&amp;pcerrinfo);
hr = pcerrinfo-&gt;QueryInterface(IID_IErrorInfo, (LPVOID FAR*) &amp;perrinfo);
if (SUCCEEDED(hr))
    {
        <b>SetErrorInfo</b>(0, perrinfo);
        perrinfo-&gt;Release();
    }
    pcerrinfo-&gt;Release();</code></pre>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.1 and later. <br>
&nbsp;&nbsp;<b>Windows:</b> Use Windows 95 and later. <br>
&nbsp;&nbsp;<b>Header:</b> Declared in oleauto.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with oleaut32.lib. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
