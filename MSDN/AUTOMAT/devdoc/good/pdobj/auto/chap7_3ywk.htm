<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SafeArrayPutElement</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_safearrayputelement"></a>SafeArrayPutElement</h1>
<pre><code><b>HRESULT SafeArrayPutElement( 
  SAFEARRAY FAR* </b><i> psa</i><b>,  </b>
<b>  long FAR* </b><i> rgIndices</i><b>, </b>
<b>  void FAR* </b><i> pv         </i>
<b>);</b>
 </code></pre>
<p>
Assigns a single element to the array.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>psa</i></dt>
<dd>
Pointer to an array descriptor created by <a href="chap7_1rvp.htm"><b>SafeArrayCreate</b></a>.</dd>
<dt>
<i>rgIndices</i></dt>
<dd>
Pointer to a vector of indexes for each dimension of the array. The right-most (least significant) dimension is <i>rgIndices</i>[0]. The left-most dimension is stored at <i>rgIndices</i>[<i>psa</i>-&gt;<i>cDims</i> – 1].</dd>
<dt>
<i>pv</i></dt>
<dd>
Pointer to the data to assign to the array. The variant types VT_DISPATCH, VT_UNKNOWN, and VT_BSTR are pointers, and do not require another level of indirection.
</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=37%>Return value</th>
<th align=left width=63%>Meaning</th>
</tr>
<tr valign=top>
<td width=37%>S_OK</td>
<td width=63%>Success.</td>
</tr>
<tr valign=top>
<td width=37%>DISP_E_BADINDEX</td>
<td width=63%>The specified index was invalid.</td>
</tr>
<tr valign=top>
<td width=37%>E_INVALIDARG</td>
<td width=63%>One of the arguments is invalid.</td>
</tr>
<tr valign=top>
<td width=37%>E_OUTOFMEMORY</td>
<td width=63%>Memory could not be allocated for the element.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
This function automatically calls <a href="chap7_6sob.htm"><b>SafeArrayLock</b></a> and <a href="chap7_66jv.htm"><b>SafeArrayUnlock</b></a> before and after assigning the element.<b> </b>If the data element is a string, object, or variant, the function copies it correctly. If the existing element is a string, object, or variant, it is cleared correctly.</p>
<p>
<b>Note</b>  Multiple locks can be on an array. Elements can be put into an array while the array is locked by other operations.</p>
<h4>Example</h4>
<pre><code>HRESULT PASCAL __export CPoly::EnumPoints(IEnumVARIANT FAR* FAR* ppenum)
{
    unsigned int i;
    HRESULT hresult;
    VARIANT var;
    SAFEARRAY FAR* psa;
    CEnumPoint FAR* penum;
    POINTLINK FAR* ppointlink;
    SAFEARRAYBOUND rgsabound[1];
    rgsabound[0].lLbound = 0;
    rgsabound[0].cElements = m_cPoints;

    psa = SafeArrayCreate(VT_VARIANT, 1, rgsabound);
    if(psa == NULL){
        hresult = ResultFromScode(E_OUTOFMEMORY);
        goto LError0;
    }

    // Code omitted here for brevity.

        V_VT(&amp;var) = VT_DISPATCH;
        hresult = ppointlink-&gt;ppoint-&gt;QueryInterface(
        IID_IDispatch, (void FAR* FAR*)&amp;V_DISPATCH(&amp;var));
        if(hresult != NOERROR)
            goto LError1;

        ix[0] = i;
        <b>SafeArrayPutElement</b>(psa, ix, &amp;var);

        ppointlink = ppointlink-&gt;next;
    }

    hresult = CEnumPoint::Create(psa, &amp;penum);
    if(hresult != NOERROR)
        goto LError1;
    *ppenum = penum;
    return NOERROR;

LError1:;
    SafeArrayDestroy(psa);

LError0:;
    return hresult;
}
</code></pre>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.1 and later. <br>
&nbsp;&nbsp;<b>Windows:</b> Use Windows 95 and later. <br>
&nbsp;&nbsp;<b>Header:</b> Declared in oleauto.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with oleaut32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
