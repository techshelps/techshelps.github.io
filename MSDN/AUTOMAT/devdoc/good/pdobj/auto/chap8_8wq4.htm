<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>dual</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_dual"></a>dual</h1>
<h4>Description</h4>
<p>
Identifies an interface that exposes properties and methods through <b>IDispatch</b> and directly through the VTBL.</p>
<h4>Allowed on</h4>
<p>
Interface.</p>
<h4>Comments</h4>
<p>
The interface must be compatible with Automation and derive from <b>IDispatch</b>. Not allowed on dispinterfaces.</p>
<p>
The <b>dual</b><i> </i>attribute creates an interface that is both a <b>Dispatch</b> interface and a Component Object Model (COM) interface. The first seven entries of the VTBL for a dual interface are the seven members of <b>IDispatch</b>, and the remaining entries are COM entries for direct access to members of the dual interface. All of the parameters and return types specified for members of a dual interface must be compatible with Automation types.</p>
<p>
All members of a dual<b> </b>interface must pass an HRESULT as the function's return value. Members that need to return other values should specify the last parameter as [<a href="chap8_1vak.htm"><b>retval</b></a><b>, <a href="chap8_2o1g.htm">out</a></b>] indicating an output parameter that returns the value of the function. In addition, members that need to support multiple locales should pass an <i>lcid</i> parameter.</p>
<p>
A dual<b> </b>interface provides for both the speed of direct VTBL binding and the flexibility of <b>IDispatch</b> binding. For this reason, dual interfaces are recommended whenever possible.</p>
<p>
<b>Note</b>  If an application accesses object data by casting the THIS pointer in the interface call, the VTBL pointers in the object should be checked against the VTBL pointers to ensure that they are connected to the appropriate proxy.</p>
<p>
</p>
<p>
Specifying dual<b> </b>on an interface implies that the interface is compatible with Automation, and therefore causes both the TYPEFLAG_FDUAL and TYPEFLAG_FOLEAUTOMATION flags to be set.</p>
<h4>Flags</h4>
<p>
TYPEFLAG_FDUAL</p>
<p>
TYPEFLAG_FOLEAUTOMATION</p>
<p>&nbsp;</p></body>
</HTML>
