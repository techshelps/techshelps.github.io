<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Accessing ActiveX™ Objects</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_accessing_activex_objects"></a>Accessing ActiveX Objects</h1>
<p>
To access exposed objects, you can create ActiveX clients using Visual Basic, Microsoft® Visual C++®, Microsoft Excel, and other applications and programming languages that support the Automation technology. This chapter discusses several strategies for accessing exposed objects.
<ul>
<li>
Creating scripts with Visual Basic</li>
<li>
Creating controllers that manipulate objects</li>
<li>
Creating type information browsers</li>
</ul>
<p>
Regardless of your strategy, an ActiveX client needs to follow these steps:</p>
<h5>&nbsp;&nbsp;&nbsp;&nbsp;To initialize and create the object</h5>
<ol>
<li>
Initialize OLE.</li>
<li>
Create an instance of the exposed object.</li>
</ol>
<h5>&nbsp;&nbsp;&nbsp;&nbsp;To manipulate methods and properties</h5>
<ol>
<li>
Get information about the object's methods and properties.</li>
<li>
Invoke the methods and properties.</li>
</ol>
<h5>&nbsp;&nbsp;&nbsp;&nbsp;To release OLE when the application or programming tool terminates</h5>
<ol>
<li>
Revoke the active object.</li>
<li>
Uninitialize OLE.</li>
</ol>
<p>
<b>Note</b>  Throughout this chapter, the file names of sample applications appear in parentheses before the sample code. </p>
<p>&nbsp;</p></body>
</HTML>
