<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview of Automation</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_overview_of_automation"></a>Overview of Automation</h1>
<p>
Automation (formerly called OLE Automation) is a technology that allows software packages to expose their unique features to scripting tools and other applications. Automation uses the Component Object Model (COM), but may be implemented independently from other OLE features, such as in-place activation. Using Automation, you can:
<ul>
<li>
Create applications and programming tools that expose objects.</li>
<li>
Create and manipulate objects exposed in one application from another application.</li>
<li>
Create tools that access and manipulate objects. These tools can include embedded macro languages, external programming tools, object browsers, and compilers.</li>
</ul>
<p>
The objects an application or programming tool exposes are called <i>ActiveX objects</i>. Applications and programming tools that access those objects are called <i>ActiveX clients</i>. ActiveX objects and clients interact as follows:</p>
<p>
<img src="images/oa01_01.gif" border=0></p>
<p>
Applications and other software packages that support ActiveX technology define and expose objects which can be acted on by <i>ActiveX components</i>. ActiveX components are physical files (for example .exe and .dll files) that contain classes, which are definitions of objects. Type information describes the exposed objects, and can be used by ActiveX components at either compile time or at run time.</p>
<p>&nbsp;</p></body>
</HTML>
