<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDispatch::GetIDsOfNames</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_idispatch_getidsofnames"></a>IDispatch::GetIDsOfNames</h1>
<pre><code><b>HRESULT GetIDsOfNames( 
  REFIID </b><i> riid</i><b>,                  </b>
<b>  OLECHAR FAR* FAR* </b><i> rgszNames</i><b>,  </b>
<b>  unsigned int </b><i> cNames</i><b>,          </b>
<b>  LCID  </b><i> lcid</i><b>,                   </b>
<b>  DISPID FAR* </b><i> rgDispId          </i>
<b>);</b>
 </code></pre>
<p>
Maps a single member and an optional set of argument names to a corresponding set of integer DISPIDs, which can be used on subsequent calls to <a href="chap5_61id.htm"><b>IDispatch::Invoke</b></a>. The dispatch function <a href="chap5_1jxv.htm"><b>DispGetIDsOfNames</b></a> provides a standard implementation of <b>GetIDsOfNames</b>.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>riid</i></dt>
<dd>
Reserved for future use. Must be IID_NULL.</dd>
<dt>
<i>rgszNames</i></dt>
<dd>
Passed-in array of names to be mapped.</dd>
<dt>
<i>cNames</i></dt>
<dd>
Count of the names to be mapped.</dd>
<dt>
<i>lcid</i></dt>
<dd>
The locale context in which to interpret the names.</dd>
<dt>
<i>rgDispId</i></dt>
<dd>
Caller-allocated array, each element of which contains an identifier (ID) corresponding to one of the names passed in the <i>rgszNames</i> array. The first element represents the member name. The subsequent elements represent each of the member's parameters.
</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=34%>Return value</th>
<th align=left width=66%>Meaning</th>
</tr>
<tr valign=top>
<td width=34%>S_OK</td>
<td width=66%>Success.</td>
</tr>
<tr valign=top>
<td width=34%>E_OUTOFMEMORY</td>
<td width=66%>Out of memory.</td>
</tr>
<tr valign=top>
<td width=34%>DISP_E_UNKNOWNNAME</td>
<td width=66%>One or more of the names were not known. The returned array of DISPIDs contains DISPID_UNKNOWN for each entry that corresponds to an unknown name.</td>
</tr>
<tr valign=top>
<td width=34%>DISP_E_UNKNOWNLCID</td>
<td width=66%>The locale identifier (LCID) was not recognized.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
An <b>IDispatch</b> implementation can associate any positive integer ID value with a given name. Zero is reserved for the default, or <b>Value</b> property; –1 is reserved to indicate an unknown name; and other negative values are defined for other purposes. For example, if <b>GetIDsOfNames</b> is called, and the implementation does not recognize one or more of the names, it returns DISP_E_UNKNOWNNAME, and the <i>rgDispId</i> array contains DISPID_UNKNOWN for the entries that correspond to the unknown names.</p>
<p>
The member and parameter DISPIDs must remain constant for the lifetime of the object. This allows a client to obtain the DISPIDs once, and cache them for later use.</p>
<p>
When <b>GetIDsOfNames</b> is called with more than one name, the first name (<i>rgszNames</i>[0]) corresponds to the member name, and subsequent names correspond to the names of the member's parameters.</p>
<p>
The same name may map to different DISPIDs, depending on context. For example, a name may have a DISPID when it is used as a member name with a particular interface, a different ID as a member of a different interface, and different mapping for each time it appears as a parameter.</p>
<p>
The <b>IDispatch </b>interface binds to names at run time. To bind at compile time instead, an <b>IDispatch</b> client can<b> </b>map names to DISPIDs by using the type information interfaces described in Chapter 9, "<a href="chap9_49pv.htm">Type Description Interfaces</a>." This allows a client to bind to members at compile time and avoid calling <b>GetIDsOfNames</b> at run time. For a description of binding at compile time, see Chapter 9, "Type Description Interfaces." </p>
<p>
The implementation of <b>GetIDsOfNames</b> is case insensitive. Users that need case-sensitive name mapping should use type information interfaces to map names to DISPIDs, rather than call <b>GetIDsOfNames</b>.</p>
<h4>Examples</h4>
<p>
The following code from the Lines sample file Lines.cpp implements the <b>GetIDsOfNames</b> member function for the CLine class. The ActiveX or OLE object uses the standard implementation, <a href="chap5_1jxv.htm"><b>DispGetIDsOfNames</b></a>.</p>
<pre><code>STDMETHODIMP 
CLine::<b>GetIDsOfNames</b>(
        REFIID riid,
        OLECHAR FAR* FAR* rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID FAR* rgDispId)
{
        return DispGetIDsOfNames(m_ptinfo, rgszNames, cNames, rgDispId);
}
</code></pre>
<p>
The following code might appear in an ActiveX client that calls <b>GetIDsOfNames</b> to get the DISPID of the <b>CLine Color </b>property.</p>
<pre><code>HRESULT hresult;
IDispatch FAR* pdisp = (IDispatch FAR*)NULL;
DISPID dispid;
OLECHAR FAR* szMember = "color";

// Code that sets a pointer to the dispatch (pdisp) is omitted.

hresult = pdisp-&gt;<b>GetIDsOfNames</b>(
    IID_NULL,
    &amp;szMember,
    1, LOCALE_SYSTEM_DEFAULT,
    &amp;dispid);
</code></pre>
<h4>See Also</h4>
<p>
<a href="chap5_0mnc.htm"><b>CreateStdDispatch</b></a>, <a href="chap5_1jxv.htm"><b>DispGetIDsOfNames</b></a>,<b> <a href="chap9_3veb.htm">ITypeInfo::GetIDsOfNames</a></b></p>
<p>&nbsp;</p></body>
</HTML>
