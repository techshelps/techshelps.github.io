<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITypeLib::FindName</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_itypelib_findname"></a>ITypeLib::FindName</h1>
<pre><code><b>HRESULT FindName( 
  OLECHAR FAR* </b><i> szNameBuf</i><b>,    </b>
<b>  unsigned long </b><i> lHashVal</i><b>,    </b>
<b>  ITypeInfo FAR* FAR* </b><i> ppTInfo</i><b>,  </b>
<b>  MEMBERID FAR* </b><i> rgMemId</i><b>,     </b>
<b>  unsigned int FAR* </b><i> pcFound  </i>
<b>);</b>
 </code></pre>
<p>
Finds occurrences of a type description in a type library. This may be used to quickly verify that a name exists in a type library.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>szNameBuf</i></dt>
<dd>
The name to search for.</dd>
<dt>
<i>lHashVal</i></dt>
<dd>
A hash value to speed up the search, computed by the <a href="chap9_8lkj.htm"><b>LHashValOfNameSys</b></a> function. If <i>lHashVal</i> = 0, a value is computed.</dd>
<dt>
<i>ppTInfo</i></dt>
<dd>
On return, an array of pointers to the type descriptions that contain the name specified in <i>szNameBuf</i>. Cannot be Null.</dd>
<dt>
<i>rgMemId</i></dt>
<dd>
An array of the MEMBERIDs of the found items; <i>rgMemId</i>[<i>i</i>] is the MEMBERID that indexes into the type description specified by <i>ppTInfo</i>[<i>i</i>]. Cannot be Null.</dd>
<dt>
<i>pcFound</i></dt>
<dd>
On entry, indicates how many instances to look for. For example, *<i>pcFound</i> = 1 can be called to find the first occurrence. The search stops when one is found.
<p>
On exit, indicates the number of instances that were found. If the <i>in</i> and <i>out</i> values of *<i>pcFound</i> are identical, there may be more type descriptions that contain the name.


</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Return value</th>
<th align=left width=57%>Meaning</th>
</tr>
<tr valign=top>
<td width=43%>S_OK</td>
<td width=57%>Success.</td>
</tr>
<tr valign=top>
<td width=43%>E_OUTOFMEMORY</td>
<td width=57%>Out of memory.</td>
</tr>
<tr valign=top>
<td width=43%>E_INVALIDARG</td>
<td width=57%>One or more of the arguments is invalid.</td>
</tr>
<tr valign=top>
<td width=43%>TYPE_E_IOERROR</td>
<td width=57%>The function could not write to the file.</td>
</tr>
<tr valign=top>
<td width=43%>TYPE_E_INVDATAREAD</td>
<td width=57%>The function could not read from the file.</td>
</tr>
<tr valign=top>
<td width=43%>TYPE_E_UNSUPFORMAT</td>
<td width=57%>The type library has an older format.</td>
</tr>
<tr valign=top>
<td width=43%>TYPE_E_INVALIDSTATE</td>
<td width=57%>The type library could not be opened.</td>
</tr>
<tr valign=top>
<td width=43%>TYPE_E_CANTLOADLIBRARY</td>
<td width=57%>The library or .dll file could not be loaded.</td>
</tr>
<tr valign=top>
<td width=43%>TYPE_E_ELEMENTNOTFOUND</td>
<td width=57%>The element was not found.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
Passing *<i>pcFound</i> = <i>n</i> indicates that there is enough room in the <i>ppTInfo </i>and <i>rgMemId</i> arrays for <i>n</i> (<i>ptinfo</i>, <i>memid</i>) pairs. The function returns MEMBERID_NIL in <i>rgMemId</i>[<i>i</i>],<i> </i>if the name in <i>szNameBuf</i> is the name of the type information in <i>ppTInfo</i>[<i>i</i>].</p>
<p>&nbsp;</p></body>
</HTML>
