<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting Multiple National Languages</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_supporting_multiple_national_languages"></a>Supporting Multiple National Languages</h1>
<p>
Applications sometimes need to expose objects with names that differ across localized versions of the product. The names pose a problem for programming languages that need to access these objects, because late binding will be sensitive to the locale of the application. The <b>IDispatch</b> interface provides a range of solutions that vary in cost of implementation and quality of language support. All methods of the <b>IDispatch</b> interface that are potentially sensitive to language are passed a LCID, which identifies the local language context.</p>
<p>
The following are some of the approaches a class implementation can take:
<ul>
<li>
Accept any LCID and use the same member names in all locales. This is acceptable if the exposed interface will typically be accessed only by very advanced users. For example, the member names for OLE interfaces will never be localized.</li>
<li>
Accept all LCIDs supported by all versions of the product. In this case, the implementation of <b>GetIDsOfNames</b> would need to interpret the passed array of names based on the given LCID. This is the most acceptable solution because it allows users to write code in their natural language and run the code on any localized version of the application.</li>
<li>
Return an error (DISP_E_UNKNOWNLCID) from <b>GetIDsOfNames</b> if the caller's LCID does not match the localized version of the class. This prevents users from being able to write late-bound code that runs on machines with different localized implementations of the class.</li>
<li>
Recognize the particular version's localized names, as well as one language that is recognized in all versions. For example, a French version might accept French and English names, where English is the language supported in all versions. Users who want to write code that runs in all countries would have to use English names.</li>
</ul>
<p>
To provide general language support, the application should check the LCID before interpreting member names. Because <b>Invoke</b> is passed a LCID, methods can properly interpret parameters whose meaning varies by locale. The following sections provide examples and guidelines for creating multilingual applications.</p>
<p>&nbsp;</p></body>
</HTML>
