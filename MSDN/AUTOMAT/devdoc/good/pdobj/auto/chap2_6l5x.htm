<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating the IDispatch Interface</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_oa96_creating_the_idispatch_interface"></a>Creating the IDispatch Interface</h2>
<p>
The <b>IDispatch</b> interface provides a <a href="gloss_4obw.htm#_oa96_late_binding">late-bound</a> mechanism to access and retrieve information about an object's methods and properties. In addition to the member functions inherited from <b>IUnknown</b>, the following member functions should be implemented within the class definition of each object that will be exposed through Automation.
<ul>
<li>
<a href="chap5_3alw.htm"><b>GetTypeInfoCount</b></a> — Returns the number of type descriptions for the object. For objects that support <b>IDispatch</b>, the type information count is always 1.</li>
<li>
<a href="chap5_8anj.htm"><b>GetTypeInfo</b></a> — Retrieves a description of the object's programmable interface.</li>
<li>
<a href="chap5_32cz.htm"><b>GetIDsOfNames</b></a> — Maps the name of a method or property to a DISPID, which can later be used to invoke the method or property.</li>
<li>
<a href="chap5_61id.htm"><b>Invoke</b></a> —Calls one of the object's methods, or gets or sets one of its properties.</li>
</ul>
<p>
You can implement <b>IDispatch</b> by any of the following means:
<ul>
<li>
Delegating to the <a href="chap5_1e79.htm"><b>DispInvoke</b></a> and <a href="chap5_1jxv.htm"><b>DispGetIDsOfNames</b></a> functions, or to <a href="chap9_2h7p.htm"><b>ITypeInfo::Invoke</b></a> and <a href="chap9_3veb.htm"><b>ITypeInfo::GetIDsOfNames</b></a>. This is the recommended approach, because it supports multiple locales and allows exceptions to be returned.</li>
<li>
Calling the <a href="chap5_0mnc.htm"><b>CreateStdDispatch</b></a> function. This approach is the simplest, but it does not provide for rich error handling or multiple national languages.</li>
<li>
Implementing the member functions without delegating to the dispatch functions. This approach is seldom necessary. Because <b>Invoke </b>is a complex interface with many subtle semantics that are difficult to emulate, it is strongly recommended that code delegate to<b> ITypeInfo::Invoke </b>to implement this mechanism.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
