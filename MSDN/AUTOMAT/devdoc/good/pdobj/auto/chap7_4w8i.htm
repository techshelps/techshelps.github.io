<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SafeArrayCreateVector</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_safearraycreatevector"></a>SafeArrayCreateVector</h1>
<pre><code><b>SAFEARRAY SafeArrayCreateVector( 
  VARTYPE </b><i> vt</i><b>,             </b>
<b>  long </b><i> lLbound</i><b>,           </b>
<b>  unsigned int </b><i> cElements  </i>
<b>);</b>
 </code></pre>
<p>
Creates a one-dimensional array whose lower bound is always zero. A safe array created with <b>SafeArrayCreateVector</b> is a fixed size, so the constant FADF_FIXEDSIZE is always set.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>vt</i></dt>
<dd>
The base type of the array (the VARTYPE of each element of the array). The VARTYPE is restricted to a subset of the variant types. Neither the VT_ARRAY nor the VT_BYREF flag can be set. VT_EMPTY and VT_NULL are not valid base types for the array. All other types are legal.</dd>
<dt>
<i>lLbound</i></dt>
<dd>
The lower bound for the array. Can be negative.</dd>
<dt>
<i>cElements</i></dt>
<dd>
The number of elements in the array.
</dd>
</dl>
<h4>Return Value</h4>
<p>
Points to the array descriptor, or<b> </b>Null if the array could not be created.</p>
<h4>Comments</h4>
<p>
<b>SafeArrayCreateVector</b> allocates a single block of memory containing a SAFEARRAY structure for a single-dimension array (24 bytes), immediately followed by the array data. All of the existing safe array functions work correctly for safe arrays that are allocated with <b>SafeArrayCreateVector</b>.</p>
<p>
A <b>SafeArrayCreateVector</b> is allocated as a single block of memory. Both the <b>SafeArray</b> descriptor and the array data block are allocated contiguously in one allocation, which speeds up array allocation. However, a user can allocate the descriptor and data area separately using the <a href="chap7_01iq.htm"><b>SafeArrayAllocDescriptor</b></a> and <a href="chap7_26ox.htm"><b>SafeArrayAllocData</b></a> calls.</p>
<p>&nbsp;</p></body>
</HTML>
