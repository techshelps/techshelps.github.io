<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SafeArrayGetElement</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_safearraygetelement"></a>SafeArrayGetElement</h1>
<pre><code><b>HRESULT SafeArrayGetElement( 
  SAFEARRAY FAR* </b><i> psa</i><b>,  </b>
<b>  long FAR* </b><i> rgIndices</i><b>, </b>
<b>  void FAR* </b><i> pv         </i>
<b>);</b>
 </code></pre>
<p>
Retrieves a single element of the array.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>psa</i></dt>
<dd>
Pointer to an array descriptor created by <a href="chap7_1rvp.htm"><b>SafeArrayCreate</b></a>.</dd>
<dt>
<i>rgIndices</i></dt>
<dd>
Pointer to a vector of indexes for each dimension of the array. The right-most (least significant) dimension is <i>rgIndices</i>[0]. The left-most dimension is stored at <i>rgIndices</i>[<i>psa</i>-&gt;<i>cDims</i> – 1].</dd>
<dt>
<i>pv</i></dt>
<dd>
Pointer to the location to place the element of the array.
</dd>
</dl>
<h4>Comments</h4>
<p>
This function calls <a href="chap7_6sob.htm"><b>SafeArrayLock</b></a> and <a href="chap7_66jv.htm"><b>SafeArrayUnlock</b></a> automatically, before and after retrieving the element.<b> </b>The caller must provide a storage area of the correct size to receive the data.<b> </b>If the data element is a string, object, or variant, the function copies the element in the correct way.</p>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Return value</th>
<th align=left width=60%>Meaning</th>
</tr>
<tr valign=top>
<td width=40%>S_OK</td>
<td width=60%>Success.</td>
</tr>
<tr valign=top>
<td width=40%>DISP_E_BADINDEX</td>
<td width=60%>The specified index is invalid.</td>
</tr>
<tr valign=top>
<td width=40%>E_INVALIDARG </td>
<td width=60%>One of the arguments is invalid.</td>
</tr>
<tr valign=top>
<td width=40%>E_OUTOFMEMORY </td>
<td width=60%>Memory could not be allocated for the element.</td>
</tr>
</table><br>
<h4>Example</h4>
<pre><code>STDMETHODIMP CEnumPoint::Next(
    ULONG celt,
    VARIANT FAR rgvar[],
    ULONG FAR* pceltFetched)
{
    unsigned int i;
    long ix;
    HRESULT hresult;

    for(i = 0; i &lt; celt; ++i)
        VariantInit(&amp;rgvar[i]);

    for(i = 0; i &lt; celt; ++i){
        if(m_iCurrent == m_celts){
        hresult = ReportResult(0, S_FALSE, 0, 0);
            goto LDone;
    }

        ix = m_iCurrent++;
        hresult = <b>SafeArrayGetElement</b>(m_psa, &amp;ix, &amp;rgvar[i]);
        if(FAILED(hresult))
            goto LError0;
    }
    hresult = NOERROR;

LDone:;
    *pceltFetched = i;
    return hresult;

LError0:;
    for(i = 0; i &lt; celt; ++i)
        VariantClear(&amp;rgvar[i]);
    return hresult;
}
</code></pre>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.1 and later. <br>
&nbsp;&nbsp;<b>Windows:</b> Use Windows 95 and later. <br>
&nbsp;&nbsp;<b>Header:</b> Declared in oleauto.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with oleaut32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
