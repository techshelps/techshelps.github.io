<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITypeInfo::GetNames</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_itypeinfo_getnames"></a>ITypeInfo::GetNames</h1>
<pre><code><b>HRESULT GetNames( 
  MEMBERID </b><i> memid</i><b>,         </b>
<b>  BSTR FAR* </b><i> rgBstrNames</i><b>,  </b>
<b>  unsigned int </b><i> cMaxNames</i><b>,  </b>
<b>  unsigned int FAR* </b><i> pcNames  </i>
<b>);</b>
 </code></pre>
<p>
Retrieves the variable with the specified member ID (or the name of the property or method and its parameters) that correspond to the specified function ID.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>memid</i></dt>
<dd>
The ID of the member whose name (or names) is to be returned.</dd>
<dt>
<i>rgBstrNames</i></dt>
<dd>
Pointer to the caller-allocated array. On return, each of these <i>lpcName</i> elements is filled in to point to a BSTR that contains the name (or names) associated with the member.</dd>
<dt>
<i>cMaxNames</i></dt>
<dd>
Length of the passed-in <i>rgBstrNames </i>array.</dd>
<dt>
<i>pcNames</i></dt>
<dd>
On return, points to the number that represents the number of names in <i>rgBstrNames </i>array.
</dd>
</dl>
<h4>Return Value</h4>
<p>
The return value obtained from the returned HRESULT is one of the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=42%>Return value</th>
<th align=left width=58%>Meaning</th>
</tr>
<tr valign=top>
<td width=42%>S_OK</td>
<td width=58%>Success.</td>
</tr>
<tr valign=top>
<td width=42%>E_OUTOFMEMORY</td>
<td width=58%>Out of memory.</td>
</tr>
<tr valign=top>
<td width=42%>E_INVALIDARG</td>
<td width=58%>One or more of the arguments is invalid.</td>
</tr>
<tr valign=top>
<td width=42%>TYPE_E_IOERROR</td>
<td width=58%>The function could not read from the file.</td>
</tr>
<tr valign=top>
<td width=42%>TYPE_E_INVDATAREAD</td>
<td width=58%>Invalid data.</td>
</tr>
<tr valign=top>
<td width=42%>TYPE_E_UNSUPFORMAT</td>
<td width=58%>The type library has an older format.</td>
</tr>
<tr valign=top>
<td width=42%>TYPE_E_INVALIDSTATE</td>
<td width=58%>The type library could not be opened.</td>
</tr>
<tr valign=top>
<td width=42%>TYPE_E_WRONGTYPEKIND</td>
<td width=58%>Type mismatch.</td>
</tr>
<tr valign=top>
<td width=42%>TYPE_E_ELEMENTNOTFOUND</td>
<td width=58%>The element was not found.</td>
</tr>
</table><br>
<h4>Comments</h4>
<p>
The caller must release the returned BSTR (Basic string) array.</p>
<p>
If the member ID identifies a property that is implemented with property functions, the property name is returned.</p>
<p>
For property <b>get</b> functions, the names of the function and its parameters are always returned.</p>
<p>
For property put and put reference functions, the right side of the assignment is unnamed. If <i>cMaxNames</i>is less than is required to return all of the names of the parameters of a function, then only the names of the first <i>cMaxNames</i>– 1 parameters are returned. The names of the parameters are returned in the array in the same order that they appear elsewhere in the interface (for example, the same order in the parameter array associated with the FUNCDESC enumeration).</p>
<p>
If the type description inherits from another type description, this function is recursive to the base type description, if necessary, to find the item with the requested member ID.</p>
<p>&nbsp;</p></body>
</HTML>
