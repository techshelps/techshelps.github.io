<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Document Conventions</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_oa96_document_conventions"></a>Document Conventions</h1>
<p>
The following typographical conventions are used throughout this book.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=22%>Convention</th>
<th align=left width=78%>Meaning</th>
</tr>
<tr valign=top>
<td width=22%><b>bold</b></td>
<td width=78%>Indicates a word that is a function name, method, property, attribute, or other fixed part of a programming language, the Microsoft Windows operating system, or the Application Programming Interface (API). For example, <a href="chap5_1e79.htm"><b>DispInvoke</b></a> is an OLE-specific function. These words must always be typed exactly as they are printed.</td>
</tr>
<tr valign=top>
<td width=22%><i>italic</i></td>
<td width=78%>Indicates a word that is a placeholder or variable. For example, <i>ClassName</i> would be a placeholder for any ActiveX object class name. Function parameters in API reference material are italic to indicate that any variable name can be used. In addition, ActiveX  and OLE terms are italicized at first use to highlight their definition.</td>
</tr>
<tr valign=top>
<td width=22%>UPPERCASE</td>
<td width=78%>Indicates a constant or data structures. For example, E_INVALIDARG is a constant. </td>
</tr>
<tr valign=top>
<td width=22%>InitialCaps</td>
<td width=78%>Indicates the name of an object, event, or file name. For example, the Application object.</td>
</tr>
<tr valign=top>
<td width=22%><pre><code>monospace</code></pre>
</td>
<td width=78%>Indicates source code and syntax spacing. For example:<pre><code>*pdwRegisterCF = 0;</code></pre>
</td>
</tr>
</table><br>
<p>
<b>Note</b>  The interface syntax in this book follows the variable-naming convention known as Hungarian notation, invented by programmer Charles Simonyi. Variables are prefixed with lowercase letters indicating their data type. For example, <i>lpszNewDocname</i> would be a long pointer to a zero-terminated string named <i>NewDocname</i>. For more information about Hungarian notation, refer to <i>Programming Windows</i> by Charles Petzold.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
