<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 209: Changing the Color of a Label Control When the Mouse Pointer Is over the Control in Visual Basic 4.0</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_msdn209"></a>Tip 209: Changing the Color of a Label Control When the Mouse Pointer Is over the Control in Visual Basic 4.0</h1>
<p>
February 28, 1996</p>
<h2>Abstract</h2>
<p>
This article explains how to add visual appeal to your Microsoft® Visual Basic® version 4.0 application by changing the color of a <b>Label</b> control when the mouse is positioned over that control.</p>
<h2>Changing the ForeColor Property of a Label Control</h2>
<p>
When designing a Microsoft® Visual Basic® version 4.0 application, you can change the color of a <b>Label</b> control when the mouse pointer is positioned over that control. Then, when the mouse pointer is moved away from the control, the original <b>ForeColor</b> property is restored. This technique lets you draw attention temporarily to a specific <b>Label</b> control while your application is running.</p>
<p>
Because a <b>Label</b> control does not have an <b>hWnd</b> property, you cannot use Microsoft Windows® application programming interface (API) functions to determine whether the mouse pointer is hovering over the control. You can, however, monitor the MouseMove event of the <b>Label</b> control to determine when you should change the <b>ForeColor</b> property of the <b>Label</b> control.</p>
<h2>Example Program</h2>
<p>
This program shows how to change the color of a <b>Label</b> control when the mouse pointer is positioned over the control.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following code to the General Declarations section of Form1:<pre><code>Dim MyFocusColor, MyNormalColor
Dim Lbl As Label
</code></pre>
</li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Private Sub Form_Load()
 &nbsp;&nbsp; MyNormalColor = QBColor(0)
 &nbsp;&nbsp; MyFocusColor = QBColor(10)
End Sub
</code></pre>
</li>
<li>
Add the following code to the MouseMove event for Form1 (note that the <b>Private</b> statement must be typed as a single line of code):<pre><code>Private Sub Form_MouseMove(Button As Integer, Shift As Integer, X As Single, 
 &nbsp; Y As Single)
 &nbsp;&nbsp; For Each i In Me.Controls
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If TypeOf i Is Label Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If i.ForeColor &lt;&gt; MyNormalColor Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i.ForeColor = MyNormalColor
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; Next i
End Sub
</code></pre>
</li>
<li>
Add a <b>Label</b> control to Form1. Label1 is created by default.<br><br></li>
<li>
Add the following code to the MouseMove event for Label1 (note that the <b>Private</b> statement must be typed as a single line of code):<pre><code>Private Sub Label1_MouseMove(Button As Integer, Shift As Integer, X As Single, 
 &nbsp; Y As Single)
 &nbsp;&nbsp; Call ChangeColor(Label1)
End Sub
</code></pre>
</li>
<li>
Add a second <b>Label</b> control to Form1. Label2 is created by default.<br><br></li>
<li>
Add the following code to the MouseMove event for Label2 (note that the <b>Private</b> statement must be typed as a single line of code):<pre><code>Private Sub Label2_MouseMove(Button As Integer, Shift As Integer, X As Single, 
 &nbsp; Y As Single)
 &nbsp;&nbsp; Call ChangeColor(Label2)
End Sub
</code></pre>
</li>
<li>
Create a new subroutine called <b>ChangeColor</b>. Add the following code to this subroutine:<pre><code>Sub ChangeColor(Lbl As Label)
 &nbsp;&nbsp; If Lbl.ForeColor &lt;&gt; MyFocusColor Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Lbl.ForeColor = MyFocusColor
 &nbsp;&nbsp; End If
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing F5. Each time you move the mouse pointer over the <b>Label</b> control, the color of the <b>Label</b> control is changed.</p>
<h2>Additional Reference</h2>
<p>
"BackColor, ForeColor Properties." (MSDN Library, Developer Products, Visual Basic 5.0 Documentation)</p>
</BODY>
</HTML>
