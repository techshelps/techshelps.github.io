<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 64: Changing the Case of Text Entered in a Text Box Control</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn64"></a></sup>Tip 64: Changing the Case of Text Entered in a Text Box Control</h1>
<p>
Created: April 24, 1995</p>
<h2>Abstract</h2>
<p>
This article explains how you can force a Visual Basic® <b>Text Box</b> control to convert all typed text to either uppercase or lowercase characters.</p>
<h2>Forcing Text to Be Uppercase or Lowercase</h2>
<p>
The Visual Basic® <b>Text Box</b> control allows your program to accept any ASCII character typed on the keyboard by the user. You can force Windows® to convert the typed text to either all uppercase or all lowercase characters.</p>
<p>
The Windows application programming interface (API) <b>GetWindowLong</b> and <b>SetWindowLong</b> functions return or set various types of information about the style associated with the specified window. Every window in a Windows-based application has certain attributes that determine how that window is used within an application. Some of these style attributes can be changed at run time to modify the behavior of controls such as the <b>Text Box</b> control.</p>
<p>
To determine a window's current style settings, you can use the <b>GetWindowLong</b> function. The <b>Declare</b> statement for <b>GetWindowLong</b> is as follows (note that it must be typed as a single line of code):</p>
<pre><code>Declare Function GetWindowLong Lib "User" (ByVal hWnd As Integer, ByVal nIndex 
 &nbsp; As Integer) As Long
</code></pre>
<p>
The <b>GetWindowLong</b> function requires two arguments, as follows:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=12%><i>hWnd</i></td>
<td width=88%>An integer value containing the window's handle</td>
</tr>
<tr valign=top>
<td width=12%><i>nIndex</i></td>
<td width=88%>An integer value containing the type of window information you want to retrieve. This value may be one of the following constants:</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%><b>GWL_EXSTYLE</b>—Retrieves the extended window style.</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%><b>GWL_STYLE</b>—Retrieves the window style.</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%><b>GWL_WINDPROC</b>—Retrieves the window function's address.</td>
</tr>
</table><br>
<p>
After the <b>GetWindowLong</b> function is executed, a long value is returned. This value depends on the specific <i>nIndex</i> argument used to call the function.</p>
<p>
To change a window's style, you call the <b>SetWindowLong</b> function. Its <b>Declare </b>statement is as follows (note that it must be typed as a single line of code):</p>
<pre><code>Declare Function SetWindowLong Lib "User" (ByVal hWnd As Integer, ByVal nIndex 
 &nbsp; As Integer, ByVal dwNewLong As Long) As Long
</code></pre>
<p>
The <b>SetWindowLong</b> function requires one more argument than the <b>GetWindowLong</b> function, namely, <i>dwNewLong</i>. This long value should contain the new style value you want to apply to the specified window.</p>
<p>
When you want to force a <b>Text Box</b> control to convert typed text to uppercase characters, you can call <b>SetWindowLong</b> with <i>dwNewLong</i> set to the constant <b>ES_UPPERCASE</b>. Conversely, to convert all typed text to lowercase characters, you call <b>SetWindowLong</b> with <i>dwNewLong</i> set to the constant <b>ES_LOWERCASE</b>. In an actual Visual Basic application, you would first preserve the control's original window style and then restore the window's style when your special task has been completed.</p>
<h2>Example Program</h2>
<p>
The program shown below displays two Command Buttons and a Text Box on a form. Click the "Uppercase Only" Command Button to force all text typed in the Text Box to uppercase characters. Conversely, click the "Lowercase Only" Command Button to force typed text to be converted to lowercase characters.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Declare</b> statements to the General Declarations section of Form1 (note that each <b>Declare</b> statement must be typed as a single line of text):<pre><code>Declare Function GetWindowLong Lib "User" (ByVal hWnd As Integer, ByVal nIndex 
 &nbsp; As Integer) As Long

Declare Function SetWindowLong Lib "User" (ByVal hWnd As Integer, ByVal nIndex 
 &nbsp; As Integer, ByVal dwNewLong As Long) As Long
</code></pre>
</li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default. Set its <b>Caption</b> property to "Uppercase Only".<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Sub Command1_Click()
  Text1.Text = ""
  X = ChangeCase(Text1, True)
  Text1.SetFocus
End Sub
</code></pre>
</li>
<li>
Add a second <b>Command Button</b> control to Form1. Command2 is created by default. Set its <b>Caption</b> property to "Lowercase Only".<br><br></li>
<li>
Add the following code to the Click event for Command2:<pre><code>Sub Command2_Click()
  Text1.Text = ""
 &nbsp; X = ChangeCase(Text1, False)
  Text1.SetFocus
End Sub
</code></pre>
</li>
<li>
Create a new function called <b>ChangeCase</b>. Add the following code to this function:<pre><code>Function ChangeCase(TheControl As Control, UpLow As Integer) As Integer
  Const GWL_STYLE = (-16)
  Const ES_UPPERCASE = &amp;H8&amp;
  Const ES_LOWERCASE = &amp;H10&amp;
  Dim Rtn As Long
  Dim EditStyle As Long
  EditStyle = GetWindowLong(TheControl.hWnd, GWL_STYLE)
  If UpLow = True Then
 &nbsp;&nbsp;&nbsp;&nbsp; EditStyle = EditStyle Or ES_UPPERCASE
  End If
  If UpLow = False Then
 &nbsp;&nbsp;&nbsp;&nbsp; EditStyle = EditStyle Or ES_LOWERCASE
  End If
  Rtn = SetWindowLong(TheControl.hWnd, GWL_STYLE, EditStyle)
End Function
</code></pre>
</li>
</ol>
</BODY>
</HTML>
