<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Localizing the Setup Wizard into Another Language</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_adtlocal"></a>Localizing the Setup Wizard into Another Language</h1>
<p>
Microsoft Corporation</p>
<p>
April 1996</p>
<h2>Abstract</h2>
<p>
This article contains information about using the English version of the Microsoft® Access Developer's Toolkit (ADT) for Windows® 95 Setup Wizard with localized versions of Microsoft Access for Windows 95.</p>
<p>
When working with the English version of the ADT and a localized version of Microsoft Access, there are various changes you may want to make to the Setup Wizard to make it function correctly and to produce a setup program tailored to your needs. These changes include:
<ul type=disc>
<li>
Changing the filenames that the Setup Wizard looks for when it builds your setup program. This is necessary because the English version of Setup Wizard looks for files shipped in the English version of Microsoft Access. Some of these filenames change when Microsoft Access is localized into different languages. <b>The Setup Wizard fails if it can't find the right filenames, so you need to correct the filenames that it looks for.</b> The next section explains how to do this.<br><br></li>
<li>
Changing various strings that the Setup Wizard uses when generating your setup program. If you want your setup program to be localized into a language other than English, there are various changes you need to make to the Setup Wizard. These are discussed in the section titled "More Details on How the Setup Wizard Works."</li>
</ul>
<h2>How to Change the Filenames That the Setup Wizard Looks For</h2>
<p>
For the English version of Setup Wizard to work with a localized version of Microsoft Access, you need to change some of the filenames that the Setup Wizard looks for when it builds your setup program. This section contains instructions on how to accomplish this task.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The instructions in this section explain only how to change the names of the files that the Setup Wizard looks for. <b>These instructions do not explain how to localize the setup program that the Setup Wizard creates for you.</b> To create a fully localized setup program, skip this section and go to the section titled "More Details on How the Setup Wizard Works." Carefully follow the instructions that apply to your needs.</p>
<h3>Changing Filenames in the Microsoft Access Run-Time Version Template</h3>
<ol>
<li>
Locate the template file 01Microsoft Access Run-Time Version.mdt, which is used by the Setup Wizard. This template file is usually found in the following location: c:\msoffice\access\adt\setup wizard\msaccomp\.<br><br></li>
<li>
Before making any changes, make a backup copy of this file.<br><br></li>
<li>
Open this file in Microsoft Access.<br><br></li>
<li>
Open the table named Access Runtime. Click in the <b>Param1</b> field.<br><br></li>
<li>
Find the following three English filenames in the <b>Param1</b> field. Replace each name with the corresponding localized filename.<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td width=25%>English</td>
<td width=25%>VAEN232.dll</td>
<td width=24%>OPENENU.dll</td>
<td width=26%>MSO5ENU.dll</td>
</tr>
<tr valign=top>
<td width=25%>Brazilian Portuguese</td>
<td width=25%>VAPTB232.dll</td>
<td width=24%>OPENPTB.dll</td>
<td width=26%>MSO5PTB.dll</td>
</tr>
<tr valign=top>
<td width=25%>Czech</td>
<td width=25%>VACS232.DLL</td>
<td width=24%>OPENCSY.DLL</td>
<td width=26%>MSO5CSY.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Danish</td>
<td width=25%>VADA232.DLL</td>
<td width=24%>OPENDAN.DLL</td>
<td width=26%>MSO5DAN.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Dutch</td>
<td width=25%>VANL232.DLL</td>
<td width=24%>OPENNLD.DLL</td>
<td width=26%>MSO5NLD.DLL</td>
</tr>
<tr valign=top>
<td width=25%>English</td>
<td width=25%>VAEN232.DLL</td>
<td width=24%>OPENENU.DLL</td>
<td width=26%>MSO5ENU.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Finnish</td>
<td width=25%>VAFI232.DLL</td>
<td width=24%>OPENFIN.DLL</td>
<td width=26%>MSO5FIN.DLL</td>
</tr>
<tr valign=top>
<td width=25%>French</td>
<td width=25%>VAFR232.DLL</td>
<td width=24%>OPENFRN.DLL</td>
<td width=26%>MSO5FRN.DLL</td>
</tr>
<tr valign=top>
<td width=25%>German</td>
<td width=25%>VADE232.DLL</td>
<td width=24%>OPENDEU.DLL</td>
<td width=26%>MSO5DEU.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Greek</td>
<td width=25%>VAEL232.DLL</td>
<td width=24%>OPENELL.DLL</td>
<td width=26%>MSO5ELL.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Hungarian</td>
<td width=25%>VAHU232.DLL</td>
<td width=24%>OPENHUN.DLL</td>
<td width=26%>MSO5HUN.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Iberian Portuguese</td>
<td width=25%>VAPTG232.DLL</td>
<td width=24%>OPENPTG.DLL</td>
<td width=26%>MSO5PTG.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Italian</td>
<td width=25%>VAIT232.DLL</td>
<td width=24%>OPENITA.DLL</td>
<td width=26%>MSO5ITA.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Norwegian</td>
<td width=25%>VANO232.DLL</td>
<td width=24%>OPENNOR.DLL</td>
<td width=26%>MSO5NOR.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Polish</td>
<td width=25%>VAPL232.DLL</td>
<td width=24%>OPENPLK.DLL</td>
<td width=26%>MSO5PLK.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Russian</td>
<td width=25%>VARU232.DLL</td>
<td width=24%>OPENRUS.DLL</td>
<td width=26%>MSO5RUS.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Spanish</td>
<td width=25%>VAES232.DLL</td>
<td width=24%>OPENESP.DLL</td>
<td width=26%>MSO5ESP.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Swedish</td>
<td width=25%>VASV232.DLL</td>
<td width=24%>OPENSVE.DLL</td>
<td width=26%>MSO5SVE.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Turkish</td>
<td width=25%>VATR232.DLL</td>
<td width=24%>OPENTRK.DLL</td>
<td width=26%>MSO5TRK.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Taiwan Region</td>
<td width=25%>VACHT232.DLL</td>
<td width=24%>OPENCHT.DLL</td>
<td width=26%>MSO5CHT.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Korea</td>
<td width=25%>VAKO232.DLL</td>
<td width=24%>OPENKOR.DLL</td>
<td width=26%>MSO5KOR.DLL</td>
</tr>
<tr valign=top>
<td width=25%>Japanese</td>
<td width=25%>VAJP232.DLL</td>
<td width=24%>OPENJPN.DLL</td>
<td width=26%>MSO5JPN.DLL</td>
</tr>
</table><br>
</li>
</ol>
<h4>Additional steps for Taiwan Region, Korean, and Japanese versions of Microsoft Access</h4>
<p>
If you are using a version of Microsoft Access that is localized for Taiwan Region, Korea, or Japan, you also need to make the following changes to the template file 01Microsoft Access Run-Time Version.mdt.
<ol>
<li>
Open the table named Access Runtime. Click in the <b>Param1</b> field.<br><br></li>
<li>
Find the following English filename in the <b>Param1</b> field. Replace that filename with the corresponding localized filename.<p class=tl>
English:&nbsp;&nbsp;&nbsp;&nbsp; MSO95.DLL</P><p class=tl>
Taiwan Region:&nbsp;&nbsp;&nbsp;&nbsp; MSO95FE.DLL</P><p class=tl>
Korea:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MSO95FE.DLL</P><p class=tl>
Japanese: MSO95FE.DLL</P></li>
<li>
Click in the <b>Param1</b> field. Find the record whose <b>Param1</b> field contains "QFEUPD.EXE".<br><br></li>
<li>
Click in the <b>Language</b> field of this record. Enter the string "UNUSED".<br><br></li>
<li>
Go to the record with ID = -19982. Copy this record.<br><br></li>
<li>
Go to a new record at the bottom of the table. Paste this record.<br><br></li>
<li>
Change the <b>ID</b> field for this record to a unique value (for example, -19981).<br><br></li>
<li>
Change the <b>LineID</b> field for this record to "add dbcs3032_dll".<br><br></li>
<li>
Change the <b>Param1</b> field for this record to "dbcs3032.dll".<br><br></li>
<li>
Change the <b>Param4</b> field for this record to "dbcs3032_dll".<br><br></li>
<li>
Go to the record with ID = 2000.<br><br></li>
<li>
In the <b>Param2</b> field for this record, insert "\r{sys dbcs3032_dll:1}" immediately after "\r{sys msjt3032_dll:1}".<br><br></li>
<li>
Go to the record with ID = 2100. Copy this record.<br><br></li>
<li>
Go to a new record at the bottom of the table. Paste this record.<br><br></li>
<li>
Change the <b>ID</b> field for this record to a unique value (for example, 2125).<br><br></li>
<li>
Change the <b>LineID</b> field for this record to "sys dbcs3032_dll".<br><br></li>
<li>
Change the <b>Param3</b> field for this record to "dbcs3032_dll".</li>
</ol>
<h3>Changing Filenames in the Graph Run-Time Version Template</h3>
<ol>
<li>
Locate the template file 07Microsoft Graph 5 Run-Time Version.mdt, which is used by the Setup Wizard. This template file is usually found in the following location: c:\msoffice\access\adt\setup wizard\msaccomp\.<br><br></li>
<li>
Before making any changes, make a backup copy of this file.<br><br></li>
<li>
Open this file in Microsoft Access.<br><br></li>
<li>
Open the table named Graph5. Go to the record with ID = 750.<br><br></li>
<li>
Click in the <b>Language</b> field of this record. Delete the "!usa" string from this field.<br><br></li>
<li>
Go to the record with ID = -19400.<br><br></li>
<li>
Click in the <b>Language</b> field of this record. Delete the "ger" string from this field.<br><br></li>
<li>
Click in the <b>Param1</b> field of this record. Replace the filename with corresponding localized filename listed in the following table.<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=49%>Brazilian Portuguese</td>
<td width=51%>GRPTB50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Czech</td>
<td width=51%>GRCS50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Danish</td>
<td width=51%>GRDA50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Dutch</td>
<td width=51%>GRNL50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Finnish</td>
<td width=51%>GRFI50.olb</td>
</tr>
<tr valign=top>
<td width=49%>French</td>
<td width=51%>GRFR50.olb</td>
</tr>
<tr valign=top>
<td width=49%>German</td>
<td width=51%>GRDE50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Greek</td>
<td width=51%>GREL50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Hungarian</td>
<td width=51%>GRHU50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Iberian Portuguese</td>
<td width=51%>GRPTG50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Italian</td>
<td width=51%>GRIT50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Norwegian</td>
<td width=51%>GRNO50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Polish</td>
<td width=51%>GRPL50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Russian</td>
<td width=51%>GRRU50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Spanish</td>
<td width=51%>GRES50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Swedish</td>
<td width=51%>GRSV50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Turkish</td>
<td width=51%>GRTR50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Taiwan Region</td>
<td width=51%>GRCHT50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Korea</td>
<td width=51%>GRKO50.olb</td>
</tr>
<tr valign=top>
<td width=49%>Japan</td>
<td width=51%>GRJP50.olb</td>
</tr>
</table><br>
</li>
</ol>
<h4>Additional steps for Taiwan Region, Korean, and Japanese versions of Microsoft Access</h4>
<p>
If you are using a version of Microsoft Access that is localized for Taiwan Region, Korea, or Japan, you need to also make the following changes to the template file 07Microsoft Graph 5 Run-Time Version.mdt.
<ol>
<li>
Open the table named Graph5.<br><br></li>
<li>
Go to the record with ID = -19700.<br><br></li>
<li>
Click in the <b>Param1</b> field. Replace the string "SDM.dll" with "SDMDBCS.dll".</li>
</ol>
<h3>Changing the SQL Server Template for Far East Versions of Microsoft Access</h3>
<p>
If you are using a version of Microsoft Access that is localized for Taiwan Region, Korea, or Japan, you need to make the following changes to the template file 10ODBC Support With SQL Server.mdt.
<ol>
<li>
Locate the template file 10ODBC Support With SQL Server.mdt, which is used by the Setup Wizard. This template file is usually found in the following location: c:\msoffice\access\adt\setup wizard\msaccomp\.<br><br></li>
<li>
Before making any changes, make a backup copy of this file.<br><br></li>
<li>
Open this file in Microsoft Access.<br><br></li>
<li>
Open the table named ODBC.<br><br></li>
<li>
Click in the <b>Param1</b> field. Find the record whose <b>Param1</b> field contains "MSCPXL32.DLL".<br><br></li>
<li>
Click in the <b>Language</b> field of this record. Enter the string "UNUSED".<br><br></li>
<li>
Click in the <b>Param1</b> field. Find the record whose <b>Param1</b> field contains "12520437.CPX".<br><br></li>
<li>
Click in the <b>Language</b> field of this record. Enter the string "UNUSED".<br><br></li>
<li>
Click in the <b>Param1</b> field. Find the record whose <b>Param1</b> field contains "12520850.CPX".<br><br></li>
<li>
Click in the <b>Language</b> field of this record. Enter the string "UNUSED".</li>
</ol>
<h2>More Details on How the Setup Wizard Works</h2>
<h3>Setup Wizard File Structure</h3>
<p>
The Microsoft Access Developer's Toolkit for Windows 95 Setup Wizard consists of three sets of files that are used to create the final setup program:
<ul type=disc>
<li>
WzStp70.mdb and SWU7032.DLL. These are the files that make up the Setup Wizard itself. The DLL should work in all locales, as should the Setup Wizard. There are some tokens in the Setup Wizard that have to be changed to be locale dependent. These tokens are split into UI tokens (how the Setup Wizard looks) and generation tokens (what the Setup Wizard makes). In most cases, a user does not have to modify the UI tokens but instead has to modify just those tokens used in the final setup program.<br><br></li>
<li>
Files in the MSAcComp subdirectory. These template (.mdt) files are used by the Setup Wizard to generate Microsoft Access component setups. They include the information for the actual setup program, as well as other components (such as Microsoft Access run-time files and IISams files). Because some of the filenames for the components are localized, these files too have to be modified.<br><br></li>
<li>
Files in the Redist subdirectory. These files, along with others installed by Microsoft Access, are copied by the Setup Wizard into the resulting images. Some of these files are specific to the Setup Wizard and should be modified to match.</li>
</ul>
<h3>Setup Wizard Operation</h3>
<p>
The Setup Wizard creates the setup program using a sequence of steps that begins with the user's information and ends in the actual images. In the interim steps, the Setup Wizard creates a set of tables containing the setup program information in its own file. These tables are generated from template tables. When all of the tables are completed, the Setup Wizard imports tables in similar format from the Microsoft Access components requested by the user. When the Setup Wizard has all the information it needs, it proceeds to lay out the files in the images directory. The Setup Wizard then uses a setup generation engine to traverse the tables and create the files needed by the setup program to run.</p>
<p>
The tables in the Setup Wizard fall into four different categories:
<ul type=disc>
<li>
stp_tblTableName: These tables are used by the Setup Wizard for maintaining state, user options, and so forth. In general, there should be no reason to worry about these tables. The exceptions are the two tables that contain strings the Setup Wizard uses. These strings are used both in the Setup Wizard interface and in the generated setup program. When localizing the Setup Wizard, some tokens in these tables have to be modified.<br><br></li>
<li>
stp_tplTableName: These tables are used as templates for user tables that generate the setup information files required for the setup program. These tables need to be edited for any localization, as the user tables are generated dynamically.<br><br></li>
<li>
stp_usrTableName: These tables are the postprocessed versions of the stp_tpl tables. They contain the core information, as well as any user-defined components in the setup program.<br><br></li>
<li>
TableName: These tables contain the setup information for Microsoft Access components provided by the Setup Wizard. This naming scheme ensures that they do not compete with the user's tables. These tables are linked from the template files in the MSAcComp directory.</li>
</ul>
<h3>Token Tables</h3>
<p>
You will notice, as you proceed through this article, that many of the tables have been tokenized to afford easy localization. These tables have analogous token tables, identified by appending the string "Tokens" to the table name. The structure of the token table is simple:
<ul type=disc>
<li>
tokenID: This is the name of the token as it shows up in the table. In the table, a token is represented by \l{tokenID}.<br><br></li>
<li>
Language: This is the language identifying this particular value for the token. An empty string for the token language means that this particular value is appropriate for all languages.<br><br></li>
<li>
string: This is the value of the token for this particular language.</li>
</ul>
<p>
In the case of the token tables embedded in the Setup Wizard (as opposed to those in the template tables), the token strings are actually evaluated before being used. That is, each string is passed through an <b>Eval</b> function. This allows the Setup Wizard to create both simple and complex tokens. A simple token has the form of <i>"string"</i>. The <b>Eval</b> function extracts the quotation marks and then returns <i>string</i>. A complex token takes the form of <i>"Date: " &amp; Now()</i>. The <b>Eval</b> function evaluates the expression and returns a compound string incorporating the current date and time.</p>
<p>
When localizing the token tables, you may choose to edit the values in place, using "usa" as the language. You may also choose to add new rows to the tables with new language descriptors, such as "spa" for Spanish. However, values are required for the language descriptor of the token tables, the language descriptor of the component tables, and the language descriptor in the UI Strings table. When changing the value of a token, it is necessary that the form of the token remain. That is, if a token uses a vertical bar (|) character or other code set, they must remain in place.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You must be very careful when localizing tokens. Changes not described in this article might result in the setup program failing to work.</p>
<h3>Localizing WzStp70.mdb</h3>
<p>
The Setup Wizard file itself contains several tables with localization tokens. Some of these tables do not need to be modified, while others do.</p>
<h4>Stp_tblStrings</h4>
<p>
This table contains error strings that are shown to the user during the generation of the setup. These strings do not need to be localized for the Setup Wizard output because they only affect the interface.</p>
<h4>Stp_tblUIStrings</h4>
<p>
This table corresponds mostly to strings used in the interface. However, some strings were added to this table that are used in the actual generation of the setup program files.
<ul type=disc>
<li>
ID 342: This string ("setup") represents the location that the Setup Wizard searches for and then places the setup program files. This string must be no longer than eight characters because the string cannot constitute a long filename. This string also shows up in the component template responsible for the setup program files themselves (see below). When localizing that file, you must make sure that the strings match.<br><br></li>
<li>
ID 380: This string ("Program Files") represents the default location of the program files directory. While it was possible to extract this string from the registry in Windows 95, it is not available in Microsoft Windows NT®. This string is used to find some files required by the Setup Wizard, as well as to recommend the default install directory of the resulting setup. This string should be changed to match the locale of your (the developer's) machine, as the files need to be found. When the Setup Wizard presents you with "C:\Program Files\Application" as the default installation directory, you choose the Program Files directory name for the locale of the setup program you generate.<br><br></li>
<li>
ID 381: This string ("Common Files") is analogous to the Program Files string, but for the common files subfolder. All the same issues apply.<br><br></li>
<li>
ID 1009: This string ("usa") represents the language token used in the setup generation. All the tables used in creating the setup information file are tokenized by language. This string is used to identify the language of the resulting setup program. It must match the language descriptor used in the token tables; if not, the setup program is not generated appropriately.<br><br></li>
<li>
ID 352/353: These strings ("Disks\" and "Disk|") represent the location of floppy image files under the images subfolder. Often, you might choose to change the value of these tokens so that you do not have to modify the folder names by hand. Note that the string form must remain intact. That is, the first string must end with a backslash (\), while the second string must end with a vertical bar (|).<br><br></li>
<li>
ID 354/355: These strings ("Net\" and "Compnet\") represent the location of the network and the compressed network image files, respectively, under the images subfolder.</li>
</ul>
<h4>Stp_tplComponent tokens</h4>
<p>
This token table illustrates one of the basic principles of token tables. If a token string uses three equal signs (===) or three hyphens (---) to designate a value, the string represents a comment. That is, many of the strings are used to comment the generated setup information file. In most cases, you do not need to localize these because most users do not look at the setup information file. If you prefer to, you may localize these tokens.</p>
<p>
The only token that you are required to localize is the token "Setup". The value of this token must match the value offered by the appropriate string in the UI Strings table described above.</p>
<h4>Stp_tplINF header tokens</h4>
<ul type=disc>
<li>
FloppyDir: Represents the folder names for floppy images. You must localize this string if you changed the equivalent string in the UI Strings table. The code set <i>\r{1} </i>represents the floppy number of the current floppy. For example, you might change this token to <i>"..\disque\r{1}"</i>.<br><br></li>
<li>
Floppy Setup Name: This string is used in the <b>Progress</b> dialog box of the setup program when running from floppies. The <i>\r{1} </i>again represents the floppy number.<br><br></li>
<li>
NetCompSetupName: This string is analogous to Floppy Setup Name in the compressed network setup program case.<br><br></li>
<li>
NetSetupName: This string is analogous to Floppy Setup Name in the network setup program case.</li>
</ul>
<h4>Stp_tplLST</h4>
<p>
In this table, the lines with IDs 150 through 165 all use the string "setup". Because this string is not tokenized in this table, you have to either change every occurrence by hand or tokenize it. If you're modifying this string by hand, be sure to avoid changing the extension. If you are tokenizing this string, replace the portion before the extension <i>(setup) </i>with <i>\l{setup}</i>. Then you may add to the token table a token by the name of setup with a corresponding value. In either case, you must make sure that this string matches the value in the UI Strings table.</p>
<h4>Stp_tplLST tokens</h4>
<ul type=disc>
<li>
BB DLL: This string represents the name of the DLL with the billboards and bitmaps. If you choose to use a DLL other than the one provided, you must modify the name here. Note that, by default, the Setup Wizard expects to find a DLL named MSADT that is concatenated with the three-letter language descriptor.<br><br></li>
<li>
Require31: This message is offered to the user trying to run the setup program under Windows 3.1.<br><br></li>
<li>
WndMess: This string is used when the setup program is first run. Note the usage of the <b>stGetValue</b> function to insert the application name in the string.</li>
</ul>
<h4>Stp_tplMain tokens</h4>
<p>
This table contains comments that have been removed from this writeup.
<ul type=disc>
<li>
Bitmap DLL: The DLL used to hold the billboards and bitmaps. Must match other occurrences of this value.<br><br></li>
<li>
Compact: String offered to the user in the main dialog box of the setup program for a compact installation. Only shows up if the user is faced with more than one install option. Note the usage of an ampersand (&amp;) to denote an accelerator.<br><br></li>
<li>
Compact Description: Description used for the compact installation option.<br><br></li>
<li>
Complete: String offered to the user for the custom (normally, also complete) installation option. Only shows up if the user is faced with more than one install option.<br><br></li>
<li>
Complete Description: Description used for the custom installation option.<br><br></li>
<li>
Install: String offered to the user for the single component install option.<br><br></li>
<li>
Install Description: Description used for the single component install option.<br><br></li>
<li>
Maint: String used to designate maintenance mode.<br><br></li>
<li>
setup: Another occurrence of this very common string. You must make sure that it matches other occurrences of this string.<br><br></li>
<li>
Typical: String offered to the user for the typical installation option. Only shows up if the user is faced with more than one option.<br><br></li>
<li>
Typical Description: Description used for the typical installation option.<br><br></li>
<li>
Workstation: Unused.<br><br></li>
<li>
Workstation Description: Unused.<br><br></li>
<li>
Workstation Specifics: Unused.</li>
</ul>
<h4>Stp_tplSTF header tokens</h4>
<ul type=disc>
<li>
AboutBoxString: Used in the About box for the setup program. Does not need to be modified.<br><br></li>
<li>
AppName: Application name as used by the setup program to track maintenance mode. Does not need to be modified.<br><br></li>
<li>
AppVersionNum: Version number for the application as used by the setup program to track maintenance mode. Does not need to be modified.<br><br></li>
<li>
CheckModules: Used by the setup program to detect other running programs and warn the user of a possible conflict. The format is a comma-separated list of value pairs, where the first value is the window class name and the second value is the string used to represent the application to the user. Only the second string in each value pair needs to be changed.<br><br></li>
<li>
CheckModulesGraph: See CheckModules above. Used only if the setup program includes the graph component.<br><br></li>
<li>
CheckModulesRepl: See CheckModules above. Used only if the setup program includes the replication component.<br><br></li>
<li>
DialogCaptionBase: Used as the application name represented in the setup program. Does not need to be modified.<br><br></li>
<li>
FrameBitmapDll: The DLL containing the bitmaps for the setup program. This value must match previous occurrences of this variable.<br><br></li>
<li>
FrameBitmapNums: The resource IDs of the two bitmaps for the string "Setup" in the upper-left corner of the setup program window.<br><br></li>
<li>
FrameCaption: Used in the dialog box captions of the setup program. Contains a function to represent the application name.<br><br></li>
<li>
Language: Uppercase three-character string for language. Used in tracking maintenance mode.<br><br></li>
<li>
MSAPPSMode: Does not need to be modified.<br><br></li>
<li>
SetupVersion: Does not need to be modified.<br><br></li>
<li>
UsageString: Message presented to the user if they type in an incorrect argument to the setup program.<br><br></li>
<li>
Usetup: Uppercase string for "Setup". Must match previous occurrences of this variable in other tables.<br><br></li>
<li>
WelcomeString: Used by the bootstrapper while copying files from the floppies to the user's temporary storage folder.</li>
</ul>
<h3>Localizing Files in the MSAcComp Subfolder</h3>
<p>
These files contain the information used by the Setup Wizard to insert a component provided by Microsoft Access. In most cases, the changes need only to reflect comment changes in the generated STF. These changes take place in the token tables of each file. There are, however, special cases that are listed in this section. When a line needs to be changed, it is marked with a language specifier in the language column. To make the changes, you may either copy the lines and mark them with a different language specifier or change both the values and the language specifier in place. Note that line order is relevant in the main (not token) tables, so the ID must be used to maintain sequence. If you are adding lines to a main table, be sure to place them immediately after their English analog. Also, you must change the <b>Language</b> field in the token table for each file in the MSAcComp subfolder to match the language string chosen in Stp_tblUIStrings, ID 1009 (see above).</p>
<h4>00Setup.mdt</h4>
<p>
<b>Setup table</b>
<ul type=disc>
<li>
Lines with ID -19800, -19700, -19600: Change the filename in the Param1 column to reflect the appropriate 8.3 filename format. Note that the extension cannot be changed, only the name of the file up to the extension. This string (with a length limit of eight characters) must match all other uses of the string "setup".<br><br></li>
<li>
Line -19300: Change the filename in Param1 to match the name of the DLL that contains all of your bitmaps.</li>
</ul>
<p>
<b>Setup token table</b>
<ul type=disc>
<li>
lang: Must match the language string in all other instances. Generally, a three-character string.<br><br></li>
<li>
setup: Must match other uses of this string.</li>
</ul>
<h4>01Microsoft Access run-time Version.mdt</h4>
<p>
<b>Microsoft Access run-time table</b>
<ul type=disc>
<li>
ID -19750: Change the Language column to "usa".<br><br></li>
<li>
ID -19749: Copy the line, change the Language column to your language, and change the filename in Param1 to appropriate VBA filename. The filename should look something like VA??232.DLL, where ?? is a two- or three-character language specifier.<br><br></li>
<li>
ID -19680: Copy the line, and update the language and filename in Param1. Filename structure should be similar to English and German versions.<br><br></li>
<li>
ID -19670: Same as ID -19680.<br><br></li>
<li>
ID 4050: Change Language column to "usa".<br><br></li>
<li>
ID 4000: In the <b>Param2 </b>field, delete "\r{vaen232_dll}" from the beginning of the field.</li>
</ul>
<p>
The following changes are for Far East versions of Microsoft Access only:
<ul type=disc>
<li>
ID -19982: Copy the line, change the Language column to your language, and change "msjt3032" to "dbcs3032" in fields <b>LineID</b>, <b>Param1</b>, and <b>Param4</b>.<br><br></li>
<li>
ID -19700: Change the filename in Param1 to "mso95fe.dll".<br><br></li>
<li>
ID 2000: In Param2, insert "\r{sys dbcs3032_dll:1}" right after "\r{sys msjt3032_dll:1}".<br><br></li>
<li>
ID 2100: Copy the line, change the Language column to your language, and change "msjt3032" to "dbcs3032" in fields <b>LineID</b> and <b>Param3</b>.</li>
</ul>
<h4>07Microsoft Graph 5 run-time Version.mdt</h4>
<p>
<b>Graph5 table</b>
<ul type=disc>
<li>
ID -19400: Copy the line and update the Language column and the filename in the Param1 column. The localized versions of Graph require both the English object library and the localized object library. The filename of the object library should be similar in structure to the English and German filenames.</li>
</ul>
<p>
The following change is for Far East versions of Microsoft Access only:
<ul type=disc>
<li>
ID -19700: Change the filename in Param1 to "sdmdbcs.dll".</li>
</ul>
<p>
<b>Graph5 token table</b>
<ul type=disc>
<li>
&amp;Edit: Used in the OLE menu merging for the graph object. Strings have been provided in many languages. If necessary, add a line with your language translation.<br><br></li>
<li>
&amp;Open: See $Edit above.</li>
</ul>
<h4>09Replication.mdt</h4>
<p>
<b>Replication token table</b>
<ul type=disc>
<li>
ReplLongDir: Long filename for the replication folder in the Common Files folder.<br><br></li>
<li>
ReplShortDir: Short (eight-character) filename for the replication folder in the Common Files folder. Used in network installs and on systems that don't support long filenames.<br><br></li>
<li>
transpm: Name of the shortcut added for the transporter. The format for this string is SHORT&lt;LONG&gt;. You must make sure that the short string is no longer than eight characters. You must also make sure that the long string is enclosed in a single set of "&lt;&gt;" and that it does not contain any illegal characters.</li>
</ul>
<h3>Localizing Files in the Redist Folder</h3>
<p>
These files are used by the Setup Wizard in the resulting images.</p>
<h4>ACMSetup.exe</h4>
<p>
This is the setup program itself. Copy this file from the Microsoft Access CD-ROM into this folder.</p>
<h4>ACMSetup.hlp</h4>
<p>
This is the Help file for the setup program. Copy this file from the Microsoft Access CD-ROM into this folder.</p>
<h4>CTL3D32.dll</h4>
<p>
Does not need to be changed.</p>
<h4>Expand.exe</h4>
<p>
Program used to expand compressed files. This program is available only with released versions of Windows NT. If you do not own Windows NT, you have to use the English version. Note that this program is a console application and does not have much of an interface at all.</p>
<h4>MSACCCAH.dll</h4>
<p>
This file does not need to be modified. It contains setup code that is specific to Microsoft Access.</p>
<h4>MSADTUSA.dll</h4>
<p>
This is the DLL with all of your bitmaps. You can use a resource editor to modify this file. You must also rename this file to match the name used in the Setup Wizard files.</p>
<h4>MSArnReg.exe</h4>
<p>
This file does not need to be modified.</p>
<h4>MSArnReg.dll</h4>
<p>
This file is used to register Microsoft Access in case the full copy is not there. The only interface elements of this file show up in the Explorer when the user views the properties of a Microsoft Access database. This file is not available in languages other than those the ADT is available in.</p>
<h4>MSSetup.dll</h4>
<p>
Copy this file from the Microsoft Access media.</p>
<h4>QFEUPD.exe</h4>
<p>
Copy this file from the Microsoft Access media.</p>
<h4>Setup.exe</h4>
<p>
Copy this file from the Microsoft Access media. Be sure to rename this file to match the names specified in the Setup Wizard files (for example, Install.exe or some other appropriate string).</p>
<h4>Setup.tdf</h4>
<p>
Rename this file to match the "setup" string used throughout the Setup Wizard tables.</p>
<h4>Setup.ini</h4>
<p>
Rename this file to match the "setup" string used throughout the Setup Wizard tables.</p>
</BODY>
</HTML>
