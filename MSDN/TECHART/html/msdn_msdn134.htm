<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 134: Creating Temporary Files</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn134"></a></sup>Tip 134: Creating Temporary Files</h1>
<p>
July 1, 1995</p>
<h2>Abstract</h2>
<p>
When developing an application in Microsoft® Visual Basic®, you may need to create a temporary file on disk. This article explains how to create temporary files in Visual Basic version 4.0.</p>
<h2>Using the GetTempFileName Function</h2>
<p>
You can create a new file on a specified disk drive using the Microsoft® Windows® application programming interface (API) <b>GetTempFileName</b> function. Although the file you create is referred to as a temporary file, you are responsible for physically deleting the file from disk when you no longer need it.</p>
<p>
To use the <b>GetTempFileName</b> function in Microsoft® Visual Basic®, you must include the following <b>Declare</b> statement in your program (note that this <b>Declare</b> statement must be typed as a single line of code):</p>
<pre><code>Private Declare Function GetTempFileName Lib "kernel32" Alias "GetTempFileNameA" 
 &nbsp; (ByVal lpszPath As String, ByVal lpPrefixString As String, ByVal wUnique As 
 &nbsp; Long, ByVal lpTempFileName As String) As Long
</code></pre>
<p>
The <b>GetTempFileName</b> function requires four arguments. The first argument must be set to the drive and/or path where you want to create the new file. In the example program shown below, the new file is created in the root directory on drive C.</p>
<p>
The second argument required by the <b>GetTempFileName</b> function is the prefix you want to assign to the file name. In other words, if you specify the prefix as being "TEST", the function will create the first four letters of the new file name set to "TEST".</p>
<p>
The third argument to the <b>GetTempFileName</b> function should be set to zero. This tells the function to automatically generate a random number for the file name. This random number is then appended to the prefix string to create a unique and complete file name.</p>
<p>
The fourth argument to the <b>GetTempFileName</b> function requires a string buffer of at least 256 characters in length to hold the temporary file's name.</p>
<p>
After you call this function, the new file is created on the specified disk. It is important to note that the file is not deleted when you quit your application—you must physically delete the file from disk.</p>
<h2>Example Program</h2>
<p>
This program shows how to create a temporary file from within your Visual Basic application.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Declare</b> statement to the General Declarations section of Form1 (note that this <b>Declare</b> statement must be typed as a single line of code):<pre><code>Private Declare Function GetTempFileName Lib "kernel32" Alias "GetTempFileNameA" 
 &nbsp; (ByVal lpszPath As String, ByVal lpPrefixString As String, ByVal wUnique As 
 &nbsp; Long, ByVal lpTempFileName As String) As Long
</code></pre>
</li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Private Sub Form_Load()
 &nbsp;&nbsp; Text1.TEXT = ""
End Sub
</code></pre>
</li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim FilePrefix As String
 &nbsp;&nbsp; Dim NewFile As String * 256
 &nbsp;&nbsp; FilePrefix = "TEST"
 &nbsp;&nbsp; NewFile = GetTempName(FilePrefix)
 &nbsp;&nbsp; Text1.TEXT = NewFile
End Sub
</code></pre>
</li>
<li>
Create a new function called <b>GetTempName</b>. Add the following code to this function:<pre><code>Private Function GetTempName(TmpFilePrefix As String) As String
 &nbsp;&nbsp; Dim TempFileName As String * 256
 &nbsp;&nbsp; Dim X As Long
 &nbsp;&nbsp; Dim DriveName As String
 &nbsp;&nbsp; DriveName = "c:\"
 &nbsp;&nbsp; X = GetTempFileName(DriveName, TmpFilePrefix, 0, TempFileName)
 &nbsp;&nbsp; GetTempName = Left$(TempFileName, InStr(TempFileName, Chr(0)) - 1)
End Function
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing F5. Click the command button to create a new temporary file on drive C in the root directory. The name of the newly created file is displayed in the <b>Text Box</b> control.</p>
</BODY>
</HTML>
