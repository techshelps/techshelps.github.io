<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Comparison Operators</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1>Comparison Operators</h1>
<p>
Oracle and SQL Server comparison operators are nearly identical.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Operator</b></td>
<td class=label width=33%><b>Oracle</b></td>
<td class=label width=34%><b>SQL Server</b></td>
</tr>
<tr valign=top>
<td width=33%>Equal to</td>
<td width=33%>=</td>
<td width=34%>=</td>
</tr>
<tr valign=top>
<td width=33%>Greater than</td>
<td width=33%>&gt;</td>
<td width=34%>&gt;</td>
</tr>
<tr valign=top>
<td width=33%>Less than</td>
<td width=33%>&lt;</td>
<td width=34%>&lt;</td>
</tr>
<tr valign=top>
<td width=33%>Greater than or equal to</td>
<td width=33%>&gt;=</td>
<td width=34%>&gt;=</td>
</tr>
<tr valign=top>
<td width=33%>Less than or equal to</td>
<td width=33%>&lt;=</td>
<td width=34%>&lt;=</td>
</tr>
<tr valign=top>
<td width=33%>Not equal to</td>
<td width=33%>!=, ^=, &lt; &gt;</td>
<td width=34%>!=, &lt;&gt;</td>
</tr>
<tr valign=top>
<td width=33%>Not greater than</td>
<td width=33%>N/A</td>
<td width=34%>!&gt;</td>
</tr>
<tr valign=top>
<td width=33%>Not less than</td>
<td width=33%>N/A</td>
<td width=34%>!&lt;</td>
</tr>
<tr valign=top>
<td width=33%>In any member in set</td>
<td width=33%>IN</td>
<td width=34%>IN</td>
</tr>
<tr valign=top>
<td width=33%>Not in any member in set</td>
<td width=33%>NOT IN</td>
<td width=34%>NOT IN</td>
</tr>
<tr valign=top>
<td width=33%>Any value in set</td>
<td width=33%>ANY, SOME</td>
<td width=34%>ANY, SOME</td>
</tr>
<tr valign=top>
<td width=33%>All values in set</td>
<td width=33%>ALL</td>
<td width=34%>ALL</td>
</tr>
<tr valign=top>
<td width=33%>Like pattern</td>
<td width=33%>LIKE</td>
<td width=34%>LIKE </td>
</tr>
<tr valign=top>
<td width=33%>Not like pattern</td>
<td width=33%>NOT LIKE </td>
<td width=34%>NOT LIKE</td>
</tr>
<tr valign=top>
<td width=33%>Value between</td>
<td width=33%>BETWEEN</td>
<td width=34%>BETWEEN</td>
</tr>
<tr valign=top>
<td width=33%>Value not between</td>
<td width=33%>NOT BETWEEN</td>
<td width=34%>NOT BETWEEN</td>
</tr>
<tr valign=top>
<td width=33%>Value exists</td>
<td width=33%>EXISTS</td>
<td width=34%>EXISTS</td>
</tr>
<tr valign=top>
<td width=33%>Value does not exist</td>
<td width=33%>NOT EXISTS</td>
<td width=34%>NOT EXISTS</td>
</tr>
<tr valign=top>
<td width=33%>Value {is | is not} NULL</td>
<td width=33%>IS NULL, IS NOT NULL</td>
<td width=34%>IS NULL, IS NOT NULL</td>
</tr>
</table><br>
<h3>The LIKE Keyword</h3>
<p>
The SQL Server LIKE keyword offers some useful wildcard search options that are not supported by Oracle. In addition to supporting the % and _ wildcard characters, the [ ] and [^] characters are also supported.</p>
<p>
If you are familiar with the UNIX operating system, you recognize these characters and their capability. The [ ] character set is used to search for any single character within a specified range. For example, if you are searching for the characters a through f in a single character position, you can specify this with '[a-f]' or '[abcdef]'.</p>
<p>
The [^] wildcard character is used to specify those characters NOT in the specified range. For example, if any character except for a through f is acceptable, you use '[^a - f]' or '[^abcdef]'. The usefulness of these additional wildcard characters is shown in the table.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=54%><b>Oracle</b></td>
<td class=label width=46%><b>SQL Server</b></td>
</tr>
<tr valign=top>
<td width=54%>SELECT * FROM STUDENT_ADMIN.STUDENT<br>
WHERE LNAME LIKE <b>'A%'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OR LNAME LIKE 'B%'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OR LNAME LIKE 'C%'</b></td>
<td width=46%>SELECT * FROM STUDENT_ADMIN.STUDENT<br>
WHERE LNAME LIKE<b> '[ABC]%'</b></td>
</tr>
</table><br>
<p>
For more information about the LIKE keyword, see the <i>Microsoft SQL Server Database Developer's Companion</i>.</p>
<h3>String Concatenation</h3>
<p>
Oracle uses two pipe symbols (||) as the string concatenation operator, while SQL Server uses the plus sign (+). This difference requires minor revision in your application program code. </p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Oracle</b></td>
<td class=label width=50%><b>SQL Server</b></td>
</tr>
<tr valign=top>
<td width=50%>SELECT FNAME<b>||</b>' '<b>||</b>LNAME AS NAME<br>
FROM STUDENT_ADMIN.STUDENT</td>
<td width=50%>SELECT FNAME +' '+ LNAME AS NAME<br>
FROM STUDENT_ADMIN.STUDENT</td>
</tr>
</table><br>
</BODY>
</HTML>
