<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 9: Creating Multiline Command Buttons</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn9"></a></sup>Tip 9: Creating Multiline Command Buttons</h1>
<p>
Created: March 1, 1995</p>
<h2>Abstract</h2>
<p>
Visual Basic® allows you to add Command button controls to your application programs. Command buttons can display a one-line caption (up to a maximum of 255 characters in length) that tells users of your program the command that will be executed when they click the mouse on the button. However, you can have the same functionality if you create a multiline command button using the <b>Picture Box</b> control.</p>
<h2>How to Create a Multiline Command Button</h2>
<p>
In Windows®-based applications, Command buttons are used to allow the user to execute a specific function simply by clicking the mouse over the control. The <b>Caption</b> property of a Command button is used to display a message directly on the control. This message tells users what function will be executed if they click the mouse on the Command button. Although Command buttons are extremely versatile controls, they do not allow you to include more than a single one-line caption.</p>
<p>
You can, however, create a multiline Command button by using a <b>Picture Box</b> control. The <b>Picture Box</b> control responds to a click event just as the Command button does, and it also lets you display as many lines of text as is needed. Instead of using the <b>Caption</b> property of the Command button to display a message on the control, you use Print to draw the text on the <b>Picture Box</b>.</p>
<p>
To draw the message text on a <b>Picture Box</b>, you use the Print command in Visual Basic®. The text is always printed at the location specified by the <b>CurrentX</b> and <b>CurrentY</b> properties of the <b>Picture Box</b>. Therefore, you must first calculate the length of each line of text, and the length of the <b>Picture Box</b> control itself. This value can then be used to calculate the position on the <b>Picture Box</b> where the text is to be drawn. As each character is drawn on the <b>Picture Box</b>, Visual Basic automatically increments <b>CurrentX</b> to point to the next available print position. Visual Basic does not scroll the text of the message to the next line when drawing text on a <b>Picture Box</b>. The text will be cut off at the control's right-most border. Therefore, you must be certain that the <b>Picture Box</b> is wide enough to accommodate the longest line you intend to display on the control.</p>
<p>
After you have calculated the values for the <b>CurrentX</b> property, you must issue the Print command to tell Visual Basic to draw the text on the <b>Picture Box</b> control. To do this, you execute the statement:</p>
<pre><code>Picture1.Print Msg
</code></pre>
<p>
To determine where the text of your message should be drawn on the Picture Box, you use the <b>TextWidth</b> method. This returns the horizontal length of the text based on the currently selected <b>FontName</b> and <b>FontSize</b> properties. Likewise, you can determine how wide the <b>Picture Box</b> control itself is by using <b>ScaleWidth</b>.</p>
<p>
Once you have the length of the text and the length of the <b>Picture Box</b> control, you simply divide these two values by two. Next, you set <b>CurrentX</b> to the difference between these two values. This is the position where the first character of the message will be drawn on the <b>Picture Box</b> control by the Print command.</p>
<h2>Example Program</h2>
<p>
The following program demonstrates how to create a multiline Command button in Visual Basic.
<ol>
<li>
Start a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add a Picture Box control to Form1. <br><br></li>
<li>
Add the following code to the Picture1_Paint event:<pre><code>Sub Picture1_Paint()
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dim Msg As String
 &nbsp;&nbsp; Picture1.CurrentY = 0
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Msg = "Click here to"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgWidth = TextWidth(Msg) / 2
 &nbsp;&nbsp; BtnWidth = Picture1.ScaleWidth / 2
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Picture1.CurrentX = BtnWidth - MsgWidth
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Picture1.Print Msg
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Msg = "Exit"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgWidth = TextWidth(Msg) / 2
 &nbsp;&nbsp; BtnWidth = Picture1.ScaleWidth / 2
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Picture1.CurrentX = BtnWidth - MsgWidth
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Picture1.Print Msg
 &nbsp;&nbsp; 
End Sub
</code></pre>
</li>
<li>
Add the following statement to the Picture1_Click event:<pre><code>Picture1_Click()
 &nbsp;&nbsp; End
End Sub
</code></pre>
</li>
</ol>
<p>
When you execute this program, a multiline command button will be displayed on Form1. The first line of text displayed on the command button is "Click here to" and the second line is "Exit". Both lines of text are centered horizontally within the left and right border of the <b>Picture Box</b>. The program will end when you click the mouse button on the <b>Picture Box</b>. When in design mode, you can adjust the vertical position of the <b>Picture Box</b> so that the text is also centered vertically within the <b>Picture Box</b> control. Alternatively, you could use the <b>TextHeight</b> method to calculate the vertical position within the <b>Picture Box</b>, just as was done with the example above to center the text horizontally on the control.</p>
</BODY>
</HTML>
