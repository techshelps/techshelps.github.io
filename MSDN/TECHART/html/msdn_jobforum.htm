<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Job Forum: A Sample Internet Information Server Application That Stores and Retrieves Data from a Microsoft Access Database</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_jobforum"></a>Job Forum: A Sample Internet Information Server Application That Stores and Retrieves Data from a Microsoft Access Database</h1>
<p>
Microsoft Corporation</p>
<p>
January 1996</p>
<p>
<OBJECT id=sample1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"
	width=0 height=0 hspace=0>
<PARAM name="Command" value="Sample">
<PARAM name="Item1" value="Technical Articles Sample">
<PARAM name="Item2" value="4892">
</OBJECT><a href="javascript:sample1.Click()">Click to open or copy the files in the Job Forum sample application for this technical article.</a></p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This document is an early release of the final specification. It is meant to specify and accompany software that is still in development. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the functionality of the final specification or software. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights.</p>
<h3>Contents</h3>
<p>
<a href="#jobforumjobintro">Introduction</a></p>
<p>
<a href="#jobforumover">Overview</a></p>
<p>
<a href="#jobforumsampover">The Job Forum Sample Application Overview</a></p>
<p>
<a href="#jobforumprocess">The Communication Process</a></p>
<p>
<a href="#jobforumidc">Internet Database Connector Files (.IDC Files)</a></p>
<p>
<a href="#jobforumhtx">HTML Extension Files (.HTX Files)</a></p>
<p>
<a href="#jobforumreferencing">Referencing .IDC Files from a Web Browser</a></p>
<p>
<a href="#jobforuminstall">Installation and Setup</a></p>
<p>
<a href="#jobforumsamp">The Job Forum Sample Application</a></p>
<p>
<a href="#jobforumiis">Microsoft Internet Information Server</a></p>
<p>
<a href="#jobforumodbcdatasource">The ODBC Data Source</a></p>
<p>
<a href="#jobforumusing">Using the Job Forum Sample Application</a></p>
<p>
<a href="#jobforumcust">Job Forum Example 1: Viewing Job Available Listings—Custom Search</a></p>
<p>
<a href="#jobforumenter">Job Forum Example 2: Entering a New Job Wanted Listing</a></p>
<p>
<a href="#jobforumperform">Job Forum Example 3: Performing Remote Database Administration</a></p>
<p>
<a href="#jobforumforumconc">Conclusion</a></p>
<h2><a name="jobforumjobintro"></a>Introduction</h2>
<p>
The explosive growth of the Internet in recent years has exposed thousands of users and developers to a powerful resource. Although the Internet itself is not new, recently developed tools for browsing the World Wide Web (WWW) have made the Internet more accessible and more popular.</p>
<p>
In simple terms, Web browsers such as Microsoft® Internet Explorer or Netscape® Navigator® provide a convenient client interface to data on distributed servers. Once users are accessing data on the Web, they quickly decide they want to merge the power of the Internet with the power and convenience of Microsoft Access.</p>
<p>
This paper discusses how to provide access to Microsoft Access databases from a Web browser and describes a sample application that uses Microsoft Access for this purpose. The Job Forum sample application demonstrates how you can use the capabilities of Microsoft Internet Information Server to allow a user to execute queries against data stored in a Microsoft Access database using a Web browser, store and retrieve data from a Microsoft Access database, and return information to the Web browser formatted as a Hypertext Markup Language (HTML) document.</p>
<p>
The Microsoft Internet Database Connector is a component of Microsoft Internet Information Server. It is a powerful tool that accepts input from a Web browser to execute SQL commands against an open database connectivity (ODBC) data source and return any resulting data to the Web browser formatted as an HTML document or form. Internet Information Server can provide access from a client Web browser to data stored on servers in many different database formats. </p>
<p>
This paper focuses on using the Microsoft Internet Database Connector to access data stored in Microsoft Access databases. We recommend that you use Internet Information Server with data stored in a Microsoft Access database when your application will be accessed by a limited number of users. The combination of Internet Information Server and Microsoft Access is ideal for accessing data across a corporate intranet or on a World Wide Web site. If your Web site grows to the point where it gets thousands of hits per day, we recommend that you consider upsizing the database to Microsoft SQL Server. For example, the Job Forum application discussed in this paper was developed using Microsoft Access and then upsized to Microsoft SQL Server to handle the high traffic on the Microsoft Access Web site. The following components work together to provide the described functionality and must all be present for the Job Forum application to work properly:
<ul type=disc>
<li>
A Web browser (such as Microsoft Internet Explorer or Netscape Navigator)<br><br></li>
<li>
Microsoft Internet Information Server running on Windows NT® Server 3.51<br><br></li>
<li>
The Microsoft ODBC Access driver<br><br></li>
<li>
A Microsoft Access database</li>
</ul>
<p>
This paper assumes that you have a basic understanding of the Internet and the World Wide Web and are familiar with the structure of HTML documents and forms, and the operation of the Hypertext Transfer Protocol (HTTP). It also assumes that you have the Microsoft Internet Information Server properly configured on a machine using the Microsoft Windows NT Server 3.51 operating system and that you have Microsoft Access installed on your system and understand how to create tables and queries.</p>
<h2><a name="jobforumover"></a>Overview</h2>
<h3><a name="jobforumsampover"></a>The Job Forum Sample Application Overview</h3>
<p>
The Job Forum sample application is like an interactive Classified Ads section of a newspaper. It lets Web users browse jobs-available and jobs-wanted listings stored in a Microsoft Access database. The application also lets users enter new jobs available or jobs wanted. Users can view existing job postings according to several criteria, such as job type or job location.</p>
<p>
<img src="jobforum_1.gif" border=0></p>
<p class=label>
<b>Figure 1. Job Forum sample home page</b></p>
<p>
The data for the Job Forum application is stored in a Microsoft Access database. Users can execute queries against the Microsoft Access database. The data returned by these queries is presented to the user as an HTML document or form. To execute queries against a Microsoft Access database and return data formatted in HTML, the Job Forum application uses a component of Microsoft Internet Information Server called the Microsoft Internet Database Connector.</p>
<h3><a name="jobforumprocess"></a>The Communication Process</h3>
<p>
Browsers submit requests to Internet Information Server using HTTP. Internet Information Server uses the Internet Database Connector (HTTPODBC.dll) to access data in a Microsoft Access database using ODBC. The following diagram shows the components and steps involved in the communication between a Web browser and a Microsoft Access database.</p>
<p>
<img src="jobforum_2.gif" border=0></p>
<p class=label>
<b>Figure 2. Steps of communication between a Web browser and a Microsoft Access database</b></p>
<h3><a name="jobforumidc"></a>Internet Database Connector Files (.IDC Files)</h3>
<p>
The Internet Database Connector uses ASCII files saved with an .IDC extension to get information on how to connect to an ODBC data source and how to execute an SQL statement. These files contain several required fields and may also include optional fields that contain the information necessary to execute a query.</p>
<h4>Required fields</h4>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>Field</b></td>
<td class=label width=72%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=28%><b>Datasource</b></td>
<td width=72%>The name of the ODBC data source.</td>
</tr>
<tr valign=top>
<td width=28%><b>Template</b></td>
<td width=72%>The name of the HTML extension file (HTX files—ASCII files saved with an .HTX extension) to be used to format data returned from a query. (For more information, see the "HTML Extension Files" section below.)</td>
</tr>
<tr valign=top>
<td width=28%><b>SQLStatement</b></td>
<td width=72%>The SQL statement to execute. Parameter values must be enclosed with percent characters (%). The SQL statement can span multiple lines; each line that is part of the SQL statement must begin with a plus sign (+). The value in this field can also contain the name of an existing table or query saved in the Microsoft Access database. When you refer to an existing table or query, you must enclose the object name with the accent character (`).<p>
Note: You must use the ODBC SQL format and not the Microsoft Access SQL format to construct these queries. For more information, consult the Msjetsql.hlp file in your Windows\System directory.</p>
</td>
</tr>
</table><br>
<h4>Optional fields</h4>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>Field</b></td>
<td class=label width=72%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=28%><b>DefaultParameters</b></td>
<td width=72%>Values that will be used in the SQL statement if a parameter is not specified by the client.</td>
</tr>
<tr valign=top>
<td width=28%><b>Expires</b></td>
<td width=72%>The number of seconds to wait before refreshing a cached output page. When the same query is run, the cached page is returned without accessing the data source again. The <b>Expires</b> field is used to force a requery of the database after the specified time period. By default, HTTPODBC.DLL will cache pages only when the <b>Expires</b> field setting is used. </td>
</tr>
<tr valign=top>
<td width=28%><b>MaxFieldSize</b></td>
<td width=72%>The maximum buffer space allocated per record. The default value is 8192 bytes.</td>
</tr>
<tr valign=top>
<td width=28%><b>MaxRecords</b></td>
<td width=72%>The maximum number of records returned from any one query. By default, HTTPODBC.DLL returns all records. You use this setting to limit the number of records returned.</td>
</tr>
<tr valign=top>
<td width=28%><b>Password</b></td>
<td width=72%>A user name. You include this field only if a password is required.</td>
</tr>
<tr valign=top>
<td width=28%><b>RequiredParameters</b></td>
<td width=72%>Parameter names that must be passed from the browser. If these parameters are not passed by the browser, an error occurs.</td>
</tr>
<tr valign=top>
<td width=28%><b>Username</b></td>
<td width=72%>A user name that is used to access SQL Server databases that are not running integrated security.</td>
</tr>
</table><br>
<p>
For example, the following is the text from the A_V_Cust.idc file in the Job Forum sample application:</p>
<pre><code>Datasource: JobForum
Template: ViewAvail.htx
DefaultParameters: ListingDate=12/1/95, JobTitle=%%, JobDesc=%%, JobCity=%%, JobState=%%, JobAreaCode=%%, JobZip=%%, JobDesc1=%%, JobDesc2=%%
MaxRecords: 50
SQLStatement:
+SELECT *
+FROM %JobType%
+WHERE ListingDate&gt;=#%ListingDate%#
+AND JobTitle LIKE '%%%JobTitle%%%' AND JobDesc LIKE '%%%JobDesc%%%'
+AND JobDesc LIKE '%%%JobDesc1%%%' AND JobDesc LIKE '%%%JobDesc2%%%'
+AND&nbsp; JobCity LIKE '%JobCity%' AND&nbsp; JobState LIKE '%JobState%'
+AND&nbsp; JobAreacode LIKE '%JobAreaCode%'AND JobZip Like '%JobZip%' AND Filled=%Filled%
</code></pre>
<p>
A reference to the A_V_Cust.idc file is passed to Internet Information Server when a user clicks the "Create a custom search" hyperlink on the ViewAvail.htm page (see Figure 3).</p>
<p>
<img src="jobforum_3.gif" border=0></p>
<p class=label>
<b>Figure 3. Browser view of ViewAvail.htm page</b></p>
<p>
The "Create a custom search" hyperlink is formatted using the following HTML code:</p>
<pre><code>&lt;A HREF="/JobForum/A_V_Cust.htm"&gt;
&lt;IMG SRC="/JobForum/images/but4.gif" WIDTH=25 HEIGHT=24 ALIGN="Center" Border=0&gt;&lt;/A&gt;
Create a custom search.&lt;BR&gt;
</code></pre>
<h3><a name="jobforumhtx"></a>HTML Extension Files (.HTX Files)</h3>
<p>
The Internet Database Connector uses ASCII files saved with an .HTX extension to determine how to format data returned from an SQL statement contained in an .IDC file. .HTX files look like HTML documents with a few exceptions. Because .HTX files are templates for formatting data returned from a query, they contain keywords that control how the data is formatted. They also contain placeholders specifying where that data will be inserted in the HTML document.</p>
<p>
The following text comes from the ViewAvail.htx file. Note that placeholders for data contained in fields returned by the query use the syntax: &lt;%<i>fieldname</i>%&gt;.</p>
<pre><code>&lt;HTML&gt;
&lt;HEAD&gt;
&lt;title&gt;Microsoft Access Job Listing&lt;/title&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;BODY BGCOLOR=FFFFFF&gt;
&lt;IMG SRC="/JobForum/images/accjob.gif" WIDTH=442 HEIGHT=107 ALIGN="BOTTOM" BORDER=0&gt;&lt;BR&gt;
&lt;IMG SRC="/JobForum/images/1pixline.gif" WIDTH=595 HEIGHT=1 ALIGN="BOTTOM" BORDER=0&gt;&lt;BR&gt;
&lt;P&gt;
&lt;FONT FACE=ARIAL SIZE="2"&gt;
Select a listing to view details.
&lt;UL&gt;
&lt;%BeginDetail%&gt;
&lt;LI&gt;&lt;A HREF ="/JobForum/Queries/A_Detail.idc?AvailID=&lt;%AvailID%&gt;"&gt;Listing Number &lt;%AvailID%&gt;:&lt;/A&gt; &lt;%JobTitle%&gt;, &lt;%Company%&gt;, Submitted: &lt;%TextDate%&gt;&lt;BR&gt;
&lt;%EndDetail%&gt;
&lt;/UL&gt;
&lt;%If CurrentRecord EQ 0 %&gt;
&lt;I&gt;No Job Available listings matched your search criteria.&lt;/I&gt;
&lt;%Else%&gt;
Return to &lt;A HREF="/JobForum/ViewAvail.htm"&gt;view job available listings.&lt;/A&gt;
&lt;%EndIf%&gt;
&lt;P&gt;
&lt;IMG SRC="/JobForum/images/1pixline.gif" WIDTH=595 HEIGHT=1 ALIGN="BOTTOM" BORDER=0&gt;&lt;BR&gt;
&lt;P&gt;
&lt;A HREF="/JobForum/default.htm"&gt;Return to Microsoft Access Job Forum Home Page&lt;/A&gt;
&lt;/BODY&gt;
&lt;/FONT&gt;
&lt;/HTML&gt;
</code></pre>
<p>
Internet Information Server creates an HTML file based on the formatting instructions contained in the .HTX template. The following graphic shows the browser view of an HTML file created from the information contained in the ViewAvail.htx file.</p>
<p>
<img src="jobforum_4.gif" border=0></p>
<p class=label>
<b>Figure 4. Browser view of an HTML file created from the information contained in the ViewAvail.htx file</b></p>
<p>
The following table discusses the keywords used to format an .HTX file.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=24%><b>Keywords</b></td>
<td class=label width=76%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=24%> &nbsp; <b>&lt;%begindetail%&gt; &lt;%enddetail%&gt;</b></td>
<td width=76%>These keywords mark the beginning and end of the section in an HTX file where data returned by the SQL statement will be merged. Between these keywords you list the database field names as placeholders for the returned data. For example, if an SQL statement returned a list of names and phone numbers (<b>UserName</b> and <b>UserNumber</b>) from a Microsoft Access database, the .HTX file could specify that the data be formatted in a list as follows:<p>
&lt;%begindetail%&gt;<br>
&lt;%UserName%&gt;: &lt;%UserNumber%&gt;<br>
&lt;%enddetail%&gt;</p>
<p>
Note: If no records are returned, the <b>&lt;%begindetail%&gt;</b>, <b>&lt;%enddetail%&gt;</b> section is skipped.</p>
</td>
</tr>
<tr valign=top>
<td width=24%><b>&lt;%if%&gt; &lt;%else%&gt; &lt;%endif%&gt;</b></td>
<td width=76%>You can use these conditional logic operators in .HTX files to specify formatting alternatives depending on the data returned from the SQL statement. For example, you could use these keywords to display a message when no records are returned:<p>
&lt;%begindetail%&gt;<br>
&lt;%UserName%&gt;: &lt;%UserNumber%&gt;<br>
&lt;%enddetail%&gt;<br>
&lt;%if CurrentRecord EQ 0 %&gt;<br>
No Records Found!<br>
&lt;%endif%&gt;</p>
<p>
Conditional operands allowed with conditional keywords are:</p>
<p>
<b>EQ</b> (if <i>value1</i> equals <i>value2</i>) <br>
<b>LT</b> (if <i>value1</i> is less than <i>value2</i>)<br>
<b>GT</b> (if <i>value1</i> is greater than <i>value2</i>)<br>
<b>CONTAINS</b> (if any part of <i>value1</i> is contained within <i>value2</i>). </p>
<p>
The variables <i>value1</i> and <i>value2</i> can be positive integers, strings, database field values, or built-in variables.</p>
<p>
Note: When used in an <b>&lt;%If%&gt;</b> statement, values are not delimited with the &lt;% and %&gt; codes.</p>
</td>
</tr>
<tr valign=top>
<td width=24%><i>CurrentRecord</i></td>
<td width=76%>A built-in variable that contains the number of times a section delimited by <b>&lt;%begindetail%&gt;</b> and <b>&lt;%enddetail%&gt;</b> has been processed. The first time the section is processed, the <i>CurrentRecord</i> variable has a value of 0.</td>
</tr>
<tr valign=top>
<td width=24%><i>MaxRecords</i></td>
<td width=76%>A built-in variable that contains the value of the <b>MaxRecords</b> field from the .IDC file.</td>
</tr>
<tr valign=top>
<td width=24%>Parameters</td>
<td width=76%>The value of any parameter passed to HTTPODBC.dll in the .IDC file. Use the prefix "idc." before the name of the desired parameter. For example, you could display the value of an .IDC file parameter named <i>%sales%</i> as follows:<p>
The sales parameter was: <i>&lt;%idc.sales%&gt;</i></p>
</td>
</tr>
<tr valign=top>
<td width=24%>HTTP variables</td>
<td width=76%>A detailed description of HTTP variables is beyond the scope of this paper. For more information, refer to the Internet Database Connector Help topic in the Internet Information Server Help file.</td>
</tr>
</table><br>
<h3><a name="jobforumreferencing"></a>Referencing .IDC Files from a Web Browser</h3>
<h4>Initiating queries from HTML documents</h4>
<p>
You initiate a query from a hyperlink by referencing the IDC file containing the query from within an HTML anchor. The hyperlink requires that you append a question mark (?) to the .IDC filename. If a hyperlink contains an .IDC filename without the appended question mark, the Web browser will attempt to display the .IDC file and will generate an error. For example, the following hyperlink anchor contains a reference to a query that returns record number 233 from the Job Forum database:</p>
<pre><code>&lt;A HREF ="/JobForum/Queries/A_Detail.idc?AvailID=233"&gt;Listing Number 233:&lt;/A&gt; Contractor, Microsoft, Submitted: 1/10/96
</code></pre>
<p>
You can pass any parameters required by a query by hard-coding them in the HTML anchor. In the last example, the <i>AvailID</i> parameter is passed to the SQL statement contained in A_Detail.idc using a value of 233. If you want to pass user-supplied variables to a query, you must use an HTML form.</p>
<h4>Initiating queries from HTML forms</h4>
<p>
You invoke queries from HTML forms using the POST method, referencing the .IDC file with the HTML ACTION keyword. For example:</p>
<pre><code>&lt;FORM METHOD="POST" ACTION="/JobForum/Queries/A_V_Cust.idc"&gt;
</code></pre>
<p>
You do not append a question mark character (?) to the .IDC filename as discussed above. For example, a simple HTML form that lets the user submit a query that searches the database according to the value of the <i>LastName</i> parameter (supplied by the user) might look like the following:</p>
<pre><code>&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Search by last name&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;H1&gt;Search by Last Name&lt;/H1&gt;
&lt;FORM METHOD="POST" ACTION="Queries/Lname.idc"&gt;
&lt;BR&gt;
Enter Last Name: &lt;INPUT NAME="LastName" VALUE="" MAXLENGTH="50" &gt;
&lt;BR&gt;
&lt;P&gt;
&lt;INPUT TYPE="SUBMIT" VALUE="Submit"&gt;
&lt;/FORM&gt;
&lt;/BODY&gt;
&lt;HR&gt;
&lt;/HTML&gt;
</code></pre>
<p>
The form created using the HTML codes above is shown in Figure 5.</p>
<p>
<img src="jobforum_5.gif" border=0></p>
<p class=label>
<b>Figure 5. Browser view of form created using the HTML code directly above</b></p>
<p>
When the user clicks the Submit button, the query contained in Lname.idc is passed to Internet Information Server using the user-supplied value for the <i>LastName</i> parameter.</p>
<h2><a name="jobforuminstall"></a>Installation and Setup</h2>
<p>
Button to download the Job Forum sample application (zipped, XXK).</p>
<h3><a name="jobforumsamp"></a>The Job Forum Sample Application</h3>
<p>
You can get the Job Forum sample application by downloading JobForum.exe above. JobForum.exe is a self-extracting compressed file that contains all the .HTM, .IDC, .HTX, and .GIF files necessary to run the application with the Internet Information Server software.</p>
<p>
Create a JobForum directory in your Internet Server's Web root and expand the JobForum.exe file with the "-d" flag (in a DOS window, execute the following command: <b>\jobforum\jobforum.exe -d</b>). The Job Forum database (JobForum.mdb) and all .HTM files are stored in the JobForum directory. All .IDC and .HTX files are stored in the \Queries subdirectory. All .GIF files are stored in the \Images subdirectory.</p>
<h3><a name="jobforumiis"></a>Microsoft Internet Information Server</h3>
<p>
The following steps outline how to properly set up the Job Forum application on your server.
<ol>
<li>
Open the Internet Server Manager and select your Web server.<br><br></li>
<li>
Click the Properties menu item and then click Service Properties. Select the Directories tab in the resulting dialog box.<br><br></li>
<li>
Click Add and browse your server directories to select the JobForum subdirectory. (For example, c:\inetsys\wwwroot\jobforum.)<br><br></li>
<li>
Enter "Jobforum" as the alias for the virtual directory.<br><br></li>
<li>
Click OK.<br><br></li>
<li>
Click Add and browse your server directories to select the JobForum\Queries subdirectory. (For example, c:\inetsys\wwwroot\jobforum\queries.)<br><br></li>
<li>
Enter "/JobForum/Queries" as the alias for the virtual directory.<br><br></li>
<li>
In the Access section of the Directory Properties dialog box, deselect the Read option and select the Execute option.</li>
</ol>
<p>
Select the JobForum\Queries subdirectory and click on the Edit Properties button. In the Access section of the resulting dialog box, make sure the Execute box is checked and the Read box is unchecked. This lets Microsoft Internet Information Server execute your queries contained in .IDC files and prevents unauthorized access to the HTML source code used to create those files.</p>
<h3><a name="jobforumodbcdatasource"></a>The ODBC Data Source</h3>
<p>
You must have the ODBC Access driver to open and query Microsoft Access databases using ODBC. The Microsoft Access ODBC driver is installed on your system when you install Microsoft Access.</p>
<p>
The Microsoft ODBC Access driver is not provided with the Internet Information Server software. You can obtain the driver by:
<ul type=disc>
<li>
Installing Microsoft Access on the Internet Server.<br><br></li>
<li>
Installing the ODBC Service Pack.<br><br></li>
<li>
Calling Microsoft Product Support Services</li>
</ul>
<p>
You set up a new ODBC data source using the ODBC Administrator. To define a new data source for the ODBC Access driver, click the System DSN button, click the Add button, and select the Microsoft Access driver. Use "JobForum" as the Data Source Name, then click the Select button and choose the JobForum.mdb database file.</p>
<p>
The data source name (DSN) you create in the ODBC Administrator is the value you will use for the <b>DataSource</b> field entry in your IDC files. For more information on setting up an ODBC data source, open Help from within the ODBC Administrator dialog box.</p>
<h2><a name="jobforumusing"></a>Using the Job Forum Sample Application</h2>
<p>
Once the Job Forum application is properly set up, the first thing a user browsing the Web will see is the Job Forum application main HTML page, default.htm, located at http://yourwebservername/jobforum.</p>
<p>
The following graphic shows the Job Forum default.htm file displayed in Microsoft Internet Explorer. When a user clicks on one of the hyperlinks provided in default.htm, an HTML form is displayed to collect additional information.</p>
<p>
<img src="jobforum_6.gif" border=0></p>
<p class=label>
<b>Figure 6. Browser view of default.htm</b></p>
<p>
To illustrate how the Job Forum sample application interacts with the Web browser and with the data stored in the Microsoft Access database, this paper discusses three user scenarios: Viewing available job listings, entering a new job wanted listing, and performing remote database administration.</p>
<h3><a name="jobforumcust"></a>Job Forum Example 1: Viewing Job Available Listings—Custom Search</h3>
<p>
When the user clicks the button next to the text "View job available listings," the browser displays the HTML form ViewAvail.htm.</p>
<p>
<img src="jobforum_7.gif" border=0></p>
<p class=label>
<b>Figure 7. Browser view of ViewAvail.htm</b></p>
<p>
The user may select one of four options specifying how to search available job listings. The first option, "View all open listings," calls the A_V_Open.idc file, which contains a query that returns all open job listing records:</p>
<pre><code>Datasource: JobForum
Template: ViewAvail.htx
SQLStatement:
+SELECT *
+FROM JobAvailable
+WHERE Filled=0
</code></pre>
<p>
The remaining three hyperlinks, "View listing posted since a specific date," "Search for a specific listing number," and "Create a custom search," each call separate HTML forms to collect information from the user to further narrow the search criteria.</p>
<p>
The "Create a custom search" hyperlink displays the HTML form A_V_Cust.htm.</p>
<p>
<img src="jobforum_8.gif" border=0></p>
<p class=label>
<b>Figure 8. Browser view of A_V_Cust.htm</b></p>
<p>
This form lets the user enter criteria used to limit the number of records returned. When the user clicks the Search button, the browser uses HTTP to submit the following URL to the Internet Information Server:</p>
<pre><code>&lt;FORM METHOD="POST" ACTION="/JobForum/Queries/A_V_Cust.idc"&gt;
</code></pre>
<h4>The A_V_Cust.idc file</h4>
<p>
The A_V_Cust.idc file contains all the information necessary for the Internet Information Server to execute a custom search query against the Microsoft Access database. The companion template file, ViewAvail.htx, contains the formatting information necessary to display the data returned by the query to the user in HTML format. A_V_Cust.idc contains the following fields and values.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=25%><b>Field</b></td>
<td class=label width=75%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=25%><b>DataSource</b></td>
<td width=75%>JobForum</td>
</tr>
<tr valign=top>
<td width=25%><b>Template</b></td>
<td width=75%>ViewAvail.htx</td>
</tr>
<tr valign=top>
<td width=25%><b>DefaultParameters</b></td>
<td width=75%>ListingDate=12/1/95, JobTitle=%%, JobDesc=%%, JobCity=%%, JobState=%%, JobAreaCode=%%, JobZip=%%, JobDesc1%%, JobDesc2%%</td>
</tr>
<tr valign=top>
<td width=25%><b>MaxRecords</b></td>
<td width=75%>50</td>
</tr>
<tr valign=top>
<td width=25%><b>SQLStatement</b></td>
<td width=75%>+SELECT *<br>
+FROM %JobType%<br>
+WHERE ListingDate &gt; #%ListingDate%#<br>
+AND JobTitle LIKE '%%%JobTitle%%%'<br>
+AND JobDesc LIKE '%%%JobDesc%%%'<br>
+AND JobDesc LIKE '%%%JobDesc1%%%'<br>
+AND JobDesc LIKE '%%%JobDesc2%%%'<br>
+AND&nbsp; JobCity LIKE '%JobCity%' AND&nbsp; JobState LIKE '%JobState%'<br>
+AND&nbsp; JobAreacode LIKE '%JobAreaCode%'AND JobZip Like '%JobZip%' +AND Filled=%Filled%</td>
</tr>
</table><br>
<p>
There are two important things to notice about the SQL statement portion of this file. First, Internet Information Server interprets double percentage signs (%%) as an asterisk wildcard character. (Note: In .IDC files, all variable names are surrounded by single percentage signs, so variables with wildcard characters appended are surrounded by three percentage signs.) The following WHERE clause syntax lines would be equivalent where <i>ListingDate</i>, <i>JobTitle</i>, and <i>JobDesc</i> are variables provided by the user.</p>
<p>
<b>IDC WHERE Clause:</b></p>
<pre><code>WHERE ListingDate &gt; #<i>ListingDate</i># AND JobTitle LIKE '%%%<i>JobTitle</i>%%%' AND JobDesc LIKE '%%%<i>JobDesc</i>%%%'
</code></pre>
<p>
<b>Microsoft Access WHERE Clause:</b></p>
<pre><code>WHERE ListingDate&gt;#<i>ListingDate</i># AND JobTitle Like "*<i>JobTitle</i>*" AND JobDesc Like "*<i>JobDesc</i>*"
</code></pre>
<p>
The second important consideration is that when you pass a date criteria to the query as a variable, you must surround the date variable with number sign characters (#).</p>
<p>
The Internet Information Server uses ODBC to connect to the JobForum data source and execute the SQL statement contained in A_V_Cust.idc using values supplied by the user in the form A_V_Cust.htm. The default values listed in A_V_Cust.idc are used in place of any field in the A_V_Cust.htm form the user leaves blank.</p>
<h4>The ViewAvail.htx file</h4>
<p>
The ViewAvail.htx file is the template used to format the data returned by the query contained in A_V_Cust.idc.</p>
<p>
The detail section of the ViewAvail.htx template contains the following formatting instructions:</p>
<pre><code>&lt;%BeginDetail%&gt;
&lt;A HREF ="/JobForum/Queries/A_Detail.idc?AvailID=&lt;%AvailID%&gt;"&gt;Listing Number &lt;%AvailID%&gt;:&lt;/A&gt; &lt;%JobTitle%&gt;, &lt;%Company%&gt;, Submitted: &lt;%TextDate%&gt;&lt;BR&gt;
&lt;%EndDetail%&gt;
</code></pre>
<p>
These instructions tell the Internet Database Connector that for each record returned by the SQL statement, the HTML document should display a hypertext link that references the A_Detail.idc file along with the <b>AvailID</b>. The <b>JobTitle</b>, <b>Company</b>, and <b>TextDate</b> fields follow the hyperlink. For example, a query based on the A_V_Custom.idc file and formatted according to the ViewAvail.htx file might return the HTML document shown in Figure 9.</p>
<p>
<img src="jobforum_9.gif" border=0></p>
<p class=label>
<b>Figure 9. Browser view of HTML document returned by a query based on the A_V_Custom.IDC file and formatted according to the ViewAvail.htx file</b></p>
<p>
When the user clicks a Listing Number hyperlink, the Internet Database Connector uses the information in A_Detail.idc to execute an additional query against the Microsoft Access database to return and display a single record (specified by the Listing Number), formatted according to the information contained in the A_Detail.htx template.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Date values should be returned to Internet Information Server formatted as text. You can convert <b>DATE/TIME</b> data types to text using the <b>Cstring</b> function. In addition, you can store Date values in a text field. This is the technique used in the Job Forum application.</p>
<h3><a name="jobforumenter"></a>Job Forum Example 2: Entering a New Job Wanted Listing</h3>
<p>
When the Job Forum home page is displayed, clicking the button next to the text "Enter a new job wanted listing" displays the HTML form that is created from an HTX template based on the query contained in the JobClass.idc file. This form differs from the first example in that it displays a dynamic list of values in the Job Classification drop-down combo box. The combo box is filled with data based on the query specified in the JobClass.idc file.</p>
<h4>Using a query to fill a combo box on a form</h4>
<p>
The JobClass.idc file contains the following fields and values.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=25%><b>Field</b></td>
<td class=label width=75%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=25%><b>DataSource</b></td>
<td width=75%>JobForum</td>
</tr>
<tr valign=top>
<td width=25%><b>Template</b></td>
<td width=75%>JobClass.htx</td>
</tr>
<tr valign=top>
<td width=25%><b>SQLStatement</b></td>
<td width=75%>+SELECT JobClass<br>
+FROM `Job Classification`<br>
+ORDER BY ListOrder</td>
</tr>
</table><br>
<p>
In this SQL statement, <b>JobClass</b> is a field in the Job Classification table in the JobForum.mdb file. The information returned from this query is used to populate the drop-down combo box on the form created from the JobClass.htx template.</p>
<p>
The JobClass.htx template is designed to create a separate entry in the combo box for each record in the Job Classification table. The section of the JobClass.htx file code that populates this combo box is:</p>
<pre><code>Job Classification:
&lt;SELECT NAME="JobClass"&gt;
&lt;%BeginDetail%&gt;
&lt;OPTION&gt;&lt;%JobClass%&gt;
&lt;%EndDetail%&gt;
&lt;/SELECT&gt;
</code></pre>
<p>
The following graphic illustrates how this combo box appears in the resulting HTML form.</p>
<p>
<img src="jobforum_10.gif" border=0></p>
<p class=label>
<b>Figure 10. Browser view of HTML form that results from the code listed directly above</b></p>
<p>
Any additional classifications added to the Job Classification table in the Job Forum database will be automatically displayed whenever this form is viewed using a Web browser.</p>
<h4>Allowing changes to data submitted to the database</h4>
<p>
When the user has filled in all necessary data in the JobClass.htm form and clicked the Submit button, the information submitted is displayed for review. If the information is correct, the user clicks the "Listing is correct" graphic, and an HTML document is displayed containing the Listing Number for the newly created record. If the information needs to be changed, the user clicks the "Change/Update Listing" graphic, and an HTML form is displayed in which the user may edit the information. In both cases, the newly created record must be retrieved from the database.</p>
<p>
When the user clicks the Submit button after first entering new job wanted information, the INSERT INTO query contained in the NewWant.idc file creates a new record in the JobWanted table. The JobWanted table has an AutoNumber primary key field named <b>WantedID</b>. The <b>WantedID</b> value is assigned by Microsoft Access when a new record is created. There is no way to retrieve the value of the <b>WantedID</b> field at the time a new record is created. The Job Forum application uses hidden fields in an HTML form that contains sufficient information from the original INSERT query to find the newly created record.</p>
<p>
The NewWant.htx file is the template that formats the data returned from the INSERT query for display, so the user can confirm that the listing is correct. The user sees two hyperlink buttons along with the information submitted to the database.</p>
<p>
<img src="jobforum_11.gif" border=0></p>
<p class=label>
<b>Figure 11. Browser view of the data returned from INSERT query</b></p>
<p>
These hyperlinks are followed by a static display of all the information submitted by the user. What the user does not see are the hidden fields contained in this form that contain the information necessary to find the newly created record. The hidden fields contain data passed from the NewWant.idc file. The hidden fields in the form created from NewWant.htx are formatted in the following style:</p>
<pre><code>&lt;INPUT TYPE="HIDDEN" NAME="ContactName" VALUE="&lt;%idc.ContactName%&gt;"&gt;
&lt;INPUT TYPE="HIDDEN" NAME="Company" VALUE="&lt;%idc.Company%&gt;"&gt;
&lt;INPUT TYPE="HIDDEN" NAME="JobTypeID" VALUE="&lt;%idc.JobTypeID%&gt;"&gt;
&lt;INPUT TYPE="HIDDEN" NAME="JobClass" VALUE="&lt;%idc.JobClass%&gt;"&gt;
&lt;INPUT TYPE="HIDDEN" NAME="JobDesc" VALUE="&lt;%idc.JobDesc%&gt;"&gt;
&lt;INPUT TYPE="HIDDEN" NAME="SpecialSkills" VALUE="&lt;%idc.SpecialSkills%&gt;"&gt;
&lt;INPUT TYPE="HIDDEN" NAME="YearsExp" VALUE="&lt;%idc.YearsExp%&gt;"&gt;
&lt;INPUT TYPE="HIDDEN" NAME="Education" VALUE="&lt;%idc.Education%&gt;"&gt;
&lt;INPUT TYPE="HIDDEN" NAME="Location" VALUE="&lt;%idc.Location%&gt;"&gt;
</code></pre>
<p>
You use the &lt;%idc.<i>VariableName</i>%&gt; format to return variables that were passed in the IDC file. For example, <b>&lt;%idc.ContactName%&gt;</b> contains the information supplied in the <i>ContactName</i> variable contained in the NewWant.idc file.</p>
<p>
The hyperlinks that let the user submit or edit information are formatted as follows:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=22%><b>Option</b></td>
<td class=label width=78%><b>Link Source</b></td>
</tr>
<tr valign=top>
<td width=22%>Listing is correct</td>
<td width=78%>&lt;FORM METHOD="POST" ACTION="/JobForum/Queries/W_ListID.idc"&gt;<p>
&lt;INPUT TYPE=IMAGE SRC="/JobForum/Images/but1.gif" ALIGN="MIDDLE" WIDTH=25 HEIGHT=24&nbsp; &gt;Listing is correct&lt;P&gt;</p>
</td>
</tr>
<tr valign=top>
<td width=22%>Change/Update Listing</td>
<td width=78%>&lt;FORM METHOD="POST" ACTION="/JobForum/Queries/Chg_Want.idc"&gt;<p>
&lt;INPUT TYPE=IMAGE SRC="/JobForum/Images/but2.gif" ALIGN="MIDDLE" WIDTH=25 HEIGHT=24&nbsp; &gt;Change/Update Listing.&lt;P&gt;</p>
</td>
</tr>
</table><br>
<p>
If the user clicks the "Listing is correct" graphic, the hidden values listed above are passed to the SQL statement in W_ListID.idc and are used to find the new record created by the user. If the user clicks the "Change/Update Listing" graphic, additional hidden fields are passed to the SQL statement in Chg_Want.idc. They are used to find the new record, and also to populate the form with the data supplied by the user so that the data can be edited. Chg_Want.idc uses Chg_Want.htx to create the form that lets the user edit the information in their new listing.</p>
<p>
Because there are a number of fields that let the user choose from multiple options, the HTX template that displays the user's new listing data for editing must use conditional logic to display the data originally entered by the user. For example, when the user entered the original data, a selection may have been made in the Job Classification drop-down combo box. The Chg_Want.htx template contains the formatting instructions necessary to display the user's original selection in the same combo box on the form used to edit new listings:</p>
<pre><code>&lt;P&gt;
&lt;B&gt;Job Classification: &lt;/B&gt;&lt;SELECT NAME="JobClass"&gt;
&lt;OPTION &lt;%if JobClass EQ "Application Developer" %&gt; Selected &lt;%EndIf%&gt;&gt;Application Developer
&lt;OPTION &lt;%if JobClass EQ "Application Support" %&gt; Selected &lt;%EndIf%&gt;&gt;Application Support
&lt;OPTION &lt;%if JobClass EQ "Data Analysis" %&gt; Selected &lt;%EndIf%&gt;&gt;Data Analysis
&lt;OPTION &lt;%if JobClass EQ "Data Entry" %&gt; Selected &lt;%EndIf%&gt;&gt;Data Entry
&lt;OPTION &lt;%if JobClass EQ "Tester" %&gt; Selected &lt;%EndIf%&gt;&gt;Tester
&lt;OPTION &lt;%if JobClass EQ "Trainer" %&gt; Selected &lt;%EndIf%&gt;&gt;Trainer
&lt;OPTION &lt;%if JobClass EQ "Writer" %&gt; Selected &lt;%EndIf%&gt;&gt;Writer
&lt;OPTION &lt;%if JobClass EQ "Other" %&gt; Selected &lt;%EndIf%&gt;&gt;Other
&lt;/SELECT&gt;
&lt;P&gt;
</code></pre>
<h3><a name="jobforumperform"></a>Job Forum Example 3: Performing Remote Database Administration</h3>
<p>
In many cases the Microsoft Access database may not be readily accessible after it has been posted to the server. You can remotely perform certain database administration functions using the Internet Database Connector. For example, the developer of the Job Forum sample application wanted to be able to delete records from the database that were over 90 days old.</p>
<p>
Two files are stored in the <i>Webroot</i>\JobForum\Queries subdirectory that allow you to execute a Delete query that deletes records older than 90 days. The Del_90.idc file contains the following fields and values.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=44%><b>Field</b></td>
<td class=label width=56%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=44%><b>DataSource</b></td>
<td width=56%>JobForum</td>
</tr>
<tr valign=top>
<td width=44%><b>Template</b></td>
<td width=56%>Del_90.htx</td>
</tr>
<tr valign=top>
<td width=44%><b>SQLStatement</b></td>
<td width=56%>+Delete *<br>
+From `Available over 90`</td>
</tr>
</table><br>
<p>
The SQL statement in the Del_90.idc file contains a reference to a query named "Available over 90," which selects all records from the Job Available table with a listing date that is less than 90 days before the current date. The query's <b>ListingDate</b> field uses the parameter <i>&lt;=Date()-90</i>.</p>
<p>
You would execute this query from a Web browser by entering the URL for the Del_90.idc file into the Web browser address box. For example, to run the query contained in the Del_90.idc file using Microsoft Internet Explorer, you would type the following URL in the browser Open box and press the Enter key.</p>
<p>
<img src="jobforum_12.gif" border=0></p>
<p class=label>
<b>Figure 12. Browser view of running the query contained in the Del_90.idc file</b></p>
<p>
The HTX template file Del_90.htx contains the formatting information necessary to display the message, "The query to delete all available listings over 90 days old has run."</p>
<h2><a name="jobforumforumconc"></a>Conclusion</h2>
<p>
The methods discussed in this paper should give you a good start in making your Microsoft Access data available to World Wide Web browsers using Internet Information Server. The Job Forum sample application uses a wide variety of techniques to access and display data from a Microsoft Access database. This paper has discussed only a few of those techniques. To learn more, study the Job Forum .IDC files and companion .HTX templates to see how they execute queries, and return and format data from the Job Forum database.</p>
</BODY>
</HTML>
