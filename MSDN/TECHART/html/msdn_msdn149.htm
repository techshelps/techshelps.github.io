<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 149: Enumerating Disk Drives in Visual Basic 4.0</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn149"></a></sup>Tip 149: Enumerating Disk Drives in Visual Basic 4.0</h1>
<p>
August 31, 1995</p>
<h2>Abstract</h2>
<p>
When you write a program in Microsoft® Visual Basic®, you may need to determine which disk drives are installed in the computer system. This article shows how to enumerate all disk drives within Visual Basic version 4.0.</p>
<h2>Using the GetLogicalDriveString Function</h2>
<p>
You can use the Microsoft® Windows® application programming interface (API) <b>GetLogicalDriveString</b> function in a Microsoft Visual Basic® program to find out which disk drives are available. To use this function, you must include the following <b>Declare</b> statement in the General Declarations section of your program:</p>
<pre><code>Private Declare Function GetLogicalDriveStrings Lib "kernel32" Alias 
 &nbsp; "GetLogicalDriveStringsA" (ByVal nBufferLength As Long,
 &nbsp;&nbsp; ByVal lpBuffer As String) As Long
</code></pre>
<p>
The <b>GetLogicalDriveString</b> function requires two arguments, as follows.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=18%><i>nBufferLength</i></td>
<td width=82%>A long value containing the maximum size of the lpBuffer</td>
</tr>
<tr valign=top>
<td width=18%><i>lpBuffer</i></td>
<td width=82%>A string buffer that will hold the drive letters</td>
</tr>
</table><br>
<p>
After the program calls this function, the lpBuffer is filled with entries that describe each valid disk drive found in the computer system. The string is null-terminated. Each entry in this string contains the drive letter, followed by a colon and a backslash character. For example, if drive A is found, the string will contain the entry:</p>
<pre><code>&nbsp;&nbsp;&nbsp;&nbsp;NULL a:\ NULL NULL
</code></pre>
<p>
Notice that each entry is terminated by a null byte, and the last entry in the string is terminated by two consecutive null bytes.</p>
<p>
The example program below displays a list of all available disk drives in the <b>Text Box</b> control. The program uses the <b>InStr</b> and <b>Mid</b> functions to extract each individual entry from the lpBuffer string.</p>
<h2>Example Program</h2>
<p>
This program shows how to create a list of all disk drives installed in the computer system.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Declare</b> statement to the General Declarations section of Form1 (note that this <b>Declare</b> statement must be typed as a single line of code):</li>
</ol>
<pre><code>Private Declare Function GetLogicalDriveStrings Lib "kernel32" Alias 
 &nbsp; "GetLogicalDriveStringsA" (ByVal nBufferLength As Long, 
 &nbsp; ByVal lpBuffer As String) As Long
</code></pre>
<ol>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default. Set its <b>MultiLine</b> property to True.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:</li>
</ol>
<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim X As Long
 &nbsp;&nbsp; Dim L As Integer
 &nbsp;&nbsp; Dim BufLen As Long
 &nbsp;&nbsp; Dim BufString As String * 256
 &nbsp;&nbsp; BufLen = 256
 &nbsp;&nbsp; 
 &nbsp;&nbsp; Text1.Text = ""
 &nbsp;&nbsp; X = GetLogicalDriveStrings(BufLen, BufString)
 &nbsp;&nbsp; On Error GoTo Quit_Now
 &nbsp;&nbsp; 
 &nbsp;&nbsp; Do
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X = Y + 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Z = Z + 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Y = InStr(X, BufString, "\")
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p$ = Mid$(BufString, Y - 2, 3)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Text1.Text = Text1.Text &amp; p$ &amp; Chr$(13) &amp; Chr$(10)
 &nbsp;&nbsp; Loop Until Y = 0
 &nbsp;&nbsp; 
Quit_Now:
 &nbsp;&nbsp; 
End Sub
</code></pre>
<p>
Run the example program by pressing F5. Click the OK command button. The Text Box will contain a list of all available disk drives in the computer system.</p>
<h2>Additional Reference</h2>
<p>
"GetLogicalDriveStrings." (MSDN Library, SDK Documentation, Platform SDK)</p>
</BODY>
</HTML>
