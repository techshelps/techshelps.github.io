<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CAdmin</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1><a name="hd_hdclient_cadmin"></a>CAdmin</h1>
<h2>Enumerated Constants</h2>
<h3>hdLOGGED_IN_TYPE</h3>
<p class=indent>
<b>Description</b></p>
<p class=indent>
This enumerated type is used in the <b>CAdmin.Init</b> method to indicate whether a user or a technician is logging on.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.hdLOGGED_IN_TYPE.aValue</code></p>
<p class=indent>
<b>Value[s]<br>
</b>icUSER_LOGGED_IN = 1<br>
icTECH_LOGGED_IN = 2</p>
<h3>hdSTD_RESP</h3>
<p class=indent>
<b>Description<br>
</b>This enumerated type is used when filling the standard response collection. The collection could be either standard text or standard voice responses.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.hdSTD_RESP.aValue</code></p>
<p class=indent>
<b>Value[s]<br>
</b>icSTD_TEXT = 1<br>
icSTD_VOICE = 2</p>
<h2>Functions</h2>
<h3>ClaimRequest</h3>
<p class=indent>
<b>Description<br>
</b>Used by the technician to claim a specified request.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.ClaimRequest (oReq As CRequest)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReq as CRequest</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>Changes the request status from Unclaimed to Claimed.</p>
<h3>ConfirmResolution</h3>
<p class=indent>
<b>Description<br>
</b>Confirms that a request has be resolved.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.ConfirmResolution (oReq As CRequest)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReq as CRequest</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>Using this method does not resolve the request, but changes the request status from Pending to Resolved.</p>
<h3>DenyResolution</h3>
<p class=indent>
<b>Description<br>
</b>Denies a request's resolved status.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.DenyResolution (oReq As CRequest)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReq as CRequest</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>Changes the request status from Resolved back to Pending.</p>
<h3>Format_ItemPKId</h3>
<p class=indent>
<b>Description<br>
</b>Generates a predetermined string code which can be used to search the HelpDesk collections for a record's PKId.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.Format_ItemPKId (ByVal iPKid As Integer)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal iPKid as Integer</p>
<p class=indent>
<b>Return type<br>
</b>String</p>
<p class=indent>
<b>Remarks<br>
</b>Visual Basic collections cannot be searched using a numeric key. This function generates a string using a predetermined format, thus allowing a collection to be searched for a "stringized" numeric value.</p>
<h3>GetLocations</h3>
<p class=indent>
<b>Description<br>
</b>Returns a collection of current locations.</p>
<p class=indent>
<b>Syntax<br>
</b><code>set obj = CAdmin.GetLocations ()</code></p>
<p class=indent>
<b>Return type<br>
</b>Collection</p>
<h3>GetPriorities</h3>
<p class=indent>
<b>Description<br>
</b>Returns a collection of current priorities.</p>
<p class=indent>
<b>Syntax<br>
</b><code>set obj = CAdmin.GetPriorities ()</code></p>
<p class=indent>
<b>Return type<br>
</b>Collection</p>
<h3>GetReqDetTypes</h3>
<p class=indent>
<b>Description<br>
</b>Returns a collection of current request detail types.</p>
<p class=indent>
<b>Syntax<br>
</b><code>set obj = CAdmin.GetReqDetTypes ()</code></p>
<p class=indent>
<b>Return type<br>
</b>Collection</p>
<h3>GetReqStatus</h3>
<p class=indent>
<b>Description<br>
</b>Returns a collection of current request statuses.</p>
<p class=indent>
<b>Syntax<br>
</b><code>set obj = CAdmin.GetReqStatus ()</code></p>
<p class=indent>
<b>Return type<br>
</b>Collection</p>
<h3>GetSkills</h3>
<p class=indent>
<b>Description<br>
</b>Returns a collection of current skills.</p>
<p class=indent>
<b>Syntax<br>
</b><code>set obj = CAdmin.GetSkills ()</code></p>
<p class=indent>
<b>Return type<br>
</b>Collection</p>
<p class=indent>
<b>Remarks<br>
GetSkills</b> is also used by the HelpDesk Visual Basic User application (however, in the User application "Skills" are displayed as "Categories").</p>
<h3>GetStdResponses</h3>
<p class=indent>
<b>Description<br>
</b>Returns a collection of standard responses.</p>
<p class=indent>
<b>Syntax<br>
</b><code>set obj = CAdmin.GetStdResponses (ByVal iStdRespType As hdSTD_RESP)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal iStdRespType as hdSTD_RESP</p>
<p class=indent>
<b>Return type<br>
</b>Collection</p>
<p class=indent>
<b>Remarks<br>
</b>By changing the input parameter, the user can request either standard text responses or standard voice responses.</p>
<h3>GetTechByAlias</h3>
<p class=indent>
<b>Description<br>
</b>Returns a <a href="hd_hdclient_ctech.htm">CTech</a> object based on the technician's alias.</p>
<p class=indent>
<b>Syntax<br>
</b><code>set obj = CAdmin.GetTechByAlias (ByVal sAlias As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal sAlias as String</p>
<p class=indent>
<b>Return type<br>
</b>CTech</p>
<p class=indent>
<b>Remarks<br>
</b>The returned object will be filled in with the specified technician's data.</p>
<h3>GetTechnicians</h3>
<p class=indent>
<b>Description<br>
</b>Returns a collection of current technicians.</p>
<p class=indent>
<b>Syntax<br>
</b><code>set obj&nbsp; = CAdmin.GetTechnicians ()</code></p>
<p class=indent>
<b>Return type<br>
</b>Collection</p>
<h3>Init</h3>
<p class=indent>
<b>Description<br>
</b>Initializes the HelpDesk sample and validates the user.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.Init (ByVal sAlias As String, ByVal iLoggedInType As hdLOGGED_IN_TYPE)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal sAlias as String<br>
ByVal iLoggedInType as hdLOGGED_IN_TYPE</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>The alias passed in is validated against the tbTech table. The LoggedInType parameter determines whether the user is a technician or a user.</p>
<h3>InsertRequest</h3>
<p class=indent>
<b>Description<br>
</b>Inserts a Request object into the HelpDesk system and returns the associated tracking number.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.InsertRequest (oReq As HDClient.CRequest, lTrackNo As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReq as HDClient.CRequest<br>
lTrackNo as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>The tracking number is returned back from this method. Although a request could be tracked by its PKId, the tracking number is guaranteed to be unique, even if the tbReq table is rebuilt and the PKIds changed.</p>
<h3>ReAssignReq</h3>
<p class=indent>
<b>Description<br>
</b>Reassigns a request from one technician to another.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.ReAssignReq (oReq As CRequest, oTech As CTech)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReq as CRequest<br>
oTech as CTech</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>This method reassigns the specified request to the specified technician.</p>
<h3>SendStdTextResponse</h3>
<p class=indent>
<b>Description<br>
</b>Sends a standard text response from a technician to the requestor of a specified request.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.SendStdTextResponse (oReqDet As HDClient.CReqDetail)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReqDet as HDClient.CReqDetail</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>The identity of the requestor is determined from the request detail record.</p>
<h3>SendTextRequest</h3>
<p class=indent>
<b>Description<br>
</b>Sends a request detail from the user to the technician.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.SendTextRequest (oReqDet As HDClient.CReqDetail)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReqDet as HDClient.CReqDetail</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>Prior to calling <b>SendTextRequest</b>, the user must fill in a request detail object.</p>
<h3>SendTextResponse</h3>
<p class=indent>
<b>Description<br>
</b>Sends a request detail from the technician to the user.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.SendTextResponse (oReqDet As HDClient.CReqDetail)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReqDet as HDClient.CReqDetail</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>Prior to calling <b>SendTextResponse</b>, the user must fill in a request detail object.</p>
<h3>SubmitRequest</h3>
<p class=indent>
<b>Description<br>
</b>Submits the initial request for help into the HelpDesk system.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.SubmitRequest (oReq As CRequest)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReq as CRequest</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>Prior to submitting the request, the user must fill in a CRequest object.</p>
<h3>UnclaimRequest</h3>
<p class=indent>
<b>Description<br>
</b>Unclaims a previously Claimed help request.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.UnclaimRequest (oReq As CRequest)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReq as CRequest</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>WorkRequest</h3>
<p class=indent>
<b>Description<br>
</b>Changes the status of a request from Claimed to In progress.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.WorkRequest (oReq As CRequest)</code></p>
<p class=indent>
<b>Parameters<br>
</b>oReq as CRequest</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h2>Subroutines</h2>
<h3>Term</h3>
<p class=indent>
<b>Description<br>
</b>Terminates and cleans up all internal data structures.</p>
<p class=indent>
<b>Syntax<br>
</b><code>CAdmin.Term ()</code></p>
<p class=indent>
<b>Remarks<br>
</b>Use this method prior to releasing any <a href="#hd_hdclient_cadmin">CAdmin</a> objects.</p>
<h3>Refresh</h3>
<p class=indent>
<b>Description<br>
</b>Refreshes the internal collections with new data.</p>
<p class=indent>
<b>Syntax<br>
</b><code>CAdmin.Refresh ()</code></p>
</BODY>
</HTML>
