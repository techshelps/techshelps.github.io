<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HTML Authoring Features for Microsoft Internet Explorer 3.0</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_htmlauth"></a></sup>HTML Authoring Features for Microsoft Internet Explorer 3.0</h1>
<p>
Microsoft Corporation</p>
<p>
May 28, 1996</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The specifications and features described in this article were current at the time of writing. Hypertext Markup Language (HTML) specifications are continually changing. For information on the latest in HTML features and specifications, see the Microsoft® <i>Site Builders Workshop</i> at <a href="http://www.microsoft.com/sitebuilder/">http://www.microsoft.com/sitebuilder/.</a></p>
<h4>Contents</h4>
<p>
<a href="#newfeatsummary">Summary of New Authoring Features</a></p>
<p>
<a href="#framestarget">Frames and Targeted Windows</a></p>
<p>
<a href="#floatframe">Floating Frames</a></p>
<p>
<a href="#stylesheetandlayout">HTML Style Sheets and Advanced Layout Control</a></p>
<p>
<a href="#enhtables">Enhanced Tables</a></p>
<p>
<a href="#imageform">New Image Formats</a></p>
<h2><a name="newfeatsummary"></a>Summary of New Authoring Features</h2>
<p>
Microsoft Internet Explorer version 3.0 provides a number of powerful new authoring features, including:
<ul type=disc>
<li>
Frame support (including targeted windows and borderless frames)<br><br></li>
<li>
Floating frames<br><br></li>
<li>
HTML style sheets<br><br></li>
<li>
Ability to specify text point sizes, margins, indentation, and leading (intraline spacing)<br><br></li>
<li>
Background images in table cells<br><br></li>
<li>
Enhanced HTML table features<br><br></li>
<li>
Support for .BMP and animated .GIF images</li>
</ul>
<h2><a name="framestarget"></a>Frames and Targeted Windows</h2>
<p>
Frames allow you to divide a Web page into separate regions that can display content independently. Internet Explorer 3.0 allows frames to be borderless for a more seamless look.</p>
<p>
A side benefit of frames is that clicking a link can now launch a new window. Pages with frames can easily be authored with alternate content for browsers that do not support frames.</p>
<h3>Creating a Simple Frameset Page: Step by Step</h3>
<p>
Follow these steps to use frames in your Web pages.</p>
<p>
This Step by Step consists of two parts. In the first part we explain how to create a "simple" frameset page—one that is divided up into either rows or columns, but not both. A good example of this would be a home page that has a <i>toolbar</i> that takes you to different portions of a Web site.</p>
<p>
Once you've learned how to create simple frameset pages, it's actually quite straightforward to create a "complex" frameset page—one that can have both columns and rows. The second part explains how to create a complex frameset page.</p>
<h4>Step 1: Decide how many rows or columns you want.</h4>
<p>
Remember, frames are a way of dividing Internet Explorer's screen into different independent portions. In the "simple" case, you will be dividing the screen into columns or rows. For this example, we'll create a page with two rows.</p>
<h4>Step 2: Create the pages that make up the rows or columns.</h4>
<p>
The most important thing to remember about frames is that a frameset consists of more than one HTML page. If you have a page with two frames in it, three HTML files are needed: one for each of the frames, and one that describes how the frameset will be laid out.</p>
<p>
In this case, we'll say that you've created two HTML pages, row1.htm and row2.htm. The former will be shown in the top frame, and the latter will be shown in the bottom frame.</p>
<h4>Step 3: Create the frameset page.</h4>
<p>
The next step is to create the <i>frameset page</i> that describes how the page is laid out. Here's the HTML for our frameset page:</p>
<pre><code>&lt;HTML&gt;

&lt;FRAMESET ROWS="20%, *"&gt;
 &nbsp; &lt;FRAME SRC="row1.htm"&gt;
 &nbsp; &lt;FRAME SRC="row2.htm"&gt;
&lt;/FRAMESET&gt;

&lt;/HTML&gt;
</code></pre>
<p>
When viewed in Microsoft Internet Explorer 3.0, this page will be divided into two rows, showing the two files that you created: row1.htm and row2.htm.</p>
<p>
To create a page with two columns instead of two rows, simply use COLS instead of ROWS in the FRAMESET tag:</p>
<pre><code>&lt;FRAMESET COLS="20%, *"&gt;
</code></pre>
<h4>Step 4: Set the relative sizes of the rows or columns.</h4>
<p>
Observant readers will notice the following line in the above example:</p>
<pre><code>&lt;FRAMESET ROWS="20%, *"&gt;
</code></pre>
<p>
This line determines the relative sizes of the two rows. In this case, the top row is 20% of the height of the window, and the bottom row takes up the remaining 80%. There are four ways to tell Internet Explorer how tall to make a row:
<ul type=disc>
<li>
Percentage of screen height, as above.<br><br></li>
<li>
Number of pixels. To make the first row 200 pixels tall, use <code>ROWS="200, *"</code>.<br><br></li>
<li>
Use "*", meaning "whatever is left over." The above example also uses this method.<br><br></li>
<li>
Use <i>n</i><code>*</code>, where <i>n</i> is a number. This means "<i>n</i> parts of what's left over." Thus <code>ROWS="*, 2*"</code> makes two rows where the first one is 1/3 the height of the screen and the second is 2/3 the height of the screen. And <code>ROWS="100, 2*, *"</code> creates three rows: one 100 pixels tall, one that takes up 2/3 of the remaining space, and one that takes up the last 1/3.</li>
</ul>
<h4>Step 5: Decide where the links should go.</h4>
<p>
Because each frame is a separate browser, clicking a link in one of the frames will go to a new page <i>in that frame</i>. In some cases that may not be what you want.</p>
<p>
It's possible to create a link that, when clicked, makes a new page show up in another frame. To do this, you need to name the frames:</p>
<pre><code>&lt;HTML&gt;

&lt;FRAMESET ROWS="20%, *"&gt;
 &nbsp; &lt;FRAME <b>NAME="firstrow"</b> SRC="row1.htm"&gt;
 &nbsp; &lt;FRAME <b>NAME="secondrow"</b> SRC="row2.htm"&gt;
&lt;/FRAMESET&gt;

&lt;/HTML&gt;
</code></pre>
<p>
Let's say you want to be able to click a link in the top frame and have a new page come up in the bottom frame. To do this, place the following in row1.htm:</p>
<pre><code>&lt;A HREF="newpage.htm" <b>TARGET="secondrow"</b>&gt;Click here to see "newpage.htm" in the bottom frame&lt;/A&gt;
</code></pre>
<p>
The TARGET attribute causes the link to be opened in the bottom frame.</p>
<p>
If you want to be able to click a link and have a new page fill the window (replacing the frameset), use <code>TARGET="_top"</code> as follows:</p>
<pre><code>&lt;A HREF="newpage.htm" <b>TARGET="_top"</b>&gt;Click here to see "newpage.htm" take up the whole window&lt;/A&gt;
And if you want the page to come up in an entirely new Internet Explorer window, use <b>TARGET="_BLANK"</b> as follows:
&lt;A HREF="newpage.htm" <b>TARGET="_BLANK"</b>&gt;Click here to see "newpage.htm" come up in a new window&lt;/A&gt;
</code></pre>
<p class=indent>
<B><b>Note</b></B> &nbsp;&nbsp;&nbsp; This works even on pages that do not have frames. To avoid cluttering the user's desktop with windows, this feature should be used sparingly.</p>
<h4>Step 6: Do you want users to be able to resize and scroll?</h4>
<p>
If you do not want users to be able to resize a frame, add a NORESIZE attribute to the FRAME tag:</p>
<pre><code>&lt;FRAME SRC="row1.htm" NORESIZE&gt;
</code></pre>
<p>
If you do not want a frame to have scrollbars, add a SCROLLING attribute to the FRAME tag and set it to NO to disable the scrollbar:</p>
<pre><code>&lt;FRAME SRC="row1.htm" SCROLLING=NO&gt;
</code></pre>
<p>
Both of these settings are useful when creating toolbars.</p>
<h4>Step 7: Do you want 3-D borders around your frames?</h4>
<p>
By default, frameset pages have 3-D borders between the frames. For a completely seamless look, change the FRAMESET tag to the following:</p>
<pre><code>&lt;FRAMESET ROWS="20%, *" FRAMEBORDER=0 FRAMESPACING=0&gt;
</code></pre>
<p>
This instructs Internet Explorer to turn off all 3-D borders between frames and to place the frames right up against each other. This feature, which is unique to Internet Explorer, is called <i>borderless frames</i>.</p>
<p>
To learn how to place a colored or textured border between your borderless frames, see Advanced Topics below.</p>
<p>
When using borderless frames, it's often helpful to be able to position a frame's contents directly at the top left corner of the frame, instead of a few pixels down and to the right, as is the default.</p>
<p>
To do this, change the individual frame page (in this case, row1.htm or row2.htm) so its BODY tag includes the following:</p>
<pre><code>&lt;BODY TOPMARGIN=0 LEFTMARGIN=0&gt;
</code></pre>
<p>
That's all it takes to create a simple frameset page of your own. The next section explains how to make complex framesets, which can be divided into both columns and rows.</p>
<h3>Creating a Complex Frameset Page</h3>
<p>
Now that you know how to create simple frameset layouts, it's very straightforward to make complex ones. A complex frameset is just a simple frameset, some or all of whose frames are also framesets.</p>
<p>
Let's say we want to create a page that has an index on the left and three frames of content on the right:</p>
<p>
<img src="htmlauth_1.gif" border=0></p>
<p>
To do this, we create a frameset with two columns. The first column will contain frame 1, and the second will contain frames 2 through 4. Here's the HTML:</p>
<pre><code>&lt;HTML&gt;
&lt;FRAMESET COLS="20%, *"&gt;
</code></pre>
<p>
The first column is just a single frame:</p>
<pre><code>&nbsp;&nbsp;&nbsp;&lt;FRAME SRC="frame1.htm"&gt;
</code></pre>
<p>
But for the second column, instead of using another FRAME tag, we insert a FRAMESET tag with three rows.</p>
<pre><code>&nbsp;&nbsp;&nbsp;&lt;FRAMESET ROWS="20%, *, 20%"&gt;
 &nbsp;&nbsp;&nbsp;&nbsp; &lt;FRAME SRC="frame2.htm"&gt;
 &nbsp;&nbsp;&nbsp;&nbsp; &lt;FRAME SRC="frame3.htm"&gt;
 &nbsp;&nbsp;&nbsp;&nbsp; &lt;FRAME SRC="frame4.htm"&gt;
 &nbsp; &lt;/FRAMESET&gt;
</code></pre>
<p>
Then we close the FRAMESET and HTML tags, and we're done.</p>
<pre><code>&lt;/FRAMESET&gt;
&lt;/HTML&gt;
</code></pre>
<p>
Thus, by "nesting" one frameset inside another, complex frame layouts can easily be built from simple ones.</p>
<p>
We could have created the same layout by using two FRAME tags and pointing the second FRAME tag to a separate file that was itself a frameset. The above syntax, in which we can insert a FRAMESET block instead of a FRAME tag, is actually a shorthand that reduces the number of files needed by one.</p>
<p>
There's one case in which you don't want to use the shorthand: when you want to click a link in frame 1 and have a page come up that replaces frames 2, 3, and 4. In that case, you would do it the longer way, giving the second frame a name and using the following to replace the contents of that frame:</p>
<pre><code>&lt;A HREF="address" TARGET="name of right-hand frame"&gt;
</code></pre>
<h3>Advanced Techniques</h3>
<h4>Making frameset pages visible in browsers that don't support frames</h4>
<p>
Since frameset pages usually contain no content, just a set of FRAMESET and FRAME tags, they tend not to show up at all in browsers that don't support frames. Fortunately, the frames standard provides an easy way to provide content for nonframe browsers.</p>
<pre><code>&lt;HTML&gt;

&lt;FRAMESET ROWS="20%, *"&gt;
 &nbsp; &lt;FRAME SRC="row1.htm"&gt;
 &nbsp; &lt;FRAME SRC="row2.htm"&gt;
&lt;/FRAMESET&gt;

&lt;NOFRAMES&gt;
Welcome to my home page! Click below to see my vacation photos...

<i>etc.</i>

&lt;/NOFRAMES&gt;

&lt;/HTML&gt;
</code></pre>
<p>
Internet Explorer and other browsers that support frames will ignore everything between <code>&lt;NOFRAMES&gt;</code> and <code>&lt;/NOFRAMES&gt;</code>. Browsers that do not support frames will ignore the frames and display everything between the NOFRAMES tags.</p>
<h4>Placing a colored or textured border between frames</h4>
<p>
With Internet Explorer 3.0 you can not only turn off the 3-D borders between frames, you can also specify that the borderless frames should be a particular distance apart. Because this allows the background of the frameset page to show through, if your frameset page has a background color or image, the effect is that of a colored or textured border between the frames.</p>
<pre><code>&lt;HTML&gt;
&lt;BODY <b>BACKGROUND="woodgrain.gif"</b>&gt;

&lt;FRAMESET ROWS="20%, *" <b>FRAMEBORDER=0 FRAMESPACING=20</b>&gt;
 &nbsp; &lt;FRAME SRC="row1.htm"&gt;
 &nbsp; &lt;FRAME SRC="row2.htm"&gt;
&lt;/FRAMESET&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</code></pre>
<p>
The code above places a 20-pixel border between the two rows of the frameset. Because the author has specified a background graphic (woodgrain.gif), there will now appear to be a 20-pixel-wide textured border between the frames. (To use a background color instead of a background image, use <code>BODY BGCOLOR=</code><i>color name or value</i>.)</p>
<h2><a name="floatframe"></a>Floating Frames</h2>
<p>
<i>Floating frames</i> are a revolutionary new feature in Internet Explorer 3.0. Wherever you can put an image in a conventional browser, you can put an arbitrary box of HTML (with or without a scrollbar and a 3-D border) in Internet Explorer 3.0.</p>
<h3>Floating Frames: Step by Step</h3>
<p>
Follow these steps to place a floating frame in your Web page.</p>
<h4>Step 1: Create the content that will go into the frame.</h4>
<p>
Think of a floating frame as a window that floats in your page. Through the window, you can see another Web page. Therefore, your first step is to create the page that will be seen through the window.</p>
<p>
Let's use a page that already exists: Microsoft's home page. The address of that page is <a href="http://www.microsoft.com/">http://www.microsoft.com/.</a></p>
<p>
You may want the contents of your floating frame to be aligned with the top and left sides of the floating frame. To do this, place TOPMARGIN and LEFTMARGIN attributes in the BODY tag of the page that will be displayed in the floating frame:</p>
<pre><code>&lt;BODY TOPMARGIN=0 LEFTMARGIN=0&gt;
</code></pre>
<p>
To offset the frame's contents by 10 pixels down and to the right, use:</p>
<pre><code>&lt;BODY TOPMARGIN=10 LEFTMARGIN=10&gt;
</code></pre>
<h4>Step 2: Create the frame itself.</h4>
<p>
To create the floating frame, insert the following in the body of your Web page (after the BODY tag and before the /BODY tag):</p>
<pre><code>&lt;IFRAME WIDTH=200 HEIGHT=200 SRC="http://www.microsoft.com/"&gt;
 &nbsp; &lt;FRAME WIDTH=200 HEIGHT=200 SRC="http://www.microsoft.com/"&gt;
&lt;/IFRAME&gt;
</code></pre>
<p class=indent>
<B><b>Note</b></B> &nbsp;&nbsp;&nbsp; Internet Explorer 3.0 does not require the additional FRAME tag and settings within the IFRAME and /IFRAME tags. To display a floating frame with nonIFRAME-compatible browsers, use a FRAME tag within IFRAME duplicating settings for the floating frame, as shown in the examples in this article.</p>
<p>
The IFRAME tag creates a 200-pixel by 200-pixel window on your page through which you can see Microsoft's home page. (The floating frame is actually a separate browser, so you can click links to other pages right in the frame.)</p>
<p>
To make the frame a different size, change the WIDTH and HEIGHT. You can also use percentage values. The following will insert a floating frame that is half the height and width of Internet Explorer's content area:</p>
<pre><code>&lt;IFRAME WIDTH=50% HEIGHT=50% SRC="http://www.microsoft.com"&gt;
 &nbsp; &lt;FRAME WIDTH=50% HEIGHT=50% SRC="http://www.microsoft.com"&gt;
&lt;/IFRAME&gt;
</code></pre>
<h4>Step 3: Do you want a 3-D border?</h4>
<p>
By default, floating frames have a 3-D recessed appearance. If you want a more seamless look, add a FRAMEBORDER attribute to your FRAMESET tag:</p>
<pre><code>&lt;IFRAME WIDTH=200 HEIGHT=200 <b>FRAMEBORDER=0</b> SRC="http://www.microsoft.com/"&gt;
 &nbsp; &lt;FRAME WIDTH=200 HEIGHT=200 <b>FRAMEBORDER=0</b> SRC="http://www.microsoft.com/"&gt;
&lt;/IFRAME&gt;
</code></pre>
<h4>Step 4: Do you want a scrollbar?</h4>
<p>
If you do not want the floating frame to have a scrollbar, add a SCROLLING attribute, as follows:</p>
<pre><code>&lt;IFRAME WIDTH=200 HEIGHT=200 <b>SCROLLING=NO</b> SRC="http://www.microsoft.com/"&gt;
 &nbsp; &lt;FRAME WIDTH=200 HEIGHT=200 <b>SCROLLING=NO</b> SRC="http://www.microsoft.com/"&gt;
&lt;/IFRAME&gt;
</code></pre>
<p>
This is especially useful in combination with FRAMEBORDER=0. Note that the contents of the frame will not be scrollable, not even by using the arrow keys.</p>
<h4>Step 5: Should the frame have margins?</h4>
<p>
You can specify margins for a floating frame exactly as you can for images. The following example places a 10-pixel border on all four sides of the floating frame.</p>
<pre><code>&lt;IFRAME WIDTH=200 HEIGHT=200 <b>HSPACE=10 VSPACE=10</b> SRC="http://www.microsoft.com/"&gt;
 &nbsp; &lt;FRAME WIDTH=200 HEIGHT=200 <b>HSPACE=10 VSPACE=10</b> SRC="http://www.microsoft.com/"&gt;
&lt;/IFRAME&gt;
</code></pre>
<p>
Naturally, you can use HSPACE without VSPACE, and vice versa.</p>
<h4>Step 6: Align the floating frame to left or right.</h4>
<p>
You can also align a floating frame to the left or right margin, exactly as you can align an image. The following example creates a frame aligned with the right margin:</p>
<pre><code>&lt;IFRAME WIDTH=200 HEIGHT=200 <b>ALIGN=RIGHT</b> SRC="http://www.microsoft.com"&gt;
 &nbsp; &lt;FRAME WIDTH=200 HEIGHT=200 <b>ALIGN=RIGHT</b> SRC="http://www.microsoft.com"&gt;
&lt;/IFRAME&gt;
</code></pre>
<p>
As with right-aligned images, subsequent text and other contents will be drawn to the right of the frame. To skip past the bottom of the frame, insert the following into your page:</p>
<pre><code>&lt;BR CLEAR=RIGHT&gt; <i>or</i> &lt;BR CLEAR=ALL&gt;
</code></pre>
<p>
That's all it takes to place a floating frame in a Web page. See the following for tips on getting the most out of floating frames!</p>
<h3>Advanced Techniques</h3>
<h4>Addressing floating frames by name</h4>
<p>
You can name your floating frames so that when a user clicks a link in your page, new content will show up in a floating frame on that page. Here's an example:</p>
<pre><code>&lt;IFRAME WIDTH=100 HEIGHT=100 SRC="page1.htm" <b>NAME="MyFrame"</b>&gt;
 &nbsp; &lt;FRAME WIDTH=100 HEIGHT=100 SRC="page1.htm" <b>NAME="MyFrame"</b>&gt;
&lt;/IFRAME&gt;
...
&lt;A HREF="page2.htm" <b>TARGET="MyFrame"</b>&gt; Click here to see Page 2 in the floating frame. &lt;/A&gt;
</code></pre>
<p>
When the user clicks the link, the page2.htm file will show up in the floating frame.</p>
<h4>Big Brother is watching your fish</h4>
<p>
Using floating frames in combination with <i>client pull</i> gives you a window on your Web page that updates regularly without refreshing the entire page.</p>
<p>
For example, let's say you have a video camera pointed at your fishtank. It sends new images of your fish to your Web server once every 30 seconds, where they can be viewed at the hypothetical page http://www.mycompany.com/latestfish.gif.</p>
<p>
To put a regularly updating view of your fish on your Web page, first create another page to contain the fish image. We'll say the address of this page is http://www.mycompany.com/fishpage.htm.</p>
<pre><code>&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META HTTP-EQUIV="REFRESH" CONTENT="30; URL=http://www.mycompany.com/fishpage.htm"&gt;
&lt;TITLE&gt;My Fish&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY TOPMARGIN=0 LEFTMARGIN=0&gt;
&lt;IMG WIDTH=100 HEIGHT=100 SRC="http://www.mycompany.com/latestfish.gif"&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</code></pre>
<p>
(Those familiar with the client pull technique will recognize the third line as the one that makes the page refresh every 30 seconds.) Now, simply place a floating frame, pointing to the new page, into your Web page:</p>
<pre><code>&lt;IFRAME WIDTH=110 HEIGHT=110 FRAMEBORDER=0 SRC="http://www.mycompany.com/fishpage.htm"&gt;
 &nbsp; &lt;FRAME WIDTH=110 HEIGHT=110 FRAMEBORDER=0 SRC="http://www.mycompany.com/fishpage.htm"&gt;
&lt;/IFRAME&gt;
</code></pre>
<p>
From now on, visitors to your Web site will know more about your fish than you do.</p>
<p>
Because a floating frame can contain any HTML document, this technique is useful not just for fishtanks and weather maps, but also for such things as stock quotes, online chats, and so on.</p>
<h2><a name="stylesheetandlayout"></a>HTML Style Sheets and Advanced Layout</h2>
<p>
Style sheets are an extraordinarily powerful way to add layout and formatting information to Web pages. Through style sheets, many features long taken for granted by designers—specifying fonts in point sizes, margins, and intraline spacing—have finally come to the Web. Style sheet pages are downward compatible: A browser that cannot display the style sheet formatting will still show all of the content.</p>
<h3>Style Sheets: Step by Step</h3>
<p>
Follow these steps to use HTML style sheets in your Web pages.</p>
<h4>Step 1: Do you need to design a style sheet, or do you just want to add style here and there?</h4>
<p>
Style sheets are a powerful way of adding formatting to HTML pages. Using style sheets, you will be able to specify font sizes in points, set margins, change link colors, and do many other formatting tasks that were not possible before.</p>
<p>
Style information can be added to a document in several ways. Which ones are right for you? That depends on the kind of site you're putting together.
<ul type=disc>
<li>
If you want to <i>add style information here and there in a document</i>, you can get away with placing style information in-line. This is the quick-and-dirty method, and it defeats the purpose of style sheets, which is to separate style from structure. But it may be best for your purposes.<br><br></li>
<li>
If you want to <i>standardize the look of a few Web pages</i>, your best bet is to place a style sheet at the top of each page. This allows you to ensure that various elements—headers, paragraphs, and so forth—look the same throughout one page or a few pages.<br><br></li>
<li>
If you want to <i>standardize the look of an entire site</i>, you will want to link to an external style sheet. This is the preferred method. By changing one file you can modify the appearance of every page on an entire Web site. (This method does cause a very slight decrease in performance, roughly equivalent to placing a small image on each page, because often an extra connection must be opened to download the style sheet.)</li>
</ul>
<p>
Once you've decided which category you fit into, you'll know which of the next three Steps to read.</p>
<p class=indent>
<B><b>Note</b></B> &nbsp;&nbsp;&nbsp; Normally you can use these three methods all at the same time. If similar style information is specified both in the page and outside the page, the in-page style is used.</p>
<h4>Step 2: Placing style information inline.</h4>
<p>
There are two ways to place style information inline. The first is to assign a style to a particular tag right when you use it. For example, let's say we want to have a paragraph where the font size is 20 points. Here's how we do it:</p>
<pre><code>&lt;P STYLE="font-size: 20pt"&gt; This paragraph is in 20-point text. As Hemingway once said, it is a great thing to be able to specify point sizes, especially large ones.&lt;/P&gt;
</code></pre>
<p>
The resulting text will appear as 20-point text in the browser.</p>
<p>
The second way to place style information inline is to use a new tag called SPAN. SPAN by itself doesn't mean anything; you use it to surround text to which you want to add style information using the STYLE attribute. Here's how the SPAN tag might be used:</p>
<pre><code>&lt;SPAN STYLE="margin-left: 1.0in"&gt; This paragraph is 1.0 inches from the left margin. That's one small step for a paragraph, one giant leap for browserkind.&lt;/SPAN&gt;
</code></pre>
<p>
As you can see, adding style information in-line is easy. But it's much harder to go through a document and change a great number of STYLE attributes than it is to change a handful of them at the top of the document. That's why it's generally better to place style information in a centralized location, such as at the top of a page.</p>
<h4>Step 3: Placing style information at the top of a page.</h4>
<p>
This is done by inserting a &lt;STYLE&gt; block at the top of your document. The block should come after the &lt;HTML&gt; tag and before the &lt;BODY&gt; tag. Here's an example:</p>
<pre><code>&lt;HTML&gt;

&lt;STYLE&gt;
BODY {background: white; color: black}
H1 {font: 14pt Arial bold}
P {font: 10pt Arial; text-indent: 0.5in}
A {text-decoration: none; color: blue}
&lt;/STYLE&gt;

&lt;BODY&gt;

&lt;H1&gt;This is a headline! In 14-point Arial bold!&lt;/H1&gt;

&lt;P&gt;Yes, folks, here it is in black and white — this page is actually using style sheets. Oh, by the way, &lt;A HREF="http://www.microsoft.com"&gt;this is a link,&lt;/A&gt; but it's not underlined, because we set text-decoration for links to "none."&lt;/P&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</code></pre>
<p>
Note that to assign more than one kind of style information at once, you simply separate the styles with semicolons. For example, to set the font of an entire HTML page to 10-point Times font, the colors to black on white, and both left and right margins to one inch, place the following before the &lt;BODY&gt; tag:</p>
<pre><code>&lt;STYLE&gt;
BODY {font: 10pt Times; color: black; background: white; margin-left: 1in; margin-right: 1in}
&lt;/STYLE&gt;
</code></pre>
<h4>Step 4: Linking to an external style sheet.</h4>
<p>
To link to an external style sheet, simply create a file that contains what you would normally place in a &lt;STYLE&gt; block at the top of a page (see Step 3 above). Suppose you've created a file with the following contents:</p>
<pre><code>BODY {background: white; color: black}
H1 {font: 14pt Arial bold}
P {font: 10pt Arial; text-indent: 0.5in}
A {text-decoration: none}
</code></pre>
<p>
Let's say you have placed this on your server at http://www.mycompany.com/mystyles.css. To link a page to this style sheet, simply place the following in the HEAD portion of the page:</p>
<pre><code>&lt;LINK REL=STYLESHEET HREF="http://www.mycompany.com/mystyles.css" TYPE="text/css"&gt;
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You will need to make sure that the MIME type reported for mystyles.css is <code>text/css</code>.</p>
<h4>Step 5: Add text formatting.</h4>
<p>
Now that you've figured out where to put the style information, here are the text formatting features currently supported by Internet Explorer 3.0.</p>
<p>
<b>font: [bold] [italic] [font size]/[font leading] [list of font names]</b></p>
<p class=indent>
Sets many font properties at once. You can specify a list of font names separated by commas; if the first is not available, the next will be tried, and so on. For example: <code>font: bold 12pt/14pt "Arial,Helv"</code></p>
<p>
<b>font-family: [list of font names]</b></p>
<p class=indent>
Chooses which font to use to display text. As above, you can specify a list of font names separated by commas. For example: <code>font-family: Courier New</code></p>
<p>
<b>font-size: size</b></p>
<p class=indent>
Sets font size. You can set font size not only in points but in inches (in), centimeters (cm), or pixels (px). For example: <code>font-size: 10pt</code></p>
<p>
<b>font-weight: bold or normal</b></p>
<p class=indent>
Sets the font weight. Currently only normal and bold are supported. For example: <code>font-weight: bold</code></p>
<p>
<b>font-style: italic</b></p>
<p class=indent>
Used to set various text styles. Currently only italic is supported.</p>
<p>
<b>text-decoration: none , underline, italic, or line-through</b></p>
<p class=indent>
Sets text decoration. This is useful for turning link underlining off: simply set text-decoration to "none". For example: <code>text-decoration: line-through</code></p>
<p>
<b>line-height: [measurement]</b></p>
<p class=indent>
Otherwise known as leading, this sets the height of each line of text. (Note: currently the extra spacing is added <i>before</i> lines, not after. This may be changed later to match the standards set by desktop publishing applications.) For example: <code>line-height: 20pt</code>.</p>
<p>
<b>background: #rrggbb, color name, or URL([address of image])</b></p>
<p class=indent>
Places a color or image behind text. This can be used to "highlight" portions of text. For example: <code>background: #ffffff</code>, or <code>background: white</code></p>
<p>
<b>background: URL(http://www.mycompany.com/images/white.gif)</b></p>
<h4>Step 6: Add layout information.</h4>
<p>
Once you've formatted your text, choose from the following features to control the layout of your pages. As above, all measurements can be set in inches, centimeters, or pixels.</p>
<p>
<b>margin-left: [measurement] and margin-right: [measurement]</b></p>
<p class=indent>
Sets the left and right margins. For example: <code>margin-left: 0.5in</code>; or <code>margin-right: 0.5in</code></p>
<p>
<b>text-indent: [measurement]</b></p>
<p class=indent>
Sets the indentation for each paragraph. For example: <code>text-indent: 0.25in</code></p>
<p>
<b>text-align: left, right, or center</b></p>
<p class=indent>
Sets text alignment. For example:<code> text-align: right</code></p>
<p>
That's all it takes to add style to your pages!</p>
<h2><a name="enhtables"></a>Enhanced Tables</h2>
<p>
Internet Explorer 3.0 supports several enhanced table features from the RFC1942 proposal, including selectable rules and borders, row and column grouping, and aligning text in adjacent cells by baseline. It also supports the exclusive ability to place background images (even transparent ones) in individual table cells.</p>
<h3>Step by Step</h3>
<p>
Follow the instructions below for an introduction to how you can enhance your HTML tables for use with Internet Explorer 3.0!</p>
<h4>Step 1: Try a background graphic.</h4>
<p>
Internet Explorer 3.0 can place a background graphic behind any table cell, or even behind an entire table. This is a great boon for designers who want to overlay text on graphics. The HTML is simple: just add <code>BACKGROUND=</code><i>"address of picture"</i> to any &lt;TABLE&gt;, &lt;TD;&gt;, or &lt;TR&gt; element in your table.</p>
<p>
Here's a table that uses background images to place a patterned border around a central cell:</p>
<p>
<img src="htmlauth_2.gif" border=0></p>
<p>
And here's the HTML code. Note that we have used not only background images but also background colors; this gives the viewer something to look at while the images are being loaded.</p>
<pre><code>&lt;TABLE BORDER=0 CELLPADDING=10 CELLSPACING=0 <b>BACKGROUND="beans.gif"</b> BGCOLOR=#572B00&gt;
&lt;TR&gt; &lt;TD COLSPAN=3 HEIGHT=10 <b>BACKGROUND="canvas.gif"</b> BGCOLOR=#E8CCA0&gt;&lt;/TD&gt; &lt;/TR&gt;
&lt;TR&gt;
&lt;TD WIDTH=10 <b>BACKGROUND="canvas.gif"</b> BGCOLOR=#E8CCA0&gt;&lt;/TD&gt;
&lt;TD&gt;
&lt;FONT COLOR=#ffffcc&gt;
What gives Volcano Coffee&lt;BR&gt; its rich, deep aroma and&lt;BR&gt; tastebud-tingling bouquet?&lt;BR&gt; &lt;B&gt;It's the beans, stupid!&lt;/B&gt;
&lt;/FONT&gt;
&lt;/TD&gt;
&lt;TD WIDTH=10 <b>BACKGROUND="canvas.gif"</b> BGCOLOR=#E8CCA0&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR&gt; &lt;TD COLSPAN=3 HEIGHT=10 <b>BACKGROUND="canvas.gif"</b> BGCOLOR=#E8CCA0&gt;&lt;/TD&gt; &lt;/TR&gt;
&lt;/TABLE&gt;
</code></pre>
<p>
Background images in table cells can be transparent.</p>
<h4>Step 2: Control the rules.</h4>
<p>
If you want to specify that your table should only have rules (borders) between the rows, use the following:</p>
<pre><code>&lt;TABLE RULES=ROWS&gt;
</code></pre>
<p>
If you want to only have rules between the columns, use <code>RULES=COLS</code> instead. For a table with an outside border but no rules, use <code>RULES=NONE</code>.</p>
<h4>Step 2: Control the rules.</h4>
<p>
If you want to specify that your table should only have rules (borders) between the rows, use the following:</p>
<pre><code>&lt;TABLE RULES=ROWS&gt;
</code></pre>
<p>
If you want to only have rules between the columns, use <code>RULES=COLS</code> instead. For a table with an outside border but no rules, use <code>RULES=NONE</code>.</p>
<h4>Step 3: Want to align text by baseline?</h4>
<p>
Here's what happens in an ordinary Web browser when you try to use text of very different sizes in adjacent cells:</p>
<p>
<img src="htmlauth_3.gif" border=0></p>
<p>
The results look a little odd because the baselines of the text are not aligned. Internet Explorer 3.0 corrects this problem by allowing you to add <code>VALIGN=BASELINE</code> to any TD tag. Here's the same table with the text aligned by baseline:</p>
<p>
<img src="htmlauth_4.gif" border=0></p>
<p>
You've just learned three simple ways to enhance your tables for use with Internet Explorer 3.0!</p>
<h2><a name="imageform"></a>New Image Formats</h2>
<p>
Internet Explorer 3.0 can display animated .GIF images, which are rapidly becoming the standard way to add animation to Web pages. Also supported is .BMP, the standard Windows graphic format, so authors can now create Web graphics with Microsoft Paint.</p>
<h3>Step by Step</h3>
<p>
Follow these steps to use .BMP and animated .GIF images in your Web pages.</p>
<h4>Step 1: Adding .BMPs is easy.</h4>
<p>
You can create a .BMP using Microsoft Paint and embed it in your Web page just as you would any other image:</p>
<pre><code>&lt;IMG SRC="http://www.mycompany.com/images/mybitmap.bmp"&gt;
</code></pre>
<p>
This is especially useful if you do not have software to edit .GIF and .JPEG images.</p>
<p>
.BMP images give you a quick way to post software screen shots on your Web pages. Simply capture the screen shot by activating the window and pressing ALT+PRINTSCREEN, paste the picture into Microsoft Paint, save it to your Web server, and use the syntax above to place the image in your page.</p>
<h4>Step 2: Animated .GIFs require a little construction.</h4>
<p>
Animated .GIF files effectively consist of several stationary .GIF images combined into one file. To make an animated .GIF, you start by making a collection of separate .GIF images, one for each frame of your animation. These images should be the same size and ideally <i>should share the same palette</i> to prevent palette flicker.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The following URLs were accurate and functioning at the time this article was published. However, given the transitory nature of the World Wide Web, MSDN cannot guarantee that these URLs will still exist at any point in the future.</p>
<p>
Once you have collected the images, the easiest way to combine them is to use:
<ul type=disc>
<li>
A shareware utility such as<i> GIF Construction Set for Windows</i> at http://www.mindworkshop.com/alchemy/gifcon.html<br><br></li>
<li>
A freeware utility such as <i>GifBuilder for the Macintosh</i> at http://iawww.epfl.ch/Staff/Yves.Piguet/clip2gif-home/GifBuilder.html.</li>
</ul>
<p>
The following resources may also be helpful in your quest to create animated .GIFs:
<ul type=disc>
<li>
<i>Ziff-Davis Interactive Article on GIF89a Animations</i> at http://www.zdnet.com/zdi/articles/gif89a.html<br><br></li>
<li>
<i>GIF Animation on the World Wide Web</i> at http://member.aol.com/royalef/gifanim.htm<br><br></li>
<li>
<i>Yahoo! Index of Animated .GIF Collections</i> at http://www.yahoo.com/Computers_and_Internet/Graphics/Computer_Animation/Animated_GIFs/<br><br></li>
<li>
<i>The First Internet Gallery of Internet Animations</i> at http://www.reiworld.com/royalef/galframe.htm</li>
</ul>
<p>
That's all it takes to add .BMP and animated .GIF images to your pages!</p>
</BODY>
</HTML>
