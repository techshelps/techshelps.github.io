<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mapping Visual Basic 4.0: The VBIDE Object</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_mapvbide"></a></sup>Mapping Visual Basic 4.0: The VBIDE Object</h1>
<p>
Ken Lassesen<br>
Microsoft Developer Network Technology Group</p>
<p>
July 24, 1995</p>
<p>
<i>Special thanks to Lasse Rantanen (Finland) for his many suggestions!</i></p>
<p>
<OBJECT id=sample1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"
	width=0 height=0 hspace=0>
<PARAM name="Command" value="Sample">
<PARAM name="Item1" value="Technical Articles Sample">
<PARAM name="Item2" value="4346">
</OBJECT><a href="javascript:sample1.Click()">Click here for a diagram of the VBIDE object In various graphics formats.</a></p>
<h2>Abstract</h2>
<p>
This article consists primarily of a graphic map of the Visual Basic® [Integrated] Development Environment (VBIDE) object, which shows its properties, methods, and child objects. This map provides a quick reference to the VBIDE object in Visual Basic version 4.0.</p>
<h2>The VBIDE Object</h2>
<p>
The Visual Basic® [Integrated] Development Environment object (VBIDE) is available only in Visual Basic version 4.0. Using the VBIDE, developers may create add-ins for the development environment. For information on creating add-ins, see my article titled <a href="msdn_addinvb4.htm">"Building Add-Ins for Visual Basic 4.0."</a></p>
<p>
The VBIDE object diagram shows the relationship between objects as described by the Object Viewer. The <b>Parent</b> and <b>Application</b> properties exist for all objects, so the diagram omits them.</p>
<p>
A map is a good learning aid and a quick reference when developing an application. I started producing maps after a week of leaving dents in walls trying to work with some unfamiliar objects. After producing a map, I found that it was easy to work with the object: I just post the appropriate map on my wall for quick reference, which is a lot faster than clicking objects in a Help file one by one to discover their properties and methods.</p>
<p>
Because Figure 1 is unreadable online, I have included the two most common graphics formats—encapsulated PostScript™ (.EPS) and Windows® metafile (.WMF)—as well as a copy of my original Shapeware® Visio™ version 3.0 file (.VSD). The first two formats can be printed across multiple pages using any of the commercial graphics applications—such as Adobe™ PageMaker™, Corel® Draw, or Microsoft® Publisher—or using Microsoft Excel. The original Visio file is included for those who have a copy of Visio and wish to modify the diagram easily. </p>
<p>
<img src="mapvbide_1.gif" border=0></p>
<p class=label>
<b>Figure 1. The Visual Basic Development Environment </b></p>
<h3>Object Definitions</h3>
<p>
The objects and collections in Figure 1 are defined in Table 1.</p>
<p class=label>
<b>Table 1. Object and Collection Definitions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=29%><b>Object or Collection</b></td>
<td class=label width=71%><b>Definition</b></td>
</tr>
<tr valign=top>
<td width=29%><b>Application </b>Object</td>
<td width=71%>This object represents the application connected to the add-in. This object exposes certain properties of the current instance of Visual Basic itself. Using the properties of this object, an add-in can access all the objects supported by Visual Basic. The <b>ConnectAddIn</b> event of an add-in class module instance receives the <b>Application</b> object when an add-in is installed in an instance of Visual Basic.</td>
</tr>
<tr valign=top>
<td width=29%><b>SubMenu </b>Object</td>
<td width=71%>This object represents a menu item that may have child <b>MenuItem</b> objects on the Visual Basic menu bar under <b>Add-Ins</b>.</td>
</tr>
<tr valign=top>
<td width=29%><b>MenuItem</b> Object</td>
<td width=71%>This object represents a menu item that will send Click events to a class module connected to the VBIDE with the <b>MenuLine.ConnectEvents</b> method.</td>
</tr>
<tr valign=top>
<td width=29%><b>FileControl </b>Object</td>
<td width=71%>This object is supplied by Visual Basic to support file-control events in add-ins. The <b>FileControl</b> object monitors all notifications of file changes in Visual Basic. The add-in specifies which class-module instance within the add-in will receive file-control events using the <b>FileControl.ConnectEvents</b> and <b>FileControl.DisconnectEvents</b> methods. File-control events invoke class-module methods.</td>
</tr>
<tr valign=top>
<td width=29%><b>ProjectTemplate </b>Object</td>
<td width=71%>This object represents the project loaded in the referenced VBIDE instance. The <b>ProjectTemplate</b> object allows access to forms, modules, class modules, controls, and references in the project.</td>
</tr>
<tr valign=top>
<td width=29%><b>FormTemplate </b>Object</td>
<td width=71%>This object represents a form in a Visual Basic project. The properties, controls, and currently selected controls of a form are available through this object. The add-in can add controls, code, and menu lines to the form using this object.</td>
</tr>
<tr valign=top>
<td width=29%><b>SelectedControlTemplate</b> Collection </td>
<td width=71%>This collection contains all the selected <b>ControlTemplate</b> objects on the active <b>FormTemplate</b> object. </td>
</tr>
<tr valign=top>
<td width=29%><b>Properties </b>Collection</td>
<td width=71%>This collection contains all the <b>Property</b> objects for a specific instance of a <b>FormTemplate</b> object or a <b>ControlTemplate</b> object.</td>
</tr>
<tr valign=top>
<td width=29%><b>Property </b>Object</td>
<td width=71%>This object represents a built-in characteristic or a user-defined characteristic of a <b>FormTemplate</b> object or a <b>ControlTemplate</b> object. These are the same design-time characteristics that appear when the developer presses F4.</td>
</tr>
<tr valign=top>
<td width=29%><b>Components </b>Collection</td>
<td width=71%>This collection contains all the <b>Component</b> objects for the project.</td>
</tr>
<tr valign=top>
<td width=29%><b>Component </b>Object</td>
<td width=71%>This object represents a resource file, a form, a module, or a class module.</td>
</tr>
<tr valign=top>
<td width=29%><b>SelectedComponents </b>Collection</td>
<td width=71%>This collection represents the currently selected <b>Component</b> objects in the project. Only<i> one</i> item is in the <b>SelectedComponents</b> collection. (This may change in future versions.)</td>
</tr>
</table><br>
</BODY>
</HTML>
