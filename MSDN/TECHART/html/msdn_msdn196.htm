<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 196: Using the Common Dialog Control to Invoke Context-Sensitive Help</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn196"></a></sup>Tip 196: Using the Common Dialog Control to Invoke Context-Sensitive Help</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
The <b>Common Dialog</b> control in Microsoft® Visual Basic® allows you to invoke Help immediately and does not require that you use a dialog box. This article explains how to use the <b>Common Dialog</b> control to access specific Microsoft Windows® Help files.</p>
<h2>Accessing Context-Sensitive Help</h2>
<p>
Most Microsoft® Windows® users know they can get Help at any time by pressing the f1 function key. When f1 is detected, Windows activates its WinHelp application. This application then displays Help information for the item located under the mouse pointer. This form of contextual user assistance is called <i>context-sensitive Help</i>.</p>
<p>
You can easily add this technique to your own Microsoft Visual Basic® applications. <a href="msdn_msdn15.htm">Tip 15: Creating a List of Directories Stored on a Disk</a> contains a full discussion of using the Windows application programming interface (API) <b>WinHelp</b> function; but in this case, you will use the <b>Common Dialog</b> control to access Help. It is sometimes preferable to use the <b>Help</b> function of the <b>Common Dialog</b> control rather than using the <b>WinHelp</b> function itself. The <b>Common Dialog</b> control allows you to invoke Help immediately and does not require that you use a dialog box.</p>
<p>
In the example program below, you use the <b>Common Dialog</b> control to call up the Windows WinHelp application. To do this, you need only to set the <b>Action</b> property of the <b>Common Dialog</b> control to a value of 6. This tells the control that you want to access the Windows WinHelp application.</p>
<p>
Next, you set the <b>HelpKey</b> property of the <b>Common Dialog</b> control to the text with which you want to invoke Help. This is the word or phrase you typed in the <b>Text Box</b> control.</p>
<p>
Finally, you set the <b>HelpCommand</b> property of the <b>Common Dialog</b> control to HELP_KEY. This allows us to perform a context-sensitive search in the Help file.</p>
<h2>Example Program</h2>
<p>
This program shows how to access a Windows Help file based on a specific string in a <b>Text Box</b> control.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following constants to the General Declarations section of Form1:<pre><code>Const KEY_F1 = &amp;H70
Const HELP_KEY = &amp;H101
</code></pre>
</li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Private Sub Form_Load()
 &nbsp;&nbsp; KeyPreview = True
 &nbsp;&nbsp; CommonDialog1.HelpFile = "c:\vb\vb.hlp"
End Sub
</code></pre>
</li>
<li>
Add the following code to the Form_KeyDown event for Form1:<pre><code>Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
 &nbsp;&nbsp; If KeyCode = KEY_F1 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If TypeOf Me.ActiveControl Is TextBox Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If ActiveControl.SelText &lt;&gt; "" Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CommonDialog1.HelpKey = ActiveControl.SelText
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CommonDialog1.HelpCommand = HELP_KEY
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CommonDialog1.Action = 6
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "Error - no phrase was selected to get help for"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; KeyCode = 0
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "The Text Box must have the focus"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; End If

End Sub
</code></pre>
</li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default.<br><br></li>
<li>
Add a <b>Common Dialog</b> control to Form1. CommonDialog1 is created by default.</li>
</ol>
<p>
Run the example program by pressing f5. Type some text in the <b>Text Box</b> control, such as "We need help on the CommonDialog Control right now." Highlight the phrase "CommonDialog Control" in the <b>Text Box</b> control. Press f1. The program displays the Help page for the <b>Common Dialog</b> control. Note that if you attempt to invoke Help without first selecting a word or phrase in the <b>Text Box</b> control, an error message appears. By the same token, if the <b>Text Box</b> control does not have the focus when you press f1, an error is generated.</p>
</BODY>
</HTML>
