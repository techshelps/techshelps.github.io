<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 159: Setting the Minimum Size of a Window</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn159"></a></sup>Tip 159: Setting the Minimum Size of a Window</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
In your Microsoft® Visual Basic® application, you can establish the absolute minimum size for a form. This article explains how to allow a user to resize a form only if the form is larger than the minimum size.</p>
<h2>Allowing or Preventing the Resizing of Forms</h2>
<p>
When you design a Microsoft® Visual Basic® application, you add forms and controls to your project. The form is actually a window that holds other controls such as <b>Command Button</b> controls. You can modify the size of the form when you initially design your program.</p>
<p>
In addition, the user of your application may want the flexibility of resizing your application's form. You can allow a form to be resized by setting the form's <b>BorderStyle</b> property to Sizable. This is the default style for newly created forms.</p>
<p>
The only drawback to letting the user resize your form is that it can destroy the layout of your application. The user may resize the form to be larger or smaller, which may cover up other windows that need to be visible.</p>
<p>
In the example program below, the user can resize a form to make it larger, but not smaller. The <b>Height</b> and <b>Width</b> properties of the form are set to an absolute minimum size.</p>
<p>
Each time the user tries to resize the form, the Form_Resize event is activated. In this event, you check to make sure that the form is not minimized or iconized and then make a test of the form's current size.</p>
<p>
If the current height or width of the form is greater than the minimum size, you allow the form to be resized. On the other hand, if the user tries to shrink the form's size to a much smaller size, you prevent the change from taking place.</p>
<h2>Example Program</h2>
<p>
This program shows how to prevent a form (window) from being resized to a smaller size.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Set the following properties for Form1:<p class=tl>
Height = 2250<br>
Left = 1260<br>
Top = 1965<br>
Width = 4515</P></li>
<li>
Add the following code to the Form_Resize event for Form1:<pre><code>Private Sub Form_Resize()
 &nbsp;&nbsp; MIN_WIDTH = 4515
 &nbsp;&nbsp; MIN_HEIGHT = 2250
 &nbsp;&nbsp; If WindowState &lt;&gt; 1 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Width &lt; MIN_WIDTH Then Width = MIN_WIDTH
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Height &lt; MIN_HEIGHT Then Height = MIN_HEIGHT
 &nbsp;&nbsp; End If
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. When you try to change the size of Form1 to make it smaller, the code in the Resize event prevents the form's size from changing. You can make the form larger, but not smaller.</p>
</BODY>
</HTML>
