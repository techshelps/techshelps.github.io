<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mapping Functions, Statements, and Methods of Microsoft Visual Basic for Applications: VBA</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_mapfvba"></a></sup>Mapping Functions, Statements, and Methods of Microsoft Visual Basic for Applications: VBA</h1>
<p>
Greg R. Buckwalter<br>
Microsoft Product Support Services</p>
<p>
November 11, 1995</p>
<p>
<OBJECT id=sample1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"
	width=0 height=0 hspace=0>
<PARAM name="Command" value="Sample">
<PARAM name="Item1" value="Technical Articles Sample">
<PARAM name="Item2" value="4490">
</OBJECT><a href="javascript:sample1.Click()">Click here for a diagram of the functions in Visual Basic for Applications in various graphics formats.</a></p>
<h2>Abstract</h2>
<p>
This article consists primarily of a graphic map of the functions, statements, and methods contained in the Microsoft® Visual Basic® for Applications library. These functions and statements are common throughout the Microsoft family of Office products. Additional functions are available in other product libraries that may be used with OLE Automation in other products. </p>
<h2>Visual Basic for Applications</h2>
<p>
This article consists primarily of a graphic map of the functions and statements contained in the Microsoft® Visual Basic® for Applications library. These functions are common throughout the Microsoft family of Office products, such as Microsoft Access version 7.0 or higher, Microsoft Excel version 5.0 or higher, Microsoft Project version 4.0 or higher, and Visual Basic version 4.0. The library described is the latest version of the Visual Basic for Applications library found in Visual Basic 4.0 and Microsoft Access 7.0. The Visual Basic for Applications library in Microsoft Excel version 7.0 and Microsoft Project version 4.1 is an earlier version. Additional functions and statements are available in other product objects, which may be used with OLE Automation in other products. These functions, statements, and methods maps should be used in conjunction with the extended object maps created by Ken Lassesen.</p>
<p>
Visual Basic for Applications is the <i>lingua franca</i> of the Microsoft family of solutions products—Visual Basic, Microsoft Access, Microsoft Project, and any Microsoft Office products containing Visual Basic for Applications. Developers familiar with one product fail to realize that all of the functions available in any of the solutions products are available in all of the solutions products via OLE Automation. Microsoft Access developers and Visual Basic developers have had the functions and commands divided into two parts: the common Visual Basic for Applications library and the product-specific library. Learning which library contains each component allows the developer to grow beyond a single-product perspective and become a solutions developer instead of a product developer. </p>
<p>
Developers who say, "I wish Microsoft Access had a <b>CEILING</b> function like Microsoft Excel; I guess that I have to write my own version in Microsoft Access" demonstrate that their understanding is a bit "walled in." The cool way of using these libraries is shown below.</p>
<p>
In this sample function for use in Microsoft Access (or other products), the function accesses the <b>CEILING</b> function in the Microsoft Excel Automation server.</p>
<pre><code>Dim MyExcel As Object

Function Startup() 'Called by AutoExec macro
Set MyExcel = CreateObject("Excel.Application")
End Function

Function Access_CeilingNickels(ByVal Price)
Access_CeilingNickels = MyExcel.Parent.Ceiling(Price, 0.05)
End Function

End Function
</code></pre>
<p>
This function may then be used in Microsoft Access queries:</p>
<pre><code>&nbsp;&nbsp;&nbsp;Select Item, ItemCode, Access_CeilingNickels(Price * .96) From Stock 
Where ItemFlag="SaleItem"
</code></pre>
<p>
Figure 1 shows the functions, statements, and methods within functional categories "By Programming Task," as described by the Object Viewer and online Help files. A map is a good learning aid and a quick reference when developing an application. Posting the appropriate map on my wall for quick on where functions and commands are located can encourage a solutions approach instead of a product specific approach.</p>
<p>
Because Figure 1 is unreadable online, I have included the two most common graphics formats—encapsulated PostScript™ (.EPS) and Windows® metafile (.WMF)—as well as a copy of my original Shapeware® Visio™ version 4.0 file (.VSD). The first two formats can be printed across multiple pages using any of the commercial graphics applications—such as Adobe™ PageMaker™, Corel® Draw, or Microsoft® Publisher—or using Microsoft Excel. The original Visio file is included for those who have a copy of Visio and wish to modify the diagram easily. </p>
<p>
<img src="mapfvba_1.gif" border=0></p>
<p class=label>
<b>Figure 1. The Microsoft Visual Basic for Applications library </b></p>
<h3>Object Definitions</h3>
<p>
The function categories in Figure 1 are defined in Table 1. These categories are listed in the same sequence as they appear in the map. </p>
<p class=label>
<b>Table 1. Object and Collection DefinitionsTD </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Functional Group</b></td>
<td class=label width=69%><b>Definition </b></td>
</tr>
<tr valign=top>
<td width=31%><b>Conversion</b></td>
<td width=69%>This group of functions converts, gets, and changes variable's values between data types.</td>
</tr>
<tr valign=top>
<td width=31%><b>Variables and Constants</b></td>
<td width=69%>This group of functions assigns, creates, declares, gets, requires, and sets data variables and constants.</td>
</tr>
<tr valign=top>
<td width=31%><b>Dates and Times</b></td>
<td width=69%>This group of functions converts, gets, performs calculations on, and sets dates and times. Dates and times are stored as variant-7 data types.</td>
</tr>
<tr valign=top>
<td width=31%><b>File System</b></td>
<td width=69%>This group of functions manages the operating system's files and directories, such as copying a file, changing the directory, and so forth.</td>
</tr>
<tr valign=top>
<td width=31%><b>Financial</b></td>
<td width=69%>This group of functions performs financial calculations, such as calculating return on investment or calculating loan payments.</td>
</tr>
<tr valign=top>
<td width=31%><b>Information</b></td>
<td width=69%>This group of functions creates, changes, declares, or gets information about components, such as getting information about an array or getting information about a variant.</td>
</tr>
<tr valign=top>
<td width=31%><b>Interaction</b></td>
<td width=69%>This group of functions controls interaction with the application or the operating system, such as creating an OLE object or getting/setting registry entries.</td>
</tr>
<tr valign=top>
<td width=31%><b>Math</b></td>
<td width=69%>This group of functions performs mathematical functions, such as trigonometry functions or generating random numbers.</td>
</tr>
<tr valign=top>
<td width=31%><b>String Manipulation</b></td>
<td width=69%>This group of functions compares, converts, creates, or manipulates strings.</td>
</tr>
<tr valign=top>
<td width=31%><b>Control Flow</b></td>
<td width=69%>This group of functions controls the flow of your program.</td>
</tr>
<tr valign=top>
<td width=31%><b>Operators Summary</b></td>
<td width=69%>This group of operators is used to perform mathematical calculations, perform comparisons, combine strings, and perform logical operations.</td>
</tr>
</table><br>
<h2>Bibliography</h2>
<p>
Lassesen, Ken. <a href="msdn_mapvba.htm">"Mapping the Visual Basic for Applications Object Library: VBA 2.2."</a> (MSDN Library, Technical Articles)</p>
<p>
Lassesen, Ken. <a href="msdn_ole2soln.htm">"Using Microsoft OLE Automation Servers to Develop Solutions."</a> (MSDN Library, Technical Articles)</p>
<p>
"Microsoft Access Programming and Language Reference" (VBA_ACC.HLP) is installed with Microsoft Access version 7.0.</p>
</BODY>
</HTML>
