<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CAdmin</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1><a name="hd_hdadmin_cadmin"></a>CAdmin</h1>
<h2>Functions</h2>
<h3>Delete</h3>
<p class=indent>
<b>Description<br>
</b>Deletes a record from the database.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.Delete (Optional oLocation As cLocation, Optional oPriority As CPriority, Optional oSkill As CSkill, Optional oTech As CTech)</code></p>
<p class=indent>
<b>&nbsp;Parameters<br>
</b>Optional&nbsp; oLocation as cLocation<br>
Optional&nbsp; oPriority as CPriority<br>
Optional&nbsp; oSkill as CSkill<br>
Optional&nbsp; oTech as CTech</p>
<p class=indent>
<b>Remarks<br>
</b>Although this method accepts three parameters, only one is accepted at any time. If more than one parameter is passed in, the method fails. Because each parameter is optional you must use named parameters to pass in the appropriate object. This method is not exposed to the HDUser or HDTech applications for data integrity reasons. For a further explanation , see <a href="msdn_hlpdskov.htm">"The HelpDesk Sample: Overview of an Automated Solution."</a></p>
<h3>ExtrPKId</h3>
<p class=indent>
<b>Description<br>
</b>Extracts the PKId from a previously formatted string.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.ExtrPKId (ByVal sFmtPKid As String)</code></p>
<p class=indent>
<b>&nbsp;Parameters<br>
</b>ByVal sFmtPKid as String</p>
<p class=indent>
<b>Return type<br>
</b>Integer</p>
<p class=indent>
<b>Remarks<br>
</b>This method expects the input string to be in the format of a FmtPKId result string.</p>
<h3>FmtPKId</h3>
<p class=indent>
<b>Description<br>
</b>Generates a predetermined string code that can be used to search the HelpDesk collections for a record's PKId.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.FmtPKId (ByVal iPKid As Integer)</code></p>
<p class=indent>
<b>&nbsp;Parameters<br>
</b>ByVal iPKid as Integer</p>
<p class=indent>
<b>Return type<br>
</b>String</p>
<p class=indent>
<b>Remarks<br>
</b>Visual Basic collections cannot be searched using a numeric key. This function generates a string using a predetermined format, thus allowing a collection to be searched for a "stringized" numeric value.</p>
<h3>GetRequest</h3>
<p class=indent>
<b>Description<br>
</b>Given a request's tracking number, retrieves the request from the database .</p>
<p class=indent>
<b>Syntax<br>
</b><code>set obj = CAdmin.GetRequest (ByVal lTrackNo As Long)</code></p>
<p class=indent>
<b>&nbsp;Parameters<br>
</b>ByVal lTrackNo as Long</p>
<p class=indent>
<b>Return type<br>
</b>CRequest</p>
<h3>GetRequestsByTechId</h3>
<p class=indent>
<b>Description<br>
</b>Given a technician's PKId, retrieves all the specified technician's requests, from the database, in the form of a collection.</p>
<p class=indent>
<b>Syntax<br>
</b><code>set obj = CAdmin.GetRequestsByTechId (ByVal lTechId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lTechId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Collection</p>
<h3>Init</h3>
<p class=indent>
<b>Description<br>
</b>Initializes the HelpDesk sample and validates the user.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.Init (ByVal sAlias As String, ByVal iLoggedInType As Integer)</code></p>
<p class=indent>
&nbsp;<b>Parameters<br>
</b>ByVal sAlias as String<br>
ByVal iLoggedInType as Integer</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>The alias passed in is validated against the tbTech table. The LoggedInType parameter determines whether the user is a technician or a user.</p>
<h3>Insert</h3>
<p class=indent>
<b>Description<br>
</b>Inserts a record into one of the domains.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.Insert (Optional oLocation As cLocation, Optional oPriority As CPriority, Optional oSkill As CSkill, Optional oTech As CTech)</code></p>
<p class=indent>
<b>Parameters<br>
</b>Optional&nbsp; oLocation as cLocation<br>
Optional&nbsp; oPriority as CPriority<br>
Optional&nbsp; oSkill as CSkill<br>
Optional&nbsp; oTech as CTech</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>Although this method accepts three parameters, only one is accepted at any time. If more than one parameter is passed in, the method fails. Because each parameter is optional, you must use named parameters to pass in the appropriate object. This method is not exposed to the HDUser or HDTech applications for data integrity reasons. For a further explanation, see <a href="msdn_hlpdskov.htm">"The HelpDesk Sample: Overview of an Automated Solution."</a></p>
<h3>Update</h3>
<p class=indent>
<b>Description<br>
</b>Updates an existing record in one of the domains.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CAdmin.Update (Optional oLocation As cLocation, Optional oPriority As CPriority, Optional oSkill As CSkill, Optional oTech As CTech)</code></p>
<p class=indent>
&nbsp;<b>Parameters<br>
</b>Optional&nbsp; oLocation as cLocation<br>
Optional&nbsp; oPriority as CPriority<br>
Optional&nbsp; oSkill as CSkill<br>
Optional&nbsp; oTech as CTech</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>Although this method accepts three parameters, only one is accepted at any time. If more than one parameter is passed in, the method fails. Because each parameter is optional, you must use named parameters to pass in the appropriate object. This method is not exposed to the HDUser or HDTech applications for data integrity reasons. For a further explanation, see <a href="msdn_hlpdskov.htm">"The HelpDesk Sample: Overview of an Automated Solution."</a></p>
<h2>Subroutines</h2>
<h3>Term</h3>
<p class=indent>
<b>Description<br>
</b>Terminates and cleans up all internal data structures.</p>
<p class=indent>
<b>Syntax<br>
</b><code>CAdmin.Term ()</code></p>
<p class=indent>
<b>Remarks<br>
</b>Use this method prior to releasing any <a href="#hd_hdadmin_cadmin">CAdmin</a> objects.</p>
<h3>Refresh</h3>
<p class=indent>
<b>Description<br>
</b>Refreshes the internal collections with new data.</p>
<p class=indent>
<b>Syntax<br>
</b><code>CAdmin.Refresh ()</code></p>
</BODY>
</HTML>
