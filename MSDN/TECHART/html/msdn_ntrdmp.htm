<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Windows NT Device Driver Resource Book</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_ntrdmp"></a></sup>The Windows NT Device Driver Resource Book</h1>
<p>
Ruediger R. Asche<br>
Microsoft Developer Network Technology Group</p>
<p>
November 1995</p>
<h2>Abstract</h2>
<p>
Following up on the Microsoft® Developer Network (MSDN) Library's <a href="msdn_lildev.htm">"The Little Device Driver Writer,"</a> this article presents an overview of Microsoft Windows NT™ device driver programming and a comprehensive reading list.</p>
<h2>Introduction</h2>
<p>
Since the introduction of the Microsoft® Windows NT™ operating system, a lot has been written about how to use the Win32® Application Programming Interface (API), for which Windows NT has been the first publicly available host. However, the information available about the system architecture of that operating system (and, consequently, information about how to write device drivers) is still fairly sparse. This article presents a road map to the information that is available both on the MSDN Library CD and in third-party publications.</p>
<p>
It is much more straightforward to write device drivers for Windows NT than it is to write drivers for Microsoft Windows® 95 because Windows NT is a designed operating system as opposed to Windows 95, which has evolved over time. For example, in Windows 95 an interrupt handler can be located in several places, whereas Windows NT has architectural provisions that do not allow interrupt handlers in user-mode code. Furthermore, Windows NT does not have a concept of an "interrupt chain," as Windows 95 has. In other words, there is exactly one place where an interrupt can be handled in Windows NT, and the semantics of interrupt handling are well defined.</p>
<p>
Although the system architecture of Windows NT makes device driver writing a more predictable and well-defined (albeit somewhat more restricted) task than for Windows 95, writing a device driver for Windows NT is not necessarily easier than writing one for Windows 95.</p>
<p>
This road map is designed to present you with all the information currently available (to the best of my knowledge) for Windows NT device driver writers. Analogous to <a href="msdn_vxdrdmp.htm">"The VxD Writer's Resource Book, or VxD Writing as a Martial Art,"</a> I have organized the material in ascending order of difficulty so you can look for the information that is most appropriate for your level. You will probably want to go back and forth as you learn about writing device drivers and need to uncover information that is relevant to the driver you need to write.</p>
<p>
As hard as I tried, I am sure that some important sources of information escaped me somewhere. If you know about useful pieces of information that for whatever reason fell through the cracks and didn't make it into this article, please let me know by using one of the following methods:
<ul type=disc>
<li>
From the MSDN Library: The best way to send feedback is to use FEEDER, an automated feedback collection tool included in the MSDN Library (Member Kiosk, Developer Network Postings, How to Send Us Feedback).<br><br></li>
<li>
From the Internet: msdn@microsoft.com<br><br></li>
<li>
From CompuServe®: &gt;INTERNET:msdn@microsoft.com—or—<br>
Microsoft Developer Network forum (GO MSDN)</li>
</ul>
<h2>Beginning Level: What the Heck Is Windows NT?</h2>
<p>
In this section, I've presented the sources of information necessary for you to get an idea of the Windows NT system architecture and how device drivers fit into the picture:</p>
<p>
The indispensable primer to Windows NT architecture is the classic <i>Inside Windows NT</i> by Helen Custer (Redmond, WA: Microsoft Press, 1993).</p>
<p>
The basic structure of the I/O system and the device driver architecture is outlined in the <i>Kernel Mode Drivers Design Guide</i> in the Windows NT 4.0 Device Driver Kit (DDK) (MSDN Library, DDK Documentation)</p>
<p>
Check out "Windows NT Device Drivers: Into the NT Kernel" by Jamie Hanrahan in the <i>NT Developer</i> newsletter 2 (February 1995).</p>
<p>
Also by Jamie Hanrahan, "Windows NT Device Drivers: Interrupts and Synchronization" in the <i>NT Developer</i> newsletter 2 (March 1995).</p>
<p>
<a href="msdn_lildev.htm">"The Little Device Driver Writer"</a> technical article in the MSDN Library also provides a useful overview of driver design for Windows NT.</p>
<p>
The following items provide additional information about aspects of the Windows NT system architecture. Throughout this article, all titles that start with a Q number are located in the Knowledge Base section of the MSDN Library. Other MSDN Library locations are indicated in parentheses after the title.</p>
<p>
"Chapter 1: Windows NT Architecture" in the Windows NT 4.0 Resource Kit (MSDN Library, Windows Resource Kits)</p>
<p>
Q100108, "Overview of FAT, HPFS, and NTFS File Systems"</p>
<p>
Q126418, "Streams Transport Driver Support for Windows NT"</p>
<p>
Q101501, "Differences Between a Service and a Device Driver"</p>
<p>
Q100371, "Video Drivers (Three-Part Model)"</p>
<p>
Q101503, "Reasons Windows NT Device Drivers Contain 'Trusted' Code"</p>
<p>
Q102658, "Windows NT Does Not Provide IRQ Sharing"</p>
<p>
Q101787, "General Information on Starting Multiple Operating Systems"</p>
<p>
Q96015, "Streams Interface (TLI, XTI) Not Supported"</p>
<p>
Q115757, "Direct Connected Network Printers Using DLC, IPX"</p>
<p>
Q117894, "The Windows NT Parallel Driver"</p>
<p>
Q121552, "FIX: Zw Calls Fail If KeyFullInformation Is a Parameter"</p>
<p>
Q122438, "PRB: Error When Compiling: Missing header file PSHPACK4.H"</p>
<p>
Q123254, "PRB: Problems Running Multiple HCT Managers"</p>
<p>
Q126285, "FIX: Problem with GENPORT.C: PortAddress Not Initialized"</p>
<p>
Q132897, "UNCONF: Missing Message Error When Starting Driver"</p>
<p>
Q126547, "Floating Point Math Is Not Supported in a Kernel-Mode Driver"</p>
<p>
Q120270, "Win32DDK/SDK Don't Contain What Is Necessary to Create an IFS"</p>
<p>
Q124504, "Mixer Manager Incorporated into NT 3.5 SDK and DDK"</p>
<p>
Here are a few more items that are not in the MSDN Library but are useful for background information.</p>
<p>
Custer, Helen. <i>Inside the Windows NT File System</i>. Redmond, WA: Microsoft Press, 1994.</p>
<p>
Merrit, Dennis. "Extending C with Prolog." <i>Dr. Dobb's Journal</i> (August 1994). [with a side note on network configuration management under Windows NT]</p>
<p>
Tomlinson, Paula. "Windows NT File System Developer's Conference Report." <i>Windows/DOS Developer's Journal</i> 5 (December 1994).</p>
<p>
The following articles from the Windows NT DDK Knowledge Base elaborate on specific issues concerning device driver writing:</p>
<p>
Q101502, "Device Driver Start Codes"</p>
<p>
Q115486, "Two Methods to Control Device Driver Load Order"</p>
<p>
Q126416, "Cautions on Using METHOD_NEITHER IOCTL"</p>
<p>
Q115758, "Meanings of Address Fields in an IRP Structure"</p>
<p>
Q117308, "How Drivers Notify User-Mode Pgms of Asynchronous Events"</p>
<p>
Q120170, "Creation and Destruction of File Objects"</p>
<p>
Q120171, "I/O Request Packet (IRP) Cancellation"</p>
<p>
Q126368, "Creating Device Objects in Dispatch Routines"</p>
<p>
Q126415, "SAMPLE: Async Notification from Kernel Mode Driver"</p>
<p>
Q126430, "BUG: Probs Using IoWriteErrorLogEntry to Write Error Messages"</p>
<p>
Q121965, "How to Change Max Memory Allowed with MmProbeAndLockPages"</p>
<p>
Q123460, "BUG: Interim Fix for IoAssignResource Fails When It Shouldn't"</p>
<p>
Q126286, "SAMPLE: Using ZwCreateFile() to Open File from Kernel"</p>
<p>
Q126414, "SAMPLE: Sequences &amp; Uses of Kernel APIs to Operate Slave DMA"</p>
<h2>Intermediate Level: Getting Started with Device Drivers</h2>
<p>
This section lists what you need to know to build your first device driver, how to debug the driver, and so on.</p>
<p>
Windows NT device drivers are normally written in C, possibly with a little assembly code supplementing the C code. The official supported way to write your driver is to install the Win32 Software Development Kit (SDK) first (this will supply the compiler and linker), install the assembler if need be, and then install the Windows NT DDK, which will provide you with the headers and libraries to build your drivers.</p>
<p>
For information about the build environment (compiler and linker), please refer to the Win32 SDK documentation. Assemblers are documented by whoever ships them; for the Microsoft 32-bit assembler, see:</p>
<p>
<i>Macro Assembler 6.11 for Windows NT (32-bit)</i> (Product Documentation, Languages)</p>
<p>
You can also build your driver in C++ and use other compilers, such as Microsoft Visual C++™, to build your driver, but please note that Microsoft Product Support Services cannot help you with it. I wrote a series of experimental articles that help you utilize Visual C++ to build your drivers; once more, please do not expect Microsoft to provide support for the material covered in these articles. They are:</p>
<p>
<a href="msdn_msvcdrv.htm">"The Windows NT Kernel-Mode Driver Cookbook, Featuring Visual C++"</a></p>
<p>
<a href="msdn_ntcpp.htm">"Writing Windows NT Kernel-Mode Drivers in C++"</a></p>
<p>
<a href="msdn_appwzex.htm">"Wizards Simplify Windows NT Kernel-Mode Driver Design"</a></p>
<p>
<a href="msdn_applywz.htm">"Using the Windows NT Custom Driver Wizard"</a></p>
<p>
In addition to the driver samples that are shipped with the Windows NT DDK, there are two other driver samples in the Library:</p>
<p>
"KBDCLASS/MOUCLASS: Windows NT Kernel Mode Device Drivers Written in C++" (To access, use the sample button in <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="msdn_ntcpp">
</object><a href=JavaScript:alink_1.Click()>"Writing Windows NT Kernel-Mode Drivers in C++"</a> by Ruediger R. Asche)</p>
<p>
"SERVICE: Creates and Installs a Service" (Sample Code, Product Samples)</p>
<p>
The following Knowledge Base articles deal with debugging issues:</p>
<p>
Q98890, "Debugging a Service with WinDbg"</p>
<p>
Q115760, "Kernel Debugging Using WinDbg"</p>
<p>
Q133301, "How to Debug User-Mode Drivers Using WinDbg and WinDbgRm"</p>
<p>
Q126419, "Enabling Debug Output for OEMSETUP.INF Scripts"</p>
<p>
Q89279, "Dumping Physical Addresses Under the Kernel Debugger"</p>
<p>
Q128372, "How to Remove Symbols from Device Drivers"</p>
<p>
Q90081, "Configuring a Kernel Debugger to Debug a Device Driver"</p>
<p>
Q90082, "Debug Printing Implementation in the Device Drivers"</p>
<p>
Q107727, "Debugging Printer Drivers with WINDBG and WINDBGRM"</p>
<p>
Q113996, "Mapping NT Status Error Codes to Win32 Error Codes"</p>
<h2>Advanced Level: Inside Information</h2>
<p>
In this section, I've listed and organized the material that will be of interest to you if you are familiar with the basic structure and development cycle of device drivers and you want to tackle the real-world task of writing a "real" device driver.</p>
<h3>Information Specific to Hardware Platforms</h3>
<p>
"Writing User-Mode Windows NT Drivers for Alpha APX Platforms" (MSDN Library, Backgrounders, Platform Articles)</p>
<p>
<i>MIPS Programmer's Guide</i> (MSDN Library Archive, Product Documentation, Languages, Visual C++ 2.0 Development System for MIPS)</p>
<p>
<i>Alpha AXP Programmer's Guide</i> (MSDN Library Archive, Product Documentation, Languages, Visual C++ 2.0 Development System for Digital Alpha AXP)</p>
<h3>Information Specific to User-Mode Drivers</h3>
<h4>Information specific to VDDs</h4>
<p>
Q135305, "BUG: VDDInstallMemoryHook Fails on Non-x86 Platforms"</p>
<p>
Tomlinson, Paula. "Introduction to Virtual Device Drivers [for NT]." A three-part series in the <i>NT Developer</i> newsletter:
<ul type=disc>
<li>
Part I (July 1994)<br><br></li>
<li>
Part II (August 1994)<br><br></li>
<li>
Part III (September 1994)</li>
</ul>
<h4>Information specific to other user-mode drivers</h4>
<p>
Q131454, "How to Take Advantage of Color Plane Ordering in Minidrivers"</p>
<p>
Q121964, "Unidrivers: Convert Win 3.1 .RC Files to Win NT .RC Files"</p>
<h4>Information specific to SCSI miniport drivers</h4>
<p>
Q116450, "BufferAccessScsiPortControlled Flag Information"</p>
<p>
Q134908, "SCSI Miniport Data Transfer Restrictions for IDE Controllers"</p>
<p>
Q126369, "FIX: Large Transfers Via SCSI Passthrough May Crash System"</p>
<p>
Q133706, "How to Pass Parameters to a SCSI Miniport via the Registry"</p>
<p>
Q123253, "SCSI Miniport SlotNumber Field Set by ScsiPortInitialize"</p>
<p>
Q123677, "Unsupported SCSI Commands When Using SCSI Pass Through"</p>
<p>
Q126431, "PRB: ScsiPortLogError May Not Log Multiple Errors"</p>
<p>
Li, Sing. "Writing Non-SCSI-CD-ROM Device Drivers [for NT]." <i>Dr. Dobb's Journal</i> (March 1994).</p>
<h4>Information specific to NDIS drivers</h4>
<p>
Q89374, "Byte-Ordering in a Data Packet Under NDIS"</p>
<p>
Q124079, "How to Allocate Non-Cached Memory for an NDIS Driver"</p>
<p>
Q132690, "Kernel Mode Drivers Layered Under NDIS Miniport Drivers"</p>
<h3>Specifications and Other Useful Miscellaneous Information</h3>
<p>
"Multimedia Technical Note: JPEG DIB Format" (MSDN Library Archive, Technical Articles, Multimedia Articles)</p>
<p>
"Microsoft Messaging Application Program Interface (MAPI)" (MSDN Library Archive, Backgrounders and White Papers, Operating System Extensions)</p>
<p>
"The Windows Telephony Application Programming Interface" (MSDN Library, Backgrounders, Platform Articles)</p>
<p>
"Extended Capabilities Port (ECP) Specifications" (MSDN Library, Specifications)</p>
<p>
"Windows Sockets Specification" (MSDN Library, Specifications, Platform)</p>
<p>
<i>SNA Device Interface Specification</i> (MSDN Library, Platform SDK, Internet Networking and Distributed Services, SNA Server SDK)</p>
<p>
"Windows NT, Windows for Workgroups, and Windows NT Advanced Server in a Novell NetWare Environment" (MSDN Library, Backgrounders, Platform, Kernel-Base)</p>
<p>
Several of the articles I've listed are from the <i>NT Developer</i> newsletter. If you want to obtain copies of any of these articles, call (800) 234-0386 or (503) 747-0800.</p>
</BODY>
</HTML>
