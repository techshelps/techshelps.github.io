<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 3: Retrieving the Name of the Temporary Directory</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn3"></a></sup>Tip 3: Retrieving the Name of the Temporary Directory</h1>
<p>
Created: March 1, 1995</p>
<h2>Abstract</h2>
<p>
Starting with version 2.0 of MS-DOS®, the operating system uses an environment block to store information about the user's computer system. The environment block consists of one or more ASCIIZ strings (strings terminated with a NULL character) that provide information to MS-DOS or application programs about the operating system. One entry in the environment block, for example, tells MS-DOS where to find files (for example, the <b>PATH</b> statement, included in the AUTOEXEC.BAT file). This article explains how you can retrieve a specific variable from the environment block from within your own Visual Basic® application.</p>
<h2>Retrieving the Name of the Temporary Directory</h2>
<p>
MS-DOS® and most applications you execute use the SET statement in the AUTOEXEC.BAT file to store their variables in the environment. When you installed Visual Basic®, you may have specified that it is to use a directory on drive C called JUNK to store its temporary working files. In that case, you would insert the statement SET TEMP=C:\JUNK in your AUTOEXEC.BAT file. From now on, each time Visual Basic needs to create a temporary file, it will look for the variable <i>TEMP</i> in the environment and use the specified directory to store the files it needs to create.</p>
<p>
The <b>ENVIRON</b> statement in Visual Basic allows you to retrieve a string that is associated with a variable stored in the MS-DOS environment. The <b>ENVIRON</b> statement has the following syntax:</p>
<p>
Environ[$](<b>environmentstring</b>)</p>
<p>
where "environmentstring" is a string expression that contains the name of the environment variable you want to retrieve.</p>
<p>
We can use the <b>ENVIRON</b> statement in our own program to retrieve the name of the directory used by Visual Basic for its temporary files. To do this, simply add the following statement to a code module in your Visual Basic program:</p>
<pre><code>D$=Environ$("TEMP")
</code></pre>
<p>
This statement tells Visual Basic to assign the value of the variable <i>TEMP</i> to D$. The environment variables are always returned as uppercase characters, despite the fact that they may have been entered as lowercase. In addition, the string returned in D$ will be terminated with a NULL character. If you ask the <b>ENVIRON</b> statement to return a string associated with a variable that does not exist, an empty string will be returned.</p>
</BODY>
</HTML>
