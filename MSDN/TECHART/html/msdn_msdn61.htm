<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 61: Creating Splitter Bars</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn61"></a></sup>Tip 61: Creating Splitter Bars</h1>
<p>
Created: April 17, 1995</p>
<h2>Abstract</h2>
<p>
When designing a Visual Basic® application, you may want to include code that allows the user to resize, for example, two Text Boxes by dragging and dropping a splitter bar. This article explains how to create a program that uses a splitter bar to enlarge or shrink the two Text Boxes to different sizes.</p>
<h2>Resizing Text Boxes with a Splitter Bar</h2>
<p>
You can add both visual appeal and ease of use to a Visual Basic® application by including splitter bars. A splitter bar is a horizontal or vertical bar that the user clicks on to automatically resize a control, such as a Text Box, on a form. By using splitter bars, for instance, you can have two Text Boxes displayed on the application's window, one at the top of the form and the other at the bottom of the form. The splitter bar is positioned between the two text boxes. When the user drags the splitter bar (which is actually a <b>Picture Box</b> control) towards the top of the window, the first Text Box is made smaller and the second Text Box is made larger. Conversely, when the splitter bar is dragged towards the bottom of the window, the first Text Box grows in size vertically while the second Text Box shrinks in size vertically. This technique allows users to size the Text Box controls according to their own preferences, which also allows them to see more or less data in each individual control.</p>
<p>
The key to creating a splitter bar in a Visual Basic application is the DragDrop event. Almost every control supports the DragDrop event. Each time a control is dropped at a new location, the DragDrop event is triggered. When the DragDrop event is triggered, the target control that you want to manipulate must contain the code to do whatever it is you want to do. In our example program below, we want to resize the text boxes, therefore we set the DragDrop event to trigger the Resize event for each Text Box on the form.</p>
<p>
Each <b>Text Box</b> control is responsible for calling the Resize event of the program's main form, Form1. This Resize event causes Visual Basic to draw each <b>Text Box</b> control to its new size at its new position. This same technique can be applied to almost any other form or control except menus, timers, lines, and shapes.</p>
<h2>Example Program</h2>
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default. Set the following properties for Form1:<p class=tl>
<b>Height: </b>3735<br>
<b>Left: </b>1470<br>
<b>Top: </b>1320<br>
<b>Width: </b>6720</P></li>
<li>
Add the following code to the Resize event for Form1:<pre><code>Sub Form_Resize()
  Picture1.Left = 0
  'Make sure the form is not minimized!
  If Form1.ScaleHeight &lt; Picture1.Height + 1 Then
 &nbsp;&nbsp;&nbsp;&nbsp; Form1.Height = Form1.Height - Form1.ScaleHeight + Picture1.Height + 1
  Else
 &nbsp;&nbsp;&nbsp;&nbsp; If Form1.ScaleHeight &lt; Picture1.Top + Picture1.Height Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Picture1.Top = Form1.ScaleHeight - Picture1.Height - 1
  End If

  'Set Text1 to the Width and Height of form1
  Text1.Width = Form1.ScaleWidth
  Text1.Height = Form1.Picture1.Top

  Picture1.Width = Form1.ScaleWidth

  'Set Text2 to the Width and Height of Form1
  Text2.Top = Picture1.Top + Picture1.Height
  Text2.Width = Form1.ScaleWidth
  Text2.Height = Form1.ScaleHeight - Picture1.Top - Picture1.Height
  End If
End Sub
</code></pre>
</li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default. Set the following properties for Text1:<p class=tl>
<b>Height: </b>1815<br>
<b>Left: </b>0<br>
<b>Top:</b> 0<br>
<b>Width: </b>6615</P></li>
<li>
Add the following code to the DragDrop event for Text1:<pre><code>Sub Text1_DragDrop(Source As Control, X As Single, Y As Single)
  If Y &gt; 0 Then
 &nbsp;&nbsp;&nbsp;&nbsp; Picture1.Top = Y&nbsp;&nbsp;&nbsp; 'Move splitter bar.
 &nbsp;&nbsp;&nbsp;&nbsp; Form_Resize
  End If
End Sub
</code></pre>
</li>
<li>
Add a second <b>Text Box</b> control to Form1. Text2 is created by default. Set the following properties for Text2:<p class=tl>
<b>Height:</b> 1455<br>
<b>Left: </b>0<br>
<b>Top:</b> 1920<br>
<b>Width: </b>6615</P></li>
<li>
Add the following code to the DragDrop event for Text2:<pre><code>Sub Text2_DragDrop(Source As Control, X As Single, Y As Single)
  If Y &lt; Text2.Height Then
 &nbsp;&nbsp;&nbsp;&nbsp; Picture1.Top = Y + Text2.Top - Picture1.Height
 &nbsp;&nbsp;&nbsp;&nbsp; Form_Resize
  End If
End Sub
</code></pre>
</li>
<li>
Add a <b>Picture Box</b> control to Form1. Picture1 is created by default. Set the following properties for Picture1:<p class=tl>
<b>BackColor: </b>&amp;H000000C0 (the color red)<br>
<b>DragMode: </b>1 (automatic)<br>
<b>DrawStyle: </b>0 (solid)<br>
<b>Height: </b>135<br>
<b>Left: </b>0<br>
<b>MousePointer: </b>7 (size n s)<br>
<b>Top: </b>1800<br>
<b>Width: </b>6495</P></li>
</ol>
<p>
Run the example program. A red bar (that is, the <b>Picture Box</b> control) separates the top Text Box from the bottom Text Box. You can resize either Text Box by clicking on the red bar and dragging the bar towards the top or bottom of Form1. When you release the mouse button, both Text Boxes are resized accordingly.</p>
</BODY>
</HTML>
