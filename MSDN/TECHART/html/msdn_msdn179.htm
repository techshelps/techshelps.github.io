<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 179: Retrieving the Computer Name</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn179"></a></sup>Tip 179: Retrieving the Computer Name</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
This article explains how you can use the Microsoft® Windows® <b>GetComputerName</b> function to retrieve the computer name.</p>
<h2>Using the GetComputerName Function</h2>
<p>
When you initially install the Microsoft® Windows® operating system on your computer, a default name is assigned to your computer. This name is initialized when you start your computer. The actual name is stored in the registration database (registry).</p>
<p>
You can use the Windows application programming interface (API) <b>GetComputerName</b> function in your Microsoft® Visual Basic® application to retrieve the name assigned to your computer. To use this function, include the following <b>Declare</b> statement in your project:</p>
<pre><code>Private Declare Function GetComputerName Lib "kernel32" Alias 
 &nbsp; "GetComputerNameA" (ByVal sBuffer As String, lSize As Long) 
 &nbsp; As Long
</code></pre>
<p>
The <b>GetComputerName</b> function requires two arguments. The first argument, <i>sBuffer</i>, is the buffer that will hold the computer name after the function is executed. The size of the buffer should be large enough to hold the entire name. The second argument, <i>lSize</i>, must be initialized to the size of <i>sBuffer</i>.</p>
<p>
After you have executed the <b>GetComputerName</b> function, the <i>lSize</i> variable will be set to a count of the actual number of characters stored in the <i>sBuffer</i> string. This count value does not include the terminating NULL character.</p>
<h2>Example Program</h2>
<p>
This program shows how to retrieve the name assigned to a computer.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Declare</b> statement to the General Declarations section of Form1 (note that this <b>Declare</b> statement must be typed as a single line of code):<pre><code>Private Declare Function GetComputerName Lib "kernel32" Alias 
 &nbsp; "GetComputerNameA" (ByVal sBuffer As String, lSize As Long) As Long
</code></pre>
</li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim PCName As String
 &nbsp;&nbsp; Dim P As Long

 &nbsp;&nbsp; P = NameOfPC(PCName)
 &nbsp;&nbsp; text1.Text = PCName
End Sub
</code></pre>
</li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default.<br><br></li>
<li>
Create a new function called <b>NameOfPC</b>. Add the following code to this function:<pre><code>Function NameOfPC(MachineName As String) As Long

 &nbsp;&nbsp; Dim NameSize As Long
 &nbsp;&nbsp; Dim X As Long

 &nbsp;&nbsp; MachineName = Space$(16)
 &nbsp;&nbsp; NameSize = Len(MachineName)
 &nbsp;&nbsp; X = GetComputerName(MachineName, NameSize)
End Function
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. Click the <b>Command Button</b> control. The name assigned to the computer appears in the <b>Text Box</b> control.</p>
</BODY>
</HTML>
