<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 69: Forcing a Picture Control to Use Only a Specific Font</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn69"></a></sup>Tip 69: Forcing a Picture Control to Use Only a Specific Font</h1>
<p>
May 1, 1995</p>
<h2>Abstract</h2>
<p>
When developing an application in Visual Basic® that may be run on many different computer systems, you may want to ensure that a control such as a <b>Picture Box</b> is formatted correctly with regard to the size and type of font used. This article explains how you can use the Windows® application programming interface (API) <b>SendMessage</b> and <b>GetStockObject</b> functions to force a control to use a specific font when displaying text.</p>
<h2>Using the GetStockObject Function to Select a Font</h2>
<p>
Many controls such as <b>Picture Box</b> and <b>Text Box</b> controls have a <b>Font</b> property. The <b>Font</b> property is usually set by the programmer at design time to a specific font. However, in some situations, you may want to force Windows® to use a different font at a specific time in your program for that control. In such cases, you can use the Windows application programming interface (API) <b>SendMessage</b> and <b>GetStockObject</b> functions to tell Windows that a control's <b>Font</b> property is to be set to a different font.</p>
<p>
To change a control's <b>Font</b> property to another font, you use the <b>GetStockObject</b> function. The <b>Declare</b> statement for this function is as follows:</p>
<pre><code>Declare Function GetStockObject Lib "GDI" (ByVal nIndex As Integer) As Integer
</code></pre>
<p>
<b>GetStockObject</b> requires only one argument—an integer value containing the type of stock object you want to use. In our case, we want to use the ANSI_FIXED_FONT stock object, which has a value of 11. After you call the <b>GetStockObject</b> function, it returns an integer value. This value is set to NULL if the function was not successful, or to a handle that identifies the logical object itself.</p>
<p>
In the example program below, we want to force the <b>Picture Box</b> control to use a fixed font instead of Bookman Old Style, which is set to a point size of 24, at design time. To set the font to a fixed font while the program is being executed, we issue the following statement:</p>
<pre><code>X = SendMessage(Picture1.hWnd, WM_SETFONT, GetStockObject(ANSI_FIXED_FONT), 1)
</code></pre>
<p>
After issuing this command, anytime we use the <b>Print</b> method to print text on the <b>Picture Box</b> control, the fixed font is used.</p>
<h2>Example Program</h2>
<p>
The example program below displays a <b>Picture Box</b> control on Form1. The <b>Print</b> method is used to display the text "This is a test" in the <b>Picture Box</b> control. Note that the default <b>Font</b> property value is ignored and the ANSI fixed font is used when the text is displayed in the control.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant</b> and <b>Declare</b> statements to the General Declarations section of Form1 (note that each <b>Declare</b> statement should be typed as a single line of code):<pre><code>Declare Function SendMessage Lib "User" (ByVal hWnd As Integer, ByVal wMsg As 
 &nbsp; Integer, ByVal wParam As Integer, lParam As Any) As Long
Declare Function GetStockObject Lib "GDI" (ByVal nIndex As Integer) As Integer
Const ANSI_FIXED_FONT = 11
Const WM_SETFONT = &amp;H30
</code></pre>
</li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Sub Form_Load()
 &nbsp;&nbsp; Dim X As Long
 &nbsp;&nbsp; X = SendMessage(Picture1.hWnd, WM_SETFONT, GetStockObject(ANSI_FIXED_FONT),
 &nbsp;&nbsp;&nbsp;&nbsp; 1)
 &nbsp;&nbsp; Picture1.Print "This is a test"
 &nbsp;&nbsp; 
End Sub
</code></pre>
</li>
<li>
Add a <b>Picture Box</b> control to Form1. Set its <b>Font</b> property to Bookman Old Style, point size: 24.</li>
</ol>
<h2>Additional References</h2>
<p>
Knowledge Base Q75857. "How to Print the ASCII Character Set in Visual Basic."</p>
</BODY>
</HTML>
