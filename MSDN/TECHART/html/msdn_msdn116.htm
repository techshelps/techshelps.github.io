<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 116: Sending Data to the Printer in Landscape or Portrait Mode</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn116"></a></sup>Tip 116: Sending Data to the Printer in Landscape or Portrait Mode</h1>
<p>
July 1, 1995</p>
<h2>Abstract</h2>
<p>
In a Microsoft® Visual Basic® application, you can send data to the printer by using the <b>Print</b> method. The printed output appears in the default portrait orientation. This article shows how to change the orientation of the printer from its default portrait mode to landscape mode.</p>
<h2>Sending Commands to the Printer</h2>
<p>
When you create a report in a Microsoft® Visual Basic® application, the output is usually sent to the printer in portrait mode. However, by using two Microsoft Windows® application programming interface (API) functions, you can tell the printer to print the report in landscape mode.</p>
<p>
Most printers manufactured today support a number of functions such as changing the print orientation to landscape mode. You tell the printer driver to select landscape printing by sending specific control code commands to the device. In Windows terminology, these control code commands are called Escape operations.</p>
<p>
The example program below shows how to use the Windows API <b>Escape</b> function to change the orientation of the printer. When you run this program, notice that a blank piece of paper is <i>not</i> ejected when the setting takes effect.</p>
<p>
How do we prevent the blank sheet of paper from being ejected? The <b>AbortDoc</b> function tells Windows to ignore the previous print request. This generates a printer error, which is trapped by the <b>On Error Resume Next</b> statement. Therefore, the printer is set to the new orientation without ejecting a blank piece of paper.</p>
<p>
The <b>Escape</b> function can be used to send specific control codes to a printer device. The CONSTANT.TXT file contains a list of the most commonly used escape codes that can be used with printers, display screens, and other devices.</p>
<p>
To use the <b>Escape</b> function within your program, include the following <b>Declare</b> statement in the General Declarations section of your form (note that this <b>Declare</b> statement must be typed as a single line of text):</p>
<pre><code>Private Declare Function Escape Lib "GDI" (ByVal hDC As Integer, ByVal nEscape
 &nbsp; As Integer, ByVal nCount As Integer, lpInData As Any, lpOutData As Any) As
 &nbsp; Integer
</code></pre>
<p>
The <b>Escape</b> function requires five arguments, as follows.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=18%><i>hDC</i></td>
<td width=82%>An integer value containing the device context's handle</td>
</tr>
<tr valign=top>
<td width=18%><i>nEscape</i></td>
<td width=82%>An integer value containing the specific escape code to be sent to the device context</td>
</tr>
<tr valign=top>
<td width=18%><i>nCount</i></td>
<td width=82%>An integer value set to the size of the <i>lpInData</i> argument</td>
</tr>
<tr valign=top>
<td width=18%><i>lpInData</i></td>
<td width=82%>Varies—see below</td>
</tr>
<tr valign=top>
<td width=18%><i>lpOutData</i></td>
<td width=82%>Varies—see below</td>
</tr>
</table><br>
<p>
The arguments <i>lpInData</i> and <i>lpOutData</i> are set according to which escape code is being sent to the printer. Because we want to set the printer to either landscape or portrait mode, we specify the <i>nEscape</i> argument as GETSETPRINTORIENT. The GETSETPRINTORIENT operation requires that the arguments <i>lpInData</i> and <i>lpOutData</i> point to a 20-byte structure. To actually set the orientation, the first long value in this structure must be set to the specific orientation you want to use.</p>
<p>
After the escape code (landscape or portrait) is sent to the printer, you must use the Windows API <b>AbortDoc</b> function. This function tells the printer to abort the print request. Calling the <b>AbortDoc</b> function sets the printer to the new mode. All subsequent output to the printer will then print in whichever print orientation you selected. This means that you may have to issue another <b>Escape</b> statement to reset the printer to portrait mode to return the printer to its default state.</p>
<h2>Example Program</h2>
<p>
This program shows how to set the printer to landscape (or portrait) mode.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant </b>and <b>Declare</b> statements to the General Declarations section of Form1 (note that each <b>Declare</b> statement must be typed as a single line of code):<pre><code>Private Declare Function AbortDoc Lib "GDI" (ByVal hDC As Integer) As Integer
Private Declare Function Escape Lib "GDI" (ByVal hDC As Integer, ByVal
 &nbsp; nEscape As Integer, ByVal nCount As Integer, lpInData As Any, lpOutData As
 &nbsp; Any) As Integer
Const PORTRAIT = 1
Const LANDSCAPE = 2
Const GETSETPAPERORIENT = 30
Const NULLVALUE = 0&amp;
</code></pre>
</li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default. Set its <b>Caption</b> property to "Landscape".<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; PrintOrient LANDSCAPE, "This is landscape printing."
End Sub
</code></pre>
</li>
<li>
Add a second <b>Command Button</b> control to Form1. Command2 is created by default. Set its <b>Caption</b> property to "Portrait".<br><br></li>
<li>
Add the following code to the Click event for Command2:<pre><code>Private Sub Command2_Click()
 &nbsp;&nbsp; PrintOrient PORTRAIT, "This is portrait printing."
End Sub
</code></pre>
</li>
<li>
Create a new procedure called <b>PrintOrient</b>. Add the following code to this procedure:<pre><code>Sub PrintOrient(Mode As Integer, PrintThis As String)
 &nbsp;&nbsp; Dim Orient As OrientStructure
 &nbsp;&nbsp; Dim Ret As Integer
 &nbsp;&nbsp; Dim X As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; Printer.Print ""
 &nbsp;&nbsp; Orient.Orientation = Mode
 &nbsp;&nbsp; X = Escape(Printer.hDC, GETSETPAPERORIENT, Len(Orient), Orient, NULLVALUE)
 &nbsp;&nbsp; On Error Resume Next
 &nbsp;&nbsp; Ret = AbortDoc(Printer.hDC)
 &nbsp;&nbsp; On Error Resume Next
 &nbsp;&nbsp; 
 &nbsp;&nbsp; Printer.EndDoc
 &nbsp;&nbsp; Printer.Print PrintThis
 &nbsp;&nbsp; Printer.EndDoc
End Sub
</code></pre>
</li>
<li>
From the Visual Basic Insert menu, click Module to create a new module. Module1.Bas is created by default.<br><br></li>
<li>
Add the following Type structure to Module1.Bas:<pre><code>Type OrientStructure
 &nbsp;&nbsp; Orientation As Long
 &nbsp;&nbsp; Pad As String * 16
End Type
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing F5. Click the Landscape command button to print a test sheet in landscape mode. Next, click the Portrait command button to print a test sheet in portrait mode. Notice that each time you change the orientation of the printer, a blank sheet of paper is <i>not</i> ejected needlessly.</p>
<h2>Additional References</h2>
<p>
Knowledge Base Q113236. "How to Add Print Preview to Visual Basic Applications."</p>
<p>
Knowledge Base Q80185. "How to Set Landscape or Portrait for Printer from VB App."</p>
<p>
"Managing Your Print Jobs, PART 2: Providing the Cancel Print Form." <i>Inside Visual Basic</i>. (MSDN Library, Periodicals)</p>
<p>
"A Print Preview Program for Visual Basic." <i>Inside Visual Basic</i>. (MSDN Library, Periodicals)</p>
<p>
"Querying Windows for Printer Information." <i>Inside Visual Basic</i>. (MSDN Library, Periodicals)</p>
</BODY>
</HTML>
