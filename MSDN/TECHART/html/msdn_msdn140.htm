<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 140: Identifying CD-ROM Drives</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn140"></a></sup>Tip 140: Identifying CD-ROM Drives</h1>
<p>
July 1, 1995</p>
<h2>Abstract</h2>
<p>
Within your Visual Basic® application, you can determine whether an attached drive is actually a CD-ROM drive. This article explains how you can identify a CD-ROM drive in Visual Basic.</p>
<h2>Finding All CD-ROM Drives Attached to the Computer System</h2>
<p>
From within a Visual Basic® application program, you can determine whether a disk drive is actually a CD-ROM drive. To do this, however, you need to use a special dynamic-link library (DLL) called VBASM.DLL.</p>
<p>
The VBASM.DLL dynamic-link library allows you to perform low-level routines that Visual Basic itself cannot perform. Written entirely in assembly language, VBASM is available in the Microsoft® Development Library. (See Additional References at the end of this article.)</p>
<p>
The example program below tests each possible disk drive from 0 through 25 (for a total of 26 possible disk drives) to see whether that particular drive is a CD-ROM drive. The program does this by calling a low-level Int 2Fh multiplex interrupt function.</p>
<p>
Function 150Bh, Int 2Fh, tells you whether or not the specified disk drive is a valid CD-ROM drive. To call this function, you set the AX register to 150Bh and the CX register to the number of the disk drive you want to check. The function will return with the BX register set to ADADh if the MSCDEX.EXE device driver (that is, the CD-ROM driver) is installed, and the AX register is set to a nonzero value if the specified disk is a CD-ROM drive. It is, therefore, simply a matter of testing each possible disk drive, from 0 through 25, to determine exactly how many CD-ROM drives are attached to the computer system.</p>
<h2>Example Program</h2>
<p>
This program tests each installed disk drive to determine whether it is a CD-ROM drive. In addition, the drive letter of each CD-ROM drive is displayed in the <b>Text Box</b> along with the total number of CD-ROM drives that the program found.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default. Set its <b>MultiLine</b> property to True.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim I As Integer
 &nbsp;&nbsp; Dim DriveType As Integer
 &nbsp;&nbsp; Dim Drive As String * 2
 &nbsp;&nbsp; Dim TotalCDDrives As Integer
 &nbsp;&nbsp; Dim Regs As VBREGS
 &nbsp;&nbsp; 
 &nbsp;&nbsp; TotalCDDrives = 0
 &nbsp;&nbsp; Text1.Text = ""
 &nbsp;&nbsp; 
 &nbsp;&nbsp; For I = 0 To 25
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Regs.AX = &amp;H150B
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Regs.BX = &amp;H0
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Regs.CX = I
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Call vbInterrupt(&amp;H2F, Regs, Regs)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If (Regs.BX = &amp;HADAD) Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print Regs.AX
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If (Regs.AX &lt;&gt; 0) Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TotalCDDrives = TotalCDDrives + 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Text1.Text = Text1.Text &amp; Chr$(I + 65) &amp; " is a CD-ROM drive" &amp; 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Chr$(13) &amp; Chr$(10)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; Next I
 &nbsp;&nbsp; If (TotalCDDrives = 0) Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Text1.Text = Text1.Text &amp; "No CD-ROM drives were found."
 &nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Text1.Text = Text1.Text &amp; Chr$(13) &amp; Chr$(10) &amp; Str$(TotalCDDrives) &amp; 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "CD-ROM drives were found."
 &nbsp;&nbsp; End If
 &nbsp;&nbsp; 
End Sub
</code></pre>
</li>
<li>
Retrieve the VBASM.DLL and VBASM.TXT files from the Development Library. Copy the VBASM.DLL file to the \WINDOWS\SYSTEM directory.<br><br></li>
<li>
Add a new BAS module to your project. Copy the VBASM.TXT file to this new BAS module.</li>
</ol>
<p>
Run the example program by pressing <small>f5</small>. Click the command button. In the <b>Text Box </b>control, the program will display the drive letter of each CD-ROM drive found installed in the computer system, in addition to a total count of the number of attached CD-ROM drives.</p>
<h2>Additional References</h2>
<p>
"Detecting CD-ROM Drives." (MSDN Library Archive, Technical Articles, Ask Dr. GUI, Ask Dr. GUI #7)</p>
<p>
"DRIVES: Determines Drive and File System Type." (MSDN Library, Product Samples)</p>
<p>
Knowledge Base Q105922. "How to Determine Drive Types in Windows."</p>
</BODY>
</HTML>
