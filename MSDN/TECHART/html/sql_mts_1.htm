<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft Transaction Server Features at a Glance</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1>Microsoft Transaction Server Features at a Glance</h1>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=29%><b>Feature</b></td>
<td class=label colspan=2 width=71%><b>Description</b></td>
</tr>
<tr valign=top>
<td colspan=3 width=100%><b>Application server development</b></td>
</tr>
<tr valign=top>
<td width=29%>Accessible three-tier application model</td>
<td colspan=2 width=71%>Developers build distributed business solutions from software components.<p>
Services separate network programming and basic server functionality from business logic.</p>
<p>
Applications can be built as "single user" but deployed&nbsp; as "multiuser."</p>
</td>
</tr>
<tr valign=top>
<td width=29%>ActiveX language support</td>
<td colspan=2 width=71%>Transaction Server supports tools that produce ActiveX DLLs, including Visual&nbsp;C++, Visual&nbsp;Basic, and Visual&nbsp;J++.</td>
</tr>
<tr valign=top>
<td width=29%>Two new APIs and two new interfaces</td>
<td colspan=2 width=71%>ActiveX developers already skilled in COM must learn only two new APIs to deploy solutions in the Transaction Server run-time environment.<p>
Extensive knowledge of COM APIs and the Win32® application programming interface is not required.</p>
<p>
Supports <b>CoCreateInstance</b> and <b>Create Object</b>, the two common ActiveX APIs used in Visual&nbsp;C++ and Visual&nbsp;Basic, respectively.</p>
</td>
</tr>
<tr valign=top>
<td width=29%>Automatic thread and process management</td>
<td colspan=2 width=71%>Developers do not have to create processes or threads as part of their application.</td>
</tr>
<tr valign=top>
<td width=29%>Object instance management</td>
<td colspan=2 width=71%>Provides just-in-time object activation, allowing server resources to be used efficiently in high-performance applications.</td>
</tr>
<tr valign=top>
<td width=29%>Component packaging</td>
<td colspan=2 width=71%>Packages provide an easy mechanism to collect components into a single application unit, with common security, management, and deployment characteristics.</td>
</tr>
<tr valign=top>
<td width=29%>Database connection pool</td>
<td colspan=2 width=71%>Manages a pool of database connections that can be shared by multiple clients.</td>
</tr>
<tr valign=top>
<td width=29%>Shared Property Manager</td>
<td colspan=2 width=71%>Multiple concurrent users can easily share global resources.</td>
</tr>
<tr valign=top>
<td width=29%>Sample applications as learning tools</td>
<td colspan=2 width=71%>Sample bank is a simple transactional database application that demonstrates how to use Microsoft Transaction Server APIs.<p>
Hockey is a simple multiuser game that shows nontransactional components managing shared state.</p>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=97%><b>Mainframe-class reliability</b></td>
<td width=3%></td>
</tr>
<tr valign=top>
<td width=29%>Automatic transactions through MS DTC</td>
<td colspan=2 width=71%>Integration with the Microsoft Distributed Transaction Coordinator provides a robust transaction management infrastructure.<p>
This transaction processing infrastructure enables high-performance server applications.</p>
<p>
Transaction support is transparent to the programmer.</p>
</td>
</tr>
<tr valign=top>
<td width=29%>Process isolation</td>
<td colspan=2 width=71%>Administrators can configure components across systems processes for enhanced integrity.</td>
</tr>
<tr valign=top>
<td width=29%>Distributed security service</td>
<td colspan=2 width=71%>Transaction Server leverages Windows&nbsp;NT security to control application access and use.</td>
</tr>
<tr valign=top>
<td colspan=2 width=97%><b>Deployment choices</b></td>
<td width=3%></td>
</tr>
<tr valign=top>
<td width=29%>Integration with DCOM</td>
<td colspan=2 width=71%>Developers and administrators can deploy distributed component applications using standard technology.</td>
</tr>
<tr valign=top>
<td width=29%>Integration with Microsoft Internet Information Server</td>
<td colspan=2 width=71%>Developers can build distributed applications using HTML, HTTP, and Active Server Pages.</td>
</tr>
<tr valign=top>
<td width=29%>Support for multiple databases and resource managers</td>
<td colspan=2 width=71%>The architecture supports multiple types of resource managers, including relational databases from different software vendors, file systems, and document storage systems.</td>
</tr>
<tr valign=top>
<td width=29%>Integration with Microsoft SQL&nbsp;Server</td>
<td colspan=2 width=71%>Microsoft SQL&nbsp;Server supports the OLE transactions two-phase commit protocol, for fast Transaction Server applications.<p>
Integration of MS DTC with SQL Enterprise Manager provides common management for SQL&nbsp;Server and Transaction Server applications.</p>
</td>
</tr>
<tr valign=top>
<td width=29%>"Fat" and "thin" client support</td>
<td colspan=2 width=71%>Transaction Server applications can be accessed by Win32 "fat" clients and HTML "thin" clients at the same time.</td>
</tr>
<tr valign=top>
<td width=29%>No client footprint</td>
<td colspan=2 width=71%>Client applications require no client libraries or client run time.</td>
</tr>
<tr valign=top>
<td width=29%>Dynamic configuration</td>
<td colspan=2 width=71%>New clients and servers can be dynamically added and dropped from a distributed application.</td>
</tr>
<tr valign=top>
<td colspan=2 width=97%><b>Management</b></td>
<td width=3%></td>
</tr>
<tr valign=top>
<td width=29%>Transaction Server Explorer</td>
<td colspan=2 width=71%>GUI management console<p>
Easy deployment, with the ability to:
<ul type=disc>
<li>
Create packages<br><br></li>
<li>
Install components<br><br></li>
<li>
Install packages<br><br></li>
<li>
Export packages across servers<br><br></li>
<li>
Configure transaction support<br><br></li>
<li>
Configure security</li>
</ul>
<p>
Easy management, with the ability to:
<ul type=disc>
<li>
Manage transactions<br><br></li>
<li>
Monitor transactions<br><br></li>
<li>
Resolve transactions<br><br></li>
<li>
View transaction statistics<br><br></li>
<li>
View trace messages<br><br></li>
<li>
Manage components</li>
</ul>
</td>
</tr>
</table><br>
</BODY>
</HTML>
