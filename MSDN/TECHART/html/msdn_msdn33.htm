<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 33: Capitalizing Words in a String</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn33"></a></sup>Tip 33: Capitalizing Words in a String</h1>
<p>
Created: March 1, 1995</p>
<h2>Abstract</h2>
<p>
Visual Basic® offers many functions that can be used to manipulate text strings. Using the <b>LCase</b> and <b>UCase</b> functions, you can change the characters in a string to all lowercase or all uppercase letters. This article shows how you can convert the first letter of each word in a string to a capital letter.</p>
<h2>Converting Characters to Uppercase</h2>
<p>
When you want to convert a string to all lowercase or all uppercase letters, you can use the <b>LCase</b> and <b>UCase</b> functions, respectively. <b>LCase</b> converts the text in the specified string to all lowercase characters, while <b>UCase</b> converts the text to all uppercase letters.</p>
<p>
The <b>Mid</b> function can be used to examine a particular string within a larger string. You can use <b>Mid</b> to extract one or more characters from a larger string, manipulate the characters in some manner, and the old characters are replaced with the newly modified letters.</p>
<p>
Another Visual Basic® function used to manipulate text strings is the <b>InStr</b> function, which can be used to find a specific character within a string.</p>
<p>
By combining the <b>InStr</b>, <b>Mid</b>, and <b>UCase</b> functions, you can selectively convert parts of a string to uppercase letters.</p>
<h2>Example Program</h2>
<p>
The following Visual Basic program converts the sentence in the first text box so that each word is capitalized. 
<ol>
<li>
Start a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add a Text Box control to Form1. Text1 is created by default. Set its <b>MultiLine</b> property to True.<br><br></li>
<li>
Add a second Text Box control to Form1. Text2 is created by default. Set its <b>MultiLine</b> property to True.<br><br></li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Sub Form_Load()
 &nbsp;&nbsp; Text1.Text = "microsoft visual basic is a fun"
 &nbsp;&nbsp; Text1.Text = Text1.Text + " programming language."
 &nbsp;&nbsp; Text2.Text = CapAllWords(Text1.Text)
End Sub
</code></pre>
</li>
<li>
Create the new function shown below:<pre><code>Function CapAllWords(ByVal MyString As String) As String
 &nbsp;&nbsp; Dim PosSpc As Integer&nbsp;&nbsp; 
 &nbsp;&nbsp; Mid(MyString, 1, 1) = UCase(Mid(MyString, 1, 1))
 &nbsp;&nbsp; PosSpc = InStr(MyString, " ")
 &nbsp;&nbsp; While PosSpc &lt;&gt; 0
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mid(MyString, PosSpc + 1, 1) = UCase(Mid(MyString, PosSpc + 1, 1))
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PosSpc = InStr(PosSpc + 1, MyString, " ")
 &nbsp;&nbsp; Wend
 &nbsp;&nbsp; CapAllWords = MyString
End Function
</code></pre>
</li>
</ol>
<p>
When you execute this sample program, Visual Basic displays a lowercase string in the first text box. The first character of each word in this sentence is then converted to a capital letter. The converted string is shown in the second text box.</p>
</BODY>
</HTML>
