<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Office Compatible 97--Getting Started</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_getstart"></a>Office Compatible 97—Getting Started</h1>
<p>
by Ross Comer<br>
Development Lead, Microsoft Office Compatible</p>
<p>
June 1996</p>
<h2>Abstract</h2>
<p>
This article provides a detailed description of how to start using Office Compatible.</p>
<h2>Description</h2>
<p>
Office Compatible is part of the Microsoft Office package. Other applications may take advantage of Office Compatible features if Microsoft Office has been installed on the computer. Applications should be written to degrade gracefully if Microsoft Office is not installed.</p>
<h2>C Interface</h2>
<p>
To use Office Compatible, you must first locate and LoadLibrary the msoc.dll. Msoc.dll is installed as part of the Microsoft Office directory tree. The registry value HKEY_LOCAL_MACHINE\SOFTWARE\\Microsoft\\Shared Tools\\msoc.dll\Path contains the full path to the msoc.dll. Using this path, LoadLibrary can be used to load the DLL.</p>
<p>
Once the DLL has been loaded, the address of the exported procedure CreateOfficeCompatible can be looked up and the procedure called. CreateOfficeCompatible will create a new IOfficeCompatible object which can then be used to access all other Office Compatible features.</p>
<p>
Here is sample code that demonstrates loading the Office Compatible DLL:</p>
<pre><code>IofficeCompatible vpOC;

BOOL FLoadOfficeCompatible()
{
 &nbsp; HKEY hkResult;
 &nbsp; char szDLLPath[MAX_PATH];

 &nbsp; vpOC = NULL;
 &nbsp; szDLLPath[0] = 0;

 &nbsp; if (RegOpenKeyEx(HKEY_LOCAL_MACHINE, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "SOFTWARE\\Microsoft\\Shared Tools\\msoc.dll", 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0, KEY_READ, &amp;hkResult) == ERROR_SUCCESS)
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; DWORD cchPath = MAX_PATH;

 &nbsp;&nbsp;&nbsp;&nbsp; if (RegQueryValueEx(hkResult, (LPSTR) "Path", NULL, NULL, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (LPBYTE)szDLLPath, &amp;cchPath) != ERROR_SUCCESS)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; szDLLPath[0] = 0;
 &nbsp;&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp;&nbsp;&nbsp; RegCloseKey(hkResult);
 &nbsp; }

 &nbsp; // Try to load msoc.dll from the directory specified in the registry
 &nbsp; if ((m_hinstOC = LoadLibrary(szDLLPath)) == NULL)
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; // Otherwise try to find msoc.dll on the path
 &nbsp;&nbsp;&nbsp;&nbsp; if ((m_hinstOC = LoadLibrary(MSOC97DLL)) == NULL)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return FALSE; // failed to load library
 &nbsp; }

 &nbsp; // Declare pfnCreateOfficeCompatible to hold CreateOfficeCompatible procedure
 &nbsp; HRESULT (__stdcall *pfnCreateOfficeCompatible)(LPCWSTR, LPCWSTR, IOfficeCompatible**);

 &nbsp; pfnCreateOfficeCompatible = 
 &nbsp;&nbsp;&nbsp;&nbsp; (HRESULT (__stdcall *)(LPCWSTR, LPCWSTR, IOfficeCompatible**)) 
 &nbsp;&nbsp;&nbsp;&nbsp; GetProcAddress(m_hinstOC, "_CreateOfficeCompatible@12");

 &nbsp; if (pfnCreateOfficeCompatible == NULL)
 &nbsp;&nbsp;&nbsp;&nbsp; goto error;
 &nbsp; 
 &nbsp; // pszAppName should be the name of the application
 &nbsp; // pszExeName should be name of the application executable
 &nbsp; if (FAILED(pfnCreateOfficeCompatible(pszAppName, pszExeName, &amp;vpOC)))
 &nbsp; {
error:
 &nbsp;&nbsp;&nbsp;&nbsp; FreeLibrary(m_hinstOC);
 &nbsp;&nbsp;&nbsp;&nbsp; m_hinstOC = NULL;
 &nbsp;&nbsp;&nbsp;&nbsp; vpOC = NULL;
 &nbsp;&nbsp;&nbsp;&nbsp; return FALSE;
 &nbsp; }
 &nbsp; 
 &nbsp; return TRUE;
}
</code></pre>
<p>
Once you are done using the IOfficeCompatible object, it should be freed by calling the Release method. For example:</p>
<pre><code>&nbsp;&nbsp;&nbsp;vpOC-&gt;Release(); // Free the IOfficeCompatible object
</code></pre>
<h2>Automation Interface</h2>
<p>
You can also access Office Compatible through automation interfaces. </p>
<p>
As with the C model, establish the application as an Office Compatible user. Use CreateObject to return an application object, using the following call.</p>
<pre><code>&nbsp;&nbsp;&nbsp;Set OC = CreateObject("OfficeCompatible.Application")
</code></pre>
<p>
Initialize the object using the following call.</p>
<pre><code>&nbsp;&nbsp;&nbsp;OC.Init "AppName", "Application Display Name"
</code></pre>
<p>
Once you have called Init on the object, you can use the OC object to access all Office Compatible features.</p>
</BODY>
</HTML>
