<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A Web Application for Handheld Transaction-Processing Clients</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_hndclint"></a>A Web Application for Handheld Transaction-Processing Clients</h1>
<p>
Steve Kirk<br>
Microsoft Corporation</p>
<p>
September 1997</p>
<p>
<OBJECT id=sample1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"
	width=0 height=0 hspace=0>
<PARAM name="Command" value="Sample">
<PARAM name="Item1" value="Technical Articles Sample">
<PARAM name="Item2" value="5163">
</OBJECT><a href="javascript:sample1.Click()">Click to copy the files in the HandClient sample application.</a></p>
<h2>Introduction</h2>
<p>
Now is the time to create a new wave of Web applications that integrate teams of mobile personnel carrying handheld computers. Handheld Web technologies are superior to voice, paging, and e-mail technologies for many types of team coordination because Web technologies support structured transactions involving highly detailed information. This article discusses the issues that you will face as you develop transaction-processing Web clients for handheld computers running Microsoft® Windows® CE and describes a mobile technician's interface to a corporate helpdesk system. The accompanying sample will become part of the HelpDesk sample, which is a comprehensive system that spans several technologies (see <a href="msdn_hlpdskov.htm">"The HelpDesk Site Sample: Overview of an Automated Solution"</a>). The handheld interface enables a mobile technician to be completely integrated with the workgroup without being tethered by a network cable. The technician can log on to a local area network (LAN) via a remote access server (RAS) using a cellular, radio-frequency (RF), or conventional-telephone connection and can access the intranet server with Pocket Internet Explorer. The sample was built for use on handheld computers running Microsoft Windows CE version 1.0 with Microsoft Pocket Internet Explorer 1.1.</p>
<h2>A Thin Client Platform</h2>
<p>
Steel yourself with a vision of the potential of these applications before you start to build one because you won't be able to use all of the technologies that you can use when building for desktop clients. In fact, a Web application for Windows CE 1.0 and Pocket Internet Explorer 1.1 uses very modest means. For a complete listing of unsupported Internet technologies and HTML tags see "Unsupported Internet Technology with Pocket Internet Explorer" (MSDN Library, Knowledge Base article Q161319) and " Unsupported HTML Tags for Pocket Internet Explorer" (MSDN Library, Knowledge Base article Q158479). The following Internet technologies are some of those not supported by Pocket Internet Explorer 1.1 on Windows CE 1.0 (for in-depth information about features and technologies supported by subsequent versions of Windows CE see <a href="http://www.microsoft.com/windowsce/">http://www.microsoft.com/windowsce/</a>):
<ul type=disc>
<li>
Scripting languages such as JavaScript, Microsoft Jscript™, and Microsoft Visual Basic®, Scripting Edition (VBScript)<br><br></li>
<li>
Java programs (supported by Pocket Internet Explorer for Windows CE 2.0)<br><br></li>
<li>
ActiveX™ controls<br><br></li>
<li>
Frames (supported by Pocket Internet Explorer for Windows CE 2.0)<br><br></li>
<li>
Style sheets<br><br></li>
<li>
Dynamic Hypertext Markup Language (DHTML)</li>
</ul>
<p>
Your Windows CE 1.0 client will also have to do without the following technologies.
<ul type=disc>
<li>
ActiveX Data Objects (ADO)<br><br></li>
<li>
Component Object Model (COM)—this is, however, supported by Windows CE 2.0<br><br></li>
<li>
Open Database Connectivity (ODBC)<br><br></li>
<li>
TrueType Fonts (this is, however, supported by Windows CE 2.0)</li>
</ul>
<p>
You are also limited to a four-level gray scale display at a resolution that ranges from 480 x 240 to 640 x 240. (Windows CE 2.0 supports 256 color and 16 shades of gray.)</p>
<p>
Handheld computers running Windows CE 1.0 are not able to act as LAN or wide-area-network (WAN) clients. This eliminates the option of using a PCMCIA network adapter and simply plugging into a corporate network jack. (Windows CE 2.0 has greatly expanded network capabilities; see <a href="http://www.microsoft.com/windowsce/">http://www.microsoft.com/windowsce/</a> for more information.)</p>
<p>
Given these limitations, the challenge is to create a full powered technician client within the Windows CE 1.0, Pocket Internet Explorer 1.1 platform. </p>
<h2>A Pretty Thick Server</h2>
<p>
In order to compensate for the thin client, the server does more work. Figure 1 shows the architecture of the HTTP server that supports the handheld client. The client performs no caching of form data so most interface transactions send an HTTP request to the server. The frequent requests are somewhat compensated for by the small size of the response that is generated. For a description of the COM objects in HelpDesk, see <a href="msdn_hdobj.htm">"Designing the HelpDesk Transaction-Processing Object Model."</a> For more on HTTP-based transaction-processing servers, see <a href="msdn_aspscale.htm">"Design Strategies for Scalable Active Server Applications"</a> and <a href="msdn_scrtproc.htm">"Scripting a Pair of Transaction Processors."</a> </p>
<p>
<img src="hndclint1.gif" border=0></p>
<p class=label>
<b>Figure 1. The HTTP server architecture</b></p>
<h2>The Technician Client Application</h2>
<p>
The technician client application allows the technician to:
<ul type=disc>
<li>
Log on to the HelpDesk system by e-mail alias.<br><br></li>
<li>
Browse assigned help requests and view the priority, relative request date, status, and description of the requests in the list. (For a detailed description of the request queue and the distribution of requests among technicians in the HelpDesk sample, see <a href="msdn_taskdist.htm">"Task Distribution in a Customer Service Application."</a>)<br><br></li>
<li>
Display detail data for a selected request. Display the request's customer e-mail alias, phone number, tracking ID, the request date, and a list of the dialogue between the customer and the technician.<br><br></li>
<li>
Send the requestor a text response, a standard text response, a text summary of a voice response, or a standard voice response.<br><br></li>
<li>
Change the status of a request: claim a request, release a request, apply for request resolution, or send a request to another technician.</li>
</ul>
<h3>Log On</h3>
<p>
The HelpDesk application is an intranet application and therefore uses Microsoft Windows NT® security. The client connects to the network through a cellular or RF link via RAS and is authenticated at that point. The technician opens the HelpDesk home page through Pocket Internet Explorer.</p>
<h3>Display Requests</h3>
<p>
Upon entering the HelpDesk Web site, the technician sees a list of assigned help requests similar to Figure 2. The request list is presented in a scrolling table that presents a maximum of 50 requests at a time in order to maintain a manageable list length and HTTP response size. First, Last, Next, and Previous command buttons provide list navigation. </p>
<p>
<img src="hndclint2.gif" border=0></p>
<p class=label>
<b>Figure 2. The request list</b></p>
<h3>Display Request Detail</h3>
<p>
Figure 3 shows the request detail interface. The history of the customer/technician dialog is presented as a list that can be browsed. Command buttons at the bottom of the history list present the options for the next action toward resolution.</p>
<p>
<img src="hndclint3a.gif" border=0></p>
<p>
<img src="hndclint3b.gif" border=0></p>
<p class=label>
<b>Figure 3. The request detail interface</b></p>
<h3>Send Response Options</h3>
<p>
The system provides four ways for the technician to respond to the customer. Technician responses and subsequent customer replies are maintained by the system in the request detail list.</p>
<h4>Send text response</h4>
<p>
The technician can compose a text message to the customer in the interface shown in Figure 4. When the message is submitted, the server application sends it via e-mail to the customer. </p>
<p>
<img src="hndclint4.gif" border=0></p>
<p class=label>
<b>Figure 4. The text response interface</b></p>
<h4>Send standard text response</h4>
<p>
The technician is able to select from a list of standard text responses to send to the customer via e-mail. Figure 5 shows the confirmation screen that the technician receives when sending a standard text response.</p>
<p>
<img src="hndclint5.gif" border=0></p>
<p class=label>
<b>Figure 5. A standard text response</b></p>
<h4>Save summary of conversation</h4>
<p>
The technician can submit a summary of a voice conversation with the customer through an interface similar to that in Figure 4.</p>
<h4>Send standard voice response</h4>
<p>
The technician is able to select from a list of standard recorded voice responses to send to the customer. The server application sends the response to the customer's phone.</p>
<h2>Conclusion</h2>
<p>
Although Pocket Internet Explorer and Windows CE 1.0 provide an implementation of Internet and client/server technologies that is modest when compared to desktop technologies, they provide enough power to enable Web-based transaction-processing systems. The power of these systems is fully realized when the handheld PC is combined with a wireless communications technology to remove the network tether and enable a new wave of applications that bring the power of transaction processing to mobile workgroups. This sample describes a client that is based on current handheld Web technology and implements a set of functionality that will be implemented on other platforms as part of the HelpDesk sample.</p>
</BODY>
</HTML>
