<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 127: Stamping Files with the Current Date and Time</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn127"></a></sup>Tip 127: Stamping Files with the Current Date and Time</h1>
<p>
July 1, 1995</p>
<h2>Abstract</h2>
<p>
While your Microsoft® Visual Basic® program is running, you may need to update the date and time stamp for a particular file. This article explains how you can set a file's date and time stamp to the current date and time setting.</p>
<h2>Manipulating a File's Date and Time Information</h2>
<p>
The <b>FileDateTime</b> function in Microsoft® Visual Basic® can tell you when a specific file was first created or last modified. <b>FileDateTime</b> returns both the date and time information as a string variable. However, Visual Basic does not offer a function to set a file's date and time information.</p>
<p>
The example program below shows how to update the date and time information for an already existing file. First, you need to make sure the file exists. The <b>Dir$</b> function will return a NULL or empty string if it cannot find the specified file on the disk.</p>
<p>
When you know the file exists, you can use the Visual Basic file manipulation commands—<b>Open</b>, <b>Get</b>, <b>Put</b>, and <b>Close</b>—to force the operating system to update the file's date and time stamp.</p>
<p>
The technique is straightforward. You simply open the file, use the <b>Get</b> statement to retrieve the first byte from the file, and then use the <b>Put</b> statement to write that same byte back to the file. When you close the file, Microsoft Windows® automatically updates the file's date and time information.</p>
<h2>Example Program</h2>
<p>
This program shows how to update a file's date and time information from within a Visual Basic application.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim FName As String
 &nbsp;&nbsp; Dim F As String
 &nbsp;&nbsp; Dim AnyThing As Integer
 &nbsp;&nbsp; Dim X As Integer
 &nbsp;&nbsp; 
 &nbsp;&nbsp; FName = "c:\test.doc"
 &nbsp;&nbsp; F = Dir$(FName)
 &nbsp;&nbsp; If F = "" Then GoTo NoSuchFile
 &nbsp;&nbsp; 
 &nbsp;&nbsp; On Error GoTo FileError
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X = FreeFile
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Open FName For Binary As X
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Get X, 1, AnyThing
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Put X, 1, AnyThing
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Close X
 &nbsp;&nbsp; MsgBox "New time/date is: " &amp; FileDateTime("c:\test.doc"), 16, "OK"
 &nbsp;&nbsp; Exit Sub
FileError:
 &nbsp;&nbsp; MsgBox "Unable to time-stamp file", 16, "Error"
 &nbsp;&nbsp; Exit Sub
NoSuchFile:
 &nbsp;&nbsp; MsgBox "That file does not exist!", 16, "Error"
End Sub
</code></pre>
</li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This example program assumes you have a file named TEST.DOC in the root directory of drive C.</p>
<p>
Run the example program by pressing F5. Click the command button to update the file's date and time information.</p>
<h2>Additional References</h2>
<p>
Knowledge Base Q113958. "BUG: VBApp FileCopy Updates Destination File's Date &amp; Time Stamp."</p>
<p>
Knowledge Base Q96098. "FileDateTime Doesn't Include Time If File Time Is Midnight."</p>
</BODY>
</HTML>
