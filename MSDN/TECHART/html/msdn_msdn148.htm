<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 148: Using OLE Automation to Check Spelling</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn148"></a></sup>Tip 148: Using OLE Automation to Check Spelling</h1>
<p>
August 31, 1995</p>
<h2>Abstract</h2>
<p>
Microsoft® Word for Windows® includes a spelling checker that you can invoke from within your Microsoft Visual Basic® application. This article shows how you can use OLE Automation in a Visual Basic program to check the spelling of text.</p>
<h2>Spell Checking Text in Visual Basic</h2>
<p>
Within a Microsoft® Visual Basic® program, you can use Microsoft Word for Windows® as an OLE Automation server to check the spelling in a <b>Text Box</b> control. Your Visual Basic program can send commands to Microsoft Word, which in turn carries out those commands. When the spelling checker has finished its work, the focus of control returns to your Visual Basic program.</p>
<p>
In the example program below, the contents of the <b>Text Box</b> control need to be checked for spelling. To do this, you execute a <b>CreateObject</b> statement to tell Microsoft Windows to run Microsoft Word. Next, you need to tell Word to create a new document and to copy the text from the <b>Text Box</b> to this document. You accomplish both of these functions by running the WordBasic <b>FileNew</b> and <b>Insert</b> commands, respectively.</p>
<p>
After the text has been copied to the Word document, it can be checked for spelling. You run the <b>ToolsSpelling</b> command in Microsoft Word to start the spelling checker.</p>
<p>
When you have finished checking the document for spelling errors, click the OK command button to close the spelling checker in Microsoft Word. Then, run the <b>EditSelectAll</b> and <b>FileExit</b> commands to copy the newly revised text back to your Visual Basic <b>Text Box,</b> which ends the OLE Automation process.</p>
<h2>Example Program</h2>
<p>
This program shows how to use the spelling checker in Microsoft Word from within a Visual Basic application.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default. Set its <b>MultiLine</b> property to True.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim WB As Object
 &nbsp;&nbsp; Dim OldText As String
 &nbsp;&nbsp; Dim NewText As String
 &nbsp;&nbsp; Dim I As Integer
 &nbsp;&nbsp; Dim CH As String * 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; NewText = ""
 &nbsp;&nbsp; On Error Resume Next
 &nbsp;&nbsp; Set WB = CreateObject("Word.Basic")
 &nbsp;&nbsp; 
 &nbsp;&nbsp; If Err Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox Error$
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit Sub
 &nbsp;&nbsp; End If
 &nbsp;&nbsp; 
 &nbsp;&nbsp; WB.FileNew
 &nbsp;&nbsp; WB.Insert Text1.Text
 &nbsp;&nbsp; WB.ToolsSpelling
 &nbsp;&nbsp; WB.EditSelectAll
 &nbsp;&nbsp; OldText = WB.selection()
 &nbsp;&nbsp; WB.FileExit 2
 &nbsp;&nbsp; 
 &nbsp;&nbsp; For I = 1 To Len(OldText)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CH = Mid$(OldText, I, 1)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NewText = NewText + CH
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If CH = Chr$(13) Then NewText = NewText + Chr$(10)
 &nbsp;&nbsp; Next I
 &nbsp;&nbsp; 
 &nbsp;&nbsp; Text1.Text = NewText
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing F5. Type some text in the <b>Text Box</b> control and then click the <b>Command Button</b> control. Visual Basic runs Microsoft Word, copies the text from the <b>Text Box</b> control to a new document, and invokes Word's spelling checker. After you have finished checking the text, the newly revised text is copied back to the <b>Text Box</b> control.</p>
</BODY>
</HTML>
