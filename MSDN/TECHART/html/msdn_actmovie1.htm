<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the ActiveMovie Control in Web Pages, Part I: HTML Tags</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_actmovie1"></a></sup>Using the ActiveMovie Control in Web Pages, Part I: HTML Tags</h1>
<p>
Mark McCulley <br>
Developer Technology Engineer, Microsoft Corporation</p>
<p>
September 27, 1996</p>
<p>
<OBJECT id=sample1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"
	width=0 height=0 hspace=0>
<PARAM name="Command" value="Sample">
<PARAM name="Item1" value="Technical Articles Sample">
<PARAM name="Item2" value="5045">
</OBJECT><a href="javascript:sample1.Click()">Click to open or copy the files in the ActiveMovie OCX Help file.</a></p>
<h2>Abstract</h2>
<p>
The Web is rapidly evolving from a text-based environment to one rich in images, sounds, and video. First-generation browsers used external programs to render multimedia content based on the file type of the media. Newer browsers still use external programs, but these programs are much more integrated with the host browsers. This provides more features and more control for Web designers and developers.</p>
<p>
The Microsoft® ActiveMovie™ control is a playback engine for the most popular media types, including MPEG audio and video, AVI video, WAV audio, and Apple® QuickTime® video. It's also an ActiveX™ control and presents a rich interface for scripting languages such as Visual Basic® Scripting Edition (VBScript) and JavaScript™.</p>
<p>
This article is the first installment of a two-part series. Part I discusses the HTML tags you can use with the ActiveMovie control. Part II is devoted to scripting the control with VBScript and JavaScript. For those of you just starting out as Web developers, I've also chronicled the various tools and information sources I used in writing this article. To get the most from this article, you should know a bit about HyperText Markup Language (HTML). You don't have to be a card-carrying HTML programmer or anything, but you should (like me) know at least enough to be dangerous.</p>
<h2>Introduction</h2>
<p>
The ActiveMovie control is an ActiveX control for Windows® 95 and Windows NT®. What is an ActiveX control? It's a reusable software component that adds specialized functionality to Web pages as well as to applications created with programming languages such as Visual C++® and Visual Basic. If you're not satisfied with this brief explanation, check out the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="msdn_ctrlfaq">
</object><a href=JavaScript:alink_1.Click()>"Frequently Asked Questions About Developing Web Pages Using ActiveX Controls"</a> for a more in-depth explanation. The ActiveMovie control plays the following types of media:
<ul type=disc>
<li>
MPEG video and audio (MPG, MPEG, MPV, MP2, MPA files)<br><br></li>
<li>
AVI video (AVI files)<br><br></li>
<li>
QuickTime video (MOV, QT files)<br><br></li>
<li>
WAV, AU, and AIFF audio files (WAV, AU, SND, AIF, AIFF files)</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The current release of ActiveMovie does not support playback of QuickTime VR or MIDI files, or files compressed with proprietary Apple codecs such as the RPZA codec.</p>
<p>
The best way to get acquainted with the ActiveMovie control is to jump right in and start experimenting. After reading this article, try cutting and pasting some of the example HTML code into your Web pages. Although most of the examples refer to MPEG movie files, you can just as easily play any of the media types listed above. Don't worry—you can't break anything!</p>
<h2>Read This, Get Free Stuff!</h2>
<p>
This section should provide you with pointers to everything you need to begin creating Web pages that use the ActiveMovie control. (I was going to title this section "Getting Started," but that sounds too much like one of those software manuals that you throw away as soon as you open the box.)</p>
<p>
The first thing you'll need is a browser. Microsoft Internet Explorer is the browser of choice to use with ActiveX controls. You can get the latest version of Internet Explorer from the Internet Explorer download.</p>
<p>
You'll also need the ActiveMovie control. If you did a full installation of Internet Explorer 3.0, you already have this control; otherwise, you can download it from the same Internet Explorer download area. If you're not sure what type of installation you performed for Internet Explorer, search your hard disk for a file named AMOVIE.OCX. It should be located in your Windows system directory (typically, \WINDOWS\SYSTEM). If you have the AMOVIE.OCX file in your system directory, you have the ActiveMovie control.</p>
<p>
The final tool you'll need is a text editor. Notepad will do just fine, but I suggest getting the Microsoft ActiveX Control Pad. This nifty tool is not only an HTML editor, but it also hosts ActiveX controls and provides an easy-to-use interface for setting control properties. If you plan on doing any ActiveX control scripting, this is a must-have tool! The ActiveX Control Pad is free for the asking (or clicking) on the ActiveX Control Pad on the Microsoft Site Builder Workshop Web site.</p>
<p>
By the way, the Site Builder Workshop Web site is a fabulous resource for anyone working with Web pages or ActiveX controls. It's chock full of tools, specifications, samples, and lots of other resources. Did I say it's all free for the asking?</p>
<h2>HTML Tags for Video and Audio Media</h2>
<p>
To include audio and video in your Web pages, there are four HTML tags that you can use:
<ul type=disc>
<li>
Insert Object tag: &lt;OBJECT&gt;<br><br></li>
<li>
Embed Object tag: &lt;EMBED&gt;<br><br></li>
<li>
Anchor tag: &lt;A&gt;<br><br></li>
<li>
Image tag: &lt;IMG&gt;</li>
</ul>
<p>
The &lt;OBJECT&gt; and &lt;EMBED&gt; tags are used to specify that the ActiveMovie control be used to play the media; with the &lt;IMG&gt; and &lt;A&gt; tags, the browser chooses a plug-in, control, or helper application to play the media. Before I go into the details of using each of these tags, I want to say something about standards.</p>
<h2>My Rap on Standards (Can't We All Just Get Along?)</h2>
<p>
I have a little confession to make. When I began this article, I knew very little about HTML tags. Oh sure, I knew conceptually what HTML was all about, but I hadn't really sat down and hacked out a Web page. I knew that there were standards committees and specifications for HTML 1.0 and HTML 2.0, as well as a vast quantity of existing HTML content. So I naïvely figured I could get the proper specification and easily determine the proper tags to use with video and audio media. Not!</p>
<p>
There are HTML standards, but standards have become one of the casualties of the Browser War between Microsoft and Netscape. Although there is a core set of tags supported by both Internet Explorer 3.0 and Netscape Navigator 3.0, each browser has its own set of extensions to HTML. Unless you're creating Web pages for an intranet where you know everyone is using the same browser, this difference in HTML support presents a dilemma. I'll provide some techniques for creating Web pages that work in both browsers.</p>
<h2>Insert Object Tag: &lt;OBJECT&gt;</h2>
<p>
The &lt;OBJECT&gt; tag inserts objects such as ActiveX controls and documents, Java applets, and other media plug-ins into HTML documents. This tag was created by the World Wide Web Consortium (W3C), an international consortium of institutions and corporations such as Microsoft, Netscape, and Sun Microsystems. The purpose of the W3C is to promote standards for interoperability between Web products by producing specifications and reference software. For more information about the World Wide Web Consortium, check out the <a href="http://www.w3.org/pub/WWW/">W3C Web site</a> at http://www.w3.org/pub/WWW/.</p>
<p>
The &lt;OBJECT&gt; tag allows you to specify a media file and a software component, as well as properties and parameters for displaying the media. It also allows you to specify an alternative for browsers that don't support a particular type of media. I'm not going to explain every nuance of using the &lt;OBJECT&gt; tag (it currently has almost 20 different attributes), but I will give you all of the basic information you need to use this tag to include the ActiveMovie control in your Web pages.</p>
<h3>Using the ActiveX Control Pad to Insert the ActiveMovie Control</h3>
<p>
The easiest way to include any ActiveX control in an HTML document is to use the ActiveX Control Pad. Here's how to insert the ActiveMovie control in an HTML document:
<ol>
<li>
Using the ActiveX Control Pad, open an existing HTML file or create a new HTML file.<br><br></li>
<li>
Move the text insertion cursor to the location in the HTML text where you want to insert the control. This should be within the body section of the HTML document.<br><br></li>
<li>
Select "Insert ActiveX Control" from the Edit menu, and select "ActiveMovie Control Object" from the list of available controls. Press OK.<br><br></li>
<li>
Close the Properties dialog box and the Edit ActiveX Control dialog box.</li>
</ol>
<p>
The ActiveX Control Pad will generate the following HTML code in your document:</p>
<pre><code>&lt;OBJECT ID="ActiveMovie1" WIDTH=267 HEIGHT=73
 CLASSID="CLSID:05589FA1-C356-11CE-BF01-00AA0055595A"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="_ExtentX" VALUE="7038"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="_ExtentY" VALUE="1931"&gt;
&lt;/OBJECT&gt;
</code></pre>
<p>
The next step is to associate a movie or audio file with the control by setting the <i>FileName</i> parameter. The following line of HTML code sets the value of the <i>FileName</i> parameter to an MPEG file named CYBERVIS.MPG:</p>
<pre><code>&lt;PARAM NAME="FileName" VALUE="cybervis.mpg"&gt;
</code></pre>
<p>
If the media file referenced by the <i>FileName</i> parameter is not in the same directory as the HTML file, you can specify a relative path. You can also reference files located anywhere on the Internet by specifying a Uniform Resource Locator (URL) for the <i>FileName</i> parameter. The following are examples of the three different ways to specify media files with the <i>FileName</i> parameter:</p>
<pre><code>&lt;PARAM NAME="FileName" VALUE="cybervis.mpg"&gt;
&lt;PARAM NAME="FileName" VALUE="../movies/cybervis.mpg"&gt;
&lt;PARAM NAME="FileName" VALUE="http://www.hollywood.com/movies/cybervis.mpg"&gt;
</code></pre>
<p>
The first example references a file residing in the same directory as the HTML file. The second example references a file in a directory named MOVIES that is at the same level as the directory containing the HTML file. The third example uses a URL to specify a file residing on the Internet.</p>
<p>
In addition to the <i>FileName</i> parameter, you also need to specify the size of the movie window with the <i>MovieWindowWidth</i> and <i>MovieWindowHeight</i> parameters. The easiest way to do this is by clicking on the icon that appears to the left of the &lt;OBJECT&gt; tag in the Control Pad. This will open the Properties dialog box. The Control Pad will calculate the proper size for the window for the movie you've specified and generate HTML code to set the <i>MovieWindowWidth</i> and <i>MovieWindowHeight</i> parameters. Here's the complete HTML for the &lt;OBJECT&gt; tag, with all the required parameters:</p>
<pre><code>&lt;OBJECT ID="ActiveMovie1" WIDTH=356 HEIGHT=328
 CLASSID="CLSID:05589FA1-C356-11CE-BF01-00AA0055595A"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="_ExtentX" VALUE="9419"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="_ExtentY" VALUE="8678"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="MovieWindowWidth" VALUE="352"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="MovieWindowHeight" VALUE="247"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="FileName" VALUE="cybervis.mpg"&gt;
&lt;/OBJECT&gt;
</code></pre>
<p>
Figure 1 illustrates the appearance of this HTML code in a Web page:</p>
<p>
<img src="actmovie1_1.gif" border=0></p>
<p class=label>
<b>Figure 1. ActiveMovie control embedded in Web page using &lt;OBJECT&gt; tag</b></p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;It's easy to test as you write HTML code if the page you're working on is loaded in your browser. After you make a change to your HTML document, save it, switch to the browser, and refresh the page. With the ActiveX Control Pad and Internet Explorer open, you can do this operation with a few keystrokes. Press CTRL+S to save the file in the ActiveX Control Pad, press ALT+TAB to switch to Internet Explorer, and then press F5 to refresh the page in Internet Explorer.</p>
<h3>What Does It All Mean?</h3>
<p>
I'm not talking about the meaning of life here—I'll be covering that in my next article. I'm divulging the meaning of the HTML source for the &lt;OBJECT&gt; tag. Some of this stuff looks pretty arcane. For example, consider the following fragment of code that was generated by the ActiveX Control Pad when inserting the ActiveMovie control:</p>
<pre><code>ID="ActiveMovie1"
CLASSID="CLSID:05589FA1-C356-11CE-BF01-00AA0055595A"
&lt;PARAM NAME="_ExtentX" VALUE="9419"&gt;
&lt;PARAM NAME="_ExtentY" VALUE="8678"&gt;
</code></pre>
<p>
The first line, the one that specifies the ID attribute, defines a document-wide identifier. This identifier can be used by other objects in the document to communicate with the ActiveMovie control. You can also use this identifier to specify a position within an HTML document as the destination of a hypertext link.</p>
<p>
The second line, the one that specifies the CLASSID parameter, identifies the implementation of the object. In this case, it specifies that the object referred to by the &lt;OBJECT&gt; tag is the ActiveMovie control. That long string of digits and letters is a 128-bit value known as a globally unique identifier (GUID). Where did this 128-bit value come from? There is a special software tool (GUIDGEN.EXE) that uses a carefully developed algorithm to create GUIDs.</p>
<p>
What are the odds of two developers creating the same GUID?: According to the documentation "about the same as two random atoms in the universe colliding to form a small California avocado mated to a New York City sewer rat." So don't worry.</p>
<p>
The last two lines contain parameters named <i>_ExtentX </i>and <i>_ExtentY. </i>I searched high and low, but can't find any information about these two parameters.</p>
<h3>What About the CODEBASE Attribute?</h3>
<p>
One of the attributes of the &lt;OBJECT&gt; tag is the CODEBASE attribute. This attribute can be used to identify locations on the Web where objects can be found and automatically downloaded by a browser. You don't need to use the CODEBASE attribute with the ActiveMovie control (or with many other Microsoft-supplied controls) because Internet Explorer will use the ActiveX Object Index automatically to find the control based on its class identifier (CLSID). For more information on automatic downloading of ActiveX controls, see the ActiveX Control FAQ mentioned earlier in this article.</p>
<h2>Embed Object Tag : &lt;EMBED&gt;</h2>
<p>
The &lt;EMBED&gt; tag was created by Netscape to support browser plug-ins. The difference between a plug-in and a helper application is in the level of integration with the browser. Helper applications are external to the browser, while plug-ins appear to the user as seamless extensions of the browser. A manifestation of this difference: Plug-ins are capable of rendering content directly within the browser window, while helper applications require a separate window to display content.</p>
<p>
While both Internet Explorer and Navigator support the &lt;EMBED&gt; tag, the level of support varies between the two browsers. The following line of HTML code will embed an MPEG file in a Web page and will display it properly in both browsers:</p>
<pre><code>&lt;EMBED SRC="cybervis.mpg" WIDTH=352 HEIGHT=260&gt;
</code></pre>
<p>
This code doesn't embed a control, it embeds a document (the MPEG file). The browser chooses which control (in the case of Internet Explorer) or plug-in (in the case of Navigator) to use to display the document. Internet Explorer will use the ActiveMovie control to display most types of audio and video media. Figure 2 illustrates the appearance of the ActiveMovie control in Internet Explorer using the &lt;EMBED&gt; tag:</p>
<p>
<img src="actmovie1_2.gif" border=0></p>
<p class=label>
<b>Figure 2. ActiveMovie control embedded in Web page using &lt;EMBED&gt; tag</b></p>
<p>
Compare this image to the previous image showing the appearance of a page using the &lt;OBJECT&gt; tag. There is no time display appearing on the page that uses the &lt;EMBED&gt; tag. The &lt;EMBED&gt; tag does not provide access to any control parameters.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Both Internet Explorer and Navigator require that you specify the size of the document you are embedding with the &lt;EMBED&gt; tag. However, each browser interprets this size information differently. For example, in Internet Explorer, the movie window is scaled if it doesn't match the specified size. In Navigator, the movie window is clipped.</p>
<p>
The following table lists additional parameters you can use with the &lt;EMBED&gt; tag: </p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=35%><b>Parameter</b></td>
<td class=label width=65%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=35%>CONTROLLER=TRUE(FALSE)</td>
<td width=65%>Specifies whether control buttons are shown or not. The default is TRUE. </td>
</tr>
<tr valign=top>
<td width=35%>LOOP=TRUE(FALSE)</td>
<td width=65%>Specifies whether playback will loop continuously. The default is FALSE. </td>
</tr>
<tr valign=top>
<td width=35%>AUTOPLAY=TRUE(FALSE)</td>
<td width=65%>Specifies whether playback will begin automatically when the page is loaded. The default is FALSE. </td>
</tr>
</table><br>
<h2>Anchor Tag: &lt;A&gt;</h2>
<p>
The &lt;A&gt; tag is the cornerstone of the World Wide Web. It's the tag used to create all types of links—links to locations within the same document, other documents, locations within other documents, and media resources such as images and sounds. While you can't explicitly code the &lt;A&gt; tag to use a specific control such as the ActiveMovie control, the &lt;A&gt; tag is supported by all Web browsers. If you want your readers to determine how the video is displayed and it doesn't matter that the video is rendered in a separate window, you may want to consider using the &lt;A&gt; tag. The following is a list of characteristics associated with using the &lt;A&gt; tag to include media resources in Web pages:
<ul type=disc>
<li>
Media is played by either a helper application determined by the media type or directly by the browser. If you installed the ActiveMovie control with Internet Explorer 3.0, the ActiveMovie control will be used to play audio and video files.<br><br></li>
<li>
The control does not actually appear until the user selects the link. Then the control appears in a separate window. You can't use the &lt;A&gt; tag to embed media in a Web page the way you can embed an image.<br><br></li>
<li>
You have no control over options such as whether transport controls (Play, Stop, Pause, and so on) are displayed with the ActiveMovie control.</li>
</ul>
<p>
Let's take a look at the code. The following HTML code uses the &lt;A&gt; tag to link to an MPEG movie file named CYBERVIS.MPG:</p>
<pre><code>Click &lt;A HREF="cybervis.mpg"&gt;here&lt;/A&gt; to play movie.
</code></pre>
<p>
Figure 3 illustrates the ActiveMovie control that comes up in a separate window when the link is selected:</p>
<p>
<img src="actmovie1_3.gif" border=0></p>
<p class=label>
<b>Figure 3. ActiveMovie control in a separate window</b></p>
<p>
The &lt;A&gt; tag works equally well with both Internet Explorer and Navigator. However, if you want more control over how the video is displayed by the browser or if you want the video to be embedded in the Web page, you should use the &lt;OBJECT&gt; tag.</p>
<h2>Image Tag: &lt;IMG&gt;</h2>
<p>
Although the &lt;IMG&gt; tag can be used to include video clips in a Web page, the ActiveMovie control is only indirectly involved in playing MPEG and QuickTime movies, and not at all involved in playing AVI files. It's difficult (if not impossible) to use the &lt;IMG&gt; tag with video media in a way that works well in both Internet Explorer and Navigator. In addition, the &lt;IMG&gt; tag does not work at all with audio media. For these reasons, I think the &lt;OBJECT&gt; and &lt;EMBED&gt; tags are much better choices for including audio and video on Web pages.</p>
<p>
In the interest of being as complete as possible, I'll give you a brief rundown on using the &lt;IMG&gt; tag with video media. The following line of HTML code uses the &lt;IMG&gt; tag with the DYNSRC attribute to include an MPEG movie on a Web page:</p>
<pre><code>&lt;IMG DYNSRC="cybervis.mpg"&gt;
</code></pre>
<p>
Navigator does not recognize the DYNSRC attribute, so you have to use the following code for that browser:</p>
<pre><code>&lt;IMG SRC="cybervis.mpg"&gt;
</code></pre>
<h2>Authoring for Both Internet Explorer and Navigator</h2>
<p>
Unless you're authoring pages for an intranet where everyone has the same browser, you definitely want to create HTML code that will display properly in the two most popular browsers, Internet Explorer and Navigator. Although Navigator does not provide native support for ActiveX controls such as the ActiveMovie control, the company NCompass Labs Inc. has developed a Navigator plug-in to host ActiveX controls. The plug-in comes in several flavors with different levels of support for hosting and scripting ActiveX controls. Check out the <a href="http://www.ncompasslabs.com/">NCompass Labs Web site</a> (http://www.ncompasslabs.com/) for detailed information about their products.</p>
<p>
I spent some time playing with one of the NCompass Labs plug-ins called ScriptActive and was able to create HTML code that successfully embedded the ActiveMovie control in both browsers. It's not as simple as you might want it to be because Navigator doesn't support embedding objects with the &lt;OBJECT&gt; tag. You need to use the &lt;EMBED&gt; tag as well. Here's the HTML code I created for a Web page that embeds the ActiveMovie control in both Internet Explorer and Navigator:</p>
<pre><code>&lt;!-- Begin Explorer Code --&gt;
&lt;OBJECT ID="ActiveMovie1" WIDTH=356 HEIGHT=328
 CLASSID="CLSID:05589FA1-C356-11CE-BF01-00AA0055595A"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="_ExtentX" VALUE="9419"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="_ExtentY" VALUE="8678"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="MovieWindowWidth" VALUE="352"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="MovieWindowHeight" VALUE="247"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="FileName" VALUE="cybervis.mpg"&gt;
&lt;!-- End Explorer Code --&gt;
&lt;!-- Alternative HTML Goes Here&nbsp; --&gt;
&lt;!-- Begin Navigator Code --&gt;
&lt;EMBED NAME="ActiveMovie1" WIDTH=356 HEIGHT=328
 CLASSID="CLSID:05589FA1-C356-11CE-BF01-00AA0055595A" SRC="ActiveMovie1.ODS"
 &nbsp;&nbsp; PARAM__ExtentX="9419"
 &nbsp;&nbsp; PARAM__ExtentY="8678"
 &nbsp;&nbsp; PARAM_MovieWindowWidth="352"
 &nbsp;&nbsp; PARAM_MovieWindowHeight="247"
 &nbsp;&nbsp; PARAM_FileName="c:\windows\desktop\Active~1\cybervis.mpg"&gt;
&lt;!-- End Navigator Code --&gt;
&lt;/OBJECT&gt;
</code></pre>
<p>
Note how the code for the &lt;EMBED&gt; tag is nested within the code for the &lt;OBJECT&gt; tag. An important characteristic of the &lt;OBJECT&gt; tag is its ability to allow an alternative for browsers that don't support a particular type of object. In this case, Navigator doesn't support the inclusion of any objects via the &lt;OBJECT&gt; tag and thus interprets the alternative specified with the &lt;EMBED&gt; tag. Internet Explorer fully supports the &lt;OBJECT&gt; tag and ignores the alternative HTML code.</p>
<p>
The &lt;OBJECT&gt; tag does not require that you use the &lt;EMBED&gt; tag in the alternative HTML code. If you're a hard-core Internet Explorer advocate, you could write alternative HTML code that gets your message across to Netscape users. For example, consider the following HTML code:</p>
<pre><code>&lt;!-- Begin Explorer Code --&gt;
&lt;OBJECT ID="ActiveMovie1" WIDTH=356 HEIGHT=328
 CLASSID="CLSID:05589FA1-C356-11CE-BF01-00AA0055595A"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="_ExtentX" VALUE="9419"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="_ExtentY" VALUE="8678"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="MovieWindowWidth" VALUE="352"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="MovieWindowHeight" VALUE="247"&gt;
 &nbsp;&nbsp; &lt;PARAM NAME="FileName" VALUE="cybervis.mpg"&gt;
&lt;!-- End Explorer Code --&gt;
&lt;!-- Alternative HTML Goes Here --&gt;
&lt;!-- Don't do this! --&gt;
Sorry dude, your browser can't play this media
because it does not support ActiveX controls.
&lt;/OBJECT&gt;
</code></pre>
<p>
This example illustrates why the alternative HTML part of the &lt;OBJECT&gt; tag is sometimes called the apology section. If you're not careful about how you use the apology section, you can create Web pages that are pretty obnoxious when displayed in the "wrong" browser. Personally, I appreciate Web pages that at least make an honest attempt to be fully functional in all browsers.</p>
<h2>ActiveMovie Control Properties</h2>
<p>
Control properties include settings such as the size of the movie window, the appearance of the playback controls, and playback rate. If you're using the &lt;OBJECT&gt; tag (with Internet Explorer) or the &lt;EMBED&gt; tag (with Navigator) to embed the ActiveMovie control you can set a number of control properties in the HTML code. The easy way to set properties is through the Properties dialog box that appears when you edit an ActiveX control with the ActiveX Control Pad. Figure 4 is a screen shot of the Control Pad when editing the ActiveMovie control:</p>
<p>
<img src="actmovie1_4.gif" border=0></p>
<p class=label>
<b>Figure 4. Editing the ActiveMovie Control with the ActiveX Control Pad</b></p>
<p>
The following table lists some of the properties supported by the ActiveMovie control: </p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=29%><b>Property</b></td>
<td class=label width=71%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=29%>AllowChangeDisplayMode</td>
<td width=71%>Indicates whether the end user can change the display mode at run time between time and frames. </td>
</tr>
<tr valign=top>
<td width=29%>AllowHideControls</td>
<td width=71%>Indicates whether the end user can hide the control panel at run time. </td>
</tr>
<tr valign=top>
<td width=29%>AllowHideDisplay</td>
<td width=71%>Indicates whether the end user can hide the display at run time. </td>
</tr>
<tr valign=top>
<td width=29%>AutoRewind</td>
<td width=71%>Indicates whether to automatically rewind the multimedia stream when it stops.</td>
</tr>
<tr valign=top>
<td width=29%>AutoStart</td>
<td width=71%>Indicates whether to automatically start playing the multimedia stream. </td>
</tr>
<tr valign=top>
<td width=29%>DisplayBackColor</td>
<td width=71%>Specifies the color used for the control background. </td>
</tr>
<tr valign=top>
<td width=29%>DisplayForeColor</td>
<td width=71%>Specifies the color used for the control foreground. </td>
</tr>
<tr valign=top>
<td width=29%>DisplayMode</td>
<td width=71%>Indicates whether the control displays the current position in time or frames. </td>
</tr>
<tr valign=top>
<td width=29%>EnableContextMenu</td>
<td width=71%>Indicates whether to enable the context menu on right click. </td>
</tr>
<tr valign=top>
<td width=29%>EnablePositionControls</td>
<td width=71%>Indicates whether to enable the position buttons in the control panel. </td>
</tr>
<tr valign=top>
<td width=29%>EnableSelectionControls</td>
<td width=71%>Indicates whether to enable the selection buttons in the control panel. </td>
</tr>
<tr valign=top>
<td width=29%>EnableTracker</td>
<td width=71%>Indicates whether to enable the tracker bar in the control panel. </td>
</tr>
<tr valign=top>
<td width=29%>FullScreenMode</td>
<td width=71%>Expands the area of the OCX so that it fills the entire screen.</td>
</tr>
<tr valign=top>
<td width=29%>MovieWindowSize</td>
<td width=71%>Selects the image window size and characteristics. </td>
</tr>
<tr valign=top>
<td width=29%>PlayCount</td>
<td width=71%>Specifies the number of times to play this multimedia stream. </td>
</tr>
<tr valign=top>
<td width=29%>Rate</td>
<td width=71%>Specifies the playback rate for the stream. </td>
</tr>
<tr valign=top>
<td width=29%>SelectionEnd</td>
<td width=71%>Specifies the ending position in this multimedia stream, in seconds, relative to the beginning of the stream. </td>
</tr>
<tr valign=top>
<td width=29%>SelectionStart</td>
<td width=71%>Specifies the starting position in this multimedia stream, in seconds, relative to the beginning of the stream. </td>
</tr>
<tr valign=top>
<td width=29%>ShowControls</td>
<td width=71%>Indicates whether the control panel is visible. </td>
</tr>
<tr valign=top>
<td width=29%>ShowDisplay</td>
<td width=71%>Indicates whether the status display panel is visible.</td>
</tr>
<tr valign=top>
<td width=29%>ShowPositionControls</td>
<td width=71%>Indicates whether the position buttons are visible in the control panel.</td>
</tr>
<tr valign=top>
<td width=29%>ShowSelectionControls</td>
<td width=71%>Indicates whether the selection buttons are visible in the control panel.</td>
</tr>
<tr valign=top>
<td width=29%>ShowTracker</td>
<td width=71%>Indicates whether the tracker bar is visible in the control panel. </td>
</tr>
</table><br>
<p>
For a complete description of all of the properties of the ActiveMovie control, look at the ActiveMovie Control Reference (this reference is available in Windows Help format in the accompanying zipped file).</p>
</BODY>
</HTML>
