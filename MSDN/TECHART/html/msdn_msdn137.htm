<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 137: Removing Items from a Drive List Box Control</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn137"></a></sup>Tip 137: Removing Items from a Drive List Box Control</h1>
<p>
July 1, 1995</p>
<h2>Abstract</h2>
<p>
The <b>Drive List Box</b> control in Microsoft® Visual Basic® displays a list of all disk drives attached to the computer system. This article explains how you can use the Microsoft Windows® application programming interface (API) <b>SendMessage</b> function to remove a selected drive entry from the <b>Drive List Box</b> control at run time in Visual Basic.</p>
<h2>Deleting an Entry from a Drive List Box Control</h2>
<p>
You can display a list of all installed disk drives in a Microsoft® Visual Basic® application by using the <b>Drive List Box</b> control. This control displays each drive found on the computer system in alphabetic order.</p>
<p>
You can use the <b>Drive List Box</b> control to enable a user to easily switch to a different disk drive. You do this by clicking a specific entry in the control. The current default disk drive, however, is not actually changed—you must use the <b>ChDir</b> function to do this. The <b>Drive List Box</b> control provides a simple method that you can employ to select the actual disk drive. Typically, you would use the <b>Drive List Box</b> control in conjunction with the <b>File List Box</b> control to create a file-access system of some sort.</p>
<p>
The example program below shows how to remove the currently selected drive entry from the <b>Drive List Box</b> control. You can accomplish this by using the Microsoft Windows® application programming interface (API) <b>SendMessage</b> function to send a CB_DELETESTRING message to that control.</p>
<p>
First, however, you must determine which entry is currently selected in the <b>Drive List Box</b> control. The <b>ListIndex</b> property of this control will return the index number of the currently selected item. After you have retrieved this value, you use <b>SendMessage</b> to send a CD_DELETESTRING message to the <b>Drive List Box</b> control. This message, in turn, removes that specific entry from the control.</p>
<h2>Example Program</h2>
<p>
This program shows how to remove a selected item from a <b>Drive List Box</b> control.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant </b>and <b>Declare</b> statements to the General Declarations section of Form1 (note that the <b>Declare</b> statement must be typed as a single line of code):<pre><code>Const WM_USER = &amp;H400
Const CB_DELETESTRING = (WM_USER + 4)
Private Declare Function SendMessageAny Lib "user32" Alias "SendMessageA" 
 &nbsp; (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Integer, 
 &nbsp; lParam As Any) As Long
</code></pre>
</li>
<li>
Add a <b>Drive List Box</b> control to Form1. Drive1 is created by default.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim X As Long
 &nbsp;&nbsp; X = SendMessageAny(Drive1.hwnd, CB_DELETESTRING, Drive1.ListIndex, 0)
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing F5. Select one of the drive letters shown in the <b>Drive List Box</b> control. Click the command button. The selected entry is removed from the <b>Drive List Box</b> control.</p>
<h2>Additional Reference</h2>
<p>
"CB_DELETESTRING." (MSDN Library Archive, Product Documentation, SDKs, Windows 3.1 SDK, Programmer's Reference Volume 3: Messages, Structures, and Macros)</p>
</BODY>
</HTML>
