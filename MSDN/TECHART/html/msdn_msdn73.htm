<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 73: Creating Nested Directories</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn73"></a></sup>Tip 73: Creating Nested Directories</h1>
<p>
May 1, 1995</p>
<h2>Abstract</h2>
<p>
You can use the Visual Basic® <b>MkDir</b> statement to create a new directory on any floppy or hard disk. This article explains how you can use this statement to create nested subdirectories, even if part of the path already exists.</p>
<h2>The MkDir Statement</h2>
<p>
When developing an application in Visual Basic®, you may need to allow the user to store a data file in a specific directory on disk. The directory can be created with Visual Basic's <b>MkDir</b> statement. The syntax for this statement is:</p>
<p>
MkDir "C:\<i>&lt;JUNK&gt;</i>"</p>
<p>
where JUNK is the name of the directory you want to create and C:\ is the drive you want to create it on. If you want to create a nested subdirectory, for example C:\JUNK\TEST, you must first create the JUNK directory and then create the TEST directory. However, if the JUNK directory already exists, the <b>MkDir</b> statement will interrupt your application with a "Path/File Access Error" displayed in a message box.</p>
<p>
To prevent this error message from appearing when your application is creating directories, you can use the <b>On Error</b> and <b>Resume Next</b> statements. These two statements allow you to trap this access error and force your Visual Basic program to continue executing as if the error had not actually occurred.</p>
<p>
The example program below creates a directory that is three levels deep, called "\JUNK\TEST\TEST". The first time the <b>MkDir</b> statement is executed, it creates the JUNK directory. The second and third times <b>MkDir</b> is executed, however, it produces Error 76. The <b>Resume Next</b> statement tells our program to ignore this error each time it is encountered until we have successfully created the entire directory structure.</p>
<h2>Example Program</h2>
<p>
This program shows how to create nested directories even if one of the directories in the path already exists.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default. Set its <b>Caption</b> property to "Create Directory".<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Sub Command1_Click()
 &nbsp;&nbsp; CreateNewDirectory "C:\junk3\test\test"
 &nbsp;&nbsp; MsgBox "Directory was created", 16, "Dir Demo"
End Sub
</code></pre>
</li>
<li>
Create a new function called <b>CreateNewDirectory</b>. Add the following code to this function:<pre><code>Sub CreateNewDirectory(DirName As String)
 &nbsp;&nbsp; Dim NewLen As Integer
 &nbsp;&nbsp; Dim DirLen As Integer
 &nbsp;&nbsp; Dim MaxLen As Integer
 &nbsp;&nbsp; 
 &nbsp;&nbsp; NewLen = 4
 &nbsp;&nbsp; MaxLen = Len(DirName)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; 
 &nbsp;&nbsp; If Right$(DirName, 1) &lt;&gt; "\" Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DirName = DirName + "\"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MaxLen = MaxLen + 1
 &nbsp;&nbsp; End If
 &nbsp;&nbsp; On Error GoTo DirError
 &nbsp;&nbsp; 
MakeNext:
 &nbsp;&nbsp; DirLen = InStr(NewLen, DirName, "\")
 &nbsp;&nbsp; MkDir Left$(DirName, DirLen - 1)
 &nbsp;&nbsp; NewLen = DirLen + 1
 &nbsp;&nbsp; If NewLen &gt;= MaxLen Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit Sub
 &nbsp;&nbsp; End If
 &nbsp;&nbsp; GoTo MakeNext
DirError:
 &nbsp;&nbsp; Resume Next
End Sub
</code></pre>
</li>
</ol>
<p>
Run the program by pressing the F5 function key. When you click the "Create Directory" command button, the program creates a directory called "JUNK\TEST\TEST" on drive C. Change the path in the Click event for Command1 to "C:\JUNK\TEST\TEST2" and run the program a second time. It will create a second subdirectory called TEST2 under C:\JUNK\TEST. Notice that Error 76 is ignored by the program. This error is generated by <b>MkDir</b> when it attempts to create a directory (in this case, C:\JUNK\TEST) that already exists.</p>
</BODY>
</HTML>
