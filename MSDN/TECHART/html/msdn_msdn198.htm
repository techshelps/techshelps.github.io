<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 198: Retrieving File Information in Visual Basic 4.0</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn198"></a></sup>Tip 198: Retrieving File Information in Visual Basic 4.0</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
This article explains how, from within a Microsoft® Visual Basic® version 4.0 application, you can retrieve information about a specific file stored on disk. This information may include the date and time when the file was initially created, when the file was last accessed, and any number of other details.</p>
<h2>Using the GetFileInformationByHandle Function</h2>
<p>
In some Microsoft® Visual Basic® version 4.0 applications you write, you may need to examine certain file information. For example, you may need to determine when a file was last accessed or the serial number of the volume that contains the file. This type of information about a file can be retrieved using the Microsoft Windows® application programming interface (API) <b>GetFileInformationByHandle</b> function.</p>
<p>
To use the <b>GetFileInformationByHandle</b> function, you must include the following <b>Declare</b> statement in your project:</p>
<pre><code>Declare Function GetFileInformationByHandle Lib "kernel32" (ByVal hFile 
 &nbsp; As Long, lpFileInformation As BY_HANDLE_FILE_INFORMATION) As Long
</code></pre>
<p>
As you can see, this function requires only two arguments: the handle of the file you want to retrieve information on and the address of a <b>BY_HANDLE_FILE_INFORMATION</b> structure that will hold the file's information.</p>
<p>
There are several steps you must perform to retrieve information about a file. First, you must use the Windows API <b>OpenFile</b> function to obtain the specified file's file handle. Once you have the file handle, you can call the <b>GetFileInformationByHandle</b> function. The file's information is then stored in the <b>BY_HANDLE_FILE_INFORMATION</b> structure. Next, you must use the Windows API <b>CloseHandle</b> function to release the file handle to the system.</p>
<p>
In the example program below, you retrieve the date and time that the file was actually created. You then use the Windows API <b>FileTimeToSystemTime</b> function to convert the file's date and time stamp to individual values that you can use in the program. This same procedure is used to process the file's last access and last write date and time stamp. In addition, two other pieces of information are also retrieved about the file—the file's attributes and the volume's serial number.</p>
<h2>Example Program</h2>
<p>
This program shows how to retrieve information about a specific file.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
From the Visual Basic Insert menu, select Module to create a new module. Module1.Bas is created by default.<br><br></li>
<li>
Add the following code to Module1.Bas (note that each <b>Declare</b> statement must be typed as a single line of code):<pre><code>Declare Function OpenFile Lib "kernel32" (ByVal lpFileName As String, 
 &nbsp; lpReOpenBuff As OFSTRUCT, ByVal wStyle As Long) As Long
Declare Function GetFileInformationByHandle Lib "kernel32" (ByVal hFile 
 &nbsp; As Long, lpFileInformation As BY_HANDLE_FILE_INFORMATION) As Long
Declare Function CloseHandle Lib "kernel32" (ByVal hObject As Long) As Long
Declare Function FileTimeToSystemTime Lib "kernel32" (lpFileTime As FileTime, 
 &nbsp; lpSystemTime As SYSTEMTIME) As Long
Public Const OFS_MAXPATHNAME = 128
Public Const OF_READ = &amp;H0
Type OFSTRUCT
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cBytes As Byte
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fFixedDisk As Byte
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nErrCode As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Reserved1 As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Reserved2 As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; szPathName(OFS_MAXPATHNAME) As Byte
End Type
Type SYSTEMTIME
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wYear As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMonth As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wDayOfWeek As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wDay As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wHour As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMinute As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wSecond As Integer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMilliseconds As Integer
End Type
Type FileTime
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dwLowDateTime As Long
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dwHighDateTime As Long
End Type
Type BY_HANDLE_FILE_INFORMATION
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dwFileAttributes As Long
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ftCreationTime As FileTime
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ftLastAccessTime As FileTime
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ftLastWriteTime As FileTime
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dwVolumeSerialNumber As Long
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nFileSizeHigh As Long
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nFileSizeLow As Long
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nNumberOfLinks As Long
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nFileIndexHigh As Long
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nFileIndexLow As Long
End Type
</code></pre>
</li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim Ret As Long
 &nbsp;&nbsp; Dim FileHandle As Long
 &nbsp;&nbsp; Dim FileInfo As BY_HANDLE_FILE_INFORMATION
 &nbsp;&nbsp; Dim lpReOpenBuff As OFSTRUCT
 &nbsp;&nbsp; Dim FileTime As SYSTEMTIME

 &nbsp;&nbsp; FileHandle = OpenFile("c:\autoexec.bat", lpReOpenBuff, OF_READ)
 &nbsp;&nbsp; Ret = GetFileInformationByHandle(FileHandle, FileInfo)

 &nbsp;&nbsp; Ret = FileTimeToSystemTime(FileInfo.ftCreationTime, FileTime)
 &nbsp;&nbsp; Print "File created on " &amp; FileTime.wYear, FileTime.wMonth, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileTime.wDay

 &nbsp;&nbsp; Ret = FileTimeToSystemTime(FileInfo.ftLastAccessTime, FileTime)
 &nbsp;&nbsp; Print "File last accessed on: " &amp; FileTime.wYear, FileTime.wMonth, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileTime.wDay

 &nbsp;&nbsp; Ret = FileTimeToSystemTime(FileInfo.ftLastWriteTime, FileTime)
 &nbsp;&nbsp; Print "File last written to: " &amp; FileTime.wYear, FileTime.wMonth, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileTime.wDay

 &nbsp;&nbsp; Print "Volume Serial Number is: " &amp; FileInfo.dwVolumeSerialNumber
 &nbsp;&nbsp; Print "File attributes are: " &amp; FileInfo.dwFileAttributes


 &nbsp;&nbsp; Ret = CloseHandle(FileHandle)
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. Click the <b>Command Button</b> control. The program displays the file's creation date, last access date, and last write date, as well as the disk's volume serial number and the attributes associated with the file.</p>
<h2>Additional References</h2>
<p>
"BY_HANDLE_FILE_INFORMATION QuickInfo." (MSDN Library, SDK Documentation, Platform SDK)</p>
<p>
"File Times." (MSDN Library, SDK Documentation, Platform SDK)</p>
<p>
"FileTimeToSystemTime QuickInfo Overview Group." (MSDN Library, SDK Documentation, Platform SDK)</p>
<p>
"GetFileInformationByHandle QuickInfo Overview Group." (MSDN Library, SDK Documentation, Platform SDK)</p>
</BODY>
</HTML>
