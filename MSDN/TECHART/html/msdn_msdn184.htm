<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 184: Creating a List of Directories and Files in a List Box Control</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn184"></a></sup>Tip 184: Creating a List of Directories and Files in a List Box Control</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
This article explains how you can easily recreate the structure of a disk by storing a list of drives, directories, and/or files in a <b>List Box</b> control.</p>
<h2>Creating a List of Directories and Files</h2>
<p>
The Microsoft® Windows® application programming interface (API) <b>SendMessage</b> function allows you to store a list of drives, directories, and/or files in a <b>List Box</b> control. In effect, this lets you easily recreate the structure of a disk. Although Microsoft Visual Basic® provides the <b>Common Dialog File</b> and <b>Drive</b> controls, it is faster and easier to use the <b>SendMessage</b> function to store a list of files in a <b>List Box</b> control. This technique also gives you greater control and flexibility when manipulating the filenames stored in the <b>List Box</b> control.</p>
<p>
To use the <b>SendMessage</b> function, you must include the following <b>Declare</b> statement in your project:</p>
<pre><code>Private Declare Function SendMessageAny Lib "user32" Alias "SendMessageA" 
 &nbsp; (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Integer, 
 &nbsp; lParam As Any) As Long
</code></pre>
<p>
The <b>SendMessage</b> function is used to send a specific message to a window. In the example program below, the LB_DIR message is sent to the program's window. The LB_DIR message tells Windows to add a list of the files (specified by the <i>wParam</i> argument) to the <b>List Box</b> control.</p>
<p>
The <i>wParam</i> argument for the LB_DIR message lets you specify the type of files you want the <b>List Box</b> control to contain. You can set the <i>wParam</i> argument to include normal, read-only, hidden, system, and archive files. In addition, you can also set the <i>wParam</i> argument so that it sends drive and directory files to the <b>List Box</b> control.</p>
<h2>Example Program</h2>
<p>
This program shows how to create a list of files and/or directories in a <b>List Box</b> control.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant</b> and <b>Declare</b> statements to the General Declarations section of Form1 (note that the <b>Declare</b> statement must be typed as a single line of code):<pre><code>Private Declare Function AppendMenu Lib "user32" Alias "AppendMenuA" 
 &nbsp; (ByVal hMenu As Long, ByVal wFlags As Long, ByVal wIDNewItem As Long, 
 &nbsp; ByVal lpNewItem As String) As Long
Const WM_USER = &amp;H400
Const LB_DIR = &amp;H18D
Const DIR_NORMALFILES = &amp;H0
Const DIR_READONLY = &amp;H8001
Const DIR_HIDDEN = &amp;H8002
Const DIR_SYSTEM = &amp;H8004
Const DIR_DIRECTORIES = &amp;H8010
Const DIR_ARCHIVED = &amp;H8020
Const DIR_DRIVES = &amp;HC000
</code></pre>
</li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Call ListFiles("c:\*.*")
End Sub
</code></pre>
</li>
<li>
Add a <b>List Box</b> control to Form1. List1 is created by default.<br><br></li>
<li>
Create a new subroutine called <b>ListFiles</b>. Add the following code to this subroutine:<pre><code>Sub ListFiles(sFileSpec As String)
 &nbsp;&nbsp; Dim I As Long
 &nbsp;&nbsp; List1.Clear
 &nbsp;&nbsp; I = SendMessageAny(List1.hWnd, LB_DIR, DIR_DRIVES, ByVal sFileSpec)
 &nbsp;&nbsp; I = SendMessageAny(List1.hWnd, LB_DIR, DIR_DIRECTORIES, ByVal sFileSpec)
 &nbsp;&nbsp; I = SendMessageAny(List1.hWnd, LB_DIR, DIR_NORMALFILES, ByVal sFileSpec)
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. Click the <b>Command Button</b> control. The <b>List Box</b> control is filled with the names of your disk drives, directories, and files.</p>
</BODY>
</HTML>
