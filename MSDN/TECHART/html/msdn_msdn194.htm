<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 194: Adding a Description to the Status Bar for the Toolbar Control</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn194"></a></sup>Tip 194: Adding a Description to the Status Bar for the Toolbar Control</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
Each toolbar control in your Microsoft® Visual Basic® application can have a ToolTip, which is a small pop-up window containing the name of the control. A ToolTip appears whenever the mouse pointer is placed over a toolbar control. This article explains how to have information that further describes a toolbar control appear in the <b>Status Bar</b> control as well.</p>
<h2>Assigning Status Bar Descriptions to Toolbar Controls</h2>
<p>
You can use the <b>Toolbar</b> control in Microsoft® Visual Basic® to perform functions within an application by simply clicking on one of the control's buttons. Each button in the <b>Toolbar</b> control can have a caption assigned to it or a ToolTip description that appears when the mouse pointer is over that button. Most toolbars do not assign captions to the buttons because these captions appear at the bottom of the button. The preferred method is to use a ToolTip description.</p>
<p>
To create a toolbar, you put a <b>Toolbar</b> control and an <b>ImageList</b> control on a form. Next, the <b>ImageList</b> control is populated with icons or other graphic images. These images are then assigned to the <b>Buttons</b> property of the <b>Toolbar</b> control.</p>
<p>
You can assign ToolTip descriptions to each button on the toolbar by setting the toolbar's <b>ShowTips</b> property to True and adding the text for the ToolTip description to the ToolTip text box. When the mouse pointer is moved over a button on the toolbar, the button's corresponding ToolTip text appears.</p>
<p>
As an added feature, you can add a <b>Status Bar</b> control to the bottom of your form. A <b>Status Bar</b> control contains information that is displayed to the user when certain events occur in your application.</p>
<p>
In the example program below, additional information is provided to the user when a specific button is selected on the toolbar. This information appears in the <b>Status Bar</b> control.</p>
<p>
In order to provide this information in the <b>Status Bar</b> control, a method is needed for determining which button the mouse pointer is over. You can calculate which button the mouse pointer is over by monitoring the toolbar's MouseMove event.</p>
<p>
The MouseMove event is triggered when the mouse is moved over the <b>Toolbar</b> control. This event indicates the current position of the mouse on the <b>Toolbar</b> control in its X and Y variables. If the current position of the mouse pointer corresponds to the position of a toolbar button, a description can be displayed for that button in the <b>Status Bar</b> control.</p>
<h2>Example Program</h2>
<p>
This program shows how to pass a description to a <b>Status Bar</b> control when an item is selected on a <b>Toolbar</b> control.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add a <b>Toolbar</b> control to Form1. Toolbar1 is created by default.<br><br></li>
<li>
Add an <b>ImageList</b> control to Form1. ImageList1 is created by default.<br><br></li>
<li>
Add a <b>Status Bar</b> control to Form1. StatusBar1 is created by default.<br><br></li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Private Sub Form_Load()
 &nbsp;&nbsp; Dim imgX As ListImage

 &nbsp;&nbsp; Set imgX = ImageList1.ListImages. _
 &nbsp;&nbsp; Add(, "open", LoadPicture("bitmaps\tlbr_w95\open.bmp"))&nbsp;&nbsp; ' 1

 &nbsp;&nbsp; Set imgX = ImageList1.ListImages. _
 &nbsp;&nbsp; Add(, "save", LoadPicture("bitmaps\tlbr_w95\save.bmp"))&nbsp;&nbsp; ' 2

 &nbsp;&nbsp; Toolbar1.ImageList = ImageList1

 &nbsp;&nbsp; Dim btnX As Button
 &nbsp;&nbsp; Set btnX = Toolbar1.Buttons.Add(, , , tbrSeparator)

 &nbsp;&nbsp; Set btnX = Toolbar1.Buttons.Add(, "open", , tbrDefault, "open")
 &nbsp;&nbsp; btnX.ToolTipText = "Open File"
 &nbsp;&nbsp; btnX.Description = btnX.ToolTipText

 &nbsp;&nbsp; Set btnX = Toolbar1.Buttons.Add(, , , tbrSeparator)

 &nbsp;&nbsp; Set btnX = Toolbar1.Buttons.Add(, "save", , tbrDefault, "save")
 &nbsp;&nbsp; btnX.ToolTipText = "Save File"
 &nbsp;&nbsp; btnX.Description = btnX.ToolTipText

 &nbsp;&nbsp; With Toolbar1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Wrappable = True ' Buttons can wrap
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .AllowCustomize = False
 &nbsp;&nbsp; End With
End Sub
</code></pre>
</li>
<li>
Add the following code to the ButtonClick event for Toolbar1:<pre><code>Private Sub toolbar1_ButtonClick(ByVal Button As Button)
 &nbsp;&nbsp; Select Case Button.Key
 &nbsp;&nbsp; Case Is = "open"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "Open button was clicked"

 &nbsp;&nbsp; Case Is = "save"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "Save button was clicked"
 &nbsp;&nbsp; End Select
End Sub
</code></pre>
</li>
<li>
Add the following code to the MouseMove event for Toolbar1 (note that the <b>Private</b> statement must be typed as a single line of code):<pre><code>Private Sub Toolbar1_MouseMove(Button As Integer, Shift As Integer, 
 &nbsp; x As Single, y As Single)
 &nbsp;&nbsp; Dim MyPlace As Integer
 &nbsp;&nbsp; Dim LowPoint As Long
 &nbsp;&nbsp; Dim HighPoint As Long
 &nbsp;&nbsp; Static LastHit As Integer
 &nbsp;&nbsp; MyPlace = 1

 &nbsp;&nbsp; Do While MyPlace &lt; Toolbar1.Buttons.Count
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LowPoint = Toolbar1.Buttons(MyPlace).Left
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HighPoint = Toolbar1.Buttons(MyPlace + 1).Left

 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If x &gt; LowPoint And x &lt; HighPoint Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If MyPlace &lt;&gt; LastHit Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LastHit = MyPlace
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StatusBar1.Panels(1).Text = "Found " &amp; LastHit
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit Do
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyPlace = MyPlace + 1
 &nbsp;&nbsp; Loop

 &nbsp;&nbsp; If MyPlace = Toolbar1.Buttons.Count Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LowPoint = Toolbar1.Buttons(MyPlace).Left
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HighPoint = Toolbar1.Buttons(MyPlace).Left + Toolbar1.Buttons(MyPlace).Width
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If x &gt; LowPoint And x &lt; HighPoint Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If MyPlace &lt;&gt; LastHit Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LastHit = MyPlace
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StatusBar1.Panels(1).Text = "Found " &amp; LastHit
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; End If

 &nbsp;&nbsp; StatusBar1.Panels(1).Text = ""
 &nbsp;&nbsp; If LastHit = 2 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StatusBar1.Panels(1).Text = "Save"
 &nbsp;&nbsp; End If
 &nbsp;&nbsp; If LastHit = 4 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StatusBar1.Panels(1).Text = "Open"
 &nbsp;&nbsp; End If
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. A toolbar appears at the top of Form1. The toolbar has two buttons, Save and Open. Move the mouse pointer over either one of these buttons. A description corresponding to the specific button appears in the <b>Status Bar</b> control. Double-click one of the buttons—a message box appears that indicates that you selected that particular function from the <b>Toolbar</b> control.</p>
</BODY>
</HTML>
