<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 83: Listing Fields and Associated Properties for an Attached Microsoft Access Table</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn83"></a></sup>Tip 83: Listing Fields and Associated Properties for an Attached Microsoft Access Table</h1>
<p>
May 15, 1995</p>
<h2>Abstract</h2>
<p>
This article describes a sample user-defined Access Basic function that you can use to retrieve all field names and their associated properties for an attached Microsoft® Access® table.</p>
<h2>More Information</h2>
<p>
This article assumes that you are familiar with Access Basic and with creating Microsoft® Access® applications using the programming tools provided with Microsoft Access. For more information on Access Basic, please refer to the <i>Building</i> <i>Applications</i> manual for Access 2.0 and the <i>Introduction to Programming</i> manual for Access 1.<i>x</i>.</p>
<p>
The example program below uses tools in Visual Basic® to get information from a Microsoft Access database.</p>
<h2>Example Program</h2>
<p>
This program demonstrates how to create and use the sample <b>ListFieldProperties()</b> function.
<ol>
<li>
Open the sample database NWIND.MDB. (This database can usually be found in the C:\ACCESS\SAMPAPPS directory.)<br><br></li>
<li>
From the File menu, choose New, and select Module.<br><br></li>
<li>
Enter the following code to create the <b>ListFieldProperties()</b> function:<pre><code>Function ListFieldProperties ()
Dim MyDB As Database
Dim MyTable As TableDef
Set MyDB = DBEngine(0)(0)
Set MyTable = MyDB.TableDefs("Categories")
For X = 0 To MyTable.Fields.Count - 1
Debug.Print MyTable.Fields(X).Name
For Y = 0 To MyTable.Fields(X).Properties.Count - 1
Debug.Print Chr(9) &amp; MyTable.Fields(X).Properties(Y).Name
Next Y
Next X
End Function
</code></pre>
</li>
<li>
From the View menu, choose Immediate Window.<br><br></li>
<li>
In the Immediate window, type the following line and press the ENTER key:<pre><code>? ListFieldProperties()
</code></pre>
<p class=tl>
The name of each field in the Categories table will be displayed along with that field's properties.</P></li>
</ol>
<h2>Additional References</h2>
<p>
"Name Property." (Product Documentation, Office Developer's Kit 1.0, Microsoft Access 2.0, Language Reference)</p>
<p>
"Using Properties." (Product Documentation, Office Developer's Kit 1.0, Microsoft Access 2.0, Advanced Topics)</p>
</BODY>
</HTML>
