<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 111: Using Different Fonts in List Boxes That Have Tab Stops</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn111"></a></sup>Tip 111: Using Different Fonts in List Boxes That Have Tab Stops</h1>
<p>
June 12, 1995</p>
<h2>Abstract</h2>
<p>
The Microsoft® Visual Basic® <b>List Box</b> control lets you add individual items to create a list of data. This article explains how to add tab stops to create multicolumn items, no matter what type of font or font size is used.</p>
<h2>Using the GetDialogBaseUnits Function</h2>
<p>
When adding items to a <b>List Box</b> control, you can create columns of data by inserting a tab stop within the control. However, the data will only be correctly aligned in the columns if you use the default font and font size used by the <b>List Box</b> control.</p>
<p>
As the example program below shows, you can use the Microsoft® Windows® application programming interface (API) <b>GetDialogBaseUnits</b> function to determine the width and height of the average character in the selected font. The width and height of the character are returned in dialog base units. From these values, you can calculate the average width of the characters in the selected font.</p>
<p>
After you know the width of the character set, you can add the tab stops to the <b>List Box</b> control. Then, using whatever font and font size you want, you can add new items to the control. The columns of data will appear in separate rows.</p>
<h2>Example Program</h2>
<p>
This program shows how to add tab stops to a <b>List Box</b> control. No matter what font or font size is used when adding items to the control, the columns will line up correctly.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant</b> and <b>Declare</b> statements to the General Declarations section of Form1 (note that each <b>Declare</b> statement must be typed as a single line of text):<pre><code>Private Declare Function Getfocus Lib "User" () As Integer
Private Declare Function GetDialogBaseUnits Lib "User" () As Long
Private Declare Sub SendMessage Lib "User" (ByVal hWnd As
 &nbsp; Integer, ByVal wMsg As Integer, ByVal wParam As Integer, lParam As Any)
Private Declare Sub APISetFocus Lib "User" Alias "SetFocus"
 &nbsp; (ByVal hWnd As Integer)
Const WM_USER = &amp;H400
Const LB_SETTABSTOPS = WM_USER + 19
</code></pre>
</li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Private Sub Form_Load()
 &nbsp;&nbsp; Dim TB As String * 1
 &nbsp;&nbsp; Dim OldHandle As Integer
 &nbsp;&nbsp; Dim ListHandle As Integer
 &nbsp;&nbsp; Dim DlgWidthUnits As Integer
 &nbsp;&nbsp; Dim I As Integer
 &nbsp;&nbsp; ReDim TabStop(2) As Integer
 &nbsp;&nbsp; 
 &nbsp;&nbsp; TabStop(0) = 10
 &nbsp;&nbsp; TabStop(1) = 30
 &nbsp;&nbsp; TabStop(2) = 50
 &nbsp;&nbsp; 
 &nbsp;&nbsp; TB = Chr$(9)
 &nbsp;&nbsp; Show
 &nbsp;&nbsp; OldHandle = Getfocus()
 &nbsp;&nbsp; List1.SetFocus
 &nbsp;&nbsp; ListHandle = Getfocus()
 &nbsp;&nbsp; DlgWidthUnits = (GetDialogBaseUnits() Mod 65536) / 2
 &nbsp;&nbsp; 
 &nbsp;&nbsp; For I = 0 To 2
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TabStop(I) = TabStop(I) * DlgWidthUnits
 &nbsp;&nbsp; Next I
 &nbsp;&nbsp; 
 &nbsp;&nbsp; Call SendMessage(ListHandle, LB_SETTABSTOPS, 3, TabStop(0))
 &nbsp;&nbsp; Call APISetFocus(OldHandle)
 &nbsp;&nbsp; List1.AddItem "Item" + TB + "Quan." + TB + "Price"
 &nbsp;&nbsp; List1.AddItem "Disks" + TB + "10" + TB + "$9.50"
 &nbsp;&nbsp; List1.AddItem "Paper" + TB + "12" + TB + "$22.50"
End Sub
</code></pre>
</li>
<li>
Add a <b>List Box</b> control to Form1. List1 is created by default.</li>
</ol>
<h2>Additional References</h2>
<p>
"GetDialogBaseUnits." (MSDN Library Archive, Product Documentation, SDKs, Windows 3.1 SDK, Programmer's Reference Volume 2: Functions)</p>
<p>
"Hiding Data by Using Tabs in List Boxes." (MSDN Library Archive, Books and Periodicals, Inside Visual Basic Articles [Cobb])</p>
<p>
Knowledge Base Q110958. "How to Right Justify Items in List Box w/Tabs &amp; SendMessage."</p>
<p>
Knowledge Base Q115237. "How to Use Temporary Tables in SQL Server from Visual Basic." </p>
<p>
Knowledge Base Q74280. "Translating Dialog-Box Size Units to Screen Units."</p>
<p>
"LB_SETTABSTOPS." (MSDN Library Archive, Product Documentation, SDKs, Windows 3.1 SDK, Programmer's Reference Volume 3: Messages, Structures)</p>
<p>
<a href="msdn_msdn58.htm">"Tip 58: Separating Information in a List Box with Tabs."</a> </p>
</BODY>
</HTML>
