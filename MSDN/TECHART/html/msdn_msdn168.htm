<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 168: Using the ShellExecute Function to Print Files</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn168"></a></sup>Tip 168: Using the ShellExecute Function to Print Files</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
This article explains how to print a file specified by the user of your Microsoft Visual Basic® application.</p>
<h2>Printing a File from Within an Application</h2>
<p>
The Microsoft® Windows® application programming interface (API) <b>ShellExecute</b> function can be used from within a Microsoft Visual Basic® application to print a file. In addition, this function can be used to load an executable (.EXE) file.</p>
<p>
To use the <b>ShellExecute</b> function, you must include the following <b>Declare</b> statement in your project:</p>
<pre><code>Private Declare Function ShellExecuteAny Lib "shell32.dll" Alias "ShellExecuteA" 
 &nbsp; (ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, 
 &nbsp; ByVal lpParameters As Any, ByVal lpDirectory As Any, ByVal nShowCmd As Long) 
 &nbsp; As Long
</code></pre>
<p>
The <b>ShellExecute</b> function requires six arguments, as follows:</p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td width=18%><i>hWnd</i></td>
<td colspan=2 width=81%>A long value that contains the window's handle.</td>
</tr>
<tr valign=top>
<td width=18%><i>LpOperation</i></td>
<td colspan=2 width=81%>A string that specifies the operation that the <b>ShellExecute</b> function is to perform. This string can be one of three values, as follows:</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>open</td>
<td width=51%>Specifies that the file <i>lpFile</i> is to be opened. In Microsoft Windows 95 this file may be a Windows 95 folder.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>print</td>
<td width=51%>Specifies that the file <i>lpFile</i> is to be printed.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>explore</td>
<td width=51%>Explores the folder for <i>lpFile</i> in Windows 95.</td>
</tr>
<tr valign=top>
<td width=18%><i>LpFile</i></td>
<td colspan=2 width=81%>A string containing the name of the file to open, print, or explore.</td>
</tr>
<tr valign=top>
<td width=18%><i>LpParameters</i></td>
<td colspan=2 width=81%>Set to NULL if <i>lpFile</i> specifies a document file. If <i>lpFile</i> specifies an executable file, then <i>lpParameters</i> is a pointer to a string specifying the parameters that should be passed to the application.</td>
</tr>
<tr valign=top>
<td width=18%><i>LpDirectory</i></td>
<td colspan=2 width=81%>A string specifying the default directory's name.</td>
</tr>
<tr valign=top>
<td width=18%><i>NShowCmd</i></td>
<td colspan=2 width=81%>If a document file is specified in <i>lpFile</i>, this should be set to zero. If an executable file is specified in <i>lpFile</i>, this determines how the <b>ShellExecute</b> function displays the application after it is loaded. The following values may be used:</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_HIDE</td>
<td colspan=2 width=52%>Hides the window and activates the executable file.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_MAXIMIZE</td>
<td colspan=2 width=52%>Maximizes the window.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_MINIMIZE</td>
<td colspan=2 width=52%>Minimizes the window. The next top-level window in the z-order is activated.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_RESTORE</td>
<td colspan=2 width=52%>Activates the window even if it is hidden or minimized.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_SHOW</td>
<td colspan=2 width=52%>Activates the window and displays it in its original size and at its original position.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_SHOWMAXIMIZED</td>
<td colspan=2 width=52%>Activates the window. The window is displayed as maximized.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_SHOWMINIMIZED</td>
<td colspan=2 width=52%>Activates the window. The window is displayed as minimized.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_SHOWMINNOACTIVE</td>
<td colspan=2 width=52%>Activates the window as minimized. The active window retains the focus.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_SHOWNA</td>
<td colspan=2 width=52%>Activates the window in its current state but the active window retains the focus.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_SHOWNOACTIVATE</td>
<td colspan=2 width=52%>Displays the window in its most recent size and in its most recent position. The active window retains the focus.</td>
</tr>
<tr valign=top>
<td width=18%></td>
<td width=30%>SW_SHOWNORMAL</td>
<td colspan=2 width=52%>Displays the window in its original size and at its original position.</td>
</tr>
</table><br>
<p>
In the example program below, you retrieve the name of the file you want to print from the <b>Text Box</b> control. Then you call the <b>ShellExecute</b> function with the <i>lpFile</i> argument set to "print". Notice that for demonstration purposes, you set the <i>nShowCmd</i> argument to SW_SHOWMINNOACTIVE. This argument lets you print the file to the printer without actually having to make the program receive the focus. The actual application that prints the document appears in a minimized window.</p>
<h2>Example Program</h2>
<p>
This program shows how to use the <b>ShellExecute</b> function to print a Microsoft Word document. The function can also print regular text files, such as those created by the Windows 95 Notepad application.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant </b>and <b>Declare</b> statements to the General Declarations section of Form1 (note that the <b>Declare</b> statement must be typed as a single line of code):<pre><code>Private Declare Function ShellExecuteAny Lib "shell32.dll" Alias "ShellExecuteA" 
 &nbsp; (ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, 
 &nbsp; ByVal lpParameters As Any, ByVal lpDirectory As Any, ByVal nShowCmd As Long) 
 &nbsp; As Long
Const SW_SHOWMINNOACTIVE = 7
</code></pre>
</li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Private Sub Form_Load()
 &nbsp;&nbsp; Text1.Text = ""
End Sub
</code></pre>
</li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default. Set its <b>Caption</b> property to "Print".<br><br></li>
<li>
Add the following code to the Click event for Command1 (note that the "Ret =" statement must be typed as a single line of code):<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim Ret As Long
 &nbsp;&nbsp; Dim FileToPrint As String

 &nbsp;&nbsp; FileToPrint = Text1.Text
 &nbsp;&nbsp; Ret = ShellExecuteAny(Me.hwnd, "print", FileToPrint, ByVal 0&amp;, ByVal 0&amp;, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SW_SHOWMINNOACTIVE)
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. Type the name of a Microsoft Word document or text file you want to print in the <b>Text Box</b> control. Click the Print command button to run the application that originally created the document or text file. Notice that this application remains loaded in the background, minimized, while it sends the file to the printer.</p>
</BODY>
</HTML>
