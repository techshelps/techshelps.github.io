<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing Cascading Updates and Deletes</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1>Implementing Cascading Updates and Deletes</h1>
<p>
SQL Server Declarative Referential Integrity (DRI) does not include the ability to cascade updates or deletes. You can implement this feature with triggers or allow the Upsizing Wizard to write the trigger for you.</p>
<p>
Here is a sample of the triggers created by the Upsizing Wizard when the <b>Northwind</b> <b>Orders</b> and <b>Customers</b> tables are upsized with cascade updates selected.</p>
<p>
This is the update trigger written by the Upsizing Wizard for the <b>Northwind</b> <b>Customers</b> table:</p>
<pre><code>If exists (select * from sysobjects where id = object_id('dbo.Customers_UTrig') and sysstat &amp; 0xf = 8)
 &nbsp; drop trigger dbo.Customers_UTrig
GO

CREATE TRIGGER Customers_UTrig ON Customers FOR UPDATE AS

/*
 * PREVENT NULL VALUES IN 'CompanyName'
 */
IF (SELECT Count(*) FROM inserted WHERE CompanyName IS NULL) &gt; 0
 &nbsp;&nbsp; BEGIN
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RAISERROR 44444 'Field ''CompanyName'' cannot contain a null value.'
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ROLLBACK TRANSACTION
 &nbsp;&nbsp; END
/*
 * CASCADE UPDATES TO 'Orders'
 */
IF UPDATE(CustomerID)
 &nbsp;&nbsp; BEGIN
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UPDATE Orders
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SET Orders.CustomerID = inserted.CustomerID
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FROM Orders, deleted, inserted
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE deleted.CustomerID = Orders.CustomerID
 &nbsp;&nbsp; END

GO
</code></pre>
<p>
If the CustomerID field is changed (<b><i>IF UPDATE(CustomerID)</i></b>) in the <b>Customers</b> table, this trigger updates the <b>Orders</b> table, changing the old CustomerID to the new CustomerID (<b><i>SET Orders.CustomerID = inserted.CustomerID</i></b>) for every order that contained the old CustomerID value (<b><i>WHERE deleted.CustomerID = Orders.CustomerID</i></b>).</p>
<p>
This trigger also includes code to prevent null values for CustomerID in the <b>Customers</b> table. The wizard also creates three other triggers to enforce the referential integrity:
<ul type=disc>
<li>
Customers-Delete trigger<br><br></li>
<li>
Orders-Insert trigger<br><br></li>
<li>
Orders-Update trigger</li>
</ul>
<p>
For more information, see Knowledge Base article Q142480, "INF: Cascading Deletes and Updates of Primary Keys."</p>
</BODY>
</HTML>
