<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 146: Retrieving the Printer Name from the Windows 95 Registry</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn146"></a></sup>Tip 146: Retrieving the Printer Name from the Windows 95 Registry</h1>
<p>
August 31, 1995</p>
<h2>Abstract</h2>
<p>
Microsoft® Windows® 95 uses the registry to determine which applications and hardware items are installed in the computer system. This article explains how you can retrieve the name of the default printer from the registry from within a Visual Basic® application.</p>
<h2>Manipulating the Windows 95 Registry in Visual Basic</h2>
<p>
The Microsoft® Windows® 95 registry is a database of information that contains configuration details about the hardware and software installed in your computer system. Under Windows version 3.1, this information was maintained through initialization (.INI) files.</p>
<p>
The registry is composed of keys. Each key may contain a specific value or other subkeys, which in turn may contain values or other subkeys. You can examine or modify the contents of the registration database by using the Microsoft Win32® registry application programming interface (API) functions in a Visual Basic program or by using the Registry Editor (REGEDIT).</p>
<p>
The example program below shows how to use the Win32 registry API functions to retrieve the default printer's name from the registry.</p>
<p>
The first step is to call the <b>RegOpenKeyEx</b> function.This function opens the specified key in the registration database. In this case, you want to open the subkey that is associated with the printer. This subkey is stored in the registry as:</p>
<p>
SYSTEM\Current Control Set\Control\Print\Printers\Default</p>
<p>
You also need to tell the <b>RegOpenKeyEx</b> function that you want to work with the Default subkey. After the program calls this function, a value that is set to zero is returned if the function was successful.</p>
<p>
The next step is to retrieve the actual value stored for the key that you are interrogating. Because you want to retrieve the name that is assigned to the default printer, you should call the <b>RegQueryValueEx</b> function. You must tell this function that you want to retrieve the value that was given to the Default subkey.</p>
<p>
Finally, you must call the <b>RegCloseKey</b> function to release the handle of the key that you have been accessing in the registration database. This terminates access to the registration database and frees the handle for future use by the computer system.</p>
<h2>Example Program</h2>
<p>
This program shows how to retrieve the name of the default printer from the Windows 95 registry.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant </b>and <b>Declare</b> statements to the General Declarations section of Form1 (note that each <b>Declare</b> statement must be typed as a single line of code):<pre><code>Private Declare Function RegOpenKeyEx Lib "advapi32" Alias "RegOpenKeyExA" 
 &nbsp; (ByVal hKey As Long, ByVal lpSubKey As String, ByVal dwReserved As Long, 
 &nbsp; ByVal samDesired As Long, phkResult As Long) As Long
Private Declare Function RegQueryValueEx Lib "advapi32" Alias "RegQueryValueExA" 
 &nbsp; (ByVal hKey As Long, ByVal lpValueName$, ByVal lpdwReserved As Long, lpdwType 
 &nbsp; As Long, lpData As Any, lpcbData As Long) As Long
Private Declare Function RegCloseKey Lib "advapi32" (ByVal hKey As Long) As Long
Const HKEY_CURRENT_CONFIG As Long = &amp;H80000005
</code></pre>
</li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1.<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim PName As String
 &nbsp;&nbsp; PName = GetCurrPrinter()
 &nbsp;&nbsp; Text1.Text = PName
End Sub
</code></pre>
</li>
<li>
Create a new procedure called <b>GetCurrPrinter</b>. Add the following code to this procedure.<pre><code>Function GetCurrPrinter() As String
 &nbsp;&nbsp; GetCurrPrinter = RegGetString$(HKEY_CURRENT_CONFIG, "System\CurrentControlSet\Control\Print\Printers", "Default")
End Function
</code></pre>
</li>
<li>
Create a new procedure called <b>RegGetString</b>. Add the following code to this procedure.<pre><code>Function RegGetString$(hInKey As Long, ByVal subkey$, ByVal valname$)
 &nbsp;&nbsp; Dim RetVal$, hSubKey As Long, dwType As Long, SZ As Long
 &nbsp;&nbsp; Dim R As Long
 &nbsp;&nbsp; RetVal$ = ""
 &nbsp;&nbsp; Const KEY_ALL_ACCESS As Long = &amp;HF0063
 &nbsp;&nbsp; Const ERROR_SUCCESS As Long = 0
 &nbsp;&nbsp; Const REG_SZ As Long = 1
 &nbsp;&nbsp; R = RegOpenKeyEx(hInKey, subkey$, 0, KEY_ALL_ACCESS, hSubKey)
 &nbsp;&nbsp; If R &lt;&gt; ERROR_SUCCESS Then GoTo Quit_Now
 &nbsp;&nbsp; SZ = 256: v$ = String$(SZ, 0)
 &nbsp;&nbsp; R = RegQueryValueEx(hSubKey, valname$, 0, dwType, ByVal v$, SZ)
 &nbsp;&nbsp; If R = ERROR_SUCCESS And dwType = REG_SZ Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RetVal$ = Left$(v$, SZ)
 &nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RetVal$ = "--Not String--"
 &nbsp;&nbsp; End If
 &nbsp;&nbsp; If hInKey = 0 Then R = RegCloseKey(hSubKey)
Quit_Now:
 &nbsp;&nbsp; RegGetString$ = RetVal$
End Function
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. When you click the <b>Command Button</b> control, the name of your default printer is displayed in the <b>Text Box</b> control.</p>
<h2>Additional References</h2>
<p>
"RegCloseKey." (MSDN Library, SDK Documentation, Platform SDK)</p>
<p>
"RegOpenKeyEx." (MSDN Library, SDK Documentation, Platform SDK)</p>
<p>
"RegQueryValueEx." (MSDN Library, SDK Documentation, Platform SDK)</p>
</BODY>
</HTML>
