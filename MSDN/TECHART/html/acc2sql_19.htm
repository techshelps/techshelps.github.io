<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Appendix D: ODBC Cursors in VBA</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1>Appendix D: ODBC Cursors in VBA</h1>
<p>
The following example makes an ODBC connection to your specified datasource and returns the first five rows.</p>
<p>
Some lines of code below exceed the printed page. Such lines use an underscore as a line continuation character. </p>
<pre><code>'Selected ODBC Core API's Definitions -- 32 bit versions
Declare Function SQLAllocConnect Lib "odbc32.dll" (ByVal_
 hEnvironmentv&amp;, phConnect&amp;) As Integer
Declare Function SQLAllocEnv Lib "odbc32.dll" (phEnvironmentv&amp;)_
 As Integer
Declare Function SQLAllocStmt Lib "odbc32.dll" (ByVal hConnect&amp;,_
 phstmt&amp;) As Integer
Declare Function SQLConnect Lib "odbc32.dll" (ByVal hConnect&amp;,_
 ByVal szDSN$, ByVal cbDSN%, ByVal szUID$, ByVal cbUID%, ByVal_
 szAuthStr$, ByVal cbAuthStr%) As Integer
Declare Function SQLSetStmtOption Lib "odbc32.dll" (ByVal_
 hstmt&amp;, ByVal fOption%, ByVal vParam&amp;) As Integer
Declare Function SQLSetCursorName Lib "odbc32.dll" (ByVal_
 hstmt&amp;, ByVal szCursor$, ByVal cbCursor%) As Integer
Declare Function SQLExecDirect Lib "odbc32.dll" (ByVal hstmt&amp;,_
 ByVal szSqlStr$, ByVal cbSqlStr&amp;) As Integer
Declare Function SQLNumResultCols Lib "odbc32.dll" (ByVal_
 hstmt&amp;, pccol%) As Integer
Declare Function SQLExtendedFetch Lib "odbc32.dll" (ByVal_
 hstmt&amp;, ByVal fFetchType%, ByVal irow&amp;, pcrow&amp;, rgfRowStatus%)_
 As Integer
Declare Function SQLSetPos Lib "odbc32.dll" (ByVal hstmt&amp;, ByVal_
 irow%, ByVal fOption%, ByVal fLock%) As Integer
Declare Function SQLDisconnect Lib "odbc32.dll" (ByVal_
 hConnect&amp;) As Integer
Declare Function SQLFreeConnect Lib "odbc32.dll" (ByVal_
 hConnect&amp;) As Integer
Declare Function SQLFreeEnv Lib "odbc32.dll" (ByVal_
 hEnvironmentv&amp;) As Integer
Declare Function SQLGetData Lib "odbc32.dll" (ByVal hstmt&amp;,_
 ByVal icol%, ByVal fCType%, ByVal rgbValue As String, ByVal_
 cbValueMax&amp;, pcbValue&amp;) As Integer
Global Const SQL_ERROR As Long = -1
Global Const SQL_INVALID_HANDLE As Long = -2
Global Const SQL_NO_DATA_FOUND As Long = 100
Global Const SQL_SUCCESS As Long = 0
Global Const SQL_SUCCESS_WITH_INFO As Long = 1
Global Const SQL_CONCUR_READ_ONLY As Long = 1
Global Const SQL_CONCUR_LOCK As Long = 2
Global Const SQL_CONCUR_ROWVER As Long = 3
Global Const SQL_CONCUR_VALUES As Long = 4
Global Const SQL_CURSOR_FORWARD_ONLY As Long = 0
Global Const SQL_CURSOR_KEYSET_DRIVEN As Long = 1
Global Const SQL_CURSOR_TYPE As Long = 6
Global Const SQL_CONCURRENCY As Long = 7
Global Const SQL_ROWSET_SIZE As Long = 9
Global Const SQL_NTS As Long = -3
'Global Const SQL_FETCH_NEXT As Long = 1
Global Const SQL_FETCH_FIRST As Long = 2
Global Const SQL_POSITION As Long = 0
Global Const SQL_LOCK_NO_CHANGE As Long = 0
Global Const SQL_CHAR As Long = 1

Function callODBCcursor()
 &nbsp;&nbsp; Dim Result As Integer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Return value.
 &nbsp;&nbsp; Dim hEnvironment As Long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Environment handle.
 &nbsp;&nbsp; Dim hConnect As Long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Connection handle.
 &nbsp;&nbsp; Dim hstmt As Long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Statement handle.
 &nbsp;&nbsp; Dim errorlocation As String
 &nbsp;&nbsp; Dim RowSetSize As Long
 &nbsp;&nbsp; Dim strSQL As String
 &nbsp;&nbsp; Dim ColCount As Integer
 &nbsp;&nbsp; Dim strThisRecord As String * 256
 &nbsp;&nbsp; Dim outlen As Long
 &nbsp;&nbsp; Dim strData As String
 &nbsp;&nbsp; Dim strDataFinal As String
 &nbsp;&nbsp; Dim RowCount As Integer
 &nbsp;&nbsp; Dim Cols As Integer
 &nbsp;&nbsp; Dim RowNum As Long
 &nbsp;&nbsp; Dim RowsGot As Long
 &nbsp;&nbsp; Dim RowStat As Integer

 &nbsp;&nbsp; On Error GoTo callODBCcursor_err
 &nbsp;&nbsp;&nbsp;&nbsp; 

<b> &nbsp;&nbsp; ' </b>Get an environment and connection handle
 &nbsp;&nbsp; Result = SQLAllocEnv(hEnvironment)&nbsp;&nbsp;&nbsp; 'Allocate environment handle
' allocate connection handle
 &nbsp;&nbsp; Result = SQLAllocConnect(ByVal hEnvironment, hConnect) 
 &nbsp;&nbsp; ' Set up the connection string
 &nbsp;&nbsp; Dim strdsn As String, strUID As String, strPWD As String
 &nbsp;&nbsp; strdsn = InputBox("Enter the name of your_
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; datasource.""Datasource Name?")
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If strdsn = "" Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; errorlocation = "DatasourceName"

 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GoTo callODBCcursor_err
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; strUID = "sa"
 &nbsp;&nbsp; strPWD = ""
 &nbsp;&nbsp; 'Establish the connection
 &nbsp;&nbsp; Result = SQLConnect(hConnect, strdsn, Len(strdsn), strUID,_
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Len(strUID), strPWD, Len(strPWD))
If Result = SQL_ERROR Then&nbsp;&nbsp;&nbsp; 'SQL_ERROR is +1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; errorlocation = "SQLConnect"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GoTo callODBCcursor_err
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If

<b> &nbsp; </b> 'Allocate a statement handle.
 &nbsp;&nbsp; Result = SQLAllocStmt(hConnect, hstmt)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Result = SQL_ERROR Then
errorlocation = "SQLAllocStmt"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GoTo callODBCcursor_err
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; 'Specifies "optimistic concurrency control, comparing row versions"
 &nbsp;&nbsp; Result = SQLSetStmtOption(hstmt, SQL_CONCURRENCY,_
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SQL_CONCUR_ROWVER)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Result = SQL_ERROR Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; errorlocation = "SQLSetStmtOption, Concurrency"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GoTo callODBCcursor_err
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; 'Specifies a keyset driven cursor
 &nbsp;&nbsp; Result = SQLSetStmtOption(hstmt, SQL_CURSOR_TYPE,_
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SQL_CURSOR_KEYSET_DRIVEN)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Result = SQL_ERROR Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; errorlocation = "SQLSetStmtOption Cursor Type"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GoTo callODBCcursor_err
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; 'Specifies the number of rows that are returned with the keyset
 &nbsp;&nbsp; RowSetSize = 5
 &nbsp;&nbsp; Result = SQLSetStmtOption(hstmt, SQL_ROWSET_SIZE,_
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RowSetSize)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Result = SQL_ERROR Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; errorlocation = "SQLSetStmtOption Rowset Size"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GoTo callODBCcursor_err
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; Result = SQLSetCursorName(hstmt, "C1", SQL_NTS)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Result = SQL_ERROR Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; errorlocation = "SQLSetCursorName"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GoTo callODBCcursor_err
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If

<b> &nbsp; </b> 'The SQL String that defines the data being returned by the cursor
 &nbsp;&nbsp; strSQL = "Select title_id, title from titles"
 &nbsp;&nbsp; 'Submit the SQL Statement
 &nbsp;&nbsp; Result = SQLExecDirect(hstmt, strSQL, Len(strSQL))
 &nbsp;&nbsp; 'How many columns came back?
 &nbsp;&nbsp; Result = SQLNumResultCols(hstmt, ColCount)
 &nbsp;&nbsp; 
RowCount = 1

 &nbsp;&nbsp; Result = SQLExtendedFetch(hstmt, SQL_FETCH_FIRST,_
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RowNum, RowsGot, RowStat)
 &nbsp;&nbsp; 
 &nbsp;&nbsp; 'Loop through each row "fetched" by the cursor
 &nbsp;&nbsp; For RowCount = 1 To RowSetSize
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Result = SQLSetPos(hstmt, RowCount, SQL_POSITION,_
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SQL_LOCK_NO_CHANGE)

 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Loop through each column
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strData = ""
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For Cols = 1 To ColCount
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Result = SQLGetData(hstmt, Cols, SQL_CHAR,_
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strThisRecord, 256, outlen)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strData = strData &amp; Left(strThisRecord, outlen)
 &nbsp;&nbsp;&nbsp;&nbsp; 'Add_ spaces for formatting

If Cols &lt; ColCount Then strData = strData &amp; "&nbsp;&nbsp;&nbsp; " 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next Cols
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strDataFinal = strDataFinal &amp; strData &amp; Chr$(10) &amp; Chr$(13)
 &nbsp;&nbsp; Next RowCount
 &nbsp;&nbsp; 

<b> &nbsp;&nbsp; </b>'Display final output
 &nbsp;&nbsp; Beep
 &nbsp;&nbsp; MsgBox strDataFinal

 &nbsp;&nbsp; 'Disconnect and free the connection and environment handles
 &nbsp;&nbsp; Result = SQLDisconnect(hConnect)
 &nbsp;&nbsp; Result = SQLFreeConnect(hConnect)
 &nbsp;&nbsp; Result = SQLFreeEnv(hEnvironment)

Exit Function

callODBCcursor_err:
 &nbsp;&nbsp; MsgBox "Error in section " &amp; errorlocation &amp; "."
 &nbsp;&nbsp; MsgBox "Error " &amp; Err &amp; ": " &amp; Err.Description
 &nbsp;&nbsp; Result = SQLDisconnect(hConnect)
 &nbsp;&nbsp; Result = SQLFreeConnect(hConnect)
 &nbsp;&nbsp; Result = SQLFreeEnv(hEnvironment)
End Function
</code></pre>
</BODY>
</HTML>
