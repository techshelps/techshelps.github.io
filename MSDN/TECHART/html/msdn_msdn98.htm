<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 98: Saving a Window's Client Area in Bitmap Format</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn98"></a></sup>Tip 98: Saving a Window's Client Area in Bitmap Format</h1>
<p>
May 29, 1995</p>
<h2>Abstract</h2>
<p>
You may need to create a bitmap (.BMP) image file that contains a window's client area. This article explains how to save a window's client area to disk in a bitmap image file format.</p>
<h2>Saving Bitmap Images to Disk</h2>
<p>
You can save the contents of a window to a disk file in bitmap format by retrieving the target window's rectangle area and then using several Windows® application programming interface (API) functions to save that image to a device context such as a <b>Picture Box</b> control.</p>
<p>
The <b>GetWindowRect</b> function can be used to retrieve the bounding rectangle of a window or form. This rectangle includes the window's borders, title bars, and other attributes associated with a window. The <b>Declare</b> statement for the <b>GetWindowRect</b> function is as follows:</p>
<pre><code>Private Declare Sub GetWindowRect Lib "User" (ByVal hWnd As Integer, lpRect 
  As RECT)
</code></pre>
<p>
The <b>GetWindowRect</b> function takes two arguments: an integer value containing the window's handle and a pointer to a <b>RECT</b> rectangle structure. The <b>RECT</b> structure will contain the dimensions of the window's rectangle area after the function is called.</p>
<p>
The <b>BitBlt</b> function uses the rectangle that contains the image you want to save to disk to copy the image from one device context to another. In this case, <b>BitBlt</b> is used to copy the window's client area to the <b>Picture Box</b> control. Then the Save As dialog box is used to save the contents of the <b>Picture Box</b> to disk as a .BMP file.</p>
<h2>Example Program</h2>
<p>
This program shows how to save the client area of a form or window and save it as a .BMP file.
<ol>
<li>
Create a new project in Visual Basic®. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant</b> and <b>Declare</b> statements to the General Declarations section of Form1 (note that each <b>Declare</b> statement must be typed as a single line of code):<pre><code>Private Declare Function GetActiveWindow Lib "User" () As Integer
Private Declare Function GetWindowDC Lib "User" (ByVal hWnd As Integer) 
 &nbsp; As Integer
Private Declare Sub GetWindowRect Lib "User" (ByVal hWnd As Integer, lpRect 
 &nbsp; As RECT)
Private Declare Function ReleaseDC Lib "User" (ByVal hWnd As Integer, ByVal hDC 
 &nbsp; As Integer) As Integer
Private Declare Function BitBlt% Lib "GDI" (ByVal hDestDC%, ByVal X%, ByVal Y%, 
 &nbsp; ByVal nWidth%, ByVal nHeight%, ByVal hSrcDC%, ByVal XSrc%, ByVal YSrc%, ByVal 
 &nbsp; dwRop&amp;)
Const SRCCOPY = &amp;HCC0020
</code></pre>
</li>
<li>
From the Insert menu, select Form to create a second form. Form2 is created by default. Set its <b>Picture</b> property to "C:\WINDOWS\ARCHES.BMP".<br><br></li>
<li>
From the Insert menu, select Module to create a BASIC module. Module1.Bas is created by default.<br><br></li>
<li>
Add the following <b>Type</b> structure to Module1.Bas:<pre><code>Type RECT
 &nbsp;&nbsp; Left As Integer
 &nbsp;&nbsp; Top As Integer
 &nbsp;&nbsp; Right As Integer
 &nbsp;&nbsp; Bottom As Integer
End Type
</code></pre>
</li>
<li>
Add a <b>Timer</b> control to Form1. Timer1 is created by default.<br><br></li>
<li>
Add a <b>Picture Box</b> control to Form1. Picture1 is created by default. Set its <b>AutoRedraw</b> property to True.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; SaveToPicture
End Sub
</code></pre>
</li>
<li>
Create a new function called <b>SaveToPicture</b>. Add the following code to this function:<pre><code>Sub SaveToPicture()
 &nbsp;&nbsp; Dim hDCCur As Long
 &nbsp;&nbsp; Dim hWndCur As Long
 &nbsp;&nbsp; Dim HWndOld As Long
 &nbsp;&nbsp; Dim Tim As Double
 &nbsp;&nbsp; Dim ThisRect As RECT
 &nbsp;&nbsp; Dim DX As Long
 &nbsp;&nbsp; Dim DY As Long
 &nbsp;&nbsp; 
 &nbsp;&nbsp; HWndOld = GetActiveWindow()
 &nbsp;&nbsp; Form2.Show
 &nbsp;&nbsp; hWndCur = Form2.hWnd
 &nbsp;&nbsp; Tim = Timer + 0.5
 &nbsp;&nbsp; 
 &nbsp;&nbsp; Do
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DoEvents
 &nbsp;&nbsp; Loop Until Timer &gt;= Tim
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; hDCCur = GetWindowDC(hWndCur)
 &nbsp;&nbsp; Call GetWindowRect(hWndCur, ThisRect)
 &nbsp;&nbsp; DX = ThisRect.Right - ThisRect.Left + 2: DY = ThisRect.Bottom - ThisRect.Top 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + 2
 &nbsp;&nbsp; 
 &nbsp;&nbsp; With Picture1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Width = Screen.TwipsPerPixelX * DX
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Height = Screen.TwipsPerPixelY * DY
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Call BitBlt(.hDC, 0, 0, DX, DY, hDCCur, 0, 0, SRCCOPY)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Picture = .Image
 &nbsp;&nbsp; End With
 &nbsp;&nbsp; 
 &nbsp;&nbsp; Call ReleaseDC(hWndCur, hDCCur)
 &nbsp;&nbsp; Form2.Hide
 &nbsp;&nbsp; 
 &nbsp;&nbsp; CommonDialog1.DefaultExt = "BMP"
 &nbsp;&nbsp; CommonDialog1.DialogTitle = "Save Window As"
 &nbsp;&nbsp; CommonDialog1.FileName = "*.BMP"
 &nbsp;&nbsp; CommonDialog1.Action = 2&nbsp; 
 &nbsp;&nbsp; 
 &nbsp;&nbsp; If CommonDialog1.FileName &lt;&gt; Empty Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SavePicture Picture1.Picture, CommonDialog1.FileName
 &nbsp;&nbsp; End If
End Sub
</code></pre>
</li>
<li>
Add a <b>Common Dialog</b> control to Form1. CommonDialog1 is created by default.</li>
</ol>
<p>
Run this program by pressing the F5 function key. Click once on the command button. The ARCHES.BMP picture is displayed on Form2. Next, the Save File As dialog box pops up on the screen. Type a filename for the .BMP file and Visual Basic will save Form2's window (which contains the ARCHES.BMP picture) to a new bitmap file.</p>
<h2>Additional References</h2>
<p>
"Bitmaps." (MSDN Library Archive, Product Documentation, DDKs, Windows 3.1 DDK, Device Driver Adaptation Guide)</p>
<p>
"GetActiveWindow"; "GetWindowDC"; and "ReleaseDC." (MSDN Library Archive, Product Documentation, SDKs, Windows 3.1 SDK, Programmer's Reference Volume 2: Functions)</p>
<p>
Knowledge Base Q71104. "How to Use Windows BitBlt Function in Visual Basic Application."</p>
</BODY>
</HTML>
