<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 26: Enumerating Screen and Printer Fonts</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn26"></a></sup>Tip 26: Enumerating Screen and Printer Fonts</h1>
<p>
Created: March 1, 1995</p>
<h2>Abstract</h2>
<p>
When displaying text in a Visual Basic® program, you have the option of specifying that the text be shown in different screen fonts. This also applies to text sent to the printer device. However, you may need to determine which fonts are common to both the screen and printer so that you can use a font available to both devices in your application.</p>
<h2>Determining Available Fonts</h2>
<p>
The <b>FontName</b> property is used by many controls in Visual Basic®, as well as the printer. In an application, you can change the default font to one more suitable for your program by setting the <b>FontName</b> property to one of the fonts available in Windows®.</p>
<p>
You can easily find out which fonts are available for the screen or printer by using the <b>FontCount</b> property in conjunction with the Fonts property. <b>FontCount</b> tells you how many fonts are available for the specified device, while Fonts tells you the name of the actual font.</p>
<p>
If you need to determine which fonts are common to both the screen and printer, you can simply loop through both font lists and create a list of those fonts that are the same.</p>
<h2>Example Program</h2>
<p>
The program below displays three List Box controls on a Visual Basic form. Printer fonts are listed in the first List Box, screen fonts in the second List Box, and those fonts that are common to both the printer and screen in the third List Box.
<ol>
<li>
Start a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add three List Box controls, side by side, to Form1.<br><br></li>
<li>
For each list box, set its <b>Sorted</b> property to True.<br><br></li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Sub Form_Load()
 &nbsp;&nbsp; Dim X As Integer
 &nbsp;&nbsp; Dim Y As Integer&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; For X = 0 To Screen.FontCount - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For Y = 0 To Printer.FontCount - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Screen.Fonts(X) = Printer.Fonts(Y) Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List3.AddItem Printer.Fonts(Y)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next Y
 &nbsp;&nbsp; Next X&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; For X = 0 To Printer.FontCount - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List1.AddItem Printer.Fonts(X)
 &nbsp;&nbsp; Next X
For X = 0 To Screen.FontCount - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List2.AddItem Screen.Fonts(X)
 &nbsp;&nbsp; Next X
End Sub
</code></pre>
</li>
</ol>
</BODY>
</HTML>
