<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 108: Flashing Controls to Get the User's Attention</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn108"></a></sup>Tip 108: Flashing Controls to Get the User's Attention</h1>
<p>
June 12, 1995</p>
<h2>Abstract</h2>
<p>
When developing an application in Microsoft® Visual Basic®, you can use the <b>BackColor</b> property to change the background color of a control. This article explains how you can temporarily flash a control's <b>BackColor</b> property to draw the user's attention to a specific control.</p>
<h2>Changing a Control's BackColor Property</h2>
<p>
When designing a Microsoft® Visual Basic® application , you place controls such as <b>List Boxes</b> and <b>Text Boxes</b> on a form. At run time, you can move the focus to one of these objects by using Visual Basic's <b>SetFocus</b> method. Users can then see that that particular control needs to be addressed in some way. For example, if a <b>Text Box</b> receives the focus, users know they must type some text into that control.</p>
<p>
However, users may not actually notice that the focus has been set to a specific control because the "rubberband" (highlighting) around the inside of the control is not that obvious. To alert the user, you could change the background color of the control from white to, say, red, to draw the user's attention to that control. When the control loses the focus, you could reset the control's background color to white. This procedure, however, means that the control would be a different color as long as that control retained the focus. In some situations, this would not be appropriate.</p>
<p>
A far better solution would be to change the control's background color for just a few seconds. The example program below "flashes" a control by quickly changing the control's background color three times in succession. The <b>Timer</b> function is used to cause a short time delay in the program. Each time a 2-second interval elapses, the control's color is changed from white to red, then back to white. The For-Next loop dictates how many times the control is flashed. In this case, a value of 3 was used to flash the color three times. This creates a very visual clue to draw the user's attention to that specific control.</p>
<h2>Example Program</h2>
<p>
This program shows how to highlight the control that has the focus. Run the example program by pressing F5. Then click the Flash Command Button. Note that the background color of the <b>List Box</b> control is changed to red and flashed three times.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Private Sub Form_Load()
 &nbsp;&nbsp; List1.AddItem "Item #1"
 &nbsp;&nbsp; List1.AddItem "Item #2"
 &nbsp;&nbsp; List1.AddItem "Item #3"
End Sub
</code></pre>
</li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default. Set its <b>Caption</b> property to "Flash".<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; FlashControl List1
End Sub
</code></pre>
</li>
<li>
Add a <b>List Box</b> control to Form1. List1 is created by default.<br><br></li>
<li>
Create a new function called <b>FlashControl</b>. Add the following code to this function:<pre><code>Sub FlashControl(C As Control)
 &nbsp;&nbsp; Dim OldColor As Double
 &nbsp;&nbsp; Dim Delay As Double
 &nbsp;&nbsp; Dim X As Integer
 &nbsp;&nbsp; 
 &nbsp;&nbsp; OldColor = C.BackColor
 &nbsp;&nbsp; For X = 1 To 3
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C.BackColor = QBColor(12)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Delay = Timer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; While Timer - Delay &lt; 0.2
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DoEvents
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Wend
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C.BackColor = OldColor
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Delay = Timer
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; While Timer - Delay &lt; 0.2
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DoEvents
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Wend
 &nbsp;&nbsp; Next X
 &nbsp;&nbsp; C.SetFocus
End Sub
</code></pre>
</li>
</ol>
</BODY>
</HTML>
