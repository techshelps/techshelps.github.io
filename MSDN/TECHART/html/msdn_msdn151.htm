<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 151: Finding Whole Words in a Text Box Control</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn151"></a></sup>Tip 151: Finding Whole Words in a Text Box Control</h1>
<p>
September 5, 1995</p>
<h2>Abstract</h2>
<p>
When you design a Microsoft® Visual Basic® application, you can add a <b>Text Box</b> control to your project. The <b>Text Box</b> control lets a user type text that can be manipulated by your program. This article explains how you can add a word-search function to your program.</p>
<h2>Using the InStr Function</h2>
<p>
The <b>Text Box</b> control provided in Microsoft® Visual Basic® acts like a miniature word-processing program. As new text is typed, it is appended to the text that already exists in the control. Your user can edit existing text or delete text that is no longer needed. However, that is the extent of the word-processing capability of the <b>Text Box</b>. You can, however, use the <b>InStr</b> function to add your own search function to find words in a <b>Text Box</b> control.</p>
<p>
In the example program below, you use a <b>FindMatch</b> function to search the <b>Text Box</b> control for a specific word. A message box is displayed telling you whether or not the target word was found.</p>
<p>
You can use the <b>InStr</b> function to isolate a specific piece of text within a larger piece of text. When the search finds a specific word match, the <b>InStr</b> function identifies the target text.</p>
<p>
It is a simple task to direct the <b>InStr</b> function to search for a particular word in the <b>Text Box</b> control. Let's assume you want to see whether the word <i>dog</i> is in the string, "He owns a cat and a dog". To do this, you tell <b>InStr</b> to search for the target word by issuing a statement such as:</p>
<pre><code>X = InStr("He owns a cat and a dog", "dog")
</code></pre>
<p>
Because the word <i>dog</i> actually exists in the sentence, <b>InStr</b> will report where it found the string <i>dog</i>. In the example program below, you assume that a word is defined by a space character, both before and after the word. However, if the string ends with a period character, then the <b>InStr</b> function will not find the word <i>dog</i>. This is because that word is actually the characters <i>d-o-g-period</i>.</p>
<p>
Therefore, you must take punctuation characters into account when you write a word-search function. In the example program below, you isolate each word that is surrounded by space characters. In addition, you isolate words that end with a linefeed, carriage return, comma, period, or space. This enables you to determine whether a word exists in the <b>Text Box</b> control, regardless of punctuation that may or may not be appended to the end of the word.</p>
<h2>Example Program</h2>
<p>
This program shows how to search a <b>Text Box</b> control for whole words.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default. Set its <b>MultiLine</b> property to True.<br><br></li>
<li>
Add a <b>Label</b> control to Form1. Label1 is created by default. Set its <b>Caption</b> property to "Find word:".<br><br></li>
<li>
Add a second <b>Text Box</b> control to Form1. Text2 is created by default.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim X As Integer
 &nbsp;&nbsp; X = FindMatch(Text1.Text, Text2.Text)
 &nbsp;&nbsp; If X = 0 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "Word not found"
 &nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "Word found"
 &nbsp;&nbsp; End If
End Sub
</code></pre>
</li>
<li>
Create a new function called <b>FindMatch</b>. Add the following code to this function:<pre><code>Function FindMatch(Str1 As String, Str2 As String) As Integer
 &nbsp;&nbsp; Dim Match As Integer
 &nbsp;&nbsp; Dim Char1 As String
 &nbsp;&nbsp; Dim Char2 As String
 &nbsp;&nbsp; 
 &nbsp;&nbsp; Match = InStr(Str1, Str2)
 &nbsp;&nbsp; 
 &nbsp;&nbsp; If Match &lt;&gt; 0 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Char1 = Mid$(Str1, Match - 1, 1)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Codes(Char1) Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Char2 = Mid$(Str1, Match + Len(Str2), 1)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Codes(Char2) Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FindMatch = True: Exit Function
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; End If
 &nbsp;&nbsp; 
 &nbsp;&nbsp; FindMatch = False
End Function
</code></pre>
</li>
<li>
Create a new function called <b>Codes</b>. Add the following code to this function:<pre><code>Function Codes(PuncStr As String) As Integer
 &nbsp;&nbsp; If PuncStr = "," Or PuncStr = "." Or PuncStr = " " Or PuncStr = Chr(10) Or PuncStr = Chr(13) Or PuncStr = Chr(9) Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Codes = True
 &nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Codes = False
 &nbsp;&nbsp; End If
End Function
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. Type some text in the first <b>Text Box</b> control. In the second <b>Text Box</b> control, type a word that you want to search for in the first <b>Text Box</b>. Click the command button to execute the search routine. A message box is displayed, telling you whether the target word (in Text2) was found in the <b>Text Box</b> (Text1).</p>
</BODY>
</HTML>
