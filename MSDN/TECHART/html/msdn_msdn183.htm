<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 183: Changing the Color of the Grid Control's Cells</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn183"></a></sup>Tip 183: Changing the Color of the Grid Control's Cells</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
You can present information to the user of your Microsoft® Visual Basic® application in the form of a <b>Grid</b> control, which displays the information in cells. This article explains how to change the color of the cells and the color of the text within the cells.</p>
<h2>Changing the Color of Cells and Cell Text</h2>
<p>
When developing a Microsoft® Visual Basic® application, you may need to display data to your user by using the <b>Grid</b> control. The <b>Grid</b> control allows you to group related information into columns and rows.</p>
<p>
The <b>Grid</b> control, however, does not provide any properties or methods for changing the color of text within individual cells or the color of the cell itself. As a workaround to this shortcoming, you can use a <b>Picture Box</b> control to change the appearance of cells in a <b>Grid</b> control.</p>
<p>
In the example program below, you set the <b>BackColor</b> and <b>ForeColor</b> properties of the <b>Picture Box</b> control to the desired colors. Next, you use the <b>Print</b> method to print the original contents of a cell in the <b>Grid</b> control to the <b>Picture Box</b> control. The final step is to transfer the newly created image to the <b>Grid</b> control's <b>Picture</b> property. This, in turn, displays the cell's text in a specific color or changes the cell's color.</p>
<h2>Example Program</h2>
<p>
This program shows how to set the color of a <b>Grid</b> control's cells and the text within specific cells.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
From the Visual Basic Tools menu, select Custom Controls. Select the "Microsoft Grid Control" from the list of controls to add the <b>Grid</b> control to your toolbox.<br><br></li>
<li>
Add a <b>Grid</b> control to Form1. Grid1 is created by default. Set its <b>Rows</b> property to 5 and its <b>Columns</b> property to 5.<br><br></li>
<li>
Add a <b>Picture Box</b> control to Form1. Picture1 is created by default. Size the <b>Picture Box </b>control so that it is slightly larger than the size of one cell in the <b>Grid</b> control. Set the <b>Visible</b> property of the <b>Picture Box</b> control to False.<br><br></li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Private Sub Form_Load()
 &nbsp;&nbsp; Dim I As Integer
 &nbsp;&nbsp; Dim J As Integer

 &nbsp;&nbsp; For I = 1 To Grid1.Rows - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For J = 1 To Grid1.Cols - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Grid1.Row = I
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Grid1.Col = J
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Fill cell text so that "(I,J)" string is
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Grid1.Text = "(" &amp; CStr(I) &amp; "," &amp; CStr(J) &amp; ")"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next J
 &nbsp;&nbsp; Next I

End Sub
</code></pre>
</li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim I As Integer
 &nbsp;&nbsp; Dim J As Integer

 &nbsp;&nbsp; For I = 1 To Grid1.Rows - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For J = 1 To Grid1.Cols - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Call SetGridCell(Grid1, I, J, QBColor(I - 1), QBColor(15))
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next J
 &nbsp;&nbsp; Next I
End Sub
</code></pre>
</li>
<li>
Add a second <b>Command Button</b> control to Form1. Command2 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command2:<pre><code>Private Sub Command2_Click()
 &nbsp;&nbsp; Dim I As Integer
 &nbsp;&nbsp; Dim J As Integer

 &nbsp;&nbsp; For I = 1 To Grid1.Rows - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For J = 1 To Grid1.Cols - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Call SetGridCell(Grid1, I, J, QBColor(15), QBColor(J - 1))
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next J
 &nbsp;&nbsp; Next I

End Sub
</code></pre>
</li>
<li>
Add a third <b>Command Button</b> control to Form1. Command3 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command3:<pre><code>Private Sub Command3_Click()
 &nbsp;&nbsp; Call ClearGrid(Grid1)
End Sub
</code></pre>
</li>
<li>
Create a new subroutine called <b>SetGridCell</b>. Add the following code to this subroutine:<pre><code>Sub SetGridCell(Grd As Grid, RowNum%, ColNum%, BkClr&amp;, FrClr&amp;)
 &nbsp;&nbsp; Grd.Row = RowNum%
 &nbsp;&nbsp; Grd.Col = ColNum%
 &nbsp;&nbsp; Picture1.BackColor = BkClr
 &nbsp;&nbsp; Picture1.ForeColor = FrClr
 &nbsp;&nbsp; Picture1.CurrentX = 0
 &nbsp;&nbsp; Picture1.CurrentY = 0
 &nbsp;&nbsp; Picture1.Print Grd.Text
 &nbsp;&nbsp; Grd.Picture = Picture1.Image

End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. Click the first <b>Command Button</b> control. Each row in the <b>Grid</b> control appears in a different color. Click the second <b>Command Button</b> control. The text in each column of the <b>Grid</b> control appears in a different color. Click the third <b>Command Button</b> control to restore the <b>Grid</b> control to its original appearance.</p>
</BODY>
</HTML>
