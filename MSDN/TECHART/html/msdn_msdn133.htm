<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 133: Using the SendMessage Function to Scroll Contents of Text Box Controls</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn133"></a></sup>Tip 133: Using the SendMessage Function to Scroll Contents of Text Box Controls</h1>
<p>
July 1, 1995</p>
<h2>Abstract</h2>
<p>
In Microsoft® Visual Basic®, you can programmatically scroll through the contents of a <b>Text Box</b> control without actually waiting for your user to click the <b>Scroll Bar</b> control. You can do this by sending one of the scrolling messages to the system with the Microsoft Windows® application programming interface (API) <b>SendMessage</b> function. </p>
<h2>Scrolling Through a Text Box Control</h2>
<p>
In the example program below, the code attached to the Left command button scrolls the contents of the <b>Text Box</b> control to the left by one character position. You accomplish this by sending a WM_HSCROLL message to the <b>Text Box</b> control. When a user clicks the horizontal scroll bar in the <b>Text Box</b>, this message is sent to the window. In this program, however, you send the message when the user clicks the command button.</p>
<p>
To control the direction of the scrolling action, you must tell the Microsoft® Windows® application programming interface (API) <b>SendMessage</b> function to send a WM_HSCROLL message to the <b>Text Box</b> control with a directional argument in the <i>wParam</i> argument. The following shows the valid settings that you can be specify for the <i>wParam</i> argument.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=35%>SB_LEFT</td>
<td width=65%>Scroll to the left all the way</td>
</tr>
<tr valign=top>
<td width=35%>SB_RIGHT</td>
<td width=65%>Scroll to the right all the way</td>
</tr>
<tr valign=top>
<td width=35%>SB_LINELEFT</td>
<td width=65%>Scroll left one unit</td>
</tr>
<tr valign=top>
<td width=35%>SB_LINERIGHT</td>
<td width=65%>Scroll right one unit</td>
</tr>
</table><br>
<p>
As you can see from the list above, to scroll the contents of the <b>Text Box</b> left by one character, you set the <i>wParam</i> argument to SB_LINELEFT. To scroll the contents of the <b>Text Box </b>right by one character, you set the <i>wParam</i> argument to SB_LINERIGHT.</p>
<h2>Example Program</h2>
<p>
This program shows how you can scroll the contents of a <b>Text Box</b> control by using the <b>SendMessage</b> function.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant </b>and <b>Declare</b> statements to the General Declarations section of Form1 (note that the <b>Declare</b> statement must be typed as a single line of code):<pre><code>Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" 
 &nbsp; (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Integer, 
 &nbsp; ByVal lParam As Long) As Long
Const SB_LINERIGHT = 1
Const SB_LINELEFT = 0
Const WM_HSCROLL = &amp;H114
</code></pre>
</li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default. Set its <b>MultiLine</b> property to True. Set its <b>ScrollBars</b> property to 3-Both.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default. Set its <b>Caption</b> property to "Left".<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim X As Long
 &nbsp;&nbsp; X = SendMessage(Text1.hwnd, WM_HSCROLL, SB_LINELEFT, ByVal 0&amp;)
End Sub
</code></pre>
</li>
<li>
Add a second <b>Command Button</b> control to Form1. Command2 is created by default. Set its <b>Caption</b> property to "Right".<br><br></li>
<li>
Add the following code to the Click event for Command2:<pre><code>Private Sub Command2_Click()
 &nbsp;&nbsp; Dim X As Long
 &nbsp;&nbsp; X = SendMessage(Text1.hwnd, WM_HSCROLL, SB_LINERIGHT, ByVal 0&amp;)
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing F5. Type some text into the <b>Text Box</b> control. Click the Left command button. The text scrolls to the left by one character position. Click the Right command button. The text scrolls to the right by one character position.</p>
<h2>Additional References</h2>
<p>
"Scroll Bar Messages." (MSDN Library Archive, Books and Periodicals, Programming Windows 3.1 by Charles Petzold, PART 1 Getting Started, Chapter 2 Painting with Text)</p>
<p>
"SendMessage." (MSDN Library Archive, Product Documentation, SDKs, Windows 3.1 SDK, Programmer's Reference Volume 2: Functions)</p>
<p>
"WM_HSCROLL." (MSDN Library Archive, Product Documentation, SDKs, Windows 3.1 SDK, Programmer's Reference Volume 3: Messages, Structures, and Macros)</p>
</BODY>
</HTML>
