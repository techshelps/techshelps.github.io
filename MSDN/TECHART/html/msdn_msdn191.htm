<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 191: Shelling to Other Applications</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn191"></a></sup>Tip 191: Shelling to Other Applications</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
This article explains how to run MS-DOS®-based and Microsoft Windows®-based applications from within a Microsoft Visual Basic® application.</p>
<h2>Running MS-DOS and Windows Applications</h2>
<p>
When you want to run an MS-DOS®-based or Microsoft® Windows®-based application, you can use the Windows application programming interface (API) <b>OpenProcess</b> function. The <b>OpenProcess</b> function allows you to control how the application is run.</p>
<p>
In the example program below, you use the <b>OpenProcess</b> function to launch the Notepad application. The <b>OpenProcess</b> function returns the handle of the newly opened process (that is, application). When you have the process handle for Notepad, you can use the Windows API <b>GetExitCodeProcess</b> function to determine whether Notepad is still running in memory.</p>
<p>
The <b>GetExitCodeProcess</b> function returns a value of STILL_ACTIVE if the opened process is still running in memory. Knowing this, you can periodically check the status of the Notepad application in a Do-While loop. When the example program finds that Notepad is not running, the example program displays a message that Notepad was indeed terminated.</p>
<h2>Example Program</h2>
<p>
This program shows how to run an MS-DOS-based or Windows-based application in the background. The application continues running in the background until the user terminates it.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant</b> and <b>Declare</b> statements to the General Declarations section of Form1 (note that each <b>Declare</b> statement must be typed as a single line of code):<pre><code>Private Declare Function OpenProcess Lib "kernel32" 
 &nbsp; (ByVal dwDesiredAccess As Long, ByVal bInheritHandle 
 &nbsp; As Long, ByVal dwProcessId As Long) As Long
Private Declare Function GetExitCodeProcess Lib "kernel32" 
 &nbsp; (ByVal hProcess As Long, lpExitCode As Long) As Long
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds 
 &nbsp; As Long)
Const STILL_ACTIVE = &amp;H103
Const PROCESS_QUERY_INFORMATION = &amp;H400
</code></pre>
</li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim JobToDo As String
 &nbsp;&nbsp; JobToDo = "c:\windows\notepad.exe"
 &nbsp;&nbsp; Shell32Bit JobToDo
End Sub
</code></pre>
</li>
<li>
Create a new subroutine called <b>Shell32Bit</b>. Add the following code to this subroutine:<pre><code>Sub Shell32Bit(ByVal JobToDo As String)
 &nbsp;&nbsp; Dim hProcess As Long
 &nbsp;&nbsp; Dim RetVal As Long
 &nbsp;&nbsp; 'The next line launches JobToDo as icon,
 &nbsp;&nbsp; 'captures process ID
 &nbsp;&nbsp; hProcess = OpenProcess(PROCESS_QUERY_INFORMATION, Flase, Shell(JobToDo, 6))
 &nbsp;&nbsp; Do
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Get the status of the process
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GetExitCodeProcess hProcess, RetVal
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Sleep command recommended as well
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'as DoEvents
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DoEvents: Sleep 100
 &nbsp;&nbsp; 'Loop while the process is active
 &nbsp;&nbsp; Loop While RetVal = STILL_ACTIVE
 &nbsp;&nbsp; MsgBox "Notepad terminated by user"
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. Click the <b>Command Button</b> control. The example program runs the Windows Notepad application. Notice that the Notepad icon appears in the Windows taskbar.</p>
<p>
Notepad runs in the background until you quit it. The example program displays a message box that indicates that Notepad was terminated.</p>
</BODY>
</HTML>
