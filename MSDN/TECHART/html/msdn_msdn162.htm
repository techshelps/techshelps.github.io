<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 162: Determining Whether a File Exists</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn162"></a></sup>Tip 162: Determining Whether a File Exists</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
This article explains how to determine whether a file exists on a disk drive in a Microsoft® Visual Basic® application.</p>
<h2>Using the OpenFile Function</h2>
<p>
You can use the Microsoft® Windows® application programming interface (API) <b>OpenFile</b> function in a Microsoft Visual Basic® application to determine whether a file actually exists on a disk drive. To use this function, the following <b>Declare</b> statement should be included in your project:</p>
<pre><code>Private Declare Function OpenFile Lib "kernel32" (ByVal lpFileName As String, 
 &nbsp; lpReOpenBuff As OFSTRUCT, ByVal wStyle As Long) As Long
</code></pre>
<p>
The <b>OpenFile</b> function requires three arguments. The first argument is a string containing the full path of the file to test. The second argument is an <b>OFSTRUCT</b> structure, which contains information about the file after the <b>OpenFile</b> function is called. The third argument is the action you want the <b>OpenFile</b> function to take.</p>
<p>
The third argument, <i>wStyle</i>, tells the <b>OpenFile</b> function the action that the function is to perform. Because you want to find out whether a given file exists, you call the <b>OpenFile</b> function with the <i>wStyle</i> argument set to OF_EXIST. If the file does not exist, the <b>OpenFile</b> function will return an error code of 2—File Not Found.</p>
<p>
When the <b>OpenFile</b> function is run, it writes information about the file to the <b>OFSTRUCT</b> structure. Therefore, if an error occurs, you must retrieve the actual error code from the <b>OFSTRUCT</b> structure itself. In the example program below, you use the statement:</p>
<pre><code>If OpenFileStructure.nErrCode = FILE_NOT_FOUND Then
</code></pre>
<p>
After testing for the "File Not Found" error, you can indicate to the user whether or not the file exists.</p>
<h2>Example Program</h2>
<p>
This program shows how to determine whether a file already exists on the disk drive.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Declare</b> statement to the General Declarations section of Form1 (note that this <b>Declare</b> statement must be typed as a single line of text):<pre><code>Private Declare Function OpenFile Lib "kernel32" (ByVal lpFileName As String, 
 &nbsp; lpReOpenBuff As OFSTRUCT, ByVal wStyle As Long) As Long
</code></pre>
</li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim TestFile As String
 &nbsp;&nbsp; Dim Ret As Integer

 &nbsp;&nbsp; TestFile = "c:\auto.bat"
 &nbsp;&nbsp; Ret = FileExists(TestFile)

 &nbsp;&nbsp; If Ret Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "File already exists"
 &nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "File does not exist"
 &nbsp;&nbsp; End If
End Sub
</code></pre>
</li>
<li>
Create a new function called <b>FileExists</b>. Add the following code to this function:<pre><code>Function FileExists(FileName As String) As Integer
 &nbsp;&nbsp; Dim RetCode As Integer
 &nbsp;&nbsp; Dim OpenFileStructure As OFSTRUCT

 &nbsp;&nbsp; Const OF_EXIST = &amp;H4000
 &nbsp;&nbsp; Const FILE_NOT_FOUND = 2

 &nbsp;&nbsp; RetCode = OpenFile(FileName$, OpenFileStructure, OF_EXIST)
 &nbsp;&nbsp; If OpenFileStructure.nErrCode = FILE_NOT_FOUND Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileExists = False
 &nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileExists = True
 &nbsp;&nbsp; End If
End Function
</code></pre>
</li>
<li>
From the Visual Basic Insert menu, select Module to create a new module. Module1.Bas is created by default.<br><br></li>
<li>
Add the following <b>Type</b> and <b>Constant </b>statements to Module1.Bas:<pre><code>Public Const OFS_MAXPATHNAME = 128

Type OFSTRUCT
 &nbsp;&nbsp; cBytes As Byte
 &nbsp;&nbsp; fFixedDisk As Byte
 &nbsp;&nbsp; nErrCode As Integer
 &nbsp;&nbsp; Reserved1 As Integer
 &nbsp;&nbsp; Reserved2 As Integer
 &nbsp;&nbsp; szPathName(OFS_MAXPATHNAME) As Byte
End Type
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing F5. Click the <b>Command Button</b> control. A message box appears. If the file "C:\AUTO.BAT" exists on drive C, the message box indicates that the target file does exist. If the file was not found on the disk, however, the message box indicates that the file does not exist.</p>
</BODY>
</HTML>
