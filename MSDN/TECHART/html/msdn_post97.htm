<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Office Compatible 97--Post to Exchange</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_post97"></a></sup>Office Compatible 97—Post to Exchange</h1>
<p>
by Ross Comer<br>
Development Lead, Microsoft Office Compatible</p>
<p>
June 1996</p>
<h2>Abstract</h2>
<p>
This article provides a detailed description of the Post to Exchange feature of Office Compatible and the steps necessary to implement this feature into your custom application. It also provides sample code for both a C/C++ interface and an OLE Automation interface accessible from Visual Basic or VBA.</p>
<h2>Description</h2>
<p>
Post To Exchange enables the user of a client application to post any document (not necessarily saved in an OLE storage) to Exchange so that co-workers can view and work with it. This call works the same as the Post to Exchange option in the Office applications. This API will work with any mail system which supports MAPI calls for posting documents. </p>
<h3>Dialogs</h3>
<p>
When using the Post functionality with a system that uses Exchange, the following dialog will come up in the application and allow the user to select a folder in which to post the document.</p>
<p>
<img src="post97_1.gif" border=0></p>
<h2>C Interface</h2>
<p>
The following APIs should be used to post document to Exchange.&nbsp; </p>
<p>
FCanPostDoc returns False if Posting is not supported on this system.</p>
<pre><code>   // Is Document Posting enabled?
   BOOL FCanPostDoc();&nbsp; 
</code></pre>
<p>
The PostDoc call posts the document to Exchange.</p>
<pre><code>   HRESULT PostDoc( 
      LPCWSTR wzFileName,   // full path of file to post 
                     // This parameter is used to post the document.
      LPWSTR wzSubject,   // Message subject
                     // This parameter launches the application.
      HWND hwnd);      // hWnd of the application window

</code></pre>
<h3>Sample C Code</h3>
<pre><code>// Get the OfficeCompatible interface
IOfficeCompatible *pOC = CreateOfficeCompatible(L”SampleApp”, L”SampleAplication”)

if (pOC == NULL)
   return;

if (pOC-&gt;FCanPostDoc() == TRUE)
   pOC-&gt;PostDoc(wzFileName, wzFileName, hwndMain);
</code></pre>
<h2>Automation Interface</h2>
<p>
Document Posting is also available through the Office Compatible Automation interfaces.</p>
<pre><code>From the OfficeCompatible Object:
   Properties
      CanPostDocument - Boolean, read only
   Methods
      PostDocument([in,opt] fileName, [in,opt] Subject)
</code></pre>
<h3>Sample VB Code</h3>
<pre><code>   Set OC = CreateObject("OfficeCompatible.Application")
   If OC Is Nothing Then Exit Sub
 &nbsp;&nbsp; 
   On Error Resume Next
   OC.Init "OCBSamp", "Office Compatible Basic Sample App"

   If (Err.Number &lt;&gt; 0) Then
      Set OC = Nothing
      On Error GoTo 0
      Exit Sub
   End If
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
   If (oc.CanPostDocument = TRUE) Then
      OC.PostDocument(FileName)
   End If
</code></pre>
</BODY>
</HTML>
