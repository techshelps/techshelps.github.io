<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 70: Creating Temporary Files</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn70"></a></sup>Tip 70: Creating Temporary Files</h1>
<p>
May 1, 1995</p>
<h2>Abstract</h2>
<p>
When developing an application in Visual Basic®, you may need to create a temporary file on disk. This article explains how to use the Windows® application programming interface (API) <b>GetTempFileName</b> function to create temporary files.</p>
<h2>Managing Temporary Files</h2>
<p>
The Windows® application programming interface (API) <b>GetTempFileName</b> function can be used to create a temporary file on a floppy or hard disk. Files created by this function are not automatically deleted when your Visual Basic® application terminates—you must do this using Visual Basic's <b>Kill</b> statement.</p>
<p>
To create a temporary file in Visual Basic, you use the <b>GetTempFileName</b> function. The <b>Declare</b> statement for this function is as follows (note that it must be typed as a single line of code):</p>
<pre><code>Declare Function GetTempFileName Lib "Kernel" (ByVal cDriveLetter As Integer, 
 &nbsp; ByVal lpPrefixString As String, ByVal wUnique As Integer, ByVal 
 &nbsp; lpTempFileName As String) As Integer
</code></pre>
<p>
<b>GetTempFileName</b> requires four arguments, as follows:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=19%><i>cDriveLetter</i></td>
<td width=81%>An integer value containing the disk drive letter.</td>
</tr>
<tr valign=top>
<td width=19%><i>lpPrefixString</i></td>
<td width=81%>A string containing the filename prefix. This is a standard DOS filename, except that it should be less than eight characters long, because it will be padded with the <i>wUnique</i> value when the file is created.</td>
</tr>
<tr valign=top>
<td width=19%><i>wUnique</i></td>
<td width=81%>An integer value containing the number to use to append to the eight-character filename prefix. If a value of zero is specified, the function generates its own random number from the system's current time stamp.</td>
</tr>
<tr valign=top>
<td width=19%><i>lpTempFileName</i></td>
<td width=81%>A string that will hold the name of the newly created temporary file. This string should be initialized to a length of at least 144 characters.</td>
</tr>
</table><br>
<p>
The <b>GetTempFileName</b> function will create the temporary file on the first hard disk or on the disk specified by the TEMP environment variable. You can set the TF_FORCEDRIVE bit of the <i>cDriveLetter</i> argument to tell the <b>GetTempFileName</b> function to create the file in the current directory of the specified disk. In all other cases, the temporary file will be created on the disk specified in the <i>cDriveLetter</i> argument.</p>
<p>
After you call the <b>GetTempFileName</b> function, the file will have been created on the specified disk. The <b>lpTempFileName</b> buffer will contain the file's complete path, terminated by the number specified by the <i>wUnique</i> argument.</p>
<p>
Once you have successfully created the temporary file from within your application, you can isolate the actual filename by issuing these two statements:</p>
<pre><code>TempFileName = Left(TempFileName, InStr(TempFileName, Chr(0)) - 1)
TempFileName = Trim(Right(TempFileName, Len(TempFileName) - 3))
</code></pre>
<p>
The first statement uses the <b>InStr</b> function to strip off the last character returned in the buffer used to hold the filename. This byte is the value used in the <i>wUnique</i> argument. The second statement removes the preceding "C:\" drive specifier characters from the filename.</p>
<p>
You should be aware that temporary files created by the <b>GetTempFileName</b> function remain on the disk until you actually delete them.</p>
<h2>Example Program</h2>
<p>
The following program shows how you can create temporary files from within your Visual Basic application. Each time you execute this program, a new temporary file is created. Be sure to delete these temporary files from your disk when finished with this program.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant</b> and <b>Declare</b> statements to the General Declarations section of Form1 (note that the <b>Declare</b> statement must be typed as a single line of code):<pre><code>Declare Function GetTempFileName Lib "Kernel" (ByVal cDriveLetter As Integer, 
 &nbsp; ByVal lpPrefixString As String, ByVal wUnique As Integer, ByVal 
 &nbsp; lpTempFileName As String) As Integer
Const TF_FORCEDRIVE = &amp;H80
</code></pre>
</li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Sub Form_Load()
 &nbsp;&nbsp; Dim X As Integer
 &nbsp;&nbsp; Dim Drive As Integer
 &nbsp;&nbsp; Dim Prefix As String
 &nbsp;&nbsp; Dim Unique As Integer
 &nbsp;&nbsp; Dim TempFileName As String
 &nbsp;&nbsp; Dim PathName As String
 &nbsp;&nbsp; 
 &nbsp;&nbsp; TempFileName = Space$(144)
 &nbsp;&nbsp; NewFileName = Space$(144)
 &nbsp;&nbsp; 
 &nbsp;&nbsp; PathName = "C:\WINDOWS"
 &nbsp;&nbsp; Drive = Asc(UCase(Left(PathName, 1))) + TF_FORCEDRIVE
 &nbsp;&nbsp; Prefix = "DATA"
 &nbsp;&nbsp; Unique = 0
 &nbsp;&nbsp; 
 &nbsp;&nbsp; ChDir PathName
 &nbsp;&nbsp; X = GetTempFileName(Drive, Prefix, Unique, TempFileName)
 &nbsp;&nbsp; TempFileName = Left(TempFileName, InStr(TempFileName, Chr(0)) - 1)
 &nbsp;&nbsp; TempFileName = Trim(Right(TempFileName, Len(TempFileName) - 3))
 &nbsp;&nbsp; Text1.Text = TempFileName
End Sub
</code></pre>
</li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default.</li>
</ol>
</BODY>
</HTML>
