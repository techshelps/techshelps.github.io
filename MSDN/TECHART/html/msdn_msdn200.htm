<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 200: Determining the Amount of Free Disk Space</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn200"></a></sup>Tip 200: Determining the Amount of Free Disk Space</h1>
<p>
December 5, 1995</p>
<h2>Abstract</h2>
<p>
This article explains how to retrieve the amount of available disk space from within a Microsoft® Visual Basic® application.</p>
<h2>Using the GetDiskFreeSpace Function</h2>
<p>
When writing information to disk from within a Microsoft® Visual Basic® application, you may need to determine whether there is enough space available on the disk drive before starting to write the new data to it.</p>
<p>
The Microsoft Windows® application programming interface (API) <b>GetDiskFreeSpace</b> function allows you to calculate how much free space there is on a specified disk drive. To use this function, include the following <b>Declare</b> statement in the General Declarations section of your application:</p>
<pre><code>Declare Function GetDiskFreeSpace Lib "kernel32" Alias "GetDiskFreeSpaceA" 
 &nbsp; (ByVal lpRootPathName As String, lpSectorsPerCluster As Long, 
 &nbsp; lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, 
 &nbsp; lpTotalNumberOfClusters As Long) As Long
</code></pre>
<p>
The <b>GetDiskFreeSpace</b> function requires five arguments, as follows:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=29%><i>lpRootPathName</i></td>
<td width=71%>A string containing the root directory for the disk drive for which you want to retrieve information. If NULL, the default directory's root path is used.</td>
</tr>
<tr valign=top>
<td width=29%><i>LpSectorsPerCluster</i></td>
<td width=71%>A long value that will contain the number of sectors per cluster.</td>
</tr>
<tr valign=top>
<td width=29%><i>LpBytesPerSector</i></td>
<td width=71%>A long value that will contain the number of bytes per sector.</td>
</tr>
<tr valign=top>
<td width=29%><i>LpNumberOfFreeClusters</i></td>
<td width=71%>A long value that will contain the number of free clusters on the disk.</td>
</tr>
<tr valign=top>
<td width=29%><i>LpTotalNumberOfClusters</i></td>
<td width=71%>A long value that will contain the number of clusters on the disk.</td>
</tr>
</table><br>
<p>
After executing the <b>GetDiskFreeSpace</b> function, either a value of True is returned if the function was successful or a value of False if the function was not successful.</p>
<p>
To calculate the total number of bytes available on the disk, you need to multiply the number of bytes per sector by the number of sectors per cluster. Then, multiply this result by the number of free clusters on the disk. This total gives you the number of bytes of free space on the disk.</p>
<h2>Example Program</h2>
<p>
This program shows how to retrieve the amount of free disk space.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add a <b>Text Box</b> control to Form1. Text1 is created by default. Set its <b>MultiLine</b> property to True.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim X As Long
 &nbsp;&nbsp; X = GetDiskSpace("c:\")
 &nbsp;&nbsp; If X Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sFreeSpace = Format$(CurrentDisk.FreeBytes, "###,###,##0")
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sTotalSpace = Format$(CurrentDisk.TotalBytes, "###,###,##0")
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sFreePcnt = Format$(CurrentDisk.FreePcnt, "Percent")
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sUsedPcnt = Format$(CurrentDisk.UsedPcnt, "Percent")
 &nbsp;&nbsp; End If
 &nbsp;&nbsp; text1.Text = "Free Space: " &amp; sFreeSpace &amp; " Percent: " 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; sFreePcnt &amp; Chr(13) &amp; Chr(10)
 &nbsp;&nbsp; text1.Text = text1.Text &amp; "Total Bytes free: " &amp; sTotalSpace &amp; 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " Percent: " &amp; sUsedPcnt
End Sub
</code></pre>
</li>
<li>
Create a new function called <b>GetDiskSpace</b>. Add the following code to this function (note that the "X =" line must be typed as a single line of code):<pre><code>Function GetDiskSpace(sRootPathName As String) As Long
 &nbsp;&nbsp; Dim X As Long
 &nbsp;&nbsp; Dim lSectorsPerCluster As Long, lBytesPerSector As Long
 &nbsp;&nbsp; Dim lNumberOfFreeClusters As Long, lTotalNumberOfClusters As Long
 &nbsp;&nbsp; 
 &nbsp;&nbsp; X = GetDiskFreeSpace(sRootPathName, lSectorsPerCluster, lBytesPerSector, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lNumberOfFreeClusters, lTotalNumberOfClusters)
 &nbsp;&nbsp; GetDiskSpace = X
 &nbsp;&nbsp; 
 &nbsp;&nbsp; If X Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CurrentDisk.RootPath = sRootPathName
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CurrentDisk.FreeBytes = lBytesPerSector * lSectorsPerCluster * 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lNumberOfFreeClusters
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CurrentDisk.TotalBytes = lBytesPerSector * lSectorsPerCluster * 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lTotalNumberOfClusters
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CurrentDisk.FreePcnt = (CurrentDisk.TotalBytes - CurrentDisk.FreeBytes) 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; / CurrentDisk.TotalBytes
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CurrentDisk.UsedPcnt = CurrentDisk.FreeBytes / CurrentDisk.TotalBytes
 &nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CurrentDisk.RootPath = ""
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CurrentDisk.FreeBytes = 0
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CurrentDisk.TotalBytes = 0
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CurrentDisk.FreePcnt = 0
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CurrentDisk.UsedPcnt = 0
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit Function
 &nbsp;&nbsp; End If
End Function
</code></pre>
</li>
<li>
From the Visual Basic Insert menu, select Module to create a new module. Module1.Bas is created by default.<br><br></li>
<li>
Add the following <b>Type</b>, <b>Constant</b>, and <b>Declare</b> statements to Module1.Bas (note that the <b>Declare</b> statement must be typed as a single line of code):<pre><code>Declare Function GetDiskFreeSpace Lib "kernel32" Alias "GetDiskFreeSpaceA" 
 &nbsp; (ByVal lpRootPathName As String, lpSectorsPerCluster As Long, 
 &nbsp; lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, 
 &nbsp; lpTotalNumberOfClusters As Long) As Long
Type DISKSPACEINFO
 &nbsp;&nbsp; RootPath As String * 3
 &nbsp;&nbsp; FreeBytes As Long
 &nbsp;&nbsp; TotalBytes As Long
 &nbsp;&nbsp; FreePcnt As Single
 &nbsp;&nbsp; UsedPcnt As Single
End Type
Global CurrentDisk As DISKSPACEINFO
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing f5. Click the <b>Command Button</b> control. The program displays the number and percentage of free bytes of disk space, and the total number and percentage of bytes used.</p>
</BODY>
</HTML>
