<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CTrans</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1><a name="hd_hdserver_ctrans"></a>CTrans</h1>
<h2>Enumerated Constant</h2>
<h3>hdDOMAINS</h3>
<p class=indent>
<b>Description<br>
</b>These constants indicate which domain a function should work on.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x=CTrans.hdDOMAINS.aValue</code></p>
<p class=indent>
<b>Value[s]<br>
</b>icAUDIT_TYPE = 0<br>
icLOCATION = 1<br>
icSKILL = 2<br>
icPRIORITY = 3<br>
icREQ_STATUS = 4<br>
icREQ_DET_TYPE = 5</p>
<h3>hdTECHS</h3>
<p class=indent>
<b>Description<br>
</b>These constants indicate whether a function should work on all technicians or only the currently logged on technician.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x=CTrans.hdTECHS.aValue</code></p>
<p class=indent>
<b>Value[s]<br>
</b>icALL_TECHS = 0<br>
icWORKING_TECHS = 1</p>
<h3>hdSNAPSHOT</h3>
<p class=indent>
<b>Description<br>
</b>These constants determine which boundary of the current snapshot data will be returned.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x=CTrans.hdSNAPSHOT.aValue</code></p>
<p class=indent>
<b>Value[s]<br>
</b>icFIRST_DATE = 1<br>
icLAST_DATE = 2</p>
<h2>Functions</h2>
<h3>ClaimRequest</h3>
<p class=indent>
<b>Description<br>
</b>Updates the status of a request to show that a particular technician has claimed this request.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.ClaimRequest (ByVal lReqId As Long, ByVal lTechId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long<br>
ByVal lTechId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>ConfirmResolution</h3>
<p class=indent>
<b>Description<br>
</b>Updates the status of a request to show that a confirmation is pending from the original requester.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.ConfirmResolution (ByVal lReqId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>DeleteDomainMember</h3>
<p class=indent>
<b>Description<br>
</b>Deletes a given domain record from the specified domain table.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.DeleteDomainMember (ByVal icDomain As hdDOMAINS, ByVal sCode As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal icDomain as hdDOMAINS<br>
ByVal sCode as String</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>Please note that if this function fails, it is because the built-in referential integrity of SQL Server will not allow the deletion. In order to delete the specified record, all other HelpDesk records that refer to this record must be deleted first. See the appendix of <a href="msdn_hlpdskov.htm">"The HelpDesk Sample: Overview of an Automated Solution."</a> for more detail on this issue.</p>
<h3>DeleteTechnician</h3>
<p class=indent>
<b>Description<br>
</b>Deletes a given technician record from the technician table.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.DeleteTechnician (ByVal sEAlias As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal sEAlias as String</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>Please note that if this function fails, it is because the built-in referential integrity of SQL Server will not allow the deletion. In order to delete the specified record, all other HelpDesk records that refer to this record must be deleted first. See the appendix of <a href="msdn_hlpdskov.htm">"The HelpDesk Sample: Overview of an Automated Solution."</a> for more detail on this issue.</p>
<h3>DenyResolution</h3>
<p class=indent>
<b>Description<br>
</b>Reverts the status of a request from Confirmed back to Pending. </p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.DenyResolution (ByVal lReqId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>GetDomain</h3>
<p class=indent>
<b>Description<br>
</b>Returns a string array filled in with the contents of a given domain.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.GetDomain (ByVal iDomain As hdDOMAINS, sData() As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal iDomain as hdDOMAINS<br>
<code>sData() As String</code></p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>GetReqDetail</h3>
<p class=indent>
<b>Description<br>
</b>Returns a string array filled in with the contents of a particular request, specified by the request detail ID.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.GetReqDetail (ByVal lReqDetId As Long, sData() As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqDetId as Long<br>
<code>sData() As String</code></p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>GetReqDetails</h3>
<p class=indent>
<b>Description<br>
</b>Returns a string array filled in with all of the detail records of a particular request, specified by the request ID.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.GetReqDetails (ByVal lReqId As Long, sData() As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long<br>
<code>sData() As String</code></p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>GetRequest</h3>
<p class=indent>
<b>Description<br>
</b>Returns an array filled in with the data from a particular request, specified by its request or tracking id.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.GetRequest (sData() As String, Optional ByVal lReqId As Long, Optional ByVal lTrackNo As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b><code>sData() As String<br>
Optional ByVal lReqId As Long<br>
Optional ByVal lTrackNo As Long</code></p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>GetRequests</h3>
<p class=indent>
<b>Description<br>
</b>Returns an array filled in with the data from all of the requests for a given technician.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.GetRequests (ByVal lTechId As Long, sData() As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lTechId as Long<br>
<code>sData() As String</code></p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>GetStdTextResponses</h3>
<p class=indent>
<b>Description<br>
</b>Returns an array that contains all of the standard text responses.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.GetStdTextResponses (sData() As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b><code>sData() As String</code></p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>GetSysParms</h3>
<p class=indent>
<b>Description<br>
</b>Returns an array filled in with all of the system parameter values.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.GetSysParms (sData() As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b><code>sData() As String</code></p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>GetTech</h3>
<p class=indent>
<b>Description<br>
</b>Returns an array containing all of the technician data for a specified technician ID.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.GetTech (ByVal lTechId As Long, sData() As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lTechId as Long<br>
<code>sData() As String</code></p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>GetTechs</h3>
<p class=indent>
<b>Description<br>
</b>Returns an array containing all of the technician data for all technicians who fit a given skill and location.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.GetTechs (ByVal iAvail As hdTECHS, sData() As String, Optional ByVal lSkillId As Long, Optional ByVal lLocId As Long) As Boolean</code></p>
<p class=indent>
<b>Parameters<br>
</b><code>ByVal iAvail As hdTECHS<br>
sData() As String<br>
Optional ByVal lSkillId As Long<br>
Optional ByVal lLocId As Long</code></p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>GetUserRequests</h3>
<p class=indent>
<b>Description<br>
</b>Returns an array filled in with all of the data from a given user's requests.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.GetUserRequests (ByVal sUserAlias As String, sData() As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal sUserAlias as String<br>
<code>sData() As String</code></p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>InsertDomainMember</h3>
<p class=indent>
<b>Description<br>
</b>Creates a new domain record for the specified domain, using the specified code and description.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.InsertDomainMember (ByVal icDomain As hdDOMAINS, ByVal sCode As String, ByVal sDesc As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal icDomain as hdDOMAINS<br>
ByVal sCode as String<br>
ByVal sDesc as String</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>InsertRequest</h3>
<p class=indent>
<b>Description<br>
</b>Creates a new request record from the supplied parameters.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.InsertRequest (ByVal lLocId As Long, ByVal lPriorityId As Long, ByVal lSkillId As Long, ByVal sEAlias As String, ByVal sDesc As String, lTrackNo As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lLocId as Long<br>
ByVal lPriorityId as Long<br>
ByVal lSkillId as Long<br>
ByVal sEAlias as String<br>
ByVal sDesc as String<br>
lTrackNo as Long</p>
<h3>InsertTechnician</h3>
<p class=indent>
<b>Description<br>
</b>Creates a technician record and fills it in with the parameter data.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.InsertTechnician (ByVal sEAlias As String, ByVal lLocId As Long, ByVal lSkillId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal sEAlias as String<br>
ByVal lLocId as Long<br>
ByVal lSkillId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>LogoffTech</h3>
<p class=indent>
<b>Description<br>
</b>Changes the specified technician's status from Logged off to Logged on.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.LogoffTech (ByVal lTechId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lTechId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>At present, the end-user clients rely on Windows NT authentication to validate the user. This method could be used to supply your own authentication.</p>
<h3>LogonTech</h3>
<p class=indent>
<b>Description<br>
</b>Changes the specified technician's status from Logged on to Logged off.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.LogonTech (ByVal lTechId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lTechId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>At present the end-user clients rely on Windows NT authentication to validate the user. This method could be used to supply your own authentication.</p>
<h3>ReAssignReq</h3>
<p class=indent>
<b>Description<br>
</b>Allows a previously assigned request to be reassigned to another technician.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.ReAssignReq (ByVal lReqId As Long, ByVal lFrTechId As Long, ByVal lToTechId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long<br>
ByVal lFrTechId as Long<br>
ByVal lToTechId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>SendStdTextResponse</h3>
<p class=indent>
<b>Description<br>
</b>Sends a preformatted standard response to the user who made a specified request.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.SendStdTextResponse (ByVal lReqId As Long, ByVal lTechId As Long, ByVal lRespId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long<br>
ByVal lTechId as Long<br>
ByVal lRespId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>SendTextRequest</h3>
<p class=indent>
<b>Description<br>
</b>Sends a text response to the technician who has claimed a specified request.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.SendTextRequest (ByVal lReqId As Long, ByVal sMsgText As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long<br>
ByVal sMsgText as String</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>SendTextResponse</h3>
<p class=indent>
<b>Description<br>
</b>Sends a text response to the user who made the specified request.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.SendTextResponse (ByVal lReqId As Long, ByVal lTechId As Long, ByVal sMsgText As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long<br>
ByVal lTechId as Long<br>
ByVal sMsgText as String</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>SubmitRequest</h3>
<p class=indent>
<b>Description<br>
</b>Changes the specified request's status from In progress to Resolution pending.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.SubmitRequest (ByVal lReqId As Long, ByVal lTechId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long</p>
<p class=indent>
ByVal lTechId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<p class=indent>
<b>Remarks<br>
</b>The technician should next send a confirmation request to the user.</p>
<h3>UnclaimRequest</h3>
<p class=indent>
<b>Description<br>
</b>Reverts a request's status from Claimed back to Unclaimed, at which point the request could be reshuffled to another technician.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.UnclaimRequest (ByVal lReqId As Long, ByVal lTechId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long<br>
ByVal lTechId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>UpdateDomainMember</h3>
<p class=indent>
<b>Description<br>
</b>Updates a domain record in the specified domain using the existing code and a new description.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.UpdateDomainMember (ByVal icDomain As hdDOMAINS, ByVal sCode As String, ByVal sDesc As String)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal icDomain as hdDOMAINS<br>
ByVal sCode as String<br>
ByVal sDesc as String</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>UpdateTechnician</h3>
<p class=indent>
<b>Description<br>
</b>Updates the specified technician record with new parameter data.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.UpdateTechnician (ByVal lTechId As Long, ByVal sEAlias As String, ByVal lLocId As Long, ByVal lSkillId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lTechId as Long<br>
ByVal sEAlias as String<br>
ByVal lLocId as Long<br>
ByVal lSkillId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
<h3>WorkRequest</h3>
<p class=indent>
<b>Description<br>
</b>Changes the specified request's status from Claimed to In progress.</p>
<p class=indent>
<b>Syntax<br>
</b><code>x = CTrans.WorkRequest (ByVal lReqId As Long, ByVal lTechId As Long)</code></p>
<p class=indent>
<b>Parameters<br>
</b>ByVal lReqId as Long<br>
ByVal lTechId as Long</p>
<p class=indent>
<b>Return type<br>
</b>Boolean</p>
</BODY>
</HTML>
