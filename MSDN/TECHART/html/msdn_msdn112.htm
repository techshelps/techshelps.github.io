<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 112: Preventing ListIndex Property from Triggering a Click Event</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn112"></a></sup>Tip 112: Preventing ListIndex Property from Triggering a Click Event</h1>
<p>
July 1, 1995</p>
<h2>Abstract</h2>
<p>
When you change the <b>ListIndex</b> property of a <b>Combo Box</b> control, the Click event is automatically triggered. This article explains how to suppress this Click event.</p>
<h2>Suppressing Click Events in Combo Box Controls</h2>
<p>
The <b>Combo Box</b> control in Microsoft® Visual Basic® lets you create a list of items that&nbsp; the user can click to select. Within a Visual Basic program, you can select a specific item in a <b>Combo Box</b> control by using its <b>ListIndex</b> property. However, each time the <b>ListIndex</b> property is changed, a Click event is also triggered.</p>
<p>
Each time an item is selected in a <b>Combo Box</b> control, a CB_SETCURSEL message is sent to the control by the Windows® application programming interface (API). This message selects or deselects the specific item in the <b>Combo Box</b> control.</p>
<p>
To prevent a Click event from being triggered each time the <b>ListIndex</b> property is changed, you need only send the CB_SETCURSEL message directly to the control. The Click event is not generated, but the individual item is still selected or deselected.</p>
<h2>Example Program</h2>
<p>
The example program below shows how to set the <b>ListIndex</b> property of a <b>Combo</b> <b>Box</b> control without generating a Click event.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following <b>Constant </b>and <b>Declare</b> statements to the General Declarations section of Form1 (note that the <b>Declare</b> statement must be typed as one single line of code):<pre><code>Private Declare Function SendMessageByString Lib "User" Alias "SendMessage" 
 &nbsp; (ByVal hWnd As Integer, ByVal wMsg As Integer, ByVal wParam As Integer, ByVal 
 &nbsp; lParam As String) As Integer
Const WM_USER = &amp;H400
Const CB_SETCURSEL = (WM_USER + 14)
</code></pre>
</li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Private Sub Form_Load()
 &nbsp;&nbsp; Combo1.AddItem "Item #1"
 &nbsp;&nbsp; Combo1.AddItem "Item #2"
 &nbsp;&nbsp; Combo1.AddItem "Item #3"
End Sub
</code></pre>
</li>
<li>
Add a <b>Combo Box</b> control to Form1. Combo1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Combo1:<pre><code>Private Sub Combo1_Click()
 &nbsp;&nbsp; MsgBox "Combo1 was Clicked!"
End Sub
</code></pre>
</li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default. Set its <b>Caption</b> property to "Will Click".<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Combo1.ListIndex = 1
End Sub
</code></pre>
</li>
<li>
Add a second <b>Command Button</b> control to Form1. Command2 is created by default. Set its <b>Caption</b> property to "Will Not Click".<br><br></li>
<li>
Add the following code to the Click event for Command2:<pre><code>Private Sub Command2_Click()
 &nbsp;&nbsp; SetComboListIndex Combo1, 1
End Sub
</code></pre>
</li>
<li>
Create a new function called <b>SetComboListIndex</b>. Add the following code to this function:<pre><code>Sub SetComboListIndex(cboCombo As ComboBox, iIndex As Integer)
 &nbsp;&nbsp; Dim R As Integer
 &nbsp;&nbsp; R = SendMessageByString(cboCombo.hWnd, CB_SETCURSEL, iIndex, "")
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing the F5 function key. Click the "Will Click" command button. A message box is displayed indicating that the Click event was triggered when the <b>ListIndex</b> property was changed. Click the "Will Not Click" command button. The item in the Combo Box is selected but a Click event is not triggered.</p>
<h2>Additional Reference</h2>
<p>
Knowledge Base Q79241. "BUG: Resetting ListIndex Property Generates Click Event."</p>
</BODY>
</HTML>
