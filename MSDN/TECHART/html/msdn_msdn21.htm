<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 21: Creating an Iconized Visual Basic Application</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn21"></a></sup>Tip 21: Creating an Iconized Visual Basic Application</h1>
<p>
Created: March 1, 1995</p>
<h2>Abstract</h2>
<p>
Many Windows®-based applications can be written so that, when executed, they are shown on the desktop simply as an icon. These type of programs usually perform some kind of background task and are never maximized because no user input is required. Double-clicking an icon automatically tells Windows to maximize the application's window to a full-screen display. This article tells you how to create iconized applications in Visual Basic® that cannot be maximized.</p>
<h2>Terminating Iconized Applications</h2>
<p>
When running an application as an icon, you must intercept the form's resize event to prevent the user from maximizing its window. The <b>WindowState</b> property of a form controls how a form is displayed. <b>WindowState</b> provides three possibilities:
<ul type=disc>
<li>
The window is displayed as normal (the default setting). This is the size you made the window when designing the application in Visual Basic®.<br><br></li>
<li>
The window is minimized. It is displayed as an icon.<br><br></li>
<li>
The window is maximized. It occupies the entire screen.</li>
</ul>
<p>
If we want to make a program appear as an icon on the desktop, we set the <b>WindowState</b> property to a value of 1. This should be done in the Form_Load event for the startup form in Visual Basic.</p>
<p>
When a user double-clicks on a program's icon, Windows® automatically sets its <b>WindowState</b> property to normal. The double-clicking triggers the Form_Resize event, which in turn maximizes the program's window. Because we don't want our program's window to be maximized at any time, we set the <b>WindowState</b> property to a value of 1 in the Form_Resize event. Every time our program is double-clicked, the <b>WindowState</b> property is always reset to "minimized." Thus, the program is never seen in a maximized state.</p>
<h2>Example Program</h2>
<p>
The following program creates a Visual Basic application that is minimized to an icon when it is executed. To terminate the program, double-click its icon.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following code to the Form_Load event for Form1.Sub Form_Load():<pre><code>WindowState = 1
End Sub
</code></pre>
</li>
<li>
Add the following code to the Form_Resize event for Form1:<pre><code>Sub Form_Resize()
If WindowState &lt;&gt; 1 Then
WindowState = 1
End
End If
End Sub
</code></pre>
</li>
<li>
From the Visual Basic File menu, select "Make EXE File" to create a stand-alone .EXE program file.<br><br></li>
<li>
Next, execute the program from Program Manager's Run command. The program's icon will be displayed on the desktop. You cannot maximize this window by double-clicking the icon; that will cause the application to be terminated.</li>
</ol>
</BODY>
</HTML>
