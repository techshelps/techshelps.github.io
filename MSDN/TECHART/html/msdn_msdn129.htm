<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 129: Setting the Focus After Removing an Item from the List Box Control</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><sup><a name="msdn_msdn129"></a></sup>Tip 129: Setting the Focus After Removing an Item from the List Box Control</h1>
<p>
July 1, 1995</p>
<h2>Abstract</h2>
<p>
The <b>List Box</b> control in Microsoft® Visual Basic® lets you easily manage related pieces of information. You use the <b>AddItem</b> method to add new items to the list and the <b>RemoveItem</b> method to delete items from the list. This article explains how to set the focus to the next item in the <b>List Box</b> control after deleting the currently selected item.</p>
<h2>Setting the Focus to the Next Available Item</h2>
<p>
When using the <b>List Box</b> control in Microsoft® Visual Basic®, you can use the <b>AddItem</b> method to add new items to the list or the <b>RemoveItem</b> method to delete items from the list.</p>
<p>
However, when you delete an item from the list, the focus does not automatically change to the next available item in the list. The example program below shows how to do this.</p>
<p>
The <b>ListIndex</b> property of a <b>List Box</b> control tells you which item was selected by the user. Knowing this value, you can use the <b>RemoveItem</b> method to delete that specific entry from the list. For example, if you select the third item in the <b>List Box</b> control, the <b>ListIndex</b> property would be set to a value of two (the <b>List Box</b> control starts numbering the entries from zero).</p>
<p>
It is a simple matter, then, to set the focus to the next available item in the list by keeping track of your position within the list. After deleting the selected item, you set the <b>ListIndex</b> property to your current position minus one. You can then set the focus to this newly selected item.</p>
<h2>Example Program</h2>
<p>
This program shows how to delete an item from a <b>List Box</b> control and set the focus to the next available item in the list.
<ol>
<li>
Create a new project in Visual Basic. Form1 is created by default.<br><br></li>
<li>
Add the following code to the Form_Load event for Form1:<pre><code>Private Sub Form_Load()
 &nbsp;&nbsp; List1.AddItem "Item #1"
 &nbsp;&nbsp; List1.AddItem "Item #2"
 &nbsp;&nbsp; List1.AddItem "Item #3"
 &nbsp;&nbsp; List1.AddItem "Item #4"
 &nbsp;&nbsp; List1.AddItem "Item #5"
End Sub
</code></pre>
</li>
<li>
Add a <b>List Box</b> control to Form1. List1 is created by default.<br><br></li>
<li>
Add a <b>Command Button</b> control to Form1. Command1 is created by default.<br><br></li>
<li>
Add the following code to the Click event for Command1:<pre><code>Private Sub Command1_Click()
 &nbsp;&nbsp; Dim PositionInList As Integer
 &nbsp;&nbsp; Dim NumberOfItemsInList As Integer
 &nbsp;&nbsp; PositionInList = List1.ListIndex
 &nbsp;&nbsp; NumberOfItemsInList = List1.ListCount
 &nbsp;&nbsp; If NumberOfItemsInList &gt; 0 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If PositionInList &gt;= 0 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List1.RemoveItem PositionInList
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "You must select an item to delete.", 48, "Error"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "There are no items to delete.", 48, "Error"
 &nbsp;&nbsp; End If
 &nbsp;&nbsp; NumberOfItemsInList = List1.ListCount
 &nbsp;&nbsp; If NumberOfItemsInList &gt; 0 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If PositionInList = NumberOfItemsInList Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List1.ListIndex = NumberOfItemsInList - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List1.ListIndex = PositionInList
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; End If
 &nbsp;&nbsp; List1.SetFocus
End Sub
</code></pre>
</li>
</ol>
<p>
Run the example program by pressing F5. Five items will appear in the <b>List Box</b> control. Notice that no items are selected. Click the Delete command button. A message box is displayed, indicating that you must select an item before you can delete it.</p>
<p>
Click the OK command button. Click the third item (Item #3) to select it. The item is deleted from the <b>List Box</b> control, and the focus is moved to the next available item in the list.</p>
<p>
Notice that if you attempt to delete an item that does not exist in the <b>List Box</b> control, a message box will be displayed, telling you that there are no items to delete.</p>
<h2>Additional Reference</h2>
<p>
<a href="msdn_msdn24.htm">"Tip 24: Avoiding Errors When Removing Items from a List Box."</a></p>
</BODY>
</HTML>
