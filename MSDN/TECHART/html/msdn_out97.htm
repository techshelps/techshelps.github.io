<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Office Compatible 97--Outlook Journaling</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_out97"></a>Office Compatible 97—Outlook Journaling </h1>
<p>
by Ross Comer<br>
Development Lead, Microsoft Office Compatible</p>
<p>
June 1996</p>
<h2>Abstract</h2>
<p>
This article provides a detailed description of the Outlook Journaling feature of Office Compatible and the steps necessary to implement this feature into your custom application. It also provides sample code for both a C/C++ interface and an OLE Automation interface accessible from Visual Basic or Visual Basic for Applications.</p>
<h2>Description</h2>
<p>
Outlook Journaling allows you to create applications that interact with Outlook. Journaling creates a log when a user creates, opens, closes, routes, prints, sends, or posts a document. By recording this information, the Outlook journal allows a user to keep track of, or find, files based on when they worked on the file rather than file name,type, or where the document is stored.&nbsp; </p>
<h2>Registry Settings</h2>
<p>
In order to use this feature, the application must register in the following location.</p>
<pre><code>HKEY_CURRENT_USER\Software\Microsoft\Shared Tools\Outlook\Journaling 
</code></pre>
<p>
<img src="out97_1.gif" border=0></p>
<p>
Under this registration location, add a key for your application.</p>
<pre><code>Key: AppName
</code></pre>
<p>
Within this key, set the following values.</p>
<pre><code>Description=Name REG_SZ
Enabled= 1 REG_DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //* this should be set on *//
AutoJournaled=1 REG_DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //* required by Outlook *//
Large Icon=&lt;path&gt;Name.exe,1 REG_SZ
Small Icon=&lt;path&gt;Name.exe,1 REG_SZ
</code></pre>
<h2>C Interface</h2>
<p>
Get the Outlook Interface from the IOfficeCompatible interface with the PioutGetOutlook() call.&nbsp; If the result of this call is non-NULL, the call succeeded and you are holding the Outlook interface.</p>
<p>
The Outlook interface is automatically released when the IOfficeCompatible interface is released. There is no need to do any other releases on this interface.</p>
<h3>IMsocOutlook Interface</h3>
<p>
Use this call to create a new journal entry.</p>
<pre><code>&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp; wzFileName is NULL for New docs 
 &nbsp; //&nbsp;&nbsp;&nbsp; and is the full path to Opened docs
 &nbsp; IMsocOutlookJournalEntry *PiojeCreateOutlookJournalEntry(LPCWSTR wzFileName);

 &nbsp; BOOL GetLoggingState();
 &nbsp; void SetLoggingState(BOOL fState);
</code></pre>
<h3>IMsocOutlookJournalEntry Interface</h3>
<p>
Once you have created a journal entry, use the following methods to set the disposition of the file or the action taken by the user.</p>
<p>
Use this method to indicate the document has been saved by the user.</p>
<pre><code>&nbsp;&nbsp;&nbsp;// filename can be null for Save if and only if
 &nbsp; // a valid filename was supplied on creation
 &nbsp; HRESULT Save(LPCWSTR wzFileName);
</code></pre>
<p>
Use this method to indicate the document has been closed by the user.&nbsp; Once you have called the Close or CloseProps method, the Journal object is released.</p>
<pre><code>&nbsp;&nbsp;&nbsp;HRESULT Close(LPCWSTR lpwzAuthor, LPCWSTR lpwzKeyWords, 
 &nbsp;&nbsp;&nbsp;&nbsp; LPCWSTR lpwzManager, LPCWSTR lpwzCompany);

 &nbsp; // Use this call if you are using C++
 &nbsp; HRESULT Close(IMsocDocProps *pMsocDocProps);
 &nbsp; // Use this call if you are using C
 &nbsp; HRESULT CloseProps( IMsocDocProps *pMsocDocProps); 
</code></pre>
<p>
The following functions log the named event in the Outlook journal entry.</p>
<pre><code>&nbsp;&nbsp;&nbsp;HRESULT Route();
 &nbsp; HRESULT Print();
 &nbsp; HRESULT Send();
 &nbsp; HRESULT Post();
</code></pre>
<h3>Sample C Code</h3>
<pre><code>// Get the OfficeCompatible interface
IOfficeCompatible *pOC = CreateOfficeCompatible(L”SampleApp”, L”SampleApplication”)

if (pOC != NULL)
 &nbsp; {
 &nbsp; // Get the Outlook interface
 &nbsp; IMsocOutlook *pOutlook = pOC-&gt;PioutGetOutlook();

 &nbsp; if (pOutlook == NULL)
 &nbsp;&nbsp;&nbsp;&nbsp; return();

   pOutlook-&gt;SetLoggingState(TRUE); // turn on logging

 &nbsp; IMsocOutlookJournalEntry *pJournalEntry = PiojeCreateOutlookJournalEntry(wzFileName);

 &nbsp; if (pJournalEntry == NULL)
 &nbsp;&nbsp;&nbsp;&nbsp; return();

 &nbsp; pJournalEntry-&gt;Print();

 &nbsp; pJournalEntry-&gt;Save(wzFileName);

 &nbsp; pJournalEntry-&gt;Close(L“Author”, L“”, L”Manager”, L”Microsoft”);

 &nbsp; pJournalEntry = NULL;
 &nbsp; pOutlook = NULL;
 &nbsp; }
</code></pre>
<h2>Automation Interface</h2>
<p>
The Outlook Journal is also available through the Office Compatible Automation interfaces.</p>
<p>
The Outlook object allows creation of a journal entry.</p>
<pre><code>Outlook
 &nbsp; properties
 &nbsp;&nbsp;&nbsp;&nbsp; Application - returns the application object
 &nbsp;&nbsp;&nbsp;&nbsp; Parent - returns the application object
 &nbsp;&nbsp;&nbsp;&nbsp; Logging - Boolean, set or return the logging state

 &nbsp; methods
 &nbsp;&nbsp;&nbsp;&nbsp; // FileName should contain the name of a file that was opened
 &nbsp;&nbsp;&nbsp;&nbsp; // FileName should be blank for a New file
 &nbsp;&nbsp;&nbsp;&nbsp; CreateJournalEntry([opt]fileName) - creates a JournalEntry object for fileName
</code></pre>
<p>
For a Journal Entry object, use the following properties and methods to set the information logged into the Outlook journal entry.</p>
<pre><code>JournalEntry 
 &nbsp; properties
 &nbsp;&nbsp;&nbsp;&nbsp; Application - returns the application object
 &nbsp;&nbsp;&nbsp;&nbsp; Parent - returns the application object
 &nbsp; methods
 &nbsp;&nbsp;&nbsp;&nbsp; Save(fileName) - Marks the document as being saved
 &nbsp;&nbsp;&nbsp;&nbsp; Printed - Logs the document as being printed
 &nbsp;&nbsp;&nbsp;&nbsp; Route - Logs the document as being routed
 &nbsp;&nbsp;&nbsp;&nbsp; Send - Logs the document as being sent (mailed)
 &nbsp;&nbsp;&nbsp;&nbsp; Post - Logs the document as being Posted to Exchange
</code></pre>
<p>
This call closes the journal document.&nbsp; After this call, the journal object is no longer available.</p>
<pre><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Close([opt]author, [opt]keywords, [opt]manager, [opt]company, [opt]docProps)
</code></pre>
<h3>Sample VB Code</h3>
<pre><code>&nbsp;&nbsp;&nbsp;Set OC = CreateObject("OfficeCompatible.Application")
 &nbsp; If OC Is Nothing Then Exit Sub
 &nbsp;&nbsp; 
 &nbsp; On Error Resume Next
 &nbsp; OC.Init "OCBSamp", "Office Compatible Basic Sample App"

 &nbsp; If (Err.Number &lt;&gt; 0) Then
 &nbsp;&nbsp;&nbsp;&nbsp; Set OC = Nothing
 &nbsp;&nbsp;&nbsp;&nbsp; On Error GoTo 0
 &nbsp;&nbsp;&nbsp;&nbsp; Exit Sub
 &nbsp; End If
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
 &nbsp; Set Outlook = OC.Outlook
 &nbsp; If (Err.Number &lt;&gt; 0) Then
 &nbsp;&nbsp;&nbsp;&nbsp; Set OC = Nothing
 &nbsp;&nbsp;&nbsp;&nbsp; On Error GoTo 0
 &nbsp;&nbsp;&nbsp;&nbsp; Exit Sub
 &nbsp; End If

 &nbsp; Set JournalEntry = Outlook.CreateJournalEntry() ‘ Create a New JournalEntry
 &nbsp; If (Err.Number &lt;&gt; 0) Then
 &nbsp;&nbsp;&nbsp;&nbsp; Set OC = Nothing
 &nbsp;&nbsp;&nbsp;&nbsp; On Error GoTo 0
 &nbsp;&nbsp;&nbsp;&nbsp; Exit Sub
 &nbsp; End If

 &nbsp; JournalEntry.Print&nbsp; ‘ Mark the document as having been printed
 &nbsp; JournalEntry.Save(fileName)&nbsp;&nbsp; ‘ Mark the document as having been saved

 &nbsp; JournalEntry.Close(“Author”)&nbsp;&nbsp;&nbsp; ‘ Close the document and update the author property
 &nbsp; Set JournalEntry = Nothing
</code></pre>
</BODY>
</HTML>
