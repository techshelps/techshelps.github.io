<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NetShow Stationl Manager Multicast ASF Sample</TITLE></HEAD>
<BODY">
<H2>Station Manager Multicast ASF Sample</H2>

<!-- Station Manager ActiveX Control Class ID  -->
<OBJECT ID="CHM" WIDTH=1 HEIGHT=1
 CLASSID="CLSID:B00464B3-67D4-11D0-A464-00C04FC29CFB">
</OBJECT>

<!-- Form for input and and output. -->
<FORM Name=SENDER>

<!-- Connect to host computer to replace HTTPSRV and UNISRV variable names. -->
<strong>Step 1: Connect to Host</strong>
<BR><BR>Server Name: <INPUT TYPE=TEXT NAME=ServerName VALUE="LocalHost" SIZE=25>
<INPUT TYPE=BUTTON NAME=ConnectToServer VALUE="Connect">
Connected to: <INPUT TYPE=TEXT NAME=MCM_SERVER SIZE=15 VALUE="">
with <INPUT TYPE=TEXT NAME=MCM_CHANNELS SIZE=15 VALUE=""> Stations
<BR><BR>

<!-- Specify Station details as as required. -->
<strong>Step 2: Specify Station Details</strong>
<BR><BR>Station Name: <INPUT TYPE=TEXT NAME=MCM_NAME SIZE=20 VALUE="My Station">
Description: <INPUT TYPE=TEXT NAME=MCM_DESC SIZE=20 VALUE="ASF Multicast">
<!-- Multicast delivery type  is 2. -->
Delivery: <INPUT TYPE=TEXT NAME=MCM_DEL SIZE=5 VALUE="2">
<!-- Station version number for ASX file. -->
Version: <INPUT TYPE=TEXT NAME=MCM_VER SIZE=5 VALUE=""><BR><BR>
<!-- NSC URL is HTTP location of NSC file. -->
<!-- This is the HTTP equivalent of the local file that WriteNSC saves to. -->
NSC URL: <INPUT TYPE=TEXT NAME=MCM_NURL SIZE=30 VALUE="http://HTTPSRV/sample.nsc">
<!-- Unicast URL is location of source ASF file if multicast not possible. -->
<!-- If an ASF file is the source, this should be in the ASFRoot of the Content Root directory. -->
Unicast URL: <INPUT TYPE=TEXT NAME=MCM_UURL SIZE=30 VALUE="mms://UNISRV/sample.asf">
<!-- Stream source location is local file equivalent of Unicast URL. -->
<!-- Stream source is where the Station format is defined. Can be ASF, NSC, or ASD file. -->
Source: <INPUT TYPE=TEXT NAME=MCM_SRC SIZE=30 VALUE="c:\NetShow\ASFRoot\sample.asf">
<BR><BR>
<!-- Change IP Address and Port to avoid collision with other sample instances. -->
IP Address: <INPUT TYPE=TEXT NAME=MCM_MIP SIZE=20 VALUE="239.201.201.208">
IP Port: <INPUT TYPE=TEXT NAME=MCM_PORT SIZE=5 VALUE="2008">
<!-- Time to Live for corporate intranets. -->
TTL: <INPUT TYPE=TEXT NAME=MCM_TTL SIZE=5 VALUE="32">
<!-- Local file equivalent of NSC URL. The value is the root of an HTTP server. -->
Save to NSC: <INPUT TYPE=TEXT NAME=MCM_NSC SIZE=30 VALUE="c:\inetpub\wwwroot\sample.nsc">
<BR><BR>

<!-- Buttons to control streams and Stations. -->
<strong>Step 3: Open Station, Wait for Stream to Open, then Start Stream</strong>
<BR><BR><!-- Warning: this application will destroy all existing Stations. -->
<INPUT TYPE=BUTTON NAME=OpenChannel VALUE="Open Station and Stream">
<!-- Delete all current Stations. -->
<INPUT TYPE=BUTTON NAME=KillChannels VALUE="Kill All Stations">
<!-- List all Stations to see what you will be deleting. -->
<INPUT TYPE=BUTTON NAME=ListChannels VALUE="List All Stations">
<!-- Repeat Stations? -->
<INPUT TYPE=CHECKBOX NAME="Repeat" SIZE=10 CHECKED>Repeat Stream Broadcast?
<BR><BR>
<!-- Start and stop streams. -->
<INPUT TYPE=BUTTON NAME=StartStream VALUE="Start Stream">
<INPUT TYPE=BUTTON NAME=StopStream VALUE="Stop Stream">
<!-- Display state of stream. -->
Stream State: <INPUT TYPE=TEXT NAME=MCM_SST SIZE=20 VALUE="">
Repeats: <INPUT TYPE=TEXT NAME=MCM_RPT SIZE=20 VALUE="0"> 

</FORM>
</FONT>
<p>You can use the Microsoft Media Player to receive a multicast using an ASX file. You must create an 
ASX file to receive a multicast using the player.

<SCRIPT LANGUAGE="VBScript">
<!--

' Connect to server to initialize values and determine number of Stations. 
Sub ConnectToServer_OnClick
    'Connect to server. Hostname is default.
    CHM.Connect SENDER.ServerName.VALUE
    ' Display name of server connected to. 
    SENDER.MCM_SERVER.Value = CHM.Server
    ' Display number of Stations currently created. 
    SENDER.MCM_CHANNELS.Value = CHM.Channels.Count
    MyHost = SENDER.MCM_SERVER.Value
    ' Put actual server name in NSC URL. 
    SENDER.MCM_NURL.Value = "http://" & MyHost & "/sample.nsc"
    ' Put actual server name in Unicast URL. 
    SENDER.MCM_UURL.Value = "mms://" & MyHost & "/sample.asf"
End Sub

' Delete any existing Stations and open a new Station. 
Sub OpenChannel_OnClick
    ' Warn the user that all Stations will be destroyed. 
    sc = MsgBox("Running this application will kill all Stations. Is this okay?", vbYesNo + vbExclamation)
    ' If the answer is "no", then exit. 
    If sc = 7 then Exit Sub	
    ' User function to kill all Stations. 
    KillEm
    ' Open a new Station. 
    CHM.Channels.Open SENDER.MCM_NAME.Value, 7
    ' Station details from text input boxes in form. 
    CHM.Channels.Item(0).Description = SENDER.MCM_DESC.Value
    CHM.Channels.Item(0).MulticastTimeToLive = SENDER.MCM_TTL.Value
    CHM.Channels.Item(0).NSCURL = SENDER.MCM_NURL.Value
    CHM.Channels.Item(0).UnicastURL = SENDER.MCM_UURL.Value
    CHM.Channels.Item(0).DeliveryMode = SENDER.MCM_DEL.Value
    CHM.Channels.Item(0).ContactAddress = "One Querty Way"
    CHM.Channels.Item(0).ContactEmail = "querty@querty.com"
    CHM.Channels.Item(0).ContactPhone = "dial-a-querty"
    CHM.Channels.Item(0).MulticastAddress = SENDER.MCM_MIP.Value
    CHM.Channels.Item(0).Port = SENDER.MCM_PORT.Value
    CHM.Channels.Item(0).MulticastAdapterAddress = ""
    ' Add a Station format from a source file. Format type is ASF file. 
    CHM.Channels.Item(0).ChannelFormats.Add SENDER.MCM_SRC.Value, 3
    ' Write NSC file with overwrite. 
    CHM.Channels.Item(0).WriteNSC SENDER.MCM_NSC.Value, 1
    ' If streams already exist, then delete them. 
    If    SC > 0 Then
          For i=0 to CHM.Streams.Count -1
              CHM.Streams(i).Close
          Next
    End If
    ' Open a stream based on the stream type of the ASF file.
    Set MyStream = CHM.Streams.Open(SENDER.MCM_UURL.Value, "MyStream", 7)
    ' Attach the stream to the current Station. 
    CHM.Channels(0).SetActiveStream MyStream
    ' Get state of stream from Stream
    StreamState(CHM.Streams(0).GetState)
    ' Update Station count
    SENDER.MCM_CHANNELS.Value = CHM.Channels.Count
    ' Update version for ASX
    SENDER.MCM_VER.Value = CHM.Channels.Item(0).Version
    SENDER.MCM_RPT.Value = "0"
End Sub

' Start stream. 
Sub StartStream_OnClick
    ' Start a stream at the beginning. 
    CHM.Streams(0).Start 0
    ' Display stream state. 
    StreamState(CHM.Streams(0).GetState)
End Sub

' Stop stream. 
Sub StopStream_OnClick
    ' Stop a stream. 
    CHM.Streams(0).Stop
    ' Display stream state. 
    StreamState(CHM.Streams(0).GetState)
End Sub
 
' Display change in stream state.
Sub CHM_OnStreamPropertyChange(Stream)
    StreamState(CHM.Streams(0).GetState)
End Sub

' Check for stream stop. Restart if repeat checked.
Sub CHM_OnStreamStop(MyStream, MyResult)
    ' Check for error.
    If MyResult Then MsgBox "Error: " & MyResult : Exit Sub
    'If no repeat desired, exit.
    If Not SENDER.Repeat.Checked Then StreamState(CHM.Streams(0).GetState) : Exit Sub
    ' Start a stream at the beginning. 
    CHM.Streams(0).Start 0
    ' Display stream state. 
    StreamState(CHM.Streams(0).GetState)
    SENDER.MCM_RPT.Value = SENDER.MCM_RPT.Value + 1
End Sub

' User function to display stream state. 
Function StreamState(ByVal State)
    Select Case State
               Case 1
                       State = "Closed"
               Case 2
                       State = "Open"
               Case 3
                       State = "Streaming"
               Case 4
                       State = "Restarting"
               Case Else
                       State = "Unknown"
    End Select
    SENDER.MCM_SST.Value = State
End Function

' Click event to kill Stations. 			
Sub KillChannels_OnClick
    KillEm
End Sub

' Click event to list Stations. 
Sub ListChannels_OnClick
    ListEm
End Sub

' User function to list Stations.
Function ListEm
    ' Connect to server. 
    CHM.Connect SENDER.ServerName.VALUE
    ' Display actual server name. 
    SENDER.MCM_SERVER.Value = CHM.Server
    ' Display Station count. 
    SENDER.MCM_CHANNELS.Value = CHM.Channels.Count
    CV = ""
    If    CHM.Channels.Count = 0 Then CV = "No Stations"
    ' Fill variable with Station information. 
    For    i=0 to CHM.Channels.Count -1
             CV = CV & "(" & i+1 & ") Name: " & CHM.Channels(i).Name & ", Desc: " & CHM.Channels(i).Description & vbCrLf				
    Next
    ' Display Stations. 
    MsgBox CV
End Function

' User function to delete Stations. 
Function KillEm
    ' Connect to server. 
    CHM.Connect SENDER.ServerName.VALUE
    ' Display actual server name. 
    SENDER.MCM_SERVER.Value = CHM.Server
    ' Display Station count. 
    SENDER.MCM_CHANNELS.Value = CHM.Channels.Count
    ' Don't bother to kill if no Stations. 
    If CHM.Channels.Count = 0 Then Exit Function
    ' Go through each Station and close. 
    For    i=0 to CHM.Channels.Count -1
             CHM.Channels(i).Close
    Next
    ' Display new count -- should be zero. 
    SENDER.MCM_CHANNELS.Value = CHM.Channels.Count
    ' Display "Unknown" for stream state. 
    StreamState(9)
End Function
	
-->
</SCRIPT>

</BODY>
</HTML>
