<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Receive Multicast ASF Sample</TITLE></HEAD>
<BODY>
<H2>Receive Multicast ASF Sample</H2>
<P>This sample shows how to receive a multicast ASF broadcast. See below for information about the ASX file needed.

<BR>

<OBJECT ID="nsplay1" WIDTH=160 HEIGHT=120
 CLASSID="CLSID:2179C5D3-EBFF-11cf-B6FD-00AA00B4E220" CODEBASE="http://www.microsoft.com/netshow/download/en/nsftsinf.cab#Version=2,0,0,912">
</OBJECT>

<FORM Name=RECEIVER>
<!-- Path to ASX file. Can be HTTP or local. -->
<!-- Change this path to a location that contains an ASX for a multicast file. -->
ASX File: <INPUT TYPE=TEXT NAME=PLY_NAME SIZE=30 VALUE="http://www.microsoft.com/netshow/content/asx/loveleap.asx">
<!-- Buttons to play, stop, or provide information about the Player control. -->

<INPUT TYPE="BUTTON" NAME="BtnPlay" VALUE="Play">
<INPUT TYPE="BUTTON" NAME="BtnStop" VALUE="Stop">
<INPUT TYPE="BUTTON" NAME="BtnAbout" VALUE="About">

<!-- Play states of the control. -->
State: <INPUT TYPE=TEXT NAME=PLY_PST SIZE=12 VALUE="Unknown">
<!-- Multicast state of the control. -->
<INPUT TYPE=TEXT NAME=PLY_MCT SIZE=12 VALUE="">
</FORM>

<p>The sample.asx file must contain a valid URL that points to the NSC file that defines the multicast. A typical .asx file might contain:
<pre>
[Announcement]
Channel URL=http://HTTPSRV/sample.nsc#1
[Description]
Program Title=My Program
Program Author=My Name
Program Description=My Program
Program Copyright=1997
</pre>
<p>Change HTTPSRV to the name of the HTTP server where the .nsc file is stored. The .nsc file defines the multicast address and port to listen to, as well as other relevant information needed to play the incoming stream. Make sure to append the version number of the channel to the Channel URL.
</FONT>

<SCRIPT LANGUAGE="VBScript">
<!--

' Display information about the Player control.
Sub BtnAbout_OnClick
     nsplay1.AboutBox()
End Sub

' Start the play. 
Sub BtnPlay_OnClick
    ' File name for control to play. Insert ASX file that points to a NSC file the defines a multicast.
    nsplay1.FileName = RECEIVER.PLY_NAME.Value
    ' Play the multicast.
    nsplay1.Play
    ' Display the protocol of the file received. If all went well, you are receiving a multicast.
    ProtocolVal(nsplay1.SourceProtocol)
End Sub

' Stop the play. 
Sub BtnStop_OnClick
    ' Stop the play.
    nsplay1.Stop
    ' Rewind to the beginning.
    nsplay1.CurrentPosition = 0
    ' Blank out the protocol display.
    RECEIVER.PLY_MCT.Value = ""
End Sub

' Event handler for Play State changes. 
Sub nsplay1_PlayStateChange(OldState, NewState)
    ' Display play state value when a play state changes.
    PlayStateVal(NewState)
    ' Display any protocol changes when the play state changes.
    ProtocolVal(nsplay1.SourceProtocol)
End Sub

' User Function to display Play State change. 
Function PlayStateVal(ByVal State)
    ' Display a play state change when called.
    Select Case State
          Case 0
                State = "Stopped"
          Case 1
                 State = "Paused"
          Case 2
                 State = "Playing"
          Case 3
                 State = "Waiting"
          Case Else
                State = "Unknown"
    End Select
    RECEIVER.PLY_PST.Value = State
End Function

' User Function to display Protocol.
Function ProtocolVal(ByVal State)
    Select Case State
        Case 1
              State = "Multicast"
        Case 2
              State = "Multicast Plus"
        Case 3
              State = "UDP"
        Case 4
              State = "TCP"
        Case 5
              State = "Distribution"
        Case 6
              State = "HTTP"
        Case 7
              State = "File"
        Case Else
              State = "Unknown"
    End Select
    RECEIVER.PLY_MCT.Value = State
End Function

-->
</SCRIPT>

</BODY>
</HTML>
