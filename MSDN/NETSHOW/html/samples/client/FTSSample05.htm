<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Total FTS Demo</TITLE></HEAD>
<BODY>
<H3>Total File Transfer Service Demo</H3>

<FONT FACE="Arial, Helvetica" SIZE="2" COLOR="BLACK">

<OBJECT ID="nsfile1" CLASSID="CLSID:26F24A93-1DA2-11D0-A334-00AA004A5FC5" ALIGN="RIGHT" HEIGHT="10" WIDTH="10">
<PARAM NAME="_Version" VALUE="65536">
<PARAM NAME="_ExtentX" VALUE="2646">
<PARAM NAME="_ExtentY" VALUE="1323">
<PARAM NAME="_StockProps" VALUE="0">
</OBJECT>
</FONT>

<FORM NAME="MyForm">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2" COLOR="BLACK">
<P>Source IP: <INPUT TYPE="TEXT" NAME="IPAddr" VALUE="239.230.50.50">  
Source Port: <INPUT TYPE="TEXT" NAME="IPPort" VALUE="5050" SIZE="6"> 
Filter: <INPUT TYPE="TEXT" NAME="Filter">

<P>FilePath: <INPUT TYPE="TEXT" NAME="FilePath" VALUE="%TEMP%\">  
Attributes: <INPUT TYPE="TEXT" NAME="Attributes" VALUE="0">  
Flags: <INPUT TYPE="TEXT" NAME="Flags" VALUE="1025">
<HR>

<TABLE BORDER="0"><TR>
<TD><FONT FACE="Arial, Helvetica" SIZE="2" COLOR="BLACK"><INPUT TYPE="BUTTON" NAME="BtnReceiveFile" VALUE="Start Receive"></FONT></TD>
<TD><FONT FACE="Arial, Helvetica" SIZE="2" COLOR="BLACK"><INPUT TYPE="BUTTON" NAME="BtnCancelFile" VALUE="Cancel"></FONT></TD>
<TD><FONT FACE="Arial, Helvetica" SIZE="2" COLOR="BLACK"><INPUT TYPE="BUTTON" VALUE="About FTS" NAME="BtnAbout"></FONT></TD>
<TD WIDTH="25"></TD>
<TD WIDTH="50"><INPUT TYPE="TEXT" NAME="Routing"></TD>
<TD WIDTH="25"></TD>
<TD ALIGN="RIGHT" WIDTH="75"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2" COLOR="BLACK">Start Time: </FONT></TD>
<TD WIDTH="150"><INPUT TYPE="TEXT" NAME="StartTime"></TD>
</TR>
</TABLE>
<HR>

<P>Files: <INPUT TYPE="TEXT" NAME="NumFiles" SIZE="5">  
Percent File: <INPUT TYPE="TEXT" NAME="PerFileData" SIZE="30"> 
Time Taken: <INPUT TYPE="TEXT" NAME="MyTime">

<P>Current File: <INPUT TYPE="TEXT" NAME="CurrFile" SIZE="30">  
Size: <INPUT TYPE="TEXT" NAME="CurrSize" SIZE="16">
Attributes: <INPUT TYPE="TEXT" NAME="CurrAttr" SIZE="6">

<P>Total Bytes: <INPUT TYPE="TEXT" NAME="TotalBytes"> 
Data Bytes: <INPUT TYPE="TEXT" NAME="DataBytes">

<P>Packets: <INPUT TYPE="TEXT" NAME="Packets" SIZE="8"> 
Bogus: <INPUT TYPE="TEXT" NAME="Bogus" SIZE="8"> 
Drop: <INPUT TYPE="TEXT" NAME="PackDrop" SIZE="8"> 
Corr: <INPUT TYPE="TEXT" NAME="PackCorr" SIZE="8"> 
Dupes: <INPUT TYPE="TEXT" NAME="PackDup" SIZE="8">
<HR>
<P>Source Path: <INPUT TYPE="TEXT" NAME="SrcPath" SIZE="35"> 
Destination Path: <INPUT TYPE="TEXT" NAME="DestPath" SIZE="35">

<P>Endpoint Address: <INPUT TYPE="TEXT" NAME="EndAddr" SIZE="16"> 
Endpoint Port: <INPUT TYPE="TEXT" NAME="EndPort" SIZE="8">

<P>Source Addresss: <INPUT TYPE="TEXT" NAME="SrcAddr" SIZE="16"> 
Source Port: <INPUT TYPE="TEXT" NAME="SrcPort" SIZE="8">

<P>Local Address: <INPUT TYPE="TEXT" NAME="LocAddr" SIZE="16"> 
LocalPort: <INPUT TYPE="TEXT" NAME="LocPort" SIZE="8"> 
Local Port Used: <INPUT TYPE="TEXT" NAME="LastPort" SIZE="8">
</FORM>
</FONT>


<SCRIPT LANGUAGE="VBScript">
<!--
Sub BtnReceiveFile_OnClick
  On Error Resume Next
  '--- Initialize form values.
  MyForm.MyTime.Value = ""
  MyForm.StartTime.Value = ""
  MyForm.NumFiles.Value = ""
  MyForm.PerFileData.Value = ""
  MyForm.TotalBytes.Value = ""
  MyForm.DataBytes.Value = ""
  MyForm.CurrFile.Value = ""
  MyForm.CurrAttr.Value = ""
  MyForm.CurrSize.Value = ""
  MyForm.Packets.Value = ""
  MyForm.Bogus.Value = ""
  MyForm.PackDrop.Value = ""
  MyForm.PackCorr.Value = ""
  MyForm.PackDup.Value = ""
  MyForm.SrcPath.Value = ""
  MyForm.DestPath.Value = ""
  MyForm.EndAddr.Value = ""
  MyForm.EndPort.Value = ""
  MyForm.SrcAddr.Value = ""
  MyForm.SrcPort.Value = ""
  MyForm.LocAddr.Value = ""
  MyForm.LocPort.Value = ""
  MyForm.LastPort.Value = ""
 '--- Determine routing.
 If MyForm.IPAddr.Value = "" Then 
   MyForm.Routing.Value = " Listen for Unicast"
   MyIPAddr = ""
   nsfile1.Type = 2
 Else
   MyIPAddr = MyForm.IPAddr.Value
   MyForm.Routing.Value = "Listen for Multicast"
 End If
'--- Set up callbacks.
  call nsfile1.FtsRegisterStatusCallback(4096, 5, 8192, 8192, 1, 1, 1, 1, 1, 4+8+16+32, 0)
'--- Start transfer.
  call nsfile1.FtsStartFileTransferReceive(MyIPAddr, MyForm.IPPort.Value, MyForm.Filter.Value,   MyForm.FilePath.Value, MyForm.Attributes.Value, MyForm.Flags.Value)
  If Err.Number Then MsgBox "Start Error = " & ReturnError(Err.Number)
End Sub

Sub BtnCancelFile_OnClick
 On Error Resume Next
 call nsfile1.FtsCancelFileTransferReceive
 MsgBox "Transfer Cancelled. Error = " & ReturnError(nsfile1.Result)
End Sub

Sub nsfile1_FtsOnTransferStarted
 On Error Resume Next
 MyForm.StartTime.Value = Time()
 MyForm.SrcPath.Value = nsfile1.SourceFilePath
 MyForm.DestPath.Value = nsfile1.DestinationFilePath
 MyForm.EndAddr.Value = nsfile1.EndpointAddress
 MyForm.EndPort.Value = nsfile1.EndpointPort
 MyForm.SrcAddr.Value = nsfile1.SourceAddress
 MyForm.SrcPort.Value = nsfile1.SourcePort
 MyForm.LocAddr.Value = nsfile1.LocalAddress
 MyForm.LocPort.Value = nsfile1.LocalPort
 MyForm.LastPort.Value = nsfile1.LocalPortUsed
End Sub

Sub nsfile1_FtsOnFileTransferStarted
 On Error Resume Next
 MyForm.CurrFile.Value = nsfile1.CurrentFilePath
 MyForm.CurrAttr.Value = nsfile1.CurrentFileAttributes
 MyForm.CurrSize.Value = nsfile1.CurrentFileSize
End Sub

Sub nsfile1_FtsOnFileTransferCompleted
 On Error Resume Next
 MyForm.NumFiles.Value = nsfile1.NumFilesTransferred
End Sub

Sub nsfile1_FtsOnTransferProgress
 On Error Resume Next
 MyForm.NumFiles.Value = nsfile1.NumFilesTransferred
 ProgBar = Int((nsfile1.PercentFileDataBytesTransferred)/5)
 If ProgBar < 20 Then
  MyForm.PerFileData.Value = String(ProgBar, "©")
 Else
  MyForm.PerFileData.Value = "File Transferred!"
 End If
 MyForm.TotalBytes.Value = nsfile1.NumTotalBytesTransferred
 MyForm.DataBytes.Value = nsfile1.NumTotalDataBytesTransferred
 MyForm.Packets.Value = nsfile1.NumPacketsTransferred
 MyForm.Bogus.Value = nsfile1.NumBogusPacketsReceived
 MyForm.PackDrop.Value = nsfile1.NumPacketsDropped
 MyForm.PackCorr.Value = nsfile1.NumPacketsCorrected
 MyForm.PackDup.Value = nsfile1.NumDuplicatePacketsReceived
End Sub

Sub nsfile1_FtsOnTransferCompleted
 On Error Resume Next
 TTime = TimeValue(Now) - TimeValue(MyForm.StartTime.Value)
 MyForm.MyTime.Value = "Total = " & Hour(TTime) & " h " & Minute(TTime) & " m " & Second(TTime) & " s"
 MsgBox "Transfer Completed. Error = " & ReturnError(nsfile1.Result)
'--- Bytes
 MyForm.NumFiles.Value = nsfile1.NumFilesTransferred
 MyForm.PerFileData.Value = "File Transferred!"
 MyForm.TotalBytes.Value = nsfile1.NumTotalBytesTransferred
 MyForm.DataBytes.Value = nsfile1.NumTotalDataBytesTransferred
 MyForm.CurrFile.Value = nsfile1.CurrentFilePath
 MyForm.CurrAttr.Value = nsfile1.CurrentFileAttributes
 MyForm.CurrSize.Value = nsfile1.CurrentFileSize
'--- Packets
 MyForm.Packets.Value = nsfile1.NumPacketsTransferred
 MyForm.Bogus.Value = nsfile1.NumBogusPacketsReceived
 MyForm.PackDrop.Value = nsfile1.NumPacketsDropped
 MyForm.PackCorr.Value = nsfile1.NumPacketsCorrected
 MyForm.PackDup.Value = nsfile1.NumDuplicatePacketsReceived
End Sub

Sub BtnAbout_OnClick
 call nsfile1.AboutBox()
End Sub

Function ReturnError(ByVal ErrNum)
 Select Case ErrNum
  Case 0
   ErrString = "No Error"
  Case 1
   ErrString = "Already Requested"
  Case -2147467260
   ErrString = "Cancelled"
  Case -2147467259
   ErrString = "Failed"
  Case -2147287038
   ErrString = "File Not Found"
  Case -2147024882
   ErrString = "Out Of Memory"
  Case -2147024809
   ErrString = "Invalid Parameter"
  Case -2147023436
   ErrString = "Timed Out"
  Case Else
   ErrString = "Unknown Error " & CStr(Hex(ErrNum))
 End Select
 ReturnError = ErrString
End Function
-->
</SCRIPT>

</BODY>
</HTML>
