<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Receive Multicast with Progress</TITLE></HEAD>

<BODY>
<H2>Receive Multicast with Progress</H2>

<OBJECT ID="nsfile1" CLASSID="CLSID:26F24A93-1DA2-11D0-A334-00AA004A5FC5" ALIGN="BASELINE" HEIGHT="10" WIDTH="10">
<PARAM NAME="_Version" VALUE="65536">
<PARAM NAME="_ExtentX" VALUE="2646">
<PARAM NAME="_ExtentY" VALUE="1323">
<PARAM NAME="_StockProps" VALUE="0">
</OBJECT>

<FORM NAME="MyForm">
<INPUT TYPE="BUTTON" NAME="BtnReceiveFile" VALUE="Start Receive">
<INPUT TYPE="BUTTON" NAME="BtnCancelFile" VALUE="Cancel">
<INPUT TYPE="BUTTON" VALUE="About FTS" NAME="BtnAbout">

<P>To receive a multicast file transfer, click the <B>Start Receive</B> button. Cancel with the <B>Cancel</B> button. The transfer progress and statistics are shown below.

<H5>Bytes Transferred</H5>
<P>Data Bytes: <INPUT TYPE="TEXT" NAME="DataBytes" VALUE="0"> 
Total Bytes: <INPUT TYPE="TEXT" NAME="TotalBytes" VALUE="0"> 
Redundancy: <INPUT TYPE="TEXT" NAME="Redundancy" VALUE="0" SIZE="8">

<H5>Packets Transferred</H5>
<P>Packets: <INPUT TYPE="TEXT" NAME="Packets" VALUE="0"> 
Bogus: <INPUT TYPE="TEXT" NAME="Bogus" VALUE="0"> 
Noise: <INPUT TYPE="TEXT" NAME="Noise" VALUE="0" SIZE="8">
</FORM>
<HR>

<P>Start the receive file operation <I>before</I> starting the send file operation.
<P>The redundancy and noise calculations are shown when the transfer is complete.
<P>The transfer progress and statistics above shows the number of data bytes received and the number of total bytes received. Data bytes do not include any headers or forward error correction redundancy. The value for redundancy includes header information but roughly corresponds to the percent of redundancy set by the sender.
<P>The form also shows the packets transferred and the number of bogus packets received. The &quot;noise&quot; is the value of the bogus packets received divided by the packets transferred. The higher the number, the more unwanted packets are on the same address.
<P><B>Note</B> Make sure the IP address and port match the address and port of the server you want to listen to. This sample uses the following parameters:
<UL>
<LI><B>IP Address:</B> 239.230.50.50
<LI><B>IP Port:</B> 5050
</UL>


<SCRIPT LANGUAGE="VBScript">
<!--
Sub BtnReceiveFile_OnClick
    MyForm.Noise.Value = 0
    MyForm.Redundancy.Value = 0
    call nsfile1.FtsRegisterStatusCallback(0, 0, 4096, 4096, 0, 0, 0, 0, 0, 0, 0)
    On Error Resume Next
    call nsfile1.FtsStartFileTransferReceive("239.230.50.50", 5050, "", "%TEMP%\", 0, 1025)
    If    Err.Number Then MsgBox "Start Error = " & ReturnError(Err.Number)
End Sub

Sub BtnCancelFile_OnClick
    call nsfile1.FtsCancelFileTransferReceive
    MsgBox "Transfer Cancelled. Error = " & ReturnError(nsfile1.Result)
End Sub

Sub nsfile1_FtsOnTransferProgress
    MyForm.TotalBytes.Value = nsfile1.NumTotalBytesTransferred
    MyForm.DataBytes.Value = nsfile1.NumTotalDataBytesTransferred
    MyForm.Packets.Value = nsfile1.NumPacketsTransferred
    MyForm.Bogus.Value = nsfile1.NumBogusPacketsReceived
End Sub

Sub nsfile1_FtsOnTransferCompleted
    MsgBox "Transfer Completed. Error = " & ReturnError(nsfile1.Result)
    TotalBytes = nsfile1.NumTotalBytesTransferred
    DataBytes = nsfile1.NumTotalDataBytesTransferred
    MyForm.Redundancy.Value = Int(((TotalBytes - DataBytes)/TotalBytes)*100)
    Packets = nsfile1.NumPacketsTransferred
    Bogus = nsfile1.NumBogusPacketsReceived
    MyForm.Noise.Value = Int(Bogus/Packets)
    MyForm.TotalBytes.Value = nsfile1.NumTotalBytesTransferred
    MyForm.DataBytes.Value = nsfile1.NumTotalDataBytesTransferred
    MyForm.Packets.Value = nsfile1.NumPacketsTransferred
    MyForm.Bogus.Value = nsfile1.NumBogusPacketsReceived
End Sub

Sub BtnAbout_OnClick
    call nsfile1.AboutBox()
End Sub

Function ReturnError(ByVal ErrNum)
    Select Case ErrNum
         Case 0
               ErrString = "No Error"
         Case 1
               ErrString = "Already Requested"
         Case -2147467260
               ErrString = "Cancelled"
         Case -2147467259
               ErrString = "Failed"
         Case -2147287038
               ErrString = "File Not Found"
         Case -2147024882
               ErrString = "Out Of Memory"
         Case -2147024809
               ErrString = "Invalid Parameter"
         Case -2147023436
               ErrString = "Timed Out"
         Case Else
               ErrString = "Unknown Error " & CStr(Hex(ErrNum))
    End Select
    ReturnError = ErrString
End Function

-->
</SCRIPT>

</BODY>
</HTML>
