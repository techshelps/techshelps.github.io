<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INSSUserAuthentication::GetChallenge</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h4><a name="inssuserauthenticationgetchallenge"></a>INSSUserAuthentication::GetChallenge</h4>
<p>
The <b>INSSUserAuthentication::GetChallenge </b>method is called by the server to get data from the authenticator to be sent back to the client.</p>
<p class=blue>
<b>Syntax</b></p>
<p>
<b>HRESULT</b> <b>GetChallenge</b> (<br>
  <b>DWORD&nbsp; </b><i>*pcbBlob</i>,<br>
  <b>BYTE&nbsp; <i>*</i></b><i>*pBlob</i>,<br>
  <b>LPBSTR</b> <i>pbstrRealm</i><br>
);</p>
<p class=blue>
<b>Parameters</b></p>
<p class=dt>
<i>[out] pcbBlob</i></p>
<p class=indent>
Specifies the size in bytes of the data being sent to the client.</p>
<p class=dt>
<i>[out] pBlob</i></p>
<p class=indent>
Specifies a pointer to the data being sent to the client.</p>
<p class=dt>
<i>[out] pbstrRealm</i></p>
<p class=indent>
Specifies a pointer to the realm for the challenge.</p>
<p class=blue>
<b>Return Values</b></p>
<p>
This method should return<b> S_OK</b> upon successful completion, or an <b>HRESULT</b> error value.</p>
<p class=blue>
<b>Remarks</b></p>
<p>
The authenticator determines the format of the returned challenge. In order to work properly with the server, the authenticator should observe the following guideline: If it is not obvious how the server will interpret the format, the authenticator should use the format appropriate for the text-based HTTP-Basic protocol. </p>
<p>
If the <b>INSSAuthenticator::Initialize</b> method defines a NULL default realm, the <b>GetChallenge</b> method must return a non-NULL realm string. If the authenticator’s <b>Initialize</b> method specifies a non-NULL default realm, the <i>pbstrRealm</i> must be a NULL pointer. That is, the <b>GetChallenge</b> method should return any realm. </p>
<p>
It is possible that the server may issue the <b>GetChallenge</b> method to get a realm and an initial challenge before the authenticator knows anything about the user. In this case, either the realm or the challenge, or both, may be NULL. Authenticators should be prepared to handle such cases so as to avoid unintended interruptions.</p>
<p>
This method is called by the server when the result parameter passed to the callback has an <b>NS_AUTH_CONTINUE</b> value.</p>
<p>
This method may also be called with an initial challenge to the client is made before the <b>Authenticate</b> method is called. This data may be ignored by the authenticator; however, a valid value should be returned to the server when the initial challenge is issued.</p>
<p>
The following sample code demonstrates a skeletal implementation of this method:</p>
<pre><code>HRESULT CUserAuthentication::GetChallenge( 
 &nbsp;&nbsp;&nbsp;&nbsp; DWORD *pcbBlob, 
 &nbsp;&nbsp;&nbsp;&nbsp; BYTE **pBlob )
{
  //
  // Set the blob with the reply data here.
  //
  return( S_OK );
}
</code></pre>
<p class=blue>
<b>See Also</b></p>
<p>
<b>INSSUserAuthentication::Authenticate</b>, <a href="inssauthenticationcallbackonauthenticatecomplete.htm"><b>INSSAuthenticationCallback::OnAuthenticateComplete</b></a></p>
<A HREF="legal.htm">&copy; 1996-1998 Microsoft Corporation. All rights reserved.</A></BODY>
</HTML>
