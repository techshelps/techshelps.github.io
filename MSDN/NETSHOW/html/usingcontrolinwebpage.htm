<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Control in a Web Page</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h3><a name="usingcontrolinwebpage"></a>Using the Control in a Web Page</h3>
<p>
Being an ActiveX control, the Media Player control makes use of Automation to expose methods and properties and provide event support. While ActiveX controls, like the Player control, can be used as components in a wide variety of programming environments, they are extremely well-suited for use in Web pages. ActiveX controls can be used to add exciting dynamic content to previously static Web pages, and they are easy to distribute over networks.</p>
<p>
By using a scripting language such as VBScript or JScript, it is easy to embed the Media Player control in an HTML Web page. This section explains how to embed the Media Player control into an HTML page and use VBScript routines to manipulate it.</p>
<h4>Inserting the Player Control</h4>
<p>
The &lt;OBJECT&gt; tag is used to embed ActiveX objects like the Media Player control into an HTML page. Following is an example of using the &lt;OBJECT&gt; tag to insert the Player control.</p>
<pre><code>&lt;OBJECT ID="MediaPlayer1" WIDTH=320 HEIGHT=240
 CLASSID="CLSID:22D6f312-B0F6-11D0-94AB-0080C74C7E95"&gt;
 CODEBASE="http://www.microsoft.com/netshow/download/en/nsasfinf.cab
#Version=5,1,51,115"&gt;
&lt;/OBJECT&gt;</code></pre>
<p>
The following &lt;OBJECT&gt; tag attributes are required:
<ul type=disc>
<li>
ID - The name used to reference this instance of the control.</li>
<li>
CLSID - The Global Class Identifier (CLSID) of the Media Player control.</li>
<li>
HEIGHT and WIDTH - The height and width of the control in pixels. These attributes are required; however, in most cases their values are ignored by the control. </li>
</ul>
<p>
Using the CODEBASE attribute is strongly recommended. It contains a URL pointing to where the Player control can be found if it is unavailable on a user's system. Besides the address of the player object, the CODEBASE attribute may also optionally specify a version number of the control.</p>
<p>
The Player control is available on Microsoft's Web site packaged as a .cab (cabinet) file. The .ocx file containing the control, along with the codecs needed to support the control, are compressed into the cabinet. An .inf file included in the cabinet specifies the files that need to be downloaded, and performs the setup for the control to run.</p>
<h4>Setting Control Properties with the Param Tag</h4>
<p>
One option for setting the properties of a control in a Web page is adding &lt;Param&gt; tags between the &lt;Object&gt; and &lt;/Object&gt; tags. This is an ideal method for setting <i>design time</i> properties. Following is an example of the previous &lt;Object&gt; tag with some &lt;Param&gt; tags added:</p>
<pre><code>&lt;OBJECT ID="MediaPlayer1" WIDTH=320 HEIGHT=240
 CLASSID="CLSID:22D6f312-B0F6-11D0-94AB-0080C74C7E95"&gt;
 CODEBASE="http://www.microsoft.com/netshow/download/en/nsasfinf.cab
#Version=5,1,51,115"&gt;
 &lt;Param Name="FileName" Value="C:\ASFRoot\Welcome.asf"&gt;
 &lt;Param Name="ShowControls" Value="False"&gt;
 &lt;Param Name="AutoRewind" Value="True"&gt;
 &lt;Param Name="AutoStart" Value="False"&gt;
&lt;/OBJECT&gt;
</code></pre>
<p>
The &lt;Param&gt; tags used in our example have two fields; the first is the name of the property being set, and the second specifies the value the property is set to. In the example above, the first &lt;Param&gt; tag sets the <b>FileName</b> property to C:\ASFRoot\Welcome.asf. The remaining &lt;Param&gt; tags change the default values of the <b>AutoRewind</b> property to TRUE and the <b>ShowControls</b> and <b>AutoStart</b> and properties to FALSE.</p>
<h4>Adding a Simple User Interface for the Control</h4>
<p>
Adding a few buttons is the simplest way to demonstrate Player control operation. Add the following three button controls to the body of your HTML page: one to start the Player control, one to stop it, and one to display the current version of the Player control.</p>
<pre><code>&lt;INPUT TYPE="BUTTON" NAME="BtnPlay" VALUE="Play"&gt;
&lt;INPUT TYPE="BUTTON" NAME="BtnStop" VALUE="Stop"&gt;
&lt;INPUT TYPE="BUTTON" NAME="BtnAbout" VALUE="About"&gt;</code></pre>
<h4>Adding the Scripting Code</h4>
<p>
Scripting code adds interactivity to your page, allowing you to programmatically respond to events, call methods, and change <i>run-time</i> properties. First, you must notify the browser which scripting language you intend to use with a &lt;SCRIPT&gt; tag. Include the script commands within a comment so browsers that do not support scripting will not interpret your code as text and display it on the page.</p>
<p>
For this sample, VBScript is used. Put the &lt;SCRIPT&gt; tag anywhere in the BODY and embed the comment-surrounded code within the &lt;SCRIPT&gt; and &lt;/SCRIPT&gt; tags. The following code calls the Player control methods in response to events triggered by clicking the button controls.</p>
<pre><code>&lt;SCRIPT LANGUAGE="VBScript"&gt;
&lt;!--
Sub BtnAbout_OnClick
 &nbsp; MediaPlayer1.AboutBox()
End Sub
Sub BtnPlay_OnClick
 &nbsp;&nbsp; MediaPlayer1.Play
End Sub
Sub BtnStop_OnClick
 &nbsp;&nbsp; MediaPlayer1.Stop
 &nbsp;&nbsp; MediaPlayer1.CurrentPosition = 0
End Sub
--&gt;
&lt;/SCRIPT&gt;</code></pre>
<p>
Each subroutine is attached to a specific button that was defined in the FORM section. When an event is triggered by a button being clicked, the code makes a call (or series of calls) to the Player control.</p>
<h4>Simple Player Control Web Page</h4>
<p>
Combining the elements discussed previously in this section and adding them to a Web page, you can see how the pieces fit together.</p>
<pre><code>&lt;HTML&gt;
&lt;HEAD&gt;&lt;TITLE&gt;Media Player Test&lt;/TITLE&gt;&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;OBJECT ID="MediaPlayer1" WIDTH=320 HEIGHT=240
 CLASSID="CLSID:22D6f312-B0F6-11D0-94AB-0080C74C7E95"&gt;
 CODEBASE="http://www.microsoft.com/netshow/download/en/nsasfinf.cab
#Version=5,1,51,115"&gt;
 &lt;Param Name="FileName" Value="C:\ASFRoot\Welcome.asf"&gt;
 &lt;Param Name="ShowControls" Value="False"&gt;
 &lt;Param Name="AutoRewind" Value="True"&gt;
 &lt;Param Name="AutoStart" Value="False"&gt;
&lt;/OBJECT&gt;
&lt;BR&gt;
&lt;INPUT TYPE="BUTTON" NAME="BtnPlay" VALUE="Play"&gt;
&lt;INPUT TYPE="BUTTON" NAME="BtnStop" VALUE="Stop"&gt;
&lt;INPUT TYPE="BUTTON" NAME="BtnAbout" VALUE="About"&gt;
&lt;SCRIPT LANGUAGE="VBScript"&gt;
&lt;!--
Sub BtnAbout_OnClick
 &nbsp; MediaPlayer1.AboutBox
End Sub
Sub BtnPlay_OnClick
 &nbsp;&nbsp; MediaPlayer1.Play
End Sub
Sub BtnStop_OnClick
 &nbsp;&nbsp; MediaPlayer1.Stop
 &nbsp;&nbsp; MediaPlayer1.CurrentPosition = 0
End Sub
--&gt;
&lt;/SCRIPT&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</code></pre>
<p>
Try this code with a multimedia file on your computer. Copy and paste this code into a text file and change the <b>FileName</b> &lt;Param&gt; tag to specify the relative path and protocol of the file you wish to play.</p>
<A HREF="legal.htm">&copy; 1996-1998 Microsoft Corporation. All rights reserved.</A></BODY>
</HTML>
