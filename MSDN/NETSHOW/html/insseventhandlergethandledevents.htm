<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INSSEventHandler::GetHandledEvents</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h4><a name="insseventhandlergethandledevents"></a>INSSEventHandler::GetHandledEvents</h4>
<p>
The <b>INSSEventHandler::GetHandledEvents </b>method is used to specify which events will trigger a call from the NetShow server.</p>
<p class=blue>
<b>Syntax</b></p>
<p>
<b>HRESULT</b> <b>GetHandledEvents</b> (<br>
  <b>DWORD&nbsp; </b><i>cMaxHandledEvents</i>,<br>
  <b>DWORD&nbsp; </b><i>*pcHandledEvents</i>,<br>
  <b>NSS_EVENT_TYPE&nbsp; </b><i>*rgHandledEvents<br>
</i>);</p>
<p class=blue>
<b>Parameters</b></p>
<p class=dt>
<i>[in] cMaxHandledEvents</i></p>
<p class=indent>
Specifies the maximum number of different handled events.</p>
<p class=dt>
<i>[out] pcHandledEvent</i></p>
<p class=indent>
Specifies the number of events in the <i>rgHandledEvent</i> parameter.</p>
<p class=dt>
<i>[out] rgHandledEvent</i></p>
<p class=indent>
Specifies the list of events that will trigger a call from the server to the <a href="insseventhandlerhandleevent.htm"><b>INSSEventHandler::HandleEvent</b></a><b> </b>method. Supported values for this parameter are:</p>
<table border=0 cellpadding=5 cols=2 frame=below>
<tr valign=top>
<td class=blue width=28%><b>Event Type</b></td>
<td class=blue width=72%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=28%><b>NSSE_CONNECT</b></td>
<td width=72%>Client connected</td>
</tr>
<tr valign=top>
<td width=28%><b>NSSE_DISCONNECT</b></td>
<td width=72%>Client disconnected</td>
</tr>
<tr valign=top>
<td width=28%><b>NSSE_OPEN</b></td>
<td width=72%>Title opened</td>
</tr>
<tr valign=top>
<td width=28%><b>NSSE_CLOSE</b></td>
<td width=72%>Title closed</td>
</tr>
<tr valign=top>
<td width=28%><b>NSSE_PLAY</b></td>
<td width=72%>Title started streaming</td>
</tr>
<tr valign=top>
<td width=28%><b>NSSE_STOP</b></td>
<td width=72%>Title stopped streaming</td>
</tr>
</table><br>
<p class=blue>
<b>Return Values</b></p>
<p>
This method should return<b> S_OK</b> upon successful completion, or an <b>HRESULT</b> error value.</p>
<p class=blue>
<b>Remarks</b></p>
<p>
Memory for the events specified by the <i>rgAuthorizedEvents</i> is allocated and freed by the server.</p>
<p>
The following code illustrates a skeleton implementation of the <b>INSSEventHandler::GetHandledEvents </b>method:</p>
<pre><code>HRESULT 
CEventHandler::GetHandledEvents(
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DWORD cMaxHandledEvents,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DWORD __RPC_FAR *pcHandledEvents,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NSS_EVENT_TYPE __RPC_FAR *rgHandledEvents ) 
{
  if ( ( NULL == pcHandledEvents )
 &nbsp;&nbsp; || ( NULL == pcHandledEvents )
 &nbsp;&nbsp; || ( cMaxHandledEvents &lt; 9 ) ) {
 &nbsp;&nbsp; return( E_INVALIDARG );
  }
  *pcHandledEvents = 6;
  rgHandledEvents[0] = NSSE_CONNECT;
  rgHandledEvents[1] = NSSE_DISCONNECT;
  rgHandledEvents[2] = NSSE_OPEN;
  rgHandledEvents[3] = NSSE_CLOSE;
  rgHandledEvents[4] = NSSE_PLAY;
  rgHandledEvents[5] = NSSE_STOP;
  return( S_OK );
}
</code></pre>
<p class=blue>
<b>See Also</b></p>
<p>
<a href="insseventhandlerhandleevent.htm"><b>INSSEventHandler::HandleEvent</b></a></p>
<A HREF="legal.htm">&copy; 1996-1998 Microsoft Corporation. All rights reserved.</A></BODY>
</HTML>
