<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INSSEventAuthorization::AuthorizeEvent</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h4><a name="insseventauthorizationauthorizeevent"></a>INSSEventAuthorization::AuthorizeEvent</h4>
<p>
The <b>INSSEventAuthorization::AuthorizeEvent </b>method is called when a specified event is requested.</p>
<p class=blue>
<b>Syntax</b></p>
<p>
<b>HRESULT</b> <b>AuthorizeEvent</b> (<br>
  <b>NSS_EVENT</b>  <i>*pEvents</i>,<br>
  <b>INSSUserContext</b>  <i>*pUser</i>,<br>
  <b>INSSPresentationContext</b>  <i>*pPresentation</i>,<br>
  <b>INSSEventAuthorizationCallback</b>  <i>*pCallback</i>,<br>
  <b>DWORD</b>  <i>dwRequestId<br>
</i>);</p>
<p class=blue>
<b>Parameters</b></p>
<p class=dt>
<i>[in] pEvents</i></p>
<p class=indent>
Specifies the server event being authorized.</p>
<p class=dt>
<i>[in] pUser</i></p>
<p class=indent>
Specifies a pointer to the user context. The user context is used to store information about the client. For more information about the user context and its properties, see <i>Event Authorization and Notification Contexts</i> in the guide. </p>
<p class=dt>
<i>&nbsp;[in] pPresentation</i></p>
<p class=indent>
Specifies a pointer to the presentation context property map interface. The presentation context is used to store information about the presentation. For more information about the presentation context and its properties, see <i>Event Authorization and Notification Contexts</i> in the guide. </p>
<p class=dt>
<i>[in] pCallback</i></p>
<p class=indent>
Specifies a pointer to the <a href="insseventauthorizationcallbackoneventauthorized.htm"><b>INSSEventAuthorizationCallback::OnEventAuthorized</b></a><b> </b>callback method authorizing the server to perform the requested event. The callback interface is implemented by the server.</p>
<p class=dt>
<i>[in] dwRequestId</i></p>
<p class=indent>
Specifies the request ID. This parameter is passed back to the <a href="insseventauthorizationcallbackoneventauthorized.htm"><b>INSSEventAuthorizationCallback::OnEventAuthorized</b></a><b> </b>method to uniquely identify the event being requested.</p>
<p class=blue>
<b>Return Values</b></p>
<p>
This method should return<b> S_OK</b> upon successful completion. Authorization errors should be passed to the callback interface.</p>
<p class=blue>
<b>Remarks</b></p>
<p>
A request from a client to perform any of the events specified by the <a href="insseventauthorizationgetauthorizedevents.htm"><b>INSSEventAuthorization::GetAuthorizedEvents</b></a> method triggers a call to this method.</p>
<p>
If the authorization process is expected to be lengthy, the call into this method can use another thread to check authorization and return immediately so the server won’t be tied up.</p>
<p>
The following code illustrates a skeleton implementation of the <b>INSSEventAuthorization::AuthorizeEvent </b>method;</p>
<pre><code>HRESULT
CEventHandler::AuthorizeEvent( 
 &nbsp;&nbsp;&nbsp;&nbsp; NSS_EVENT __RPC_FAR *pEvent,
 &nbsp;&nbsp;&nbsp;&nbsp; INSSUserContext __RPC_FAR *pUser,
 &nbsp;&nbsp;&nbsp;&nbsp; INSSPresentationContext __RPC_FAR *pPresentation,
 &nbsp;&nbsp;&nbsp;&nbsp; INSSCommandContext __RPC_FAR *pCommand,
 &nbsp;&nbsp;&nbsp;&nbsp; INSSEventAuthorizationCallback __RPC_FAR *pCallback,
 &nbsp;&nbsp;&nbsp;&nbsp; DWORD dwRequestId ) 
{
  HRESULT hr;
  
  if ( ( NULL == pEvent )
 &nbsp;&nbsp; || ( NULL == pCallback ) )
  {
 &nbsp;&nbsp; return( E_INVALIDARG );
  }
//
// The authorization routine goes here. The results of the authorization 
// is sent to the call back in the <i>hr</i> parameter
//
  pCallback-&gt;OnEventAuthorized( hr, dwRequestId );
  return( S_OK );
};</code></pre>
<p>
<b>See Also</b></p>
<p>
<a href="insseventauthorizationgetauthorizedevents.htm"><b>INSSEventAuthorization::GetAuthorizedEvents</b></a>; <a href="insseventauthorizationcallbackoneventauthorized.htm"><b>INSSEventAuthorizationCallback::OnEventAuthorized</b></a></p>
<A HREF="legal.htm">&copy; 1996-1998 Microsoft Corporation. All rights reserved.</A></BODY>
</HTML>
