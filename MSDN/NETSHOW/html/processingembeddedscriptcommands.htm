<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processing Embedded Script Commands</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h3><a name="processingembeddedscriptcommands"></a>Processing Embedded Script Commands</h3>
<p>
One compelling feature of ASF streams is the script commands that can be delivered to the Media Player control along with the audio and video streams. These script commands are a pair of Unicode strings synchronized with a particular time in the multimedia stream. The first string identifies the type of command being sent, and the second specifies the type-specific command to process. When the stream reaches the time associated with a command, the Player control sends a <a href="ns_playersdk_vjox.htm">ScriptCommand</a> event to the container. An event-handling routine can be written to respond to this event. The script-command strings are passed to the event handler as parameters of the <a href="ns_playersdk_vjox.htm">ScriptCommand</a> event.</p>
<p>
Two types of embedded script commands, <b>URL</b> and <b>FILENAME</b>, are automatically processed by the Player control. Event-handling routines are not needed to process commands with <b>URL</b> and <b>FILENAME</b> types.</p>
<p>
<b>URL-type Commands</b></p>
<p>
URL script command types are launched by the default Web browser when they are received by the Player control. If the control is embedded in an HTML page that employs frames, the URL can be launched in a frame specified by the script command. This allows the control to continue rendering the multimedia stream in one frame while the Web browser renders images or Web pages in another frame. If the frame is not specified in the script command, the <u>DefaultFrame</u> property determines which frame the new URL is launched in.</p>
<p class=indent>
<b>Note</b>: If frames are not used, or if the <b>URL</b>-type command is launched in the same frame as the Player control, the page rendering the stream is replaced by the URL specified by the script command.</p>
<p>
Automatic processing of <b>URL</b>-type script commands can be enabled or disabled by setting the <a href="ns_playersdk_kdlz.htm">InvokeURLs</a> property. If this property is set to FALSE, the <b>URL</b>-type command is ignored by the control; however, the <a href="ns_playersdk_vjox.htm">ScriptCommand</a> event is still sent to the container.</p>
<p>
<b>URL</b>-type script commands specify the relative location of the URL. A base HTTP URL can be specified by the <a href="ns_playersdk_caxr.htm">BaseURL</a> property. The Player control concatenates the base URL with the relative URL. The result is a fully specified URL that is passed as the command parameter of the <a href="ns_playersdk_vjox.htm">ScriptCommand</a> event.</p>
<p>
<b>FILENAME-type Commands</b></p>
<p>
When a script command with the <b>FILENAME</b> type is received by the Player control, the <a href="ns_playersdk_lvvf.htm">FileName</a> property is set to the value specified by the command. Then the control opens the file and begins rendering the stream from the new location. The control always automatically processes <b>FILENAME</b>-type commands; they can not be disabled like <b>URL</b>-type commands.</p>
<A HREF="legal.htm">&copy; 1996-1998 Microsoft Corporation. All rights reserved.</A></BODY>
</HTML>
