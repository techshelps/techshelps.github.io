<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About the NetShow Authentication API</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="aboutnetshowauthenticationapi"></a>About the NetShow Authentication API</h2>
<p>
Authentication involves user validation before any information exchange takes place. When a client initiates a request to the server that has authentication enabled, the server challenges the client to confirm its identity. Typically, this amounts to inspecting the name and password of the user account under various authentication protocols. However, both client and server must adhere to one agreed protocol.</p>
<p>
The Microsoft NetShow Unicast Server Manager supports user authentication as a security feature to grant access to NetShow content. The NetShow server can be configured to have authentication enabled. The authentication is either offered as a built-in capability or enabled via a plug-in component. </p>
<p>
With an authenticator, the server can delegate the responsibility of credential validation to a dedicated component. With the authenticator components, it is possible to implement authentication schemes of varied sophistication. The NetShow authenticators are COM-based objects. You can adopt custom authentication logic by creating an authentication plug-in component. Using the NetShow Authentication API, you can create an authenticator with ease and integrate it with the NetShow server seamlessly to check client credentials against any pre-installed or custom-made user account databases, and to notify the server of the outcome.</p>
<p>
Each authenticator is designed to implement one type of authentication. Although there can be more than one authenticator registered in the system, only one authenticator can be used at a time. </p>
<A HREF="legal.htm">&copy; 1996-1998 Microsoft Corporation. All rights reserved.</A></BODY>
</HTML>
