<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reading a Schema Class Entry</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_nt5sch_reading_a_schema_class_entry"></a>Reading a Schema Class Entry</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Classes are defined by <a href="clasdetl_9rmp.htm"><b>Class-Schema</b></a> objects. Like all other Directory Service (DS) objects, each Class-Schema object has attributes that define it. If this seems confusing, that's because it is. If you haven't done so, now would be a good time to look at the <a href="class_3wl5.htm"><b>Directory Service Terminology</b></a>. </p>
<p>
An entry in the class table has the following attribute-value pairs (with one exception) that describe the Class. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=28%><a href="attrdetl_0yed.htm">Common-Name</a></td>
<td width=72%>Every object in the DS has a naming attribute from which its Relative Distinguished Name (RDN) is formed. The Naming Attribute for Attribute-Schema objects is Common-Name. The value assigned to Common-Name is the value that the Attribute-Schema will have as its Relative Distinguished Name, in this case "Access Permissions". </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_8cv9.htm">Admin-Display-Name</a></td>
<td width=72%>The Common-Name of a given object might not be descriptive enough for use in administration tools. Admin-Display-Name is available for tools to use as a display name for an attribute when the naming attribute is not appropriate. </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_6jhq.htm">Admin-Description</a></td>
<td width=72%>Can hold additional descriptive text for use by an administrative application. Generally this attribute is identical in value to the Admin-Display-Name. </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_5r1v.htm">Object-Class</a></td>
<td width=72%>Every object in the DS is an instance of a known Object Class. Attribute definitions are all of Object Class Attribute-Schema. </td>
</tr>
<tr valign=top>
<td width=28%>Comment</td>
<td width=72%>A brief explanation of what the attribute is used for. This is not stored in the schema, it is stored in the schema source and included in the documentation. </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_43ad.htm">LDAP-Display-Name</a></td>
<td width=72%>The name of this attribute as known to the LDAP agent for the NTDS. This is the name LDAP clients must use to read or write this attribute. Note that <b>Active Directory</b> clients access the NTDS using LDAP, so these names are the names to use with Active Directory when reading and writing attributes via the Active Directory Get and Put methods.  </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_9x5w.htm">Governs-ID</a></td>
<td width=72%>An OID uniquely identifying this Class. OIDs are discussed in the <a href="class_3wl5.htm"><b>Directory Service Terminology</b></a>. </td>
</tr>
<tr valign=top>
<td width=28%>Structural Class</td>
<td width=72%>A class may be Structural, Abstract, or Auxiliary. Structural classes are classes that can be instantiated in the DS. Abstract classes are templates that can only be used to derive new classes in the schema. Auxiliary classes are like "include files" that are used to add a group of properties to a class definition in the schema. </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_6a78.htm">RDN-Att-Id</a></td>
<td width=72%>The name of the attribute that provides the Relative Distinguished Name (RDN) for this class. </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_0f50.htm">Schema-ID-GUID</a></td>
<td width=72%>A Globally Unique Identifier (GUID) that uniquely identifies all classes and attributes in the schema. Unlike OIDs, which are issued by a central authority, GUIDs are generated by a special algorithm. GUIDs are fixed length and can be dealt with more efficiently than OIDs. The NTDS uses OIDs for interoperability with external clients and GUIDs internally for efficiency. </td>
</tr>
<tr valign=top>
<td width=28%>Default UI State</td>
<td width=72%>Hidden or Displayed. UI is used to determine whether or not to show a value. </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_8zhu.htm">Default-Security-Descriptor</a></td>
<td width=72%>Indicates the Windows NT Security Descriptor that is applied by default to objects of this class when they are created. </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_0xt2.htm">Sub-Class-Of</a></td>
<td width=72%>Indicates the immediate superclass of this class. </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_3upf.htm">Auxiliary-Class</a></td>
<td width=72%>The name of an auxiliary class of this object. In the NTDS class inheritance model, a class can have one superclass and many auxiliary classes. The auxiliary classes contribute their attributes to the class that inherits from them. </td>
</tr>
<tr valign=top>
<td width=28%><a href="attrdetl_6r8z.htm">Poss-Superiors</a></td>
<td width=72%>Classes that can have the current class as a child. </td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
