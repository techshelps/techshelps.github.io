<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The New Look and Feel</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="thenewlookfeel"></a>The New Look and Feel</h1>
<p>
The biggest challenge you face in adapting applications to 32-bit mode is handling the enhanced Windows interface. Visual Basic gives you some of these features free, but others require additional work. A few demand serious hacking with the Windows API.</p>
<p>
Before you can figure out what you have to do, you need to know the results you want. That’s where the <i>Windows Interface Guidelines for Software Design </i>(Microsoft Press, 1995)<i> </i>comes in. If you want to get the true Windows spirit, you should get to know this book. It’s like a tourist brochure that tells you what Windows looks like and why you should go there. The following sections are a preliminary Visual Basic street map that tells you how to get to some of the more interesting places in Windows.</p>
</font></BODY>
</HTML>
