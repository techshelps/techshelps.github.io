<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sorting List Boxes</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="sortinglistboxes"></a>Sorting List Boxes</h1>
<p>
The ListBox control has been good enough for many years. Why fix it if it isn’t broken? Well, that’s a matter of opinion. The ListBox control isn’t exactly broken, but it hasn’t reached its full potential. Most limitations of list boxes also apply to combo boxes. Here are a few things both of them could do better:
<ul>
<li>
You can’t replace a list box item with a simple assignment. Instead, you must remove the old item and put another in its place.<br><br></li>
<li>
The Sorted property is Boolean. If sorting is good, then it would be even better to sort in ascending or descending order, case sensitive or case insensitive, or in a custom defined sort mode.<br><br></li>
<li>
If a list box is sorted, it should be able to do command completion <BR>so that it would move immediately to the first entry that matches the <BR>characters you’ve typed so far. <br><br></li>
<li>
List boxes look and work a lot like collections. They should work even more like collections with For Each support, key lookups, and collection-like names for methods and properties.</li>
</ul>
<p>
Those are some of the new features of the XListBoxPlus control. XListBoxPlus is another delegation control. You should have delegation mastered by now, based on the XPictureGlass, XEditor, and XDropStack controls. In this case, the control delegates to an internal ListBox control. The internal list box is what the user sees on the screen, but XListBoxPlus is what the user interacts with. All properties, methods, and events are intercepted so that the list box items can be kept in the proper order.</p>
<p>
I discussed sorting and searching in “Sorting, Shuffling, and Searching,” in Chapter 5; now it’s time to put those algorithms to work. The Test Sort program (TSORT.VBP) also appeared in Chapter 5, but at that time, I was interested in sorting arrays. Now I’m interested in the list box part of the program. Check it out in Figure 11-3 on the following page.</p>
<p><img src="f11te03.gif"></p><p>
<b>Figure 11-3.&nbsp;Sorting arrays, collections, and list boxes.</b></p>
</font></BODY>
</HTML>
