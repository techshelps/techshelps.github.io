<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FindAnyWindow</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="findanywindow"></a>FindAnyWindow</h1>
<BR>
Lest you think enumerating things has little practical use, I’m going to respond to a challenge I posed in the first edition of this book. I asked readers to send me a FindAnyWindow function that would allow me to use the same wildcard characters recognized by the Like operator. If I wanted to find the first window with the word <i>Fool </i>in the title, I could search like this:</p>
<pre><code>hWnd = FindAnyWindow(“*Fool*”)</code></pre>
<BR>
Of course, this function would also need to be able to search by class name (we’ll see what a class name is in Chapter 6), and it should have an option to search case-insensitive.</p>
<pre><code>Function FindAnyWindow(Optional Title As String = sNullStr, _<BR>                       Optional Class As String = sNullStr, _<BR>                       Optional CaseSense As Boolean = True) As Long<BR><BR>    ' Pass Title, Class, or both, but not neither<BR>    BugAssert Title &lt;&gt; sEmpty Or Class &lt;&gt; sEmpty<BR>    ' Store parameters in UDT<BR>    Dim find As TFindAny, f As Long<BR>    find.fCase = CaseSense<BR>    find.sClass = IIf(find.fCase, Class, UCase(Class))<BR>    find.sTitle = IIf(find.fCase, Title, UCase(Title))<BR>    ' Ask FindHelper to check each window<BR>    f = EnumChildWindows(GetDesktopWindow, AddressOf FindHelper, find)<BR>    FindAnyWindow = find.hWndTarget<BR><BR>End Function</code></pre>
<BR>
I’m still ticked off that no one answered my challenge in the first edition, so I’m going to make you look up the private FindHelper function yourself. It simply gets the class and title variables from the window handle (using techniques described in Chapter 6) and compares them, using the Like operator, to the stored parameters in the <i>find </i>UDT variable. Your challenge for this version is to write a FindAnyWindows function that stores all matching windows, not just the first one, in a collection.</p>
<BR>
There’s a lot more to say about callback functions, and some of the most important things have to do with receiving window messages. I’ll say some of those things later in “Sending and Receiving Messages” in Chapter 6.</p>
</font></BODY>
</HTML>
