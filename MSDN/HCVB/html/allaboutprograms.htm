<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>All About Programs</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="allaboutprograms"></a>All About Programs</h1>
<p>
Windows provides a wealth of features for doing everything you could imagine to and about windows. No surprise—that’s why they call it Windows. But the features for getting information about the programs that own those windows are not so polished. Getting program information was easy in the 16-bit world using the instance and task handles. It’s a whole new world with 32-bit, and the reason is protection.</p>
<p>
Passing around too much information about other programs is asking for trouble, which is exactly what a lot of 16-bit programs ran into. It might be convenient to examine the internal data and resources of another program, but it’s not safe. Windows 95 and Windows NT are protected-mode operating systems that deliberately limit your program’s access to information about other programs. This is good. But sometimes you really do have an innocent need for information about other processes. Some requests can be granted, but Windows NT and Windows 95 have different ways of doling out whatever information they, in their infinite wisdom, will trust you with.</p>
</font></BODY>
</HTML>
