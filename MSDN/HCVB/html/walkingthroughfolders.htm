<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Walking Through Folders</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="walkingthroughfolders"></a>Walking Through Folders</h1>
<p>
Iterating through files is the old-fashioned way. Modern programs are supposed to iterate through the shell name space using IShellFolder. Unfortunately, IShell&shy;Folder seems specifically designed to test the limits of Hardcore programming. I spent many hours with the inadequate documentation and C-oriented design and finally got the Visual Basic code working a few days before this book shipped.</p>
<p>
I could probably do another chapter this long on IShellFolder, but you’ll have to be satisfied with the Cliff’s Notes version. So let’s start at the beginning—with a question: What is a folder? It’s a container in the shell namespace that &shy;contains some sort of items. The most common kind of folder is a file system directory filled with file items, but any group of objects can be defined as a folder. The Printers folder, for example, contains printers rather than files. The Desktop folder on my system contains My Computer, the Recycle Bin, and My Briefcase. Theoretically, you can define your own folders. Some applications define ZIP or CAB files as folders containing their compressed contents as items. But we’ll have enough trouble walking through the shell namespace without worrying about extending it.</p>
</font></BODY>
</HTML>
