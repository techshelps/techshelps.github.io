<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Free at Last</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="freeatlast"></a>Free at Last</h1>
<p>
The previous edition of this book contained a solemn oath that I would never again write a book that had the <i>S</i> word in the index. If you don’t know what the 16-bit <i>S</i> word is, consider yourself lucky. If you do, just try to find it in the index of this book. For that matter, just try finding anything specific about 16-bit programming (except in a historical context). I can’t tell you how happy I am to live in a world where memory stretches on and on and 64 is just another number.</p>
<p>
Visual Basic has forced this change on us by providing version 5 as a 32-bit-only product. Only time will tell whether the majority of customers will come along for the ride. No doubt there will be some programmers who just can’t abandon Windows 3.1 customers. If you’re one of these, I understand your pain, but I don’t feel it. If you must continue to support 16-bit programs, don’t waste your money on this book. I’m sorry to gloat, but after many years of supporting multiple code bases and trying to hack 32-bit code into 16-bit operating systems, I’m not looking back. This is a 32-bit-only book for a 32-bit language.</p>
</font></BODY>
</HTML>
