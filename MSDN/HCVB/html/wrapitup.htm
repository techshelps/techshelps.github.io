<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Wrap It Up</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="wrapitup"></a>Wrap It Up</h1>
<BR>
Face it. Passing empty string buffers with lengths is un-Basic; the Basic Way is to simply return the string. You can choose to put up with the C style of strings every time you call GetWindowText or a similar function, or you can deal with it once by wrapping the Windows API function in a Basic function. Here’s how to do this for GetWindowText:</p>
<pre><code>Function WindowTextFromWnd(ByVal hWnd As Long) As String<BR>    Dim c As Integer, s As String<BR>    c = GetWindowTextLength(hWnd)<BR>    If c &lt;= 0 Then Exit Function<BR>    s = String$(c, 0)<BR>    c = GetWindowText(hWnd, s, c + 1)<BR>    WindowTextFromWnd = s<BR>End Function</code></pre>
<BR>
The trick in this type of function is to decide the length of the string to allocate. GetWindowTextLength and GetWindowText are the only function pair in the Windows API in which one returns the length expected by the other. Even in this case, it might be more efficient to assume that no window title will be larger than 255 bytes and to allocate that size without checking the actual size. The string will just be thrown away when the function returns, so no harm is done if you allocate too much space. Worst case is that someone will use a window title 300 bytes long and that you’ll truncate it to 255. Serves them right.</p>
<BR>
The Windows API offers many variations on this theme. When the string is informational, the function usually truncates if you don’t provide a large enough buffer. If the string is a filename, the function copies nothing but returns the actual size of the data (a truncated filename would be worse than no name at all). If you get back more than you put in, you need to allocate a bigger string and call again. Sometimes, the Windows API documentation clearly states the maximum size you need to pass in; other times, you can guess. For example, if a function returns a full file specification, you can safely pass the maximum Win32 path size—260 characters.</p>
</font></BODY>
</HTML>
