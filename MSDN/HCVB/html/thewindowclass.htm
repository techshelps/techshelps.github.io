<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Window Class</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="thewindowclass"></a>The Window Class</h1>
<BR>
Imagine for a moment that Windows is written in Visual Basic and that every window you see on the screen is actually a window object of type CWindow. You might create a new window this way:</p>
<pre><code>Dim wndMy As New CWindow<BR>wndMy.Create(“MyClass&quot;, “My Window&quot;, _<BR>             afEnabled Or afVisible Or afOtherStyle, _<BR>             x, y, dx, dy, hwndParent, hMenu, hInst, objOther)</code></pre>
<BR>
After creating the window, you could access its properties as shown here:</p>
<pre><code>With wndMy<BR>    .Caption = “My New Window Title&quot;<BR>    afStyle = .Style<BR>    x = .Point.x<BR>End With</code></pre>
<BR>
You could also call window methods such as these:</p>
<pre><code>With wndMy<BR>    .Move xNew, yNew<BR>    If .Enabled Then .MakeActive<BR>End With       </code></pre>
<BR>
Does this look at all familiar? Doesn’t it look like initializing a form? In fact, this imaginary code is a very simplified view of what Visual Basic asks Windows to do when you ask Visual Basic to load a form. It’s also what Visual Basic does when it loads most controls.</p>
</font></BODY>
</HTML>
