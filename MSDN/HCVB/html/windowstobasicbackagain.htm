<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows to Basic and Back Again</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="windowstobasicbackagain"></a>Windows to Basic and Back Again</h1>
<p>
Whether you program graphics with Visual Basic or with some other language, and whether you use the Windows Way or the Basic Way, you’ll work in one of two different modes. The difference is between drawing with a crayon or a pencil and pasting pictures from a magazine. If you’re like most of us, you can get nicer results by pasting somebody else’s pictures than by creating your own. And you can do it faster.</p>
<p>
Vector graphics involves drawing dots, lines, rectangles, ellipses, and other geometric shapes. I call this model <i>drawing</i>. Basic was good at drawing long before Visual Basic arrived. The Basic Line and Circle statements (now methods) were more flexible than similar routines in many other languages. Technically, you can take drawing as far as you want—even into three dimensions with shading—if your math is better than mine. But some practical limits will have an effect on how much drawing you’ll want to do under Windows, and more limits will affect how much you’ll want to do with Visual Basic.</p>
<p>
Creating raster graphics involves plunking predefined arrays of pixels onto the screen. I call this model <i>painting</i>. Ancient Basics gave a passing nod to the concept with the Get and Put graphics statements, but they got lost in the transition to Visual Basic. Visual Basic painting has always been done with the Picture property. Although painting is central to graphics under Windows, support for it through the Picture property was surprisingly weak until Visual Basic version 4. The PaintPicture method goes a long way toward fixing this limitation, although you might still have to back out to Windows to perform some operations.</p>
<p>
Here’s the quick tour of Windows drawing and painting features, along with the corresponding Visual Basic features.</p>
</font></BODY>
</HTML>
