<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Other Pointers in UDTs</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="otherpointersinudts"></a>Other Pointers in UDTs</h1>
<BR>
Once in a while, you might need to load a pointer to something other than a string into a UDT field. For example, the CHOOSEFONT structure used by the ChooseFont function has a field for a pointer to a LOGFONT structure. This is an obscure problem, and the sample that illustrates it is obsolete, so I’ll be brief here.</p>
<BR>
Notice that the ChooseFont function and the CHOOSEFONT structure have the same name except for case. That works for C, and apparently the designer of this Windows function didn’t recognize that not all languages are case sensitive. You have to work around this by changing the name of the Basic UDT to TCHOOSEFONT. It looks like this:</p>
<pre><code>Private Type TCHOOSEFONT<BR>    lStructSize As Long         ‘ Filled with UDT size<BR>    hwndOwner As Long           ‘ Caller’s window handle<BR>    hDC As Long                 ‘ Printer DC/IC or NULL<BR>    lpLogFont As Long           ‘ Pointer to LOGFONT<BR>    §</code></pre>
<BR>
You need to fill the <i>lpLogFont </i>field with a LOGFONT pointer, but how? Assume that you have the following:</p>
<pre><code>Dim cfnt As TCHOOSEFONT, lfnt As LOGFONT</code></pre>
<BR>
Here’s how to make the assignment:</p>
<pre><code>cfnt.lpLogFont = VarPtr(lfnt)</code></pre>
<BR>
See “Bring Your Hatchet,” page 89, for more information on VarPtr.</p>
<BR>
One other problem. When you pass a UDT variable directly to an API function, Basic knows what you’ve done and will convert any fixed-length strings in the UDT to ANSI. But when you assign a pointer to a LOGFONT variable to the <i>lpLogFont </i>field of a TCHOOSEFONT variable, Basic has no idea what the pointer points to and it will do no conversion on the UDT field. Normally, LOGFONT could used fixed-length strings in a UDT, such as the following field to hold the font name:</p>
<pre><code>lfFaceName As String * 32</code></pre>
<BR>
But in this case you have to define <i>lfFaceName </i>as an array of bytes:</p>
<pre><code>lfFaceName(0 To 31) As Byte</code></pre>
<BR>
Of course, you’d have to do this anyway if you were using a type library. You must handle Unicode conversion yourself, using the BytesToStr and StrToBytes functions described in “Reading and Writing Blobs,” page 277. You can check out the details in COMDLG.BAS.</p>
</font></BODY>
</HTML>
