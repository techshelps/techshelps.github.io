<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WinWatch</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="winwatch"></a>WinWatch</h1>
<p>
The WinWatch program monitors Windows in action. In essence, WinWatch is a teaching tool. It’s not useful for much except borrowing resources, making screen shots, and learning about window titles and classes. Still, you can pick up ideas and information that you can use in more practical programs.</p>
<p>
We’ll first take the quick-and-dirty WinWatch tour and then come back for a more detailed look at the code that makes it work. You might want to load the WinWatch project now.</p>
<p>
<b>NOTE</b>&#09;If you owned the first edition of <i>Hardcore Visual Basic</i>, you might remember that the 16-bit version was empowered and the 32-bit version was, uh, challenged. In this version, 16 bits is like the 13th floor of a high-rise—no such thing. The 32-bit WinWatch is empowered, but empowered somewhat differently than its predecessor.</p>
</font></BODY>
</HTML>
