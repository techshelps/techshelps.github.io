<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Common Dialogs</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="usingcommondialogs"></a>Using Common Dialogs</h1>
<BR>
XEditor uses all the common dialogs except Find and Replace (for reasons I’ll get to later). Let’s look at the ones implemented in the COMDLG module and called by XEditor in EDITOR.CLS:
<ul>
<li>
The FileOpen method calls VBGetOpenFileName, which calls <BR>Windows GetOpenFileName.<BR><BR></li>
<li>
The FileSaveAs method calls VBGetSaveFileName, which calls <BR>Windows GetSaveFileName.<BR><BR></li>
<li>
The FilePrint method calls VBPrintDlg, which calls Windows PrintDlg.<BR><BR></li>
<li>
The FilePageSetup method calls VBPageSetupDlg, which calls <BR>Windows PageSetupDlg.<BR><BR></li>
<li>
The OptionFont method calls VBChooseFont, which calls Windows ChooseFont.<BR><BR></li>
<li>
The OptionColor method calls VBChooseColor, which calls Windows ChooseColor.</li>
</ul>
<BR>
If you’ve seen one common dialog function, you’ve seen them all, so let’s go through the process for the most common and most complicated function—the Open dialog box. The Save As dialog box is almost identical, and the Font and Color dialog boxes are simple by comparison. The Print and Page Setup dialog boxes are a little different, but I won’t get into the details.</p>
<BR>
It all starts with the mnuFileOpen_Click event:</p>
<pre><code>Private Sub mnuFileOpen_Click()<BR>    If edit.DirtyDialog Then edit.FileOpen<BR>    dropFile.Text = edit.filename<BR>    SetTextMode edit.TextMode<BR>End Sub</code></pre>
<BR>
After checking that the current file is saved, call the FileOpen method of the XEditor object. FileOpen in turn calls VBGetOpenFileName:</p>
<pre><code>Function FileOpen() As Boolean<BR>    Dim f As Boolean, sFile As String, fReadOnly As Boolean<BR>    f = VBGetOpenFileName( _<BR>            FileName:=sFile, _<BR>            ReadOnly:=fReadOnly, _<BR>            Filter:=FilterString, _<BR>            Owner:=hWnd)<BR>    If f And sFile &lt;&gt; sEmpty Then<BR>        TextMode = Not IsRTF(sFile)<BR>        LoadFile sFile<BR>        If fReadOnly Then Locked = True<BR>        FileOpen = True<BR>    End If<BR>End Function</code></pre>
<BR>
In any case, pass whatever you get to the LoadFile method.</p>
</font></BODY>
</HTML>
