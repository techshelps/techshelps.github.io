<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Types</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="types"></a>Types</h1>
<p>
A type is a template that describes the kind of data that variables of that type can contain and how variables of that type should behave. Visual Basic supports three kinds: intrinsic types, user-defined types, and classes. Types can be used to define variables and objects that hold data. Types also define the operations that variables or objects can perform. Before we look at how the three kinds of types manage this, let’s define some terms for this discussion. These aren’t necessarily standard terms, but they help me describe my mental model of how types work.
<ul>
<li>
<i>Type</i> is the specification of the data.<br><br></li>
<li>
<i>Instance</i> is a particular location of memory containing data that meets the type specification.<br><br></li>
<li>
<i>Variable</i> is the name of the memory location where an instance is stored.</li>
</ul>
<p>
Now let’s look at how these terms apply to different types.</p>
</font></BODY>
</HTML>
