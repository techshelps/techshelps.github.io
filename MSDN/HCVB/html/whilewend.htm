<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>While/Wend</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="whilewend"></a>While/Wend</h1>
<p>
There’s nothing terribly wrong with the While/Wend looping structure of Basic, other than the ugliness of the pseudoword Wend. Some people on the Visual Basic team suggested changing Wend to the more consistent End While for version 5. This is the wrong idea. Instead, they should have just ripped the whole While/Wend looping structure out of the documentation but kept it in the language for compatibility.</p>
<p>
Why waste your coding energy on a vague feature when Basic offers a clear, concise one? The Do Loop control structure of Basic is a thing of elegance compared with the crude looping of C and Pascal. You can test at the beginning or at the end for true or false conditions in a natural, English-like way. Perpetual loops can be coded clearly instead of requiring an ugly hack such as Pascal’s <i>While (True)</i> or C’s <i>for (;;)</i>. The Exit Loop statement allows you to escape a loop cleanly. I hate to see beautiful code ruined with While/Wend, even though I admit that this is an aesthetic preference with no connection to efficiency or correctness.</p>
</font></BODY>
</HTML>
