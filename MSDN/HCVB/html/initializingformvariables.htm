<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initializing Form Variables</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="initializingformvariables"></a>Initializing Form Variables</h1>
<p>
The second way to initialize variables is to use an initialization event. Most Visual Basic programmers already know this technique because they’ve used the Form_Load event to initialize form properties and variables. You should also familiarize yourself with two other initialization events: Form_Activate and Form_Initialize.</p>
<p>
When a form is loaded, the sequence of events is the following:
<ol>
<li>
A form is a class, and all classes have an Initialize event. Form_Initialize is called (or <i>fired,</i> as control developers describe calling events) as soon as you touch any variable or property of a form. Use this event to ini-tialize variables private to the form. Normally, you should not touch any form or control properties here because doing so fires the next event.<br><br></li>
<li>
Form_Load fires after Form_Initialize as the visual elements of the form are being created and default values are being assigned to properties. Normally, you should avoid doing anything that will draw something on the form because that causes an automatic firing of the next event. It might be tempting to call Show in Form_Load and then do further processing with the visible form, but you’re usually better off doing this in the next event.<br><br></li>
<li>
Form_Activate fires after you have loaded and shown the form. It’s possible to load a form without showing it; in this case, Form_Activate isn’t fired until you call the Show method. Form_Activate is also called when you switch from one modeless form to another, or when you switch between MDI forms (but not when you return focus from <BR>another application). If your application has modeless or MDI forms, don’t do anything in Form_Activate that you want to happen only once. Or use a static variable (such as <i>fNotFirst</i>) to protect against multiple initializations in Form_Activate.</li>
</ol>
<p>
The interactions between the three initialization events can be confusing. Sometimes trial and error is the only way to figure out the right initialization sequence for your application.</p>
</font></BODY>
</HTML>
