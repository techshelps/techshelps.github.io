<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Efficient Code</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="efficientcode"></a>Efficient Code</h1>
<p>
When Visual Basic version 4 was compared with Borland’s Delphi versions 1 or 2, the conversation tended to go like this:</p>
<p>
<i>Delphite:</i> Your pitiful language generates p-code. Our language generates native code. Our programs run circles around yours.</p>
<p>
<i>VBer: </i>Native code won’t make your hard disk faster. Our data access application runs just as fast with p-code as yours does with native code. And we developed it faster. We don’t have to compile our program before running it, and edit-and-continue lets us fix bugs in the environment while the program is <BR>running.</p>
<p>
<i>Delphite: </i>Nonsense. We have the fastest compiler around, and our debugger is easy to use. Besides, we’re serving customers, not ourselves. The bottom line is program speed. Don’t tell me you don’t have bottleneck sections in your code.</p>
<p>
<i>VBer: </i>Well, there are a few places…. But we write C++ DLLs or controls to get around them. Besides, p-code is smaller. Your language creates giant EXE files.</p>
<p>
<i>Delphite: </i>Well, at least we can generate stand-alone EXE files. You have to ship megabytes of support DLLs to make even your tiniest program run. And by the way, if we need a DLL, we can write it in Delphi, not C++.</p>
<p>
<i>VBer: </i>Well, we can create DLLs too.</p>
<p>
<i>Delphite: </i>Yeah, p-code DLLs. Forget it.</p>
<p>
<i>VBer: </i>This is all irrelevant. The bottom line is that our language is Basic. It’s the easiest, most popular language in the world. Pascal is dead.</p>
<p>
<i>Delphite: </i>Basic? Pascal is a much easier language than Basic.</p>
<p>
<i>VBer: </i>Basic!</p>
<p>
<i>Delphite: </i>Pascal!</p>
<p>
<i>Joe Hacker (breaking in): </i>A pox on both of you. I don’t want to choose between native code and p-code. I want both: p-code for the user interface and data access, native code for bottlenecks. I don’t want a fast compiler. I want an interpreter. I don’t want my language to choose whether I get a little EXE with big DLLs or a big EXE. I want to choose. And I don’t care about language wars. I’ll find a way to make any language do what I want. Just wait for Visual Basic version 5. Then we’ll be able to match languages feature for feature.</p>
<p>
Well, Visual Basic version 5 is here. Let’s see how it measures up against Joe Hacker’s wish list.</p>
</font></BODY>
</HTML>
