<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Form Objects</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="formobjects"></a>Form Objects</h1>
<BR>
Another way to create COM objects is with forms. You insert a new form into your project and Visual Basic automatically generates something equivalent to the following:</p>
<pre><code>Dim Form1 As New Form1</code></pre>
<BR>
Like any competent programmer, the first thing you do is go to the Name field of the property page and change the Name property from Form1 to a real name such as FStoryDialog. Visual Basic automatically changes the hidden state&shy;ment to the following:</p>
<pre><code>Dim FStoryDialog As New FStoryDialog</code></pre>
<BR>
If you follow my advice, you won’t use this weirdly named object variable. Instead, you’ll define your own sensible name like this:</p>
<pre><code>Dim dlgStory As FStoryDialog<BR>Set dlgStory = New FStoryDialog<BR>dlgStory.TaleLength = “Tall”<BR>dlgStory.Show vbModal</code></pre>
<BR>
This way, you specifically control form creation rather than having it done behind your back by hidden statements. But what happens to that FStoryDialog object variable created by Visual Basic? Check the last section where we discussed how New in declarations works. The FStoryDialog object variable is set to Nothing, but if you never use it, no form object is ever created for it.</p>
</font></BODY>
</HTML>
