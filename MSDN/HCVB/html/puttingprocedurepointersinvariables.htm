<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Putting Procedure Pointers in Variables</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="puttingprocedurepointersinvariables"></a>Putting Procedure Pointers in Variables</h1>
<BR>
Sometimes you need to put the address of a callback procedure into a variable. No problem. You should be able to say this:</p>
<pre><code>Dim procWindow As Long<BR>procWindow = AddressOf EnumWndProc</code></pre>
<BR>
That might seem obvious to you, but it isn’t obvious to Visual Basic, which recog&shy;nizes AddressOf only in procedure arguments. The code above just gives a syntax error. You have to jump through more hoops to get this one to work. First write the following function:</p>
<pre><code>Function GetProc(proc As Long) As Long<BR>    GetProc = proc<BR>End Function</code></pre>
<BR>
Then call it like this:</p>
<pre><code>procWindow = GetProc(AddressOf EnumWndProc)</code></pre>
<BR>
That’s kind of a roundabout way to do it, but I suppose it’s easier for thousands of users to write a one-line function and put it in UTILITY.BAS than for Visual Basic to make the AddressOf operator work in data assignments. You’ll occasionally have to use the GetProc function in UDTs. For example, the MSGBOX&shy;PARAMS UDT used by MessageBoxIndirect has a MSGBOXCALLBACK field called <i>lpfnMsgBoxCallback</i>. You can fill it like this:</p>
<pre><code>Dim msgpars As MSGBOXPARAMS<BR>msgpars.lpfnMsgBoxCallback = GetProc(AddressOf MyMsgBoxProc)</code></pre>
<BR>
I had to search to find this example. It’s not a problem you’ll run into every day.</p>
</font></BODY>
</HTML>
