<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What This Book Is Not About</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="whatthisbookisnotabout"></a>What This Book Is Not About</h1>
<p>
What is this book <i>not</i> about? Hard to say, exactly. It’s about advanced programming techniques, but some advanced topics aren’t covered. It’s about professional programming, but again, that’s a wide topic whose surface I’ll barely scratch. It’s about taking advantage of new features in Visual Basic version 5, but some of the code would work in version 1.</p>
<p>
Here are some topics that <i>Hardcore Visual Basic, Second Edition </i>doesn’t cover:
<ul>
<li>
Database programming. Programming databases is a very hot topic, and somebody should definitely write a book about it. Some people already have but I’m not one of them. A chapter or two on databases wouldn’t be enough, and besides, who would want to read anything about databases by the only Visual Basic programmer in the world who has never used the Data control?<br><br></li>
<li>
MDI forms and menus. I must confess to an irrational dislike of the <BR>MDI interface. I like my programs to be single document with lots <BR>of buttons and no menus. I don’t defend this prejudice, but neither do I think that MDI and menus are really advanced topics that should be included here. The documentation has them covered.<br><br></li>
<li>
Help authoring and the Setup Toolkit. These are worthy topics, and, <BR>in some cases, advanced topics—but for the most part they are not programming topics and therefore are not in this book.<br><br></li>
<li>
APIs to the max. I’d love to spend a few months writing code for MAPI or WINSOCK or multimedia. Networks and telephony sound interesting, and I wish that I had time for enhanced graphics APIs such as OpenGL or DirectX. New acronymns such as ASP, MTS, IIS, and CSP keep rolling out faster than I can count them. I’m sure these are all great topics—for other books.<br><br></li>
<li>
The Internet. That’s my obligatory mention of the word that has sold <BR>a million books. If you see advertising copy for this book saying “Contains the word Internet,” you can assume it’s referring to this paragraph. Many of the techniques described here can apply to Internet programming, but I have rejected pressure to turn this into an Internet book.<br><br></li>
<li>
Visual Basic, Scripting Edition. Sorry, but that’s a different language. <BR>In any case, VBScript should be easy. The language will sink like a stone (and rightly so) if programming it turns out to be a hardcore task.<br><br></li>
<li>
Project management, interface design, team programming, testing, feedback evaluation, system analysis, caffeine procurement, sponge basketball, and most of the other elements that make up successful software development. This book is about code only. My user interfaces are nothing to write home about. My programs are small and manageable. I wrote and designed them myself without having to coordinate with others. They didn’t go through the exhaustive testing you’d expect in code for end users. In other words, my job as a software developer isn’t quite as real as yours. (My other job as an author is just as real as anybody’s, with its own version of deadline hell.) <BR>Nevertheless, I did have time to explore some programming problems that you might have put off until “real soon now.” Being a hardcore code jockey isn’t all there is to software development, but it is worth something.</li>
</ul>
</font></BODY>
</HTML>
