<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Collection Class</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="thecollectionclass"></a>The Collection Class</h1>
<p>
You’ve probably used Visual Basic’s Collection class, but you might not understand exactly what it is. Let’s take a look behind the curtain.</p>
<p>
To put it simply, the Collection class is a souped-up C++ version of the CList class described in “A List of Link Objects,” page 170. In fact, if you enhance CList to be a doubly linked list and give it a few more features (and perhaps use a hash table to look up string keys), you’ll have a collection class much like the one provided with Visual Basic. You could even add the code required to make it iterate with For Each.</p>
<p>
But before we get to the part about writing your own enumeration classes, let’s review some of the tried and true features of the Collection class.</p>
</font></BODY>
</HTML>
