<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Strings Inside Out</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="stringsinsideout"></a>Strings Inside Out</h1>
<p>
The C string format, known in API jargon as LPSTR, is a sequence of characters terminated by the null character (ASCII value 0), as shown in Figure 2-6 on the facing page. The LPWSTR format is the same except that it uses 16-bit Unicode characters. Notice that the length of the string isn’t stored. C programmers must either keep track of the length themselves or call a function that calculates the length by looping through each character until it finds a terminating null.</p>
<p>
Supposedly, the implementation of Basic strings isn’t documented because it might change in a later version of Basic. In fact, the format of Basic strings is well known and changed little from QuickBasic to Visual Basic 3. These strings were at least partially documented in the VBX custom control documentation, where they went by the name HLSTR (high-level string). Figure 2-6 illustrates the format.</p>
<p>
However, if you ignored Microsoft’s advice and wrote C DLLs that took advantage of your knowledge of Basic strings, Visual Basic version 4 sent you officially up the creek, and version 5 leaves you there. Basic now uses the BSTR format, described in the COM Automation documentation. Figure 2-6 points out the difference. BSTRs are better than HLSTRs for two reasons. First, they have one less pointer. Second, they are already null terminated, so Basic doesn’t have to null-terminate before passing them on to C.</p>
<p><img src="f02te06.gif"></p><p>
<b>Figure 2-6.&nbsp;Four kinds of strings.</b></p>
<p>
As a Basic programmer, you must make an unnatural distinction when passing strings to the Windows API: you have to separate input strings from output strings and handle each case in a completely different fashion. This takes some getting used to.</p>
</font></BODY>
</HTML>
