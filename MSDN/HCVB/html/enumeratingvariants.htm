<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Enumerating Variants</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="enumeratingvariants"></a>Enumerating Variants</h1>
<p>
There’s a lot going on here, and we’re going to explain away part of it as magic. Instead of implementing the IEnumVARIANT interface and doing filthy hacks to make it work, we’ll implement the IVariantWalker interface. This is cheating. We’ll have to implement IEnumVARIANT behind the scenes, but the details are so ugly that we’ll hide them inside a class named CEnumVariant. Our iterator classes will delegate to a private instance of CEnumVariant.</p>
<p>
I won’t say that the resulting collection and iterator classes will be simple. But they will be possible, and I’ll provide a wizard to generate them quickly. To illustrate the concept, I’ll redesign the CDrivesO class. Instead of precalculating all the drives and hiding them in an internal collection, I’ll calculate each drive as it is needed.</p>
</font></BODY>
</HTML>
