<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Disabling display during updates</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="disablingdisplayduringupdates"></a>Disabling display during updates</h1>
<BR>
Programs such as WinWatch that update many list items at one time need some way to quiet down the display so that the list box isn’t redrawn every time an item is added. I know of three ways to do this:
<ul>
<li>
Set <i>Visible = False </i>while adding items, and then restore <i>Visible = True</i> when the additions are complete.<BR><BR></li>
<li>
Call the LockWindowUpdate API function when adding items, and turn off the lock when finished.<BR><BR></li>
<li>
Send the WM_SETREDRAW message with the <i>wParam </i>False when adding items; when you’ve finished, send it again with <i>wParam </i>True.</li>
</ul>
<BR>
You can experiment with these three solutions by setting different compile-time constants in the RefreshModuleList sub and observing the difference. If you’re willing to take my word for it, the code for the winning entry is on the following page.</p>
<pre><code>#If fComponent Then<BR>Sub SetRedraw(ctl As Object, f As Boolean)<BR>#Else<BR>Sub SetRedraw(ctl As Control, f As Boolean)<BR>#End If<BR>    Call SendMessageVal(ctl.hWnd, WM_SETREDRAW, -CLng(f), 0&amp;)<BR>End Sub</code></pre>
<BR>
Notice how the flag parameter is a Boolean, but the call converts it to a Long and negates it. This is because the WM_SETREDRAW message is extremely picky. It wants a C style TRUE (1) or FALSE (0). Other values, such as a Visual Basic style True (<font face="Symbol"><span style="font-family:symbol">&#45;</span></font>1), might not work. The Boolean type converts any weird value you might receive (such as 237) to True or False. The CLng conversion converts the True or False to <font face="Symbol"><span style="font-family:symbol">&#45;</span></font>1 or 0. The negation converts <font face="Symbol"><span style="font-family:symbol">&#45;</span></font>1 or 0 to 1 or 0. Ugly. Windows should accept zero and nonzero like everybody else.</p>
</font></BODY>
</HTML>
