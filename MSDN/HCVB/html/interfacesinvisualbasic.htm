<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interfaces in Visual Basic</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="interfacesinvisualbasic"></a>Interfaces in Visual Basic</h1>
<BR>
To create an interface in Visual Basic, you simply create a class module with empty methods and properties. Here’s an IFilter interface (in IFILTER.CLS) that defines the standard members of a filter. IFilter has Source and Target properties to specify the data to be processed. It has a Translate member to do the work. And, in this case, there’s an EChunkAction Enum type that indicates the results of the Translate method:</p>
<pre><code>Enum EChunkAction<BR>    ecaAbort<BR>    ecaSkip<BR>    ecaTranslate<BR>End Enum<BR><BR>Property Get Source() As String<BR>End Property<BR>Property Let Source(sSourceA As String)<BR>End Property<BR><BR>Property Get Target() As String<BR>End Property<BR>Property Let Target(sTargetA As String)<BR>End Property<BR><BR>Function Translate(sChunkA As String, ByVal iChunkA As Long) As EChunkAction<BR>End Function</code></pre>
<BR>
Nothing to it. Literally. An interface has no code because it doesn’t do anything. You have to create at least one separate class that implements the interface. The interface itself doesn’t care how the members work, or even whether they work.</p>
<BR>
Since IFilter is an interface class, I use the convention of starting the names of such classes with an uppercase <i>I</i>. IFilter is what you would call an abstract base class in many object-oriented languages. Its purpose is to provide a type that your program can bind to at compile time, even though you won’t know the actual object type until run time.</p>
</font></BODY>
</HTML>
