<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Diagrams</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="classdiagrams"></a>Class Diagrams</h1>
<p>
This is a good time to introduce the class notation that I’ll use throughout the rest of this book. Class notations are a dime a dozen in object-oriented programming books, and I don’t claim that my notation has any special advantages. It does address the specific features of Visual Basic classes in a way that can either show off the methods and properties of a specific class or, at a higher level, indicate relationships between classes. Figure 3-3 shows the diagram for the CDrive class.</p>
<p><img src="f03te03.gif"></p><P>
<b>Figure 3-3.&nbsp;The CDrive class.</b></p>
<p>
Types are shown for methods and properties in this example, but they might be omitted in later examples. If it’s useful to show private members of a class, they’ll go inside the object box. (This is seldom necessary, however; normally, the public interface is all that matters.)</p>
</font></BODY>
</HTML>
