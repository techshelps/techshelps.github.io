<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using String Resources</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="usingstringresources"></a>Using String Resources</h1>
<BR>
It’s unlikely that you’ll need to use string resources from a DLL or a program that you didn’t write, but it was so easy in 16-bit programs that WinWatch implemented it. Just pass the ID number of the string to the LoadString API function, along with a string buffer and a maximum length. The code looked something like this:</p>
<pre><code>Dim c As Integer, s As String, id As Long<BR>c = 256<BR>s = Space$(c)<BR>c = LoadString(hMod, Val(Mid$(sString, 2)), s, c)<BR>If c &lt;&gt; 0 Then pbResource.Print WordWrap(Left$(s, c), 25)</code></pre>
<BR>
Unfortunately, that didn’t work in 32-bit, and for a long time I couldn’t figure out why. Well, it turns out that many 32-bit resource strings are Unicode strings. I’m not sure how C programs are supposed to load Unicode string resources. It didn’t seem like something a Visual Basic programmer would want to spend time researching, so I just dumped them in hex format. It doesn’t do much good, but neither does it do any harm. The code for ShowString is almost exactly like the ShowData code we saw earlier.</p>
</font></BODY>
</HTML>
