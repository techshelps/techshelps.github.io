<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What Makes a Collection Walk?</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="whatmakescollectionwalk"></a>What Makes a Collection Walk?</h1>
<p>
The For Each syntax provides a natural way to iterate through a collection. You don’t have to worry about how the collection is organized or what it does. For each trip through the loop, you just go to the next item. The designer of the collection determines what that means.</p>
<p>
There’s nothing sacred about the way Visual Basic’s Collection class works. If you want to design your collection to iterate backward or to generate a random number for every iteration, that’s up to you. The problem is, Visual Basic doesn’t provide an easy way to make your collection work with For Each. But if you understand how collection iterations work, you can do the impossible (or at least the impractical). You just have to understand a few facts about the IEnumVARIANT interface.</p>
<p>
The Component Object Model defines IEnumVARIANT as the standard way to iterate through data structures. Any collection class that wants to allow clients to walk through variant data should provide an iterator that implements IEnum&shy;VARIANT. Any client program that wants to iterate through variant data classes that follow the standard can do so by calling the IEnumVARIANT &shy;methods.</p>
<p>
That’s how Visual Basic’s For Each syntax works. When you write a For Each code block, Visual Basic calls the Next method of IEnumVARIANT for each &shy;iteration. The Collection class works with For Each because it provides an iterator class that implements the methods of IEnumVARIANT.</p>
<p>
So how do you implement IEnumVARIANT? With great difficulty.</p>
</font></BODY>
</HTML>
