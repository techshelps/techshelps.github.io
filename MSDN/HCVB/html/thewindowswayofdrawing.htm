<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Windows Way of Drawing</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1><a name="thewindowswayofdrawing"></a>The Windows Way of Drawing</h1>
<p>
When you drop the Visual Basic safety net and start drawing with the Windows API, you’ll find yourself dealing with issues that didn’t concern you before. Scaling becomes a problem. You must figure out what Visual Basic properties mean to Windows and vice versa. Despite the problems, here are several good reasons why you might want to draw the hard way:
<ul>
<li>
Some operations you might want to perform are not supported in <BR>Visual Basic—drawing polygons, managing regions, and filling, for <BR>example.<br><br></li>
<li>
Some surfaces on which you might want to draw don’t support Visual Basic drawing methods—buttons, menus, list boxes, metafiles, and mem&shy;ory device contexts, for example.<br><br></li>
<li>
Windows API functions are often faster than comparable Visual Basic operations. This is because Visual Basic is doing some extra work behind the scenes. If you’re willing to do the necessary work yourself, you might get a performance gain. Then again you might not. You have to test the performance on a case-by-case basis.<br><br></li>
<li>
You can create generic functions that do some drawing operation on any surface. Instead of providing a canvas parameter (which is actually a late-bound Object), you can provide an hDC parameter and use API functions on it.</li>
</ul>
<p>
Let’s look at some examples.</p>
</font></BODY>
</HTML>
