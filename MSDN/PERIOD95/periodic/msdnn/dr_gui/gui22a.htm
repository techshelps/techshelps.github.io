<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chroma, Chroma, Chroma Chameleon: Altering DIB's</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" size=2 color="#000000">

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<font size="5" face="verdana,arial,helvetica">Chroma, Chroma, Chroma
Chameleon: Altering DIB's</font>

<h2><font size="2" face="verdana,arial,helvetica">Dear Dr. GUI:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">What is the method of
choice for changing the contrast and/or brightness of a DIB? I
hope you're not gonna tell me I have to iterate through each
pixel and add/subtract from the colour value
&quot;manually&quot;! I could probably do that, but I don't know
how to do gamma correction and all that stuff. So I'm hoping
you'll say something like &quot;Oh...use the <b>BrightBlt</b>
function.&quot; </font></p>

<p><font size="2" face="verdana,arial,helvetica">Steve Yolleck<br>
Toronto, Ontario, Canada </font></p>

<h2><font size="2" face="verdana,arial,helvetica">Dr. GUI replies:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">I am a master of music
trivia. This song was sung by a young man who looked remarkably
like an older woman wearing heavy makeup. The makeup was very bad
looking but extremely colorful. Which brings me to my point (I
think). </font></p>

<p><font size="2" face="verdana,arial,helvetica">There are two approaches
to your problem. Assuming that you are targeting an
8-bit-per-pixel (bpp) 256-color display (there is a strong
argument that this should be your target display), you can either
animate the palette or alter the existing palette entries. </font></p>

<p><font size="2" face="verdana,arial,helvetica">I once wrote a fax
application that used palletized color on a 256-color display.
The images were all black and white, so I constructed 128 gray
scales in the palette. To alter the contrast and brightness I
animated the palette, changing the slope for contrast or changing
the overall level for brightness. </font></p>

<p><font size="2" face="verdana,arial,helvetica">In my opinion, the best
approach is to alter the colors of the bitmap and then redraw it.
Palette animation is too dependent on the presence of a palette.
In the case of 8-bpp bitmaps, change the palette entries to
reflect the desired brightness/contrast and then redraw the DIB
(device-independent bitmap). On any other display you need to
alter the image by walking through the DIB and altering each
pixel (yeech!). </font></p>
</font></body>
</html>
