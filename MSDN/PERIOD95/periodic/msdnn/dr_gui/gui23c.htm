<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Save My Job! Resizing Bitmaps to a Client Window</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" size=2 color="#000000">

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<font size="5" face="verdana,arial,helvetica">Save My Job! Resizing
Bitmaps to a Client Window</font>

<h2><font size="2" face="verdana,arial,helvetica">Dear Dr. GUI:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">Help me, Dear Doctor!
You are my last hope. My boss has been hounding me to get this
done as soon as possible or face imminent dismissal from my
project! I am trying to simply fit a bitmap to the client area of
a window without too much distortion. Seems pretty trivial, but I
just can't figure it out. Everything I have tried looks really
bad. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Wendy Reynolds<br>
Gig Harbor, Washington </font></p>

<h2><font size="2" face="verdana,arial,helvetica">Dr. GUI replies:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">&lt;Music&gt; Here I am
to save the day...Dr. GUI's on the way &lt;end music&gt;. Don't
fear, Wendy, I have exactly what you need. The key to the
solution is to maintain the ratio between the original dimensions
of the bitmap and the subsequent dimensions of the stretched
bitmap, that is, <i>x</i>/<i>y</i> = <i>xnew</i>/<i>ynew</i>. The
following code calculates the new <i>x</i> and <i>y</i>
dimensions of the bitmap. The <i>xDest</i> and <i>yDest</i>
parameters are the extents of the destination rectangle. The <i>xBmp</i>
and <i>yBmp</i> parameters are the extents of the original
bitmap. The new dimensions are written to the <i>xNew</i> and <i>yNew</i>
parameters (pointers to integers). </font></p>

<pre><code>BOOL WINAPI FitToScreen( int xDest, int yDest, int xBmp, int yBmp, int * xNew, 
   int * yNew )
{

   int xDiff, yDiff, xAbs, yAbs, xAdj, yAdj, xWidth, yWidth;

   xDiff = xDest - xBmp;
   yDiff = yDest - yBmp;
   // Negative values for xDiff and yDiff imply that the bitmap
   // is larger than the dimensions of the destination retangle.

   xAbs = abs ( xDiff );
   yAbs = abs ( yDiff );

   if ( xAbs &gt; yAbs )
   {
      xAdj = MulDiv ( xBmp, yDiff, yBmp );
      xWidth = xBmp + xAdj;
      yWidth = yBmp + yDiff;
   }
   else if ( xAbs &lt; yAbs )
   {
      yAdj = MulDiv ( yBmp, xDiff, xBmp );
      xWidth = xBmp + xDiff;
      yWidth = yBmp + yAdj;
   }
   else   // they are the same
   {
      xWidth = xBmp + xDiff;
      yWidth = yBmp + yDiff;
   }
   
   * xNew = xWidth;
   * yNew = yWidth;

   return ( TRUE );
}</code></pre>
</font></body>
</html>
