<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Montana Boy Needs Help: Enabling Menu Items On-The-Fly</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" size=2 color="#000000">

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<font size="5" face="verdana,arial,helvetica">Montana Boy Needs Help:
Enabling Menu Items On-The-Fly</font>

<h2><font size="2" face="verdana,arial,helvetica">Dear Dr. GUI:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">I'm required to add menu
items to a menu on the fly in an MFC-based application. I added
the items to the menu using <b>AppendMenu</b> and set them as
MF_ENABLED, but when I run the application the new menu items are
disabled. What can I do? </font></p>

<p><font size="2" face="verdana,arial,helvetica">Christopher Reed<br>
Billings, Montana </font></p>

<h2><font size="2" face="verdana,arial,helvetica">Dr. GUI replies:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">Well, Christopher, I am
partial to Montanans, having been born there. My mother lived in
a sod house in Miles City. My father drove taxi in French Town.
Odd, you could walk from one end of French Town to the other in
less than three minutes! I was born in Great Falls. I was potty
trained by the time I was nine months old. My first word was
Grizzly. I panned for gold when I was three. I was a smoke jumper
for the forest service and was instrumental in the creation of
Glacier Park. Then I started grade school. But that is another
story! </font></p>

<p><font size="2" face="verdana,arial,helvetica">The reason these items
are being disabled is that in the Microsoft Foundation Class
Library (MFC) <b>OnInitMenuPopup</b> function, items that do not
have a message handler function are disabled. To fix the problem,
simply overwrite <b>OnInitMenuPopup</b> in your <b>CMainFrame</b>
class and return when <i>nIndex</i> is equal to the menu to which
you added items. The following example demonstrates this. </font></p>

<pre><code>void CMainFrame::OnInitMenuPopup(CMenu* pPopupMenu, UINT nIndex, BOOL bSysMenu)
{
   if (nIndex == CONTENTMENU)   // contents menu
   {
      return;
   }
   CFrameWnd::OnInitMenuPopup(pPopupMenu, nIndex, bSysMenu);

}</code></pre>

<p><font size="2" face="verdana,arial,helvetica">One caveat: If you are
using <b>OnUpdateCmdUI</b> to set the text of a menu item, check
a menu item, or enable/disable a menu item, you must add special
handling for the menus that you are not allowing MFC to handle.
In the following example, the application required a bullet on
the currently selected menu item, including the added ones. </font></p>

<pre><code>void CMainFrame::OnInitMenuPopup(CMenu* pPopupMenu, UINT nIndex, BOOL bSysMenu)
{
   if (nIndex == CONTENTMENU)   // contents menu
   {
      UINT nCurrent;

      // First get a pointer to the menu of interest.
      CMenu *pContentMenu;
      pContentMenu = pPopupMenu-&gt;GetSubMenu(CONTENTMENU);

      // Now we have to build a CCmdUI class for the menu items.
      CCmdUI state;

      // Set the m_pMenu member variable to the main menu.
      state.m_pMenu = pPopupMenu;

      // Set the m_pParentMenu to the submenu. Sounds funny but trust me.
      state.m_pParentMenu = pContentMenu;

      // The menu ID of the menu item that you want a bullet on.
      state.m_nID = pView-&gt;m_lContent;

      // Must be NULL
      state.m_pSubMenu = NULL;
      state.m_pOther = NULL;

      // Set the m_nIndexMax to the number of menu items in the main menu.
      state.m_nIndexMax = pPopupMenu-&gt;GetMenuItemCount();

       // This switch figures out which menu index should be marked.
      switch (state.m_nID)
      {
         // Is it one of the four stock menu items...
         case IDM_PRODUCTS:
            nCurrent = 0;
            break;
         case IDM_CD:
            nCurrent = 1;
            break;
         case IDM_NEW:
            nCurrent = 2;
            break;
         case IDM_UPDATED:
            nCurrent = 3;
            break;
         // ...or an appended menu item.
         default:
            nCurrent = state.m_nID - IDM_DEFINESUBSET - SUBSETMENUOFFSET + 
                       NUM_STOCK_MENUITEMS;
            break;
      }
      // Check the current item and uncheck the rest since we only want one 
      // current.
       for (UINT i = 0; i &lt; state.m_nIndexMax; i++)
      {
         // Set the CCmdUI member variable m_nIndex so that SetRadio knows which
         // menu item to work on.
         state.m_nIndex = i;
         if (i == nCurrent)
            state.SetRadio(TRUE);
         else
            state.SetRadio(FALSE);
      }
      return;
   }
   CFrameWnd::OnInitMenuPopup(pPopupMenu, nIndex, bSysMenu);
}</code></pre>

<p><font size="2" face="verdana,arial,helvetica">Don't forget to remove
any <b>OnUpdateCmdUI</b> functions that you have created for this
menu, because they won't get called. </font></p>
</font></body>
</html>
