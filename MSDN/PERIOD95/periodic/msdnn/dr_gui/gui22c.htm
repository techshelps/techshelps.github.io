<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Help File to Product Documentation</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" size=2 color="#000000">

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<font size="5" face="verdana,arial,helvetica">Help File to Product
Documentation</font>

<h2><font size="2" face="verdana,arial,helvetica">Dear Dr. GUI:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">I have created an RTF
file for my online Help. I don't have any problems creating the
Help file. Now I want to create a manual, but I don't want to
retype everything. I have converted the file from .RTF to .DOC,
but all the formats (#K and double underline) are kept. The
printout doesn't look good, as you can imagine. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Can anyone tell me the
best way to do what I want to do? It is too much work stepping
through the document and eliminating the stuff I don't want to be
displayed. It is enough replacing all references to the bitmap I
have used. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Sonja Al-Kass<br>
Germany </font></p>

<h2><font size="2" face="verdana,arial,helvetica">Dr. GUI replies:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">Piece o' cake, Sonja!
This conversion is simple when you become familiar with
WordBasic. The code below should be used as a macro in Word for
Windows 6.0 and then executed on the desired document. The macro
looks for any text that has the &quot;Footnote Reference&quot;
style. Whenever this text is found, it is deleted from the
document using the <b>EditClear</b> command. It then looks for
any double-underlined and underlined text. These characteristics
are removed using the <b>EditReplaceFont</b> command. </font></p>

<pre><code>Sub MAIN
   StartOfDocument
   EditFindClearFormatting
   EditFindStyle .Style = &quot;Footnote Reference&quot;
   EditFind .Find = &quot;&quot;, .Direction = 0, .MatchCase = 0, .WholeWord = 0, 
           .PatternMatch = 0, .SoundsLike = 0, .Format = 1, .Wrap = 0
   'Remove all Footnote References.
   'WARNING: This may be a different name in German WinWord.
   While EditFindFound()
    If Len(Selection$()) Then
       EditClear
    EndIf
    EditFind .Find = &quot;&quot;, .Direction = 0, .MatchCase = 0, .WholeWord = 0, 
             .PatternMatch = 0, .SoundsLike = 0, .Format = 1, .Wrap = 0
   Wend
   'Remove all Double Underline.
   EditFindClearFormatting
   EditReplaceClearFormatting
   EditFindStyle .Style = &quot;&quot;

   EditFindFont .Points = &quot;&quot;, .Underline = 3, .Color = - 1, 
      .Strikethrough = - 1, .Superscript = - 1, .Subscript = - 1, 
      .Hidden = - 1, .SmallCaps = - 1, .AllCaps = - 1, .Spacing = &quot;&quot;, 
      .Position = &quot;&quot;, .Kerning = - 1, .KerningMin = &quot;&quot;, .Tab = &quot;0&quot;, 
      .Font = &quot;(normal text)&quot;, .Bold = - 1, .Italic = - 1, .Outline = - 1, 
      .Shadow = - 1

   EditReplaceFont .Points = &quot;&quot;, .Underline = 0, .Color = - 1, 
      .Strikethrough = - 1, .Superscript = - 1, .Subscript = - 1, 
      .Hidden = - 1, .SmallCaps = - 1, .AllCaps = - 1, .Spacing = &quot;&quot;, 
      .Position = &quot;&quot;, .Kerning = - 1, .KerningMin = &quot;&quot;, .Tab = &quot;0&quot;, 
      .Font = &quot;(normal text)&quot;, .Bold = - 1, .Italic = - 1, .Outline = - 1, 
      .Shadow = - 1

   EditReplace .Find = &quot;&quot;, .Replace = &quot;&quot;, .Direction = 0, .MatchCase = 0, 
      .WholeWord = 0, .PatternMatch = 0, .SoundsLike = 0, .ReplaceAll, 
      .Format = 1, .Wrap = 2

   'Remove all Single Underline.
   EditFindFont .Points = &quot;&quot;, .Underline = 1, .Color = - 1, 
      .Strikethrough = - 1, .Superscript = - 1, .Subscript = - 1, .Hidden = - 1, 
      .SmallCaps = - 1, .AllCaps = - 1, .Spacing = &quot;&quot;, .Position = &quot;&quot;, 
      .Kerning = - 1, .KerningMin = &quot;&quot;, .Tab = &quot;0&quot;, .Font = &quot;(normal text)&quot;, 
      .Bold = - 1, .Italic = - 1, .Outline = - 1, .Shadow = - 1

   EditReplaceFont .Points = &quot;&quot;, .Underline = 0, .Color = - 1, 
      .Strikethrough = - 1, .Superscript = - 1, .Subscript = - 1, .Hidden = - 1, 
      .SmallCaps = - 1, .AllCaps = - 1, .Spacing = &quot;&quot;, .Position = &quot;&quot;, 
      .Kerning = - 1, .KerningMin = &quot;&quot;, .Tab = &quot;0&quot;, .Font = &quot;(normal text)&quot;, 
      .Bold = - 1, .Italic = - 1, .Outline = - 1, .Shadow = - 1

   EditReplace .Find = &quot;&quot;, .Replace = &quot;&quot;, .Direction = 0, .MatchCase = 0, 
      .WholeWord = 0, .PatternMatch = 0, .SoundsLike = 0, .ReplaceAll, 
      .Format = 1, .Wrap = 2
End Sub</code></pre>

<p><font size="2" face="verdana,arial,helvetica">The process could be
further extended to replace the &quot;{<i>bm? filename</i>}&quot;
reference with the actual pictures. This is done in the following
macro. </font></p>

<pre><code>Sub MAIN
   D$ = InputBox$(&quot;Enter the directory where the images are located&quot;, &quot;Replace 
        {bm...}&quot;, &quot;C:\VB3\HC\&quot;)
   If Len(D$) Then
      If Right$(D$, 1) &lt;&gt; &quot;\&quot; Then D$ = D$ + &quot;\&quot;
   Endif
   StartOfDocument
   EditFind .Find = &quot;{bm&quot;, .Direction = 0, .MatchCase = 0, .WholeWord = 0, 
                  .PatternMatch = 0, .SoundsLike = 0, .Format = 1, .Wrap = 0
   While EditFindFound()
      While Right$(Selection$(), 1) &lt;&gt; &quot;}&quot;
         CharRight 1, 1
      Wend
      bmp$ = LTrim$(RTrim$(LCase$(Mid$(Selection$(), 6, 
         Len(Selection$()) - 6))))
      If Right$(bmp$, 3) = &quot;shg&quot; Then
         bmp$ = Left$(bmp$, Len(Bmp$) - 3) + &quot;bmp&quot;
      End If
      On Error Resume Next   'In case file not found or invalid (i.e. shg).
      InsertFile$ = D$ + bmp$
      InsertPicture .Name = InsertFile$, .LinkToFile = &quot;0&quot;
      On Error Goto 0
      CharRight 1
      EditFind .Find = &quot;{bm&quot;, .Direction = 0, .MatchCase = 0, .WholeWord = 0, 
                    .PatternMatch = 0, .SoundsLike = 0, .Format = 1, .Wrap = 0
   Wend
End Sub</code></pre>
</font></body>
</html>
