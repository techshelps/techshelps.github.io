<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Visual Basic and Child Windows</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" size=2 color="#000000">

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<font size="5" face="verdana,arial,helvetica">Visual Basic and Child
Windows</font>

<h2><font size="2" face="verdana,arial,helvetica">Dear Dr. GUI:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">I use MDI in Visual
Basic 3.0. In the child window, I do not like the user to close
any child window, so I set the property
&quot;ControlBox=false&quot; in the child window. It works fine
if the child window is not maximized. But, after the child window
is maximized, the Restore button is gone. There is no way to
restore the child window to normal size. Only cascading or tiling
the window enables the Restore button. Is there any way to solve
the problem? </font></p>

<p><font size="2" face="verdana,arial,helvetica">K-Yang<br>
khuang@scudc.scu.edu </font></p>

<h2><font size="2" face="verdana,arial,helvetica">Dr. GUI replies:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">Luckily I didn't take an
oath to do this job. So, I can offer you two solutions, one of
which is very slippery. In the first solution (here comes the
slime), you can turn the <b>MaxButton</b> property to FALSE,
which prevents the maximization of the window in the first place!
No maximization&#151;no problem (groan, groan!). The second
solution gets more to the essence of the problem. Set (and keep)
the child window's <b>ControlBox</b> property to TRUE, and bypass
the child window's unload process by modifying the child window's
<b>Form_Unload</b> function as follows: </font></p>

<pre><code>Sub Form_Unload (Cancel As Integer)
  If Not gEnd Then Cancel = True: WindowState = 1
End Sub</code></pre>

<p><font size="2" face="verdana,arial,helvetica">This has the effect of
keeping the window around, so when you maximize it, there is a
window to restore. It has not been unloaded, and the Restore
button is enabled. The other benefit is that you may minimize the
window, and suddenly your application begins to look like a
multiple-document interface (MDI) application (duh, probably
because it is!). </font></p>
</font></body>
</html>
