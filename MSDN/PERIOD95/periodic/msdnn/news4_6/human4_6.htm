<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="doccomm" content="generated by an Aldus application">
<meta name="Template"
content="C:\MSOFFICE\WINWORD\TEMPLATE\msin60b.dot">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Human Factor: Sizing Things Up</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" color="#000000" size=2>

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<blockquote>
    <p><font size="5"><b>The Human Factor: Sizing Things Up</b></font></p>
    <p><font size="2">Tandy Trower</font></p>
    <p><font size="2">November 1, 1995</font></p>
    <p><font size="2">I received a recent inquiry asking for some
    clarification on the recommendations in <i>The Windows
    Interface Guidelines for Software Design</i> regarding the
    sizes and spacing for controls and how to convert these
    measurements into pixels. The guide uses the term
    &quot;dialog base units&quot; as the measure. It also
    suggests using the <b>GetDialogBaseUnits</b> function to
    determine the current system settings for this measure.</font></p>
    <p><font size="3"><b>Dialog base units or dialog units?</b></font></p>
    <p><font size="2">As it turns out, this information is not
    quite correct. First, although the <i>number</i> of units
    called out in the guide is correct, the <i>unit</i> of
    measure is incorrect. The recommended measurements should
    have been given as &quot;dialog units,&quot; not &quot;dialog
    base units.&quot; Vertical and horizontal dialog base units
    are equal to the character height and average character width
    in pixels, respectively. Each vertical <i>dialog base</i>
    unit is actually eight vertical <i>dialog</i> units. A
    horizontal dialog base unit equals four horizontal dialog
    units.</font></p>
    <p><font size="2">For example, buttons, text boxes, and
    drop-down controls should be 14 dialog units high with a
    minimum of 4 dialog units between them and 7 dialog units of
    space from the edge of the window, as shown in the figure.</font></p>
    <p><font size="2"><img src="Image380.gif" width="719"
    height="539"></font></p>
    <p><font size="2"><b>Recommended layout and spacing for
    controls</b></font></p>
    <p><font size="2">The second problem is that <b>GetDialogBaseUnits</b>
    will get you the metrics of the font named &quot;System&quot;
    rather than the font typically used in a Windows 95 dialog
    box. Instead, for Windows 95, you'll want to use <b>SystemParametersInfo</b>
    to get the <b>NONCLIENTMETRICS</b> structure to determine the
    normal font used for dialog text (<b>IfMessageFont</b>) and
    then use <b>GetTextMetrics</b> on that to get the font
    information.</font></p>
    <p><font size="3"><b>Converting to pixels</b></font></p>
    <p><font size="2">Now that you have the correct font metrics,
    you can convert from dialog units to pixels using the
    calculation defined in the <b>GetDialogBaseUnits</b> function
    description (where X is width and Y is height):</font></p>
    <p><font size="2">X pixels = (X dialog units * X dialog base
    units) / 4 </font></p>
    <p><font size="2">Y pixels = (Y dialog units * Y dialog base
    units) / 8</font></p>
    <p><font size="2">For example, the recommended height of
    command buttons is 14 dialog units. The vertical dialog base
    unit, based upon the height of the default MS Sans Serif
    font, is 13. </font></p>
    <p><font size="2">So, Y pixels = (14 * 13) / 8 </font></p>
    <p><font size="2">Rounding to the nearest whole number means
    that most command buttons should end up being 23 pixels in
    height. (Note that the recommended heights for toolbar
    buttons differ slightly at 22 pixels for 16 x 16 pixel images
    and 30 pixels for 24 x 24 pixel images.)</font></p>
    <p><font size="2">If you want to know the dialog unit
    equivalent for something you've measured in pixels, use the
    following formulas:</font></p>
    <p><font size="2">X dialog units = (X pixels * 4) / X dialog
    base units</font></p>
    <p><font size="2">Y dialog units = (Y pixels * 8) / Y dialog
    base units</font></p>
    <p><font size="3"><b>Recommended width</b></font></p>
    <p><font size="2">Another question is whether there is a
    recommendation for the width of controls. The guide doesn't
    include any information here, except for toolbar buttons (24
    pixels and 32 pixels). The reason is that the width of
    controls such as text boxes, command buttons, and drop-down
    lists is mainly dependent on the content of the controls and
    their orientation to other controls. Generally, a command
    button should be wide enough to show its full label. (If you
    can't, use a ToolTip that provides the full label.) In
    Windows 95, the minimum button width used is 50 dialog units.
    </font></p>
    <p><font size="2">However, you should also consider the
    context of the buttons. For example, if you stack buttons in
    the upper right corner, it is usually best to make all the
    buttons the same width, provided that the lengths of the
    labels are all about the same. If the label for one of the
    buttons is substantially longer than the rest, you can make
    that button longer, but give the others the same shorter
    length. In other words, for buttons that appear together as a
    set, keep to a uniform width rather than depending solely on
    the label length.</font></p>
    <p><font size="2">Similar recommendations can be applied to
    text boxes or drop-down list controls. The control should be
    wide enough to display a typical entry, but also consider the
    alignment and relationship it has with other controls. </font></p>
    <p><font size="2"><i>Tandy Trower is the director of UI
    design at Microsoft. After the Windows 95 event, he has been
    hoping to be invited to write guidelines for &quot;The
    Tonight Show,&quot; but Jay doesn't return his calls.</i></font></p>
</blockquote>
</font></body>
</html>
