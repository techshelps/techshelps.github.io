<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="doccomm" content="generated by an Aldus application">
<meta name="Template"
content="C:\MSOFFICE\WINWORD\TEMPLATE\msin60b.dot">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TrueType Open Extends Support for International Typography</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" color="#000000" size=2>

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<blockquote>
    <p><font size="5"><b>TrueType Open Extends Support for
    International Typography</b></font></p>
    <p><font size="3"><b>New features include glyph substitution
    and positioning</b></font></p>
    <p><font size="2">Nadine Kano</font></p>
    <p><font size="2">November 1, 1995</font></p>
    <p><font size="2">TrueType Open extends the TrueType font
    file format to provide advanced support for international
    typography. TrueType Open is particularly useful for
    non-Latin languages such as Arabic (which requires glyph
    shaping) or Japanese and Chinese (which require horizontal
    and vertical glyph alternates). The <i>TrueType Open Font
    Specification</i> (version 1.0) describes the TrueType Open
    file format in detail and is included in the October 1995
    edition of the Microsoft Development Library. Font providers
    who intend to support non-Latin or multilingual fonts should
    study this spec, and application developers can also benefit
    from it. Applications that understand the file format can
    retrieve information necessary for handling complex glyph
    substitution and displaying multilingual text. In the future,
    Microsoft will provide a TrueType Open API that will assist
    text-processing applications in implementing the features of
    TrueType Open fonts. For now, developers can write their own
    code to handle TrueType Open fonts.</font></p>
    <p><font size="3"><b>The evolution of TrueType in Windows</b></font></p>
    <p><font size="2">TrueType fonts were introduced to the
    Microsoft Windows environment with Windows version 3.1.
    Previously, Windows used only raster and vector fonts, which
    often resulted in poorly spaced text and glyphs with
    unattractive, jagged edges. TrueType fonts define a
    &quot;scalable outline&quot; for each glyph and
    &quot;hints&quot; that improve font appearance at any
    resolution. Therefore, TrueType fonts look better and are
    more legible than raster or vector fonts when displayed or
    printed in any point size. Also, because Windows generates
    bitmaps based on a single outline for each glyph, TrueType
    fonts are easier to create and to manipulate. Font vendors
    don't have to predefine an entire set of bitmaps to represent
    a font at each potential point size.</font></p>
    <p><font size="3"><b>TrueType and Windows 95</b></font></p>
    <p><font size="2">Windows 95 introduced improvements to the
    TrueType font technology. For example, the 32-bit rasterizer
    in Windows 95 provides faster and better hinting and
    rendering. It also supports &quot;font smoothing&quot;&#151;a
    method of smoothing bitmap edges using shades of gray. Some
    TrueType 95 features are particularly useful for languages
    such as Japanese. For example, the TrueType format now
    describes metrics that assist with vertical text layout.
    TrueType fonts also support the addition of embedded bitmaps.
    Japanese Windows 95, for example, uses embedded bitmaps to
    render Kanji characters in very small sizes. For a
    comprehensive description of TrueType and how fonts are
    implemented in Windows, see &quot;TrueType and Microsoft
    Windows Version 3.1&quot; and &quot;TrueType in Windows
    95&quot; in the Microsoft Development Library. </font></p>
    <p><font size="2">TrueType fonts in Windows 3.1 supported
    only five &quot;charset&quot; tags for fonts: ANSI_CHARSET,
    OEM_CHARSET, SYMBOL_CHARSET, SHIFTJIS_CHARSET, and
    DEFAULT_CHARSET. The TrueType font format now describes the
    code pages (out of a possible 36) and the Unicode subranges
    (out of about 70) that a particular font supports. The
    TrueType spec lists these code pages and Unicode subranges.</font></p>
    <p><font size="2">Although Windows 95 and Windows NT are
    based on different character encodings (see &quot;Yes,
    Virginia, Windows 95 Does Do Unicode&quot; by Nadine Kano, <i>Developer
    Network News,</i> July/August 1995), the TrueType font
    format, which is supported on both operating systems, is the
    same worldwide. In fact, most TrueType fonts in the Windows
    environment already use the Unicode encoding internally.
    Thus, TrueType is ready to move with Microsoft operating
    systems toward full Unicode support.</font></p>
    <p><font size="3"><b>What TrueType Open can do</b></font></p>
    <p><font size="2">TrueType Open builds on the Unicode
    character encoding standard to support additional operations
    for proper rendering and visual arrangement of those
    characters. TrueType Open supports the following features:</font></p>
    <p><font size="2"><b>Glyph substitution.</b> Previously,
    fonts were limited to a 1:1 mapping between a code point in a
    code page and a glyph in a font table. TrueType Open allows a
    richer mapping between character codes and glyphs. For
    example, a single character in Arabic can have up to four
    different shapes, depending on whether it stands alone or
    appears at the beginning, middle, or end of a word. Glyph
    substitution can also be used to substitute vertical glyphs
    for horizontal glyphs, to substitute ligatures for multiple
    glyphs (&#156; for oe), and to support glyph variants such as
    swash capitals. </font></p>
    <p><font size="2"><b>Glyph positioning.</b> TrueType Open
    uses three types of glyph positioning information: <i>Basic
    glyph positioning</i> information is used to position
    individual glyphs such as superscripts, accent marks, and
    glyphs in kerning pairs; <i>baseline</i> information is used
    to adjust the baselines of different scripts on the same line
    of text; and <i>justification</i> information covers
    positioning information needed for text justification (for
    example, determining how much interword spacing should be
    added to the line before intercharacter spacing needs to be
    changed). </font></p>
    <p><font size="2"><b>Script and language information.</b>
    Font vendors may choose to provide font information that is
    script-specific or language-specific. For example, vendors
    may wish to distinguish between Chinese and Japanese fonts.
    Although Chinese and Japanese ideographs are in the same
    Unicode subrange, Japanese glyphs and Chinese glyphs for the
    same character may differ slightly in shape. Also, some
    characters are used differently in different languages; for
    example, s+s often forms </font><font size="2" face="Symbol">b</font><font
    size="2"> in German, but this never happens in English,
    although both languages use the Latin script.</font></p>
    <p><font size="3"><b>Availability</b></font></p>
    <p><font size="2">The Middle East and Far East editions of
    Windows 95 ship fonts containing TrueType Open information,
    and the system makes use of TrueType Open features such as
    glyph substitution for Arabic and vertical glyph substitution
    for Japanese. Applications that wish to process additional
    TrueType Open features can pass Windows 95 a string
    represented by glyph indexes (indexes into font tables) by
    calling <b>ExtTextOutA</b> and setting the ETO_GLYPH_INDEX
    flag. Future versions of Windows NT will also make use of
    TrueType Open.</font></p>
    <p><font size="2">TrueType Open is labeled &quot;open&quot;
    because its format is straightforward and easy to parse.
    Vendors can add features as long as they adhere to the
    format. The specification defines table formats carefully so
    that applications can access font information directly
    without having to call an API. A TrueType Open API that will
    provide standard services is also in the works and is
    scheduled for release in the first half of 1996.</font></p>
    <p><font size="2"><i>Nadine Kano ponders the deeper questions
    of life while blasting opera (mostly Puccini) from her
    stereo. She can be reached at the Internet address
    global@microsoft.com.</i></font></p>
</blockquote>
</font></body>
</html>
