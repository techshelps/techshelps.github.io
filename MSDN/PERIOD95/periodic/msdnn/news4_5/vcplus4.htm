<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="doccomm" content="generated by an Aldus application">
<meta name="Template"
content="C:\MSOFFICE\WINWORD\TEMPLATE\msin60b.dot">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Visual C++ 4</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" color="#000000" size=2>

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<blockquote>
    <p><font size="5"><b>Visual C++ 4.0 Emphasizes Code Reuse,
    Integration, and Speed</b></font></p>
    <p><font size="2">Jonathan Kagle</font></p>
    <p><font size="2">September 12, 1995</font></p>
    <p><font size="2">The Microsoft Visual C++ 4.0 development
    system provides new tools to ease the reuse and extension of
    existing code while allowing developers to take advantage of
    the features of Windows 95.</font></p>
    <p><font size="2">Visual C++ 4.0 makes large projects more
    efficient with improved team development capabilities,
    incremental build technology, and a new way to work with your
    application structure. It also provides a development
    environment that integrates with other tools. And it provides
    OLE Controls, fast data access object (DAO) databases, new
    C++ language features, and more.</font></p>
    <p><font size="3"><b>Reuse</b></font></p>
    <p><font size="2">Reuse has long been a goal of C++. For C++
    programmers, reuse usually means deriving new C++ classes
    from a preexisting base class. It also means the bigger
    problem of reusing existing code, C++ classes, user interface
    elements, prebuilt components, and, most importantly, other
    developers' knowledge, experience, and programming
    techniques.</font></p>
    <p><font size="2">Here's a rundown of some of the features in
    Visual C++ 4.0 designed to make reuse easier.</font></p>
    <p><font size="3"><b>Component Gallery</b></font></p>
    <p><font size="2">Visual C++ 4.0 includes Component
    Gallery&#151;an extensible, general-purpose place to store
    reusable components and add components to an existing
    project.</font></p>
    <p><font size="2"><img src="Image376.gif" width="406"
    height="331"></font></p>
    <p><font size="2"><b>Choosing prebuilt components in
    Component Gallery</b></font></p>
    <p><font size="2">In Component Gallery, you can browse
    through the components available on the system. After
    selecting a component from the Gallery, you only need to
    click the Insert button to place the component into your
    current project. With a click of the mouse, you can store C++
    classes and OLE Controls in Component Gallery, and use them
    as reusable components in almost any Microsoft Foundation
    Class Library (MFC) application, even those with legacy code</font></p>
    <p><font size="2">MFC (and the wizards) provide more than
    40,000 lines of classes to support OLE containers and
    servers, OLE Controls, OLE Automation, and more.<i> </i>Visual
    C++ 4.0 also includes built-in support for creating and using
    OLE Controls, even in dialog boxes<i>.</i></font></p>
    <p><font size="2">The code reuse features of Visual C++ 4.0
    provide opportunities for third-party components. More than
    50 companies will be providing OLE components that work with
    Visual C++. Template Graphics Software and
    Crisis-in-Perspective, for example, will provide new 3-D
    tools and AppWizards. Crystal Software will ship new MFC
    add-on class libraries with the new version of Crystal
    Reports, as well as an OLE Control and an AppWizard to make
    support of database reporting easier.</font></p>
    <p><font size="3"><b>Custom AppWizards</b></font></p>
    <p><font size="2">In addition to Component Gallery<i>,</i>
    you can use AppWizards to create projects from scratch.
    Visual C++ 4.0 includes AppWizards that let you build MFC
    applications, dynamic-link libraries (DLLs), or OLE Controls.
    There's even an AppWizard Wizard, which helps you build your
    own custom AppWizards.</font></p>
    <p><font size="3"><b>Visual C++ 4.0 and Windows 95</b></font></p>
    <p><font size="2">Visual C++ 4.0 runs on Windows 95 and
    Windows NT 3.51 (Workstation or Server), and allows you to
    make logo-compliant applications that exploit features of
    Windows 95.</font></p>
    <p><font size="2">Visual C++ 4.0 offers full support for the
    new common controls in Windows 95 and Windows NT 3.51.
    Multithreading, long filenames, and other Windows 95 features
    are also supported through MFC 4.0.</font></p>
    <p><font size="2">The Visual C++ documentation provides
    step-by-step information on meeting the Windows 95 logo
    requirements, and the Visual C++ 4.0 AppWizard helps you
    quickly create an application that meets the Windows 95 logo
    requirements.</font></p>
    <p><font size="2">The InstallSHIELD SDK is included with
    Visual C++ 4.0 to simplify the implementation of compliant
    setup programs<i>.</i></font></p>
    <p><font size="3"><b>Tools work together for efficient
    development</b></font></p>
    <p><font size="2">You no longer need to leave the Visual C++
    environment to find a powerful source code editor. The
    Developer Studio editor provides keystroke macros, remappable
    keys, multifile search, column select, user-definable syntax
    highlighting, incremental search, auto indent, soft and hard
    tabs, splittable panes, and complex pattern matching. And to
    make the transition easier, BRIEF and Epsilon editor
    emulations are available through the Options dialog box,
    along with the traditional Visual C++ key bindings.</font></p>
    <p><font size="2">The Developer Studio graphical integrated
    debugger makes tracking down bugs a lot easier. In addition
    to the interactive disassembly, memory, registers, and call
    stack windows, there are new multipane variables and watch
    windows. Additionally, pausing your mouse over your source
    code will cause a DataTip, which shows the values, to pop up.</font></p>
    <p><font size="2">The Visual C++ build system has been
    extended to let you call external tools from an internal
    makefile. This means you don't need to create an external
    makefile to work with other compilers, assemblers, or
    preprocessors. You can insert calls to external tools at any
    point in the build process. The project system also manages
    multiple projects from a single workspace.</font></p>
    <p><font size="2">Other Developer Studio features include an
    expanded resource editor, with support for OLE Controls;
    Windows 95 common controls; multiple-language resources;
    snap-to margins<i>;</i> and the ability to import forms from
    Visual Basic.</font></p>
    <p><font size="3"><b>Integration with other tools</b></font></p>
    <p><font size="2">The advanced project-management system of
    Visual C++ contains links to source code control systems. You
    can have Microsoft Visual SourceSafe or other source code
    control systems work with the Developer Studio to help
    developers work better in teams by making code sharing and
    synchronization easier (see &quot;Visual SourceSafe 4.0
    Protects Precious Code&quot; in this issue of <i>Developer
    Network News</i>). There are also hooks available for other
    source code control systems.</font></p>
    <p><font size="2">Microsoft Visual Test, Microsoft Fortran
    PowerStation, and the Microsoft Development Library all work
    together within Developer Studio. For example, you can have a
    Visual Test scenario in the same environment as your C++
    source files, making testing faster and easier. The Developer
    Studio lets you mix Fortran and C++ source files in the same
    project. And the Development Library viewer integrates
    seamlessly into the environment; you can even replace the
    Visual C++ documentation system with the Development Library,
    so you don't have to swap CDs. (See &quot;Development Library
    Viewing Engine Merged into Visual Tools Development
    Environment&quot; in this issue of <i>Developer Network News</i>).</font></p>
    <p><font size="3"><b>A new way to look at your projects</b></font></p>
    <p><font size="2">Visual C++ 4.0 provides a more
    object-centric view of your C++ projects. With the new
    ClassView and WizardBar, you can concentrate on your classes.
    These features let you work with class names and member
    functions, instead of having to deal with a list of source
    and header filenames.</font></p>
    <p><font size="2">ClassView is a tab in the dockable project
    window that displays the classes and members of your project.
    This frees you from having to remember which class is in
    which file and manually opening them. Using an Explorer-like
    interface, you can jump to, add, or remove classes, member
    functions, and member variables. Since the ClassView is
    automatically updated without having to build, you always
    have an accurate view of your project.</font></p>
    <p><font size="2">The WizardBar is a tool inspired by the
    convenient drop-down editor toolbar in Visual Basic. The
    WizardBar lets you quickly jump to the code that responds to
    anything from a button click to a WM_TIMER message. You can
    just as easily add or remove message handlers or other
    virtual functions derived from MFC classes with the
    WizardBar.</font></p>
    <p><font size="3"><b>Faster throughput through incremental
    technology</b></font></p>
    <p><font size="2">Previously, if a source file was modified
    in any way, the entire file would be recompiled during the
    next build. Visual C++ 4.0 compiles or links only the parts
    you change. Incremental compilation means that the compiler
    will recompile only the changed functions (and functions
    affected by a change) within an individual source file.</font></p>
    <p><font size="2">Visual C++ 4.0 includes an improved version
    of Microsoft's incremental linker. The incremental linker
    utilizes a technology that permits just those portions of
    your application that have changed to be relinked, rather
    than relinking the entire application.</font></p>
    <p><font size="2">Minimal rebuild permits the Visual C++
    build engine to analyze dependencies within a project and to
    skip compilation of files that it detects are unaffected by a
    change, even if those files include changed headers.</font></p>
    <p><font size="3"><b>Support for the latest C++ features</b></font></p>
    <p><font size="2">Visual C++ now supports run-time type
    information (RTTI) and name spaces, two of the latest
    language features in the C++ draft. It also includes a robust
    implementation of C++ templates, which can be used with the
    Hewlett-Packard public domain implementation of the C++
    standard template library (STL).</font></p>
    <p><font size="2">There is also continued support for
    applications written in ANSI C for Win32, including console
    applications. The C run-time library now makes better use of
    system memory and cache, and the source code is included on
    the CD. A new debug version of the C run-time library
    automatically tracks memory allocations and frees to help
    find memory leaks in C and C++ applications.</font></p>
    <p><font size="3"><b>Visual C++ boosts database speed with
    DAO, ODBC 2.5</b></font></p>
    <p><font size="2">Visual C++ provides two means of data
    access, each suited to a different need. Both are built into
    MFC 4.0 and are supported by Component Gallery and the
    wizards.</font></p>
    <p><font size="2">First, there's open database connectivity
    (ODBC), a standard API that allows you to work with data from
    many databases, including Microsoft SQL Server, Microsoft
    Visual FoxPro, Microsoft Access, Oracle7, and dBASE. These
    and other drivers are included with Visual C++, and more are
    available from third parties.</font></p>
    <p><font size="2">Visual C++ 4.0 introduces support for DAOs.
    The new DAO classes for MFC enable you to access the
    Microsoft Jet database engine directly using MFC<i>.</i></font></p>
    <p><font size="2">DAOs use the same direct data access engine
    as in Microsoft Access 95 and Visual Basic 4.0 to work with a
    local database or one shared over a network. Because the data
    access engine is the same, the data formats are identical, so
    sharing data is easy. The overall DAO architecture of MFC 4.0
    is very similar to the database support in Visual Basic,
    Microsoft Access, and the MFC ODBC classes.</font></p>
    <p><font size="3"><b>Visual C++: Multiplatform, multilingual</b></font></p>
    <p><font size="2">All versions of Visual C++ support both the
    Win32 API and MFC. In addition to versions that run on Intel
    platforms, there are also versions that run on MIPS, Alpha
    AXP, and PowerPC processors, as well as the Visual C++
    Cross-Development System for the Macintosh and Power Mac.
    Microsoft has licensed MFC and the Win32 API to Mainsoft and
    Bristol Software for products that let you target many major
    UNIX platforms and VMS with your existing MFC and Win32
    API-based source code.</font></p>
    <p><font size="2">From AppWizard, you can choose from nine
    languages (English, German, French, Italian, Spanish, Korean,
    Traditional Chinese, Simplified Chinese, and Japanese) to
    build applications. You can write applications that run with
    Unicode or double-byte character set (DBCS).</font></p>
    <p><font size="3"><b>Coming in October</b></font></p>
    <p><font size="2">Visual C++ 4.0 will be available in
    October. Registered Visual C++ subscribers will get this
    release sent to them free of charge. The subscription version
    of Visual C++ 4.0 for Intel processors will have an estimated
    retail price of US$399. There is also a version available for
    0RISC processors and a cross-compiler for the Apple
    Macintosh.</font></p>
    <p><font size="2">The Visual C++ subscription provides
    multiple-platform support for Microsoft Windows 95, Microsoft
    Windows NT running on Intel platforms, and Windows 3.1 with
    Win32s. Subscriptions are now available in the United States,
    Canada, and Europe. Elsewhere, the CD will be available as a
    stand-alone upgrade through local Microsoft subsidiaries.</font></p>
    <p><font size="2">If you live in the U.S. or Canada, you can
    upgrade to the Visual C++ subscription by sending in the
    upgrade card in the box. If you've lost the card, call (800)
    719-5577 to place your order. In Western Europe, contact your
    local subsidiary.</font></p>
    <p><font size="2"><i>Jonathan Kagle is a product manager for
    Visual C++ and Microsoft Visual Test. By night, he fights for
    justice as Bing Spango, Private Investigator.</i></font></p>
</blockquote>
</font></body>
</html>
