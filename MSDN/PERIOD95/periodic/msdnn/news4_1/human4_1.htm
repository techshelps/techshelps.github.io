<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="doccomm" content="generated by an Aldus application">
<meta name="Template" content="C:\WINWORD\TEMPLATE\MSIN60B.DOT">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Human Factor: With Windows 95, You're Never out of Control(s)</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" color="#000000" size=2>

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<blockquote>
    <p><font size="5"><b>The Human Factor: With Windows 95,
    You're Never out of Control(s)</b></font></p>
    <p><font size="2">Tandy Trower<br>
    Director of User Interface Design</font></p>
    <p><font size="2">In this column, I'll continue my coverage
    of the Windows 95 (formerly Chicago) user interface by taking
    a look at some of its new controls and providing some advice
    on their use. Most of these are the very controls the system
    uses.</font></p>
    <p><font size="3"><b>Toolbars made easy</b></font></p>
    <p><font size="2">The new toolbar control includes the
    attributes found in most toolbars. Not only can you populate
    a toolbar control with other controls, but ToolTips are also
    automatically supported for those controls. (More on ToolTips
    in the next section.) In addition, the control handles
    wrapping of controls if the toolbar is resized. It even
    supports the ability to undock the toolbar from the edge of a
    pane or window and display it as a palette window, or dock it
    against another edge or window.</font></p>
    <p><font size="2"><img src="Image345.gif" width="420"
    height="27"></font></p>
    <p><font size="2">If you provide toolbars in your
    application, consider them a nonrequired part of the basic
    interface, configured with common, frequent functions.
    Remember that they do steal screen real estate, so allow a
    user to turn your toolbars off (usually via a command on the
    View menu). Also, consider allowing users to customize what
    they want on the toolbar. The system-supplied toolbar control
    even supplies an interface for this.</font></p>
    <p><font size="3"><b>Tips are encouraged</b></font></p>
    <p><font size="2">It has always been difficult to choose
    whether to use text or graphics or both for buttons on a
    toolbar. Usually graphics are the best alternative because,
    if designed appropriately, they are more compact and can
    transcend international language barriers without
    translation. However, until users learn them, they may be too
    cryptic to be of much use&#151;thus the temptation to include
    a textual label. This, however, makes the button larger and
    somewhat defeats the purpose of using graphics in the first
    place.</font></p>
    <p><font size="2">ToolTips to the rescue! A ToolTip is a
    small, pop-up window that displays a textual label for the
    control. Because they come up after a short time-out (which
    is user-adjustable), they don't take up permanent screen real
    estate and don't interfere with the interaction of more
    experienced users who recognize what the graphic represents.</font></p>
    <p><font size="2">Don't limit your use of ToolTips to buttons
    in a toolbar. Any control without a label may be able to
    benefit from a ToolTip. They may even be useful with a scroll
    bar to indicate the current page number as a user drags the
    scroll box.</font></p>
    <p><font size="3"><b>What's my status?</b></font></p>
    <p><font size="2">Status bars are another common interface
    element. These are handy not only for providing state
    information within a window, but are also useful for giving
    brief, descriptive information for menus and controls as a
    user moves over them. Windows 95 makes it easier to include a
    status bar by providing one as a standard control.</font></p>
    <p><font size="2"><img src="Image346.gif" width="423"
    height="29"></font></p>
    <p><font size="2">And speaking of status, the system also
    provides another new control called a progress indicator.
    This is a graphic bar that fills in, thus providing feedback
    to a user about the completion status of a process. Progress
    indicators can be used in message boxes or status bars. For a
    multipart process, they should always be used to indicate the
    progression of the entire task or process, unless each part
    is clearly labeled.</font></p>
    <p><font size="3"><b>It's a slider!</b></font></p>
    <p><font size="2">When you want a control that allows a user
    to change a value that moves along a single dimension, such
    as controlling brightness or volume, you have generally been
    left to use a scroll bar. This isn't the best idea, since
    scroll bars were designed for scrolling. Now Windows 95
    provides a handy new slider control that looks a lot like the
    controls used on audio or video equipment for similar
    control.</font></p>
    <p><font size="2"><img src="Image347.gif" width="146"
    height="40"></font></p>
    <p><font size="3"><b>Spinning wheel</b></font></p>
    <p><font size="2">The user interface (UI) guide for Windows
    3.<i>x</i> (<i>The Windows Interface: An Application Design
    Guide</i>) discusses a control called a spin box. This
    control is a text box with a pair of buttons used to add or
    subtract the value from a preset range of possible values.
    The values wrap; for example, on a 0 to 9 set of integers,
    after 9 you get to 0. These usually wrap around at the top or
    bottom of the set of values, giving the effect of a spinner
    or wheel. Think of a roulette wheel (only with sequential
    numbers) or one of the wheels in your car's odometer.</font></p>
    <p><font size="2"><img src="Image348.gif" width="147"
    height="40"></font></p>
    <p><font size="2">Windows 95 makes creating that control
    easier by including a special control, called the up-down
    control, that provides the increment and decrement buttons.
    It operates like a simplified form of a scroll bar.</font></p>
    <p><font size="3"><b>A tree grows in Windows 95</b></font></p>
    <p><font size="2">The new tree view control allows you to
    organize a list of hierarchically related items. In fact, it
    is the control that the Windows Explorer in Windows 95 uses
    to display an outline of folders.</font></p>
    <p><font size="2"><img src="Image349.gif" width="144"
    height="173"></font></p>
    <p><font size="2">But you need not limit it to the
    presentation of file hierarchies. The control allows you to
    include text and graphics and, optionally, button controls
    for expanding and collapsing the outline.</font></p>
    <p><font size="3"><b>Makin' a list</b></font></p>
    <p><font size="2">The list view control allows items to be
    listed in large icon, small icon, phone directory-style
    column, or multiple-column report view. Like the tree view
    control, this control is the same one that the system uses to
    display icons in a folder. It can come in handy when you are
    creating your own container of iconic objects. It also
    provides support for drag and drop.</font></p>
    <p><font size="3"><b>One from column A...</b></font></p>
    <p><font size="2"><img src="Image350.gif" width="422"
    height="73"></font></p>
    <p><font size="2">The new column heading control allows you
    to create column headings for a list of objects. You can
    define the number of columns, the labels for each column
    title, and the sorting of entries in the list based on a
    particular column.</font></p>
    <p><font size="3"><b>Rich text?</b></font></p>
    <p><font size="2">Would you like to have the kind of text
    formatting capabilities found in Microsoft Word? With the new
    rich-text control you get multiple font support for text
    within the control, rather than just a single font setting
    for the entire control. You also have basic paragraph
    formatting properties, such as alignment, tabs, indents, and
    bulleting. The control even supports OLE.</font></p>
    <p><font size="2"><img src="Image351.gif" width="205"
    height="107"></font></p>
    <p><font size="2">Because the control supports most of the
    messages of a standard text box, it can easily replace your
    existing text controls. You do have to provide the user
    interface elements for formatting font or paragraph
    properties.</font></p>
    <p><font size="3"><b>Tabs, property sheets, and blankets</b></font></p>
    <p><font size="2">Actually, there isn't a blanket control,
    but Windows 95 does make those nifty notebook-like tabs
    available to you, either as a set of tabs or as a complete
    property sheet with all the trimmings. You can define your
    tabs to include text, graphics, or both. When laying out
    secondary windows with these controls, make certain you place
    your command buttons appropriately.</font></p>
    <p><font size="2"><img src="Image352.gif" width="345"
    height="35"></font></p>
    <p><font size="2">Buttons on a tabbed page should apply to
    that page. Buttons placed outside a tabbed page (but within
    that window) should apply to the entire window. For example,
    if an Apply button only applies the changes on one particular
    page, it should be <i>on</i> that page. However, if you allow
    the user to apply changes on different pages as one
    operation, the button should be placed <i>outside </i>the
    page.</font></p>
    <p><font size="3"><b>Other goodies</b></font></p>
    <p><font size="2">There isn't room in this column to cover
    all the new controls. I could have mentioned pen controls,
    such as boxed edit and ink edit; or the shortcut key control,
    a way of allowing the user to enter a key combination that
    can be assigned as a shortcut key. Add to this the fact that
    the common dialog boxes have been modified for the Windows 95
    visual style (Open and Save As even provide support for long
    filenames) and you have quite a bundle of new support to make
    writing your Windows 95-based application easier.</font></p>
    <p><font size="2">More information about how and when to use
    these controls can be found in the <i>Win32 Programmer's
    Reference</i> and in the draft of the <i>Windows 95 User
    Interface Design Guide</i>. Also, check out Nancy Cluts'
    articles on implementing common controls in Windows 95 in the
    January release of the Developer Network Development Library.</font></p>
    <p><font size="2"><i>Tandy Trower is the director of UI
    design at Microsoft. While often considered the Roger Ebert
    (or is that Gene Siskel?) of Microsoft's product UI, he
    flatly denies that he is Dr. GUI's older brother.</i></font></p>
</blockquote>
</font></body>
</html>
