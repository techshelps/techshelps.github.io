<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="doccomm" content="generated by an Aldus application">
<meta name="Template" content="C:\WINWORD\TEMPLATE\MSIN60B.DOT">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>International Mobilization for Windows 95</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" color="#000000" size=2>

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<blockquote>
    <p><font size="5"><b>International Mobilization for Windows
    95</b></font></p>
    <p><font size="3"><b>30 different language versions to ship
    within six months of release</b></font></p>
    <p><font size="2">Ken Fowles<br>
    Manager, Developer Relations Group's Globalization Team</font></p>
    <p><font size="2">January 9, 1995</font></p>
    <p><font size="2">Within six months of the release of Windows
    95 (formerly known as Chicago), 30 different language
    editions are scheduled to ship. (See Table 1 for specific
    time frames.) This will have an impact on all applications,
    since a new standard is being set for international
    availability of the Windows platform.</font></p>
    <p><font size="2">How does Microsoft manage code on a
    worldwide project of this scale? What are the main things
    Microsoft is doing to avoid going crazy trying to release so
    many language editions in a reasonable amount of time? More
    importantly, what can Developer Network-equipped developers
    learn from this experience?</font></p>
    <p><font size="2"><b>Table 1: International Windows 95 ship
    time frames.</b></font></p>
</blockquote>

<table border="0" cellpadding="7" cellspacing="0" width="469">
    <tr>
        <td width="77%"><blockquote>
            <p><font size="1">Brazilian Portuguese, Dutch,
            English, French, German, Italian, Spanish, Swedish</font></p>
        </blockquote>
        </td>
        <td width="23%"><blockquote>
            <p><font size="1">0-3 weeks</font></p>
        </blockquote>
        </td>
    </tr>
    <tr>
        <td width="77%"><blockquote>
            <p><font size="1">Danish, Finnish, Iberian
            Portuguese, Norwegian</font></p>
        </blockquote>
        </td>
        <td width="23%"><blockquote>
            <p><font size="1">2 months</font></p>
        </blockquote>
        </td>
    </tr>
    <tr>
        <td width="77%"><blockquote>
            <p><font size="1">Japanese, Japanese (NEC 9800),
            Korean, Traditional Chinese</font></p>
        </blockquote>
        </td>
        <td width="23%"><blockquote>
            <p><font size="1">3 months</font></p>
        </blockquote>
        </td>
    </tr>
    <tr>
        <td width="77%"><blockquote>
            <p><font size="1">Basque, Catalan, Czech, Greek,
            Hungarian, Indonesian, Polish, Russian, Simplified
            Chinese, Slovenian, Thai, Turkish</font></p>
        </blockquote>
        </td>
        <td width="23%"><blockquote>
            <p><font size="1">4 months</font></p>
        </blockquote>
        </td>
    </tr>
    <tr>
        <td width="77%"><blockquote>
            <p><font size="1">Arabic, Hebrew</font></p>
        </blockquote>
        </td>
        <td width="23%"><blockquote>
            <p><font size="1">6 months</font></p>
        </blockquote>
        </td>
    </tr>
</table>

<blockquote>
    <p><font size="3"><b>30 languages, only three code bases</b></font></p>
    <p><font size="2">Microsoft is saving a lot of time by
    developing just three separate code bases: SBCS
    (single-byte), DBCS (double-byte or multibyte) and Mideast
    (bidirectional). These three cover 30 languages. For example,
    Microsoft isn't building just an English-language version of
    Windows 95. Rather, it's building a single-byte version that
    happens to have an English user interface (UI) but can be
    easily transformed into German or French through
    &quot;no-compile&quot; techniques of exchanging Win32
    resources.</font></p>
    <p><font size="2">If you want to see no-compile Win32
    resource editing and many other Windows 95
    internationalization issues covered in technical detail, the
    Microsoft Developer Relations Group will hold a one-day Win32
    globalization seminar in 14 cities during February. The cost
    is approximately US$150. To register, call (800) 619-7689 or
    (415) 979-2288, or fax (415) 979-2270.</font></p>
    <p><font size="2">The efficiency gains are substantial, since
    Microsoft no longer has to spend an additional minute (or
    year) ripping apart existing code to create another language
    edition. Simultaneous shipping in several languages becomes
    practical, instead of merely theoretical. This also improves
    quality, because the sources remain unchanged and only the
    localized portions of the UI require testing. In addition,
    bug fixes affect all localized versions automatically, since
    builds are based on a common binary.</font></p>
    <p><font size="2">New emerging markets can be added to the
    list at any time&#151;for example, the SBCS version can be
    localized into Klingon with no additional technical work.
    Unfortunately for Trekkers, there is currently not enough
    interstellar commerce to justify a Klingon edition of Windows
    95. (If there were a Klingon edition it probably would look
    like Figure 1.) If someone could make a compelling case for
    it, Microsoft might consider adding it to the list.</font></p>
    <p><font size="2"><img src="Image354.gif" width="569"
    height="73"></font></p>
    <p><font size="2"><b>Figure 1: Klingon language edition of
    Windows 95 (not currently scheduled).</b></font></p>
    <p><font size="3"><b>Why stop at three code bases?</b></font></p>
    <p><font size="2">But why limit the streamlining to three
    code bases? Isn't one worldwide (or even one interplanetary)
    code base the ultimate goal? What about that thingamajig
    called Unicode, wasn't it supposed to handle this all
    automatically?</font></p>
    <p><font size="2">Well, not exactly. Internationalization
    means a heck of a lot more than what code page you pick, or
    using a universal language-independent code page (that is,
    Unicode).</font></p>
    <p><font size="2">Remember the fundamental design goals of
    Windows 95&#151;while it gets a bunch of new cool stuff, it
    also has to be as small as possible, be very fast, run on the
    majority of today's hardware, and not break too many existing
    apps.</font></p>
    <p><font size="2">Microsoft took a hard look at this and came
    up with three language-region families required for Windows
    95. The DBCS editions, which ship to the Far East, include
    some code that really doesn't need to be shipped elsewhere,
    such as an IME (input method editor) for complex writing
    systems, an EUDC (end-user defined character) editor, and all
    the code for passing DBCS (mixture of 8-bit or 16-bit)
    characters through the UI, as well as a bunch of applications
    in the Far East region that require DBCS support.</font></p>
    <p><font size="2">The editions for the Middle East support
    both left-to-right and right-to-left UI text placement, and
    special ligature and text justification (Kashida)
    handling&#151;an absolute requirement for that region, but
    not elsewhere.</font></p>
    <p><font size="2">Thus, if Microsoft had one worldwide
    binary, we would have saved a few additional steps, but at
    the unacceptable expense of shipping a larger product at a
    much later time. What we have instead are three
    well-optimized source trees that cover 30 languages, all
    tested and developed by one team.</font></p>
    <p><font size="3"><b>Responding quickly</b></font></p>
    <p><font size="2">The most successful companies will be those
    that can quickly respond to emerging growth opportunities
    anywhere in the world. So, Microsoft encourages any
    application developer (that means you) at a minimum to set up
    projects so they can be localized through no-compile Win32
    resource-file editing. If you need to optimize for size (as
    many of us do), consider managing your projects as three
    major language regions like Microsoft did, but within each
    region stick to only one code base. You will find this
    approach easiest if you are targeting Windows 95.</font></p>
    <p><font size="2">If you have the type of project that can
    afford more size, it is entirely possible to ship one binary
    with worldwide functionality that will run across all
    language editions of Windows 95, and on Windows NT. An
    example of this is the English version of Visual C++ 2.0,
    which is DBCS-enabled. If you run Visual C++ on Japanese
    Windows, you can add Kanji literals and comments to your
    source files.</font></p>
    <p><font size="2">Want to know more? Read the <i>International
    Handbook for Software Design</i>, which is in the Developer
    Network Development Library. Nadine Kano of Microsoft's
    Developer Relations Group is also currently rewriting the
    handbook. Her book is scheduled to be published this spring
    by Microsoft Press. </font></p>
    <p><font size="2">Another resource is the Globalization
    Resource Kit (GRK), a CD-ROM with basic technical and
    marketing information plus a directory of third-party vendors
    who can provide internationalization-related services. If you
    don't have one, send e-mail with your mailing address to
    global@microsoft.com and ask for a GRK. Also, if you want to
    get Windows 95 internationalization information that will be
    published in the future, join the Developer Network, which
    will release information when it becomes publicly available.</font></p>
    <p><font size="2"><i>Ken Fowles manages the Microsoft
    Developer Relations Group's globalization team. His
    distractions include playing the violin, rebuilding his
    house, and riding his Harley to biker events in Sturgis,
    South Dakota.</i></font></p>
</blockquote>
</font></body>
</html>
