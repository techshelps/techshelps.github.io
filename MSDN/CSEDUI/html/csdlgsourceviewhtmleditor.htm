<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Source View, HTML Editor</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="csdlgsourceviewhtmleditor"></a>Source View, HTML Editor</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csdlgSourceViewHTMLEditor_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csdlgSourceViewHTMLEditor_T">
</object></p>
<p>
Source view in the HTML editor enables you to:
<ul type=disc>
<li>
View and edit text and HTML tags.<br><br></li>
<li>
View and edit scripts in the page.<br><br></li>
<li>
Work with design-time controls, Java applets, and most other objects using the visual representation they will have in the browser. (Intrinsic HTML controls are displayed as HTML text.)<br><br></li>
<li>
Drag items from the Toolbox and from the Project Explorer to create elements on your page.<br><br></li>
<li>
Use the Properties window and custom properties dialog boxes to edit the appearance and behavior of HTML text and controls on the page.</li>
</ul>
<p class=indent>
<b>Note</b> &nbsp; In Source view, the Properties window does not display style properties. You can edit style properties directly in an HTML tag or by using the Properties window in Design view.
<ul type=disc>
<li>
Use the HTML Outline window to jump to any element in the page.<br><br></li>
<li>
Use the Script Outline window to view and create scripts for elements in the page.<br><br></li>
<li>
Perform debugger functions, such as setting breakpoints and viewing the current line indicator.</li>
</ul>
<p>
Source view is useful for working directly with "raw" HTML text, which gives you precise control over the tags used in the page. However, by default, you can still work with objects visually.</p>
<h2>Editing in Source View</h2>
<p>
To help you work in Source view, the editor colors text to show its function. For example, by default, HTML tags are displayed in brown, tag attributes in red, attribute value in blue, and so on. If your page contains script, the script is colored according to the rules for the language of that script.</p>
<p>
You can add elements to your page in Source View by dragging them from the Toolbox, from the Project Explorer, or from any other drag source. When you drop them on a page, the HTML editor either creates an instance of the element (such as an applet) or a reference to it (such as an image or another file).</p>
<p class=indent>
<b>Note</b> &nbsp; If you drag an element onto a page that creates a reference, the URL of the reference is absolute to the source of the file. You might have to edit the URL to make it relative.</p>
<p>
You can paste HTML text into Source view. If you cut or copied the text from an HTML source&nbsp; — such as Internet Explorer, Design view of the Visual InterDev editor, or the Visual InterDev Help system or sample applications&nbsp;— use the Paste As HTML command from the right-click menu. Otherwise, the editor pastes in a version of the HTML text with escape codes in place of HTML reserved characters. For example, if you copied "&lt;MARQUEE&gt;" to the Clipboard, the HTML version would be "&amp;lt;MARQUEE&amp;gt;". The text version contains an exact copy of the original text you cut or copied.</p>
<p>
You can move between scripts using the Script Outline window. Click the name of a script to place the insertion point in that script. If you are working on a script in the page and want to see where you are in the Script Outline window, right-click the script block and choose Synch Outline.</p>
<p class=indent>
<b>Note</b> &nbsp; If a file referenced in your document changes while the document is open&nbsp;— such as a style sheet, Java applet, or image&nbsp;— the HTML editor does not automatically update your view of the document. To get the most current versions of elements referenced in your document, choose Refresh from the View menu.</p>
<p>
Source view allows you to switch between visual and text representation of all controls on the page. For example, if you are working with an object, you can set its parameters using the Property window, or you can directly set values in the &lt;PARAM&gt; tag of an object on the page. If you are using design-time controls in your page, Source view allows you to see both the generated script from those controls as well as the object information that the control uses to coordinate with other controls.</p>
<p class=indent>
<b>Note</b> &nbsp; In general you should not directly edit generated script or object information created by a tool (such as a design-time control), because doing so can cause the page stop functioning properly.</p>
<h3>Displaying Visual Representations of Objects</h3>
<p>
By default, design-time controls, Java applets, and other objects are displayed on the page using their visual representation.</p>
<p class=indent>
<b>Note</b> &nbsp; If you select an object that has a visual representation, the line number in the status bar reflects the line immediately following the object.</p>
<p>
You can change individual controls to show their HTML text representation. Doing so allows you to switch quickly between views, because the editor does not need to render the control graphically. However, when a control is displayed as text, it does not communicate with other controls on the page. If you add or change other controls while using text view, controls on the page will not function as designed. You should view controls as text only when you want to work with HTML text, not with the controls.</p>
<p class=blue>
<b>To display text representations of an individual control</b>
<ul type=disc>
<li>
Right-click the control, and then choose <b>Always View As Text</b>.</li>
</ul>
<p class=blue>
<b>To display text representations of controls by default</b>
<ul type=disc>
<li>
In the <b>HTML Editor Options</b>, set <b>Source View Display</b> to <b>Text</b>.</li>
</ul>
<p class=indent>
<b>Note</b> &nbsp; You cannot successfully copy and paste the text representation of a control. If you want to copy a control, use its graphical representation.</p>
<p>
When you use a design-time control, the control generates script in your page. The control also adds object information as HTML text that it uses to coordinate the generated script with that of other design-time controls on the page. You can preview this generated script.</p>
<p class=blue>
<b>To preview a design-time control's generated script</b>
<ul type=disc>
<li>
Right-click the control, and then choose <b>Show Runtime Text</b>. The generated script is displayed immediately below the control in a read-only block marked in gray.</li>
</ul>
<p>
You can also remove the object information for a design-time control to reduce the size of your page. However, because the control becomes static text, it can no longer be coordinated automatically with other controls, and can cause the page to malfunction. Remove the object information only if you intend to customize the control and do not wish to use it as it was designed.</p>
<p class=blue>
<b>To remove object information from design-time controls</b>
<ul type=disc>
<li>
Right-click the control, and then choose <b>Convert to Runtime Text</b>. The visual representation of the control is replaced by the generated script.</li>
</ul>
<p class=indent>
<b>Caution</b> &nbsp; You cannot undo this command.</p>
<h3>Adding Script</h3>
<p>
The Script Outline window displays a tree view containing the object hierarchy for both the client and the server. Each script on the page appears as a node on the tree.</p>
<p>
Beneath each object, the hierarchy also contains a list of events supported by that object. If a handler exists for that event, the name of the event is displayed in bold. To create a new handler, double-click the name of the event. To jump to an existing script, click its node in the tree.</p>
<p>
If you are writing script, the HTML editor uses IntelliSense<sup>®</sup>— it displays options that help you complete statements. When you type in the name of an object available on your page followed by a period (.), the editor displays all members of that object's class.</p>
<p>
You can quickly create or edit script for an element on the page in these ways:
<ul type=disc>
<li>
Right-click the page, and then choose Edit Script.<br><br></li>
<li>
Double-click an element that has a visual representation.</li>
</ul>
<h3>Debugging in Source View</h3>
<p>
Source view enables you to execute debugger commands, such as setting breakpoints, by choosing commands from the Debug menu or the Debug toolbar. The left margin of the edit window displays glyphs indicating breakpoints.</p>
<p>
When the debugger is running, the current page is displayed in Source view so you can see individual lines of script. The current line is indicated in the margin with an arrow indicator.</p>
</BODY>
</HTML>
