<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AcquireCredentialsHandle</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_acquirecredentialshandle"></a>AcquireCredentialsHandle</h1>
<p>
The <b>AcquireCredentialsHandle</b> function allows applications to acquire a handle to pre-existing credentials associated with the user on whose behalf the call is made. These pre-existing credentials are established through a system logon not described here.</p>
<p>
Note that this is different from "login to the network" and does not imply gathering of credentials.</p>
<pre><code><b>SECURITY_STATUS AcquireCredentialsHandle(
  SEC_CHAR *</b><i> pszPrincipal</i><b>,  </b>// name of principal
<b>  SEC_CHAR *</b><i> pszPackage</i><b>, </b>// name of package
<b>  ULONG</b><i> fCredentialUse</i><b>,  </b>// flags indicating use
<b>  PLUID</b><i> pvLogonID</i><b>,       </b>// pointer to logon identifier
<b>  PVOID</b><i> pAuthData</i><b>,       </b>// package-specific data
<b>  PVOID</b><i> pGetKeyFn</i><b>,       </b>// pointer to GetKey function
<b>  PVOID</b><i> pvGetKeyArgument</i><b>,  </b>// value to pass to GetKey
<b>  PCredHandle</b><i> phCredential</i><b>,  </b>// credential handle
<b>  PTimeStamp</b><i> ptsExpiry   </i>// life time of the returned credentials
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pszPrincipal</i></dt>
<dd>
Pointer to a null-terminated string the specifies the name of the principal whose credentials the handle will reference. Note that if the process requesting the handle does not have access to the credentials, the function returns an error. A null string indicates that the process requires a handle to the credentials of the user under whose security context it is executing.</dd>
<dt>
<i>pszPackage</i></dt>
<dd>
Pointer to a null-terminated string the specifies the name of the security package with which these credentials will be used. This is a security package name returned in the <b>Name</b> member of a <b>SecPkgInfo</b> structure returned by the <b>EnumerateSecurityPackages</b> function.</dd>
<dt>
<i>fCredentialUse</i></dt>
<dd>
A flag that indicates how these credentials will be used. This parameter can one of the following values:
<p>
CRED_INBOUND<br>
CRED_OUTBOUND<br>
CRED_BOTH

<p>
The credentials created with the CRED_INBOUND option can be used only for validating incoming calls. They cannot be used for accessing objects. 
</dd>
<dt>
<i>pvLogonId</i></dt>
<dd>
Pointer to a Windows NT–style logon identifier, an <b>LUID</b>. This parameter is provided for file-system processes such as network redirectors. This parameter can be NULL.</dd>
<dt>
<i>pAuthData</i></dt>
<dd>
Pointer to package-specific data. This parameter can be NULL, indicating that the default credentials for that package should be used. The RPC run time passes whatever was provided in the <b>RpcBindingSetAuthInfo</b> function.</dd>
<dt>
<i>pGetKeyFn</i></dt>
<dd>
Pointer to a SEC_GET_KEY_FN function to retrieve the key for the function. The security package can call this function, as provided by the RPC run-time transport application. This parameter can be NULL if the transport application does not support callbacks to retrieve credentials.</dd>
<dt>
<i>pvGetKeyArgument</i></dt>
<dd>
Specifies the pointer argument that the security provider should pass to the <b>GetKey</b> function. This parameter can be NULL.</dd>
<dt>
<i>phCredential</i></dt>
<dd>
Pointer to <b>CredHandle</b> structure that receives the credential handle. </dd>
<dt>
<i>ptsExpiry</i></dt>
<dd>
Pointer to a <b>TimeStamp</b> variable that receives the time at which the returned credentials expire. The value returned in this member depends on the security package. The security provider should always return this value in local time. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is SEC_E_OK. </p>
<p>
If the function fails, the return value may be one of the following error codes.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=53%>Value </th>
<th align=left width=47%>Meaning</th>
</tr>
<tr valign=top>
<td width=53%>SEC_E_UNKNOWN_CREDENTIALS</td>
<td width=47%>The credentials supplied to the package were not recognized.</td>
</tr>
<tr valign=top>
<td width=53%>SEC_E_NO_CREDENTIALS</td>
<td width=47%>No credentials are available in the security package.</td>
</tr>
<tr valign=top>
<td width=53%>SEC_E_NOT_OWNER</td>
<td width=47%>The caller of the function does not own the necessary credentials.</td>
</tr>
<tr valign=top>
<td width=53%>SEC_E_INSUFFICIENT_MEMORY</td>
<td width=47%>Not enough memory is available to complete this request.</td>
</tr>
<tr valign=top>
<td width=53%>SEC_E_INTERNAL_ERROR</td>
<td width=47%>The Local Security Authority cannot be contacted.</td>
</tr>
<tr valign=top>
<td width=53%>SEC_E_SECPKG_NOT_FOUND</td>
<td width=47%>The requested security package does not exist.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <b>AcquireCredentialsHandle</b> function returns a handle to the credentials of a principal (user, client) as used by a specific security package. The handle returned can be used in subsequent calls to the <a href="issp_2i2c.htm"><b>AcceptSecurityContext</b></a> and <a href="issp_93ec.htm"><b>InitializeSecurityContext</b></a> functions. </p>
<p>
The<b> AcquireCredentialsHandle</b> function will not let a process obtain a handle to credentials that are not related to the process; in other words, a process cannot get the credentials of another user who is logged on to the same computer. There is no way to determine whether a process is a Trojan horse if it is executed by the user.</p>
<p>
The <b>AcquireCredentialsHandle</b> function uses the following algorithm to determine whether to grant the request for a handle to the credentials. </p>
<p>
If the caller is a system process with the SE_TCB_NAME privilege (for example, an FSP), and the caller provides both the name and logon identifier, the function verifies that they match before returning the credentials. If only one is provided, the function returns a handle to that identifier.</p>
<p>
If the caller is not a system process, the caller can only obtain a handle to the credentials under which it is running The caller can provide the name or the logon identifier, but it must be for the current session or the request fails.</p>
<p>
When you no longer need the returned credentials, call the <b>FreeCredentialsHandle</b> function. </p>
<h4>See Also</h4>
<p>
<a href="issp_710l.htm"><b>FreeCredentialsHandle</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
