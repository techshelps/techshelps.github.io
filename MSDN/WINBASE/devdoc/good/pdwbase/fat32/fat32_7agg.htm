<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Int 21h Function 440Dh Minor Code 42h (FAT32)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="funcs_0000000101000300"></a>Int 21h Function 440Dh Minor Code 42h (FAT32) </h1>
<p>
[Windows 95 only.]</p>
<p>
Formats and verifies a track on the specified device. </p>
<pre><code>mov     bx, Drive                 ;See below
mov     ch, DeviceCat             ;See below
mov     cl, 42h                   ;Format track on logical drive
mov     dx, seg FormatBlock       ;See below
mov     ds, dx
mov     dx, offset FormatBlock    ;ds:dx points to FVBLOCK structure
mov     ax, 440Dh                 ;IOCTL for block device
int     21h

jc      error_handler             ;carry set means error
</code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Drive</i> </dt>
<dd>
Specifies the drive on which the track is to be formatted and verified (0 = default drive, 1 = A, 2 = B, and so on). </dd>
<dt>
<i>DeviceCat</i> </dt>
<dd>
Specifies a FAT16, FAT12 or FAT32 drive. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Value</th>
<th align=left width=57%>Description </th>
</tr>
<tr valign=top>
<td width=43%>08h </td>
<td width=57%>FAT16 or FAT12 drive. (Will fail on FAT32 drives.) </td>
</tr>
<tr valign=top>
<td width=43%>48h </td>
<td width=57%>FAT32, FAT16, or FAT12 drive. This value is supported on Windows 95 OEM Service Release 2 and later. </td>
</tr>
</table><br>


<p>
<b>Note:</b> Because this call may be implemented in the device driver, the 48h form of this call may fail on FAT16 or FAT12 media. Therefore, applications making the 48h form of this call must fall back on the 08h form if the 48h call fails. 
</dd>
<dt>
<i>FormatBlock</i> </dt>
<dd>
Points to an FVBLOCK structure that specifies the head and cylinder to format. The FVBLOCK structure has the following form: 
<pre><code>FVBLOCK STRUC
    fvSpecFunc    db  0   ;special functions
    fvHead        dw  ?   ;head to format/verify
    fvCylinder    dw  ?   ;cylinder to format/verify
    fvTracks      dw  ?   ;tracks to format/verify
FVBLOCK ENDS
</code></pre>

<p>
The fvSpecFunc field can be 0, 1, or 2. The fvTracks field is ignored. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the fvSpecFunc field in the FVBLOCK structure is 1, clears the carry flag and sets the fvSpecFunc field to one of the following values. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Value </th>
<th align=left width=59%>Meaning </th>
</tr>
<tr valign=top>
<td width=41%>0 </td>
<td width=59%>ROM support for given format combination </td>
</tr>
<tr valign=top>
<td width=41%>1 </td>
<td width=59%>No ROM support </td>
</tr>
<tr valign=top>
<td width=41%>2 </td>
<td width=59%>Illegal format combination </td>
</tr>
<tr valign=top>
<td width=41%>3 </td>
<td width=59%>No media present </td>
</tr>
</table><br>
<p>
If the fvSpecFunc field is 0 and the function is successful, clears the carry flag. Otherwise, sets the carry flag and sets the AX register to one of the following error values. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Value </th>
<th align=left width=59%>Name </th>
</tr>
<tr valign=top>
<td width=41%>0001h </td>
<td width=59%>ERROR_INVALID_FUNCTION </td>
</tr>
<tr valign=top>
<td width=41%>0002h </td>
<td width=59%>ERROR_FILE_NOT_FOUND </td>
</tr>
<tr valign=top>
<td width=41%>0005h </td>
<td width=59%>ERROR_ACCESS_DENIED </td>
</tr>
</table><br>
<p>
Format Track on Logical Drive returns 0002h (ERROR_FILE_NOT_FOUND) if the specified drive number is invalid. </p>
<p>&nbsp;</p></body>
</HTML>
