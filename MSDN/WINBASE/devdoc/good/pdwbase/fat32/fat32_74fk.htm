<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetDPB_SetAllocInfo (FAT32)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="funcs_0000000101001c00"></a>SetDPB_SetAllocInfo (FAT32) </h1>
<p>
[Windows 95 only.]</p>
<p>
Sets the dpb_free_cnt and dpb_next_free fields in the DPB. </p>
<p>
This sub-function is called when the SetDPB_Function field of the <a href="fat32_6uk0.htm">SDPDFormatStruc (FAT32)</a> structure is set to 0. </p>
<h4>Return Values</h4>
<p>
Clears the carry flag and sets the dpb_free_cnt and dpb_next_free fields in the DPB based upon the values in the SetDPB_Value1 and SetDPB_Value2 fields within the Set_DPB_ForFormat structure. </p>
<h4>Remarks</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%><b>SetDPB_Value1 Setting</b> </td>
<td width=59%><b>Result within DPB</b> </td>
</tr>
<tr valign=top>
<td width=41%>0 </td>
<td width=59%>Does not change the dpb_free_cnt field. </td>
</tr>
<tr valign=top>
<td width=41%>0xFFFFFFFF </td>
<td width=59%>Sets dpb_free_cnt to unknown. </td>
</tr>
<tr valign=top>
<td width=41%>(any other value) </td>
<td width=59%>Sets dpb_free_cnt to the specified value if it is a valid cluster count for the drive,. </td>
</tr>
</table><br>
<p>
The free cluster count cannot be explicitly set to zero by this call. This can only be done by setting SetDPB_Value1 to 0xFFFFFFFF, which forces the free space to be re-computed. Also, setting this value improperly causes the free count value to be reported improperly by GetDiskFreeSpace. The settings of 0 or 0xFFFFFFFF are recommended. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%><b>SetDPB_Value2 Setting</b></td>
<td width=59%><b>Result within DPB</b> </td>
</tr>
<tr valign=top>
<td width=41%>0</td>
<td width=59%>Does not change the dpb_next_free field. </td>
</tr>
<tr valign=top>
<td width=41%>0xFFFFFFFF</td>
<td width=59%>Sets dpb_next_free to force the cluster search to begin at the beginning of the FAT. </td>
</tr>
<tr valign=top>
<td width=41%>(any other value)</td>
<td width=59%>Sets dpb_next_free to the given value if it is a valid cluster number for the drive. This causes the search for free clusters to begin at the specified cluster. </td>
</tr>
</table><br>
<p>
The assembler calling sequence for all Int 21h 7304h sub-functions is almost identical. See the main listing for a sample. (<a href="fat32_719s.htm">Int 21h Function 7304h Set_DPBForFormat (FAT32)</a>) </p>
<p>&nbsp;</p></body>
</HTML>
