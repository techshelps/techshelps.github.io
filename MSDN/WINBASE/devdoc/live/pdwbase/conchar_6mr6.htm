<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ScrollConsoleScreenBuffer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_scrollconsolescreenbuffer"></a>ScrollConsoleScreenBuffer</h1>
<p>
The <b>ScrollConsoleScreenBuffer</b> function moves a block of data in a screen buffer. The effects of the move can be limited by specifying a clipping rectangle, so the contents of the screen buffer outside the clipping rectangle are unchanged. </p>
<pre><code><b>BOOL ScrollConsoleScreenBuffer(
  HANDLE</b><i> hConsoleOutput</i><b>,  </b>// handle to a console screen buffer
<b>  CONST SMALL_RECT</b><i> *lpScrollRectangle</i><b>,</b>
<b>                          </b>// address of screen buffer rect. to move
<b>  CONST SMALL_RECT</b><i> *lpClipRectangle</i><b>,</b>
<b>                          </b>// address of affected screen buffer rect.
<b>  COORD</b><i> dwDestinationOrigin</i><b>,  </b>// new location of screen buffer rect.
<b>  CONST CHAR_INFO</b><i> *lpFill</i>   // address of fill character and color
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hConsoleOutput</i></dt>
<dd>
Handle to a console screen buffer. The handle must have GENERIC_WRITE access. </dd>
<dt>
<i>lpScrollRectangle</i></dt>
<dd>
Pointer to a <a href="conchar_5wtu.htm"><b>SMALL_RECT</b></a> structure whose members specify the upper-left and lower-right coordinates of the screen buffer rectangle to be moved. </dd>
<dt>
<i>lpClipRectangle</i></dt>
<dd>
Pointer to a <b>SMALL_RECT</b> structure whose members specify the upper-left and lower-right coordinates of the screen buffer rectangle that is affected by the scrolling. This pointer can be NULL. </dd>
<dt>
<i>dwDestinationOrigin</i></dt>
<dd>
Specifies the upper-left corner of the new location of the <i>lpScrollRectangle</i> contents. </dd>
<dt>
<i>lpFill</i></dt>
<dd>
Pointer to a <a href="conchar_8sfm.htm"><b>CHAR_INFO</b></a> structure that specifies the character and color attributes to be used in filling the cells within the intersection of <i>lpScrollRectangle</i> and <i>lpClipRectangle</i> that were left empty as a result of the move. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
<b>ScrollConsoleScreenBuffer</b> copies the contents of a rectangular region of a screen buffer, specified by the <i>lpScrollRectangle</i> parameter, to another area of the screen buffer. The target rectangle has the same dimensions as the <i>lpScrollRectangle</i> rectangle with its upper-left corner at the coordinates specified by the <i>dwDestinationOrigin</i> parameter. Those parts of <i>lpScrollRectangle</i> that do not overlap with the target rectangle are filled in with the character and color attributes specified by the <i>lpFill</i> parameter. </p>
<p>
The clipping rectangle applies to changes made in both the <i>lpScrollRectangle</i> rectangle and the target rectangle. For example, if the clipping rectangle does not include a region that would have been filled by the contents of <i>lpFill</i>, the original contents of the region are left unchanged. </p>
<p>
If the scroll or target regions extend beyond the dimensions of the screen buffer, they are clipped. For example, if <i>lpScrollRectangle</i> is the region contained by (0,0) and (19,19) and <i>dwDestinationOrigin</i> is (10,15), the target rectangle is the region contained by (10,15) and (29,34). However, if the screen buffer is 50 characters wide and 30 characters high, the target rectangle is clipped to (10,15) and (29,29). Changes to the screen buffer are also clipped according to <i>lpClipRectangle</i>, if the parameter specifies a <b>SMALL_RECT</b> structure. If the clipping rectangle is specified as (0,0) and (49,19), only the changes that occur in that region of the screen buffer are made. </p>
<p>
<b>Windows NT:</b> This function uses either Unicode characters or 8-bit characters from the console's current code page. The console's code page defaults initially to the system's OEM code page. To change the console's code page, use the <b>SetConsoleCP</b> or <b>SetConsoleOutputCP</b> functions, or use the <b>chcp</b> or <b>mode con cp select=</b> commands.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincon.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="conchar_4p6c.htm">Consoles and Character-Mode Support Overview</a>, <a href="conchar_3vg3.htm">Console Functions</a>, <a href="conchar_8sfm.htm"><b>CHAR_INFO</b></a>, <a href="conchar_22eo.htm"><b>SetConsoleCP</b></a>, <a href="conchar_5jjk.htm"><b>SetConsoleOutputCP</b></a>, <a href="conchar_84mn.htm"><b>SetConsoleWindowInfo</b></a>, <a href="conchar_5wtu.htm"><b>SMALL_RECT</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
