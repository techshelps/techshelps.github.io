<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PARTITION_INFORMATION</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_partition_information_str"></a>PARTITION_INFORMATION</h1>
<p>
The <b>PARTITION_INFORMATION</b> structure provides information about a disk partition. </p>
<pre><code>typedef struct _PARTITION_INFORMATION {
    LARGE_INTEGER StartingOffset;
    LARGE_INTEGER PartitionLength;
    DWORD HiddenSectors;
    DWORD PartitionNumber;
    BYTE  PartitionType;
    BOOLEAN BootIndicator;
    BOOLEAN RecognizedPartition;
    BOOLEAN RewritePartition;
} PARTITION_INFORMATION, *PPARTITION_INFORMATION;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>StartingOffset</b></dt>
<dd>
Specifies the starting offset of the partition. </dd>
<dt>
<b>PartitionLength</b></dt>
<dd>
Specifies the length of the partition. </dd>
<dt>
<b>HiddenSectors</b></dt>
<dd>
Specifies the number of hidden sectors in the partition. </dd>
<dt>
<b>PartitionNumber</b></dt>
<dd>
Specifies the number of the partition (1-based).</dd>
<dt>
<b>PartitionType</b></dt>
<dd>
Specifies the type of partition. This member can be one of the following values:  
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=46%>Value</th>
<th align=left width=54%>Meaning</th>
</tr>
<tr valign=top>
<td width=46%>PARTITION_ENTRY_UNUSED</td>
<td width=54%>Entry unused.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_FAT_12</td>
<td width=54%>Specifies a partition with 12-bit FAT entries.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_XENIX_1</td>
<td width=54%>Specifies a Xenix type 1 partition.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_XENIX_2</td>
<td width=54%>Specifies a Xenix type 2 partition.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_FAT_16</td>
<td width=54%>Specifies a partition with 16-bit FAT entries.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_EXTENDED</td>
<td width=54%>Specifies an extended partition entry.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_HUGE</td>
<td width=54%>Specifies an MS-DOS V4 huge partition.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_IFS</td>
<td width=54%>Specifies an IFS partition.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_PREP</td>
<td width=54%>Specifies a PowerPC Reference Platform partition.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_UNIX</td>
<td width=54%>Specifies a UNIX partition.</td>
</tr>
<tr valign=top>
<td width=46%>VALID_NTFT</td>
<td width=54%>Specifies an NTFT partition.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_XINT13</td>
<td width=54%><b>Windows 95 and Windows 98: </b>Specifies a partition that uses extended int13 services.</td>
</tr>
<tr valign=top>
<td width=46%>PARTITION_XINT13_EXTENDED</td>
<td width=54%><b>Windows 95 and Windows 98: </b>Same as PARTITION_EXTENDED, but uses extended int13 services.</td>
</tr>
</table><br>

</dd>
<dt>
<b>BootIndicator</b></dt>
<dd>
Specifies whether the partition is bootable. </dd>
<dt>
<b>RecognizedPartition</b></dt>
<dd>
Specifies whether the partition is recognized. </dd>
<dt>
<b>RewritePartition</b></dt>
<dd>
Specifies whether the partition information has changed. When you change a partition (with IOCTL_DISK_SET_DRIVE_LAYOUT), the system uses this member to determine which partitions have changed and need their information rewritten.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>DeviceIoControl</b> function receives a <b>PARTITION_INFORMATION</b> structure in response to an <b>IOCTL_DISK_GET_PARTITION_INFO</b> or <b>IOCTL_DISK_GET_DRIVE_LAYOUT</b> device input and output control (IOCTL) operation. The <b>DeviceIoControl</b> function uses a <b>PARTITION_INFORMATION</b> structure as input to an <b>IOCTL_DISK_SET_DRIVE_LAYOUT</b> device IOCTL operation. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winioctl.h.</p>
<h4>See Also</h4>
<p>
<a href="devio_23ec.htm">Device Input and Output Overview</a>, <a href="devio_8j77.htm">Device Input and Output Structures</a>, <a href="devio_9quk.htm"><b>DeviceIoControl</b></a>, <a href="devio_5xdg.htm"><b>IOCTL_DISK_GET_DRIVE_LAYOUT</b></a>, <a href="devio_0nsf.htm"><b>IOCTL_DISK_GET_PARTITION_INFO</b></a>, <a href="devio_7sms.htm"><b>IOCTL_DISK_SET_DRIVE_LAYOUT</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
