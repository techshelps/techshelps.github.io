<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>String Resources</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_string_resources"></a>String Resources</h2>
<p>
An application that maintains character strings in resources can be translated into new languages with minimum effort. Instead of searching for strings in the source modules, you can simply translate the strings in the resource file and relink the application. In addition, using string resources simplifies creation of Unicode and non-Unicode versions of the application from the same source files. </p>
<p>
The <a href="strings_6j53.htm"><b>LoadString</b></a> function loads a string resource from an application's executable file. The <a href="strings_0sdh.htm"><b>FormatMessage</b></a> function loads a string resource and interprets formatting options that may be embedded in the string. </p>
<p>
Win32-based resources in binary form are stored in Unicode format. When loading resources, applications can use the Unicode version of the resource functions (<b>LoadStringW</b>, for example) to obtain resources as Unicode data. </p>
<p>&nbsp;</p></body>
</HTML>
