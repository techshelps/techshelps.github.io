<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetProcessHeaps</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getprocessheaps"></a>GetProcessHeaps</h1>
<p>
The <b>GetProcessHeaps</b> function obtains handles to all of the heaps that are valid for the calling process.</p>
<pre><code><b>DWORD GetProcessHeaps(
  DWORD</b><i> NumberOfHeaps</i><b>,  </b>// maximum number of heap handles buffer can 
                        // receive
<b>  PHANDLE</b><i> ProcessHeaps</i>  // pointer to buffer to receive heap handles
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>NumberOfHeaps</i></dt>
<dd>
Specifies the maximum number of heap handles that can be stored into the buffer pointed to by <i>ProcessHeaps</i>. </dd>
<dt>
<i>ProcessHeaps</i></dt>
<dd>
Pointer to a buffer to receive an array of heap handles.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value is the number of heap handles that are valid for the calling process. </p>
<p>
If the return value is less than or equal to <i>NumberOfHeaps</i>, it is also the number of heap handles stored into the buffer pointed to by <i>ProcessHeaps</i>.</p>
<p>
If the return value is greater than <i>NumberOfHeaps</i>, the buffer pointed to by <i>ProcessHeaps</i> is too small to hold all the valid heap handles of the calling process.The function will have stored no handles into that buffer. In this situation, use the return value to allocate a buffer that is large enough to receive the handles, and call the function again.</p>
<p>
If the return value is zero, the function has failed, because every process has at least one valid heap, the process heap. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
Use the <a href="memman_5u7k.htm"><b>GetProcessHeap</b></a><b> </b>function to obtain a handle to the process heap of the calling process. The <b>GetProcessHeaps </b>function obtains a handle to that heap, plus handles to any additional private heaps created by calling the <a href="memman_5z6t.htm"><b>HeapCreate</b></a><b> </b>function.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.5 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="memman_6oz8.htm">Memory Management Overview</a>, <a href="memman_60kz.htm">Memory Management Functions</a>, <a href="memman_5u7k.htm"><b>GetProcessHeap</b></a>, <a href="memman_5z6t.htm"><b>HeapCreate</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
