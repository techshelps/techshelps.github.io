<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processing the WM_RENDERFORMAT and WM_RENDERALLFORMATS Messages</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_processing_the_wm_renderformat_and_wm_renderallformats_messages"></a>Processing the WM_RENDERFORMAT and WM_RENDERALLFORMATS Messages</h3>
<p>
If a window passes a NULL handle to the <a href="clipbrd_4pup.htm"><b>SetClipboardData</b></a> function, it must process the <a href="clipbrd_3lpw.htm">WM_RENDERFORMAT</a> and <a href="clipbrd_194j.htm">WM_RENDERALLFORMATS</a> messages to render data upon request. </p>
<p>
If the WM_RENDERFORMAT message delayed rendering a specific format and an application requested data in that format, the message is sent to the clipboard owner. If the WM_RENDERFORMAT message has delayed rendering one or more formats, the message is sent to the clipboard owner before it is destroyed. </p>
<p>
To render a clipboard format, the window procedure must place a data handle on the clipboard by using the <b>SetClipboardData</b> function. It must not open the clipboard before calling <b>SetClipboardData</b>. </p>
<p>
The Label application processes the <a href="clipbrd_3lpw.htm">WM_RENDERFORMAT</a> and <a href="clipbrd_194j.htm">WM_RENDERALLFORMATS</a> messages as follows. </p>
<pre><code>case WM_RENDERFORMAT: 
    RenderFormat((UINT) wParam); 
    break; 
 
case WM_RENDERALLFORMATS: 
    RenderFormat(uLabelFormat); 
    RenderFormat(CF_TEXT); 
    break; 
 </code></pre>
<p>
In both cases, the window procedure calls the application-defined RenderFormat function, defined as follows. </p>
<pre><code>void WINAPI RenderFormat(UINT uFormat) 
{ 
    HGLOBAL hglb; 
    PLABELBOX pbox; 
    LPTSTR  lptstr; 
    int cch; 
 
    if (pboxLocalClip == NULL) 
        return; 
 
    if (uFormat == CF_TEXT) 
    { 
        // Allocate a buffer for the text. 
 
        cch = pboxLocalClip-&gt;cchLabel; 
        hglb = GlobalAlloc(GMEM_DDESHARE, 
            (cch + 1) * sizeof(TCHAR)); 
        if (hglb == NULL) 
            return; 
 
        // Copy the text from pboxLocalClip. 
 
        lptstr = GlobalLock(hglb); 
        memcpy(lptstr, pboxLocalClip-&gt;atchLabel, 
            cch * sizeof(TCHAR)); 
        lptstr[cch] = (TCHAR) 0; 
        GlobalUnlock(hglb); 
 
        // Place the handle on the clipboard. 
 
        SetClipboardData(CF_TEXT, hglb); 
    } 
    else if (uFormat == uLabelFormat) 
    { 
        hglb = GlobalAlloc(GMEM_DDESHARE, sizeof(LABELBOX)); 
        if (hglb == NULL) 
            return; 
        pbox = GlobalLock(hglb); 
        memcpy(pbox, pboxLocalClip, sizeof(LABELBOX)); 
        GlobalUnlock(hglb); 
 
        SetClipboardData(uLabelFormat, hglb); 
    } 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
