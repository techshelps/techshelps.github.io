<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Backing Up Encrypted Files</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_backing_up_encrypted_files"></a>Backing Up Encrypted Files</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Because backup operators typically do not have access to users' cryptographic keys, operators cannot encrypt and decrypt users' files. Therefore, backup operators must use raw mode to perform backup and restore operations on encrypted files. When reading in raw mode, the system returns the data in all streams as a single stream of encrypted bytes. When writing in raw mode, the caller must return the stream of encrypted bytes exactly as it was read. EFS reconstructs the encrypted file.</p>
<p>
Raw file data does not contain security or property set information for the file. Backup operators must obtain and back up this information separately for encrypted files. Neither the security nor the property set information is encrypted, so it may be read and written as for any other file. </p>
<p>
A backup application performing operations on an encrypted file must first call the <a href="fsys_9yd3.htm"><b>OpenRaw</b></a> function to get a system-defined context block. This context block is used as a parameter to the other raw-mode backup functions. To back up the file, make a single call to the <a href="fsys_1vhz.htm"><b>ReadRaw</b></a> function, providing the context block and a pointer to an export callback function. The system calls the callback function with blocks of file data until all data has been processed.</p>
<p>
Restoring an encrypted file is similar to backing it up. To restore the file, make a single call to the <a href="fsys_4do7.htm"><b>WriteRaw</b></a> function, providing the context block and a pointer to an import callback function. The system calls the callback function, and the application fills in file data until all data has been processed. </p>
<p>
The <a href="fsys_9yd3.htm"><b>OpenRaw</b></a>, <a href="fsys_1vhz.htm"><b>ReadRaw</b></a>, and <a href="fsys_4do7.htm"><b>WriteRaw</b></a> function parameters also include an application-defined context block. You can use this block for internal tracking of information, such as the file handle and the current offset in the file. </p>
<p>
When the operation is complete call the <a href="fsys_3vav.htm"><b>CloseRaw</b></a> function to free allocated system resources and close the file.</p>
<p>&nbsp;</p></body>
</HTML>
