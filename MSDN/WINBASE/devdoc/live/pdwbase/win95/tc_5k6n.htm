<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Limitations on What a Target DLL Can Do</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win95_limitations_on_what_a_target_dll_can_do"></a>Limitations on What a Target DLL Can Do</h2>
<p>
Before debugging your thunks, keep in mind that there are some limitations on what a target DLL can do from code executed through a thunk. Common specific limitations include:
<ul>
<li>
You cannot create threads inside a thunk from a 16-bit Windows-based application to a Win32-based DLL.</li>
<li>
The code inside Win32-based DLLs called by thunks should require little stack space because the calling 16-bit processes have much smaller stacks than do 32-bit processes.</li>
<li>
16-bit DLLs that contain interrupt service routines (ISRs) must not thunk to Win32-based DLLs while handling interrupts.</li>
<li>
Win32-based applications must not pass pointers to data located on the stack as parameters of thunks; nor can they call 16-bit DLLs that switch stacks.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
