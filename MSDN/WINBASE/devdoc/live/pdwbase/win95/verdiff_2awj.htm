<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Window Management Differences</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win95_window_management_differences"></a>Window Management Differences</h1>
<p>
When a version 4.0 application uses the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_setwindowlong">
</object><a href=JavaScript:alink_1.Click()><b>SetWindowLong</b></a> function (with GWL_STYLE) to change a window's style, Windows 95 sends the window a WM_STYLECHANGING message before changing the style. The message's <i>lParam</i> parameter is the address of a <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_stylestruct_str">
</object><a href=JavaScript:alink_2.Click()><b>STYLESTRUCT</b></a> structure. The <b>styleOld</b> and <b>styleNew</b> members of the structure specify the old and new styles. By processing WM_STYLECHANGING, an application can inspect the styles and perhaps change them. </p>
<p>
Windows 95 sends the WM_STYLECHANGED message after changing the style. Again, the <i>lParam</i> parameter is the address of a <b>STYLESTRUCT</b> structure that specifies the new styles. The application can use WM_STYLECHANGED to update any style-dependent information stored in the application's internal data structures.</p>
<p>
Windows 95, however, does not send the WM_STYLECHANGING and WM_STYLECHANGED messages to a version 3.<i>x</i> application. </p>
<p>
A version 4.0 application cannot use the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_setwindowlong">
</object><a href=JavaScript:alink_3.Click()><b>SetWindowLong</b></a> function to set the WS_EX_TOPMOST style for a window or to remove the style from a window. The application must use the <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_setwindowpos">
</object><a href=JavaScript:alink_4.Click()><b>SetWindowPos</b></a> function to set or remove the WS_EX_TOPMOST style.</p>
<p>
Windows 95 automatically adds and removes the WS_EX_WINDOWEDGE style for windows in both version 3.<i>x</i> and 4.0 applications. In a version 3.<i>x</i> application, Windows 95 adds the WS_EX_WINDOWEDGE style to a window if, in version 3.1, the window would have a dialog border or a sizable border. Windows 95 removes the WS_EX_WINDOWEDGE style if the window's style changes so that it would no longer have a dialog border or sizable border in version 3.1. Windows 95 uses similar criteria for adding and removing the WS_EX_WINDOWEDGE style for a Windows version 4.0 application, except that any window that has a title bar receives the WS_EX_WINDOWEDGE style, regardless of the window's other border styles. </p>
<p>
When the user drags the icon of a minimized window created by a version 3.<i>x</i> application, Windows 95 sends the window a WM_QUERYDRAGICON message to retrieve the cursor to use while dragging. Windows 95 also sends WM_QUERYDRAGICON to retrieve the icon to display in the task-switch window that appears when the user presses the alt+tab key combination. Windows 95 does not send WM_QUERYDRAGICON to a window created by a version 4.0 application. Instead, the application is expected either to use the WM_SETICON and WM_GETICON messages or to set the big and small icons when registering the window class. </p>
<p>
When a window in a version 4.0 application loses the mouse capture as a result of a call to the <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_setcapture">
</object><a href=JavaScript:alink_5.Click()><b>SetCapture</b></a> function, the window receives a WM_CAPTURECHANGED message, but Windows 95 sends the message asynchronously. In other words, the window receives the message, but possibly not right away. Some of the ways in which a window can lose the mouse capture include: 
<ul>
<li>
The user activated a different application by clicking one of its windows.</li>
<li>
The <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_defwindowproc">
</object><a href=JavaScript:alink_6.Click()><b>DefWindowProc</b></a> function changed the capture in response to a WM_CANCELMODE message.</li>
<li>
Another window using the same message queue called the <b>SetCapture</b> function. (All 16-bit applications share the same queue, but each 32-bit thread has its own queue.)</li>
</ul>
<p>
If a child window in a version 3.<i>x</i> application has the WS_EX_NOPARENTNOTIFY style, Windows 95 disregards the style when the user clicks the child window. That is, Windows 95 sends the WM_PARENTNOTIFY message to all windows in the parent chain regardless of whether the child window has the WS_EX_NOPARENTNOTIFY style. If a child window in a version 4.0 application has this style, Windows 95 does not send WM_PARENTNOTIFY messages when the user clicks the child window.</p>
<p>
In a version 3.<i>x</i> application, it is possible for the horizontal coordinate on the left side of a window's client area to be greater than that on the right side. This happens because version 3.<i>x</i> sometimes incorrectly handles an empty client rectangle that contains a vertical scroll bar. (Fixing the problem would cause some applications to generate general protection faults.) In a version 4.0 application, it is not possible for the horizontal coordinate of the left side of a client area to be greater than that of the right side. </p>
<p>&nbsp;</p></body>
</HTML>
