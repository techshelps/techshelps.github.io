<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Level 0 Lock</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win95_level_0_lock"></a>Level 0 Lock</h2>
<p>
The level 0 lock cannot be obtained on volumes that have any open files or handles. This restriction includes handles returned by the Windows <a href="../filesio_4qcl.htm"><b>FindFirstFile</b></a> and <a href="../filesio_9hgu.htm"><b>FindFirstChangeNotification</b></a> functions. Because the system always has open files, an application cannot take a level 0 lock on the drive that contains the Windows 95 system files. The locking hierarchy can be used on volumes with open files and handles. If the system fails a level 0 lock request because of open files, an application can obtain a list of all the open files on the volume by calling Enumerate Open Files (<a href="95func_9s2w.htm">Interrupt 21h Function 440Dh Minor Code 6Dh</a>).</p>
<p>
Before returning from the call to lock the volume, Windows 95 flushes to disk all data from the file system cache. To ensure that the disk and file system remain in a consistent state, the system puts the cache into write-through mode so that it can immediately commit to disk all data from file write operations. If an application has obtained a lock on a child volume, the system does not automatically flush the file system cache after a write operation to the parent volume. To ensure that the cache is flushed when opening files with Open or Create File (<a href="95func_2i3s.htm">Interrupt 21h Function 716Ch</a>), an application should specify the OPEN_FLAGS_NO_BUFFERING (0100h) value. If a file has not been opened with OPEN_FLAGS_NO_BUFFERING or Absolute Disk Write (Interrupt 26h) has been used to write to the parent volume, an application should call Reset Drive (<a href="95func_1z6w.htm">Interrupt 21h Function 710Dh</a>) to flush the cache.</p>
<p>
After a process obtains a level 0 lock, the system only allows the lock owner to have access to the volume. The system fails all read operations, write operations, and new file mappings by other processes until the lock owner releases the lock. An application should use a level 0 lock whenever possible, because it guarantees that no other process can access the locked volume.</p>
<p>
An application that formats volumes must obtain a more restrictive mode of the level 0 lock. To format a volume, the application should follow these steps:
<ol>
<li>
Call the lock volume function to obtain a level 0 lock.</li>
<li>
Do any needed file system I/O that uses the Interrupt 21h file handle I/O functions while in the level 0 lock.</li>
<li>
Call the lock volume function a second time to obtain the more restrictive level 0 lock for formatting. When calling the lock volume function the second time, an application should specify 0 as the lock level and specify 4 in the permissions. The application, however, must already own the level 0 lock to obtain this lock.</li>
<li>
Format the disk using the Interrupt 21h IOCTL functions (such as Read/Write/Format/Verify Track on Logical Drive or Get/Set Device Parameters). Interrupt 13h will work too, but it is not the preferred method for performance reasons. The system allows direct disk I/O, but it fails all other file system I/O that uses the Interrupt 21h file handle I/O functions while the restrictive level 0 lock is in effect.</li>
<li>
Release the level 0 lock for formatting. An application is still in a level 0 lock at this point. Before the application releases this lock, the disk must be in a state that would be recognizable as normal FAT media. Otherwise, the functions mentioned in step 6 will not work.</li>
<li>
Resume normal file system I/O using the Interrupt 21h file handle I/O functions.</li>
<li>
Release the level 0 lock.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
