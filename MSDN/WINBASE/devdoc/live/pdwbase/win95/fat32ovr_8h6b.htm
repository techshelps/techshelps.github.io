<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FAT32 File System Functions</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win95_fat32_file_system_functions"></a>FAT32 File System Functions</h2>
<p>
The FAT32 file system supports the following new Int 21h functions and updated IOCTL functions.</p>
<h4>New Int 21h Functions</h4>
<p>
Several new interrupt 21h functions were implemented to support FAT32 media. These additions are effective for Windows 95 OEM Service Release 2 and later. </p>
<p>
The new Interrupt 21h Function 730X functions can be called using the <a href="../devio_9quk.htm"><b>DeviceIoControl</b></a> function. <b>DeviceIoControl</b> has been updated to support VWIN32_DIOC_DOS_DRIVEINFO, a new control code for Interrupt 21h Function 730X functions. </p>
<p>
For more information, see <a href="devio_2b1v.htm"><b>Using VWIN32 to Carry Out MS-DOS Functions</b></a>. </p>
<p>
The following new interrupt 21h functions have been implemented:</p>
<p>
Int21h Function 7302h Get_ExtDPB (FAT32)<br>
Int21h Function 7303h Get_ExtFreeSpace (FAT32)<br>
Int21h Function 7304h Set_DPBForFormat (FAT32)<br>
SetDPB_SetAllocInfo (FAT32)<br>
SetDPB_SetDPBFrmBPB (FAT32)<br>
SetDPB_ForceMediaChng (FAT32)<br>
SetDPB_GetSetActFATandMirr (FAT32)<br>
SetDPB_GetSetRootDirClus (FAT32)<br>
Int21h Function 7305h Ext_ABSDiskReadWrite (FAT32)</p>
<h4>Updated IOCTL Functions</h4>
<p>
All IOCTL functions have been modified to accept a new device category value (CH = 48h) for FAT32 drives. These changes are effective for Windows 95 OEM Service Release 2 and later. </p>
<p>
Most of the 08h and 48h forms of each function accept identical parameters. In some cases, the two forms of the call (48h and 08h) are interchangeable. However, this is not always true. As a result, applications that call the 48h form of the function must be prepared to fall back on the 08h form, in case of failure. Please refer to each specific function for information regarding these values. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=43%>Set Device Parameters</td>
<td width=57%>Int 21h Function 440Dh Minor Code 40h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Write Track on Logical Drive</td>
<td width=57%>Int 21h Function 440Dh Minor Code 41h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Format Track on Logical Drive</td>
<td width=57%>Int 21h Function 440Dh Minor Code 42h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Set Media ID</td>
<td width=57%>Int 21h Function 440Dh Minor Code 46h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Set Access Flag</td>
<td width=57%>Int 21h Function 440Dh Minor Code 47h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Lock/Unlock Removable Media</td>
<td width=57%>Int 21h Function 440Dh Minor Code 48h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Eject Removable Media</td>
<td width=57%>Int 21h Function 440Dh Minor Code 49h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Lock Logical Volume</td>
<td width=57%>Int 21h Function 440Dh Minor Code 4Ah (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Lock Physical Volume</td>
<td width=57%>Int 21h Function 440Dh Minor Code 4Bh (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Get Device Parameters</td>
<td width=57%>Int 21h Function 440Dh Minor Code 60h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Read Track on Logical Drive</td>
<td width=57%>Int 21h Function 440Dh Minor Code 61h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Verify Track on Logical Drive</td>
<td width=57%>Int 21h Function 440Dh Minor Code 62h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Get Media ID</td>
<td width=57%>Int 21h Function 440Dh Minor Code 66h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Get Access Flag</td>
<td width=57%>Int 21h Function 440Dh Minor Code 67h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Sense Media Type</td>
<td width=57%>Int 21h Function 440Dh Minor Code 68h (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Unlock Logical Volume</td>
<td width=57%>Int 21h Function 440Dh Minor Code 6Ah (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Unlock Physical Volume</td>
<td width=57%>Int 21h Function 440Dh Minor Code 6Bh (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Get Lock Flag State</td>
<td width=57%>Int 21h Function 440Dh Minor Code 6Ch (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Enumerate Open Files</td>
<td width=57%>Int 21h Function 440Dh Minor Code 6Dh (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Find Swap File</td>
<td width=57%>Int 21h Function 440Dh Minor Code 6Eh (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Get Drive Map Info</td>
<td width=57%>Int 21h Function 440Dh Minor Code 6Fh (FAT32) </td>
</tr>
<tr valign=top>
<td width=43%>Get Lock Level</td>
<td width=57%>Int 21h Function 440Dh Minor Code 70h (FAT32)</td>
</tr>
<tr valign=top>
<td width=43%>Get First Cluster</td>
<td width=57%>Int 21h Function 440Dh Minor Code 71h (FAT32) </td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
