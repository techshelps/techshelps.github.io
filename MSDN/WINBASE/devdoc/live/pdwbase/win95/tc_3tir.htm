<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Common Problems</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win95_common_thunking_problems"></a>Common Thunking Problems</h2>
<p>
This topic describes two common problems that can occur when thunking is implemented, and describes their likely causes.</p>
<ul>
<li>
The 32-bit DLL will not load.<p>
The Windows 95 loader requires that the 16-bit DLL be marked with version 4.0 or later. In addition, you must mark <b>DllMain</b> with the RESIDENTNAME modifier.
<p>
To check the version number, run the Microsoft EXE File Header Utility (EXEHDR), using the following command line: 
<pre><code>exehdr -v &lt;your-16-bit-DLL&gt;
 </code></pre>
<p>
The output should contain the following line: 
<pre><code>Operating system: Microsoft Windows - version 4.0
 </code></pre>
<p>
If the version number is earlier than 4.0, you should use RC.EXE from the Platform SDK to set the version of your 16-bit DLL correctly.
</li>
<li>
Loading the 16-bit DLL does not load the 32-bit DLL.<p>
This is by design. A 32-bit DLL does not load into a process context until that process calls its first 16-bit to 32-bit thunk. For more information, see <a href="tc_2xuv.htm">Late Loading</a>.
<p>
If this feature is incompatible with your DLL design, you may disable it by including the following line in your thunk script.
<pre><code>preload32 = true;
 </code></pre>
</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
