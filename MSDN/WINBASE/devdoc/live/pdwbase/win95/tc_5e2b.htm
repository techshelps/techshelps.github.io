<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Thunk Script Keywords</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win95_thunk_script_keywords"></a>Thunk Script Keywords</h3>
<p>
You can use keywords in the thunk script to provide information to the thunk compiler beyond that which the C-style type definitions and function prototypes provide. These keywords enable you to optimize DLL loading and parameter translation. The thunk compiler supports the following keywords in the thunk script. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Keyword</th>
<th align=left width=55%>Meaning</th>
</tr>
<tr valign=top>
<td width=45%><b>enablemapdirect1632=true;</b></td>
<td width=55%>Specifies a 16-bit to 32-bit thunk.</td>
</tr>
<tr valign=top>
<td width=45%><b>enablemapdirect3216=true;</b></td>
<td width=55%>Specifies a 32-bit to 16-bit thunk.</td>
</tr>
<tr valign=top>
<td width=45%><b>input</b></td>
<td width=55%>The parameter is used for input only; it is translated when the function is called.</td>
</tr>
<tr valign=top>
<td width=45%><b>output</b></td>
<td width=55%>The parameter is used for output only; it is translated when the function returns. </td>
</tr>
<tr valign=top>
<td width=45%><b>inout</b></td>
<td width=55%>The parameter is used for input and output; it is translated when the function is called and when it returns. </td>
</tr>
<tr valign=top>
<td width=45%><b>faulterrorcode</b></td>
<td width=55%>Specifies the error code when a 16-bit to 32-bit thunk fails because the 32-bit DLL cannot load or initialize. This value is returned when the application calls the first thunk. For more information, see <a href="tc_2xuv.htm">Late Loading</a>. </td>
</tr>
<tr valign=top>
<td width=45%><b>preload32</b></td>
<td width=55%>Forces the 32-bit thunk DLL to load when the 16-bit thunk DLL is loaded in a 16-bit to 32-bit thunk.</td>
</tr>
<tr valign=top>
<td width=45%><b>preload16</b></td>
<td width=55%>Not used. Late loading of a 16-bit DLL in a 32-bit to 16-bit thunk is not supported.</td>
</tr>
<tr valign=top>
<td width=45%><b>win31compat</b></td>
<td width=55%>Defers unloading a 32-bit thunk DLL until the process terminates. For more information, see <a href="tc_0ak3.htm">Compatibility with Existing 16-bit DLLs</a>. </td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
