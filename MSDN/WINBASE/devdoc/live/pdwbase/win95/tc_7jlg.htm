<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Thunk Script</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win95_creating_a_thunk_script"></a>Creating a Thunk Script</h2>
<p>
The thunk compiler takes an input file called a <i>thunk script</i>. Thunk scripts contain C-style type definitions and prototypes of the functions that are to be called through the thunk. Thunk scripts usually have a .THK filename extension. </p>
<p>
To create 32-bit to 16-bit thunks, place the following line at the beginning of the thunk script: </p>
<pre><code>enablemapdirect3216 = true;     // Creates 32-&gt;16 thunks. 
</code></pre>
<p>
Alternatively, to create 16-bit to 32-bit thunks, place the following line at the beginning of the thunk script: </p>
<pre><code>enablemapdirect1632 = true;     // Creates 16-&gt;32 thunks. 
</code></pre>
<p>
If you need to create both types of thunks, you must create two thunk scripts, one for 32-bit to16-bit thunks and the other for 16-bit to 32-bit thunks. </p>
<p>
The remainder of the thunk script contains type definitions, followed by prototypes of the thunk functions. For an example of a simple thunk script, suppose we are calling the following 32-bit function from a 16-bit application: </p>
<pre><code>BOOL WINAPI Sample(int n)
{
    // ...
}
 </code></pre>
<p>
The corresponding thunk script would look like this: </p>
<pre><code>enablemapdirect1632=true;

typedef bool BOOL; 
 
BOOL Sample(int n) 
{ 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
