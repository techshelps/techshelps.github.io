<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging Strategy</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win95_strategy_for_debugging_thunks"></a>Strategy For Debugging Thunks</h2>
<p>
The best strategy for debugging thunks is to divide the task into small, manageable tests. This approach is relatively easy and can eliminate most problems, without requiring advanced debugging techniques, such as tracing through assembly language code in a system-level debugger. Flat thunks consist of a Win32-based DLL and a 16-bit DLL, so it is possible to test each of these in isolation before testing them together. Create a 16-bit Windows-based application to test the 16-bit DLL, and create a Win32-based application to test the Win32-based DLL. Doing so allows you to use a wide variety of debugging tools to verify that each side works properly.</p>
<p>&nbsp;</p></body>
</HTML>
