<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supported and Unsupported Calling Conventions</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win95_supported_and_unsupported_calling_conventions"></a>Supported and Unsupported Calling Conventions</h3>
<p>
The thunk compiler supports thunk functions that follow these guidelines for calling convention and parameters: 
<ul>
<li>
Use the __stdcall calling convention on the 32-bit side of the thunk </li>
<li>
Use the __pascal calling convention on the 16-bit side of the thunk </li>
<li>
Contain 14 or fewer parameters </li>
</ul>
<p>
If you try to build a thunk that uses an unsupported calling convention, the linker will return the error "unresolved external" because the function names produced by the C/C++ compiler will not match the names produced by the thunk compiler. Although the thunk must use the __pascal and __stdcall calling conventions, the thunk may call or be called by functions that use other calling conventions.</p>
<p>
To thunk to a function that uses the __cdecl or __fastcall calling convention, you must create the thunk function with a supported calling convention. Then make the thunk function call the target function. </p>
<p>&nbsp;</p></body>
</HTML>
