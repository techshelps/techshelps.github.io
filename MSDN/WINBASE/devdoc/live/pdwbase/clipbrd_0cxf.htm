<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Standard Clipboard Formats</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_standard_clipboard_formats"></a>Standard Clipboard Formats</h3>
<p>
The clipboard formats defined by the system are called <i>standard clipboard formats</i>. These clipboard formats are described in the following table.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Value</th>
<th align=left width=59%>Meaning</th>
</tr>
<tr valign=top>
<td width=41%>CF_BITMAP</td>
<td width=59%>A handle to a bitmap (<b>HBITMAP</b>).</td>
</tr>
<tr valign=top>
<td width=41%>CF_DIB</td>
<td width=59%>A memory object containing a <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_bitmapinfo_str">
</object><a href=JavaScript:alink_1.Click()><b>BITMAPINFO</b></a> structure followed by the bitmap bits.</td>
</tr>
<tr valign=top>
<td width=41%>CF_DIBV5</td>
<td width=59%><b>Windows NT 5.0:</b> A memory object containing a <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_bitmapv5header_str">
</object><a href=JavaScript:alink_2.Click()><b>BITMAPV5HEADER</b></a> structure followed by the bitmap color space information and the bitmap bits.</td>
</tr>
<tr valign=top>
<td width=41%>CF_DIF</td>
<td width=59%>Software Arts' Data Interchange Format.</td>
</tr>
<tr valign=top>
<td width=41%>CF_DSPBITMAP</td>
<td width=59%>Bitmap display format associated with a private format. The <i>hMem</i> parameter must be a handle of data that can be displayed in bitmap format in lieu of the privately formatted data.</td>
</tr>
<tr valign=top>
<td width=41%>CF_DSPENHMETAFILE</td>
<td width=59%>Enhanced metafile display format associated with a private format. The <i>hMem</i> parameter must be a handle of data that can be displayed in enhanced metafile format in lieu of the privately formatted data.</td>
</tr>
<tr valign=top>
<td width=41%>CF_DSPMETAFILEPICT</td>
<td width=59%>Metafile-picture display format associated with a private format. The <i>hMem</i> parameter must be a handle of data that can be displayed in metafile-picture format in lieu of the privately formatted data.</td>
</tr>
<tr valign=top>
<td width=41%>CF_DSPTEXT</td>
<td width=59%>Text display format associated with a private format. The <i>hMem</i> parameter must be a handle of data that can be displayed in text format in lieu of the privately formatted data.</td>
</tr>
<tr valign=top>
<td width=41%>CF_ENHMETAFILE</td>
<td width=59%>A handle of an enhanced metafile (<b>HENHMETAFILE</b>).</td>
</tr>
<tr valign=top>
<td width=41%>CF_GDIOBJFIRST through CF_GDIOBJLAST</td>
<td width=59%>Range of integer values for application-defined GDI object clipboard formats. Handles associated with clipboard formats in this range are not automatically deleted using the <a href="memman_38kl.htm"><b>GlobalFree</b></a> function when the clipboard is emptied. Also, when using values in this range, the <i>hMem</i> parameter is not a handle to a GDI object, but is a handle allocated by the <a href="memman_66qr.htm"><b>GlobalAlloc</b></a> function with the GMEM_DDESHARE and GMEM_MOVEABLE flags.</td>
</tr>
<tr valign=top>
<td width=41%>CF_HDROP</td>
<td width=59%>A handle of type <b>HDROP</b> that identifies a list of files. An application can retrieve information about the files by passing the handle to the <b>DragQueryFile</b> functions. </td>
</tr>
<tr valign=top>
<td width=41%>CF_LOCALE</td>
<td width=59%>The data is a handle to the locale identifier associated with text in the clipboard. When you close the clipboard, if it contains CF_TEXT data but no CF_LOCALE data, the system automatically sets the CF_LOCALE format to the current input locale. You can use the CF_LOCALE format to associate a different locale with the clipboard text.<p>
An application that pastes text from the clipboard can retrieve this format to determine which character set was used to generate the text.</p>
<p>
Note that the clipboard does not support plain text in multiple character sets. To achieve this, use a fomatted text data type such as RTF instead.</p>
<p>
<b>Windows NT:</b> The system uses the code page associated with CF_LOCALE to implicitly convert from CF_TEXT to CF_UNICODETEXT. Therefore, the correct code page table is used for the conversion.</p>
</td>
</tr>
<tr valign=top>
<td width=41%>CF_METAFILEPICT</td>
<td width=59%>Handle of a metafile picture format as defined by the <a href="clipbrd_429e.htm"><b>METAFILEPICT</b></a> structure. When passing a CF_METAFILEPICT handle by means of dynamic data exchange (DDE), the application responsible for deleting <i>hMem</i> should also free the metafile referred to by the CF_METAFILEPICT handle.</td>
</tr>
<tr valign=top>
<td width=41%>CF_OEMTEXT</td>
<td width=59%>Text format containing characters in the OEM character set. Each line ends with a carriage return/linefeed (CR-LF) combination. A null character signals the end of the data.</td>
</tr>
<tr valign=top>
<td width=41%>CF_OWNERDISPLAY</td>
<td width=59%>Owner-display format. The clipboard owner must display and update the clipboard viewer window, and receive the <a href="clipbrd_3c11.htm">WM_ASKCBFORMATNAME</a>, <a href="clipbrd_4ndw.htm">WM_HSCROLLCLIPBOARD</a>, <a href="clipbrd_1p0k.htm">WM_PAINTCLIPBOARD</a>, <a href="clipbrd_8c84.htm">WM_SIZECLIPBOARD</a>, and <a href="clipbrd_1tus.htm">WM_VSCROLLCLIPBOARD</a> messages. The <i>hMem</i> parameter must be NULL.</td>
</tr>
<tr valign=top>
<td width=41%>CF_PALETTE</td>
<td width=59%>Handle of a color palette. Whenever an application places data in the clipboard that depends on or assumes a color palette, it should place the palette on the clipboard as well.</td>
</tr>
<tr valign=top>
<td width=41%></td>
<td width=59%>If the clipboard contains data in the CF_PALETTE (logical color palette) format, the application should use the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_selectpalette">
</object><a href=JavaScript:alink_3.Click()><b>SelectPalette</b></a> and <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_realizepalette">
</object><a href=JavaScript:alink_4.Click()><b>RealizePalette</b></a> functions to realize (compare) any other data in the clipboard against that logical palette.</td>
</tr>
<tr valign=top>
<td width=41%></td>
<td width=59%>When displaying clipboard data, the clipboard always uses as its current palette any object on the clipboard that is in the CF_PALETTE format.</td>
</tr>
<tr valign=top>
<td width=41%>CF_PENDATA</td>
<td width=59%>Data for the pen extensions to the Microsoft® Windows® for Pen Computing.</td>
</tr>
<tr valign=top>
<td width=41%>CF_PRIVATEFIRST through CF_PRIVATELAST</td>
<td width=59%>Range of integer values for private clipboard formats. Handles associated with private clipboard formats are not freed automatically; the clipboard owner must free such handles, typically in response to the <a href="clipbrd_3ejo.htm">WM_DESTROYCLIPBOARD</a> message.</td>
</tr>
<tr valign=top>
<td width=41%>CF_RIFF</td>
<td width=59%>Represents audio data more complex than can be represented in a CF_WAVE standard wave format.</td>
</tr>
<tr valign=top>
<td width=41%>CF_SYLK</td>
<td width=59%>Microsoft Symbolic Link (SYLK) format.</td>
</tr>
<tr valign=top>
<td width=41%>CF_TEXT</td>
<td width=59%>Text format. Each line ends with a carriage return/linefeed (CR-LF) combination. A null character signals the end of the data. Use this format for ANSI text.</td>
</tr>
<tr valign=top>
<td width=41%>CF_WAVE</td>
<td width=59%>Represents audio data in one of the standard wave formats, such as 11 kHz or 22 kHz pulse code modulation (PCM).</td>
</tr>
<tr valign=top>
<td width=41%>CF_TIFF</td>
<td width=59%>Tagged-image file format.</td>
</tr>
<tr valign=top>
<td width=41%>CF_UNICODETEXT</td>
<td width=59%><b>Windows NT:</b> Unicode text format. Each line ends with a carriage return/linefeed (CR-LF) combination. A null character signals the end of the data.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
