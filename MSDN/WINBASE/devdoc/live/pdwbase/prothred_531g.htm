<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ExitThread</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_exitthread"></a>ExitThread</h1>
<p>
The <b>ExitThread</b> function ends a thread. </p>
<pre><code><b>VOID ExitThread(
  DWORD</b><i> dwExitCode</i>   // exit code for this thread
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwExitCode</i></dt>
<dd>
Specifies the exit code for the calling thread. Use the <a href="prothred_9350.htm"><b>GetExitCodeThread</b></a> function to retrieve a thread's exit code. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function does not return a value. </p>
<h4>Remarks</h4>
<p>
<b>ExitThread</b> is the preferred method of exiting a thread. When this function is called (either explicitly or by returning from a thread procedure), the current thread's stack is deallocated and the thread terminates. The entry-point function of all attached dynamic-link libraries (DLLs) is invoked with a value indicating that the thread is detaching from the DLL. </p>
<p>
If the thread is the last thread in the process when this function is called, the thread's process is also terminated. </p>
<p>
The state of the thread object becomes signaled, releasing any other threads that had been waiting for the thread to terminate. The thread's termination status changes from STILL_ACTIVE to the value of the <i>dwExitCode</i> parameter. </p>
<p>
Terminating a thread does not necessarily remove the thread object from the operating system. A thread object is deleted when the last handle to the thread is closed. </p>
<p>
The <a href="prothred_8dv7.htm"><b>ExitProcess</b></a>, <b>ExitThread</b>, <a href="prothred_4084.htm"><b>CreateThread</b></a>, <a href="prothred_8b38.htm"><b>CreateRemoteThread</b></a> functions, and a process that is starting (as the result of a <a href="prothred_9dpv.htm"><b>CreateProcess</b></a> call) are serialized between each other within a process. Only one of these events can happen in an address space at a time. This means the following restrictions hold: 
<ul>
<li>
During process startup and DLL initialization routines, new threads can be created, but they do not begin execution until DLL initialization is done for the process. </li>
<li>
Only one thread in a process can be in a DLL initialization or detach routine at a time. </li>
<li>
<b>ExitProcess</b> does not return until no threads are in their DLL initialization or detach routines. </li>
</ul>
<p>
A thread that uses functions from the C run-time libraries should use the <b>_beginthread</b> and <b>_endthread </b>C run-time functions for thread management rather than <b>CreateThread</b> and <b>ExitThread</b>. Failure to do so results in small memory leaks when <b>ExitThread</b> is called. </p>
<p>
<b>Windows CE:</b> If the primary thread calls the <b>ExitThread</b> function, the application will exit.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="prothred_86sz.htm">Processes and Threads Overview</a>, <a href="prothred_3mgj.htm">Process and Thread Functions</a>, <a href="prothred_9dpv.htm"><b>CreateProcess</b></a>, <a href="prothred_8b38.htm"><b>CreateRemoteThread</b></a>, <a href="prothred_4084.htm"><b>CreateThread</b></a>, <a href="prothred_8dv7.htm"><b>ExitProcess</b></a>, <a href="dll_3wo4.htm"><b>FreeLibraryAndExitThread</b></a>, <a href="prothred_9350.htm"><b>GetExitCodeThread</b></a>, <a href="prothred_7h2c.htm"><b>TerminateThread</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
