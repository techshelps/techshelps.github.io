<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HeapLock</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_heaplock"></a>HeapLock</h1>
<p>
The <b>HeapLock</b> function attempts to acquire the critical section object, or lock, that is associated with a specified heap. </p>
<p>
If the function succeeds, the calling thread owns the heap lock. Only the calling thread will be able to allocate or release memory from the heap. The execution of any other thread of the calling process will be blocked if that thread attempts to allocate or release memory from the heap. Such threads will remain blocked until the thread that owns the heap lock calls the <a href="memman_0duz.htm"><b>HeapUnlock</b></a><b> </b>function.</p>
<pre><code><b>BOOL HeapLock(
  HANDLE</b><i> hHeap</i>   // handle to the heap to lock for exclusive thread 
                 // access
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hHeap</i></dt>
<dd>
Handle to the heap to lock for exclusive access by the calling thread. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The <b>HeapLock </b>function is primarily useful for preventing the allocation and release of heap memory by other threads while the calling thread uses the <b>HeapWalk </b>function.</p>
<p>
Each call to <b>HeapLock</b> must be matched by a corresponding call to the <b>HeapUnlock</b> function. Failure to call <b>HeapUnlock</b> will block the execution of any other threads of the calling process that attempt to access the heap.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.5 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="memman_6oz8.htm">Memory Management Overview</a>, <a href="memman_60kz.htm">Memory Management Functions</a>, <a href="memman_0duz.htm"><b>HeapUnlock</b></a>, <a href="memman_1ca3.htm"><b>HeapWalk</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
