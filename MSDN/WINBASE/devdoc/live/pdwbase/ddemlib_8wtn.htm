<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DdeEnableCallback</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_ddeenablecallback"></a>DdeEnableCallback</h1>
<p>
The <b>DdeEnableCallback</b> function enables or disables transactions for a specific conversation or for all conversations currently established by the calling application. </p>
<p>
After disabling transactions for a conversation, the operating system places the transactions for that conversation in a transaction queue associated with the application. The application should reenable the conversation as soon as possible to avoid losing queued transactions. </p>
<pre><code><b>BOOL DdeEnableCallback(
  DWORD</b><i> idInst</i><b>, </b>// instance identifier
<b>  HCONV</b><i> hConv</i><b>,  </b>// handle to conversation
<b>  UINT</b><i> wCmd</i>     // enable or disable function code
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>idInst</i></dt>
<dd>
Specifies the application-instance identifier obtained by a previous call to the <a href="ddemlib_2v6t.htm"><b>DdeInitialize</b></a> function. </dd>
<dt>
<i>hConv</i></dt>
<dd>
Handle to the conversation to enable or disable. If this parameter is NULL, the function affects all conversations. </dd>
<dt>
<i>wCmd</i></dt>
<dd>
Specifies the function code. This parameter can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=35%>Value</th>
<th align=left width=65%>Meaning</th>
</tr>
<tr valign=top>
<td width=35%>EC_ENABLEALL</td>
<td width=65%>Enables all transactions for the specified conversation.</td>
</tr>
<tr valign=top>
<td width=35%>EC_ENABLEONE</td>
<td width=65%>Enables one transaction for the specified conversation.</td>
</tr>
<tr valign=top>
<td width=35%>EC_DISABLE</td>
<td width=65%>Disables all blockable transactions for the specified conversation.<p>
A server application can disable the following transactions:</p>
<p>
XTYP_ADVSTART<br>
XTYP_ADVSTOP<br>
XTYP_EXECUTE<br>
XTYP_POKE<br>
XTYP_REQUEST</p>
<p>
A client application can disable the following transactions:</p>
<p>
XTYP_ADVDATA<br>
XTYP_XACT_COMPLETE</p>
</td>
</tr>
<tr valign=top>
<td width=35%>EC_QUERYWAITING</td>
<td width=65%>Determines whether any transactions are in the queue for the specified conversation.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. </p>
<p>
If the <i>wCmd</i> parameter is EC_QUERYWAITING, and the application transaction queue contains one or more unprocessed transactions that are not being processed, the return value is TRUE; otherwise, it is FALSE.</p>
<h4>Errors</h4>
<p>
Use the <a href="ddemlib_89bm.htm"><b>DdeGetLastError</b></a> function to retrieve the error code, which may be one of the following: </p>
<p>
DMLERR_DLL_NOT_INITIALIZED<br>
DMLERR_NO_ERROR<br>
DMLERR_INVALIDPARAMETER</p>
<h4>Remarks</h4>
<p>
An application can disable transactions for a specific conversation by returning the CBR_BLOCK return code from its dynamic data exchange (DDE) callback function. When you reenable the conversation by using the <b>DdeEnableCallback</b> function, the operating system generates the same transaction that was in process when the conversation was disabled. </p>
<p>
Using the EC_QUERYWAITING flag does not change the enable state of the conversation and does not cause transactions to be issued within the context of the call to <b>DdeEnableCallback</b>. </p>
<p>
If <b>DdeEnableCallback</b> is called with EC_QUERYWAITING and the function returns a nonzero, an application should try to quickly allow message processing, return from its callback, or enable callbacks. Such a result does not guarantee that subsequent callbacks will be made. Calling <b>DdeEnableCallback</b> with EC_QUERYWAITING lets an application with blocked callbacks determine whether there are any transactions pending on the blocked conversation. Of course, even if such a call returns zero, an application should always process messages in a timely manner.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ddeml.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="ddemlib_743d.htm">Dynamic Data Exchange Management Library Overview</a>, <a href="ddemlib_1nn7.htm">Dynamic Data Exchange Management Functions</a>, <a href="ddemlib_9i9g.htm"><b>DdeConnect</b></a>, <a href="ddemlib_052s.htm"><b>DdeConnectList</b></a>, <a href="ddemlib_72yc.htm"><b>DdeDisconnect</b></a>, <a href="ddemlib_2v6t.htm"><b>DdeInitialize</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
