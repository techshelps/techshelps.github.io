<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding a Source to the Registry</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_adding_a_source_to_the_registry"></a>Adding a Source to the Registry</h2>
<p>
You can use the default <b>Application</b> event log without adding an event source to the registry. However, Event Viewer will not be able to map your event identifier codes to message strings unless you register your event source and provide a message file. </p>
<p>
You can add a new source name to the registry by opening a new registry subkey under the <b>Application</b> key using the <a href="regapi_7zy1.htm"><b>RegCreateKey</b></a> function, and adding registry values to the new subkey using the <a href="regapi_76bc.htm"><b>RegSetValueEx</b></a> function. The following example opens a new source name called <code>SamplApp</code> and adds a message-file name and a bitmask of supported types. </p>
<pre><code>void AddEventSource()
{
    HKEY hk; 
    DWORD dwData; 
    UCHAR szBuf[80]; 
 
    // Add your source name as a subkey under the Application 
    // key in the EventLog registry key. 
 
    if (RegCreateKey(HKEY_LOCAL_MACHINE, 
            "SYSTEM\\CurrentControlSet\\Services\ 
            \\EventLog\\Application\\SamplApp", &amp;hk)) 
        ErrorExit("Could not create the registry key."); 
 
    // Set the name of the message file. 
 
    strcpy(szBuf, "%SystemRoot%\\System\\SamplApp.dll"); 
 
    // Add the name to the EventMessageFile subkey. 
 
    if (RegSetValueEx(hk,             // subkey handle 
            "EventMessageFile",       // value name 
            0,                        // must be zero 
            REG_EXPAND_SZ,            // value type 
            (LPBYTE) szBuf,           // pointer to value data 
            strlen(szBuf) + 1))       // length of value data 
        ErrorExit("Could not set the event message file."); 
 
    // Set the supported event types in the TypesSupported subkey. 
 
    dwData = EVENTLOG_ERROR_TYPE | EVENTLOG_WARNING_TYPE | 
        EVENTLOG_INFORMATION_TYPE; 
 
    if (RegSetValueEx(hk,      // subkey handle 
            "TypesSupported",  // value name 
            0,                 // must be zero 
            REG_DWORD,         // value type 
            (LPBYTE) &amp;dwData,  // pointer to value data 
            sizeof(DWORD)))    // length of value data 
        ErrorExit("Could not set the supported types."); 
 
    RegCloseKey(hk); 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
