<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Waiting for Multiple Objects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_waiting_for_multiple_objects"></a>Waiting for Multiple Objects</h2>
<p>
The following example uses the <a href="synchro_8ub8.htm"><b>CreateEvent</b></a> function to create two event objects. It then uses the <a href="synchro_9xbn.htm"><b>WaitForMultipleObjects</b></a> function to wait for the state of one of the objects to be set to signaled. </p>
<pre><code>HANDLE hEvents[2]; 
DWORD i, dwEvent; 

// Create two event objects.

for (i = 0; i &lt; 2; i++) 
{ 
    hEvents[i] = CreateEvent( 
        NULL,   // no security attributes
        FALSE,  // auto-reset event object
        FALSE,  // initial state is nonsignaled
        NULL);  // unnamed object
    if (hEvents[i] == NULL) { 
        printf("CreateEvent error: %d\n", GetLastError() ); 
        ExitProcess(0); 
    } 
} 

// The creating thread waits for other threads or processes
// to signal the event objects.

dwEvent = WaitForMultipleObjects( 
    2,           // number of objects in array
    hEvents,     // array of objects
    FALSE,       // wait for any
    INFINITE);   // indefinite wait

// Return value indicates which event is signaled.

switch (dwEvent) { 

    // hEvent[0] was signaled.
    case WAIT_OBJECT_0 + 0: 
        // Perform tasks required by this event.
        break; 

    // hEvent[1] was signaled.
    case WAIT_OBJECT_0 + 1: 
        // Perform tasks required by this event.
        break; 

    // Return value is invalid.
    default: 
        printf("Wait error: %d\n", GetLastError()); 
        ExitProcess(0); 
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
