<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetPrivateObjectSecurityEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setprivateobjectsecurityex"></a>SetPrivateObjectSecurityEx</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>SetPrivateObjectSecurityEx</b> function modifies the security descriptor of a private object. <b>SetPrivateObjectSecurityEx</b> has a flags parameter that allows you to specify whether the protected server supports automatic inheritance of ACEs. </p>
<pre><code><b>BOOL SetPrivateObjectSecurityEx (
  SECURITY_INFORMATION</b><i> SecurityInformation</i><b>, </b>
<b>                            </b>// type of security information
<b>  PSECURITY_DESCRIPTOR</b><i> ModificationDescriptor</i><b>, </b>
                            // security descriptor with new information
<b>  PSECURITY_DESCRIPTOR </b>*<i>ObjectsSecurityDescriptor</i><b>, </b>
<b>                            </b>// object's security descriptor
<b>  ULONG</b><i> AutoInheritFlags</i><b>,   </b>// flags that control inheritance of ACEs
<b>  PGENERIC_MAPPING</b><i> GenericMapping</i><b>,  </b>// map generic to specific rights
<b>  HANDLE</b><i> Token</i><b>                      </b>// handle of client access token
);
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>SecurityInformation</i></dt>
<dd>
A set of bit flags that indicate the parts of the security descriptor to set. This value can be a combination of the <a href="accctrl_9f8y.htm"><b>SECURITY_INFORMATION</b></a> bit flags. </dd>
<dt>
<i>ModificationDescriptor</i></dt>
<dd>
Pointer to a <a href="accctrl_6i5u.htm"><b>SECURITY_DESCRIPTOR</b></a> structure. The parts of this security descriptor indicated by the <i>SecurityInformation</i> parameter are applied to the <i>ObjectsSecurityDescriptor</i> security descriptor.</dd>
<dt>
<i>ObjectsSecurityDescriptor</i></dt>
<dd>
Pointer to a pointer to a <b>SECURITY_DESCRIPTOR</b> structure. This security descriptor must be in self-relative form. 
<p>
On input, this is the current security descriptor of the private object. The function modifies it to produce the new security descriptor. If necessary, the <b>SetPrivateObjectSecurityEx</b> function allocates additional memory to produce a larger security descriptor. 
</dd>
<dt>
<i>AutoInheritFlags</i></dt>
<dd>
A set of bit flags that control automatic inheritance of ACEs. If the protected server does not implement automatic inheritance, it should specify zero; otherwise, it can specify a combination of the following flags.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Value</th>
<th align=left width=57%>Meaning</th>
</tr>
<tr valign=top>
<td width=43%>SEF_DACL_AUTO_INHERIT</td>
<td width=57%>If this flag is set, the DACL is treated as an auto-inherit DACL and is processed as described in the following Remarks section. This bit is ignored if DACL_SECURITY_INFORMATION is not set in the <i>SecurityInformation</i> parameter.</td>
</tr>
<tr valign=top>
<td width=43%>SEF_SACL_AUTO_INHERIT</td>
<td width=57%>If this flag is set, the SACL is treated as an auto-inherit SACL and is processed as described in the following Remarks section. This bit is ignored if SACL_SECURITY_INFORMATION is not set in the <i>SecurityInformation</i> parameter.</td>
</tr>
<tr valign=top>
<td width=43%>SEF_AVOID_PRIVILEGE_CHECK</td>
<td width=57%>If this flag is set, the <i>Token</i> parameter can be NULL, and the token is not checked to determine if the <i>ModificationDescriptor</i> is valid. This flag is useful while implementing automatic inheritance to avoid checking privileges on each child updated.</td>
</tr>
</table><br>

</dd>
<dt>
<i>GenericMapping</i></dt>
<dd>
Pointer to a <a href="accclsrv_29rm.htm"><b>GENERIC_MAPPING</b></a> structure that specifies the specific and standard access rights that correspond to each of the generic access rights. </dd>
<dt>
<i>Token</i></dt>
<dd>
Identifies the access token for the client on whose behalf the private object's security is being modified. This parameter is required to ensure that the client has provided a legitimate value for a new owner SID. The token must be open for TOKEN_QUERY access. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
If the <i>AutoInheritFlags</i> parameter is zero, <b>SetPrivateObjectSecurityEx</b> is identical to the <a href="accclsrv_31mh.htm"><b>SetPrivateObjectSecurity</b></a> function.</p>
<p>
The <b>SetPrivateObjectSecurityEx</b> function is successful only if the following conditions are met: 
<ul>
<li>
If the object's owner is being set, the calling process must have either WRITE_OWNER permission or be the object's owner. </li>
<li>
If the object's DACL is being set, the calling process must have either WRITE_DAC permission or be the object's owner. </li>
<li>
If the object's SACL is being set, the SE_SECURITY_NAME privilege must be enabled for the calling process. </li>
</ul>
<p>
The process calling this function must not be impersonating a client. </p>
<p>
If <i>AutoInheritFlags</i> specifies the SEF_DACL_AUTO_INHERIT bit, the function applies the following rules to the DACL to create the new security descriptor from the current descriptor
<ul>
<li>
If the SE_DACL_PROTECTED flag is not set in the control bits of the either the current security descriptor or the <i>ModificationDescriptor</i>, the function constructs the output security descriptor from the inherited ACEs of the current security descriptor and non-inherited ACEs of <i>ModificationDescriptor</i>. That is, it is impossible to change an inherited ACE by changing the ACL on an object. This behavior preserves the inherited ACEs as they were inherited from the parent container.<p>
An ACL editor should "gray" inherited ACEs to prevent them from being modified.
</li>
<li>
If SE_DACL_PROTECTED is set in the <i>ModificationDescriptor</i>, the current security descriptor is ignored. The output security descriptor is built as a copy of the <i>ModificationDescriptor</i> with any INHERITED_ACE bits turned off. <p>
Ideally an ACL editor should turn off the INHERITED_ACE bits indicating to its caller that the ACEs inherited from the object's parent are now being explicitly set on the object.
</li>
<li>
If SE_DACL_PROTECTED is set in the current security descriptor and not in the <i>ModificationDescriptor</i>, the current security descriptor is ignored.  The output security descriptor is built as a copy of the <i>ModificationDescriptor</i>. <p>
It is the caller's responsibility to ensure that the correct ACEs have the INHERITED_ACE bit turned on and to properly set the SE_DACL_AUTO_INHERITED bit on the <i>ModificationDescriptor</i>. 
</li>
</ul>
<p>
If <i>AutoInheritFlags</i> specifies the SEF_SACL_AUTO_INHERIT bit, the function applies similar rules to the new SACL.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="accclsrv_64vg.htm">Client/Server Access Control Overview</a>, <a href="accclsrv_0hv7.htm">Client/Server Access Control Functions</a>, <a href="accclsrv_5vcp.htm"><b>CreatePrivateObjectSecurity</b></a>, <a href="accclsrv_4ozd.htm"><b>DestroyPrivateObjectSecurity</b></a>, <a href="accclsrv_29rm.htm"><b>GENERIC_MAPPING</b></a>, <a href="accclsrv_87p5.htm"><b>GetPrivateObjectSecurity</b></a>, <a href="accctrl_6i5u.htm"><b>SECURITY_DESCRIPTOR</b></a>, <a href="accctrl_9f8y.htm"><b>SECURITY_INFORMATION</b></a>, <a href="acctrlow_9kvt.htm"><b>SetFileSecurity</b></a>, <a href="acctrlow_4nll.htm"><b>SetKernelObjectSecurity</b></a>, <a href="accclsrv_31mh.htm"><b>SetPrivateObjectSecurity</b></a>, <a href="acctrlow_92wp.htm"><b>SetUserObjectSecurity</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
