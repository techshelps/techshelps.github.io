<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Processes</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_creating_processes"></a>Creating Processes</h3>
<p>
The <a href="prothred_9dpv.htm"><b>CreateProcess</b></a> function creates a new process, which runs independently of the creating process. However, for simplicity, the relationship is referred to as a parent-child relationship. </p>
<p>
The following code fragment demonstrates how to create a process.</p>
<pre><code>void main( VOID )
{
    STARTUPINFO si;
    PROCESS_INFORMATION pi;

    ZeroMemory( &amp;si, sizeof(si) );
    si.cb = sizeof(si);

    // Start the child process. 
    if( !CreateProcess( NULL, // No module name (use command line). 
        "MyChildProcess", // Command line. 
        NULL,             // Process handle not inheritable. 
        NULL,             // Thread handle not inheritable. 
        FALSE,            // Set handle inheritance to FALSE. 
        0,                // No creation flags. 
        NULL,             // Use parent's environment block. 
        NULL,             // Use parent's starting directory. 
        &amp;si,              // Pointer to STARTUPINFO structure.
        &amp;pi )             // Pointer to PROCESS_INFORMATION structure.
    ) 
    {
        ErrorExit( "CreateProcess failed." );
    }

    // Wait until child process exits.
    WaitForSingleObject( pi.hProcess, INFINITE );

    // Close process and thread handles. 
    CloseHandle( pi.hProcess );
    CloseHandle( pi.hThread );
}
 </code></pre>
<p>
If <b>CreateProcess</b> succeeds, it returns a <a href="prothred_71pu.htm"><b>PROCESS_INFORMATION</b></a> structure containing handles and identifiers for the new process and its primary thread. The thread and process handles are created with full access rights, although access can be restricted if you specify security descriptors. When you no longer need these handles, close them by using the <a href="handobj_289x.htm"><b>CloseHandle</b></a> function. </p>
<p>
You can also create a process using the <a href="prothred_6pf6.htm"><b>CreateProcessAsUser</b></a> function. This function allows you to specify the security context of the user account in which the process will execute. </p>
<p>&nbsp;</p></body>
</HTML>
