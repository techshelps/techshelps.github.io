<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>JOBOBJECT_BASIC_LIMIT_INFORMATION</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_jobobject_basic_limit_information_str"></a>JOBOBJECT_BASIC_LIMIT_INFORMATION</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>JOBOBJECT_BASIC_LIMIT_INFORMATION</b> structure contains basic limit information for a job object. </p>
<pre><code>typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {
    LARGE_INTEGER PerProcessUserTimeLimit;
    LARGE_INTEGER PerJobUserTimeLimit;
    DWORD LimitFlags;
    DWORD MinimumWorkingSetSize;
    DWORD MaximumWorkingSetSize;
    DWORD ActiveProcessLimit;
    DWORD Affinity;
    DWORD PriorityClass;
} JOBOBJECT_BASIC_LIMIT_INFORMATION, *PJOBOBJECT_BASIC_LIMIT_INFORMATION;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>PerProcessUserTimeLimit</b></dt>
<dd>
Ignored unless <b>LimitFlags</b> specifies JOB_OBJECT_LIMIT_PROCESS_TIME. Specifies the per-process user-mode execution time limit, in 100-nanosecond ticks. 
<p>
The system periodically checks to see if each process associated with the job object has accumulated more user-mode time than the set limit. If it has, the process is terminated.
</dd>
<dt>
<b>PerJobUserTimeLimit</b></dt>
<dd>
Ignored unless <b>LimitFlags</b> specifies JOB_OBJECT_LIMIT_JOB_TIME. Specifies the per-job user-mode execution time limit, in 100-nanosecond ticks. 
<p>
The system periodically checks to see if the sum of the user-mode execution time for all processes is greater than this end-of-job limit. If it is, the action specified in the <b>EndOfJobTimeAction</b> member of the <a href="prothred_9u9e.htm"><b>JOBOBJECT_END_OF_JOB_TIME_INFORMATION</b></a> structure is carried out. By default, all processes are terminated and the status code is set to ERROR_NOT_ENOUGH_QUOTA. 
</dd>
<dt>
<b>LimitFlags</b></dt>
<dd>
Specifies the limit flags that are in effect. This member is a bit field that determines whether other structure members are used. Any combination of the following values can be specified.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=64%>Value</th>
<th align=left width=36%>Meaning</th>
</tr>
<tr valign=top>
<td width=64%>JOB_OBJECT_LIMIT_ACTIVE_PROCESS</td>
<td width=36%>Establishes a maximum number of simultaneously active processes associated with the job object.</td>
</tr>
<tr valign=top>
<td width=64%>JOB_OBJECT_LIMIT_AFFINITY</td>
<td width=36%>Causes all processes associated with the job object to use the same processor affinity.</td>
</tr>
<tr valign=top>
<td width=64%>JOB_OBJECT_LIMIT_JOB_TIME</td>
<td width=36%>Establishes a user-mode execution time limit for the job object.</td>
</tr>
<tr valign=top>
<td width=64%>JOB_OBJECT_LIMIT_PRIORITY_CLASS</td>
<td width=36%>Causes all processes associated with the job to use the same priority class. For more information, see <a href="prothred_75ir.htm">Scheduling Priorities</a>.</td>
</tr>
<tr valign=top>
<td width=64%>JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME</td>
<td width=36%>Preserves any job time limits you previously set. As long as this flag is set, you can establish a per-job time limit once, then alter other limits in subsequent calls.</td>
</tr>
<tr valign=top>
<td width=64%>JOB_OBJECT_LIMIT_PROCESS_TIME</td>
<td width=36%>Establishes a user-mode execution time limit for each currently active process and for all future processes associated with the job object.</td>
</tr>
<tr valign=top>
<td width=64%>JOB_OBJECT_LIMIT_WORKINGSET</td>
<td width=36%>Causes all processes associated with the job to use the same minimum and maximum working set sizes.</td>
</tr>
</table><br>

</dd>
<dt>
<b>MinimumWorkingSetSize</b></dt>
<dd>
Ignored unless the <b>LimitFlags</b> member specifies JOB_OBJECT_LIMIT_WORKINGSET. Specifies the minimum working set size for all processes associated with the job object. </dd>
<dt>
<b>MaximumWorkingSetSize</b></dt>
<dd>
Ignored unless <b>LimitFlags</b> specifies JOB_OBJECT_LIMIT_WORKINGSET. Specifies the maximum working set size for all processes associated with the job object.</dd>
<dt>
<b>ActiveProcessLimit</b></dt>
<dd>
Ignored unless <b>LimitFlags</b> specifies JOB_OBJECT_LIMIT_ACTIVE_PROCESS. Specifies the active process limit for the job object. If you try to associate a process with a job object, and this causes the active process count to exceed this limit, the process is terminated and the association fails. </dd>
<dt>
<b>Affinity</b></dt>
<dd>
Ignored unless <b>LimitFlags</b> specifies JOB_OBJECT_LIMIT_AFFINITY. Specifies the processor affinity for all processes associated with the job object. The affinity must be a proper subset of the system affinity mask obtained by calling the <a href="prothred_20mj.htm"><b>GetProcessAffinityMask</b></a> function. The affinity of each thread is set to this value, but threads are free to subsequently set their affinity, as long as it is a subset of the specified affinity mask. Processes cannot set their own affinity mask.</dd>
<dt>
<b>PriorityClass</b></dt>
<dd>
Ignored unless <b>LimitFlags</b> specifies JOB_OBJECT_LIMIT_PRIORITY_CLASS. Specifies the priority class for all processes associated with the job object. Processes and threads cannot increase their priority class. The calling process must have the SE_INCREASEBASEPRIORITY_NAME privilege. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
Processes can still empty their working sets using the <a href="prothred_07l1.htm"><b>SetProcessWorkingSetSize</b></a> function, even when JOB_OBJECT_LIMIT_WORKINGSET is used. However, you cannot use <b>SetProcessWorkingSetSize</b> to change the minimum or maximum working set size. </p>
<p>
The system increments the active process count when you attempt to associate a process with a job object. If the limit is exceeded, the system decrements the active process count only when the process terminates and all handles to the process are closed. Therefore, if you have an open handle to a process that has been terminated in such a manner, you cannot associate any new processes until the handle is closed and the active process count is below the limit.  </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winnt.h.</p>
<h4>See Also</h4>
<p>
<a href="prothred_86sz.htm">Processes and Threads Overview</a>, <a href="prothred_9nzn.htm">Process and Thread Structures</a>,  <a href="prothred_20mj.htm"><b>GetProcessAffinityMask</b></a>, <a href="prothred_9u9e.htm"><b>JOBOBJECT_END_OF_JOB_TIME_INFORMATION</b></a>, <a href="prothred_0xbo.htm"><b>QueryInformationJobObject</b></a>, <a href="prothred_3lbo.htm"><b>SetInformationJobObject</b></a>, <a href="prothred_07l1.htm"><b>SetProcessWorkingSetSize</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
