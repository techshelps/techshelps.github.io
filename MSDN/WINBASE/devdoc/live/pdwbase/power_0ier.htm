<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>System Power States</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_system_power_states"></a>System Power States</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
To the user, the system appears to be either on or off. There are no other detectable states. However, you should be aware that the system supports these power states. The following table lists the power states from highest to lowest power consumption.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=27%>Power State</th>
<th align=left width=73%>Description</th>
</tr>
<tr valign=top>
<td width=27%>Working</td>
<td width=73%>The system is fully usable; power saving occurs on a per-device basis. Devices that are not in use can save power by entering a lower power state.</td>
</tr>
<tr valign=top>
<td width=27%>Sleeping</td>
<td width=73%>Appears to be off. Power consumption is reduced to one of several levels of power consumption, depending on how the system is to be used. The lower the level of power consumption, the more time it takes the system to return to the working state. </td>
</tr>
<tr valign=top>
<td width=27%>Soft Off</td>
<td width=73%>Appears to be off. Very low power consumption. The working context can be restored if it is stored on nonvolatile media.</td>
</tr>
<tr valign=top>
<td width=27%>Mechanical Off</td>
<td width=73%>No power consumption. The system returns to the working state only after a full reboot. </td>
</tr>
</table><br>
<p>
Applications that assume the system is always in the working state can inadvertently keep it from entering a lower power state. To avoid this, applications should watch for the <a href="power_0304.htm">WM_POWERBROADCAST</a> message. WM_POWERBROADCAST notifies applications of changes in the power state. Console applications should use the <b>RegisterSysMsgHandler</b> function to register a message handler to receive power management messages. </p>
<h4>The Sleeping State</h4>
<p>
There are different levels in the sleeping state. The following table shows the system sleep states and their corresponding advanced configuration and power interface (ACPI) and advanced power management (APM) states. </p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=37%>System Sleep State</th>
<th align=left width=21%>ACPI State</th>
<th align=left width=42%>APM State</th>
</tr>
<tr valign=top>
<td width=37%>PowerSystemWorking</td>
<td width=21%>S0</td>
<td width=42%>Working</td>
</tr>
<tr valign=top>
<td width=37%>PowerSystemSleeping1</td>
<td width=21%>S1</td>
<td width=42%>SUSPEND</td>
</tr>
<tr valign=top>
<td width=37%>PowerSystemSleeping2</td>
<td width=21%>S2</td>
<td width=42%>SUSPEND</td>
</tr>
<tr valign=top>
<td width=37%>PowerSystemSleeping3</td>
<td width=21%>S3</td>
<td width=42%>SUSPEND</td>
</tr>
<tr valign=top>
<td width=37%>PowerSystemHibernate</td>
<td width=21%>S4</td>
<td width=42%>SUSPEND</td>
</tr>
</table><br>
<p>
It takes longer to restore a system from a lower power state than from a higher power state because of the extra work the hardware may have to do (stabilize power supply, reinitialize the processor, and so forth). By default, the system will use the lowest sleeping state supported by all enabled wake-up devices, within the specified latency requirements. To set the default sleep state, the user can use the Power Management control panel application. An application can specify its latency requirements using the <a href="power_5mih.htm"><b>RequestWakeupLatency</b></a> function. </p>
<p>
After the system has selected the sleeping state the system will enter, it requests permission to enter the sleeping state from all applications, using the <a href="power_7ip0.htm">PBT_APMQUERYSUSPEND</a> message. If no applications deny the request, the system sends it to the drivers by using the IRP_MJ_POWER and IRP_MN_QUERY_POWER messages. If any drivers deny the request, the system requests the next highest sleeping state, until a sleep state is successfully entered or there are no more available sleep states. The user can configure the system to take one of the following actions if the requested sleep state is higher than the preferred sleep state: 
<ul>
<li>
Display a dialog box indicating the problem. </li>
<li>
Ignore the chosen state and use a preferred power state. </li>
<li>
Ignore the preferred power state and use the chosen state. </li>
</ul>
<p>&nbsp;</p></body>
</HTML>
