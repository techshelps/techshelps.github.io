<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LZSeek</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_lzseek"></a>LZSeek</h1>
<p>
The <b>LZSeek</b> function moves a file pointer a number of bytes from a starting position. </p>
<pre><code><b>LONG LZSeek(
  INT</b><i> hFile</i><b>,     </b>// handle to source file
<b>  LONG</b><i> lOffset</i><b>,  </b>// number of bytes to move
  INT iOrigin    // starting position
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFile</i></dt>
<dd>
Handle to the source file. </dd>
<dt>
<i>lOffset</i></dt>
<dd>
Specifies the number of bytes by which to move the file pointer. </dd>
<dt>
<i>iOrigin</i></dt>
<dd>
Specifies the starting position of the pointer. This parameter must be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=16%>Value</th>
<th align=left width=84%>Meaning</th>
</tr>
<tr valign=top>
<td width=16%>0</td>
<td width=84%>Moves the file pointer <i>lOffset</i> bytes from the beginning of the file.</td>
</tr>
<tr valign=top>
<td width=16%>1</td>
<td width=84%>Moves the file pointer <i>lOffset</i> bytes from the current position.</td>
</tr>
<tr valign=top>
<td width=16%>2</td>
<td width=84%>Moves the file pointer <i>lOffset</i> bytes from the end of the file.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value specifies the offset from the beginning of the file to the new pointer position.</p>
<p>
If the function fails, the return value is an LZERROR_* code. These codes have values less than zero. Note that <b>LZSeek</b> calls neither <b>SetLastError</b> nor <b>SetLastErrorEx</b>; thus, its failure does not affect a thread's last-error code. </p>
<p>
Upon failure, <b>LZSeek</b> can return the following LZERROR_* codes: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=39%>Value</th>
<th align=left width=61%>Meaning</th>
</tr>
<tr valign=top>
<td width=39%>LZERROR_BADINHANDLE</td>
<td width=61%>The handle identifying the source file is not valid. The file cannot be read.</td>
</tr>
<tr valign=top>
<td width=39%>LZERROR_BADVALUE</td>
<td width=61%>One of the parameters is outside the range of acceptable values.</td>
</tr>
<tr valign=top>
<td width=39%>LZERROR_GLOBLOCK</td>
<td width=61%>The LZ file handle cannot be locked down.</td>
</tr>
</table><br>
<p>
There is no extended error information for this function; do not call <b>GetLastError</b>.</p>
<h4>Remarks</h4>
<p>
The handle identified by the <i>hFile</i> parameter must be retrieved by calling either the <a href="datadcmp_2x84.htm"><b>LZInit</b></a> or <a href="datadcmp_1tyd.htm"><b>LZOpenFile</b></a> function. </p>
<p>
If the file is compressed, <b>LZSeek</b> emulates the <b>_llseek</b> function on an expanded image of the file. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in lzexpand.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use lz32.lib.</p>
<h4>See Also</h4>
<p>
<a href="datadcmp_3qm1.htm">Data Decompression Library Overview</a>, <a href="datadcmp_5h4j.htm">Data Decompression Library Functions</a>, <a href="datadcmp_2x84.htm"><b>LZInit</b></a>, <a href="datadcmp_1tyd.htm"><b>LZOpenFile</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
