<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>System Messages and System-Message Broadcasts</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_system_messages_and_system.2d.message_broadcasts"></a>System Messages and System-Message Broadcasts</h2>
<p>
Each system message consists of a message identifier and two 32-bit parameters, <i>wParam</i> and <i>lParam</i>. The message identifier is a unique value that specifies the message purpose. The parameters provide additional information that is message-specific, but the <i>wParam</i> parameter is often a notification value that further specifies the message purpose.</p>
<p>
A system-message broadcast is simply the sending of a system message to components in the system. You broadcast a system message by using the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_broadcastsystemmessage">
</object><a href=JavaScript:alink_1.Click()><b>BroadcastSystemMessage</b></a> function and specifying the recipients of the message. Rather than specify individual recipients, you must specify one or more types of recipients. These types are applications, installable drivers, network drivers, and system-level device drivers. <b>BroadcastSystemMessage</b> sends messages to all members of each type you specify.</p>
<p>
Most applications do not broadcast system messages. Instead, they process system messages sent by other components. The system typically broadcasts system messages in response to changes that usually take place within system-level device drivers. The device driver or related component generates the system message and broadcasts it to applications and other components to notify them of the change. For example, the subsystem responsible for disk drives generates and broadcasts a system message whenever the device driver for the floppy disk drive detects a change of media such as when the user inserts a disk in the drive.</p>
<p>
Applications receive system messages through the window procedure of their top-level windows. System messages are not sent to child windows. The action an application takes in response to a system message depends on the message. Some system messages, called query messages, require the application to respond by returning either TRUE or BROADCAST_QUERY_DENY to indicate whether the system should continue to broadcast the message to other recipients. </p>
<p>&nbsp;</p></body>
</HTML>
