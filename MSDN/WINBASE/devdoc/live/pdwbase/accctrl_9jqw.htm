<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetNamedSecurityInfoEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setnamedsecurityinfoex"></a>SetNamedSecurityInfoEx</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>SetNamedSecurityInfoEx</b> function sets the specified security information for an object specified by name. </p>
<p>
<b>SetNamedSecurityInfoEx</b> differs from the <a href="acctlnt4_86lr.htm"><b>SetNamedSecurityInfo</b></a> function in that it allows you to set access-control information for the properties on an object, as well as for the object itself. In addition, <b>SetNamedSecurityInfoEx</b> uses provider-independent access flags, but <b>SetNamedSecurityInfo</b> uses Windows NT-specific access flags.</p>
<pre><code><b>DWORD SetNamedSecurityInfoEx(
  LPCTSTR</b><i> lpObject</i><b>,           </b>// name of the object
<b>  SE_OBJECT_TYPE</b><i> ObjectType</i><b>,  </b>// type of object
<b>  SECURITY_INFORMATION</b><i> SecurityInfo</i><b>,</b>
<b>                             </b>// type of security information to set
<b>  LPCTSTR</b><i> lpProvider</i><b>,        </b>// name of provider to handle request
<b>  PACTRL_ACCESS</b><i> pAccessList</i><b>,  </b>// pointer to the DACL information
<b>  PACTRL_AUDIT</b><i> pAuditList</i><b>,  </b>// pointer to the SACL information
<b>  LPTSTR</b><i> lpOwner</i><b>,           </b>// name of the object's owner
<b>  LPTSTR</b><i> lpGroup</i><b>,           </b>// name of the object's primary group
<b>  PACTRL_OVERLAPPED</b><i> pOverlapped</i>
<i>                            </i>// pointer to a structure for 
                            // asynchronous operation
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpObject</i></dt>
<dd>
Pointer to a null-terminated string that specifies the name of the object on which to set security information. For descriptions of the string formats for the different object types, see <a href="accctrl_90xe.htm"><b>SE_OBJECT_TYPE</b></a>. </dd>
<dt>
<i>ObjectType</i></dt>
<dd>
Specifies a value from the <b>SE_OBJECT_TYPE</b> enumeration that indicates the type of object named by the <i>lpObject</i> parameter.</dd>
<dt>
<i>SecurityInfo</i></dt>
<dd>
A set of <a href="accctrl_9f8y.htm"><b>SECURITY_INFORMATION</b></a> bit flags that indicate the type of security information to set. This parameter can be a combination of the following values.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=56%>Value</th>
<th align=left width=44%>Meaning</th>
</tr>
<tr valign=top>
<td width=56%>OWNER_SECURITY_INFORMATION</td>
<td width=44%>Set the object's owner. The <i>lpOwner</i> parameter points to the new name of the object's owner. </td>
</tr>
<tr valign=top>
<td width=56%>GROUP_SECURITY_INFORMATION</td>
<td width=44%>Set the object's primary group. The <i>lpGroup</i> parameter points to the new name of the object's primary group. </td>
</tr>
<tr valign=top>
<td width=56%>DACL_SECURITY_INFORMATION</td>
<td width=44%>Set the discretionary access-control list (DACL) for the object. The <i>pAccessList</i> parameter points to a structure containing new access-control information for the object. For DS objects, the <i>pAccessList</i> buffer can also contain access-control information for any properties on the object. </td>
</tr>
<tr valign=top>
<td width=56%>SACL_SECURITY_INFORMATION</td>
<td width=44%>Set the system access-control list (SACL) for the object. The <i>pAuditList</i> parameter points to a structure containing new audit-control information for the object. For DS objects, the <i>pAuditList</i> buffer can also contain audit-control information for any properties on the object. </td>
</tr>
</table><br>

</dd>
<dt>
<i>lpProvider</i></dt>
<dd>
Pointer to a null-terminated string that specifies the name of the provider to handle the request. If this parameter is NULL, the system determines the proper provider to handle the request.</dd>
<dt>
<i>pAccessList</i></dt>
<dd>
Pointer to an <a href="accctrl_91wy.htm"><b>ACTRL_ACCESS</b></a> structure containing the new access-control information for the object's DACL. For DS objects, the structure can also contain access-control information for the object's properties. The <i>SecurityInfo</i> parameter must include the DACL_SECURITY_INFORMATION flag. The caller must have WRITE_DAC access to the object or be the object's owner. This parameter can be NULL if you are not setting the DACL.</dd>
<dt>
<i>pAuditList</i></dt>
<dd>
Pointer to an <a href="accctrl_5vn6.htm"><b>ACTRL_AUDIT</b></a> structure containing the new audit-control information for the object's SACL. For DS objects, the structure can also contain audit-control information for the object's properties. The <i>SecurityInfo</i> parameter must include the SACL_SECURITY_INFORMATION flag. The caller must have the SE_SECURITY_NAME privilege enabled. This parameter can be NULL if you are not setting the SACL.</dd>
<dt>
<i>lpOwner</i></dt>
<dd>
Pointer to a null-terminated string containing the new name of the object's owner. The function attempts to convert the name to an SID. The <i>SecurityInfo</i> parameter must include the OWNER_SECURITY_INFORMATION flag. The caller must have WRITE_OWNER access to the object or have the SE_TAKE_OWNERSHIP_NAME privilege enabled. This parameter can be NULL if you are not setting the owner SID.
<p>
The function uses a NULL owner for objects on systems other than Windows NT that do not support object owners. 
</dd>
<dt>
<i>lpGroup</i></dt>
<dd>
Pointer to a null-terminated string containing the name of the object's primary group. The <i>SecurityInfo</i> parameter must include the GROUP_SECURITY_INFORMATION flag. This parameter can be NULL if you are not setting the primary group SID.
<p>
The function uses a NULL primary group for objects on systems other than Windows NT that do not support object groups. 
</dd>
<dt>
<i>pOverlapped</i></dt>
<dd>
Pointer to an <a href="accctrl_5zle.htm"><b>ACTRL_OVERLAPPED</b></a> structure. If this parameter is non-NULL, the function returns immediately and the set operation is performed asynchronously. <b>SetNamedSecurityInfoEx</b> returns a handle to an event object in the <b>hEvent</b> member of this structure. The system sets this event object to the signaled state when the operation has been completed. 
<p>
If this parameter is NULL, the function is performed synchronously and does not return until the operation has been completed. Note that a synchronous operation can take an extended period of time and cannot be cancelled.

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is ERROR_SUCCESS. If the <i>pOverlapped</i> parameter was NULL, the function successfully set the specified security information. If <i>pOverlapped</i> was not NULL, the function started the asynchronous operation.</p>
<p>
If the function fails, the return value can be one of the following error codes. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Value</th>
<th align=left width=50%>Meaning</th>
</tr>
<tr valign=top>
<td width=50%>ERROR_BAD_PROVIDER</td>
<td width=50%>The <i>lpProvider</i> parameter specified an invalid provider name.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_INVALID_PARAMETER</td>
<td width=50%>An invalid parameter was specified.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_NOT_ENOUGH_MEMORY</td>
<td width=50%>A memory allocation failed</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
If the <i>pOverlapped</i> parameter is points to a valid <a href="accctrl_5zle.htm"><b>ACTRL_OVERLAPPED</b></a> structure, <b>SetNamedSecurityInfoEx</b> returns immediately and returns a handle to an event object in the <b>hEvent</b> member of the <b>ACTRL_OVERLAPPED</b> structure. The system sets this event object to the signaled state when the operation has been completed. You can call the <a href="accctrl_3myb.htm"><b>GetOverlappedAccessResults</b></a> function to wait for the operation to be completed and retrieve the results of the asynchronous operation. Alternatively, you can call one of the wait functions, such as <a href="synchro_4ldg.htm"><b>WaitForSingleObject</b></a>, to wait for the event object to be signaled, and then call <b>GetOverlappedAccessResults</b> to determine the results of the operation. The wait functions also allow you to specify a time-out interval; if the interval elapses before the event is signaled, you can call the <a href="accctrl_2cvn.htm"><b>CancelOverlappedAccess</b></a> function to cancel the asynchronous operation. If the <i>pOverlapped</i> parameter is NULL, the operation is performed synchronously.</p>
<p>
To set the security information for a DS object and all its properties, specify SE_DS_OBJECT in the <i>ObjectType</i> parameter and use the <i>pAccessList</i> and <i>pAuditList</i> parameters to specify the security information. Set the <b>pPropertyAccessList</b> member of the <b>ACTRL_ACCESS</b> or <b>ACTRL_AUDIT</b> structure to point to an array of <b>ACTRL_PROPERTY_ENTRY</b> structures. Use one <b>ACTRL_PROPERTY_ENTRY</b> structure to specify access-control information for the object, and additional structures to specify information for each property that requires explicit security. Properties that are not explicitly identified in the array of <b>ACTRL_PROPERTY_ENTRY</b> structures are protected only by the object's access control. </p>
<p>
For file, registry, and DS objects, the <b>SetNamedSecurityInfoEx</b> function can propagate access-control information to the child objects of the specified object. This can occur when the child objects inherit access-control entries from their parent object. This propagation can be time consuming, so you might want to perform it as an asynchronous operation.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in aclapi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="accctrl_2hf0.htm">Access Control Overview</a>, <a href="accctrl_6cmr.htm">Access Control Functions</a>, <a href="accctrl_91wy.htm"><b>ACTRL_ACCESS</b></a>, <a href="accctrl_5vn6.htm"><b>ACTRL_AUDIT</b></a>, <a href="accctrl_6z1u.htm"><b>ACTRL_PROPERTY_ENTRY</b></a>, <a href="accctrl_5ghk.htm"><b>GetNamedSecurityInfoEx</b></a>, <a href="accctrl_96ig.htm"><b>GetSecurityInfoEx</b></a>, <a href="accctrl_90xe.htm"><b>SE_OBJECT_TYPE</b></a>, <a href="accctrl_9f8y.htm"><b>SECURITY_INFORMATION</b></a>, <a href="accctrl_8r3s.htm"><b>SetSecurityInfoEx</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
