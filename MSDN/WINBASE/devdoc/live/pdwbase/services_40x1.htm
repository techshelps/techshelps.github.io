<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sending Control Requests to a Service</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_sending_control_requests_to_a_service"></a>Sending Control Requests to a Service</h2>
<p>
The following example uses the <a href="services_3fs5.htm"><b>ControlService</b></a> function to send a control value to a running service. Different control values require different levels of access to the service object. For example, a service object handle must have SERVICE_STOP access to send the SERVICE_CONTROL_STOP code. When <b>ControlService</b> returns, a <a href="services_9s36.htm"><b>SERVICE_STATUS</b></a> structure contains the latest status information for the service. </p>
<pre><code>VOID ControlSampleService(DWORD fdwControl) 
{ 
    SERVICE_STATUS ssStatus; 
    DWORD fdwAccess; 
 
    // The required service object access depends on the control. 
 
    switch (fdwControl) 
    { 
        case SERVICE_CONTROL_STOP: 
            fdwAccess = SERVICE_STOP; 
            break; 
 
        case SERVICE_CONTROL_PAUSE: 
        case SERVICE_CONTROL_CONTINUE: 
            fdwAccess = SERVICE_PAUSE_CONTINUE; 
            break; 
 
        case SERVICE_CONTROL_INTERROGATE: 
            fdwAccess = SERVICE_INTERROGATE; 
            break; 
 
        default: 
            fdwAccess = SERVICE_INTERROGATE; 
    } 
 
    // Open a handle to the service. 
 
    schService = OpenService( 
        schSCManager,        // SCManager database 
        TEXT("Sample_Srv"),  // name of service 
        fdwAccess);          // specify access 
    if (schService == NULL) 
        MyErrorExit("OpenService"); 
 
    // Send a control value to the service. 
 
    if (! ControlService( 
            schService,   // handle of service 
            fdwControl,   // control value to send 
            &amp;ssStatus) )  // address of status info 
    {
        MyErrorExit("ControlService"); 
    }
 
    // Print the service status. 
 
    printf("  Service Type: 0x%x\n", ssStatus.dwServiceType); 
    printf("  Current State: 0x%x\n", ssStatus.dwCurrentState); 
    printf("  Controls Accepted: 0x%x\n", 
        ssStatus.dwControlsAccepted); 
    printf("  Exit Code: %d\n", ssStatus.dwWin32ExitCode); 
    printf("  Service Specific Exit Code: %d\n", 
        ssStatus.dwServiceSpecificExitCode); 
    printf("  Check Point: %d\n", ssStatus.dwCheckPoint); 
    printf("  Wait Hint: %d\n", ssStatus.dwWaitHint); 
 
    return; 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
