<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateHardLink</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_createhardlink"></a>CreateHardLink</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>CreateHardLink</b> function establishes an NTFS hard link between an existing file and a new file. An NTFS hard link is similar to a POSIX hard link. </p>
<pre><code><b>BOOL CreateHardLink(
</b>  <b>LPCTSTR</b> <i>lpFileName</i><b>,</b>
  <b>LPCTSTR</b> <i>lpExistingFileName</i><b>,</b>
  <b>LPSECURITY_ATTRIBUTES</b> <i>lpSecurityAttributes</i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpFileName</i></dt>
<dd>
Pointer to the name of the new file to be opened.</dd>
<dt>
<i>lpExistingFileName</i></dt>
<dd>
Pointer to the name of the existing file to be linked to the new file.</dd>
<dt>
<i>lpSecurityAttributes</i></dt>
<dd>
Pointer to a <a href="accctrl_8gs2.htm"><b>SECURITY_ATTRIBUTES</b></a> structure that specifies a security descriptor for the new file and determines whether child processes can inherit the returned handle. If <i>lpSecurityAttributes</i> is NULL, the object receives a default security descriptor and the handle cannot be inherited.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
You can use hard links to provide multiple names for the same underlying file. Hard links synchronize updates to the underlying file. Therefore, modifications performed on the existing file are also performed on the new file to which it is linked. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="fsys_4jeb.htm">File Systems Overview</a>, <a href="fsys_419v.htm">File System Functions</a>, <a href="accctrl_8gs2.htm"><b>SECURITY_ATTRIBUTES</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
