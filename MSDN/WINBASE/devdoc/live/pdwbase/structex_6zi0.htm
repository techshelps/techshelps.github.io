<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handler Syntax</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_handler_syntax"></a>Handler Syntax</h2>
<p>
This section describes the syntax and usage of structured exception handling as implemented in the Microsoft C/C++ Optimizing Compiler. The following keywords are interpreted by the compiler as part of the structured exception-handling mechanism. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=16%>Keyword</th>
<th align=left width=84%>Description</th>
</tr>
<tr valign=top>
<td width=16%><b>try</b></td>
<td width=84%>Begins a guarded body of code. Used with the <b>except</b> keyword to construct an exception handler, or with the <b>finally</b> keyword to construct a termination handler.</td>
</tr>
<tr valign=top>
<td width=16%><b>except</b></td>
<td width=84%>Begins a block of code that is executed only when an exception occurs within its associated <b>try</b> block.</td>
</tr>
<tr valign=top>
<td width=16%><b>finally</b></td>
<td width=84%>Begins a block of code that is executed whenever the flow of control leaves its associated <b>try</b> block.</td>
</tr>
</table><br>
<p>
The compiler also interprets the <a href="structex_2fz9.htm"><b>GetExceptionCode</b></a>, <a href="structex_50oe.htm"><b>GetExceptionInformation</b></a>, and <a href="structex_1zxq.htm"><b>AbnormalTermination</b></a> functions as keywords, and their use outside the appropriate exception-handling syntax generates a compiler error. The following are brief descriptions of these functions. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=35%>Function</th>
<th align=left width=65%>Description</th>
</tr>
<tr valign=top>
<td width=35%><a href="structex_2fz9.htm"><b>GetExceptionCode</b></a></td>
<td width=65%>Returns a code that identifies the type of exception. This function can be called only from within the filter expression or exception-handler block of a <b>try</b>-<b>except</b> exception handler.</td>
</tr>
<tr valign=top>
<td width=35%><a href="structex_50oe.htm"><b>GetExceptionInformation</b></a></td>
<td width=65%>Returns a pointer to an <a href="structex_1unm.htm"><b>EXCEPTION_POINTERS</b></a> structure containing pointers to the context record and the exception record. This function can be called only from within the filter expression of a <b>try</b>-<b>except</b> exception handler.</td>
</tr>
<tr valign=top>
<td width=35%><a href="structex_1zxq.htm"><b>AbnormalTermination</b></a></td>
<td width=65%>Indicates whether the flow of control left the associated <b>try</b> block sequentially after executing the last statement in the block. This function can be called only from within the <b>finally</b> block of a <b>try</b>-<b>finally</b> termination handler.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
