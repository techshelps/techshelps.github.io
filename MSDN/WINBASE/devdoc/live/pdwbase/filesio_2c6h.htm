<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetFileApisToANSI</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setfileapistoansi"></a>SetFileApisToANSI</h1>
<p>
The <b>SetFileApisToANSI</b> function causes a set of Win32 file functions to use the ANSI character set code page. This function is useful for 8-bit console input and output operations.</p>
<pre><b><code>VOID SetFileApisToANSI(VOID)
 </code></b></pre>
<h4>Parameters</h4>
<p>
This function has no parameters.</p>
<h4>Return Values</h4>
<p>
This function has no return value.</p>
<h4>Remarks</h4>
<p>
The Win32 file functions whose code page is set by <b>SetFileApisToANSI </b>are those functions exported by KERNEL32.DLL which accept or return a file name. </p>
<p>
The <b>SetFileApisToANSI </b>function complements the <a href="filesio_5xv1.htm"><b>SetFileApisToOEM</b></a> function, which causes the same set of Win32 file functions to use the OEM character set code page.</p>
<p>
The 8-bit console functions use the OEM code page by default. All other functions use the ANSI code page by default. This means that strings returned by the console functions may not be processed correctly by other functions, and vice versa. For example, if the<b> <a href="filesio_4qcl.htm">FindFirstFileA</a></b> function returns a string that contains certain extended ANSI characters, and the 8-bit console functions are set to use the OEM code page, then the <a href="conchar_2679.htm"><b>WriteConsoleA</b></a> function will not display the string properly. </p>
<p>
Use the <a href="filesio_2bzd.htm"><b>AreFileApisANSI</b></a> function to determine which code page the set of file functions is currently using. Use the <a href="conchar_22eo.htm"><b>SetConsoleCP</b></a> and <a href="conchar_5jjk.htm"><b>SetConsoleOutputCP</b></a> functions to set the code page for the 8-bit console functions.</p>
<p>
To solve the problem of code page incompatibility, it is best to use Unicode for console applications. Console applications that use Unicode are much more versatile than those that use 8-bit console functions. Barring that solution, a console application can call the <a href="filesio_5xv1.htm"><b>SetFileApisToOEM</b></a> function to cause the set of Win32 file functions to use OEM character set strings rather than ANSI character set strings. Use the <b>SetFileApisToANSI </b>function to set those functions back to the ANSI code page.</p>
<p>
When dealing with command lines, a console application should obtain the command line in Unicode form, and then convert it to OEM form using the relevant character-to-OEM functions. Note also that the <b>argv</b> function uses the ANSI character set. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.5 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="filesio_2xm7.htm">File I/O Overview</a>, <a href="filesio_3n5f.htm">File Functions</a>, <a href="filesio_2bzd.htm"><b>AreFileApisANSI</b></a>,<b> <a href="filesio_4qcl.htm">FindFirstFileA</a></b>, <a href="filesio_5xv1.htm"><b>SetFileApisToOEM</b></a>, <a href="conchar_22eo.htm"><b>SetConsoleCP</b></a>,<b> <a href="conchar_5jjk.htm">SetConsoleOutputCP</a></b>, <a href="conchar_2679.htm"><b>WriteConsoleA</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
