<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LockFileEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_lockfileex"></a>LockFileEx</h1>
<p>
The <b>LockFileEx</b> function locks a byte range within an open file for shared or exclusive access. </p>
<pre><code><b>BOOL LockFileEx(
  HANDLE</b><i> hFile</i><b>,      </b>// handle of file to lock
<b>  DWORD</b><i> dwFlags</i><b>,     </b>// functional behavior modification flags
<b>  DWORD</b><i> dwReserved</i><b>,  </b>// reserved, must be set to zero
<b>  DWORD</b><i> nNumberOfBytesToLockLow</i><b>,</b>
<b>                     </b>// low-order 32 bits of length to lock
<b>  DWORD</b><i> nNumberOfBytesToLockHigh</i><b>,</b>
<b>                     </b>// high-order 32 bits of length to lock
<b>  LPOVERLAPPED</b><i> lpOverlapped</i> 
                     // addr. of structure with lock region start 
                     // offset
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFile</i></dt>
<dd>
Handle to an open handle to a file that is to have a range of bytes locked for shared or exclusive access. The handle must have been created with either GENERIC_READ or GENERIC_WRITE access to the file. </dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Specifies flags that modify the behavior of this function. This parameter may be one or more of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Value</th>
<th align=left width=50%>Meaning</th>
</tr>
<tr valign=top>
<td width=50%>LOCKFILE_FAIL_IMMEDIATELY</td>
<td width=50%>If this value is specified, the function returns immediately if it is unable to acquire the requested lock. Otherwise, it waits.</td>
</tr>
<tr valign=top>
<td width=50%>LOCKFILE_EXCLUSIVE_LOCK</td>
<td width=50%>If this value is specified, the function requests an exclusive lock. Otherwise, it requests a shared lock.</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwReserved</i></dt>
<dd>
Reserved parameter; must be set to zero. </dd>
<dt>
<i>nNumberOfBytesToLockLow</i></dt>
<dd>
Specifies the low-order 32 bits of the length of the byte range to lock. </dd>
<dt>
<i>nNumberOfBytesToLockHigh</i></dt>
<dd>
Specifies the high-order 32 bits of the length of the byte range to lock. </dd>
<dt>
<i>lpOverlapped</i></dt>
<dd>
Pointer to an <a href="synchro_8tf6.htm"><b>OVERLAPPED</b></a> structure that the function uses with the locking request. This structure, which is required, contains the file offset of the beginning of the lock range. Be sure to initialize the <b>hEvent</b> member to a valid handle or zero. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero or NULL. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
Locking a region of a file is used to acquire shared or exclusive access to the specified region of the file. File locks are not inherited by a new process during process creation. </p>
<p>
Locking a portion of a file for exclusive access denies all other processes both read and write access to the specified region of the file. Locking a region that goes beyond the current end-of-file position is not an error. </p>
<p>
Locking a portion of a file for shared access denies all processes write access to the specified region of the file, including the process that first locks the region. All processes can read the locked region. </p>
<p>
If an exclusive lock is requested for a range of a file that already has a shared or exclusive lock, this call waits until the lock is granted, unless the LOCKFILE_FAIL_IMMEDIATELY flag is specified. </p>
<p>
Locks may not overlap an existing locked region of the file. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="filesio_2xm7.htm">File I/O Overview</a>, <a href="filesio_3n5f.htm">File Functions</a>, <a href="filesio_7wmd.htm"><b>CreateFile</b></a>, <a href="filesio_63xh.htm"><b>LockFile</b></a>, <a href="synchro_8tf6.htm"><b>OVERLAPPED</b></a>, <a href="filesio_1jl1.htm"><b>UnlockFile</b></a>, <a href="filesio_4dko.htm"><b>UnlockFileEx</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
