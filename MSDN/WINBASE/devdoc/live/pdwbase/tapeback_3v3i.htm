<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Backup Application</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_creating_a_backup_application"></a>Creating a Backup Application</h2>
<p>
To perform any input or output on a tape, a backup application must first obtain a handle of the tape device. The following code sample shows how to use the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function to open a tape device. </p>
<pre><code>HANDLE hTape;   // handle to tape device 
 
hTape = CreateFile( 
    "\\\\.\\TAPE0",               // name of tape device to open 
    GENERIC_READ | GENERIC_WRITE, // read-write access 
    0,                            // not used 
    0,                            // not used 
    OPEN_EXISTING,                // required for tape devices 
    0,                            // not used 
    NULL);                        // not used 
 </code></pre>
<p>
To back up a directory tree to a tape, an application must use the <a href="filesio_4qcl.htm"><b>FindFirstFile</b></a> and <a href="filesio_4ndx.htm"><b>FindNextFile</b></a> functions to traverse the directory tree. Each time a file is found, the application should get the file's attributes by using the <a href="filesio_9pgz.htm"><b>GetFileAttributes</b></a> function. If there are hard links, the application should determine the number of links and save the file's unique identifier in a table for future comparisons. The first time a file is found, the application should use <a href="filesio_7wmd.htm"><b>CreateFile</b></a> to open the file and the <a href="tapeback_5t0k.htm"><b>BackupRead</b></a> function to begin the backup. Then it can use the <a href="filesio_3kkl.htm"><b>WriteFile</b></a> function repeatedly to transfer all the information in the buffer filled by <b>BackupRead</b> to the tape. The second time a file is found (checked against the table of file identifiers when there are hard links), the application can simply write the general file information to the tape, followed by a stream whose identifier is BACKUP_LINK. </p>
<p>
When restoring files from tape to disk, an application must use the <b>CreateFile</b>, <a href="tapeback_3bl1.htm"><b>BackupWrite</b></a>, and <a href="filesio_39id.htm"><b>ReadFile</b></a> functions. For each file on the tape, the application should use <b>CreateFile</b> to create a new file on disk and <b>BackupWrite</b> to begin restoring the file. Then it should use <b>ReadFile</b> repeatedly until all the information for the file has been read from the tape into the buffer filled by <b>BackupWrite</b>. If one of the streams in the <b>BackupWrite</b> buffer has a BACKUP_LINK stream identifier, the application must establish a hard link. If the data needed to establish the link does not exist, <b>BackupWrite</b> fails. The application can use a preexisting catalog to locate and restore the original data, or it can notify the user that the file data to be restored is in a different location. </p>
<p>&nbsp;</p></body>
</HTML>
