<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initialization</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_initialization"></a>Initialization</h2>
<p>
Before calling any other DDEML function, an application must call the <a href="ddemlib_2v6t.htm"><b>DdeInitialize</b></a> function. <b>DdeInitialize</b> obtains an instance identifier for the application, registers the application's DDE callback function with the DDEML, and specifies the transaction filter flags for the callback function. </p>
<p>
Each instance of an application or a dynamic-link library (DLL) must pass its instance identifier as the <i>idInst</i> parameter to any other DDEML function that requires it. The purpose of multiple DDEML instances is to support DLLs that must use the DDEML at the same time an application is using it. An application must not use more than one instance of the DDEML. </p>
<p>
<i>Transaction filters</i> optimize system performance by preventing the DDEML from passing unwanted transactions to the application's DDE callback function. An application sets the transaction filters in the <a href="ddemlib_2v6t.htm"><b>DdeInitialize</b></a> <i>ufCmd</i> parameter. An application must specify a transaction filter flag for each type of transaction that it does not process in its callback function. An application can change its transaction filters with a subsequent call to <b>DdeInitialize</b>. For more information about transactions, see <a href="ddemlib_9iwk.htm">Transaction Management</a>.</p>
<p>
The following example shows how to initialize an application to use the DDEML. </p>
<pre><code>DWORD idInst = 0; 
HINSTANCE hinst; 
 
DdeInitialize(&amp;idInst,         // receives instance identifier 
    (PFNCALLBACK) DdeCallback, // address of callback function 
    CBF_FAIL_EXECUTES |        // filter XTYPE_EXECUTE 
    CBF_SKIP_ALLNOTIFICATIONS, // filter notifications 
    0); 
 </code></pre>
<p>
An application must call the <a href="ddemlib_346d.htm"><b>DdeUninitialize</b></a> function when it is no longer going to use the DDEML. This function terminates any conversations currently open for the application and frees the DDEML resources the system allocated for the application. </p>
<p>&nbsp;</p></body>
</HTML>
