<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Input Context</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_input_context"></a>Input Context</h2>
<p>
An <i>input context</i> is an internal structure, maintained by the IME, that contains information about the status of the IME and is used by IME windows. By default, the system creates and assigns an input context to each thread. Within the thread, this default input context is a shared resource and is associated with each newly created window.</p>
<p>
To retrieve or set information in the IME, an application must first retrieve a handle to the input context associated with a given window. You retrieve the handle by using the <a href="ime_3o1g.htm"><b>ImmGetContext</b></a> function. You can use the retrieved handle in subsequent calls to the input method manager functions to retrieve and set IME values, such as the composition window style, the composition style, and the status window position. Once you have finished using the context, you must release it using the <a href="ime_1lys.htm"><b>ImmReleaseContext</b></a> function.</p>
<p>
Because the default input context is a shared resource, any changes you make to it apply to all windows in the thread. However, you can override this default behavior by creating and associating your own input context to one or more window of the thread. The changes you make to your own input context apply only to the windows with which it is associated.</p>
<p>
You can create an input context by using the <a href="ime_5v90.htm"><b>ImmCreateContext</b></a> function. You assign the context to a window by using the <a href="ime_08s4.htm"><b>ImmAssociateContext</b></a> function. This function returns the handle of the previously associated input context. If you have not associated an input context with the window before, the returned handle is for the default input context. You should save this handle and later reassociate with the window if you no longer want to use your own input context. </p>
<p>
Once an input context is associated with a window, the system automatically selects that context when the window is activated and receives the input focus. The style and other information in the input context affects subsequent keyboard input for that window, determining whether and how the IME operates.</p>
<p>
You must destroy any input context you create before terminating your application. You destroy an input context by using the <a href="ime_5gfo.htm"><b>ImmDestroyContext</b></a> function. Before destroying it, you must remove the input context from any association it has with windows in the thread by using the <b>ImmAssociateContext</b> function.</p>
<p>&nbsp;</p></body>
</HTML>
