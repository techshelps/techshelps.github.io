<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateConsoleScreenBuffer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_createconsolescreenbuffer"></a>CreateConsoleScreenBuffer</h1>
<p>
The <b>CreateConsoleScreenBuffer</b> function creates a console screen buffer and returns a handle to it. </p>
<pre><code><b>HANDLE CreateConsoleScreenBuffer(
  DWORD</b><i> dwDesiredAccess</i><b>,  </b>// access flag
<b>  DWORD</b><i> dwShareMode</i><b>,      </b>// buffer share mode
<b>  LPSECURITY_ATTRIBUTES</b><i> *lpSecurityAttributes</i><b>,</b>
<b>                          </b>// pointer to security attributes
<b>  DWORD</b><i> dwFlags</i><b>,          </b>// type of buffer to create
  <b>LPVOID </b><i>lpScreenBufferData</i>   // reserved
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwDesiredAccess</i></dt>
<dd>
Specifies the desired access to the console screen buffer. This parameter can be one or both of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=31%>Value</th>
<th align=left width=69%>Meaning</th>
</tr>
<tr valign=top>
<td width=31%>GENERIC_READ</td>
<td width=69%>Requests read access to the console screen buffer, enabling the process to read data from the buffer.</td>
</tr>
<tr valign=top>
<td width=31%>GENERIC_WRITE</td>
<td width=69%>Requests write access to the console screen buffer, enabling the process to write data to the buffer.</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwShareMode</i></dt>
<dd>
Specifies how this console screen buffer can be shared. This parameter can be zero, indicating that the buffer cannot be shared, or it can be one or both of the following two values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=35%>Value</th>
<th align=left width=65%>Meaning</th>
</tr>
<tr valign=top>
<td width=35%>FILE_SHARE_READ</td>
<td width=65%>Other open operations can be performed on the console screen buffer for read access.</td>
</tr>
<tr valign=top>
<td width=35%>FILE_SHARE_WRITE</td>
<td width=65%>Other open operations can be performed on the console screen buffer for write access.</td>
</tr>
</table><br>

</dd>
<dt>
<i>lpSecurityAttributes</i></dt>
<dd>
Pointer to a <a href="accctrl_8gs2.htm"><b>SECURITY_ATTRIBUTES</b></a> structure that determines whether the returned handle can be inherited by child processes. If <i>lpSecurityAttributes</i> is NULL, the handle cannot be inherited. 
<p>
<b>Windows NT:</b> The <b>lpSecurityDescriptor</b> member of the structure specifies a security descriptor for the new console screen buffer. If <i>lpSecurityAttributes</i> is NULL, the console screen buffer gets a default security descriptor. 
</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Specifies the type of console screen buffer to create. The only currently supported screen buffer type is CONSOLE_TEXTMODE_BUFFER. </dd>
<dt>
<i>lpScreenBufferData</i></dt>
<dd>
Reserved for possible future use; should be NULL. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a handle to the new console screen buffer.</p>
<p>
If the function fails, the return value is INVALID_HANDLE_VALUE. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
A console can have multiple screen buffers but only one active screen buffer. Inactive screen buffers can be accessed for reading and writing, but only the active screen buffer is displayed. To make the new screen buffer the active screen buffer, use the <a href="conchar_9hrm.htm"><b>SetConsoleActiveScreenBuffer</b></a> function. </p>
<p>
The calling process can use the returned handle in any function that requires a handle to a console screen buffer, subject to the limitations of access specified by the <i>dwDesiredAccess</i> parameter. </p>
<p>
The calling process can use the <b>DuplicateHandle</b> function to create a duplicate screen buffer handle that has different access or inheritability from the original handle. However, <b>DuplicateHandle</b> cannot be used to create a duplicate that is valid for a different process (except through inheritance). </p>
<p>
To close the screen buffer handle, use the <b>CloseHandle</b> function. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincon.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="conchar_4p6c.htm">Consoles and Character-Mode Support Overview</a>, <a href="conchar_3vg3.htm">Console Functions</a>, <a href="handobj_289x.htm"><b>CloseHandle</b></a>, <a href="handobj_2pyd.htm"><b>DuplicateHandle</b></a>, <a href="conchar_34dr.htm"><b>GetConsoleScreenBufferInfo</b></a>, <a href="accctrl_8gs2.htm"><b>SECURITY_ATTRIBUTES</b></a>, <a href="conchar_9hrm.htm"><b>SetConsoleActiveScreenBuffer</b></a>, <a href="conchar_7sv9.htm"><b>SetConsoleScreenBufferSize</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
