<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Semaphore Objects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_using_semaphore_objects"></a>Using Semaphore Objects</h2>
<p>
In the following example, a process uses a semaphore object to limit the number of windows it creates. First, it uses the <a href="synchro_9zol.htm"><b>CreateSemaphore</b></a> function to create the semaphore and to specify initial and maximum counts. </p>
<pre><code>HANDLE hSemaphore;
LONG cMax = 10;
LONG cPreviousCount;

// Create a semaphore with initial and max. counts of 10.

hSemaphore = CreateSemaphore( 
    NULL,   // no security attributes
    cMax,   // initial count
    cMax,   // maximum count
    NULL);  // unnamed semaphore

if (hSemaphore == NULL) 
{
    // Check for error.
}
 </code></pre>
<p>
Before any thread of the process creates a new window, it uses the <a href="synchro_4ldg.htm"><b>WaitForSingleObject</b></a> function to determine whether the semaphore's current count permits the creation of additional windows. The wait function's time-out parameter is set to zero, so the function returns immediately if the semaphore is nonsignaled. </p>
<pre><code>DWORD dwWaitResult; 
 
// Try to enter the semaphore gate.

dwWaitResult = WaitForSingleObject( 
        hSemaphore,   // handle to semaphore
        0L);          // zero-second time-out interval

switch (dwWaitResult) { 

    // The semaphore object was signaled.
    case WAIT_OBJECT_0: 
        // OK to open another window.
        break; 

    // Semaphore was nonsignaled, so a time-out occurred.
    case WAIT_TIMEOUT: 
        // Cannot open another window.
        break; 
}
 </code></pre>
<p>
When a thread closes a window, it uses the <a href="synchro_1vqd.htm"><b>ReleaseSemaphore</b></a> function to increment the semaphore's count. </p>
<pre><code>// Increment the count of the semaphore.

if (!ReleaseSemaphore( 
        hSemaphore,  // handle to semaphore
        1,           // increase count by one
        NULL) )      // not interested in previous count
{
    // Deal with the error.
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
