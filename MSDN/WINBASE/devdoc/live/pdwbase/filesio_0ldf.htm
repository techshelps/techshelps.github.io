<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating and Opening Files</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_creating_and_opening_files"></a>Creating and Opening Files</h2>
<p>
You can use the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function to create a new file or open an existing file. You must specify the filename, preferred access, share mode, creation instructions, and attributes. </p>
<p>
In the following example, <a href="filesio_7wmd.htm"><b>CreateFile</b></a> opens an existing file for reading. </p>
<pre><code>HANDLE hFile; 
 
hFile = CreateFile("MYFILE.TXT",           // open MYFILE.TXT 
                GENERIC_READ,              // open for reading 
                FILE_SHARE_READ,           // share for reading 
                NULL,                      // no security 
                OPEN_EXISTING,             // existing file only 
                FILE_ATTRIBUTE_NORMAL,     // normal file 
                NULL);                     // no attr. template 
 
if (hFile == INVALID_HANDLE_VALUE) 
{ 
        ErrorHandler("Could not open file.");   // process error 
} 
 </code></pre>
<p>
In this example, <a href="filesio_7wmd.htm"><b>CreateFile</b></a> succeeds only if a file named MYFILE.TXT already exists in the current directory. An application should check the return value of <b>CreateFile</b> before attempting to use the handle to access the file. If an error occurs, the application should use the <a href="errors_3uwi.htm"><b>GetLastError</b></a> function to get extended error information and respond accordingly. </p>
<p>
A file must be closed before it can be deleted. The following lines close and delete the MYFILE.TXT file. </p>
<pre><code>CloseHandle(hFile); 
DeleteFile("MYFILE.TXT"); 
 </code></pre>
<p>
In the following example, <a href="filesio_7wmd.htm"><b>CreateFile</b></a> creates a new file and opens it for writing. </p>
<pre><code>HANDLE hFile; 
 
hFile = CreateFile("MYFILE.TXT",           // create MYFILE.TXT 
             GENERIC_WRITE,                // open for writing 
             0,                            // do not share 
             NULL,                         // no security 
             CREATE_ALWAYS,                // overwrite existing 
             FILE_ATTRIBUTE_NORMAL |       // normal file 
             FILE_FLAG_OVERLAPPED,         // asynchronous I/O 
             NULL);                        // no attr. template 

if (hFile == INVALID_HANDLE_VALUE) 
{ 
    ErrorHandler("Could not open file.");  // process error 
} 
 </code></pre>
<p>
In addition to the standard attributes (read only, hidden, system, and so on), you can also specify security attributes by including a pointer to a <a href="accctrl_8gs2.htm"><b>SECURITY_ATTRIBUTES</b></a> structure as the fourth parameter. However, the underlying file system must support security for these attributes for them to have any effect. For more information about security attributes, see <a href="accctrl_2hf0.htm">Access Control</a>. </p>
<p>&nbsp;</p></body>
</HTML>
