<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Checking a Thread's Access to an Object</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_checking_a_thread_s_access_to_an_object"></a>Checking a Thread's Access to an Object</h3>
<p>
When a thread tries to access a securable object, the system either grants or denies access. If the object does not have a DACL, the system grants the requested access. Otherwise, the system looks for <a href="accctrl_0vfj.htm">ACEs</a> in the object's DACL that apply to the thread. Each ACE in the object's DACL specifies the access rights allowed or denied for a <a href="accctrl_5j8z.htm">trustee</a>, which can be a user account, group account, or logon session. </p>
<p>
The system compares the trustee in each ACE to the trustees identified in the thread's <a href="accctrl_4b8z.htm">access token</a>. An access token contains SIDs that identify the user and the group accounts to which the user belongs. A token also contains a logon SID that identifies the current logon session. During an access check, the system ignores group SIDs that are not enabled. For more information on enabled, disabled, and deny-only SIDs, see <a href="accctrl_79ym.htm">SID Attributes in an Access Token</a>. </p>
<p>
Typically, the system uses the primary access token of the thread that is requesting access. However, if the thread is impersonating another user, the system uses the thread's impersonation token. </p>
<p>
The system examines each ACE in sequence until one of the following events occurs:
<ul>
<li>
An access-denied ACE explicitly denies any of the requested <a href="accctrl_6xmb.htm">access rights</a> to one of the trustees listed in the thread's access token.</li>
<li>
One or more access-allowed ACEs for trustees listed in the thread's access token explicitly grant all the requested access rights. </li>
<li>
All ACEs have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied. </li>
</ul>
<p>
The following diagram illustrates how an object's DACL can allow access to one thread while denying access to another. </p>
<p>
<img src="images/accctrl1.gif" border=0></p>
<p>
For Thread A, the system reads ACE 1 and immediately denies access because the access-denied ACE applies to the user in the thread's access token. In this case, the system does not check ACEs 2 and 3. For Thread B, ACE 1 does not apply, so the system proceeds to ACE 2, which allows write access, and ACE 3 which allows read and execute access. </p>
<p>
Because the system stops checking ACEs when the requested access is explicitly granted or denied, the order of ACEs in a DACL is important. Note that if the ACE order were different in the example, the system might have granted access to Thread A. For system objects, Microsoft defines a preferred <a href="accctrl_2hik.htm">order of ACEs in a DACL</a>. </p>
<p>
For some object types, you can use the <b>TrusteeAccessToObject</b> function to determine the types of access that an object's DACL grants to a specified trustee. <b>TrusteeAccessToObject</b> uses a name string to identify an object of interest. </p>
<p>
You cannot use <b>TrusteeAccessToObject</b> with mailslot, named pipe, process, thread, window station, and desktop objects. Use the following procedure to determine a trustee's access rights to these types of objects, or to other objects identified by a handle.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To determine a trustee's access rights</h5>
<ol>
<li>
Call the <b>GetSecurityInfo</b> function to get a pointer to the object's DACL.</li>
<li>
Call the <b>GetEffectiveRightsFromAcl</b> function to retrieve the access rights that the DACL grants to a specified trustee.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
