<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Int64ShllMod32</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_int64shllmod32"></a>Int64ShllMod32</h1>
<p>
The <b>Int64ShllMod32</b> function performs a left logical shift operation on an unsigned 64-bit integer value. The function provides improved shifting code for left logical shifts where the shift count is in the range 0 – 31. </p>
<pre><code><b>ULONGLONG Int64ShllMod32(
  ULONGLONG</b><i> Value</i><b>,  </b>// the unsigned 64-bit integer to shift left logically
<b>  DWORD</b><i> ShiftCount</i>  // a shift count in the range 0 - 31
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Value</i></dt>
<dd>
Specifies the unsigned 64-bit integer to be shifted.</dd>
<dt>
<i>ShiftCount</i></dt>
<dd>
Specifies a shift count in the range 0 – 31.  
</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value is the unsigned 64-bit integer result of the left logical shift operation.</p>
<h4>Remarks</h4>
<p>
The shift count is the number of bit positions that the value's bits move.</p>
<p>
In a left logical shift operation on an unsigned value, the value's bits move to the left, and vacated bits on the right side of the value are set to zero.</p>
<p>
A compiler can generate optimal code for a left logical shift operation when the shift count is a constant. However, if the shift count is a variable whose range of values is unknown, the compiler must assume the worst case, leading to non-optimal code: code that calls a subroutine, or code that is inline but branches. By restricting the shift count to the range 0 – 31, the <b>Int64ShllMod32</b> function lets the compiler generate optimal or near-optimal code. </p>
<p>
Please note that the <b>Int64ShllMod32 </b>function's <i>Value</i> parameter and return value are 64-bit values, not <b>LARGE_INTEGER</b> structures. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winnt.h.</p>
<h4>See Also</h4>
<p>
<a href="largeint_7mk3.htm">Large Integer Operations Overview</a>, <a href="largeint_9to3.htm">Large Integer Operations Functions</a>, <a href="largeint_8xde.htm"><b>Int64ShraMod32</b></a>, <a href="largeint_32sy.htm"><b>Int64ShrlMod32</b></a></p>
<p>&nbsp;</p></body>
</HTML>
