<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VLM Functions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_vlm_functions"></a>VLM Functions</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
VLM functions are defined to operate on memory using 64-bit pointers. The VLM functions, combined with existing Win32 functions, are sufficient to support very memory-intensive applications.</p>
<p>
The following functions allocate, free, protect, and query page-aligned blocks of memory that can be addressed through 64-bit pointers.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=71%></th>
<th align=left width=29%></th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_35v1.htm"><b>GlobalMemoryStatusVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_2wz1.htm"><b>MapViewOfFileVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_2ei5.htm"><b>ReadProcessMemoryVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_4eel.htm"><b>UnmapViewOfFileVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_9drh.htm"><b>VirtualAllocVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_5ist.htm"><b>VirtualFreeVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_07ot.htm"><b>VirtualProtectVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_8kbx.htm"><b>VirtualQueryVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_5o8d.htm"><b>WriteProcessMemoryVlm</b></a></td>
<td width=29%></td>
</tr>
</table><br>
<p>
The following functions copy, move, and fill memory using either 32-bit or 64-bit addresses.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=71%></th>
<th align=left width=29%></th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_19pp.htm"><b>CopyMemoryVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_9d65.htm"><b>FillMemoryVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_15yl.htm"><b>MoveMemoryVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_4x2l.htm"><b>ZeroMemoryVlm</b></a></td>
<td width=29%></td>
</tr>
</table><br>
<p>
The following functions move data between a noncached file and memory using 64-bit addresses and asynchronous input and output.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=71%></th>
<th align=left width=29%></th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=71%><a href="filesio_2c36.htm"><b>ReadFileScatter</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_2fvx.htm"><b>ReadFileVlm</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="filesio_55iq.htm"><b>WriteFileGather</b></a></td>
<td width=29%></td>
</tr>
<tr valign=top>
<td width=71%><a href="memman_1hm5.htm"><b>WriteFileVlm</b></a></td>
<td width=29%></td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
