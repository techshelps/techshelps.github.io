<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WriteConsole</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_writeconsole"></a>WriteConsole</h1>
<p>
The <b>WriteConsole</b> function writes a character string to a console screen buffer beginning at the current cursor location. </p>
<pre><code><b>BOOL WriteConsole(
  HANDLE</b><i> hConsoleOutput</i><b>, </b>// handle to a console screen buffer
<b>  CONST VOID</b><i> *lpBuffer</i><b>,  </b>// pointer to buffer to write from
  <b>DWORD</b> <i>nNumberOfCharsToWrite</i><b>,</b>
<b>                         </b>// number of characters to write
<b>  LPDWORD</b><i> lpNumberOfCharsWritten</i><b>,</b>
<b>                         </b>// pointer to number of characters written
<b>  LPVOID</b><i> lpReserved</i>      // reserved
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hConsoleOutput</i></dt>
<dd>
Handle to the console screen buffer to be written to. The handle must have GENERIC_WRITE access. </dd>
<dt>
<i>lpBuffer</i></dt>
<dd>
Pointer to a buffer that contains characters to be written to the screen buffer. </dd>
<dt>
<i>nNumberOfCharsToWrite</i></dt>
<dd>
Specifies the number of characters to write. </dd>
<dt>
<i>lpNumberOfCharsWritten</i></dt>
<dd>
Pointer to a 32-bit variable that receives the number of characters actually written. </dd>
<dt>
<i>lpReserved</i></dt>
<dd>
Reserved; must be NULL. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <b>GetLastError</b>. </p>
<h4>Remarks</h4>
<p>
<b>WriteConsole</b> writes characters to a console screen buffer. It behaves like the <a href="filesio_3kkl.htm"><b>WriteFile</b></a> function, except it can write in either Unicode (wide-character) or ANSI mode. To create an application that maintains a single set of sources compatible with both modes, use <b>WriteConsole</b> rather than <b>WriteFile</b>. Although <b>WriteConsole</b> can be used only with a console screen buffer handle, <b>WriteFile</b> can be used with other handles (such as files or pipes). <b>WriteConsole</b> fails if used with a standard handle that has been redirected to be something other than a console handle. </p>
<p>
Although an application can use <b>WriteConsole</b> in ANSI mode to write ANSI characters, consoles do not support ANSI escape sequences. However, some Win32 functions provide equivalent functionality: for example, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_setcursorpos">
</object><a href=JavaScript:alink_1.Click()><b>SetCursorPos</b></a>, <a href="conchar_2tid.htm"><b>SetConsoleTextAttribute</b></a>, and <a href="conchar_7x7z.htm"><b>GetConsoleCursorInfo</b></a>. </p>
<p>
<b>WriteConsole</b> writes characters to the screen buffer at the current cursor position. The cursor position advances as characters are written. The <a href="conchar_8wfi.htm"><b>SetConsoleCursorPosition</b></a> function sets the current cursor position. </p>
<p>
Characters are written using the foreground and background color attributes associated with the screen buffer. The <b>SetConsoleTextAttribute</b> function changes these colors. To determine the current color attributes and the current cursor position, use <b>GetConsoleScreenBufferInfo</b>. </p>
<p>
All of the input modes that affect the behavior of <b>WriteFile</b> have the same effect on <b>WriteConsole</b>. To retrieve and set the output modes of a console screen buffer, use the <b>GetConsoleMode</b> and <b>SetConsoleMode</b> functions. </p>
<p>
<b>Windows NT:</b> This function uses either Unicode characters or 8-bit characters from the console's current code page. The console's code page defaults initially to the system's OEM code page. To change the console's code page, use the <b>SetConsoleCP</b> or <b>SetConsoleOutputCP</b> functions, or use the <b>chcp</b> or <b>mode con cp select=</b> commands.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincon.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="conchar_4p6c.htm">Consoles and Character-Mode Support Overview</a>, <a href="conchar_3vg3.htm">Console Functions</a>, <a href="conchar_7x7z.htm"><b>GetConsoleCursorInfo</b></a>, <a href="conchar_7opx.htm"><b>GetConsoleMode</b></a>, <a href="conchar_34dr.htm"><b>GetConsoleScreenBufferInfo</b></a>, <a href="conchar_34h1.htm"><b>ReadConsole</b></a>, <a href="conchar_22eo.htm"><b>SetConsoleCP</b></a>, <a href="conchar_8wfi.htm"><b>SetConsoleCursorPosition</b></a>, <a href="conchar_25b9.htm"><b>SetConsoleMode</b></a>, <a href="conchar_5jjk.htm"><b>SetConsoleOutputCP</b></a>, <a href="conchar_2tid.htm"><b>SetConsoleTextAttribute</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_setcursorpos">
</object><a href=JavaScript:alink_2.Click()><b>SetCursorPos</b></a>, <a href="filesio_3kkl.htm"><b>WriteFile</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
