<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetOverlappedAccessResults</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getoverlappedaccessresults"></a>GetOverlappedAccessResults</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>GetOverlappedAccessResults</b> function returns the results of an asynchronous call to the <a href="accctrl_8r3s.htm"><b>SetSecurityInfoEx</b></a> or <a href="accctrl_9jqw.htm"><b>SetNamedSecurityInfoEx</b></a> functions. <b>GetOverlappedAccessResults</b> can wait for the asynchronous operation to be completed, or it can return immediately with the current state of the operation.</p>
<pre><code><b>DWORD GetOverlappedAccessResults(
  PACTRL_OVERLAPPED</b><i> pOverlapped</i><b>,</b>
<b>                   </b>// pointer to the structure filled in by the 
                   // asynchronous call
<b>  BOOL</b><i> fWaitForCompletion</i><b>,</b>
<b>                   </b>// TRUE indicates to wait for completion
<b>  PDWORD</b><i> pResult</i><b>,  </b>// receives the result of the asynchronous 
                   // operation
<b>  PULONG</b><i> pcItemsProcessed</i>
<i>                   </i>// receives the number of objects processed
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pOverlapped</i></dt>
<dd>
Pointer to the <a href="accctrl_5zle.htm"><b>ACTRL_OVERLAPPED</b></a> structure that was filled in by the <a href="accctrl_8r3s.htm"><b>SetSecurityInfoEx</b></a> or <a href="accctrl_9jqw.htm"><b>SetNamedSecurityInfoEx</b></a> call that started the asynchronous operation. </dd>
<dt>
<i>fWaitForCompletion</i></dt>
<dd>
Flag that indicates whether <b>GetOverlappedAccessResults</b> returns immediately or waits for the asynchronous operation to be completed. If this value is FALSE, the function returns immediately with the current status of the operation. Otherwise, the function does not return until the operation has been completed.</dd>
<dt>
<i>pResult</i></dt>
<dd>
Pointer to a <b>DWORD</b> value. If the function returns ERROR_SUCCESS, this value receives one of the following values to indicate the results of the asynchronous operation.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=53%>Value</th>
<th align=left width=47%>Meaning</th>
</tr>
<tr valign=top>
<td width=53%>ERROR_SUCCESS</td>
<td width=47%>The operation successfully set the object's security information.</td>
</tr>
<tr valign=top>
<td width=53%>ERROR_OPERATION_ABORTED</td>
<td width=47%>The operation was canceled.</td>
</tr>
</table><br>

</dd>
<dt>
<i>pcItemsProcessed</i></dt>
<dd>
Pointer to a <b>ULONG</b> value. If the function returns ERROR_SUCCESS or ERROR_IO_PENDING, this value receives the number of objects for which the security information has been set. This is useful for an operation that sets the security on multiple objects, such as a container object and the objects it contains. This parameter can be NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the asynchronous operation has been completed, the return value is ERROR_SUCCESS and the <i>pResult</i> parameter receives the results of the operation.</p>
<p>
If the asynchronous operation has not been completed, the return value is ERROR_IO_PENDING.</p>
<p>
If the function fails, the return value can be one of the following error codes. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Value</th>
<th align=left width=50%>Meaning</th>
</tr>
<tr valign=top>
<td width=50%>ERROR_BAD_PROVIDER</td>
<td width=50%>The asynchronous operation failed because an invalid provider name was specified.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_INVALID_PARAMETER</td>
<td width=50%>The <i>pOverlapped</i> parameter is invalid.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_NOT_ENOUGH_MEMORY</td>
<td width=50%>The asynchronous operation failed due to a memory allocation failure.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The first time you call the <b>GetOverlappedAccessResults</b> function for a given <a href="accctrl_5zle.htm"><b>ACTRL_OVERLAPPED</b></a> structure, the function closes the handle to the event object in the structure's <b>hEvent</b> member. Subsequent calls to <b>GetOverlappedAccessResults</b> for the same <b>ACTRL_OVERLAPPED</b> structure identify the operation by the information stored in the reserved members of the <b>ACTRL_OVERLAPPED</b> structure. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in aclapi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="accctrl_2hf0.htm">Access Control Overview</a>, <a href="accctrl_6cmr.htm">Access Control Functions</a>, <a href="accctrl_5zle.htm"><b>ACTRL_OVERLAPPED</b></a>, <a href="accctrl_2cvn.htm"><b>CancelOverlappedAccess</b></a>, <a href="accctrl_8r3s.htm"><b>SetSecurityInfoEx</b></a>, <a href="accctrl_9jqw.htm"><b>SetNamedSecurityInfoEx</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
