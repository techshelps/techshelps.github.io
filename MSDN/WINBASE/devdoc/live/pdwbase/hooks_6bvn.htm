<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DebugProc</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_debugproc"></a>DebugProc</h1>
<p>
The <b>DebugProc</b> hook procedure is an application-defined or library-defined callback function used with the <a href="hooks_7vaw.htm"><b>SetWindowsHookEx</b></a> function. The system calls this function before calling the hook procedures associated with any type of hook. The system passes information about the hook to be called to the <b>DebugProc</b> hook procedure, which examines the information and determines whether to allow the hook to be called. </p>
<p>
The <b>HOOKPROC</b> type defines a pointer to this callback function. <b>DebugProc</b> is a placeholder for the application-defined or library-defined function name. </p>
<pre><code><b>LRESULT CALLBACK DebugProc(
  int</b><i> nCode</i><b>,      </b>// hook code
<b>  WPARAM</b><i> wParam</i><b>,  </b>// type of hook about to be called
<b>  LPARAM</b><i> lParam</i>   // address of structure with debugging information
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>nCode</i></dt>
<dd>
Specifies whether the hook procedure must process the message. If <i>nCode</i> is HC_ACTION, the hook procedure must process the message. If <i>nCode</i> is less than zero, the hook procedure must pass the message to the <a href="hooks_57aw.htm"><b>CallNextHookEx</b></a> function without further processing and should return the value returned by <b>CallNextHookEx</b>. </dd>
<dt>
<i>wParam</i></dt>
<dd>
Specifies the type of hook about to be called. This parameter can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Value</th>
<th align=left width=57%>Description</th>
</tr>
<tr valign=top>
<td width=43%>WH_CALLWNDPROC</td>
<td width=57%>Installs a hook procedure that monitors messages sent to a window procedure. For more information, see the description of the <a href="hooks_8qeb.htm"><b>CallWndProc</b></a> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_CALLWNDPROCRET</td>
<td width=57%>Installs a hook procedure that monitors messages that have just been processed by a window procedure. For more information, see the description of the <a href="hooks_4kyr.htm"><b>CallWndRetProc</b></a> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_CBT</td>
<td width=57%>Installs a hook procedure that receives notifications useful to a computer-based training (CBT) application. For more information, see the description of the <a href="hooks_6e5f.htm"><b>CBTProc</b></a> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_DEBUG</td>
<td width=57%>Installs a hook procedure useful for debugging other hook procedures. For more information, see the description of the <b>DebugProc</b> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_GETMESSAGE</td>
<td width=57%>Installs a hook procedure that monitors messages posted to a message queue. For more information, see the description of the <a href="hooks_6q77.htm"><b>GetMsgProc</b></a> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_JOURNALPLAYBACK</td>
<td width=57%>Installs a hook procedure that posts messages previously recorded by a WH_JOURNALRECORD hook procedure. For more information, see the description of the <a href="hooks_0aoz.htm"><b>JournalPlaybackProc</b></a> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_JOURNALRECORD</td>
<td width=57%>Installs a hook procedure that records input messages posted to the system message queue. This hook is useful for recording macros. For more information, see the description of the <a href="hooks_4t9f.htm"><b>JournalRecordProc</b></a> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_KEYBOARD</td>
<td width=57%>Installs a hook procedure that monitors keystroke messages. For more information, see the description of the <a href="hooks_8k6b.htm"><b>KeyboardProc</b></a> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_MOUSE</td>
<td width=57%>Installs a hook procedure that monitors mouse messages. For more information, see the description of the <a href="hooks_9483.htm"><b>MouseProc</b></a> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_MSGFILTER</td>
<td width=57%>Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar. The hook procedure monitors these messages only for the application that installed the hook procedure. For more information, see the description of the <a href="hooks_852b.htm"><b>MessageProc</b></a> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_SHELL</td>
<td width=57%>Installs a hook procedure that receives notifications useful to a shell application. For more information, see the description of the <a href="hooks_8gpv.htm"><b>ShellProc</b></a> hook procedure.</td>
</tr>
<tr valign=top>
<td width=43%>WH_SYSMSGFILTER</td>
<td width=57%>Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar. The hook procedure monitors these messages for all applications in the system. For more information, see the description of the <a href="hooks_4zab.htm"><b>SysMsgProc</b></a> hook procedure.</td>
</tr>
</table><br>

</dd>
<dt>
<i>lParam</i></dt>
<dd>
Pointer to a <a href="hooks_5kz6.htm"><b>DEBUGHOOKINFO</b></a> structure that contains the parameters to be passed to the destination hook procedure. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
To prevent the system from calling the hook, the hook procedure must return a nonzero value. Otherwise, the hook procedure must call <a href="hooks_57aw.htm"><b>CallNextHookEx</b></a>. </p>
<h4>Remarks</h4>
<p>
An application installs this hook procedure by specifying the WH_DEBUG hook type and the pointer to the hook procedure in a call to the <b>SetWindowsHookEx</b> function. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>User-defined.</p>
<h4>See Also</h4>
<p>
<a href="hooks_9rg3.htm">Hooks Overview</a>, <a href="hooks_31bn.htm">Hook Functions</a>, <a href="hooks_57aw.htm"><b>CallNextHookEx</b></a>, <a href="hooks_8qeb.htm"><b>CallWndProc</b></a>, <a href="hooks_4kyr.htm"><b>CallWndRetProc</b></a>, <a href="hooks_6e5f.htm"><b>CBTProc</b></a>, <a href="hooks_5kz6.htm"><b>DEBUGHOOKINFO</b></a>, <a href="hooks_6q77.htm"><b>GetMsgProc</b></a>, <a href="hooks_0aoz.htm"><b>JournalPlaybackProc</b></a>, <a href="hooks_4t9f.htm"><b>JournalRecordProc</b></a>, <a href="hooks_8k6b.htm"><b>KeyboardProc</b></a>, <a href="hooks_852b.htm"><b>MessageProc</b></a>, <a href="hooks_9483.htm"><b>MouseProc</b></a>, <a href="hooks_7vaw.htm"><b>SetWindowsHookEx</b></a>, <a href="hooks_8gpv.htm"><b>ShellProc</b></a>, <a href="hooks_4zab.htm"><b>SysMsgProc</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
