<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BackupWrite</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_backupwrite"></a>BackupWrite</h1>
<p>
The <b>BackupWrite</b> function writes a stream of data from a buffer to a specified file or directory. The data must be divided into substreams separated by <a href="tapeback_9awi.htm"><b>WIN32_STREAM_ID</b></a> structures. You use this function to restore a file or directory that has been backed up.</p>
<pre><code><b>BOOL BackupWrite(
  HANDLE</b><i> hFile</i><b>,                 </b>// handle to file or directory
<b>  LPBYTE</b><i> lpBuffer</i><b>,              </b>// pointer to buffer containing data 
                                // to write
<b>  DWORD</b><i> nNumberOfBytesToWrite</i><b>,  </b>// number of bytes to write
<b>  LPDWORD</b><i> lpNumberOfBytesWritten</i><b>,  </b>// pointer to variable to receive 
                                   // number of bytes written
<b>  BOOL</b><i> bAbort</i><b>,                  </b>// termination type
<b>  BOOL</b><i> bProcessSecurity</i><b>,        </b>// process security
<b>  LPVOID</b><i> *lpContext</i>             // pointer to pointer to internal 
                                // context information
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFile</i></dt>
<dd>
Handle to the file or directory being restored. The function writes data to this file. You obtain this handle by calling the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function. 
<p>
The <b>BackupWrite</b> function fails if <b>CreateFile</b> was called with the flag FILE_FLAG_NO_BUFFERING. In this case, the <a href="errors_3uwi.htm"><b>GetLastError</b></a><b> </b>function returns the value ERROR_INVALID_PARAMETER.
</dd>
<dt>
<i>lpBuffer</i></dt>
<dd>
Pointer to a buffer that the function writes data from. </dd>
<dt>
<i>nNumberOfBytesToWrite</i></dt>
<dd>
Specifies the length of the buffer.  The buffer size must be greater than the size of a <a href="tapeback_9awi.htm"><b>WIN32_STREAM_ID</b></a> structure. </dd>
<dt>
<i>lpNumberOfBytesWritten</i></dt>
<dd>
Pointer to a variable that, when the function returns, contains the number of bytes written.  </dd>
<dt>
<i>bAbort</i></dt>
<dd>
Specifies whether <b>BackupWrite</b> terminated abnormally. If this value is TRUE, the operation terminated abnormally and all buffers were deallocated.   </dd>
<dt>
<i>bProcessSecurity</i></dt>
<dd>
Specifies whether the function will restore the access-control list (ACL) data for the file or directory.
<p>
If <i>bProcessSecurity</i> is TRUE, you need to have specified  WRITE_OWNER and WRITE_DAC access when opening the file or directory handle. If the handle does not have those access rights, the operating system denies access to the ACL data, and ACL data restoration will not occur.
</dd>
<dt>
<i>lpContext</i></dt>
<dd>
Pointer to a variable that receives and holds a pointer to an internal data structure used by <b>BackupWrite </b>to maintain context information during a restore operation.  
<p>
You must set the variable pointed to by <i>lpContext</i> to NULL before the first call to <b>BackupWrite </b>for the specified file or directory. The function allocates memory for the data structure, and then sets the variable to point to that structure. You must not change <i>lpContext </i>or the variable that it points to between calls to <b>BackupWrite</b>. 

<p>
To release the memory used by the data structure, call <b>BackupWrite</b> with the <i>bAbort</i> parameter set to TRUE when the restore operation is complete. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero, indicating that an I/O error occurred. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The BACKUP_LINK stream type lets you restore files with hard links. </p>
<p>
Data obtained by the <b>BackupRead</b> function should only be used as input to the <b>BackupWrite</b> function. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="tapeback_0rlc.htm">Tape Backup Overview</a>, <a href="tapeback_1rw3.htm">Tape Backup Functions</a>, <a href="tapeback_5t0k.htm"><b>BackupRead</b></a>, <a href="tapeback_1fhn.htm"><b>BackupSeek</b></a>, <a href="filesio_7wmd.htm"><b>CreateFile</b></a>, <a href="tapeback_9awi.htm"><b>WIN32_STREAM_ID</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
