<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FSCTL_QUERY_FAT_BPB</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_fsctl_query_fat_bpb"></a>FSCTL_QUERY_FAT_BPB</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The FSCTL_QUERY_FAT_BPB operation returns the first 36 bytes of a FAT16 or FAT12 volume. </p>
<p>
This operation is obsolete. Use <a href="fsys_6wfi.htm"><b>GetVolumeInformation</b></a>, <a href="filesio_2m3p.htm"><b>GetDriveType</b></a>, and other related functions to obtain some of the same information in a more structured manner. If you cannot get the necessary information in any other way, use <a href="filesio_7wmd.htm"><b>CreateFile</b></a> to open the volume as a file, and use <a href="filesio_39id.htm"><b>ReadFile</b></a> to access the raw hard drive.</p>
<p>
To perform this operation, call the <a href="devio_9quk.htm"><b>DeviceIoControl</b></a> function with the following parameters.</p>
<pre><code><b>BOOL DeviceIoControl(
</b>  (<b>HANDLE</b>)<i> hDevice</i>,        // handle to device of interest
  <i>FSCTL_QUERY_FAT_BPB</i>,     // <i>dwIoControlCode</i>, control code of
                           // operation to perform
  <i>NULL</i>,                    // <i>lpInBuffer</i> is not used; must be NULL
  <i>0</i>,                       // <i>nInBufferSize</i> is not used; must be zero
  (<b>LPVOID</b>) <i>lpOutBuffer</i>,    // a pointer to an
                           // <b>FSCTL_QUERY_FAT_BPB_BUFFER</b>
  (<b>DWORD</b>) <i>nOutBufferSize</i>,  // size of the output buffer
  (<b>LPDWORD</b>)<i> lpBytesReturned</i>,   // pointer to variable to receive
                           // output byte count
  (<b>LPOVERLAPPED</b>)<i> lpOverlapped</i>  // pointer to <b>OVERLAPPED</b> structure
                           // for asynchronous operation
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hDevice</i></dt>
<dd>
Handle to the object on which the operation is to be performed. Call the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function to obtain a device handle. The handle can only be to a FAT12 or FAT16 volume. The call will fail on a FAT32 volume.</dd>
<dt>
<i>dwIoControlCode</i></dt>
<dd>
Control code for the operation. This value identifies the specific operation to be performed and the type of device on which it is to be performed. Use <b>FSCTL_QUERY_FAT_BPB</b> for this operation.</dd>
<dt>
<i>lpInBuffer</i></dt>
<dd>
Pointer to the input buffer. Not used; must be NULL.</dd>
<dt>
<i>nInBufferSize</i></dt>
<dd>
Size of the input buffer, in bytes. Not used; must be zero.</dd>
<dt>
<i>lpOutBuffer</i></dt>
<dd>
Pointer to the output buffer. This will be an <a href="devio_23ua.htm"><b>FSCTL_QUERY_FAT_BPB_BUFFER</b></a> structure.</dd>
<dt>
<i>nOutBufferSize</i></dt>
<dd>
Size of the output buffer, in bytes, which is <b>sizeof(FSCTL_QUERY_FAT_BPB_BUFFER)</b>.</dd>
<dt>
<i>lpBytesReturned</i> </dt>
<dd>
Pointer to a <b>DWORD</b> variable that receives the size, in bytes, of output data returned. If the <i>lpOutBuffer</i> buffer is too small, <i>lpBytesReturned</i> receives the required buffer size.
<p>
If <i>lpOverlapped</i> is NULL (nonoverlapped I/O), <i>lpBytesReturned</i> cannot be NULL.

<p>
If <i>lpOverlapped</i> is not NULL (overlapped I/O), <i>lpBytesReturned</i> can be NULL. If this is an overlapped operation, you can get the number of bytes returned by calling the <a href="synchro_75v8.htm"><b>GetOverlappedResult</b></a> function. If <i>hDevice</i> is associated with an I/O completion port, you can get the number of bytes returned by calling the <a href="filesio_071v.htm"><b>GetQueuedCompletionStatus</b></a> function. 
</dd>
<dt>
<i>lpOverlapped</i></dt>
<dd>
Pointer to an <a href="synchro_8tf6.htm"><b>OVERLAPPED</b></a> structure. 
<p>
If <i>hDevice</i> was opened with the FILE_FLAG_OVERLAPPED flag, this parameter must point to a valid <b>OVERLAPPED</b> structure. In this case, <a href="devio_9quk.htm"><b>DeviceIoControl</b></a> is performed as an overlapped (asynchronous) operation. If the device was opened with the FILE_FLAG_OVERLAPPED flag and <i>lpOverlapped</i> is NULL, the function fails in unpredictable ways.

<p>
If <i>hDevice</i> was opened without specifying the FILE_FLAG_OVERLAPPED flag, this parameter is ignored and the <b>DeviceIoControl</b> function does not return until the operation has been completed, or until an error occurs.

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the operation succeeds, <a href="devio_9quk.htm"><b>DeviceIoControl</b></a> returns a nonzero value, and the output buffer pointed to by <i>lpvOutBuffer</i> contains a valid <a href="devio_23ua.htm"><b>FSCTL_QUERY_FAT_BPB_BUFFER</b></a> structure.</p>
<p>
If the operation fails, <b>DeviceIoControl</b> returns zero. The contents of the output buffer pointed to by <i>lpvOutBuffer</i> are meaningless.</p>
<h4>Remarks</h4>
<p>
For the implications of overlapped I/O on this operation, see the Remarks section of the DeviceIoControl topic.</p>
<h4>See Also</h4>
<p>
<a href="devio_23ec.htm">Device Input and Output Overview</a>, <a href="devio_5gqb.htm">Device Input and Output Operations</a>, <a href="devio_9quk.htm"><b>DeviceIoControl</b></a>,<b> <a href="filesio_7wmd.htm">CreateFile</a></b>,<b> <a href="devio_23ua.htm">FSCTL_QUERY_FAT_BPB_BUFFER</a></b>, <a href="fsys_6wfi.htm"><b>GetVolumeInformation</b></a>,<b> <a href="filesio_2m3p.htm">GetDriveType</a></b>,<b> <a href="filesio_39id.htm">ReadFile</a></b>,<b> <a href="synchro_75v8.htm">GetOverlappedResult</a></b>, <a href="filesio_071v.htm"><b>GetQueuedCompletionStatus</b></a>, <a href="win95/introg_0eyb.htm"><b>Windows 95 Features</b></a></p>
<p>&nbsp;</p></body>
</HTML>
