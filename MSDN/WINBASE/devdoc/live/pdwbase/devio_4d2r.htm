<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Device Handles</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_device_handles"></a>Device Handles</h2>
<p>
A <a href="devio_9quk.htm"><b>DeviceIoControl</b></a> call specifies a handle to a device driver to identify the device being accessed. You can use the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function to get a device driver handle.</p>
<p>
The <b>CreateFile</b> call must specify either the name of a device or the name of the driver associated with a device. To specify a device name, the <i>lpszname</i> parameter of <b>CreateFile</b> specifies a string with the format</p>
<pre><code>\\.\DeviceName 
 </code></pre>
<p>
The types of devices that you can open and the method that you must use to specify them in the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function depend on the Win32 platform on which your application is running. </p>
<p class=indent1>
<b>Windows NT:</b> The <a href="devio_9quk.htm"><b>DeviceIoControl</b></a> function can open a handle to a specific device. For example, to open a handle to the logical drive A:, specify "\\\\.\\a:". Alternatively, you can use the names "\\\\.\\PhysicalDrive0", "\\\\.\\PhysicalDrive1", and so on, to open handles to the physical drives on a system.</p>
<p class=indent1>
<b>Windows 95 and Windows 98:</b> For Win32-based applications, <b>DeviceIoControl</b> must specify a handle to a virtual device driver. For example, to open a handle to the system VxD, specify "\\\\.\\vwin32".</p>
<p>
The<b> <a href="filesio_7wmd.htm">CreateFile</a></b> call should specify the FILE_SHARE_READ and FILE_SHARE_WRITE access flags when opening a handle to a device driver. However, when opening a communications resource, such as a serial port, <b>CreateFile</b> must specify exclusive access. Other <b>CreateFile</b> parameters are used as follows when opening a device handle:
<ul>
<li>
The <i>fdwCreate</i> parameter must specify the OPEN_EXISTING flag. </li>
<li>
The <i>hTemplateFile</i> parameter must be NULL. </li>
<li>
The <i>fdwAttrsAndFlags</i> parameter can specify FILE_FLAG_OVERLAPPED to indicate that the returned handle can be used in overlapped (asynchronous) I/O operations. </li>
</ul>
<p>&nbsp;</p></body>
</HTML>
