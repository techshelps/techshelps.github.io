<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetPrivateProfileInt</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getprivateprofileint"></a>GetPrivateProfileInt</h1>
<p>
The <b>GetPrivateProfileInt</b> function retrieves an integer associated with a key in the specified section of the given initialization file. This function is provided for compatibility with 16-bit Windows-based applications. Win32-based applications should store initialization information in the registry. </p>
<pre><code><b>UINT GetPrivateProfileInt(
  LPCTSTR</b><i> lpAppName</i><b>,  </b>// address of section name
<b>  LPCTSTR</b><i> lpKeyName</i><b>,  </b>// address of key name
<b>  INT</b><i> nDefault</i><b>,       </b>// return value if key name is not found
<b>  LPCTSTR</b><i> lpFileName</i>  // address of initialization filename
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpAppName</i></dt>
<dd>
Pointer to a null-terminated string containing the section name in the initialization file. </dd>
<dt>
<i>lpKeyName</i></dt>
<dd>
Pointer to the null-terminated string containing the key name whose value is to be retrieved. This value is in the form of a string; the <b>GetPrivateProfileInt</b> function converts the string into an integer and returns the integer. </dd>
<dt>
<i>nDefault</i></dt>
<dd>
Specifies the default value to return if the key name cannot be found in the initialization file. </dd>
<dt>
<i>lpFileName</i></dt>
<dd>
Pointer to a null-terminated string that names the initialization file. If this parameter does not contain a full path to the file, the system searches for the file in the Windows directory. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value is the integer equivalent of the string following the specified key name in the specified initialization file. If the key is not found, the return value is the specified default value. If the value of the key is less than zero, the return value is zero. </p>
<h4>Remarks</h4>
<p>
The function searches the file for a key that matches the name specified by the <i>lpKeyName</i> parameter under the section name specified by the <i>lpAppName</i> parameter. A section in the initialization file must have the following form: </p>
<p>
<b>[</b><i>section</i><b>]</b><br>
<i>key</i><b>=</b><i>value</i><br>
      .<br>
      .<br>
      .</p>
<p>
The <b>GetPrivateProfileInt</b> function is not case-sensitive; the strings in <i>lpAppName</i> and <i>lpKeyName</i> can be a combination of uppercase and lowercase letters. </p>
<p>
An application can use the <a href="regapi_4cc4.htm"><b>GetProfileInt</b></a> function to retrieve an integer value from the WIN.INI file. </p>
<p>
<b>Windows NT: </b>Calls to private profile functions may be mapped to the registry instead of to the specified initialization files. This mapping occurs when the initialization file and section are specified in the registry under the following keys: </p>
<p class=indent1>
<b>HKEY_LOCAL_MACHINE\Software\Microsoft\<br>
        Windows NT\CurrentVersion\IniFileMapping</b></p>
<p>
This mapping is likely if an application modifies system-component initialization files, such as CONTROL.INI, SYSTEM.INI, and WINFILE.INI. In these cases, the <b>GetPrivateProfileInt</b> function retrieves information from the registry, not from the initialization file; the change in the storage location has no effect on the function's behavior. </p>
<p>
The Win32 profile functions (<b>Get/WriteProfile*</b>, <b>Get/WritePrivateProfile*</b>) use the following steps to locate initialization information:
<ol>
<li>
Look in the registry for the name of the initialization file, say MYFILE.INI, under <b>IniFileMapping</b>: <p>
<b>HKEY_LOCAL_MACHINE</b>\<b>Software</b>\<b>Microsoft</b>\<br>
        <b>Windows NT</b>\<b>CurrentVersion</b>\<b>IniFileMapping\myfile.ini</b>
</li>
<li>
Look for the section name specified by <i>lpAppName</i>. This will be a named value under <b>myfile.ini</b>, or a subkey of <b>myfile.ini</b>, or will not exist.</li>
<li>
If the section name specified by <i>lpAppName </i>is a named value under <b>myfile.ini</b>, then that value specifies where in the registry you will find the keys for the section.</li>
<li>
If the section name specified by <i>lpAppName </i>is a subkey of <b>myfile.ini</b>, then named values under that subkey specify where in the registry you will find the keys for the section. If the key you are looking for does not exist as a named value, then there will be an unnamed value (shown as <b>&lt;No Name&gt;</b>) that specifies the default location in the registry where you will find the key.</li>
<li>
If the section name specified by <i>lpAppName </i>does not exist as a named value or as a subkey under <b>myfile.ini</b>, then there will be an unnamed value (shown as <b>&lt;No Name&gt;</b>) under <b>myfile.ini</b> that specifies the default location in the registry where you will find the keys for the section.</li>
<li>
If there is no subkey for MYFILE.INI, or if there is no entry for the section name, then look for the actual MYFILE.INI on the disk and read its contents.</li>
</ol>
<p>
When looking at values in the registry that specify other registry locations, there are several prefixes that change the behavior of the .INI file mapping:
<ul>
<li>
! - this character forces all writes to go both to the registry and to the .INI file on disk.</li>
<li>
# - this character causes the registry value to be set to the value in the Windows 3.1 .INI file when a new user logs in for the first time after setup.</li>
<li>
@ - this character prevents any reads from going to the .INI file on disk if the requested data is not found in the registry.</li>
<li>
USR: - this prefix stands for HKEY_CURRENT_USER, and the text after the prefix is relative to that key.</li>
<li>
SYS: - this prefix stands for HKEY_LOCAL_MACHINE\SOFTWARE, and the text after the prefix is relative to that key.</li>
</ul>
<h4>See Also</h4>
<p>
<a href="regapi_9bzt.htm">Registry Overview</a>, <a href="regapi_59mb.htm">Registry Functions</a>, <a href="regapi_4cc4.htm"><b>GetProfileInt</b></a>, <a href="regapi_2jjb.htm"><b>WritePrivateProfileString</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
