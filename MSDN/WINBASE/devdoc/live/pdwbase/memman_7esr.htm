<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VirtualUnlock</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_virtualunlock"></a>VirtualUnlock</h1>
<p>
The <b>VirtualUnlock</b> function unlocks a specified range of pages in the virtual address space of a process, enabling the system to swap the pages out to the paging file if necessary. </p>
<pre><code><b>BOOL VirtualUnlock(
  LPVOID</b><i> lpAddress</i><b>,  </b>// address of first byte of range
<b>  DWORD</b><i> dwSize</i>       // number of bytes in range
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpAddress</i></dt>
<dd>
Pointer to the base address of the region of pages to be unlocked. </dd>
<dt>
<i>dwSize</i></dt>
<dd>
Specifies the size, in bytes, of the region being unlocked. The region of affected pages includes all pages containing one or more bytes in the range from the <i>lpAddress</i> parameter to (<i>lpAddress</i>+<i>dwSize</i>). This means that a 2-byte range straddling a page boundary causes both pages to be unlocked. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
For the function to succeed, the range specified need not match a range passed to a previous call to the <b>VirtualLock</b> function, but all pages in the range must be locked. </p>
<p>
<b>Windows NT:</b> Calling <b>VirtualUnlock</b> on a range of memory that is not locked releases the pages from the process's working set. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="memman_6oz8.htm">Memory Management Overview</a>, <a href="memman_60kz.htm">Memory Management Functions</a>, <a href="memman_3tt7.htm"><b>VirtualLock</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
