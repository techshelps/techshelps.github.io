<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BuildCommDCB</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_buildcommdcb"></a>BuildCommDCB</h1>
<p>
The <b>BuildCommDCB</b> function fills a specified <a href="commun_965u.htm"><b>DCB</b></a> structure with values specified in a device-control string. The device-control string uses the syntax of the <b>mode</b> command.</p>
<pre><code><b>BOOL BuildCommDCB(
  LPCTSTR</b><i> lpDef</i><b>,  </b>// pointer to device-control string
<b>  LPDCB</b><i> lpDCB     </i>// pointer to device-control block
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpDef</i></dt>
<dd>
Pointer to a null-terminated string that specifies device-control information. The string must have the same form as the <b>mode</b> command's command-line arguments. For example, the following string specifies a baud rate of 1200, no parity, 8 data bits, and 1 stop bit: 
<pre><code>baud=1200 parity=N data=8 stop=1 
 </code></pre>

<p>
The device name is ignored if it is included in the string, but it must specify a valid device, as follows: 

<pre><code>COM1: baud=1200 parity=N data=8 stop=1 </code></pre>

<p>
For further information on <b>mode</b> command syntax, refer to the end-user documentation for your operating system.
</dd>
<dt>
<i>lpDCB</i></dt>
<dd>
Pointer to a <a href="commun_965u.htm"><b>DCB</b></a> structure to be filled in. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The <b>BuildCommDCB</b> function adjusts only those members of the <b>DCB</b> structure that are specifically affected by the <i>lpDef</i> parameter, with the following exceptions: 
<ul>
<li>
If the specified baud rate is 110, the function sets the stop bits to 2 to remain compatible with the system's <b>mode</b> command. </li>
<li>
By default, <b>BuildCommDCB</b> disables XON/XOFF and hardware flow control. To enable flow control, you must explicitly set the appropriate members of the <b>DCB</b> structure. </li>
</ul>
<p>
The <b>BuildCommDCB</b> function only fills in the members of the <b>DCB</b> structure. To apply these settings to a serial port, use the <a href="commun_43qd.htm"><b>SetCommState</b></a> function. </p>
<p>
There are older and newer forms of the <b>mode </b>command syntax. The <b>BuildCommDCB</b> function supports both forms. However, you cannot mix the two forms together.</p>
<p>
The newer form of the <b>mode</b> command syntax lets you explicitly set the values of the flow control members of the <a href="commun_965u.htm"><b>DCB</b></a><b> </b>structure. If you use an older form of the <b>mode</b> syntax, the <b>BuildCommDCB </b>function sets the flow control members of the <b>DCB</b> structure, as follows:
<ul>
<li>
For a string such as <b>96,n,8,1</b> or any other older-form <b>mode</b> string that doesn't end with an <b>x</b> or a <b>p</b>:<p>
<b>fInX</b>, <b>fOutX</b>,<b>fOutXDsrFlow</b>,and <b>fOutXCtsFlow</b> are all set to FALSE
<p>
<b>fDtrControl</b> is set to DTR_CONTROL_ENABLE
<p>
<b>fRtsControl</b> is set to RTS_CONTROL_ENABLE 
</li>
<li>
For a string such as <b>96,n,8,1,x</b> or any other older-form <b>mode</b> string that finishes with an <b>x</b>: <p>
<b>fInX</b>, <b>fOutX</b> are both set to TRUE
<p>
<b>fOutXDsrFlow</b>,<b>fOutXCtsFlow</b> are both set to FALSE.
<p>
<b>fDtrControl</b> is set to DTR_CONTROL_ENABLE
<p>
<b>fRtsControl</b> is set to RTS_CONTROL_ENABLE
</li>
<li>
For a string such as <b>96,n,8,1,p</b> or any other older-form <b>mode</b> string that finishes with a <b>p</b>: <p>
<b>fInX</b>, <b>fOutX</b> are both set to FALSE
<p>
<b>fOutXDsrFlow</b>,<b>fOutXCtsFlow</b> are both set to TRUE.
<p>
<b>fDtrControl</b> is set to DTR_CONTROL_HANDSHAKE
<p>
<b>fRtsControl</b> is set to RTS_CONTROL_HANDSHAKE
</li>
</ul>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="commun_4m7n.htm">Communications Overview</a>, <a href="commun_6g37.htm">Communication Functions</a>, <a href="commun_965u.htm"><b>DCB</b></a>, <a href="commun_43qd.htm"><b>SetCommState</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
