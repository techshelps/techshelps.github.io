<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PdhParseCounterPath</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_pdhparsecounterpath"></a>PdhParseCounterPath</h1>
<p>
The <b>PdhParseCounterPath</b> function parses the elements of the counter path and stores the results in the structure passed by the caller.</p>
<pre><code><b>PDH_STATUS PdhParseCounterPath(
  IN LPCTSTR</b><i> szFullPathBuffer</i><b>,  </b>// path string buffer
<b>  IN PDH_COUNTER_PATH_ELEMENTS</b><i> *pCounterPathElements</i><b>,</b>
<b>                             </b>// counter path elements
<b>  IN LPDWORD</b><i> pdwBufferSize</i><b>,  </b>// size of buffer
<b>  IN DWORD</b><i> dwFlags           </i>// reserved
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>szFullPathBuffer</i></dt>
<dd>
The buffer containing the counter path to parse into individual components.</dd>
<dt>
<i>pCounterPathElements</i></dt>
<dd>
A pointer to a <a href="pdhref_5ucy.htm"><b>PDH_COUNTER_PATH_ELEMENTS</b></a> structure that will receive the individual components of the path referenced by the <i>szFullPathBuffer</i> parameter. The buffer space allocated for this should be large enough for the structure and the strings that will be referenced by the members in this structure. As this function parses the elements in the path, they are stored in the buffer after the <b>PDH_COUNTER_PATH_ELEMENTS</b> structure. This allows the calling function to allocate, and eventually free, only a single block of memory for this structure and the strings referenced by the members of this structure, rather than having the calling function allocate the structure and the string buffers separately.</dd>
<dt>
<i>pdwBufferSize</i></dt>
<dd>
A pointer to the <b>DWORD</b> containing the size, in bytes, of the buffer referenced by <i>pCounterPathElements</i> and returns with the size of the buffer used. If the buffer size on entry is zero, then no data is returned in the <i>pCounterPathElements</i> buffer, however, the size of the buffer required is returned in the <b>DWORD</b> referenced by this pointer.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Reserved. Must be zero.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, it returns ERROR_SUCCESS.</p>
<p>
If the function fails, the return value is a PDH error status defined in pdhmsg.h. The following are possible error values:
<dl>
<dt>
PDH_INVALID_ARGUMENT</dt>
<dd>
An argument is incorrect, or this function does not have the necessary access to that argument.</dd>
<dt>
PDH_INSUFFICIENT_BUFFER</dt>
<dd>
The buffer supplied is not large enough to accept the resulting data.</dd>
<dt>
PDH_INVALID_PATH</dt>
<dd>
The path is not formatted correctly and cannot be parsed.</dd>
<dt>
PDH_MEMORY_ALLOCATION_FAILURE</dt>
<dd>
A temporary buffer cannot be allocated.
</dd>
</dl>
<h4>See Also</h4>
<p>
<a href="perfdata_4982.htm">Performance Data Helper Overview</a>, <a href="perfdata_5bzn.htm">Performance Data Functions</a>, , <a href="pdhref_5ucy.htm"><b>PDH_COUNTER_PATH_ELEMENTS</b></a>, <a href="pdhref_38iw.htm"><b>PdhMakeCounterPath</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
