<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows NT 4.0 ACL and ACE Functions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_windows_nt_4.0_acl_and_ace_functions"></a>Windows NT 4.0 ACL and ACE Functions</h2>
<p>
Windows NT versions 4.0 and later support a set of functions for creating an access-control list (ACL) or for modifying the access-control entries (ACEs) in an existing ACL. Applications designed for Windows NT version 5.0 and later should use the functions described in <a href="accctrl_2elv.htm">Modifying an Object's ACLs</a>. </p>
<p>
The <a href="acctlnt4_9y5o.htm"><b>SetEntriesInAcl</b></a> function creates a new ACL. <b>SetEntriesInAcl</b> can specify a completely new set of ACEs for the ACL, or it can merge new ACEs with the ACEs of an existing ACL. <b>SetEntriesInAcl</b> uses an array of <a href="acctlnt4_1xf6.htm"><b>EXPLICIT_ACCESS</b></a> structures to specify the information for the new ACEs. Each <b>EXPLICIT_ACCESS</b> structure contains information that describes a single ACE. This information includes the access rights, the type of ACE, the flags that control ACE inheritance, and a <a href="accctrl_6hki.htm"><b>TRUSTEE</b></a> structure that identifies the trustee. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To add a new ACE to an existing ACL</h5>
<ol>
<li>
Use the <a href="acctlnt4_8sxb.htm"><b>GetSecurityInfo</b></a> or <a href="acctlnt4_1i0f.htm"><b>GetNamedSecurityInfo</b></a> function to get the existing DACL or SACL from an object's security descriptor.</li>
<li>
Use the <a href="acctlnt4_37s5.htm"><b>BuildExplicitAccessWithName</b></a> function to fill <b>EXPLICIT_ACCESS</b> structures with the information needed to describe each new ACE.</li>
<li>
Call <a href="acctlnt4_9y5o.htm"><b>SetEntriesInAcl</b></a>, specifying the existing ACL and the array of <b>EXPLICIT_ACCESS</b> structures. <b>SetEntriesInAcl</b> allocates and initializes the ACL and its ACEs. </li>
<li>
Call the <a href="acctlnt4_4aun.htm"><b>SetSecurityInfo</b></a> or <a href="acctlnt4_86lr.htm"><b>SetNamedSecurityInfo</b></a> function to attach the new ACL to the object's security descriptor.</li>
</ol>
<p>
For an example that uses the Windows NT 4.0 functions to merge a new ACE into an existing ACL, see <a href="acctlnt4_4iek.htm">Using Windows NT 4.0 Access Control</a>. </p>
<p>
If the caller specifies an existing ACL, <b>SetEntriesInAcl</b> merges the new ACE information with the existing ACEs in the ACL. Consider the case, for example, in which the existing ACL grants access to a specified trustee and an <a href="acctlnt4_1xf6.htm"><b>EXPLICIT_ACCESS</b></a> structure denies access to the same trustee. In this case, <b>SetEntriesInAcl</b> adds a new access-denied ACE for the trustee and deletes or modifies the existing access-allowed ACE for the trustee. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
