<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CopyFileEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_copyfileex"></a>CopyFileEx</h1>
<p>
The <b>CopyFileEx</b> function copies an existing file to a new file. This function preserves extended attributes, OLE structured storage, NTFS alternate data streams, and file attributes. Security attributes for the existing file are not copied to the new file.</p>
<pre><code><b>BOOL CopyFileEx(
  LPCWSTR</b><i> lpExistingFileName</i><b>,</b>
<b>                    </b>// pointer to name of an existing file
<b>  LPCWSTR</b><i> lpNewFileName</i><b>,</b>
<b>                    </b>// pointer to filename to copy to
<b>  LPPROGRESS_ROUTINE</b><i> lpProgressRoutine</i><b>,</b>
<b>                    </b>// pointer to the callback function
<b>  LPVOID</b><i> lpData</i><b>,    </b>// to be passed to the callback function
<b>  LPBOOL</b><i> pbCancel</i><b>,  </b>// flag that can be used to cancel the operation
<b>  DWORD</b><i> dwCopyFlags </i>// flags that specify how the file is copied
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpExistingFileName</i></dt>
<dd>
Pointer to a null-terminated string that specifies the name of an existing file.</dd>
<dt>
<i>lpNewFileName</i></dt>
<dd>
Pointer to a null-terminated string that specifies the name of the new file.</dd>
<dt>
<i>lpProgressRoutine</i></dt>
<dd>
Specifies the address of a callback function of type LPPROGRESS_ROUTINE that is called each time another portion of the file has been copied. This parameter can be NULL. For more information on the progress callback function, see <a href="filesio_3fj9.htm"><b>CopyProgressRoutine</b></a>.</dd>
<dt>
<i>lpData</i></dt>
<dd>
Specifies an argument to be passed to the callback function. This parameter can be NULL.</dd>
<dt>
<i>pbCancel</i></dt>
<dd>
Pointer to a Boolean variable that can be used to cancel the operation. If this flag is set to TRUE during the copy operation, the operation is canceled.</dd>
<dt>
<i>dwCopyFlags</i></dt>
<dd>
Specifies how the file is to be copied. This parameter can be a combination of the following values:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=44%>Value</th>
<th align=left width=56%>Meaning</th>
</tr>
<tr valign=top>
<td width=44%>COPY_FILE_FAIL_IF_EXISTS</td>
<td width=56%>The copy operation fails immediately if the target file already exists.</td>
</tr>
<tr valign=top>
<td width=44%>COPY_FILE_RESTARTABLE</td>
<td width=56%>Progress of the copy is tracked in the target file in case the copy fails. The failed copy can be restarted at a later time by specifying the same values for <i>lpExistingFileName </i>and <i>lpNewFileName</i> as those used in the call that failed.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information call <a href="errors_3uwi.htm"><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
For information, see <a href="filesio_0x9h.htm"><b>CopyFile</b></a>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="filesio_2xm7.htm">File I/O Overview</a>, <a href="filesio_3n5f.htm">File Functions</a>, <a href="filesio_7wmd.htm"><b>CreateFile</b></a>, <a href="filesio_0x9h.htm"><b>CopyFile</b></a>, <a href="filesio_3fj9.htm"><b>CopyProgressRoutine</b></a>, <a href="filesio_4zqd.htm"><b>MoveFile</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
