<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Console Handles</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_console_handles"></a>Console Handles</h3>
<p>
A console process uses handles to access the input and screen buffers of its console. A process can use the <a href="conchar_7k9x.htm"><b>GetStdHandle</b></a>, <a href="filesio_7wmd.htm"><b>CreateFile</b></a>, or <a href="conchar_93n6.htm"><b>CreateConsoleScreenBuffer</b></a> function to open one of these handles. </p>
<p>
The <b>GetStdHandle</b> function provides a mechanism for retrieving the standard input (STDIN), standard output (STDOUT), and standard error (STDERR) handles associated with a process. During console creation, the system creates these handles. Initially, STDIN is a handle to the console's input buffer, and STDOUT and STDERR are handles of the console's active screen buffer. However, the <a href="conchar_7y79.htm"><b>SetStdHandle</b></a> function can redirect the standard handles by changing the handle associated with STDIN, STDOUT, or STDERR. Because the parent's standard handles are inherited by any child process, subsequent calls to <b>GetStdHandle</b> return the redirected handle. A handle returned by <b>GetStdHandle</b> may, therefore,  refer to something other than console I/O. For example, before creating a child process, a parent process can use <b>SetStdHandle</b> to set a pipe handle to be the STDIN handle that is inherited by the child process. When the child process calls <b>GetStdHandle</b>, it gets the pipe handle. This means that the parent process can control the standard handles of the child process. The handles returned by <b>GetStdHandle</b> have GENERIC_READ | GENERIC_WRITE access unless <b>SetStdHandle</b> has been used to set the standard handle to have lesser access. </p>
<p>
The value of the handles returned by <b>GetStdHandle</b> will not be 0, 1, and 2, so the standard predefined stream constants in the STDIO.H header file (STDIN, STDOUT, and STDERR) cannot be used in functions that require a console handle. </p>
<p>
The <b>CreateFile</b> function enables a process to get a handle to its console's input buffer and active screen buffer, even if STDIN and STDOUT have been redirected. To open a handle to a console's input buffer, specify the CONIN$ value in a call to <b>CreateFile</b>. Specify the CONOUT$ value in a call to <b>CreateFile</b> to open a handle to a console's active screen buffer. <b>CreateFile</b> enables you to specify the read-write access of the handle that it returns. </p>
<p>
The <a href="conchar_93n6.htm"><b>CreateConsoleScreenBuffer</b></a> function creates a new screen buffer and returns a handle, which can be used in any function that accepts a handle to console output. The new screen buffer is not active until its handle is specified in a call to the <a href="conchar_9hrm.htm"><b>SetConsoleActiveScreenBuffer</b></a> function. Note that changing the active screen buffer does not affect the handle returned by <a href="conchar_7k9x.htm"><b>GetStdHandle</b></a>. Similarly, using <b>SetStdHandle</b> to change the STDOUT handle does not affect the active screen buffer. </p>
<p>
Console handles returned by <a href="filesio_7wmd.htm"><b>CreateFile</b></a> and <b>CreateConsoleScreenBuffer</b> can be used in any of the console functions that require a handle to a console's input buffer or of a console screen buffer. Handles returned by <b>GetStdHandle</b> can be used by the console functions if they have not been redirected to refer to something other than console I/O. If a standard handle has been redirected to refer to a file or a pipe, however, the handle can only be used by the <a href="filesio_39id.htm"><b>ReadFile</b></a> and <a href="filesio_3kkl.htm"><b>WriteFile</b></a> functions. </p>
<p>
A process can use the <a href="handobj_2pyd.htm"><b>DuplicateHandle</b></a> function to create a duplicate console handle that has different access or inheritability from the original handle. Note, however, that a process can create a duplicate console handle only for its own use. This differs from other handle types (such as file, pipe, or mutex objects), for which <b>DuplicateHandle</b> can create a duplicate that is valid for a different process. </p>
<p>
To close a console handle, a process can use the <a href="handobj_289x.htm"><b>CloseHandle</b></a> function. </p>
<p>&nbsp;</p></body>
</HTML>
