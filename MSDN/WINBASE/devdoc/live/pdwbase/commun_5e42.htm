<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ClearCommError</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_clearcommerror"></a>ClearCommError</h1>
<p>
The <b>ClearCommError</b> function retrieves information about a communications error and reports the current status of a communications device. The function is called when a communications error occurs, and it clears the device's error flag to enable additional input and output (I/O) operations. </p>
<pre><code><b>BOOL ClearCommError(
  HANDLE</b><i> hFile</i><b>,     </b>// handle to communications device
<b>  LPDWORD</b><i> lpErrors</i><b>, </b>// pointer to variable to receive error codes
<b>  LPCOMSTAT</b><i> lpStat  </i>// pointer to buffer for communications status
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFile</i></dt>
<dd>
Handle to the communications device. The <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function returns this handle. </dd>
<dt>
<i>lpErrors</i></dt>
<dd>
Pointer to a 32-bit variable to be filled with a mask indicating the type of error. This parameter can be one or more of the following error codes: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=28%>Value</th>
<th align=left width=72%>Meaning</th>
</tr>
<tr valign=top>
<td width=28%>CE_BREAK</td>
<td width=72%>The hardware detected a break condition.</td>
</tr>
<tr valign=top>
<td width=28%>CE_DNS</td>
<td width=72%><b>Windows 95 and Windows 98: </b>A parallel device is not selected.</td>
</tr>
<tr valign=top>
<td width=28%>CE_FRAME</td>
<td width=72%>The hardware detected a framing error.</td>
</tr>
<tr valign=top>
<td width=28%>CE_IOE</td>
<td width=72%>An I/O error occurred during communications with the device.</td>
</tr>
<tr valign=top>
<td width=28%>CE_MODE</td>
<td width=72%>The requested mode is not supported, or the <i>hFile</i> parameter is invalid. If this value is specified, it is the only valid error.</td>
</tr>
<tr valign=top>
<td width=28%>CE_OOP</td>
<td width=72%><b>Windows 95 and Windows 98: </b>A parallel device signaled that it is out of paper.</td>
</tr>
<tr valign=top>
<td width=28%>CE_OVERRUN</td>
<td width=72%>A character-buffer overrun has occurred. The next character is lost.</td>
</tr>
<tr valign=top>
<td width=28%>CE_PTO</td>
<td width=72%><b>Windows 95 and Windows 98: </b>A time-out occurred on a parallel device.</td>
</tr>
<tr valign=top>
<td width=28%>CE_RXOVER</td>
<td width=72%>An input buffer overflow has occurred. There is either no room in the input buffer, or a character was received after the end-of-file (EOF) character.</td>
</tr>
<tr valign=top>
<td width=28%>CE_RXPARITY</td>
<td width=72%>The hardware detected a parity error.</td>
</tr>
<tr valign=top>
<td width=28%>CE_TXFULL</td>
<td width=72%>The application tried to transmit a character, but the output buffer was full.</td>
</tr>
</table><br>

</dd>
<dt>
<i>lpStat</i></dt>
<dd>
Pointer to a <a href="commun_562a.htm"><b>COMSTAT</b></a> structure in which the device's status information is returned. If <i>lpStat</i> is NULL, no status information is returned. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
If a communications port has been set up with a TRUE value for the <b>fAbortOnError</b> member of the setup <b>DCB</b> structure, the communications software will terminate all read and write operations on the communications port when a communications error occurs. No new read or write operations will be accepted until the application acknowledges the communications error by calling the <b>ClearCommError</b> function. </p>
<p>
The <b>ClearCommError</b> function fills the status buffer pointed to by the <i>lpStat</i> parameter with the current status of the communications device specified by the <i>hFile</i> parameter. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="commun_4m7n.htm">Communications Overview</a>, <a href="commun_6g37.htm">Communication Functions</a>, <a href="commun_5g6j.htm"><b>ClearCommBreak</b></a>, <a href="commun_562a.htm"><b>COMSTAT</b></a>, <a href="filesio_7wmd.htm"><b>CreateFile</b></a>, <a href="commun_965u.htm"><b>DCB</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
