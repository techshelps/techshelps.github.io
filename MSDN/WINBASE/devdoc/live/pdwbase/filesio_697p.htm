<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DefineDosDevice</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_definedosdevice"></a>DefineDosDevice</h1>
<p>
The <b>DefineDosDevice</b> function lets an application define, redefine, or delete MS-DOS device names. </p>
<p>
MS-DOS device names are stored as symbolic links in the object name space in Windows NT. The code that converts an MS-DOS path into a corresponding Windows NT path uses these symbolic links to map MS-DOS devices and drive letters. The <b>DefineDosDevice</b> function provides a mechanism whereby an application can modify the symbolic links used to implement the MS-DOS device name space. </p>
<pre><code><b>BOOL DefineDosDevice(
  DWORD</b><i> dwFlags</i><b>,        </b>// controllable aspect flag
<b>  LPCTSTR</b><i> lpDeviceName</i><b>, </b>// pointer to an MS-DOS device name string
<b>  LPCTSTR</b><i> lpTargetPath  </i>// pointer to an MS-DOS or Windows NT path string
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwFlags</i></dt>
<dd>
Specifies several controllable aspects of the <b>DefineDosDevice</b> function. One or more of the following values can be used: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=55%>Value</th>
<th align=left width=45%>Meaning</th>
</tr>
<tr valign=top>
<td width=55%>DDD_RAW_TARGET_PATH</td>
<td width=45%>If this value is specified, the function does not convert the <i>lpTargetPath</i> string from an MS-DOS path to a Windows NT path, but takes it as is.</td>
</tr>
<tr valign=top>
<td width=55%>DDD_REMOVE_DEFINITION</td>
<td width=45%>If this value is specified, the function removes the specified definition for the specified device. To determine which definition to remove, the function walks the list of mappings for the device, looking for a match of <i>lpTargetPath</i> against a prefix of each mapping associated with this device. The first mapping that matches is the one removed, and then the function returns.<p>
If <i>lpTargetPath</i> is NULL or a pointer to a NULL string, the function will remove the first mapping associated with the device and pop the most recent one pushed. If there is nothing left to pop, the device name will be removed.</p>
<p>
If this value is NOT specified, the string pointed to by the <i>lpTargetPath</i> parameter will become the new mapping for this device.</p>
</td>
</tr>
<tr valign=top>
<td width=55%>DDD_EXACT_MATCH_ON_REMOVE</td>
<td width=45%>If this value is specified along with DDD_REMOVE_DEFINITION, the function will use an exact match to determine which mapping to remove. Use this value to insure that you do not delete something that you did not define.</td>
</tr>
</table><br>

</dd>
<dt>
<i>lpDeviceName</i></dt>
<dd>
Pointer to an MS-DOS device name string specifying the device the function is defining, redefining, or deleting. The device name string must not have a trailing colon, unless a drive letter (C or D, for example) is being defined, redefined, or deleted. </dd>
<dt>
<i>lpTargetPath</i></dt>
<dd>
Pointer to a path string that will implement this device. The string is an MS-DOS path string unless the DDD_RAW_TARGET_PATH flag is specified, in which case this string is a Windows NT path string. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
As stated in this function's introductory summary, the <b>DefineDosDevice</b> function provides a means whereby an application can create and modify the symbolic links used to implement the MS-DOS device namespace. To retrieve the current mapping for a particular MS-DOS device name or to obtain a list of all MS-DOS devices known to the system, use the <b>QueryDosDevice</b> function. </p>
<p>
MS-DOS Device names are global. Once defined, an MS-DOS device name remains visible to all processes until either it is explicitly removed or the system reboots. </p>
<p>
<b>Note</b>&nbsp;&nbsp;Drive letters and device names defined at system boot time are protected from redefinition and deletion unless the user is an administrator. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="filesio_2xm7.htm">File I/O Overview</a>, <a href="filesio_3n5f.htm">File Functions</a>, <a href="filesio_84dh.htm"><b>QueryDosDevice</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
