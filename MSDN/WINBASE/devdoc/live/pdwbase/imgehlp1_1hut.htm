<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ReBaseImage</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_rebaseimage"></a>ReBaseImage</h1>
<p>
The <b>ReBaseImage</b> function is used to change the load address for the specified image, which reduces the required load time for a DLL.</p>
<p>
Alternatively, you can use the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_tools_rebase">
</object><a href=JavaScript:alink_1.Click()>Rebase</a> tool. </p>
<pre><code><b>BOOL ReBaseImage(
  IN LPSTR</b><i> CurrentImageName</i><b>,  </b>
<b>  IN LPSTR</b><i> SymbolPath</i><b>,      </b>
<b>  IN BOOL</b><i> fReBase</i><b>,          </b>
<b>  IN BOOL</b><i> fRebaseSysfileOk</i><b>,  </b>
<b>  IN BOOL</b><i> fGoingDown</i><b>,       </b>
<b>  IN DWORD</b><i> CheckImageSize</i><b>,  </b>
<b>  OUT LPDWORD</b><i> OldImageSize</i><b>,  </b>
  <b>OUT</b> <b>LPDWORD</b> <i>OldImageBase</i><b>,  </b>
<b>  OUT LPDWORD</b><i> NewImageSize</i><b>,  </b>
<b>  IN OUT LPDWORD</b><i> NewImageBase</i><b>,  </b>
<b>  IN DWORD</b><i> TimeStamp        </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>CurrentImageName</i></dt>
<dd>
Pointer to a null-terminated string that specifies filename of the file to be rebased.</dd>
<dt>
<i>SymbolPath</i></dt>
<dd>
Pointer to a null-terminated string that specifies the path used to find the corresponding symbol file.</dd>
<dt>
<i>fReBase</i></dt>
<dd>
Specifies whether the image is to be rebased. If this value is TRUE, the image is rebased. Otherwise, the image is not rebased.</dd>
<dt>
<i>fRebaseSysfileOk</i></dt>
<dd>
Specifies whether a system image is to be rebased. If this value is TRUE, the system image is rebased. Otherwise, the system image is not rebased.</dd>
<dt>
<i>fGoingDown</i></dt>
<dd>
Specifies whether the image should be rebased below the given base. If this value is TRUE, the image can be rebased below the given base; otherwise, it cannot.</dd>
<dt>
<i>CheckImageSize</i></dt>
<dd>
Specifies the maximum size that the image can grow to, or zero if there is no limit.</dd>
<dt>
<i>OldImageSize</i></dt>
<dd>
Pointer to a variable that receives the original image size.</dd>
<dt>
<i>OldImageBase</i></dt>
<dd>
Pointer to a variable that receives the original image base.</dd>
<dt>
<i>NewImageSize</i></dt>
<dd>
Pointer to a variable that receives the new image size after the rebase operation.</dd>
<dt>
<i>NewImageBase</i></dt>
<dd>
Pointer to a variable that receives the new image base after the rebase operation.</dd>
<dt>
<i>TimeStamp</i></dt>
<dd>
Specifies the new time stamp for the image. The value must be represented in the number of seconds elapsed since midnight (00:00:00), January 1, 1970, Universal Coordinated Time, according to the system clock.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is TRUE.</p>
<p>
If the function fails, the return value is FALSE. To retrieve extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
The <b>ReBaseImage</b> function changes the desired load address for the specified image. This operation involves reading the entire image and updating all fixups, debug information, checksum, and time stamp<i> </i>values. You can rebase an image to reduce the required load time for its DLLs. If an application can rely on a DLL being loaded at the desired load address, then the system loader does not have to relocate the image. The image is simply loaded into the application's virtual address space and the <a href="dll_8asu.htm"><b>DllMain</b></a> function is called, if one is present.</p>
<p>
A well-behaved application has its DLLs rebased so they each fall within a unique range of the virtual address space. The system DLLs are currently based in memory from 0x70000000 to 0x78000000 (0x68000000 to 0x78000000 on MIPS). Therefore, you should base your DLLs from 0x60000000 to 0x68000000. One possible scheme is to choose a base address based on the first letter of the DLL name, as shown in the following table.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=39%>First Letter</th>
<th align=left width=61%>Base Address</th>
</tr>
<tr valign=top>
<td width=39%>A - C</td>
<td width=61%>0x60000000</td>
</tr>
<tr valign=top>
<td width=39%>D - F</td>
<td width=61%>0x61000000</td>
</tr>
<tr valign=top>
<td width=39%>G - I</td>
<td width=61%>0x62000000</td>
</tr>
<tr valign=top>
<td width=39%>J - L</td>
<td width=61%>0x63000000</td>
</tr>
<tr valign=top>
<td width=39%>M - O</td>
<td width=61%>0x64000000</td>
</tr>
<tr valign=top>
<td width=39%>P - R</td>
<td width=61%>0x65000000</td>
</tr>
<tr valign=top>
<td width=39%>S - U</td>
<td width=61%>0x66000000</td>
</tr>
<tr valign=top>
<td width=39%>V - X</td>
<td width=61%>0x67000000</td>
</tr>
<tr valign=top>
<td width=39%>Y - Z</td>
<td width=61%>0x68000000</td>
</tr>
</table><br>
<p>
By using these suggestions with the <b>ReBaseImage</b> function, each DLL in an application can be assigned a unique base address. This process can be part of the build process or part of the final release procedure for the application.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in imagehlp.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use imagehlp.lib.</p>
<h4>See Also</h4>
<p>
<a href="imgehlp1_3hzz.htm">PE Image Helper (ImageHlp) Overview</a>, <a href="imgehlp1_9coj.htm">ImageHlp Image Modification Functions</a>, <a href="dll_8asu.htm"><b>DllMain</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
