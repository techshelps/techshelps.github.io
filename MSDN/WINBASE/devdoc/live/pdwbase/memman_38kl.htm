<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GlobalFree</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_globalfree"></a>GlobalFree</h1>
<p>
The <b>GlobalFree</b> function frees the specified global memory object and invalidates its handle. </p>
<p>
This function is provided only for compatibility with 16-bit versions of Windows. </p>
<pre><code><b>HGLOBAL GlobalFree(
  HGLOBAL</b><i> hMem</i>   // handle to the global memory object
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hMem</i></dt>
<dd>
Handle to the global memory object. This handle is returned by either the <a href="memman_66qr.htm"><b>GlobalAlloc</b></a> or <a href="memman_0lcz.htm"><b>GlobalReAlloc</b></a> function. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is NULL.</p>
<p>
If the function fails, the return value is equal to a handle to the global memory object. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
If the process examines or modifies the memory after it has been freed, heap corruption may occur or an access violation exception (EXCEPTION_ACCESS_VIOLATION) may be generated.</p>
<p>
If the <i>hgblMem</i> parameter is NULL, <b>GlobalFree</b> fails and the system generates an access violation exception. </p>
<p>
The <b>GlobalFree</b> function will free a locked memory object. A locked memory object has a lock count greater than zero. The <a href="memman_6omj.htm"><b>GlobalLock</b></a> function locks a global memory object and increments the lock count by one. The <a href="memman_5ga3.htm"><b>GlobalUnlock</b></a> function unlocks it and decrements the lock count by one. To get the lock count of a global memory object, use the <a href="memman_36ib.htm"><b>GlobalFlags</b></a> function.</p>
<p>
If an application is running under a debug version of the system, <b>GlobalFree</b> will issue a message that tells you that a locked object is being freed. If you are debugging the application, <b>GlobalFree</b> will enter a breakpoint just before freeing a locked object. This allows you to verify the intended behavior, then continue execution. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="memman_6oz8.htm">Memory Management Overview</a>, <a href="memman_60kz.htm">Memory Management Functions</a>, <a href="memman_66qr.htm"><b>GlobalAlloc</b></a>, <a href="memman_36ib.htm"><b>GlobalFlags</b></a>, <a href="memman_6omj.htm"><b>GlobalLock</b></a>, <a href="memman_0lcz.htm"><b>GlobalReAlloc</b></a>, <a href="memman_5ga3.htm"><b>GlobalUnlock</b></a></p>
<p>&nbsp;</p></body>
</HTML>
