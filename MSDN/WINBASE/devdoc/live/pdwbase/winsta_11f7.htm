<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handling Logoff Events</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_handling_logoff_events"></a>Handling Logoff Events</h2>
<p>
Win32 services that interact with the user should be prepared to handle <a href="winsta_0y2b.htm">logoff events</a>. When a logoff event occurs, the Win32 service must close all handles to the user's window station and desktop.</p>
<p>
This sample demonstrates how the message box in the interaction example code should be dismissed at logoff. The <code>ConsoleCtrlHandler</code> function in this example is a <a href="conchar_5zz9.htm"><b>HandlerRoutine</b></a> that was specified by a call to the <a href="conchar_599u.htm"><b>SetConsoleCtrlHandler</b></a> function.</p>
<pre><code>BOOL CALLBACK EnumProc( 
    HWND hwnd, 
    LPARAM lParam) 
{ 
    // Send a WM_CLOSE to destroy the window, because DestroyWindow 
    // does not work across threads. 

    SendMessage(hwnd, WM_CLOSE, 0, 0); 
    return TRUE; 
} 
 
BOOL ConsoleCtrlHandler( 
    DWORD dwCtrlType) 
{ 
    if (dwCtrlType == CTRL_LOGOFF_EVENT &amp;&amp; dwGuiThreadId != 0) 
    { 
        SetThreadDesktop(GetThreadDesktop(dwGuiThreadId)); 
        EnumThreadWindows(dwGuiThreadId, EnumProc, 0); 
    } 
    return FALSE; 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
