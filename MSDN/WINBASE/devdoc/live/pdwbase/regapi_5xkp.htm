<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RegQueryInfoKey</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_regqueryinfokey"></a>RegQueryInfoKey</h1>
<p>
The <b>RegQueryInfoKey</b> function retrieves information about a specified registry key. </p>
<pre><code><b>LONG RegQueryInfoKey(
  HKEY</b><i> hKey</i><b>,                </b>// handle to key to query
<b>  LPTSTR</b><i> lpClass</i><b>,           </b>// address of buffer for class string
<b>  LPDWORD</b><i> lpcbClass</i><b>,        </b>// address of size of class string buffer
<b>  LPDWORD</b><i> lpReserved</i><b>,       </b>// reserved
<b>  LPDWORD</b><i> lpcSubKeys</i><b>,       </b>// address of buffer for number of 
                            // subkeys
<b>  LPDWORD</b><i> lpcbMaxSubKeyLen</i><b>,  </b>// address of buffer for longest subkey 
                             // name length
<b>  LPDWORD</b><i> lpcbMaxClassLen</i><b>,  </b>// address of buffer for longest class 
                            // string length
<b>  LPDWORD</b><i> lpcValues</i><b>,        </b>// address of buffer for number of value 
                            // entries
<b>  LPDWORD</b><i> lpcbMaxValueNameLen</i><b>,  </b>// address of buffer for longest 
                                // value name length
<b>  LPDWORD</b><i> lpcbMaxValueLen</i><b>,  </b>// address of buffer for longest value 
                            // data length
<b>  LPDWORD</b><i> lpcbSecurityDescriptor</i><b>,</b>
<b>                            </b>// address of buffer for security 
                            // descriptor length
<b>  PFILETIME</b><i> lpftLastWriteTime</i>   // address of buffer for last write 
                                // time
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hKey</i></dt>
<dd>
Handle to a currently open key or any of the following predefined reserved handle values: 
<p>
<b>HKEY_CLASSES_ROOT</b><br>
<b>HKEY_CURRENT_CONFIG</b><br>
<b>HKEY_CURRENT_USER</b><br>
<b>HKEY_LOCAL_MACHINE</b><br>
<b>HKEY_USERS<br>
Windows NT:</b> <b>HKEY_PERFORMANCE_DATA</b> <br>
<b>Windows 95 and Windows 98:</b> <b>HKEY_DYN_DATA</b> 
</dd>
<dt>
<i>lpClass</i></dt>
<dd>
Pointer to a buffer that receives the key's class name. This parameter can be NULL.</dd>
<dt>
<i>lpcbClass</i></dt>
<dd>
Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpClass</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the class string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not big enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string, in characters, without counting the null character. 
<p>
If <i>lpClass</i> is NULL, <i>lpcbClass</i> can be NULL. 

<p>
<b>Windows NT:</b> If the <i>lpClass</i> parameter is a valid address, but the <i>lpcbClass</i> parameter is not (for example, it is NULL), the function returns ERROR_INVALID_PARAMETER. 

<p>
<b>Windows 95:</b> If the <i>lpClass</i> parameter is a valid address, but the <i>lpcbClass</i> parameter is not (for example, it is NULL), the function returns ERROR_SUCCESS instead of ERROR_INVALID_PARAMETER. To ensure compatibility with other platforms, verify that <i>lpcbClass</i> is valid before calling the function.
</dd>
<dt>
<i>lpReserved</i></dt>
<dd>
Reserved; must be NULL. </dd>
<dt>
<i>lpcSubKeys</i></dt>
<dd>
Pointer to a variable that receives the number of subkeys contained by the specified key. This parameter can be NULL. </dd>
<dt>
<i>lpcbMaxSubKeyLen</i></dt>
<dd>
Pointer to a variable that receives the length, in characters, of the key's subkey with the longest name. The count returned does not include the terminating null character. This parameter can be NULL. </dd>
<dt>
<i>lpcbMaxClassLen</i></dt>
<dd>
Pointer to a variable that receives the length, in characters, of the longest string specifying a subkey class. The count returned does not include the terminating null character. This parameter can be NULL. </dd>
<dt>
<i>lpcValues</i></dt>
<dd>
Pointer to a variable that receives the number of values associated with the key. This parameter can be NULL. </dd>
<dt>
<i>lpcbMaxValueNameLen</i></dt>
<dd>
Pointer to a variable that receives the length, in characters, of the key's longest value name. The count returned does not include the terminating null character. This parameter can be NULL. </dd>
<dt>
<i>lpcbMaxValueLen</i></dt>
<dd>
Pointer to a variable that receives the length, in bytes, of the longest data component among the key's values. This parameter can be NULL. </dd>
<dt>
<i>lpcbSecurityDescriptor</i></dt>
<dd>
Pointer to a variable that receives the length, in bytes, of the key's security descriptor. This parameter can be NULL. </dd>
<dt>
<i>lpftLastWriteTime</i></dt>
<dd>
Pointer to a <a href="time_0fzm.htm"><b>FILETIME</b></a> structure. This parameter can be NULL. 
<p>
<b>Windows NT:</b> The function sets the members of the <b>FILETIME</b> structure to indicate the last time that the key or any of its value entries was modified.

<p>
<b>Windows 95:</b> The function sets the members of the <b>FILETIME</b> structure to zero. This is because the system does not keep track of registry key last write time information.

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is ERROR_SUCCESS.</p>
<p>
If the function fails, the return value is a nonzero error code defined in WINERROR.H. You can use the <a href="strings_0sdh.htm"><b>FormatMessage</b></a> function with the FORMAT_MESSAGE_FROM_SYSTEM flag to get a generic description of the error.</p>
<h4>Remarks</h4>
<p>
The key identified by the <i>hKey</i> parameter must have been opened with KEY_QUERY_VALUE access (KEY_READ access includes KEY_QUERY_VALUE access). </p>
<p>
<b>Windows CE:</b> The <i>lpcbMaxValueData and lpcbSecurityDescriptor</i><b> </b>parameters are not used and must be set to NULL.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winreg.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="regapi_9bzt.htm">Registry Overview</a>, <a href="regapi_59mb.htm">Registry Functions</a>, <a href="time_0fzm.htm"><b>FILETIME</b></a>, <a href="regapi_1po9.htm"><b>RegDeleteKey</b></a>, <a href="regapi_1juh.htm"><b>RegEnumKey</b></a>, <a href="regapi_4854.htm"><b>RegEnumKeyEx</b></a>, <a href="regapi_65yd.htm"><b>RegEnumValue</b></a>, <a href="regapi_05np.htm"><b>RegQueryValue</b></a>, <a href="regapi_3wzc.htm"><b>RegQueryValueEx</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
