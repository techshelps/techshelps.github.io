<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WideCharToMultiByte</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_widechartomultibyte"></a>WideCharToMultiByte</h1>
<p>
The <b>WideCharToMultiByte</b> function maps a wide-character string to a new character string. The new character string is not necessarily from a multibyte character set. </p>
<pre><code><b>int WideCharToMultiByte(
  UINT</b><i> CodePage</i><b>,         </b>// code page
<b>  DWORD</b><i> dwFlags</i><b>,         </b>// performance and mapping flags
<b>  LPCWSTR</b><i> lpWideCharStr</i><b>, </b>// address of wide-character string
<b>  int</b><i> cchWideChar</i><b>,       </b>// number of characters in string
<b>  LPSTR</b><i> lpMultiByteStr</i><b>,  </b>// address of buffer for new string
<b>  int</b><i> cchMultiByte</i><b>,      </b>// size of buffer
<b>  LPCSTR</b><i> lpDefaultChar</i><b>,  </b>// address of default for unmappable 
                         // characters
<b>  LPBOOL</b><i> lpUsedDefaultChar</i>   // address of flag set when default 
                             // char. used
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>CodePage</i></dt>
<dd>
Specifies the code page used to perform the conversion. This parameter can be given the value of any code page that is installed or available in the system. You can also specify one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=30%>Value</th>
<th align=left width=70%>Meaning</th>
</tr>
<tr valign=top>
<td width=30%>CP_ACP</td>
<td width=70%>ANSI code page</td>
</tr>
<tr valign=top>
<td width=30%>CP_MACCP</td>
<td width=70%>Macintosh code page</td>
</tr>
<tr valign=top>
<td width=30%>CP_OEMCP</td>
<td width=70%>OEM code page</td>
</tr>
<tr valign=top>
<td width=30%>CP_SYMBOL</td>
<td width=70%>Symbol code page (42)</td>
</tr>
<tr valign=top>
<td width=30%>CP_THREAD_ACP</td>
<td width=70%>Current thread's ANSI code page</td>
</tr>
<tr valign=top>
<td width=30%>CP_UTF7</td>
<td width=70%>Translate using UTF-7</td>
</tr>
<tr valign=top>
<td width=30%>CP_UTF8</td>
<td width=70%>Translate using UTF-8</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
A set of bit flags that specify the handling of unmapped characters. The function performs more quickly when <b>none</b> of these flags is set. The following flag constants are defined:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Value</th>
<th align=left width=60%>Meaning</th>
</tr>
<tr valign=top>
<td width=40%>WC_NO_BEST_FIT_CHARS</td>
<td width=60%>Any Unicode characters that do not translate directly to multibyte equivalents will be translated to the default character (see <i>lpDefaultChar</i> parameter). In other words, if translating from Unicode to multibyte and back to Unicode again does not yield the exact same Unicode character, the default character is used.<p>
This flag may be used by itself or in combination with the other <i>dwFlag</i> options.</p>
</td>
</tr>
<tr valign=top>
<td width=40%>WC_COMPOSITECHECK</td>
<td width=60%>Convert composite characters to precomposed characters.</td>
</tr>
<tr valign=top>
<td width=40%>WC_DISCARDNS</td>
<td width=60%>Discard nonspacing characters during conversion.</td>
</tr>
<tr valign=top>
<td width=40%>WC_SEPCHARS</td>
<td width=60%>Generate separate characters during conversion. This is the default conversion behavior.</td>
</tr>
<tr valign=top>
<td width=40%>WC_DEFAULTCHAR</td>
<td width=60%>Replace exceptions with the default character during conversion.</td>
</tr>
</table><br>


<p>
When WC_COMPOSITECHECK is specified, the function converts composite characters to precomposed characters. A composite character consists of a base character and a nonspacing character, each having different character values. A precomposed character has a single character value for a base/nonspacing character combination. In the character <i>è</i>, the <i>e</i> is the base character, and the accent grave mark is the nonspacing character.

<p>
When an application specifies WC_COMPOSITECHECK, it can use the last 3 flags in this list (WC_DISCARDNS, WC_SEPCHARS, and WC_DEFAULTCHAR) to customize the conversion to precomposed characters. These flags determine the function's behavior when there is no precomposed mapping for a base/nonspace character combination in a wide-character string. These last 3 flags can <b>only</b> be used if the WC_COMPOSITECHECK flag is set.

<p>
The function's default behavior is to generate separate characters (WC_SEPCHARS) for unmapped composite characters.
</dd>
<dt>
<i>lpWideCharStr</i></dt>
<dd>
Points to the wide-character string to be converted. </dd>
<dt>
<i>cchWideChar</i></dt>
<dd>
Specifies the number of Unicode (16-bit) characters in the string pointed to by the <i>lpWideCharStr</i> parameter. If this value is –1, the string is assumed to be null-terminated and the length is calculated automatically. </dd>
<dt>
<i>lpMultiByteStr</i></dt>
<dd>
Points to the buffer to receive the translated string. </dd>
<dt>
<i>cchMultiByte</i></dt>
<dd>
Specifies the size in bytes of the buffer pointed to by the <i>lpMultiByteStr</i> parameter. If this value is zero, the function returns the number of bytes required for the buffer. (In this case, the <i>lpMultiByteStr</i> buffer is not used.) </dd>
<dt>
<i>lpDefaultChar</i></dt>
<dd>
Points to the character used if a wide character cannot be represented in the specified code page. If this parameter is NULL, a system default value is used. The function is faster when both <i>lpDefaultChar</i> and <i>lpUsedDefaultChar</i> are NULL. </dd>
<dt>
<i>lpUsedDefaultChar</i></dt>
<dd>
Points to a flag that indicates whether a default character was used. The flag is set to TRUE if one or more wide characters in the source string cannot be represented in the specified code page. Otherwise, the flag is set to FALSE. This parameter may be NULL. The function is faster when both <i>lpDefaultChar</i> and <i>lpUsedDefaultChar</i> are NULL. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, and <i>cchMultiByte</i> is nonzero, the return value is the number of bytes written to the buffer pointed to by <i>lpMultiByteStr</i>. </p>
<p>
If the function succeeds, and <i>cchMultiByte</i> is zero, the return value is the required size, in bytes, for a buffer that can receive the translated string. </p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. <b>GetLastError</b> may return one of the following error codes:</p>
<p>
ERROR_INSUFFICIENT_BUFFER<br>
ERROR_INVALID_FLAGS<br>
ERROR_INVALID_PARAMETER</p>
<h4>Remarks</h4>
<p>
The <i>lpMultiByteStr</i> and <i>lpWideCharStr</i> pointers must not be the same. If they are the same, the function fails, and <b>GetLastError</b> returns ERROR_INVALID_PARAMETER. </p>
<p>
An application can use the <i>lpDefaultChar</i> parameter to change the default character used for the conversion. </p>
<p>
As noted earlier, the <b>WideCharToMultiByte </b>function operates most efficiently when both <i>lpDefaultChar</i> and <i>lpUsedDefaultChar</i> are NULL. The following table shows the behavior of <b>WideCharToMultiByte</b> for the four combinations of <i>lpDefaultChar</i> and <i>lpUsedDefaultChar</i> :</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=23%><i>lpDefaultChar</i></th>
<th align=left width=32%><i>lpUsedDefaultChar</i></th>
<th align=left width=45%>Result</th>
</tr>
<tr valign=top>
<td width=23%>NULL</td>
<td width=32%>NULL</td>
<td width=45%>No default checking. This is the most efficient, quick way to use this function.</td>
</tr>
<tr valign=top>
<td width=23%>non-NULL</td>
<td width=32%>NULL</td>
<td width=45%>Uses the specified default character, but does not set <i>lpUsedDefaultChar</i>.</td>
</tr>
<tr valign=top>
<td width=23%>NULL</td>
<td width=32%>non-NULL</td>
<td width=45%>Uses the system default character and sets <i>lpUsedDefaultChar</i> if necessary.</td>
</tr>
<tr valign=top>
<td width=23%>non-NULL</td>
<td width=32%>non-NULL</td>
<td width=45%>Uses the specified default character and sets <i>lpUsedDefaultChar</i> if necessary.</td>
</tr>
</table><br>
<p>
<b>Windows CE:</b> Windows CE does not support the CP_UTF7 and CP_UTF8 values for the <i>CodePage</i> parameter and the WC_NO_BEST_FIT_CHARS value for the <i>dwFlags</i> parameter.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winnls.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="unicode_6bqr.htm">Unicode and Character Sets Overview</a>, <a href="unicode_19mb.htm">Unicode and Character Set Functions</a>, <a href="unicode_17si.htm"><b>MultiByteToWideChar</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
