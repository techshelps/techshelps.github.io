<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Denying Access Using Windows NT 4.0 Functions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_denying_access_using_windows_nt_4.0_functions"></a>Denying Access Using Windows NT 4.0 Functions</h2>
<p>
These examples use the <a href="acctlnt4_9y5o.htm"><b>SetEntriesInAcl</b></a> function to create an ACL. Then they use the <a href="acctlnt4_86lr.htm"><b>SetNamedSecurityInfo</b></a> function to attach the ACL as the DACL of an object. Note that these examples can work with a variety of named securable objects, such as files, registry keys, and synchronization objects.</p>
<p>
The first example shows how to add an empty DACL to an object's security descriptor. The effect is to deny all access to the object. </p>
<pre><code>DWORD SetEmptyDACL(LPTSTR lpObjectName, SE_OBJECT_TYPE ObjectType) 
{
DWORD dwRes;
PACL pDacl;

if (NULL == lpObjectName) 
    return ERROR_INVALID_PARAMETER;

// create an ACL with no ACEs

dwRes = SetEntriesInAcl(0, NULL, NULL, &amp;pDacl);
if (ERROR_SUCCESS != dwRes) 
    return dwRes;

// attach the emtpy ACL as the object's DACL

dwRes = SetNamedSecurityInfo(lpObjectName, ObjectType, 
      DACL_SECURITY_INFORMATION,  
      NULL, NULL, pDacl, NULL);

// free the buffer returned by SetEntriesInAcl

LocalFree(pDacl);

return dwRes;
}
 </code></pre>
<p>
You can modify this example to deny access to a specified trustee. The following variation uses the <a href="acctlnt4_37s5.htm"><b>BuildExplicitAccessWithName</b></a> function to initialize an <a href="acctlnt4_1xf6.htm"><b>EXPLICIT_ACCESS</b></a> structure with the data for an access-denied ACE. Then it uses the <a href="acctlnt4_9y5o.htm"><b>SetEntriesInAcl</b></a> and <a href="acctlnt4_86lr.htm"><b>SetNamedSecurityInfo</b></a> functions to create the ACL and attach it to the object. </p>
<pre><code>#include &lt;aclapi.h&gt;

DWORD dwRes;
PACL pDacl;
EXPLICIT_ACCESS ea;

// initialize an EXPLICIT_ACCESS structure to deny access

ZeroMemory(&amp;ea, sizeof(EXPLICIT_ACCESS));
BuildExplicitAccessWithName(&amp;ea, 
    "ludwig",          // name of trustee
    GENERIC_ALL,       // type of access
    DENY_ACCESS,       // access mode
    NO_INHERITANCE);   // inheritance mode

// create an ACL with one access-denied ACE

dwRes = SetEntriesInAcl(1, &amp;ea, NULL, &amp;pDacl);
if (ERROR_SUCCESS != dwRes) 
    return dwRes;

// attach the ACL as the object's DACL

dwRes = SetNamedSecurityInfo(TEXT("myfile"), SE_FILE_OBJECT, 
      DACL_SECURITY_INFORMATION,  
      NULL, NULL, pDacl, NULL);

// free the buffer returned by SetEntriesInAcl

LocalFree(pDacl);
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
