<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Allowing Access Using Windows NT 4.0 Functions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_allowing_access_using_windows_nt_4.0_functions"></a>Allowing Access Using Windows NT 4.0 Functions</h2>
<p>
This example adds an access-allowed ACE to the DACL of an object. The example uses the <a href="acctlnt4_1i0f.htm"><b>GetNamedSecurityInfo</b></a> function to get the existing DACL. Then it uses the <a href="acctlnt4_37s5.htm"><b>BuildExplicitAccessWithName</b></a> and <a href="acctlnt4_9y5o.htm"><b>SetEntriesInAcl</b></a> functions to merge a new ACE with any existing ACEs in the DACL. Finally, the example calls the <a href="acctlnt4_86lr.htm"><b>SetNamedSecurityInfo</b></a> function to attach the new DACL to the object's security descriptor.</p>
<pre><code>DWORD AddAceToAcl (LPTSTR lpObjectName, SE_OBJECT_TYPE ObjectType) 
{
DWORD dwRes;
PACL pOldDACL, pNewDACL;
PSECURITY_DESCRIPTOR pSD;
EXPLICIT_ACCESS ea;

if (NULL == lpObjectName) 
    return ERROR_INVALID_PARAMETER;

// get a pointer to the existing DACL

dwRes = GetNamedSecurityInfo(lpObjectName, ObjectType, 
      DACL_SECURITY_INFORMATION,  
      NULL, NULL, &amp;pOldDACL, NULL, &amp;pSD);
if (ERROR_SUCCESS != dwRes) 
    return dwRes;

// initialize an EXPLICIT_ACCESS structure to allow access

ZeroMemory(&amp;ea, sizeof(EXPLICIT_ACCESS));
BuildExplicitAccessWithName(&amp;ea, "duke", GENERIC_READ, 
        SET_ACCESS, NO_INHERITANCE);

// create an new ACL by merging the EXPLICIT_ACCESS structure
// with the existing DACL

dwRes = SetEntriesInAcl(1, &amp;ea, pOldDACL, &amp;pNewDACL);
if (ERROR_SUCCESS != dwRes) 
    goto Cleanup;

// attach the new ACL as the object's DACL

dwRes = SetNamedSecurityInfo(lpObjectName, ObjectType, 
      DACL_SECURITY_INFORMATION,  
      NULL, NULL, pNewDACL, NULL);

// free the buffers returned by SetEntriesInAcl 
//   and GetNamedSecurityInfo

Cleanup: 
    if(pSD != NULL) 
        LocalFree((HLOCAL) pSD); 
    if(pNewDACL != NULL) 
        LocalFree((HLOCAL) pNewDACL); 

return dwRes;
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
