<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TlsSetValue</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_tlssetvalue"></a>TlsSetValue</h1>
<p>
The <b>TlsSetValue</b> function stores a value in the calling thread's thread local storage (TLS) slot for a specified TLS index. Each thread of a process has its own slot for each TLS index. </p>
<pre><code><b>BOOL TlsSetValue(
  DWORD</b><i> dwTlsIndex</i><b>,  </b>// TLS index to set value for
<b>  LPVOID</b><i> lpTlsValue</i>  // value to be stored
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwTlsIndex</i></dt>
<dd>
Specifies a TLS index that was allocated by the <a href="prothred_986b.htm"><b>TlsAlloc</b></a> function. </dd>
<dt>
<i>lpTlsValue</i></dt>
<dd>
Specifies the value to be stored in the calling thread's TLS slot specified by <i>dwTlsIndex</i>. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
TLS indexes are typically allocated by the <a href="prothred_986b.htm"><b>TlsAlloc</b></a> function during process or DLL initialization. Once allocated, each thread of the process can use a TLS index to access its own TLS storage slot for that index. The storage slot for each thread is initialized to NULL. A thread specifies a TLS index in a call to <b>TlsSetValue</b>, to store a value in its slot. The thread specifies the same index in a subsequent call to <a href="prothred_6azp.htm"><b>TlsGetValue</b></a>, to retrieve the stored value. </p>
<p>
<b>TlsSetValue</b> and <b>TlsGetValue</b> were implemented with speed as the primary goal. These functions perform minimal parameter validation and error checking. In particular, this function succeeds if <i>dwTlsIndex</i> is in the range 0 through (TLS_MINIMUM_AVAILABLE – 1). It is up to the programmer to ensure that the index is valid. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="prothred_86sz.htm">Processes and Threads Overview</a>, <a href="prothred_3mgj.htm">Process and Thread Functions</a>, <a href="prothred_986b.htm"><b>TlsAlloc</b></a>, <a href="prothred_7ns5.htm"><b>TlsFree</b></a>, <a href="prothred_6azp.htm"><b>TlsGetValue</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
