<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CallNextHookEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_callnexthookex"></a>CallNextHookEx</h1>
<p>
The <b>CallNextHookEx</b> function passes the hook information to the next hook procedure in the current hook chain. A hook procedure can call this function either before or after processing the hook information. </p>
<pre><code><b>LRESULT CallNextHookEx(
  HHOOK</b><i> hhk</i><b>,      </b>// handle to current hook
<b>  int</b><i> nCode</i><b>,      </b>// hook code passed to hook procedure
<b>  WPARAM</b><i> wParam</i><b>,  </b>// value passed to hook procedure
<b>  LPARAM</b><i> lParam</i>   // value passed to hook procedure
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hhk</i></dt>
<dd>
Handle to the current hook. An application receives this handle as a result of a previous call to the <a href="hooks_7vaw.htm"><b>SetWindowsHookEx</b></a> function. </dd>
<dt>
<i>nCode</i></dt>
<dd>
Specifies the hook code passed to the current hook procedure. The next hook procedure uses this code to determine how to process the hook information. </dd>
<dt>
<i>wParam</i></dt>
<dd>
Specifies the <i>wParam</i> value passed to the current hook procedure. The meaning of this parameter depends on the type of hook associated with the current hook chain. </dd>
<dt>
<i>lParam</i></dt>
<dd>
Specifies the <i>lParam</i> value passed to the current hook procedure. The meaning of this parameter depends on the type of hook associated with the current hook chain. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value is the value returned by the next hook procedure in the chain. The current hook procedure must also return this value. The meaning of the return value depends on the hook type. For more information, see the descriptions of the individual hook procedures. </p>
<h4>Remarks</h4>
<p>
Hook procedures are installed in chains for particular hook types. <b>CallNextHookEx</b> calls the next hook in the chain. </p>
<p>
Calling <b>CallNextHookEx</b> is optional, but it is highly recommended; otherwise, other applications that have installed hooks will not receive hook notifications and may behave incorrectly as a result. You should call <b>CallNextHookEx</b> unless you absolutely need to prevent the notification from being seen by other applications. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="hooks_9rg3.htm">Hooks Overview</a>, <a href="hooks_31bn.htm">Hook Functions</a>, <a href="hooks_7vaw.htm"><b>SetWindowsHookEx</b></a>, <a href="hooks_6fy0.htm"><b>UnhookWindowsHookEx</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
