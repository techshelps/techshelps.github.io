<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EnumServicesStatus</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_enumservicesstatus"></a>EnumServicesStatus</h1>
<p>
The <b>EnumServicesStatus</b> function enumerates services in the specified service control manager database. The name and status of each service are provided. </p>
<pre><code><b>BOOL EnumServicesStatus(
  SC_HANDLE</b><i> hSCManager</i><b>, </b>// handle to service control manager database
<b>  DWORD</b><i> dwServiceType</i><b>,     </b>// type of services to enumerate
<b>  DWORD</b><i> dwServiceState</i><b>,    </b>// state of services to enumerate
<b>  LPENUM_SERVICE_STATUS</b><i> lpServices</i><b>,</b>
<b>                           </b>// pointer to service status buffer
<b>  DWORD</b><i> cbBufSize</i><b>,         </b>// size of service status buffer
<b>  LPDWORD</b><i> pcbBytesNeeded</i><b>,  </b>// pointer to variable for bytes needed
<b>  LPDWORD</b><i> lpServicesReturned</i><b>,</b>
<b>                           </b>// pointer to variable for number returned
<b>  LPDWORD</b><i> lpResumeHandle</i>   // pointer to variable for next entry
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hSCManager</i></dt>
<dd>
Handle to the service control manager database. The <a href="services_4c36.htm"><b>OpenSCManager</b></a> function returns this handle, which must have SC_MANAGER_ENUMERATE_SERVICE access. </dd>
<dt>
<i>dwServiceType</i></dt>
<dd>
Specifies the type of services to enumerate. It must be one or both of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=34%>Value</th>
<th align=left width=66%>Meaning</th>
</tr>
<tr valign=top>
<td width=34%>SERVICE_WIN32</td>
<td width=66%>Enumerates services of type SERVICE_WIN32_OWN_PROCESS and SERVICE_WIN32_SHARE_PROCESS.</td>
</tr>
<tr valign=top>
<td width=34%>SERVICE_DRIVER</td>
<td width=66%>Enumerates services of type SERVICE_KERNEL_DRIVER and SERVICE_FILE_SYSTEM_DRIVER.</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwServiceState</i></dt>
<dd>
Specifies the services to enumerate based on their running state. It must be one or both of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=34%>Value</th>
<th align=left width=66%>Meaning</th>
</tr>
<tr valign=top>
<td width=34%>SERVICE_ACTIVE</td>
<td width=66%>Enumerates services that are in the following states: SERVICE_START_PENDING, SERVICE_STOP_PENDING, SERVICE_RUNNING, SERVICE_CONTINUE_PENDING, SERVICE_PAUSE_PENDING, and SERVICE_PAUSED.</td>
</tr>
<tr valign=top>
<td width=34%>SERVICE_INACTIVE</td>
<td width=66%>Enumerates services that are in the SERVICE_STOPPED state.</td>
</tr>
<tr valign=top>
<td width=34%>SERVICE_STATE_ALL</td>
<td width=66%>Combines the following states: SERVICE_ACTIVE and SERVICE_INACTIVE. </td>
</tr>
</table><br>

</dd>
<dt>
<i>lpServices</i></dt>
<dd>
Pointer to an array of <a href="services_584y.htm"><b>ENUM_SERVICE_STATUS</b></a> structures in which the name and service status information for each service in the database is returned. The buffer must be large enough to hold the structures, plus the strings to which their members point.</dd>
<dt>
<i>cbBufSize</i></dt>
<dd>
Specifies the size, in bytes, of the buffer pointed to by the <i>lpServices</i> parameter. </dd>
<dt>
<i>pcbBytesNeeded</i></dt>
<dd>
Pointer to a variable that receives the number of bytes needed to return the remaining service entries. </dd>
<dt>
<i>lpServicesReturned</i></dt>
<dd>
Pointer to a variable that receives the number of service entries returned. </dd>
<dt>
<i>lpResumeHandle</i></dt>
<dd>
Pointer to a <b>DWORD</b> variable that is used for both input and output. On input, this value specifies the starting point of enumeration. You must set this value to zero the first time this function is called. On output, this value is zero if the function succeeds. However, if the function returns zero and the <a href="errors_3uwi.htm"><b>GetLastError</b></a> function returns ERROR_MORE_DATA, this value is used to indicate the next service entry to be read when the function is called to retrieve the additional data. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <b>GetLastError</b>. </p>
<h4>Errors</h4>
<p>
The following error codes can be set by the service control manager. Other error codes can be set by the registry functions that are called by the service control manager. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=12%>Value</th>
<th align=left width=88%>Meaning</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%>ERROR_ACCESS_DENIED</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%>The specified handle was not opened with SC_MANAGER_ENUMERATE_SERVICE access.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>ERROR_INVALID_HANDLE</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%>The specified handle is invalid.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>ERROR_INVALID_PARAMETER</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%>A parameter that was specified is invalid.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>ERROR_MORE_DATA</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%>There are more service entries than would fit into the <i>lpServices</i> buffer. The actual number of service entries written to <i>lpServices</i> is returned in the <i>lpServicesReturned</i> parameter. The number of bytes required to get the remaining entries is returned in the <i>pcbBytesNeeded</i> parameter. The remaining services can be enumerated by additional calls to <b>EnumServicesStatus</b> with the <i>lpResumeHandle</i> parameter indicating the next service to read.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winsvc.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="services_0p0z.htm">Services Overview</a>, <a href="services_2uwj.htm">Service Functions</a>, <a href="services_094j.htm"><b>EnumDependentServices</b></a>, <a href="services_584y.htm"><b>ENUM_SERVICE_STATUS</b></a>, <a href="services_4c36.htm"><b>OpenSCManager</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
