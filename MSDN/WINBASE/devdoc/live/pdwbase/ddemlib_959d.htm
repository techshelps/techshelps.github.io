<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DdeAddData</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_ddeadddata"></a>DdeAddData</h1>
<p>
The <b>DdeAddData</b> function adds data to the specified dynamic data exchange (DDE) object. An application can add data starting at any offset from the beginning of the object. If new data overlaps data already in the object, the new data overwrites the old data in the bytes where the overlap occurs. The contents of locations in the object that have not been written to are undefined. </p>
<pre><code><b>HDDEDATA DdeAddData(
  HDDEDATA</b><i> hData</i><b>,  </b>// handle to DDE data object
<b>  LPBYTE</b><i> pSrc</i><b>,     </b>// pointer to source buffer
<b>  DWORD</b><i> cb</i><b>,        </b>// length of data
<b>  DWORD</b><i> cbOff</i>      // offset within DDE data object
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hData</i></dt>
<dd>
Handle to the DDE object that receives additional data. </dd>
<dt>
<i>pSrc</i></dt>
<dd>
Pointer to a buffer containing the data to add to the DDE object. </dd>
<dt>
<i>cb</i></dt>
<dd>
Specifies the length, in bytes, of the data to be added to the DDE object, including the terminating NULL, if the data is a string. </dd>
<dt>
<i>cbOff</i></dt>
<dd>
Specifies an offset, in bytes, from the beginning of the DDE object. The additional data is copied to the object beginning at this offset. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a new handle to the DDE object. The new handle is used in all references to the object. </p>
<p>
If the function fails, the return value is zero. </p>
<h4>Errors</h4>
<p>
The <a href="ddemlib_89bm.htm"><b>DdeGetLastError</b></a> function can be used to get the error code, which may be one of the following values: </p>
<p>
DMLERR_DLL_NOT_INITIALIZED<br>
DMLERR_INVALIDPARAMETER<br>
DMLERR_MEMORY_ERROR<br>
DMLERR_NO_ERROR</p>
<h4>Remarks</h4>
<p>
After a data handle has been used as a parameter in another <a href="ddemlib_743d.htm">Dynamic Data Exchange Management Library</a> function or has been returned by a DDE callback function, the handle may be used only for read access to the DDE object identified by the handle. </p>
<p>
If the amount of memory originally allocated is less than is needed to hold the added data, <b>DdeAddData</b> reallocates a global memory object of the appropriate size. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ddeml.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="ddemlib_743d.htm">Dynamic Data Exchange Management Library Overview</a>, <a href="ddemlib_1nn7.htm">Dynamic Data Exchange Management Functions</a>, <a href="ddemlib_1ba9.htm"><b>DdeAccessData</b></a>, <a href="ddemlib_0tt1.htm"><b>DdeCreateDataHandle</b></a>, <a href="ddemlib_1k9t.htm"><b>DdeUnaccessData</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
