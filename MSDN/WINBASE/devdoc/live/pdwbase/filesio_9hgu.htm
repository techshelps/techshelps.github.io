<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FindFirstChangeNotification</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_findfirstchangenotification"></a>FindFirstChangeNotification</h1>
<p>
The <b>FindFirstChangeNotification</b> function creates a change notification handle and sets up initial change notification filter conditions. A wait on a notification handle succeeds when a change matching the filter conditions occurs in the specified directory or subtree. </p>
<pre><code><b>HANDLE FindFirstChangeNotification(
  LPCTSTR</b><i> lpPathName</i><b>,    </b>// pointer to name of directory to watch
<b>  BOOL</b><i> bWatchSubtree</i><b>,    </b>// flag for monitoring directory or 
                         // directory tree
<b>  DWORD</b><i> dwNotifyFilter</i>   // filter conditions to watch for
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpPathName</i></dt>
<dd>
Pointer to a null-terminated string that specifies the path of the directory to watch. </dd>
<dt>
<i>bWatchSubtree</i></dt>
<dd>
Specifies whether the function will monitor the directory or the directory tree. If this parameter is TRUE, the function monitors the directory tree rooted at the specified directory; if it is FALSE, it monitors only the specified directory. </dd>
<dt>
<i>dwNotifyFilter</i></dt>
<dd>
Specifies the filter conditions that satisfy a change notification wait. This parameter can be one or more of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=16%>Value</th>
<th align=left width=84%>Meaning</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%>FILE_NOTIFY_CHANGE_FILE_NAME</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>Any filename change in the watched directory or subtree causes a change notification wait operation to return. Changes include renaming, creating, or deleting a filename.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>FILE_NOTIFY_CHANGE_DIR_NAME</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>Any directory-name change in the watched directory or subtree causes a change notification wait operation to return. Changes include creating or deleting a directory.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>FILE_NOTIFY_CHANGE_ATTRIBUTES</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>Any attribute change in the watched directory or subtree causes a change notification wait operation to return.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>FILE_NOTIFY_CHANGE_SIZE</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>Any file-size change in the watched directory or subtree causes a change notification wait operation to return. The operating system detects a change in file size only when the file is written to the disk. For operating systems that use extensive caching, detection occurs only when the cache is sufficiently flushed.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>FILE_NOTIFY_CHANGE_LAST_WRITE</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>Any change to the last write-time of files in the watched directory or subtree causes a change notification wait operation to return. The operating system detects a change to the last write-time only when the file is written to the disk. For operating systems that use extensive caching, detection occurs only when the cache is sufficiently flushed.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>FILE_NOTIFY_CHANGE_SECURITY</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>Any security-descriptor change in the watched directory or subtree causes a change notification wait operation to return.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a handle to a find change notification object.</p>
<p>
If the function fails, the return value is INVALID_HANDLE_VALUE. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The <a href="synchro_5vqr.htm">wait functions</a> can monitor the specified directory or subtree by using the handle returned by the <b>FindFirstChangeNotification</b> function. A wait is satisfied when one of the filter conditions occurs in the monitored directory or subtree. </p>
<p>
After the wait has been satisfied, the application can respond to this condition and continue monitoring the directory by calling the <b>FindNextChangeNotification</b> function and the appropriate wait function. When the handle is no longer needed, it can be closed by using the <b>FindCloseChangeNotification</b> function. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="filesio_2xm7.htm">File I/O Overview</a>, <a href="filesio_3n5f.htm">File Functions</a>, <a href="filesio_1wku.htm"><b>FindCloseChangeNotification</b></a>, <a href="filesio_0566.htm"><b>FindNextChangeNotification</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
