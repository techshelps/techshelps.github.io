<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HandlerRoutine</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_handlerroutine"></a>HandlerRoutine</h1>
<p>
A <b>HandlerRoutine</b> function is an application-defined function used with the <a href="conchar_599u.htm"><b>SetConsoleCtrlHandler</b></a> function. A console process uses this function to handle control signals received by the process. The <b>PHANDLER_ROUTINE</b> type defines a pointer to this callback function. <b>HandlerRoutine</b> is a placeholder for the application-defined function name. </p>
<pre><code><b>BOOL WINAPI HandlerRoutine(
  DWORD</b><i> dwCtrlType</i>   //  control signal type
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwCtrlType</i></dt>
<dd>
Indicates the type of control signal received by the handler. This value is one of the following: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Signal</th>
<th align=left width=57%>Description</th>
</tr>
<tr valign=top>
<td width=43%>CTRL_C_EVENT</td>
<td width=57%>A CTRL+c signal was received, either from keyboard input or from a signal generated by the <a href="conchar_3qwk.htm"><b>GenerateConsoleCtrlEvent</b></a> function.</td>
</tr>
<tr valign=top>
<td width=43%>CTRL_BREAK_EVENT</td>
<td width=57%>A CTRL+BREAK signal was received, either from keyboard input or from a signal generated by <b>GenerateConsoleCtrlEvent</b>.</td>
</tr>
<tr valign=top>
<td width=43%>CTRL_CLOSE_EVENT</td>
<td width=57%>A signal that the system sends to all processes attached to a console when the user closes the console (either by choosing the Close command from the console window's System menu, or by choosing the End Task command from the Task List).</td>
</tr>
<tr valign=top>
<td width=43%>CTRL_LOGOFF_EVENT</td>
<td width=57%>A signal that the system sends to all console processes when a user is logging off. This signal does not indicate which user is logging off, so no assumptions can be made.</td>
</tr>
<tr valign=top>
<td width=43%>CTRL_SHUTDOWN_EVENT</td>
<td width=57%>A signal that the system sends to all console processes when the system is shutting down.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function handles the control signal, it should return TRUE. If it returns FALSE, the next handler function in the list of handlers for this process is used. </p>
<h4>Remarks</h4>
<p>
Each console process has its own list of <b>HandlerRoutine</b> functions. Initially, this list contains only a default handler function that calls <a href="prothred_8dv7.htm"><b>ExitProcess</b></a>. A console process adds or removes additional handler functions by calling the <a href="conchar_599u.htm"><b>SetConsoleCtrlHandler</b></a> function, which does not affect the list of handler functions for other processes. When a console process receives any of the control signals, its handler functions are called on a last-registered, first-called basis until one of the handlers returns TRUE. If none of the handlers returns TRUE, the default handler is called. </p>
<p>
The CTRL_CLOSE_EVENT, CTRL_LOGOFF_EVENT, and CTRL_SHUTDOWN_EVENT signals give the process an opportunity to clean up before termination. A <b>HandlerRoutine</b> called to handle any of these signals can do one of the following after performing any cleanup operations: 
<ul>
<li>
Call the <a href="prothred_8dv7.htm"><b>ExitProcess</b></a> function to terminate the process. </li>
<li>
Return FALSE. If none of the registered handler functions returns TRUE, the default handler terminates the process. </li>
<li>
Return TRUE. In this case, no other handler functions are called, and the system displays a pop-up dialog box that asks the user whether to terminate the process. The system also displays the dialog box if the process does not respond within a certain time-out period (5 seconds for CTRL_CLOSE_EVENT, and 20 seconds for CTRL_LOGOFF_EVENT and CTRL_SHUTDOWN_EVENT). </li>
</ul>
<p>
A process can use the <b>SetProcessShutdownParameters</b> function to prevent the CTRL_LOGOFF_EVENT and CTRL_SHUTDOWN_EVENT dialog box from being displayed. In this case, the system just terminates the process when a <b>HandlerRoutine</b> returns TRUE or when the time-out period elapses. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincon.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>User-defined.</p>
<h4>See Also</h4>
<p>
<a href="conchar_4p6c.htm">Consoles and Character-Mode Support Overview</a>, <a href="conchar_3vg3.htm">Console Functions</a>, <a href="prothred_8dv7.htm"><b>ExitProcess</b></a>, <a href="conchar_3qwk.htm"><b>GenerateConsoleCtrlEvent</b></a>, <a href="prothred_4s4z.htm"><b>GetProcessShutdownParameters</b></a>, <a href="conchar_599u.htm"><b>SetConsoleCtrlHandler</b></a>, <a href="prothred_13eb.htm"><b>SetProcessShutdownParameters</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
