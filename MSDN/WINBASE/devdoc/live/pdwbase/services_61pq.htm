<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ServiceMain</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_servicemain"></a>ServiceMain</h1>
<p>
A <b>ServiceMain</b> function is a function that a service program specifies as the entry-point function of a particular service. </p>
<p>
The <b>LPSERVICE_MAIN_FUNCTION</b> type defines a pointer to this callback function. <b>ServiceMain</b> is a placeholder for an application-defined function name. </p>
<pre><code><b>VOID WINAPI ServiceMain(
  DWORD</b><i> dwArgc</i><b>,     </b>// number of arguments
<b>  LPTSTR</b><i> *lpszArgv</i>  //  array of argument string pointers
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwArgc</i></dt>
<dd>
Specifies the number of arguments in the <i>lpszArgv</i> array. </dd>
<dt>
<i>lpszArgv</i></dt>
<dd>
Pointer to an array of pointers that point to null-terminated argument strings. The first argument in the array is the name of the service, and subsequent arguments are any strings passed to the service by the process that called the <a href="services_8ox1.htm"><b>StartService</b></a> function to start the service. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function does not return a value. </p>
<h4>Remarks</h4>
<p>
A service program can start one or more services. A service process has a <a href="services_9xpu.htm"><b>SERVICE_TABLE_ENTRY</b></a> structure for each service that it can start. The structure specifies the service name and a pointer to the <b>ServiceMain</b> function for that service. </p>
<p>
When the service control manager receives a request to start a service, it starts the service process (if it is not already running). The main thread of the service process calls the <a href="services_69wy.htm"><b>StartServiceCtrlDispatcher</b></a> function with a pointer to an array of <b>SERVICE_TABLE_ENTRY</b> structures. Then the service control manager sends a start request to the service control dispatcher for this service process. The service control dispatcher creates a new thread to execute the <b>ServiceMain</b> function of the service being started. </p>
<p>
The <b>ServiceMain</b> function should immediately call the <a href="services_7t0y.htm"><b>RegisterServiceCtrlHandler</b></a> function to specify a <a href="services_18oi.htm"><b>Handler</b></a> function to handle control requests. Next, it should call the <a href="services_90oj.htm"><b>SetServiceStatus</b></a> function to send status information to the service control manager. After these calls, the function completes the initialization tasks of the service, and waits for the service to terminate. </p>
<p>
A <b>ServiceMain</b> function does not return until its services are ready to terminate. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winsvc.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>User-defined.</p>
<h4>See Also</h4>
<p>
<a href="services_0p0z.htm">Services Overview</a>, <a href="services_2uwj.htm">Service Functions</a>, <a href="services_18oi.htm"><b>Handler</b></a>, <a href="services_7t0y.htm"><b>RegisterServiceCtrlHandler</b></a>, <a href="services_90oj.htm"><b>SetServiceStatus</b></a>, <a href="services_9xpu.htm"><b>SERVICE_TABLE_ENTRY</b></a>, <a href="services_69wy.htm"><b>StartServiceCtrlDispatcher</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
