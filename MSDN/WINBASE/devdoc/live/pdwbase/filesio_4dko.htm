<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>UnlockFileEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_unlockfileex"></a>UnlockFileEx</h1>
<p>
The <b>UnlockFileEx</b> function unlocks a previously locked byte range in an open file. </p>
<pre><code><b>BOOL UnlockFileEx(
  HANDLE</b><i> hFile</i><b>,      </b>// handle of file to unlock
<b>  DWORD</b><i> dwReserved</i><b>,  </b>// reserved, must be set to zero
<b>  DWORD</b><i> nNumberOfBytesToUnlockLow</i><b>,</b>
<b>                     </b>// low order 32-bits of length to unlock
<b>  DWORD</b><i> nNumberOfBytesToUnlockHigh</i><b>,</b>
<b>                     </b>// high order 32-bits of length to unlock
<b>  LPOVERLAPPED</b><i> lpOverlapped</i> 
                     // addr. of struct. with unlock region start 
                     // offset
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFile</i></dt>
<dd>
Handle to a file that is to have an existing locked region unlocked. The handle must have been created with either GENERIC_READ or GENERIC_WRITE access to the file. </dd>
<dt>
<i>dwReserved</i></dt>
<dd>
Reserved parameter; must be zero. </dd>
<dt>
<i>nNumberOfBytesToUnlockLow</i></dt>
<dd>
Specifies the low-order 32-bits of the length of the byte range to unlock. </dd>
<dt>
<i>nNumberOfBytesToUnlockHigh</i></dt>
<dd>
Specifies the high-order 32-bits of the length of the byte range to unlock. </dd>
<dt>
<i>lpOverlapped</i></dt>
<dd>
Pointer to an <a href="synchro_8tf6.htm"><b>OVERLAPPED</b></a> structure that the function uses with the unlocking request. This structure contains the file offset of the beginning of the unlock range. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero or NULL. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
Unlocking a region of a file releases a previously acquired lock on a file. The region to unlock must correspond exactly to an existing locked region. Two adjacent regions of a file can not be locked separately and then unlocked using a single region that spans both locked regions. </p>
<p>
If a process terminates with a portion of a file locked or closes a file that has outstanding locks, the behavior is not specified. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="filesio_2xm7.htm">File I/O Overview</a>, <a href="filesio_3n5f.htm">File Functions</a>, <a href="filesio_7wmd.htm"><b>CreateFile</b></a>, <a href="filesio_63xh.htm"><b>LockFile</b></a>, <a href="filesio_39h4.htm"><b>LockFileEx</b></a>, <a href="synchro_8tf6.htm"><b>OVERLAPPED</b></a>, <a href="filesio_1jl1.htm"><b>UnlockFile</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
