<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TerminateProcess</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_terminateprocess"></a>TerminateProcess</h1>
<p>
The <b>TerminateProcess</b> function terminates the specified process and all of its threads. </p>
<pre><code><b>BOOL TerminateProcess(
  HANDLE</b><i> hProcess</i><b>, </b>// handle to the process
<b>  UINT</b><i> uExitCode</i>   // exit code for the process
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hProcess</i></dt>
<dd>
Handle to the process to terminate. 
<p>
<b>Windows NT:</b> The handle must have PROCESS_TERMINATE access.   
</dd>
<dt>
<i>uExitCode</i></dt>
<dd>
Specifies the exit code for the process and for all threads terminated as a result of this call. Use the <a href="prothred_4k6r.htm"><b>GetExitCodeProcess</b></a> function to retrieve the process's exit value. Use the <a href="prothred_9350.htm"><b>GetExitCodeThread</b></a> function to retrieve a thread's exit value. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The <b>TerminateProcess</b> function is used to unconditionally cause a process to exit. Use it only in extreme circumstances. The state of global data maintained by dynamic-link libraries (DLLs) may be compromised if <b>TerminateProcess</b> is used rather than <a href="prothred_8dv7.htm"><b>ExitProcess</b></a>. </p>
<p>
<b>TerminateProcess</b> causes all threads within a process to terminate, and causes a process to exit, but DLLs attached to the process are not notified that the process is terminating. </p>
<p>
Terminating a process causes the following: 
<ol>
<li>
All of the object handles opened by the process are closed. </li>
<li>
All of the threads in the process terminate their execution. </li>
<li>
The state of the process object becomes signaled, satisfying any threads that had been waiting for the process to terminate. </li>
<li>
The states of all threads of the process become signaled, satisfying any threads that had been waiting for the threads to terminate. </li>
<li>
The termination status of the process changes from STILL_ACTIVE to the exit value of the process. </li>
</ol>
<p>
Terminating a process does not cause child processes to be terminated. </p>
<p>
Terminating a process does not necessarily remove the process object from the system. A process object is deleted when the last handle to the process is closed. </p>
<p>
<b>Windows CE:</b> Windows CE does not support exit codes for processes, so the <i>uExitCode</i> parameter is ignored.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="prothred_86sz.htm">Processes and Threads Overview</a>, <a href="prothred_3mgj.htm">Process and Thread Functions</a>, <a href="prothred_8dv7.htm"><b>ExitProcess</b></a>, <a href="prothred_478z.htm"><b>OpenProcess</b></a>, <a href="prothred_4k6r.htm"><b>GetExitCodeProcess</b></a>, <a href="prothred_9350.htm"><b>GetExitCodeThread</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
