<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetNamedPipeHandleState</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setnamedpipehandlestate"></a>SetNamedPipeHandleState</h1>
<p>
The <b>SetNamedPipeHandleState</b> function sets the read mode and the blocking mode of the specified named pipe. If the specified handle is to the client end of a named pipe and if the named pipe server process is on a remote computer, the function can also be used to control local buffering. </p>
<pre><code><b>BOOL SetNamedPipeHandleState(
  HANDLE</b><i> hNamedPipe</i><b>,             </b>// handle to named pipe
<b>  LPDWORD</b><i> lpMode</i><b>,                </b>// pointer to new pipe mode
<b>  LPDWORD</b><i> lpMaxCollectionCount</i><b>,  </b>// pointer to maximum collection count
<b>  LPDWORD</b><i> lpCollectDataTimeout</i>   // pointer to time-out value
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hNamedPipe</i></dt>
<dd>
Handle to the named pipe instance. This parameter can be a handle to the server end of the pipe, as returned by the <a href="pipes_4w6d.htm"><b>CreateNamedPipe</b></a> function, or to the client end of the pipe, as returned by the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function. The handle must have GENERIC_WRITE access to the named pipe. 
<p>
<b>Windows NT:</b> This parameter can also be a handle to an anonymous pipe, as returned by the <a href="pipes_43j9.htm"><b>CreatePipe</b></a> function. 
</dd>
<dt>
<i>lpMode</i></dt>
<dd>
Pointer to a 32-bit variable that supplies the new mode. The mode is a combination of a read-mode flag and a wait-mode flag. This parameter can be NULL if the mode is not being set. One of the following read modes can be specified: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=51%>Mode</th>
<th align=left width=49%>Description</th>
</tr>
<tr valign=top>
<td width=51%>PIPE_READMODE_BYTE</td>
<td width=49%>Data is read from the pipe as a stream of bytes. This mode is the default if no read-mode flag is specified.</td>
</tr>
<tr valign=top>
<td width=51%>PIPE_READMODE_MESSAGE</td>
<td width=49%>Data is read from the pipe as a stream of messages. The function fails if this flag is specified for a byte-type pipe.</td>
</tr>
</table><br>


<p>
One of the following wait modes can be specified: 

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=36%>Mode</th>
<th align=left width=64%>Description</th>
</tr>
<tr valign=top>
<td width=36%>PIPE_WAIT</td>
<td width=64%>Blocking mode is enabled. This mode is the default if no wait-mode flag is specified. When a blocking mode pipe handle is specified in the <a href="filesio_39id.htm"><b>ReadFile</b></a>, <a href="filesio_3kkl.htm"><b>WriteFile</b></a>, or <a href="pipes_3885.htm"><b>ConnectNamedPipe</b></a> function, operations are not finished until there is data to read, all data is written, or a client is connected. Use of this mode can mean waiting indefinitely in some situations for a client process to perform an action.</td>
</tr>
<tr valign=top>
<td width=36%>PIPE_NOWAIT</td>
<td width=64%>Nonblocking mode is enabled. In this mode, <b>ReadFile</b>, <b>WriteFile</b>, and <b>ConnectNamedPipe</b> always return immediately. Note that nonblocking mode is supported for compatibility with Microsoft® LAN Manager version 2.0 and should not be used to achieve asynchronous input and output (I/O) with named pipes.</td>
</tr>
</table><br>

</dd>
<dt>
<i>lpMaxCollectionCount</i></dt>
<dd>
Pointer to a 32-bit variable that specifies the maximum number of bytes collected on the client computer before transmission to the server. This parameter must be NULL if the specified pipe handle is to the server end of a named pipe or if client and server processes are on the same machine. This parameter is ignored if the client process specifies the FILE_FLAG_WRITE_THROUGH flag in the <b>CreateFile</b> function when the handle was created. This parameter can be NULL if the collection count is not being set. </dd>
<dt>
<i>lpCollectDataTimeout</i></dt>
<dd>
Pointer to a 32-bit variable that specifies the maximum time, in milliseconds, that can pass before a remote named pipe transfers information over the network. This parameter must be NULL if the specified pipe handle is to the server end of a named pipe or if client and server processes are on the same computer. This parameter is ignored if the client process specified the FILE_FLAG_WRITE_THROUGH flag in the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function when the handle was created. This parameter can be NULL if the collection count is not being set. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="pipes_2vqr.htm">Pipes Overview</a>, <a href="pipes_0tmb.htm">Pipe Functions</a>, <a href="pipes_3885.htm"><b>ConnectNamedPipe</b></a>, <a href="filesio_7wmd.htm"><b>CreateFile</b></a>, <a href="pipes_4w6d.htm"><b>CreateNamedPipe</b></a>, <a href="pipes_695x.htm"><b>GetNamedPipeHandleState</b></a>, <a href="filesio_39id.htm"><b>ReadFile</b></a>, <a href="filesio_3kkl.htm"><b>WriteFile</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
