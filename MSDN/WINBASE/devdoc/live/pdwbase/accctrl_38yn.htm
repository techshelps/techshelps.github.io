<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Security Identifiers (SIDs)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_security_identifiers_sids_"></a>Security Identifiers (SIDs)</h2>
<p>
A security identifier (SID) is a unique value of variable length used to identify a <a href="accctrl_5j8z.htm">trustee</a>. Each account has a unique SID issued by an authority, such as a Windows NT server domain, and stored in a security database. Each time a user logs on, the system retrieves the user's SID from the database and places it in the user's access token. The system uses the SID in the user's access token to identify the user in all subsequent interactions with Windows NT security. When a SID has been used as the unique identifier for a user or group, it cannot ever be used again to identify another user or group. </p>
<p>
Windows NT security uses SIDs in the following security elements: 
<ul>
<li>
In <a href="accctrl_3fub.htm">security descriptors</a> to identify an object's owner and primary group </li>
<li>
In <a href="accctrl_0vfj.htm">access-control entries (ACEs)</a>, to identify the trustee for whom access is allowed, denied, or audited</li>
<li>
In <a href="accctrl_4b8z.htm">access tokens</a>, to identify the user and the groups to which the user belongs </li>
</ul>
<p>
In addition to the uniquely-created, domain-specific SIDs assigned to specific users and groups, there are <a href="accctrl_416b.htm">well-known SIDs</a> that identify generic groups and generic users. For example, there is a well-known SID used to identify Everyone or World, which is a group that includes all users. </p>
<p>
Most applications never need to work with SIDs. For example, in Windows NT versions 4.0 and later, the security functions for getting and setting the ACEs in an ACL allow you to use names rather than SIDs to identify users and groups. However, when you are working with <a href="accctrl_416b.htm">well-known SIDs</a>, you should use the Win32 functions to build the SID from predefined constants rather than using the name of the well-known SID. This is because the names of well-known SIDs can vary. For example, the U.S. English version of Windows NT has a well-known SID named "BUILTIN\Administrators" that might have a different name on international versions of Windows NT. For sample code that builds a well-known SID, see <a href="accctrl_138u.htm">Searching for a SID in an Access Token</a>.</p>
<p>
If you do need to work with SIDs, do not manipulate them directly. Instead, use the following Win32 functions. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=37%>Function</th>
<th align=left width=63%>Description</th>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_5544.htm"><b>AllocateAndInitializeSid</b></a><b> </b></td>
<td width=63%>Allocates and initializes a SID with the specified number of subauthorities.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_0uck.htm"><b>CopySid</b></a><b> </b></td>
<td width=63%>Copies a source SID to a buffer.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_6ysk.htm"><b>EqualPrefixSid</b></a><b> </b></td>
<td width=63%>Tests two SID prefix values for equality. A SID prefix is the entire SID except for the last subauthority value.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_9g9w.htm"><b>EqualSid</b></a><b> </b></td>
<td width=63%>Tests two SIDs for equality. They must match exactly to be considered equal.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_5m04.htm"><b>FreeSid</b></a><b> </b></td>
<td width=63%>Frees a SID previously allocated by using the <a href="accctrl_5544.htm"><b>AllocateAndInitializeSid</b></a> function.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_5u78.htm"><b>GetLengthSid</b></a><b> </b></td>
<td width=63%>Retrieves the length of a SID.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_5ojd.htm"><b>GetSidIdentifierAuthority</b></a><b> </b></td>
<td width=63%>Retrieves a pointer to a SID's identifier authority.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_97l0.htm"><b>GetSidLengthRequired</b></a><b> </b></td>
<td width=63%>Retrieves the size of the buffer required to store a SID with a specified number of subauthorities.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_5mrd.htm"><b>GetSidSubAuthority</b></a><b> </b></td>
<td width=63%>Retrieves a pointer to a specified subauthority in a SID.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_6ir8.htm"><b>GetSidSubAuthorityCount</b></a><b> </b></td>
<td width=63%>Retrieves the number of subauthorities in a SID.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_8aec.htm"><b>InitializeSid</b></a><b> </b></td>
<td width=63%>Initializes a <a href="accctrl_5lyq.htm"><b>SID</b></a> structure.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_3qqs.htm"><b>IsValidSid</b></a><b> </b></td>
<td width=63%>Tests the validity of a SID by verifying that the revision number is within a known range and that the number of subauthorities is less than the maximum.</td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_9v39.htm"><b>LookupAccountName</b></a><b> </b></td>
<td width=63%>Retrieves the SID corresponding to a specified account name. </td>
</tr>
<tr valign=top>
<td width=37%><a href="accctrl_9z8k.htm"><b>LookupAccountSid</b></a><b> </b></td>
<td width=63%>Retrieves the account name corresponding to a specified SID.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
