<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>wvsprintf</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wvsprintf"></a>wvsprintf</h1>
<p>
The <b>wvsprintf</b> function formats and stores a series of characters and values in a buffer. The items pointed to by the argument list are converted and copied to an output buffer according to the corresponding format specification in the format-control string. The function appends a terminating null character to the characters it writes, but the return value does not include the terminating null character in its character count. </p>
<pre><code><b>int wvsprintf(
  LPTSTR</b><i> lpOutput</i><b>,  </b>// pointer to buffer for output
<b>  LPCTSTR</b><i> lpFormat</i><b>, </b>// pointer to format-control string
<b>  va_list</b><i> arglist</i>   // variable list of format-control arguments
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpOutput</i></dt>
<dd>
Pointer to a buffer to receive the formatted output. </dd>
<dt>
<i>lpFormat</i></dt>
<dd>
Pointer to a null-terminated string that contains the format-control specifications. In addition to ordinary ASCII characters, a format specification for each argument appears in this string. For more information about the format specification, see <a href="strings_2bc6.htm"><b>wsprintf</b></a>. </dd>
<dt>
<i>arglist</i></dt>
<dd>
A variable argument list; each element of the list specifies an argument for the format-control string. The number, type, and interpretation of the arguments depend on the corresponding format-control specifications in the <i>lpFmt</i> parameter. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the number of characters stored in the buffer, not counting the terminating null character. </p>
<p>
If the function fails, the return value is less than the length of the format-control string. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The function copies the format-control string into the output buffer character by character, starting with the first character in the string. When it encounters a format specification in the string, the function retrieves the value of the next available argument (starting with the first argument in the list), converts that value into the specified format, and copies the result to the output buffer. The function continues to copy characters and expand format specifications in this way until it reaches the end of the format-control string. If there are more arguments than format specifications, the extra arguments are ignored. If there are not enough arguments for all of the format specifications, the results are undefined.</p>
<p>
<b>Windows CE:</b> Windows CE supports only the Unicode version of <b>wvsprintf</b>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="strings_70ry.htm">String Manipulation Overview</a>, <a href="strings_97n7.htm">String Manipulation Functions</a>, <a href="strings_2bc6.htm"><b>wsprintf</b></a> </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
