<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declaring the DLL Function</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_declaring_the_dll_function_pt"></a>Declaring the DLL Function</h2>
<p>
You can declare the functions to be called through generic thunks (target functions) with either the standard-call calling convention (Intel only) or the C calling convention. It is important to call the target function using the correct convention. </p>
<p>
The following example shows how to define the target function, <code>MyPrint</code>, in DLL32 as a standard-call function, using the WINAPI modifier:</p>
<pre><code>void WINAPI MyPrint( LPTSTR lpString, HANDLE hWnd )
{
    ...
}
 </code></pre>
<p>
If you are isolating your thunking code into a DLL, create a <code>DLL16</code> file and define <code>MyPrint</code> in <code>DLL16</code> as well. Then when you call <code>MyPrint</code> from <code>APP16</code>, you will be calling the version in <code>DLL16</code> and the version in <code>DLL16</code> will perform the thunk to <code>DLL32</code>. </p>
<p>&nbsp;</p></body>
</HTML>
