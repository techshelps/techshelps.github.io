<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WaitForInputIdle</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_waitforinputidle"></a>WaitForInputIdle</h1>
<p>
The <b>WaitForInputIdle</b> function waits until the given process is waiting for user input with no input pending, or until the time-out interval has elapsed. </p>
<p>
The <b>WaitForInputIdle</b> function only works with GUI applications. If a console application calls the function, it returns immediately, with no wait. </p>
<pre><code><b>DWORD WaitForInputIdle(
  HANDLE</b><i> hProcess</i><b>,       </b>// handle to process
<b>  DWORD</b><i> dwMilliseconds</i>   // time-out interval in milliseconds
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hProcess</i></dt>
<dd>
Handle to the process. </dd>
<dt>
<i>dwMilliseconds</i></dt>
<dd>
Specifies the time-out interval, in milliseconds. If <i>dwMilliseconds</i> is INFINITE, the function does not return until the process is idle. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
The following table shows the possible return values: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=26%>Value</th>
<th align=left width=74%>Meaning</th>
</tr>
<tr valign=top>
<td width=26%>0</td>
<td width=74%>The wait was satisfied successfully.</td>
</tr>
<tr valign=top>
<td width=26%>WAIT_TIMEOUT</td>
<td width=74%>The wait was terminated because the time-out interval elapsed.</td>
</tr>
<tr valign=top>
<td width=26%>0xFFFFFFFF</td>
<td width=74%>An error occurred. To get extended error information, use the <a href="errors_3uwi.htm"><b>GetLastError</b></a> function.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <b>WaitForInputIdle</b> function enables a thread to suspend its execution until a specified process has finished its initialization and is waiting for user input with no input pending. This can be useful for synchronizing a parent process and a newly created child process. When a parent process creates a child process, the <b>CreateProcess</b> function returns without waiting for the child process to finish its initialization. Before trying to communicate with the child process, the parent process can use <b>WaitForInputIdle</b> to determine when the child's initialization has been completed. For example, the parent process should use <b>WaitForInputIdle</b> before trying to find a window associated with the child process. </p>
<p>
The <b>WaitForInputIdle</b> function can be used at any time, not just during application startup. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="prothred_86sz.htm">Processes and Threads Overview</a>, <a href="prothred_3mgj.htm">Process and Thread Functions</a>, <a href="prothred_9dpv.htm"><b>CreateProcess</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
