<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IsTextUnicode</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_istextunicode"></a>IsTextUnicode</h1>
<p>
The <b>IsTextUnicode</b> function determines whether a buffer probably contains a form of Unicode text. The function uses various statistical and deterministic methods to make its determination, under the control of flags passed via <i>lpi</i>. When the function returns, the results of such tests are reported via <i>lpi</i>. If all specified tests are passed, the function returns a nonzero value; otherwise, it returns zero.</p>
<pre><code><b>DWORD IsTextUnicode(
  CONST LPVOID</b><i> lpBuffer</i><b>, </b>// pointer to an input buffer to be examined
<b>  int</b><i> cb</i><b>,                </b>// the size of the input buffer
<b>  LPINT</b><i> lpi</i>              // flags that condition examination and receive results
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpBuffer</i></dt>
<dd>
Pointer to the input buffer to be examined.</dd>
<dt>
<i>cb</i></dt>
<dd>
Specifies the size, in bytes, of the input buffer pointed to by <i>lpBuffer</i>.</dd>
<dt>
<i>lpi</i></dt>
<dd>
Pointer to an<i> </i><b>int</b> variable that, upon entry to the function, contains a set of flags that specify the tests to be applied to the input buffer text. Upon exit from the function, that same variable contains a set of bit flags indicating the results of the specified tests: 1 if the contents of the buffer pass a test, 0 for failure. Only flags that are set upon entry to the function are significant upon exit.
<p>
If <i>lpi</i> is NULL, the function uses all available tests to determine whether the data in the buffer is probably Unicode text.

<p>
Here are the constants used with <i>*lpi</i>'s bit flags:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=62%>Value</th>
<th align=left width=38%>Meaning</th>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_ASCII16</td>
<td width=38%>The text is Unicode, and contains nothing but zero-extended ASCII values/characters.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_REVERSE_ASCII16</td>
<td width=38%>Same as the preceding, except that the Unicode text is byte-reversed.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_STATISTICS</td>
<td width=38%>The text is probably Unicode, with the determination made by applying statistical analysis. Absolute certainty is not guaranteed. See the note in the following Remarks section. </td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_REVERSE_STATISTICS</td>
<td width=38%>Same as the preceding, except that the probably-Unicode text is byte-reversed.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_CONTROLS</td>
<td width=38%>The text contains Unicode representations of one or more of these non-printing characters: RETURN, LINEFEED, SPACE, CJK_SPACE, TAB.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_REVERSE_CONTROLS</td>
<td width=38%>Same as the preceding, except that the Unicode characters are byte-reversed.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_BUFFER_TOO_SMALL</td>
<td width=38%>There are too few characters in the buffer for meaningful analysis (fewer than two bytes).</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_SIGNATURE</td>
<td width=38%>The text contains the Unicode byte-order mark (BOM) 0xFEFF as its first character.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_REVERSE_SIGNATURE</td>
<td width=38%>The text contains the Unicode byte-reversed byte-order mark (Reverse BOM) 0xFFFE as its first character.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_ILLEGAL_CHARS</td>
<td width=38%>The text contains one of these Unicode-illegal characters: embedded Reverse BOM, UNICODE_NUL, CRLF (packed into one <b>WORD</b>), or 0xFFFF.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_ODD_LENGTH</td>
<td width=38%>The number of characters in the string is odd. A string of odd length cannot (by definition) be Unicode text.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_NULL_BYTES</td>
<td width=38%>The text contains null bytes, which indicate non-ASCII text.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_UNICODE_MASK</td>
<td width=38%>This flag constant is a combination of IS_TEXT_UNICODE_ASCII16, IS_TEXT_UNICODE_STATISTICS, IS_TEXT_UNICODE_CONTROLS, IS_TEXT_UNICODE_SIGNATURE. </td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_REVERSE_MASK</td>
<td width=38%>This flag constant is a combination of IS_TEXT_UNICODE_REVERSE_ASCII16, IS_TEXT_UNICODE_REVERSE_STATISTICS, IS_TEXT_UNICODE_REVERSE_CONTROLS, IS_TEXT_UNICODE_REVERSE_SIGNATURE.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_NOT_UNICODE_MASK</td>
<td width=38%>This flag constant is a combination of IS_TEXT_UNICODE_ILLEGAL_CHARS, IS_TEXT_UNICODE_ODD_LENGTH, and two currently unused bit flags.</td>
</tr>
<tr valign=top>
<td width=62%>IS_TEXT_UNICODE_NOT_ASCII_MASK</td>
<td width=38%>This flag constant is a combination of IS_TEXT_UNICODE_NULL_BYTES and three currently unused bit flags.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
The function returns nonzero if the data in the buffer passes the specified tests.</p>
<p>
The function returns zero if the data in the buffer does not pass the specified tests.</p>
<p>
In either case, the <b>int</b> variable pointed to by <i>lpi</i> contains the results of the specific tests the function applied to make its determination.</p>
<h4>Remarks</h4>
<p>
As noted in the preceding table of flag constants, the IS_TEXT_UNICODE_STATISTICS and IS_TEXT_UNICODE_REVERSE_STATISTICS tests use statistical analysis. These tests are not foolproof. The statistical tests assume certain amounts of variation between low and high bytes in a string, and some ASCII strings can slip through. For example, if <i>lpBuffer</i> points to the ASCII string 0x41, 0x0A, 0x0D, 0x1D (A\n\r^Z), the string passes the IS_TEXT_UNICODE_STATISTICS test, though failure would be preferable. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.5 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="unicode_6bqr.htm">Unicode and Character Sets Overview</a>, <a href="unicode_19mb.htm">Unicode and Character Set Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
