<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetTempFileName</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_gettempfilename"></a>GetTempFileName</h1>
<p>
The <b>GetTempFileName</b> function creates a name for a temporary file. The filename is the concatenation of specified path and prefix strings, a hexadecimal string formed from a specified integer, and the .TMP extension.</p>
<p>
The specified integer can be nonzero, in which case, the function creates the filename but does not create the file. If you specify zero for the integer, the function creates a unique filename and creates the file in the specified directory.</p>
<pre><code><b>UINT GetTempFileName(
  LPCTSTR</b><i> lpPathName</i><b>,  </b>// pointer to directory name for temporary 
                       // file
<b>  LPCTSTR</b><i> lpPrefixString</i><b>,  </b>// pointer to filename prefix
<b>  UINT</b><i> uUnique</i><b>,        </b>// number used to create temporary filename
<b>  LPTSTR</b><i> lpTempFileName</i> 
                       // pointer to buffer that receives the new 
                       // filename
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpPathName</i></dt>
<dd>
Pointer to a null-terminated string that specifies the directory path for the filename. This string must consist of characters in the ANSI character set. Applications typically specify a period (.) or the result of the <a href="filesio_78fc.htm"><b>GetTempPath</b></a> function for this parameter. If this parameter is NULL, the function fails. </dd>
<dt>
<i>lpPrefixString</i></dt>
<dd>
Pointer to a null-terminated prefix string. The function uses the first three characters of this string as the prefix of the filename. This string must consist of characters in the ANSI character set. </dd>
<dt>
<i>uUnique</i></dt>
<dd>
Specifies an unsigned integer that the function converts to a hexadecimal string for use in creating the temporary filename. 
<p>
If <i>uUnique</i> is nonzero, the function appends the hexadecimal string to <i>lpPrefixString</i> to form the temporary filename. In this case, the function does not create the specified file, and does not test whether the filename is unique.

<p>
If <i>uUnique</i> is zero, the function uses a hexadecimal string derived from the current system time. In this case, the function uses different values until it finds a unique filename, and then it creates the file in the <i>lpPathName</i> directory.
</dd>
<dt>
<i>lpTempFileName</i></dt>
<dd>
Pointer to the buffer that receives the temporary filename. This null-terminated string consists of characters in the ANSI character set. This buffer should be at least the length, in bytes, specified by MAX_PATH to accommodate the path. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value specifies the unique numeric value used in the temporary filename. If the <i>uUnique</i> parameter is nonzero, the return value specifies that same number. </p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The <b>GetTempFileName</b> function creates a temporary filename of the following form:</p>
<p class=indent1>
path\preuuuu.TMP</p>
<p>
The following table describes the filename syntax: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=20%>Component</th>
<th align=left width=80%>Meaning</th>
</tr>
<tr valign=top>
<td width=20%><i>path</i></td>
<td width=80%>Path specified by the <i>lpPathName</i> parameter</td>
</tr>
<tr valign=top>
<td width=20%><i>pre</i></td>
<td width=80%>First three letters of the <i>lpPrefixString</i> string</td>
</tr>
<tr valign=top>
<td width=20%><i>uuuu</i></td>
<td width=80%>Hexadecimal value of <i>uUnique</i></td>
</tr>
</table><br>
<p>
When the system shuts down, temporary files whose names have been created by this function are not automatically deleted. </p>
<p>
To avoid problems resulting when converting an ANSI string, an application should call the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function to create a temporary file. </p>
<p>
If the <i>uUnique</i> parameter is zero, <b>GetTempFileName</b> attempts to form a unique number based on the current system time. If a file with the resulting filename exists, the number is increased by one and the test for existence is repeated. Testing continues until a unique filename is found. <b>GetTempFileName</b> then creates a file by that name and closes it. When <i>uUnique</i> is nonzero, no attempt is made to create and open the file. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="filesio_2xm7.htm">File I/O Overview</a>, <a href="filesio_3n5f.htm">File Functions</a>, <a href="filesio_7wmd.htm"><b>CreateFile</b></a>, <a href="filesio_78fc.htm"><b>GetTempPath</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
