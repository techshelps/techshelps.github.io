<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DCB</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_dcb_str"></a>DCB</h1>
<p>
The <b>DCB</b> structure defines the control setting for a serial communications device. </p>
<pre><code>typedef struct _DCB { // dcb 
    DWORD DCBlength;           // sizeof(DCB) 
    DWORD BaudRate;            // current baud rate 
    DWORD fBinary: 1;          // binary mode, no EOF check 
    DWORD fParity: 1;          // enable parity checking 
    DWORD fOutxCtsFlow:1;      // CTS output flow control 
    DWORD fOutxDsrFlow:1;      // DSR output flow control 
    DWORD fDtrControl:2;       // DTR flow control type 
    DWORD fDsrSensitivity:1;   // DSR sensitivity 
    DWORD fTXContinueOnXoff:1; // XOFF continues Tx 
    DWORD fOutX: 1;            // XON/XOFF out flow control 
    DWORD fInX: 1;             // XON/XOFF in flow control 
    DWORD fErrorChar: 1;       // enable error replacement 
    DWORD fNull: 1;            // enable null stripping 
    DWORD fRtsControl:2;       // RTS flow control 
    DWORD fAbortOnError:1;     // abort reads/writes on error 
    DWORD fDummy2:17;          // reserved 
    WORD wReserved;            // not currently used 
    WORD XonLim;               // transmit XON threshold 
    WORD XoffLim;              // transmit XOFF threshold 
    BYTE ByteSize;             // number of bits/byte, 4-8 
    BYTE Parity;               // 0-4=no,odd,even,mark,space 
    BYTE StopBits;             // 0,1,2 = 1, 1.5, 2 
    char XonChar;              // Tx and Rx XON character 
    char XoffChar;             // Tx and Rx XOFF character 
    char ErrorChar;            // error replacement character 
    char EofChar;              // end of input character 
    char EvtChar;              // received event character 
    WORD wReserved1;           // reserved; do not use 
} DCB; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>DCBlength</b></dt>
<dd>
Specifies the length, in bytes, of the <b>DCB</b> structure. </dd>
<dt>
<b>BaudRate</b></dt>
<dd>
Specifies the baud rate at which the communications device operates. This member can be an actual baud rate value, or one of the following baud rate indexes:
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=29%>CBR_110 </td>
<td width=71%>CBR_19200</td>
</tr>
<tr valign=top>
<td width=29%>CBR_300 </td>
<td width=71%>CBR_38400</td>
</tr>
<tr valign=top>
<td width=29%>CBR_600 </td>
<td width=71%>CBR_56000</td>
</tr>
<tr valign=top>
<td width=29%>CBR_1200</td>
<td width=71%>CBR_57600</td>
</tr>
<tr valign=top>
<td width=29%>CBR_2400</td>
<td width=71%>CBR_115200</td>
</tr>
<tr valign=top>
<td width=29%>CBR_4800</td>
<td width=71%>CBR_128000</td>
</tr>
<tr valign=top>
<td width=29%>CBR_9600</td>
<td width=71%>CBR_256000</td>
</tr>
<tr valign=top>
<td width=29%>CBR_14400</td>
<td width=71%></td>
</tr>
</table><br>

</dd>
<dt>
<b>fBinary</b></dt>
<dd>
Specifies whether binary mode is enabled. The Win32 API does not support nonbinary mode transfers, so this member must be TRUE. Using FALSE will not work. </dd>
<dt>
<b>fParity</b></dt>
<dd>
Specifies whether parity checking is enabled. If this member is TRUE, parity checking is performed and errors are reported. </dd>
<dt>
<b>fOutxCtsFlow</b></dt>
<dd>
Specifies whether the CTS (clear-to-send) signal is monitored for output flow control. If this member is TRUE and CTS is turned off, output is suspended until CTS is sent again. </dd>
<dt>
<b>fOutxDsrFlow</b></dt>
<dd>
Specifies whether the DSR (data-set-ready) signal is monitored for output flow control. If this member is TRUE and DSR is turned off, output is suspended until DSR is sent again. </dd>
<dt>
<b>fDtrControl</b></dt>
<dd>
Specifies the DTR (data-terminal-ready) flow control. This member can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Value</th>
<th align=left width=51%>Meaning</th>
</tr>
<tr valign=top>
<td width=49%>DTR_CONTROL_DISABLE</td>
<td width=51%>Disables the DTR line when the device is opened and leaves it disabled.</td>
</tr>
<tr valign=top>
<td width=49%>DTR_CONTROL_ENABLE</td>
<td width=51%>Enables the DTR line when the device is opened and leaves it on.</td>
</tr>
<tr valign=top>
<td width=49%>DTR_CONTROL_HANDSHAKE</td>
<td width=51%>Enables DTR handshaking. If handshaking is enabled, it is an error for the application to adjust the line by using the <a href="commun_9tta.htm"><b>EscapeCommFunction</b></a> function.</td>
</tr>
</table><br>

</dd>
<dt>
<b>fDsrSensitivity</b></dt>
<dd>
Specifies whether the communications driver is sensitive to the state of the DSR signal. If this member is TRUE, the driver ignores any bytes received, unless the DSR modem input line is high. </dd>
<dt>
<b>fTXContinueOnXoff</b></dt>
<dd>
Specifies whether transmission stops when the input buffer is full and the driver has transmitted the <b>XoffChar</b> character. If this member is TRUE, transmission continues after the input buffer has come within <b>XoffLim</b> bytes of being full and the driver has transmitted the <b>XoffChar</b> character to stop receiving bytes. If this member is FALSE, transmission does not continue until the input buffer is within <b>XonLim</b> bytes of being empty and the driver has transmitted the <b>XonChar</b> character to resume reception. </dd>
<dt>
<b>fOutX</b></dt>
<dd>
Specifies whether XON/XOFF flow control is used during transmission. If this member is TRUE, transmission stops when the <b>XoffChar</b> character is received and starts again when the <b>XonChar</b> character is received. </dd>
<dt>
<b>fInX</b></dt>
<dd>
Specifies whether XON/XOFF flow control is used during reception. If this member is TRUE, the <b>XoffChar</b> character is sent when the input buffer comes within <b>XoffLim</b> bytes of being full, and the <b>XonChar</b> character is sent when the input buffer comes within <b>XonLim</b> bytes of being empty. </dd>
<dt>
<b>fErrorChar</b></dt>
<dd>
Specifies whether bytes received with parity errors are replaced with the character specified by the <b>ErrorChar</b> member. If this member is TRUE and the <b>fParity</b> member is TRUE, replacement occurs. </dd>
<dt>
<b>fNull</b></dt>
<dd>
Specifies whether null bytes are discarded. If this member is TRUE, null bytes are discarded when received. </dd>
<dt>
<b>fRtsControl</b></dt>
<dd>
Specifies the RTS (request-to-send) flow control. If this value is zero, the default is RTS_CONTROL_HANDSHAKE. This member can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=46%>Value</th>
<th align=left width=54%>Meaning</th>
</tr>
<tr valign=top>
<td width=46%>RTS_CONTROL_DISABLE</td>
<td width=54%>Disables the RTS line when the device is opened and leaves it disabled.</td>
</tr>
<tr valign=top>
<td width=46%>RTS_CONTROL_ENABLE</td>
<td width=54%>Enables the RTS line when the device is opened and leaves it on.</td>
</tr>
<tr valign=top>
<td width=46%>RTS_CONTROL_HANDSHAKE</td>
<td width=54%>Enables RTS handshaking. The driver raises the RTS line when the "type-ahead" (input) buffer is less than one-half full and lowers the RTS line when the buffer is more than three-quarters full. If handshaking is enabled, it is an error for the application to adjust the line by using the <b>EscapeCommFunction</b> function.</td>
</tr>
<tr valign=top>
<td width=46%>RTS_CONTROL_TOGGLE</td>
<td width=54%>Specifies that the RTS line will be high if bytes are available for transmission. After all buffered bytes have been sent, the RTS line will be low.</td>
</tr>
</table><br>

</dd>
<dt>
<b>fAbortOnError</b></dt>
<dd>
Specifies whether read and write operations are terminated if an error occurs. If this member is TRUE, the driver terminates all read and write operations with an error status if an error occurs. The driver will not accept any further communications operations until the application has acknowledged the error by calling the <a href="commun_5e42.htm"><b>ClearCommError</b></a> function. </dd>
<dt>
<b>fDummy2</b></dt>
<dd>
Reserved; do not use. </dd>
<dt>
<b>wReserved</b></dt>
<dd>
Not used; must be set to zero. </dd>
<dt>
<b>XonLim</b></dt>
<dd>
Specifies the minimum number of bytes allowed in the input buffer before the XON character is sent. </dd>
<dt>
<b>XoffLim</b></dt>
<dd>
Specifies the maximum number of bytes allowed in the input buffer before the XOFF character is sent. The maximum number of bytes allowed is calculated by subtracting this value from the size, in bytes, of the input buffer. </dd>
<dt>
<b>ByteSize</b></dt>
<dd>
Specifies the number of bits in the bytes transmitted and received. </dd>
<dt>
<b>Parity</b></dt>
<dd>
Specifies the parity scheme to be used. This member can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=28%>Value</th>
<th align=left width=72%>Meaning</th>
</tr>
<tr valign=top>
<td width=28%>EVENPARITY</td>
<td width=72%>Even</td>
</tr>
<tr valign=top>
<td width=28%>MARKPARITY</td>
<td width=72%>Mark</td>
</tr>
<tr valign=top>
<td width=28%>NOPARITY</td>
<td width=72%>No parity</td>
</tr>
<tr valign=top>
<td width=28%>ODDPARITY</td>
<td width=72%>Odd</td>
</tr>
<tr valign=top>
<td width=28%>SPACEPARITY</td>
<td width=72%>Space</td>
</tr>
</table><br>

</dd>
<dt>
<b>StopBits</b></dt>
<dd>
Specifies the number of stop bits to be used. This member can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=29%>Value</th>
<th align=left width=71%>Meaning</th>
</tr>
<tr valign=top>
<td width=29%>ONESTOPBIT</td>
<td width=71%>1 stop bit</td>
</tr>
<tr valign=top>
<td width=29%>ONE5STOPBITS</td>
<td width=71%>1.5 stop bits</td>
</tr>
<tr valign=top>
<td width=29%>TWOSTOPBITS</td>
<td width=71%>2 stop bits</td>
</tr>
</table><br>

</dd>
<dt>
<b>XonChar</b></dt>
<dd>
Specifies the value of the XON character for both transmission and reception. </dd>
<dt>
<b>XoffChar</b></dt>
<dd>
Specifies the value of the XOFF character for both transmission and reception. </dd>
<dt>
<b>ErrorChar</b></dt>
<dd>
Specifies the value of the character used to replace bytes received with a parity error. </dd>
<dt>
<b>EofChar</b></dt>
<dd>
Specifies the value of the character used to signal the end of data. </dd>
<dt>
<b>EvtChar</b></dt>
<dd>
Specifies the value of the character used to signal an event. </dd>
<dt>
<b>wReserved1</b></dt>
<dd>
Reserved; do not use. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
When a <b>DCB</b> structure is used to configure the 8250, the following restrictions apply to the values specified for the <b>ByteSize</b> and <b>StopBits</b> members: 
<ul>
<li>
The number of data bits must be 5 to 8 bits. </li>
<li>
The use of 5 data bits with 2 stop bits is an invalid combination, as is 6, 7, or 8 data bits with 1.5 stop bits. </li>
</ul>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.</p>
<h4>See Also</h4>
<p>
<a href="commun_4m7n.htm">Communications Overview</a>, <a href="commun_0cab.htm">Communication Structures</a>, <a href="commun_3cf6.htm"><b>BuildCommDCB</b></a>, <a href="commun_5e42.htm"><b>ClearCommError</b></a>, <a href="commun_9tta.htm"><b>EscapeCommFunction</b></a>, <a href="commun_3pt1.htm"><b>GetCommState</b></a>, <a href="commun_43qd.htm"><b>SetCommState</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
