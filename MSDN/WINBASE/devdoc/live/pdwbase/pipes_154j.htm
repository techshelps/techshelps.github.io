<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Named Pipe Open Modes</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_named_pipe_open_modes"></a>Named Pipe Open Modes</h3>
<p>
The pipe server specifies the pipe access, overlap, and write-through modes in the <i>dwOpenMode</i> parameter of the <a href="pipes_4w6d.htm"><b>CreateNamedPipe</b></a> function. The pipe clients can specify these open modes for their pipe handles using the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function. </p>
<h4>Access Mode</h4>
<p>
Setting the pipe access mode is equivalent to specifying read or write access associated with the pipe server's handles. The following table shows the <b>CreateFile</b> equivalent for each access mode you can specify with <b>CreateNamedPipe</b>. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>CreateNamedPipe Access Mode</th>
<th align=left width=53%>CreateFile Equivalent</th>
</tr>
<tr valign=top>
<td width=47%>PIPE_ACCESS_INBOUND </td>
<td width=53%>GENERIC_READ (server only reads and client only writes) </td>
</tr>
<tr valign=top>
<td width=47%>PIPE_ACCESS_OUTBOUND </td>
<td width=53%>GENERIC_WRITE (server only writes and client only reads) </td>
</tr>
<tr valign=top>
<td width=47%>PIPE_ACCESS_DUPLEX </td>
<td width=53%>GENERIC_READ | GENERIC_WRITE (server and client both read and write) </td>
</tr>
</table><br>
<p>
Pipe clients using <a href="filesio_7wmd.htm"><b>CreateFile</b></a> to connect to a named pipe must specify an access mode in the <i>dwDesiredAccess</i> parameter that is compatible with the access mode specified by the pipe server. For example, a client must specify GENERIC_READ access for a pipe created with PIPE_ACCESS_OUTBOUND. The access modes must be the same for all instances of a pipe. </p>
<h4>Overlap Mode</h4>
<p>
In overlapped mode, functions performing lengthy read, write, and connect operations can return immediately. This enables the thread to perform other operations while a time-consuming operation is executing in the background. To specify overlapped mode, use the FILE_FLAG_OVERLAPPED flag. For more information, see <a href="pipes_3bn8.htm">Synchronous and Overlapped Input and Output</a>. </p>
<p>
The <b>CreateFile</b> function allows the pipe client to set overlapped mode (FILE_FLAG_OVERLAPPED) for its pipe handles using the <i>dwFlagsAndAttributes</i> parameter. </p>
<h4>Write-Through Mode</h4>
<p>
Specify write-through mode with FILE_FLAG_WRITE_THROUGH. This mode affects only write operations to byte-type pipes between pipe clients and pipe servers on different computers. In write-through mode, the functions that write to a named pipe do not return until the data is transmitted across the network and into the pipe's buffer on the remote computer. Write-through mode is useful for applications that require synchronization for every write operation. </p>
<p>
If write-through mode is not enabled, the system enhances the efficiency of network operations by buffering data until a minimum number of bytes have accumulated or until a maximum time period has elapsed. Buffering enables the system to combine multiple write operations into a single network transmission. This means that a write operation can be successfully completed after the system puts the data in the outbound buffer, but before the system transmits it across the network. </p>
<p>
The <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function allows the pipe client to set write-through mode (FILE_FLAG_WRITE_THROUGH) for its pipe handles using the <i>dwFlagsAndAttributes</i> parameter. The write-through mode of a pipe handle cannot be changed after the pipe handle has been created. The write-through mode can be different for server and client handles to the same pipe instance. </p>
<p>
A pipe client can use the <a href="pipes_81r9.htm"><b>SetNamedPipeHandleState</b></a> function to control the number of bytes and the time-out period before transmission for a pipe on which write-through mode is disabled. </p>
<p>&nbsp;</p></body>
</HTML>
