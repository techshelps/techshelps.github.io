<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MapViewOfFile</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_mapviewoffile"></a>MapViewOfFile</h1>
<p>
The <b>MapViewOfFile</b> function maps a view of a file into the address space of the calling process. </p>
<pre><code><b>LPVOID MapViewOfFile(
  HANDLE</b><i> hFileMappingObject</i><b>,  </b>// file-mapping object to map into 
                              // address space
<b>  DWORD</b><i> dwDesiredAccess</i><b>,      </b>// access mode
<b>  DWORD</b><i> dwFileOffsetHigh</i><b>,     </b>// high-order 32 bits of file offset
<b>  DWORD</b><i> dwFileOffsetLow</i><b>,      </b>// low-order 32 bits of file offset
<b>  DWORD</b><i> dwNumberOfBytesToMap</i>  // number of bytes to map
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFileMappingObject</i></dt>
<dd>
Handle to an open handle of a file-mapping object. The <a href="fmap3_79wn.htm"><b>CreateFileMapping</b></a> and <a href="fmap3_1h7r.htm"><b>OpenFileMapping</b></a> functions return this handle. </dd>
<dt>
<i>dwDesiredAccess</i></dt>
<dd>
Specifies the type of access to the file view and, therefore, the protection of the pages mapped by the file. This parameter can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Value</th>
<th align=left width=59%>Meaning</th>
</tr>
<tr valign=top>
<td width=41%>FILE_MAP_WRITE</td>
<td width=59%>Read-write access. The <i>hFileMappingObject</i> parameter must have been created with PAGE_READWRITE protection. A read-write view of the file is mapped.</td>
</tr>
<tr valign=top>
<td width=41%>FILE_MAP_READ</td>
<td width=59%>Read-only access. The <i>hFileMappingObject</i> parameter must have been created with PAGE_READWRITE or PAGE_READONLY protection. A read-only view of the file is mapped.</td>
</tr>
<tr valign=top>
<td width=41%>FILE_MAP_ALL_ACCESS</td>
<td width=59%>Same as FILE_MAP_WRITE.</td>
</tr>
<tr valign=top>
<td width=41%>FILE_MAP_COPY</td>
<td width=59%>Copy on write access. If you create the map with PAGE_WRITECOPY and the view with FILE_MAP_COPY, you will receive a view to file. If you write to it, the pages are automatically swappable and the modifications you make will not go to the original data file.<p>
<b>Windows 95:</b> You must pass PAGE_WRITECOPY to <a href="fmap3_79wn.htm"><b>CreateFileMapping</b></a>; otherwise, an error will be returned.</p>
<p>
If you share the mapping between multiple processes using <a href="handobj_2pyd.htm"><b>DuplicateHandle</b></a> or <a href="fmap3_1h7r.htm"><b>OpenFileMapping</b></a> and one process writes to a view, the modification is propagated to the other process. The original file does not change.</p>
<p>
<b>Windows NT:</b> There is no restriction as to how the <i>hFileMappingObject</i> parameter must be created. Copy on write is valid for any type of view. </p>
<p>
If you share the mapping between multiple processes using <a href="handobj_2pyd.htm"><b>DuplicateHandle</b></a> or <a href="fmap3_1h7r.htm"><b>OpenFileMapping</b></a> and one process writes to a view, the modification is not propagated to the other process. The original file does not change.</p>
</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwFileOffsetHigh</i></dt>
<dd>
Specifies the high-order 32 bits of the file offset where mapping is to begin. </dd>
<dt>
<i>dwFileOffsetLow</i></dt>
<dd>
Specifies the low-order 32 bits of the file offset where mapping is to begin. The combination of the high and low offsets must specify an offset within the file that matches the system's memory allocation granularity, or the function fails. That is, the offset must be a multiple of the allocation granularity. Use the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getsysteminfo">
</object><a href=JavaScript:alink_1.Click()><b>GetSystemInfo</b></a> function, which fills in the members of a <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_system_info_str">
</object><a href=JavaScript:alink_2.Click()><b>SYSTEM_INFO</b></a> structure, to obtain the system's memory allocation granularity. </dd>
<dt>
<i>dwNumberOfBytesToMap</i></dt>
<dd>
Specifies the number of bytes of the file to map. If <i>dwNumberOfBytesToMap</i> is zero, the entire file is mapped. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the starting address of the mapped view.</p>
<p>
If the function fails, the return value is NULL. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
Mapping a file makes the specified portion of the file visible in the address space of the calling process. </p>
<p>
Multiple views of a file (or a file-mapping object and its mapped file) are said to be "coherent" if they contain identical data at a specified time. This occurs if the file views are derived from the same file-mapping object. A process can duplicate a file-mapping object handle into another process by using the <b>DuplicateHandle</b> function, or another process can open a file-mapping object by name by using the <b>OpenFileMapping</b> function. </p>
<p>
A mapped view of a file is not guaranteed to be coherent with a file being accessed by the <b>ReadFile</b> or <b>WriteFile</b> function. </p>
<p>
<b>Windows 95:</b> <b>MapViewOfFile</b> may require the swapfile to grow. If the swapfile cannot grow, the function fails.</p>
<p>
<b>Windows NT:</b> If the file-mapping object is backed by the paging file (handle = 0xFFFFFFFF), the paging file must be large enough to hold the entire mapping. If it is not, <b>MapViewOfFile</b> fails.</p>
<p>
<b>Note</b>&nbsp;&nbsp;To guard against an access violation, use structured exception handling to protect any code that writes to or reads from a memory mapped view. For more information, see <a href="fmap3_638n.htm">Reading and Writing</a>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="fmap3_61d3.htm">File Mapping Overview</a>, <a href="fmap3_0583.htm">File Mapping Functions</a>, <a href="fmap3_79wn.htm"><b>CreateFileMapping</b></a>, <a href="handobj_2pyd.htm"><b>DuplicateHandle</b></a>, <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getsysteminfo">
</object><a href=JavaScript:alink_3.Click()><b>GetSystemInfo</b></a>, <a href="fmap3_2it4.htm"><b>MapViewOfFileEx</b></a>, <a href="memman_2wz1.htm"><b>MapViewOfFileVlm</b></a>, <a href="fmap3_1h7r.htm"><b>OpenFileMapping</b></a>, <a href="fmap3_9011.htm"><b>UnmapViewOfFile</b></a>, <a href="memman_4eel.htm"><b>UnmapViewOfFileVlm</b></a>, <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_system_info_str">
</object><a href=JavaScript:alink_4.Click()><b>SYSTEM_INFO</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
