<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reading the Event Log</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_reading_the_event_log"></a>Reading the Event Log</h2>
<p>
The following example reads all the records in the <b>Application</b> log file and displays the event identifier, event type, and event source for each event log entry. </p>
<pre><code>void DisplayEntries( )
{
    HANDLE h;
    EVENTLOGRECORD *pevlr; 
    BYTE bBuffer[BUFFER_SIZE]; 
    DWORD dwRead, dwNeeded, cRecords, dwThisRecord = 0; 
 
    // Open the Application event log. 
 
    h = OpenEventLog( NULL,             // use local computer 
             "Application");   // source name 
    if (h == NULL) 
        ErrorExit("Could not open the Application event log."); 
 
    pevlr = (EVENTLOGRECORD *) &amp;bBuffer; 
 
    // Opening the event log positions the file pointer for this 
    // handle at the beginning of the log. Read the records 
    // sequentially until there are no more. 
 
    while (ReadEventLog(h,                // event log handle 
                EVENTLOG_FORWARDS_READ |  // reads forward 
                EVENTLOG_SEQUENTIAL_READ, // sequential read 
                0,            // ignored for sequential reads 
                pevlr,        // pointer to buffer 
                BUFFER_SIZE,  // size of buffer 
                &amp;dwRead,      // number of bytes read 
                &amp;dwNeeded))   // bytes in next record 
    {
        while (dwRead &gt; 0) 
        { 
            // Print the event identifier, type, and source name. 
            // The source name is just past the end of the 
            // formal structure. 
 
            printf("%02d  Event ID: 0x%08X ", 
                dwThisRecord++, pevlr-&gt;EventID); 
            printf("EventType: %d Source: %s\n", 
                pevlr-&gt;EventType, (LPSTR) ((LPBYTE) pevlr + 
                sizeof(EVENTLOGRECORD))); 
 
            dwRead -= pevlr-&gt;Length; 
            pevlr = (EVENTLOGRECORD *) 
                ((LPBYTE) pevlr + pevlr-&gt;Length); 
        } 
 
        pevlr = (EVENTLOGRECORD *) &amp;bBuffer; 
    } 
 
    CloseEventLog(h); 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
