<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dynamic Data Exchange Message Flow</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_dynamic_data_exchange_message_flow"></a>Dynamic Data Exchange Message Flow</h2>
<p>
A typical DDE conversation consists of the following events: 
<ol>
<li>
The client application initiates the conversation, and the server application responds. </li>
<li>
The applications exchange data by any or all of the following methods: <ul>
<li>
The server application sends data to the client at the client's request. </li>
<li>
The client application sends unsolicited data to the server application. </li>
<li>
The client application requests the server application to notify the client whenever a data item changes (warm data link). </li>
<li>
The client application requests the server application to send data whenever the data changes (hot data link). </li>
<li>
The server application carries out a command at the client's request. </li>
</ul>
</li>
<li>
Either the client or server application terminates the conversation. </li>
</ol>
<p>
An application window that processes requests from a client or server must process them strictly in the order they are received. </p>
<p>
A client can establish conversations with more than one server; a server can have conversations with more than one client. When handling messages from more than one source, a client or server must process the messages of a given conversation synchronously, but need not process all messages synchronously. In other words, it can shift from one conversation to another as needed. </p>
<p>
If an application is unable to process an incoming request because it is waiting for a DDE response, it must prevent deadlock by posting a <a href="dde_678r.htm">WM_DDE_ACK</a> message with the <b>fBusy</b> member of the <a href="dde_5rzm.htm"><b>DDEACK</b></a> structure set to 1. An application can also send a busy WM_DDE_ACK message if, for any reason, it cannot process an incoming request within a reasonable amount of time. </p>
<p>
An application should be able to handle the failure of a client or server to respond to a message within a certain time. Since the time-out interval may vary depending on the nature of the application and the configuration of the user's system (including whether it is connected to a network), the application should provide a way for the user to specify the interval. </p>
<p>&nbsp;</p></body>
</HTML>
