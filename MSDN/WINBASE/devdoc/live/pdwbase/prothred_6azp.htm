<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TlsGetValue</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_tlsgetvalue"></a>TlsGetValue</h1>
<p>
The <b>TlsGetValue</b> function retrieves the value in the calling thread's thread local storage (TLS) slot for a specified TLS index. Each thread of a process has its own slot for each TLS index. </p>
<pre><code><b>LPVOID TlsGetValue(
  DWORD</b><i> dwTlsIndex</i>   // TLS index to retrieve value for
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwTlsIndex</i></dt>
<dd>
Specifies a TLS index that was allocated by the <a href="prothred_986b.htm"><b>TlsAlloc</b></a> function. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the value stored in the calling thread's TLS slot associated with the specified index.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<p>
<b>Note</b>&nbsp;&nbsp;The data stored in a TLS slot can have a value of zero. In this case, the return value is zero and <b>GetLastError</b> returns NO_ERROR. </p>
<h4>Remarks</h4>
<p>
TLS indexes are typically allocated by the <b>TlsAlloc</b> function during process or DLL initialization. Once allocated, each thread of the process can use a TLS index to access its own TLS storage slot for that index. The storage slot for each thread is initialized to NULL. A thread specifies a TLS index in a call to <a href="prothred_8jl1.htm"><b>TlsSetValue</b></a>, to store a value in its slot. The thread specifies the same index in a subsequent call to <b>TlsGetValue</b>, to retrieve the stored value. </p>
<p>
<b>TlsSetValue</b> and <b>TlsGetValue</b> were implemented with speed as the primary goal. These functions perform minimal parameter validation and error checking. In particular, this function succeeds if <i>dwTlsIndex</i> is in the range 0 through (TLS_MINIMUM_AVAILABLE – 1). It is up to the programmer to ensure that the index is valid. </p>
<p>
Win32 functions that return indications of failure call <b>SetLastError</b> when they fail. They generally do not call <b>SetLastError</b> when they succeed. The <b>TlsGetValue</b> function is an exception to this general rule. The <b>TlsGetValue</b> function calls <b>SetLastError</b> to clear a thread's last error when it succeeds. That allows checking for the error-free retrieval of NULL values. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="prothred_86sz.htm">Processes and Threads Overview</a>, <a href="prothred_3mgj.htm">Process and Thread Functions</a>, <a href="errors_3uwi.htm"><b>GetLastError</b></a>, <a href="errors_48tu.htm"><b>SetLastError</b></a>, <a href="prothred_986b.htm"><b>TlsAlloc</b></a>, <a href="prothred_7ns5.htm"><b>TlsFree</b></a>, <a href="prothred_8jl1.htm"><b>TlsSetValue</b></a></p>
<p>&nbsp;</p></body>
</HTML>
