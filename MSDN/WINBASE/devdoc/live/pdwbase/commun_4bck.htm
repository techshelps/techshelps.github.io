<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WaitCommEvent</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_waitcommevent"></a>WaitCommEvent</h1>
<p>
The <b>WaitCommEvent</b> function waits for an event to occur for a specified communications device. The set of events that are monitored by this function is contained in the event mask associated with the device handle. </p>
<pre><code><b>BOOL WaitCommEvent(
  HANDLE</b><i> hFile</i><b>,                </b>// handle to communications device
<b>  LPDWORD</b><i> lpEvtMask</i><b>,           </b>// pointer to variable to receive event
<b>  LPOVERLAPPED</b><i> lpOverlapped</i><b>,</b>   // pointer to overlapped structure
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFile</i></dt>
<dd>
Handle to the communications device. The <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function returns this handle. </dd>
<dt>
<i>lpEvtMask</i></dt>
<dd>
Pointer to a 32-bit variable that receives a mask indicating the type of event that occurred. If an error occurs, the value is zero; otherwise, it is one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=27%>Value</th>
<th align=left width=73%>Meaning</th>
</tr>
<tr valign=top>
<td width=27%>EV_BREAK</td>
<td width=73%>A break was detected on input.</td>
</tr>
<tr valign=top>
<td width=27%>EV_CTS</td>
<td width=73%>The CTS (clear-to-send) signal changed state.</td>
</tr>
<tr valign=top>
<td width=27%>EV_DSR</td>
<td width=73%>The DSR (data-set-ready) signal changed state.</td>
</tr>
<tr valign=top>
<td width=27%>EV_ERR</td>
<td width=73%>A line-status error occurred. Line-status errors are CE_FRAME, CE_OVERRUN, and CE_RXPARITY.</td>
</tr>
<tr valign=top>
<td width=27%>EV_RING</td>
<td width=73%>A ring indicator was detected.</td>
</tr>
<tr valign=top>
<td width=27%>EV_RLSD</td>
<td width=73%>The RLSD (receive-line-signal-detect) signal changed state.</td>
</tr>
<tr valign=top>
<td width=27%>EV_RXCHAR</td>
<td width=73%>A character was received and placed in the input buffer.</td>
</tr>
<tr valign=top>
<td width=27%>EV_RXFLAG</td>
<td width=73%>The event character was received and placed in the input buffer. The event character is specified in the device's <a href="commun_965u.htm"><b>DCB</b></a> structure, which is applied to a serial port by using the <a href="commun_43qd.htm"><b>SetCommState</b></a> function.</td>
</tr>
<tr valign=top>
<td width=27%>EV_TXEMPTY</td>
<td width=73%>The last character in the output buffer was sent.</td>
</tr>
</table><br>

</dd>
<dt>
<i>lpOverlapped</i></dt>
<dd>
Pointer to an <a href="synchro_8tf6.htm"><b>OVERLAPPED</b></a> structure. This structure is required if <i>hFile</i> was opened with FILE_FLAG_OVERLAPPED.
<p>
If <i>hFile</i> was opened with FILE_FLAG_OVERLAPPED, the <i>lpOverlapped</i> parameter must not be NULL. It must point to a valid <b>OVERLAPPED</b> structure. If <i>hFile</i> was opened with FILE_FLAG_OVERLAPPED and <i>lpOverlapped</i> is NULL, the function can incorrectly report that the operation is complete.

<p>
If hFile was opened with FILE_FLAG_OVERLAPPED and <i>lpOverlapped</i> is not NULL, <b>WaitCommEvent</b> is performed as an overlapped operation. In this case, the <b>OVERLAPPED</b> structure must contain a handle to a manual-reset event object (created by using the <a href="synchro_8ub8.htm"><b>CreateEvent</b></a> function). 

<p>
If <i>hFile</i> handle was not opened with FILE_FLAG_OVERLAPPED, <b>WaitCommEvent</b> does not return until one of the specified events or an error occurs. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The <b>WaitCommEvent</b> function monitors a set of events for a specified communications resource. To set and query the current event mask of a communications resource, use the <a href="commun_4jvv.htm"><b>SetCommMask</b></a> and <a href="commun_77aj.htm"><b>GetCommMask</b></a> functions. </p>
<p>
If the overlapped operation cannot be completed immediately, the function returns FALSE and the <b>GetLastError</b> function returns ERROR_IO_PENDING, indicating that the operation is executing in the background. When this happens, the system sets the <b>hEvent</b> member of the <b>OVERLAPPED</b> structure to the not-signaled state before <b>WaitCommEvent</b> returns, and then it sets it to the signaled state when one of the specified events or an error occurs. The calling process can use one of the <a href="synchro_5vqr.htm">wait functions</a> to determine the event object's state and then use the <b>GetOverlappedResult</b> function to determine the results of the <b>WaitCommEvent</b> operation. <b>GetOverlappedResult</b> reports the success or failure of the operation, and the variable pointed to by the <i>lpEvtMask</i> parameter is set to indicate the event that occurred. </p>
<p>
If a process attempts to change the device handle's event mask by using the <b>SetCommMask</b> function while an overlapped <b>WaitCommEvent</b> operation is in progress, <b>WaitCommEvent</b> returns immediately. The variable pointed to by the <i>lpEvtMask</i> parameter is set to zero. </p>
<p>
<b>Windows CE:</b> Windows CE supports an additional flag for the <i>lpEvtMask</i> parameter:
<dl>
<dt>
EV_POWER</dt>
<dd>
Power event, which is generated whenever the device is powered on.</dd>
</dl>
<p>
The <b>WaitCommEvent</b> function cannot be performed as an overlapped operation. The <i>lpOverlapped</i> parameter is not supported and is ignored. It should be set to NULL before calling <b>WaitCommEvent</b>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="commun_4m7n.htm">Communications Overview</a>, <a href="commun_6g37.htm">Communication Functions</a>, <a href="filesio_7wmd.htm"><b>CreateFile</b></a>, <a href="commun_965u.htm"><b>DCB</b></a>, <a href="commun_77aj.htm"><b>GetCommMask</b></a>, <a href="synchro_75v8.htm"><b>GetOverlappedResult</b></a>, <a href="synchro_8tf6.htm"><b>OVERLAPPED</b></a>, <a href="commun_4jvv.htm"><b>SetCommMask</b></a>, <a href="commun_43qd.htm"><b>SetCommState</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
