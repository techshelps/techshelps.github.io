<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetSecurityInfoEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getsecurityinfoex"></a>GetSecurityInfoEx</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>GetSecurityInfoEx</b> function retrieves security information for an object identified by a handle. The function can also retrieve object-specific access-control and audit-control information. <b>GetSecurityInfoEx</b> uses provider-independent access flags, which enables it to retrieve security information for objects on systems other than Windows NT.  </p>
<pre><code><b>DWORD GetSecurityInfoEx(
  HANDLE</b><i> hObject</i><b>,      </b>// handle to the object
<b>  SE_OBJECT_TYPE</b><i> ObjectType</i><b>,</b>
<b>                       </b>// type of object
<b>  SECURITY_INFORMATION</b><i> SecurityInfo</i><b>,</b>
<b>                       </b>// type of security information to retrieve
<b>  LPCTSTR</b><i> lpProvider</i><b>,  </b>// name of provider to handle request
<b>  LPCTSTR</b><i> lpProperty</i><b>,  </b>// identifies a property, property set, or 
                       // child object
<b>  PACTRL_ACCESS</b><i> *ppAccessList</i><b>,</b>
<b>                       </b>// receives a pointer to access-control info
  <b>PACTRL_AUDIT</b> <i>*ppAuditList</i><b>,</b>
<b>                       </b>// receives a pointer to audit-control info
<b>  LPTSTR</b><i> *lppOwner</i><b>,    </b>// receives the name of the object's owner
<b>  LPTSTR</b><i> *lppGroup     </i>// receives the name of the object's primary 
                       // group
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hObject</i></dt>
<dd>
A handle to the object from which to retrieve security information.</dd>
<dt>
<i>ObjectType</i></dt>
<dd>
Specifies a value from the <a href="accctrl_90xe.htm"><b>SE_OBJECT_TYPE</b></a> enumeration that indicates the type of object identified by the <i>hObject</i> parameter.</dd>
<dt>
<i>SecurityInfo</i></dt>
<dd>
A set of <a href="accctrl_9f8y.htm"><b>SECURITY_INFORMATION</b></a> bit flags that indicate the type of security information to retrieve. This parameter can be a combination of the following values.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=56%>Value</th>
<th align=left width=44%>Meaning</th>
</tr>
<tr valign=top>
<td width=56%>OWNER_SECURITY_INFORMATION</td>
<td width=44%>If this flag is set, the <i>lppOwner</i> pointer receives a pointer to a null-terminated string that names the object's owner.</td>
</tr>
<tr valign=top>
<td width=56%>GROUP_SECURITY_INFORMATION</td>
<td width=44%>If this flag is set, the <i>lppGroup</i> pointer receives a pointer to a null-terminated string that names the object's primary group. </td>
</tr>
<tr valign=top>
<td width=56%>DACL_SECURITY_INFORMATION</td>
<td width=44%>If this flag is set, the <i>ppAccessList</i> pointer receives a pointer to a structure that describes DACL information for the object or for the sub-object identified by the <i>lpProperty</i> parameter.</td>
</tr>
<tr valign=top>
<td width=56%>SACL_SECURITY_INFORMATION</td>
<td width=44%>If this flag is set, the <i>ppAuditList</i> pointer receives a pointer to a structure that describes SACL information for the object or for the sub-object identified by the <i>lpProperty</i> parameter.</td>
</tr>
</table><br>

</dd>
<dt>
<i>lpProvider</i></dt>
<dd>
Pointer to a null-terminated string that specifies the name of the provider to handle the request. If this parameter is NULL, the system determines the proper provider to handle the request.</dd>
<dt>
<i>lpProperty</i></dt>
<dd>
Pointer to a null-terminated string that identifes the type of child object, property set, or property for which to retrieve object-specific access-control and audit-control information. This string can be the display name of the object, or it can be a string representation of the GUID that identifies the object. You can use the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_uuidtostring">
</object><a href=JavaScript:alink_1.Click()><b>UuidToString</b></a> function to generate a string representation of a GUID.
<p>
If this parameter is NULL, the function retrieves information for the object itself. For object types that do not support object-specific ACEs, set <i>lpProperty</i> to NULL. 

<p>
If <i>ObjectType</i> specifies SE_DS_OBJECT_ALL, <i>lpProperty</i> is ignored and the function retrieves all the DACL and SACL information for the specified DS object. 
</dd>
<dt>
<i>ppAccessList</i></dt>
<dd>
Pointer to a variable that receives a pointer to an <a href="accctrl_91wy.htm"><b>ACTRL_ACCESS</b></a> structure. The structure describes discretionary access-control information for the object or for the sub-object identified by the <i>lpProperty</i> parameter. The returned pointer is valid only if you set the DACL_SECURITY_INFORMATION flag. Call the <a href="memman_2339.htm"><b>LocalFree</b></a> function to free the returned buffer. This parameter can be NULL if you do not need the DACL information. </dd>
<dt>
<i>ppAuditList</i></dt>
<dd>
Pointer to a variable that receives a pointer to an <a href="accctrl_5vn6.htm"><b>ACTRL_AUDIT</b></a> structure. The structure describes system audit-control information for the object or for the sub-object identified by the <i>lpProperty</i> parameter. The returned pointer is valid only if you set the SACL_SECURITY_INFORMATION flag. Call the <b>LocalFree</b> function to free the returned buffer. This parameter can be NULL if you do not need the SACL information. </dd>
<dt>
<i>lppOwner</i></dt>
<dd>
Pointer to a variable that receives a pointer to a null-terminated string containing the name of the object's owner. The returned pointer is valid only if you set the OWNER_SECURITY_INFORMATION flag. Call the <b>LocalFree</b> function to free the returned buffer. This parameter can be NULL if you do not need the information. </dd>
<dt>
<i>lppGroup</i></dt>
<dd>
Pointer to a variable that receives a pointer to a null-terminated string containing the name of the object's primary group. The returned pointer is valid only if you set the GROUP_SECURITY_INFORMATION flag. Call the <b>LocalFree</b> function to free the returned buffer. This parameter can be NULL if you do not need the information. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is ERROR_SUCCESS.</p>
<p>
If the function fails, the return value can be one of the following error codes. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Value</th>
<th align=left width=50%>Meaning</th>
</tr>
<tr valign=top>
<td width=50%>ERROR_NOT_ENOUGH_MEMORY</td>
<td width=50%>A memory allocation failed</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_INVALID_PARAMETER</td>
<td width=50%>An invalid parameter was specified.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_BAD_PROVIDER</td>
<td width=50%>The <i>lpProvider</i> parameter specified an invalid provider name.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
To read the owner, group, or DACL from the object's security descriptor, the calling process must have been granted READ_CONTROL access when the handle was opened. To get READ_CONTROL access, the caller must be the owner of the object or the object's DACL must grant the access.</p>
<p>
To read the SACL from the security descriptor, the calling process must have been granted ACCESS_SYSTEM_SECURITY access when the handle was opened. The proper way to get this access is to enable the SE_SECURITY_NAME privilege in the caller's current token, open the handle for ACCESS_SYSTEM_SECURITY access, and then disable the privilege.</p>
<p>
Call the <a href="memman_2339.htm"><b>LocalFree</b></a> function to free any pointers returned by the <i>ppAccessList</i>, <i>ppAccessList</i>, <i>lppOwner</i>, or <i>lppOwner</i> parameters. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in aclapi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="accctrl_2hf0.htm">Access Control Overview</a>, <a href="accctrl_6cmr.htm">Access Control Functions</a>, <a href="accctrl_91wy.htm"><b>ACTRL_ACCESS</b></a>, <a href="accctrl_5vn6.htm"><b>ACTRL_AUDIT</b></a>, <a href="accctrl_6z1u.htm"><b>ACTRL_PROPERTY_ENTRY</b></a>, <a href="accctrl_5ghk.htm"><b>GetNamedSecurityInfoEx</b></a>, <a href="memman_2339.htm"><b>LocalFree</b></a>, <a href="accctrl_90xe.htm"><b>SE_OBJECT_TYPE</b></a>, <a href="accctrl_9f8y.htm"><b>SECURITY_INFORMATION</b></a>, <a href="accctrl_9jqw.htm"><b>SetNamedSecurityInfoEx</b></a>, <a href="accctrl_8r3s.htm"><b>SetSecurityInfoEx</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
