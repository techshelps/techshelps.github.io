<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>InterlockedDecrement</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_interlockeddecrement"></a>InterlockedDecrement</h1>
<p>
The <b>InterlockedDecrement</b> function both decrements (decreases by one) the value of the specified 32-bit variable and checks the resulting value. The function prevents more than one thread from using the same variable simultaneously.</p>
<pre><code><b>LONG InterlockedDecrement(
  LPLONG</b><i> lpAddend</i>   // address of the variable to decrement
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpAddend</i></dt>
<dd>
Pointer to the 32-bit variable to decrement. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>Windows 98, Windows NT 4.0 and later:</b> The return value is the resulting decremented value. </p>
<p>
<b>Windows 95, Windows NT 3.51 and earlier:</b> If the result of the operation is zero, the return value is zero. If the result of the operation is less than zero, the return value is negative, but it is not necessarily equal to the result. If the result of the operation is greater than zero, the return value is positive, but it is not necessarily equal to the result. </p>
<h4>Remarks</h4>
<p>
The functions <b>InterlockedDecrement</b>, <b>InterlockedCompareExchange</b>, <b>InterlockedExchange</b>, <b>InterlockedExchangeAdd</b>, and <b>InterlockedIncrement</b> provide a simple mechanism for synchronizing access to a variable that is shared by multiple threads. The threads of different processes can use this mechanism if the variable is in shared memory. </p>
<p>
The variable pointed to by the <i>lpAddend</i> parameter must be aligned on a 32-bit boundary; otherwise, this function will fail on multiprocessor <i>x</i>86 systems. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="synchro_4q3y.htm">Synchronization Overview</a>, <a href="synchro_08z7.htm">Synchronization Functions</a>, <a href="synchro_1lb9.htm"><b>InterlockedCompareExchange</b></a>, <a href="synchro_4qed.htm"><b>InterlockedExchange</b></a>, <a href="synchro_5q04.htm"><b>InterlockedExchangeAdd</b></a>, <a href="synchro_1k38.htm"><b>InterlockedIncrement</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
