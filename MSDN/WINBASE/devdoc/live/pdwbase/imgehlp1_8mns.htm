<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BindImageEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_bindimageex"></a>BindImageEx</h1>
<p>
The <b>BindImageEx</b> function computes the virtual address of each function that is imported. </p>
<pre><code><b>BOOL BindImageEx(
  IN DWORD</b><i> Flags</i><b>,                            </b>
<b>  IN LPSTR</b><i> ImageName</i><b>,                        </b>
<b>  IN LPSTR</b><i> DllPath</i><b>,                          </b>
<b>  IN LPSTR</b><i> SymbolPath</i><b>,                       </b>
<b>  IN PIMAGEHLP_STATUS_ROUTINE</b><i> StatusRoutine  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Flags</i></dt>
<dd>
Specifies the behavior of the function. This parameter can be a combination of the following values:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Value</th>
<th align=left width=57%>Meaning</th>
</tr>
<tr valign=top>
<td width=43%>BIND_NO_BOUND_IMPORTS </td>
<td width=57%>Do not generate a new import address table.</td>
</tr>
<tr valign=top>
<td width=43%>BIND_NO_UPDATE </td>
<td width=57%>Do not make any changes to the file.</td>
</tr>
<tr valign=top>
<td width=43%>BIND_ALL_IMAGES  </td>
<td width=57%>Bind all images in the call tree for this file.</td>
</tr>
</table><br>

</dd>
<dt>
<i>ImageName</i></dt>
<dd>
Pointer to a null-terminated string that specifies the name of the file to be bound. This value can be a filename, a partial path, or a full path.</dd>
<dt>
<i>DllPath</i></dt>
<dd>
Pointer to a null-terminated string that specifies the root of the search path to use if the file specified by the <i>ImageName</i> parameter cannot be opened.</dd>
<dt>
<i>SymbolPath</i></dt>
<dd>
Pointer to a null-terminated string that specifies the root of the path to search for the file's corresponding symbol file.</dd>
<dt>
<i>StatusRoutine</i></dt>
<dd>
Pointer to a status routine. The status routine is called during the progress of the image binding. For more information, see <a href="imgehlp1_3lgl.htm"><b>PIMAGEHLP_STATUS_ROUTINE</b></a>. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is TRUE.</p>
<p>
If the function fails, the return value is FALSE. To retrieve extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
The process of binding an image consists of computing the virtual address of each imported function. The computed virtual address is then saved in the importing image's Import Address Table (IAT). As a result, the image is loaded much faster, particularly if it uses many DLLs, because the system loader does not have to computer the address of each imported function. </p>
<p>
If a corresponding symbol file can be located, its time stamp and checksum are updated.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in imagehlp.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use imagehlp.lib.</p>
<h4>See Also</h4>
<p>
<a href="imgehlp1_3hzz.htm">PE Image Helper (ImageHlp) Overview</a>, <a href="imgehlp1_9coj.htm">ImageHlp Image Modification Functions</a>, <a href="imgehlp1_3lgl.htm"><b>PIMAGEHLP_STATUS_ROUTINE</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
