<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CBTProc</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_cbtproc"></a>CBTProc</h1>
<p>
The <b>CBTProc</b> hook procedure is an application-defined or library-defined callback function used with the <a href="hooks_7vaw.htm"><b>SetWindowsHookEx</b></a> function. The system calls this function before activating, creating, destroying, minimizing, maximizing, moving, or sizing a window; before completing a system command; before removing a mouse or keyboard event from the system message queue; before setting the keyboard focus; or before synchronizing with the system message queue. A computer-based training (CBT) application uses this hook procedure to receive useful notifications from the system. </p>
<p>
The <b>HOOKPROC</b> type defines a pointer to this callback function. <b>CBTProc</b> is a placeholder for the application-defined or library-defined function name. </p>
<pre><code><b>LRESULT CALLBACK CBTProc(
  int</b><i> nCode</i><b>,      </b>// hook code
<b>  WPARAM</b><i> wParam</i><b>,  </b>// depends on hook code
<b>  LPARAM</b><i> lParam</i>   // depends on hook code
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>nCode</i></dt>
<dd>
Specifies a code that the hook procedure uses to determine how to process the message. This parameter can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=38%>Value</th>
<th align=left width=62%>Meaning</th>
</tr>
<tr valign=top>
<td width=38%>HCBT_ACTIVATE</td>
<td width=62%>The system is about to activate a window.</td>
</tr>
<tr valign=top>
<td width=38%>HCBT_CLICKSKIPPED</td>
<td width=62%>The system has removed a mouse message from the system message queue. Upon receiving this hook code, a CBT application must install a <a href="hooks_0h7v.htm">WH_JOURNALPLAYBACK hook</a> procedure in response to the mouse message.</td>
</tr>
<tr valign=top>
<td width=38%>HCBT_CREATEWND</td>
<td width=62%>A window is about to be created. The system calls the hook procedure before sending the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_create">
</object><a href=JavaScript:alink_1.Click()>WM_CREATE</a> or <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_nccreate">
</object><a href=JavaScript:alink_2.Click()>WM_NCCREATE</a> message to the window. If the hook procedure returns a nonzero value, the system destroys the window; the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_createwindow">
</object><a href=JavaScript:alink_3.Click()><b>CreateWindow</b></a> function returns NULL, but the <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_destroy">
</object><a href=JavaScript:alink_4.Click()>WM_DESTROY</a> message is not sent to the window. If the hook procedure returns zero, the window is created normally.</td>
</tr>
<tr valign=top>
<td width=38%></td>
<td width=62%>At the time of the HCBT_CREATEWND notification, the window has been created, but its final size and position may not have been determined and its parent window may not have been established. It is possible to send messages to the newly created window, although it has not yet received WM_NCCREATE or WM_CREATE messages. It is also possible to change the position in the Z order of the newly created window by modifying the <b>hwndInsertAfter</b> member of the <a href="hooks_49ki.htm"><b>CBT_CREATEWND</b></a> structure.</td>
</tr>
<tr valign=top>
<td width=38%>HCBT_DESTROYWND</td>
<td width=62%>A window is about to be destroyed.</td>
</tr>
<tr valign=top>
<td width=38%>HCBT_KEYSKIPPED</td>
<td width=62%>The system has removed a keyboard message from the system message queue. Upon receiving this hook code, a CBT application must install a <a href="hooks_0h7v.htm">WH_JOURNALPLAYBACK_hook</a> hook procedure in response to the keyboard message.</td>
</tr>
<tr valign=top>
<td width=38%>HCBT_MINMAX</td>
<td width=62%>A window is about to be minimized or maximized.</td>
</tr>
<tr valign=top>
<td width=38%>HCBT_MOVESIZE</td>
<td width=62%>A window is about to be moved or sized.</td>
</tr>
<tr valign=top>
<td width=38%>HCBT_QS</td>
<td width=62%>The system has retrieved a <a href="hooks_6fz7.htm">WM_QUEUESYNC</a> message from the system message queue.</td>
</tr>
<tr valign=top>
<td width=38%>HCBT_SETFOCUS</td>
<td width=62%>A window is about to receive the keyboard focus.</td>
</tr>
<tr valign=top>
<td width=38%>HCBT_SYSCOMMAND</td>
<td width=62%>A system command is about to be carried out. This allows a CBT application to prevent task switching by means of hot keys.</td>
</tr>
</table><br>


<p>
If <i>nCode</i> is less than zero, the hook procedure must pass the message to the <a href="hooks_57aw.htm"><b>CallNextHookEx</b></a> function without further processing and should return the value returned by <b>CallNextHookEx</b>. 
</dd>
<dt>
<i>wParam</i></dt>
<dd>
Depends on the <i>nCode</i> parameter. For details, see the following Remarks section. </dd>
<dt>
<i>lParam</i></dt>
<dd>
Depends on the <i>nCode</i> parameter. For details, see the following Remarks section. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
The value returned by the hook procedure determines whether the system allows or prevents one of these operations. For operations corresponding to the following CBT hook codes, the return value must be 0 to allow the operation, or 1 to prevent it: </p>
<p>
HCBT_ACTIVATE<br>
HCBT_CREATEWND<br>
HCBT_DESTROYWND<br>
HCBT_MINMAX<br>
HCBT_MOVESIZE<br>
HCBT_SETFOCUS<br>
HCBT_SYSCOMMAND</p>
<p>
For operations corresponding to the following CBT hook codes, the return value is ignored: </p>
<p>
HCBT_CLICKSKIPPED<br>
HCBT_KEYSKIPPED<br>
HCBT_QS</p>
<h4>Remarks</h4>
<p>
The hook procedure should not install a <a href="hooks_0h7v.htm">WH_JOURNALPLAYBACK_hook</a> hook procedure except in the situations described in the preceding list of hook codes. </p>
<p>
This hook procedure must be in a dynamic-link library (DLL). An application installs the hook procedure by specifying the WH_CBT hook type and the address of the hook procedure in a call to the <a href="hooks_7vaw.htm"><b>SetWindowsHookEx</b></a> function. </p>
<p>
The following table describes the <i>wParam</i> and <i>lParam</i> parameters for each HCBT_ hook code: </p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=33%>Value</th>
<th align=left width=26%>wParam</th>
<th align=left width=41%>lParam</th>
</tr>
<tr valign=top>
<td width=33%><b>HCBT_ACTIVATE</b></td>
<td width=26%>Specifies the handle to the window about to be activated.</td>
<td width=41%>Specifies a long pointer to a <a href="hooks_0hv6.htm"><b>CBTACTIVATESTRUCT</b></a> structure containing the handle to the active window and specifies whether the activation is changing because of a mouse click. </td>
</tr>
<tr valign=top>
<td width=33%><b>HCBT_CLICKSKIPPED</b></td>
<td width=26%>Identifies the mouse message removed from the system message queue.</td>
<td width=41%>Specifies a long pointer to a <a href="hooks_9yia.htm"><b>MOUSEHOOKSTRUCT</b></a> structure containing the hit-test code and the handle to the window for which the mouse message is intended. <p>
The HCBT_CLICKSKIPPED value is sent to a <b>CBTProc</b> hook procedure only if a WH_MOUSE hook is installed. For a list of hit-test codes, see <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_nchittest">
</object><a href=JavaScript:alink_5.Click()><b>WM_NCHITTEST</b></a>. </p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>HCBT_CREATEWND</b></td>
<td width=26%>Specifies the handle to the new window.</td>
<td width=41%>Specifies a long pointer to a <a href="hooks_49ki.htm"><b>CBT_CREATEWND</b></a> structure containing initialization parameters for the window. The parameters include the coordinates and dimensions of the window. By changing these parameters, a <b>CBTProc</b> hook procedure can set the initial size and position of the window. </td>
</tr>
<tr valign=top>
<td width=33%><b>HCBT_DESTROYWND</b></td>
<td width=26%>Specifies the handle to the window about to be destroyed.</td>
<td width=41%>Is undefined and must be set to zero. </td>
</tr>
<tr valign=top>
<td width=33%><b>HCBT_KEYSKIPPED</b></td>
<td width=26%>Identifies the virtual-key code.</td>
<td width=41%>Specifies the repeat count, scan code, key-transition code, previous key state, and context code. The HCBT_KEYSKIPPED value is sent to a <b>CBTProc</b> hook procedure only if a WH_KEYBOARD hook is installed. For more information, see <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_keyup">
</object><a href=JavaScript:alink_6.Click()><b>WM_KEYUP</b></a> or <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_keydown">
</object><a href=JavaScript:alink_7.Click()><b>WM_KEYDOWN</b></a>. </td>
</tr>
<tr valign=top>
<td width=33%><b>HCBT_MINMAX</b></td>
<td width=26%>Specifies the handle to the window being minimized or maximized.</td>
<td width=41%>Specifies, in the low-order word, a show-window value (SW_) specifying the operation. For a list of show-window values, see the <object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_showwindow">
</object><a href=JavaScript:alink_8.Click()><b>ShowWindow</b></a>. The high-order word is undefined. </td>
</tr>
<tr valign=top>
<td width=33%><b>HCBT_MOVESIZE</b></td>
<td width=26%>Specifies the handle to the window to be moved or sized.</td>
<td width=41%>Specifies a long pointer to a <object id=alink_9 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_rect_str">
</object><a href=JavaScript:alink_9.Click()><b>RECT</b></a> structure containing the coordinates of the window. By changing the values in the structure, a <b>CBTProc</b> hook procedure can set the final coordinates of the window. </td>
</tr>
<tr valign=top>
<td width=33%><b>HCBT_QS</b></td>
<td width=26%>Is undefined and must be zero.</td>
<td width=41%>Is undefined and must be zero. </td>
</tr>
<tr valign=top>
<td width=33%><b>HCBT_SETFOCUS</b></td>
<td width=26%>Specifies the handle to the window gaining the keyboard focus.</td>
<td width=41%>Specifies the handle to the window losing the keyboard focus. </td>
</tr>
<tr valign=top>
<td width=33%><b>HCBT_SYSCOMMAND</b></td>
<td width=26%>Specifies a system-command value (SC_) specifying the system command. For more information about system-command values, see <object id=alink_10 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_syscommand">
</object><a href=JavaScript:alink_10.Click()><b>WM_SYSCOMMAND</b></a>. </td>
<td width=41%>Contains the same data as the <i>lParam</i> value of a <object id=alink_11 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_syscommand">
</object><a href=JavaScript:alink_11.Click()><b>WM_SYSCOMMAND</b></a> message: If a system menu command is chosen with the mouse, the low-order word contains the x-coordinate of the cursor, in screen coordinates, and the high-order word contains the y-coordinate; otherwise, the parameter is not used. </td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>User-defined.</p>
<h4>See Also</h4>
<p>
<a href="hooks_9rg3.htm">Hooks Overview</a>, <a href="hooks_31bn.htm">Hook Functions</a>, <a href="hooks_57aw.htm"><b>CallNextHookEx</b></a>,<b> <object id=alink_12 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_createwindow">
</object><a href=JavaScript:alink_12.Click()>CreateWindow</a></b>,<b> <a href="hooks_7vaw.htm">SetWindowsHookEx</a></b>,<b> </b><object id=alink_13 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_syscommand">
</object><a href=JavaScript:alink_13.Click()>WM_SYSCOMMAND</a> </p>
<p>&nbsp;</p></body>
</HTML>
