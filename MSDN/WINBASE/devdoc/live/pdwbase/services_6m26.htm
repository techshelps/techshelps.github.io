<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Querying a Service's Configuration</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_querying_a_service_s_configuration"></a>Querying a Service's Configuration</h2>
<p>
In the following example, a service configuration program uses the <a href="services_8isl.htm"><b>OpenService</b></a> function to get a handle with SERVICE_QUERY_CONFIG access to an installed service object. Then the program uses the service object handle in the <a href="services_7yjr.htm"><b>QueryServiceConfig</b></a> function to retrieve the current configuration of the service. </p>
<pre><code>VOID GetSampleServiceConfig() 
{ 
    LPQUERY_SERVICE_CONFIG lpqscBuf; 
    DWORD dwBytesNeeded; 
 
    // Open a handle to the service. 
 
    schService = OpenService( 
        schSCManager,           // SCManager database 
        TEXT("Sample_Srv"),     // name of service 
        SERVICE_QUERY_CONFIG);  // need QUERY access 
    if (schService == NULL) 
        MyErrorExit("OpenService"); 
 
    // Allocate a buffer for the information configuration. 
 
    lpqscBuf = (LPQUERY_SERVICE_CONFIG) LocalAlloc( 
        LPTR, 4096); 
    if (lpqscBuf == NULL) 
        MyErrorExit("LocalAlloc"); 
 
    // Get and print the information configuration. 
 
    if (! QueryServiceConfig( 
        schService, 
        lpqscBuf, 
        4096, 
        &amp;dwBytesNeeded) ) 
    {
        MyErrorExit("QueryServiceConfig"); 
    }
 
    printf("\nSample_Srv configuration: \n"); 
    printf("  Type: 0x%x\n", lpqscBuf-&gt;dwServiceType); 
    printf("  Start Type: 0x%x\n", lpqscBuf-&gt;dwStartType); 
    printf("  Err Control: 0x%x\n", lpqscBuf-&gt;dwErrorControl); 
    printf("  Binary path: %s\n", lpqscBuf-&gt;lpBinaryPathName); 

    if (lpqscBuf-&gt;lpLoadOrderGroup != NULL) 
        printf("  Load order group: %s\n", 
            lpqscBuf-&gt;lpLoadOrderGroup); 
    if (lpqscBuf-&gt;dwTagId != 0) 
        printf("  Tag ID: %d\n", lpqscBuf-&gt;dwTagId); 
    if (lpqscBuf-&gt;lpDependencies != NULL) 
        printf("  Dependencies: %s\n", lpqscBuf-&gt;lpDependencies); 
    if (lpqscBuf-&gt;lpServiceStartName != NULL) 
        printf("  Start Name: %s\n", 
            lpqscBuf-&gt;lpServiceStartName); 
 
    LocalFree(lpqscBuf); 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
