<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ConvertSecurityDescriptorToAccessNamed</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_convertsecuritydescriptortoaccessnamed"></a>ConvertSecurityDescriptorToAccessNamed</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>ConvertSecurityDescriptorToAccessNamed</b> function retrieves the security information from a specified security descriptor. The function converts the security descriptor's SIDs and ACLs into name strings and data structures that you can use with the access-control functions introduced for Windows NT version 5.0.</p>
<p>
For security descriptors that contain object-specific ACEs, you can specify the name and type of the object associated with the security descriptor. The function uses the object's name to retrieve display names for the GUIDs in any object-specific ACEs.</p>
<pre><code><b>DWORD ConvertSecurityDescriptorToAccessNamed(
  LPCTSTR</b><i> lpObject</i><b>,           </b>// name of the associated object
<b>  SE_OBJECT_TYPE</b><i> ObjectType</i><b>,  </b>// type of object
<b>  PSECURITY_DESCRIPTOR</b><i> pSecDescriptor</i><b>,</b>
<b>                    </b>// pointer to the object's security descriptor
<b>  PACTRL_ACCESS</b><i> *ppAccessList</i><b>,</b>
<b>                    </b>// receives a pointer to access-control info
<b>  PACTRL_AUDIT</b><i> *ppAuditList</i><b>,</b>
<b>                    </b>// receives a pointer to audit-control info
<b>  LPTSTR</b><i> *lppOwner</i><b>, </b>// receives the name of the object's owner
<b>  LPTSTR</b><i> *lppGroup  </i>// receives the name of the object's primary group
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpObject</i></dt>
<dd>
Pointer to a null-terminated string that specifies the name of the object associated with the <i>pSecDescriptor</i> security descriptor. For descriptions of the string formats for the different object types, see <a href="accctrl_90xe.htm"><b>SE_OBJECT_TYPE</b></a>. 
<p>
The function accesses the object to retrieve display names for the GUIDs in any object-specific ACEs. If <i>lpObject</i> is NULL, the returned access-control structures contain the GUIDs in string format rather than the display names of the objects associated with the GUIDs.

<p>
If the ACLs in the security descriptor do not contain object specific ACEs, the <i>lpObject</i> and <i>ObjectType</i> parameters are ignored. 
</dd>
<dt>
<i>ObjectType</i></dt>
<dd>
Specifies a value from the <b>SE_OBJECT_TYPE</b> enumeration that indicates the type of object identified by the <i>lpObject</i> parameter.</dd>
<dt>
<i>pSecDescriptor</i></dt>
<dd>
Pointer to the security descriptor from which to retrieve security information.</dd>
<dt>
<i>ppAccessList</i></dt>
<dd>
Pointer to a variable that receives a pointer to an <a href="accctrl_91wy.htm"><b>ACTRL_ACCESS</b></a> structure that describes the security descriptor's DACL. Call the <a href="memman_2339.htm"><b>LocalFree</b></a> function to free the returned buffer. This parameter can be NULL if you do not need the DACL information. </dd>
<dt>
<i>ppAuditList</i></dt>
<dd>
Pointer to a variable that receives a pointer to an <a href="accctrl_5vn6.htm"><b>ACTRL_AUDIT</b></a> structure that describes the security descriptor's SACL. Call the <b>LocalFree</b> function to free the returned buffer. This parameter can be NULL if you do not need the SACL information. </dd>
<dt>
<i>lppOwner</i></dt>
<dd>
Pointer to a variable that receives a pointer to a null-terminated string containing the name of the object's owner. Call the <b>LocalFree</b> function to free the returned buffer. This parameter can be NULL if you do not need the information. </dd>
<dt>
<i>lppGroup</i></dt>
<dd>
Pointer to a variable that receives a pointer to a null-terminated string containing the name of the object's primary group. Call the <b>LocalFree</b> function to free the returned buffer. This parameter can be NULL if you do not need the information. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is ERROR_SUCCESS. </p>
<p>
If the function fails, the return value can be one of the following error codes. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Value</th>
<th align=left width=50%>Meaning</th>
</tr>
<tr valign=top>
<td width=50%>ERROR_NOT_ENOUGH_MEMORY</td>
<td width=50%>A memory allocation failed.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_INVALID_PARAMETER</td>
<td width=50%>An invalid parameter was specified.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in aclapi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="accctrl_2hf0.htm">Access Control Overview</a>, <a href="accctrl_6cmr.htm">Access Control Functions</a>, <a href="accctrl_91wy.htm"><b>ACTRL_ACCESS</b></a>, <a href="accctrl_5vn6.htm"><b>ACTRL_AUDIT</b></a>, <a href="accctrl_0nua.htm"><b>ConvertAccessToSecurityDescriptor</b></a>, <a href="accctrl_78oj.htm"><b>ConvertSecurityDescriptorToAccess</b></a>, <a href="memman_2339.htm"><b>LocalFree</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
