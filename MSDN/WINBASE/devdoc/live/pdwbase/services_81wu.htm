<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The ServiceMain Function</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_the_servicemain_function"></a>The ServiceMain Function</h3>
<p>
The <a href="services_61pq.htm"><b>ServiceMain</b></a> function is the entry point for a service. </p>
<p>
When a service control program requests that a new service run, the SCM starts the service and sends a start request to the control dispatcher. The control dispatcher creates a new thread to execute the <b>ServiceMain</b> function for the service.</p>
<p>
The <b>ServiceMain</b> function should perform the following tasks:
<ol>
<li>
Call the <a href="services_7t0y.htm"><b>RegisterServiceCtrlHandler</b></a> function immediately to register a <a href="services_18oi.htm"><b>Handler</b></a> function to handle control requests for the service. The return value of <b>RegisterServiceCtrlHandler</b> is a <i>service status handle</i> that will be used in calls to notify the SCM of the service status.</li>
<li>
Perform initialization. If the execution time of the initialization code is expected to be very short (less than one second), initialization can be performed directly in <a href="services_61pq.htm"><b>ServiceMain</b></a>. <p>
If the initialization time is expected to be longer than one second, call the <a href="services_90oj.htm"><b>SetServiceStatus</b></a> function, specifying the SERVICE_START_PENDING service state in the <a href="services_9s36.htm"><b>SERVICE_STATUS</b></a> structure. As initialization continues, the service should make additional calls to <b>SetServiceStatus</b> to report progress. Sending multiple <b>SetServiceStatus</b> calls is useful for debugging services. 
</li>
<li>
When initialization is complete, call <b>SetServiceStatus</b>, specifying the SERVICE_RUNNING state in the <b>SERVICE_STATUS</b> structure. </li>
<li>
Perform the service tasks, or, if there are no pending tasks, return. Any change in the state of the service warrants a call to <a href="services_90oj.htm"><b>SetServiceStatus</b></a> to report new status information. </li>
<li>
If an error occurs while the service is initializing or running, the service should call <b>SetServiceStatus</b>, specifying the SERVICE_STOP_PENDING state in the <a href="services_9s36.htm"><b>SERVICE_STATUS</b></a> structure, if cleanup will be lengthy. Once cleanup is complete, call <b>SetServiceStatus</b> from the last thread to terminate, specifying SERVICE_STOPPED in the <b>SERVICE_STATUS</b> structure. Be sure to set the <b>dwServiceSpecificExitCode</b> and <b>dwWin32ExitCode</b> members of the <b>SERVICE_STATUS</b> structure to identify the error.</li>
</ol>
<p>
For more information, see <a href="services_1qjy.htm">Writing a ServiceMain Function</a>. </p>
<p>&nbsp;</p></body>
</HTML>
