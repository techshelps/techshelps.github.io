<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MapViewOfFileVlm</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_mapviewoffilevlm"></a>MapViewOfFileVlm</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>MapViewOfFileVlm</b> function maps a view of a file into the address space of the calling process. </p>
<pre><code><b>LPVOID MapViewOfFileVlm(
  HANDLE</b><i> hFileMappingObject</i>,  // file-mapping object to map into 
                              // address space
<b>  DWORD</b><i> dwDesiredAccess</i>,      // desired access mode
<b>  DWORDLONG</b><i> ulOffset</i>,         // offset into mapping region
<b>  DWORDLONG</b><i> ulNumberOfBytesToMap</i>,  // size of mapping in bytes
  <b>PVOID64</b> <i>lpBaseAddress</i>       // address of region of shared memory
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFileMappingObject</i></dt>
<dd>
Handle to a file-mapping object to be mapped into the calling process's address space. The <a href="fmap3_79wn.htm"><b>CreateFileMapping</b></a> and <a href="fmap3_1h7r.htm"><b>OpenFileMapping</b></a> functions return this handle. The mapped view must have been created by using <b>CreateFileMapping </b>with the SEC_VLM flag set in the <i>fdwProtect </i>parameter.</dd>
<dt>
<i>dwDesiredAccess</i></dt>
<dd>
Type of access to the file view to be mapped and, therefore, the type of protection for the pages mapped by the file. This parameter can be one of the following values.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=30%>Value</th>
<th align=left width=70%>Meaning</th>
</tr>
<tr valign=top>
<td width=30%>FILE_MAP_READ</td>
<td width=70%>Read-only access. The object whose handle is passed in the <i>hFileMappingObject</i> parameter must have been created with PAGE_READWRITE or PAGE_READONLY protection. A read-only view of the file is mapped.</td>
</tr>
<tr valign=top>
<td width=30%>FILE_MAP_WRITE</td>
<td width=70%>Read-write access. The <i>hFileMappingObject</i> object must have been created with PAGE_READWRITE protection. A read-write view of the file is mapped.</td>
</tr>
</table><br>

</dd>
<dt>
<i>ulOffset</i></dt>
<dd>
64-bit file offset where mapping is to begin. The <i>ulOffset</i> parameter must specify a 64K-aligned offset within the file to map. Specifying an address that is not a multiple of 64K is an error.</dd>
<dt>
<i>ulNumberOfBytesToMap</i></dt>
<dd>
Number of bytes of the file to map. If the <i>ulNumberOfBytesToMap</i> parameter is zero, the entire file is mapped. The call to <b>MapViewOfFileVlm </b>fails if there is not enough address space to map the requested number of bytes.</dd>
<dt>
<i>lpBaseAddress</i></dt>
<dd>
Base address of the point in the process's address space at which the mapping is to begin. Note that the address is rounded <i>down</i> to the nearest 64K boundary by the system. A value of NULL for this parameter allows the system to choose the mapping base address without consideration of calling process requirements.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the starting address of the mapped view, after any rounding down.</p>
<p>
If the function fails, the return value is NULL. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
Mapping a file makes the specified portion of the file visible in the address space of the calling process. </p>
<p>
Multiple views of a file (or of a file-mapping object and its mapped file) are said to be "coherent" if they contain identical data at a specified time. Coherence occurs if the file views are derived from the same file-mapping object. A process can duplicate a file-mapping object handle in another process by using the <a href="handobj_2pyd.htm"><b>DuplicateHandle</b></a> function. A process other than the file-mapping object's creator can open the object by name by using the <a href="fmap3_1h7r.htm"><b>OpenFileMapping</b></a> function. </p>
<p>
A mapped view of a file is not guaranteed to be coherent with a file being accessed by the <a href="filesio_39id.htm"><b>ReadFile</b></a>, <a href="filesio_3kkl.htm"><b>WriteFile</b></a>, <a href="memman_2fvx.htm"><b>ReadFileVlm</b></a> or <a href="memman_1hm5.htm"><b>WriteFileVlm</b></a> function.</p>
<p>
A call to <b>MapViewOfFileVlm</b> fails if there is not enough address space to map the requested number of bytes.</p>
<p>
Because VLM virtual space is not paged, page file size is not a concern.</p>
<p>
<b>Note</b>&nbsp;&nbsp;To guard against an access violation, use structured exception handling to protect any code that writes to or reads from a memory-mapped view. For more information on structured exception handling, see <a href="fmap3_638n.htm">Reading and Writing</a>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="memman_6oz8.htm">Memory Management Overview</a>, <a href="memman_60kz.htm">Memory Management Functions</a>, <a href="memman_0rz3.htm">Very Large Memory (VLM)</a>, <a href="fmap3_79wn.htm"><b>CreateFileMapping</b></a>, <a href="handobj_2pyd.htm"><b>DuplicateHandle</b></a>, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getsysteminfo">
</object><a href=JavaScript:alink_1.Click()><b>GetSystemInfo</b></a>, <a href="fmap3_2it4.htm"><b>MapViewOfFileEx</b></a>, <a href="fmap3_1h7r.htm"><b>OpenFileMapping</b></a>, <a href="filesio_39id.htm"><b>ReadFile</b></a>, <a href="memman_2fvx.htm"><b>ReadFileVlm</b></a><b>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_system_info_str">
</object><a href=JavaScript:alink_2.Click()>SYSTEM_INFO</a></b>, <a href="memman_4eel.htm"><b>UnmapViewOfFileVlm</b></a>, <a href="filesio_3kkl.htm"><b>WriteFile</b></a>,<b> <a href="memman_1hm5.htm">WriteFileVlm</a></b></p>
<p>&nbsp;</p></body>
</HTML>
