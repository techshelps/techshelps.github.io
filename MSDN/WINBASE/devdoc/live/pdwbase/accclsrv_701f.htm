<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Impersonation Levels</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_impersonation_levels"></a>Impersonation Levels</h3>
<p>
The <a href="accclsrv_1rsi.htm"><b>SECURITY_IMPERSONATION_LEVEL</b></a> enumeration defines four impersonation levels that determine the operations a server can perform in the client's context. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=33%>Level</th>
<th align=left width=67%>Description</th>
</tr>
<tr valign=top>
<td width=33%>SecurityAnonymous</td>
<td width=67%>The server cannot impersonate or identify the client.</td>
</tr>
<tr valign=top>
<td width=33%>SecurityIdentification</td>
<td width=67%>The server can get the identity and privileges of the client, but cannot impersonate the client.</td>
</tr>
<tr valign=top>
<td width=33%>SecurityImpersonation</td>
<td width=67%>The server can impersonate the client's security context on the local system.</td>
</tr>
<tr valign=top>
<td width=33%>SecurityDelegation</td>
<td width=67%>The server can impersonate the client's security context on remote systems.</td>
</tr>
</table><br>
<p>
The client of a named pipe, RPC, or DDE connection can control the impersonation level. For example, a named pipe client can call the <b>CreateFile</b> function to open a handle to a named pipe and specify the server's impersonation level. DDE clients use the <a href="dde_4d2d.htm"><b>DdeSetQualityOfService</b></a> function with the <a href="accclsrv_4a5u.htm"><b>SECURITY_QUALITY_OF_SERVICE</b></a> structure to specify the impersonation level. The SecurityImpersonation level is the default for named pipe, RPC, and DDE servers. The <a href="accclsrv_03ja.htm"><b>ImpersonateSelf</b></a>, <a href="accctrl_91da.htm"><b>DuplicateToken</b></a>, and <a href="accctrl_9vso.htm"><b>DuplicateTokenEx</b></a> functions allow the caller to specify an impersonation level. Use the <a href="accctrl_2jvy.htm"><b>GetTokenInformation</b></a> function to get the impersonation level of an access token.</p>
<p>
At the SecurityImpersonation level, most of the thread's actions occur in the security context of the thread's impersonation token rather than in the primary token of the process that owns the thread. For example, if an impersonating thread opens a <a href="accctrl_499v.htm">securable object</a>, the system uses the impersonation token to check the thread's access. Similarly, if an impersonating thread creates a new object, for example by calling the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function, the owner of the new object is the default owner from the client's access token. </p>
<p>
However, the system uses the primary token of the process rather than the impersonation token of the calling thread in the following situations:
<ul>
<li>
If an impersonating thread calls the <a href="prothred_9dpv.htm"><b>CreateProcess</b></a> function, the new process always inherits the primary token of the process.</li>
<li>
For Win32 functions that require the SE_TCB_NAME privilege, such as the <a href="accclsrv_9cfm.htm"><b>LogonUser</b></a> function, the system always checks for the privilege in the primary token of the process. </li>
<li>
For Win32 functions that require the SE_AUDIT_NAME privilege, such as the <a href="accclsrv_3625.htm"><b>ObjectOpenAuditAlarm</b></a> function, the system always checks for the privilege in the primary token of the process. </li>
<li>
In a call to the <a href="accctrl_8bam.htm"><b>OpenThreadToken</b></a> function, a thread can specify whether the function uses the impersonation token or the primary token to determine whether to grant the requested access.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
