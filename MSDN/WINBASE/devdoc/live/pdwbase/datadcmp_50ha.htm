<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Data Compression</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_data_compression"></a>Data Compression</h2>
<p>
Data compression reduces the size of a file by minimizing redundant data. In a text file, redundant data can be frequently occurring characters, such as the space character, or common vowels, such as the letters <i>e</i> and <i>a</i>; it can also be frequently occurring character strings. Data compression creates a compressed version of a file by minimizing this redundant data. </p>
<p>
Each type of data-compression algorithm minimizes redundant data in a unique manner. For example, the <i>Huffman encoding algorithm</i> assigns a code to characters in a file based on how frequently those characters occur. Another compression algorithm, called <i>run-length encoding</i>, generates a two-part value for repeated characters: the first part specifies the number of times the character is repeated, and the second part identifies the character. Another compression algorithm, known as the <i>Lempel-Ziv algorithm</i>, converts variable-length strings into fixed-length codes that consume less space than the original strings. </p>
<p>
To compress large applications or data files, run COMPRESS.EXE from the command line. COMPRESS.EXE uses the Lempel-Ziv compression algorithm. </p>
<p>&nbsp;</p></body>
</HTML>
