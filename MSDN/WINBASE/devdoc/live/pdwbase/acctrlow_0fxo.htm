<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetSecurityDescriptorDacl</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setsecuritydescriptordacl"></a>SetSecurityDescriptorDacl</h1>
<p>
The <b>SetSecurityDescriptorDacl</b> function sets information in a discretionary access-control list (ACL). If a discretionary ACL is already present in the security descriptor, it is replaced. </p>
<pre><code><b>BOOL SetSecurityDescriptorDacl(
  PSECURITY_DESCRIPTOR</b><i> pSecurityDescriptor</i><b>,</b>
<b>                        </b>// address of security descriptor
<b>  BOOL</b><i> bDaclPresent</i><b>,    </b>// flag for presence of discretionary ACL
<b>  PACL</b><i> pDacl</i><b>,           </b>// address of discretionary ACL
  <b>BOOL</b> <i>bDaclDefaulted</i>   // flag for default discretionary ACL
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pSecurityDescriptor</i></dt>
<dd>
Points to the <a href="accctrl_6i5u.htm"><b>SECURITY_DESCRIPTOR</b></a> structure to which the function adds the discretionary ACL. This security descriptor must be in absolute format, meaning that its members must be pointers to other structures, rather than offsets to contiguous data. </dd>
<dt>
<i>bDaclPresent</i></dt>
<dd>
Specifies a flag indicating the presence of a discretionary ACL in the security descriptor. If this parameter is TRUE, the function sets the SE_DACL_PRESENT flag in the <a href="acctrlow_7u5u.htm"><b>SECURITY_DESCRIPTOR_CONTROL</b></a> structure and uses the values in the <i>pDacl</i> and <i>bDaclDefaulted</i> parameters. If it is FALSE, the function clears the SE_DACL_PRESENT flag, and <i>pDacl</i> and <i>bDaclDefaulted</i> are ignored. </dd>
<dt>
<i>pDacl</i></dt>
<dd>
Points to an <a href="accctrl_4h6a.htm"><b>ACL</b></a> structure specifying the discretionary ACL for the security descriptor. If this parameter is NULL, a NULL discretionary ACL is assigned to the security descriptor, allowing all access to the object. The discretionary ACL is referenced by, not copied into, the security descriptor. </dd>
<dt>
<i>bDaclDefaulted</i></dt>
<dd>
Specifies a flag indicating the source of the discretionary ACL. If this flag is TRUE, the discretionary ACL has been retrieved by some default mechanism. If FALSE, the discretionary ACL has been explicitly specified by a user. The function stores this value in the SE_DACL_DEFAULTED flag of the <b>SECURITY_DESCRIPTOR_CONTROL</b> structure. If this parameter is not specified, the SE_DACL_DEFAULTED flag is cleared. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
There is an important difference between an empty and a nonexistent discretionary ACL. When a discretionary ACL is empty, it contains no access-control entries and no access rights have been explicitly granted. As a result, access to the object is implicitly denied. When an object has no DACL, on the other hand, no protection is assigned to the object, and any access request is granted. </p>
<p>
There are three possible outcomes in different configurations of the <i>bDaclPresent</i> flag and the <i>pDacl</i> parameter: 
<ul>
<li>
When the <i>pDacl</i> parameter points to a discretionary ACL and the <i>bDaclPresent</i> flag is TRUE, a discretionary ACL is specified and it must contain access-allowed ACEs to allow access to the object. </li>
<li>
When the <i>pDacl</i> parameter does not point to a discretionary ACL and the <i>bDaclPresent</i> flag is TRUE, a NULL discretionary ACL is specified. All access is allowed. </li>
<li>
When the <i>pDacl</i> parameter does not point to a discretionary ACL and the <i>bDaclPresent</i> flag is FALSE, a discretionary ACL can be provided for the object through an inheritance or default mechanism. </li>
</ul>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="acctrlow_0xik.htm">Low-Level Access-Control Overview</a>, <a href="acctrlow_6iyb.htm">Low-Level Access Control Functions</a>, <a href="accctrl_4h6a.htm"><b>ACL</b></a>, <a href="acctrlow_18oc.htm"><b>GetSecurityDescriptorDacl</b></a>, <a href="acctrlow_5fw2.htm"><b>InitializeSecurityDescriptor</b></a>, <a href="acctrlow_3mwi.htm"><b>IsValidSecurityDescriptor</b></a>, <a href="accctrl_6i5u.htm"><b>SECURITY_DESCRIPTOR</b></a>, <a href="acctrlow_7u5u.htm"><b>SECURITY_DESCRIPTOR_CONTROL</b></a>, <a href="acctrlow_3p2o.htm"><b>SetSecurityDescriptorGroup</b></a>, <a href="acctrlow_8fjm.htm"><b>SetSecurityDescriptorOwner</b></a>, <a href="acctrlow_4q0c.htm"><b>SetSecurityDescriptorSacl</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
