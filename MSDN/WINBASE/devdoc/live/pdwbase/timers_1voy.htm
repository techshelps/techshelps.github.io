<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Timer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_creating_a_timer"></a>Creating a Timer</h2>
<p>
A Win32-based application creates a timer by using the <a href="timers_0euq.htm"><b>SetTimer</b></a> function. A new timer starts timing the interval as soon as it is created. An application can change a timer's time-out value by using <b>SetTimer</b> and can destroy a timer by using the <a href="timers_88xe.htm"><b>KillTimer</b></a> function. To use system resources efficiently, applications should destroy timers that are no longer necessary. </p>
<p>
Each timer has a unique identifier. When creating a timer, an application can either specify an identifier or have the system create a unique value. The first parameter of a WM_TIMER message contains the identifier of the timer that posted the message. </p>
<p>
If you specify a window handle in the call to <a href="timers_0euq.htm"><b>SetTimer</b></a>, the application associates the timer with that window. Whenever the time-out value for the timer elapses, the system posts a <a href="timers_1w6q.htm">WM_TIMER</a> message to the window associated with the timer. If no window handle is given in the call to <b>SetTimer</b>, the application that created the timer must monitor its message queue for WM_TIMER messages and dispatch them to the appropriate window. If you specify a <b>TimerProc</b> callback function, the default window procedure calls the callback function when it processes WM_TIMER. Therefore, you need to dispatch messages in the calling thread, even when you use <b>TimerProc</b> instead of processing WM_TIMER. </p>
<p>&nbsp;</p></body>
</HTML>
