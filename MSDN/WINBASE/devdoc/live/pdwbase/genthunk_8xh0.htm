<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Loading the Win32-based DLL</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_loading_the_win32_based_dll_pt"></a>Loading the Win32-based DLL</h2>
<p>
You load the Win32-based DLL, <code>DLL32</code>, from <code>APP16</code> by using the <a href="genthunk_9hbo.htm"><b>LoadLibraryEx32W</b></a> function. </p>
<pre><code>// Load the Win32-based DLL from the 16-bit code
if( NULL == (ghLib = LoadLibraryEx32W( "dll32.dll", NULL, 0 )) ) 
{
    MessageBox( NULL, "Cannot load DLL32", "App16", MB_OK );
    return 0;
}
 </code></pre>
<p>
If you are isolating your thunking code into <code>DLL16</code>, you can put the call to <b>LoadLibraryEx32W</b> in the <b>LibMain</b> function of the <code>DLL16</code> code. </p>
<p>
The instance handle is stored in the following global variable:</p>
<pre><code>DWORD ghLib;
 </code></pre>
<p>
When linking the 16-bit code, you need to indicate that the generic thunking functions will be imported from the system kernel. For example, using Microsoft Visual C++, you would create an IMPORTS section in the module definition (.DEF) file for <code>APP16</code>, as follows. </p>
<pre><code>IMPORTS
    kernel.LoadLibraryEx32W
    kernel.FreeLibrary32W
    kernel.GetProcAddress32W
    kernel.GetVDMPointer32W
    kernel.CallProc32W
    kernel.CallProcEx32W</code></pre>
<p>&nbsp;</p></body>
</HTML>
