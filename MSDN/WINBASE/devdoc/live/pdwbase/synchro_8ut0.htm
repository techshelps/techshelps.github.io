<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetEvent</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setevent"></a>SetEvent</h1>
<p>
The <b>SetEvent</b> function sets the state of the specified event object to signaled. </p>
<pre><code><b>BOOL SetEvent(
  HANDLE</b><i> hEvent</i>   // handle to event object
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hEvent</i></dt>
<dd>
Handle to the event object. The <a href="synchro_8ub8.htm"><b>CreateEvent</b></a> or <a href="synchro_5myc.htm"><b>OpenEvent</b></a> function returns this handle. 
<p>
<b>Windows NT:</b> The handle must have EVENT_MODIFY_STATE access.  

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The state of a manual-reset event object remains signaled until it is set explicitly to the nonsignaled state by the <b>ResetEvent</b> function. Any number of waiting threads, or threads that subsequently begin wait operations for the specified event object by calling one of the <a href="synchro_5vqr.htm">wait functions</a>, can be released while the object's state is signaled. </p>
<p>
The state of an auto-reset event object remains signaled until a single waiting thread is released, at which time the system automatically sets the state to nonsignaled. If no threads are waiting, the event object's state remains signaled. </p>
<p>
<b>Windows CE:</b> Windows CE does not support waiting for a process or thread. Waiting on an invalid handle will return FALSE. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="synchro_4q3y.htm">Synchronization Overview</a>, <a href="synchro_08z7.htm">Synchronization Functions</a>, <a href="synchro_8ub8.htm"><b>CreateEvent</b></a>, <a href="synchro_5myc.htm"><b>OpenEvent</b></a>, <a href="synchro_1ylw.htm"><b>PulseEvent</b></a>, <a href="synchro_4f78.htm"><b>ResetEvent</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
