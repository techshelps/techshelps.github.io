<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Terminating a Conversation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_terminating_a_conversation"></a>Terminating a Conversation</h2>
<p>
Either the client or the server can issue a <a href="dde_5y79.htm">WM_DDE_TERMINATE</a> message to terminate a conversation at any time. Similarly, both the client and server applications should be prepared to receive this message at any time. An application must terminate all of its conversations before shutting down. </p>
<p>
In the following example, the application terminating the conversation posts a WM_DDE_TERMINATE message. </p>
<pre><code>PostMessage(hwndServerDDE, WM_DDE_TERMINATE, 
    PackDDElParam(WM_DDE_TERMINATE, (UINT) hwndClientDDE, 0), 0); 
 </code></pre>
<p>
This informs the other application that the sending application will send no further messages and the recipient can close its window. The recipient is expected in all cases to respond promptly by sending a <a href="dde_5y79.htm">WM_DDE_TERMINATE</a> message. The recipient must not send a negative, busy, or positive <a href="dde_678r.htm">WM_DDE_ACK</a> message. </p>
<p>
After an application has sent the WM_DDE_TERMINATE message to the partner in a DDE conversation, it must not respond to messages from that partner, since the partner might have destroyed the window to which the response would be sent. </p>
<p>
If an application receives a DDE message other than WM_DDE_TERMINATE after it has posted WM_DDE_TERMINATE, it should free all objects associated with the received messages except the data handles for <a href="dde_3kkh.htm">WM_DDE_DATA</a> or <a href="dde_27mt.htm">WM_DDE_POKE</a> messages that do <i>not</i> have the <b>fRelease</b> member set. </p>
<p>
When an application is about to terminate, it should end all active DDE conversations before completing processing of the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_destroy">
</object><a href=JavaScript:alink_1.Click()>WM_DESTROY</a> message. However, if an application does not end its active DDE conversations, the system will terminate any DDE conversations associated with a window when the window is destroyed. The following example shows how a server application terminates all DDE conversations. </p>
<pre><code>void TerminateConversations(hwndServerDDE) 
HWND hwndServerDDE; 
{ 
    HWND hwndClientDDE; 
 
    // Terminate each active conversation. 
 
    while (hwndClientDDE = GetNextLink(hwndClientDDE)) 
    { 
        SendTerminate(hwndServerDDE, hwndClientDDE); 
    } 
    return; 
} 
 
BOOL AtLeastOneLinkActive(VOID) 
{ 
    return TRUE; 
} 
 
HWND GetNextLink(hwndDummy) 
    HWND hwndDummy; 
{ 
    return (HWND) 1; 
} 
 
VOID SendTerminate(HWND hwndServerDDE, HWND hwndClientDDE) 
{ 
    return; 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
