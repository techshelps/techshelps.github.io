<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing, Mapping, and Sorting Characters</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_writing_mapping_and_sorting_characters"></a>Writing, Mapping, and Sorting Characters</h2>
<p>
Applications write end-user-defined characters to the screen or printer the same way as writing other characters, by using output functions such as <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_textout">
</object><a href=JavaScript:alink_1.Click()><b>TextOut</b></a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_exttextout">
</object><a href=JavaScript:alink_2.Click()><b>ExtTextOut</b></a>. These functions automatically retrieve character information from EUDC fonts if EUDC is enabled. When writing end-user-defined characters, the action of the text output function depends on the currently selected font. If the selected font is an integrated EUDC font, the function retrieves character information from that font. If the selected font is a DBCS TrueType font that has an associated typeface-aware EUDC font, the function retrieves information from the specified typeface-aware font. If the selected font does not have an associated typeface-aware font, the function retrieves information from the system default EUDC font. If the character is not in the system default EUDC font or there is no system default EUDC font, the function writes the default character defined by the selected font.</p>
<p>
Applications can map end-user-defined characters to and from Unicode by using the <a href="unicode_17si.htm"><b>MultiByteToWideChar</b></a> and <a href="unicode_2bj9.htm"><b>WideCharToMultiByte</b></a> functions. The <b>MultiByteToWideChar</b> function maps an end-user-defined character to a character position in the Unicode private use area. The <b>WideCharToMultiByte</b> function maps a character in the private use area to its multibyte character counterpart, if such a mapping exists. The code page specified in this function must contain an EUDC code range for the mapping to occur. If it does not, the function returns the default character for any characters in the Unicode private use area.</p>
<p>
Both <b>MultiByteToWideChar</b> and <b>WideCharToMultiByte</b> preserve the "round trip" mapping of end-user-defined characters from a code page to Unicode and back to the original code page. But these functions do not necessarily preserve mapping to other code pages. For example, if a character from code page 932 is mapped to Unicode, then mapped from Unicode to another code page with an EUDC range, it is likely that the original character will be mapped to a different end-user-defined character in the destination code page. Similarly, mapping a Unicode string to a code page that has an EUDC range may have unintended results. If the Unicode string contains a private-use code point, that code point may be mapped to an end-user-defined character whether or not the code point actually represents such a character. </p>
<p>
Applications can compare strings that contain end-user-defined characters by using the <b>CompareStringA</b> function. The function maps the characters to the Unicode end user zone before comparing character values. Applications can create a sort key for the string by using the <b>LCMapStringA</b> function and the LCMAP_SORTKEY value. This function maps characters to Unicode first. All characters in the private use area are sorted after all other Unicode characters. Within the area, characters are sorted in numerical order. If an application attempts to retrieve CTYPE ifnormation for an end-user-defined character by using the <a href="strings_57hd.htm"><b>GetStringTypeA</b></a> function, the function returns NULL for each character.</p>
<p>&nbsp;</p></body>
</HTML>
