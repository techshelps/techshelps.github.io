<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FindFirstFileEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_findfirstfileex"></a>FindFirstFileEx</h1>
<p>
The <b>FindFirstFileEx</b> function searches a directory for a file whose name and attributes match those specified in the function call.</p>
<pre><code><b>HANDLE FindFirstFileEx(
  LPCTSTR</b><i> lpFileName</i><b>,     </b>// pointer to the name of the file to 
                          // search for
<b>  FINDEX_INFO_LEVELS</b><i> fInfoLevelId</i><b>,</b>
<b>                          </b>// information level of the returned data
<b>  LPVOID</b><i> lpFindFileData</i><b>,  </b>// pointer to the returned information
<b>  FINDEX_SEARCH_OPS</b><i> fSearchOp</i><b>,</b>
<b>                          </b>// type of filtering to perform
<b>  LPVOID</b><i> lpSearchFilter</i><b>,  </b>// pointer to search criteria
<b>  DWORD</b><i> dwAdditionalFlags  </i>// additional search control flags
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpFileName</i></dt>
<dd>
Pointer to a null-terminated string that specifies a valid directory or path and filename, which can contain wildcard characters (* and ?).</dd>
<dt>
<i>fInfoLevelId</i></dt>
<dd>
Specifies a <a href="filesio_2xo2.htm"><b>FINDEX_INFO_LEVELS</b></a> enumeration type that gives the information level of the returned data.</dd>
<dt>
<i>lpFindFileData</i></dt>
<dd>
Pointer to the file data. The pointer type is determined by the level of information specified in the <i>fInfoLevelId</i> parameter.</dd>
<dt>
<i>fSearchOp</i></dt>
<dd>
Specifies a <a href="filesio_82uq.htm"><b>FINDEX_SEARCH_OPS</b></a> enumeration type that gives the type of filtering to perform beyond wildcard matching. </dd>
<dt>
<i>lpSearchFilter</i></dt>
<dd>
If the specified <i>fSearchOp</i> needs structured search information, <i>lpSearchFilter</i> points to the search criteria. At this time, none of the supported <i>fSearchOp</i> values require extended search information. Therefore, this pointer must be NULL.</dd>
<dt>
<i>dwAdditionalFlags</i></dt>
<dd>
Specifies additional flags for controlling the search. You can use the FIND_FIRST_EX_CASE_SENSITIVE flag for case-sensitive searches. The default search is case insensitive. At this time, no other flags are defined.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a search handle that can be used in a subsequent call to the <a href="filesio_4ndx.htm"><b>FindNextFile</b></a> or <a href="filesio_45d1.htm"><b>FindClose</b></a><b> </b>functions.</p>
<p>
If the function fails, the return value is INVALID_HANDLE_VALUE. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
The <b>FindFirstFileEx</b> function is provided to open a search handle and return information about the first file whose name matches the specified pattern and attributes. </p>
<p>
If the underlying file system does not support the specified type of filtering, other than directory filtering, <b>FindFirstFileEx</b> fails with the error ERROR_NOT_SUPPORTED. The application has to use <b>FINDEX_SEARCH_OPS</b> type FileExSearchNameMatch and perform its own filtering. </p>
<p>
Once established, the search handle can be used in the <a href="filesio_4ndx.htm"><b>FindNextFile</b></a> function to search for other files that match the same pattern with the same filtering being performed. When the search handle is no longer needed, it should be closed using the <a href="filesio_45d1.htm"><b>FindClose</b></a> function.</p>
<p>
The call </p>
<pre><code>FindFirstFileEx( lpFileName, 
                 FindExInfoStandard, 
                 lpFindData, 
                 FindExSearchNameMatch, 
                 NULL, 
                 0 );
 </code></pre>
<p>
is equivalent to the call</p>
<pre><code>FindFirstFile( lpFileName, lpFindData);
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="filesio_2xm7.htm">File I/O Overview</a>, <a href="filesio_3n5f.htm">File Functions</a>, <a href="filesio_2xo2.htm"><b>FINDEX_INFO_LEVELS</b></a>, <a href="filesio_82uq.htm"><b>FINDEX_SEARCH_OPS</b></a>, <a href="filesio_4qcl.htm"><b>FindFirstFile</b></a>,<b> <a href="filesio_4ndx.htm">FindNextFile</a></b>, <a href="filesio_45d1.htm"><b>FindClose</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
