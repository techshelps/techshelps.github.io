<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetThreadDesktop</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getthreaddesktop"></a>GetThreadDesktop</h1>
<p>
The <b>GetThreadDesktop</b> function returns a handle to the desktop associated with a specified thread.</p>
<pre><code><b>HDESK GetThreadDesktop(
  DWORD</b><i> dwThreadId</i>   // thread identifier
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwThreadId</i></dt>
<dd>
Handle to the thread for which to return the desktop handle. The <a href="prothred_4nfo.htm"><b>GetCurrentThreadId</b></a> and <a href="prothred_9dpv.htm"><b>CreateProcess</b></a> functions return thread identifiers.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a handle to the desktop associated with the specified thread. You do not need to call the <a href="winsta_99v4.htm"><b>CloseDesktop</b></a> function to close the returned handle.</p>
<p>
If the function fails, the return value is NULL. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The system associates a desktop with a thread when that thread is created. A thread can use the <a href="winsta_9v3k.htm"><b>SetThreadDesktop</b></a> function to change its desktop. The desktop associated with a thread must be on the window station associated with the thread's process.</p>
<p>
The calling process can use the returned handle in calls to the <b>GetUserObjectInformation</b>, <b>GetUserObjectSecurity</b>, <b>SetUserObjectInformation</b>, and <b>SetUserObjectSecurity</b> functions. </p>
<p>
<b>Windows 95 and Windows 98:</b> The system does not support multiple desktops, so <b>GetThreadDesktop</b> always returns the same value.</p>
<p>
<b>Windows NT version 3.51:</b> A Win32 service does not have an associated window station or desktop until the service calls a USER or GDI function that interacts with the desktop. If a service calls <b>GetThreadDesktop</b> before it has an associated desktop, the return value is NULL. After a service interacts with the desktop, the return value is a valid desktop handle.</p>
<p>
<b>Windows NT:</b> A Win32 service is created with an associated window station and desktop, so there is no need to call a USER or GDI function to connect the service to a window station and desktop. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="winsta_15v7.htm">Window Stations and Desktops Overview</a>, <a href="winsta_9zeb.htm">Window Station and Desktop Functions</a>, <a href="prothred_4nfo.htm"><b>GetCurrentThreadId</b></a>, <a href="winsta_1c8e.htm"><b>GetProcessWindowStation</b></a>, <a href="winsta_72ni.htm"><b>GetUserObjectInformation</b></a>, <a href="acctrlow_1czd.htm"><b>GetUserObjectSecurity</b></a>, <a href="winsta_34tq.htm"><b>SetProcessWindowStation</b></a>, <a href="winsta_9v3k.htm"><b>SetThreadDesktop</b></a>, <a href="winsta_1wku.htm"><b>SetUserObjectInformation</b></a>, <a href="acctrlow_92wp.htm"><b>SetUserObjectSecurity</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
