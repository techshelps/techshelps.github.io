<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a File-Mapping Object</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_creating_a_file_mapping_object"></a>Creating a File-Mapping Object</h2>
<p>
The first step in mapping a file is to open the file by calling the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function. To ensure that other processes cannot write to the portion of the file that is mapped, you should open the file with exclusive access. In addition, the file handle should remain open until the process no longer needs the file-mapping object. An easy way to obtain exclusive access is to specify zero in the <i>fdwShareMode</i> parameter of <b>CreateFile</b>. The handle returned by <b>CreateFile</b> is used by the <a href="fmap3_79wn.htm"><b>CreateFileMapping</b></a> function to create a file-mapping object. </p>
<p>
The <b>CreateFileMapping</b> function returns a handle to the file-mapping object. This handle will be used when <a href="fmap3_4j7b.htm">creating a file view</a> so that you can access the shared memory. When you call <b>CreateFileMapping</b>, you specify an object name, the number of bytes to be mapped from the file, and the read/write permission for the mapped memory. The first process that calls <b>CreateFileMapping</b> creates the file-mapping object. Processes calling <b>CreateFileMapping</b> for an existing object receive a handle to the existing object. You can tell whether or not a successful call to <b>CreateFileMapping</b> created or opened the file-mapping object by calling the <a href="errors_3uwi.htm"><b>GetLastError</b></a> function. <b>GetLastError</b> returns NO_ERROR to the creating process and ERROR_ALREADY_EXISTS to subsequent processes. </p>
<p>
The <a href="fmap3_79wn.htm"><b>CreateFileMapping</b></a> function fails if the access flags conflict with those specified when the <a href="filesio_7wmd.htm"><b>CreateFile</b></a> function opened the file. For example, to read and write to the file: 
<ul>
<li>
Specify the GENERIC_READ and GENERIC_WRITE values in the <i>fdwAccess </i>parameter of <b>CreateFile</b>.</li>
<li>
Specify the PAGE_READWRITE value in the <i>fdwProtect</i> parameter of <b>CreateFileMapping</b>.</li>
</ul>
<h4>File Mapping Size</h4>
<p>
The size of the file-mapping object is independent of the size of the file being mapped. However, if the file-mapping object is larger than the file, the system expands the file before <b>CreateFileMapping</b> returns. If the file-mapping object is smaller than the file, the system maps only the specified number of bytes from the file.</p>
<p>
The <i>dwMaximumSizeHigh</i> and <i>dwMaximumSizeLow</i> parameters of <a href="fmap3_79wn.htm"><b>CreateFileMapping</b></a> allow you to specify the number of bytes to be mapped from the file. </p>
<p class=indent1>
<b>Windows 95:</b> The <i>dwMaximumSizeHigh</i> parameter is not used because it is not supported by the 32-bit file system. The value should be zero.</p>
<p>
When you do not want the size of the file to change (for example, when mapping read-only files), call <b>CreateFileMapping</b> and specify zero for both <i>dwMaximumSizeHigh</i> and <i>dwMaximumSizeLow</i>. Doing this creates a file-mapping object exactly the same size as the file. Otherwise, you must calculate or estimate the size of the finished file because file-mapping objects are static in size; once created, their size cannot increase or decrease. </p>
<p class=indent1>
<b>Windows NT:</b> The size of a file-mapping object backed by a named file is limited by disk space. The size of a file view is limited to the largest available contiguous block of unreserved virtual memory. This is at most 2 GB minus the virtual memory already reserved by the process. </p>
<p class=indent1>
<b>Windows 95:</b> The size of a file-mapping object backed by a named file is also limited by disk space. The size of a file view is limited to the largest available contiguous block of unreserved virtual memory in the shared address space. This is at most 1 GB minus the virtual memory in use by other processes, such as 16-bit Windows-based applications or Win32-based applications using file mapping.</p>
<p>&nbsp;</p></body>
</HTML>
