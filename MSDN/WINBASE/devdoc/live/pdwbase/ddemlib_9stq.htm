<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Advise Transaction</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_advise_transaction"></a>Advise Transaction</h3>
<p>
A client application can use the DDEML to establish one or more links to items in a server application. When such a link has been established, the server sends periodic updates about the linked item to the client (typically, whenever the value of the item associated with the server application changes). Linking establishes an advise loop between the two applications that remains in place until the client ends it. </p>
<p>
There are two kinds of advise loops: "hot" and "warm." In a hot advise loop, the server immediately sends a data handle that identifies the changed value. In a warm advise loop, the server notifies the client that the value of the item has changed but does not send the data handle until the client requests it. </p>
<p>
A client can request a hot advise loop with a server by specifying the <a href="ddemlib_7nqs.htm">XTYP_ADVSTART</a> transaction type in a call to <a href="ddemlib_1gha.htm"><b>DdeClientTransaction</b></a>. To request a warm advise loop, the client must combine the XTYPF_NODATA flag with the XTYP_ADVSTART transaction type. In either event, the DDEML passes the XTYP_ADVSTART transaction to the server's DDE callback function. The server's DDE callback function should examine the parameters that accompany the XTYP_ADVSTART transaction (including the requested format, topic name, and item name) and then return TRUE to allow the advise loop or FALSE to deny it. </p>
<p>
After an advise loop has been established, the server application should call the <a href="ddemlib_8hb9.htm"><b>DdePostAdvise</b></a> function whenever the value of the item associated with the requested item name changes. This call results in an <a href="ddemlib_0435.htm">XTYP_ADVREQ</a> transaction being sent to the server's own DDE callback function. The server's DDE callback function should return a data handle that identifies the new value of the data item. The DDEML then notifies the client that the specified item has changed by sending the <a href="ddemlib_89cx.htm">XTYP_ADVDATA</a> transaction to the client's DDE callback function. </p>
<p>
If the client requested a hot advise loop, the DDEML passes the data handle for the changed item to the client during the XTYP_ADVDATA transaction. Otherwise, the client can send an <a href="ddemlib_73g4.htm">XTYP_REQUEST</a> transaction to obtain the data handle. </p>
<p>
It is possible for a server to send updates faster than a client can process the new data. The speed of updates can be a problem for a client that must perform lengthy processing operations on the data. In this case, the client should specify the XTYPF_ACKREQ flag when it requests an advise loop. This flag causes the server to wait for the client to acknowledge that it has received and processed a data item before the server sends the next data item. Advise loops that are established with the XTYPF_ACKREQ flag are more robust with fast servers but may occasionally miss updates. Advise loops established without the XTYPF_ACKREQ flag are guaranteed not to miss updates as long as the client keeps up with the server. </p>
<p>
A client can end an advise loop by specifying the <a href="ddemlib_478w.htm">XTYP_ADVSTOP</a> transaction type in a call to <a href="ddemlib_1gha.htm"><b>DdeClientTransaction</b></a>. </p>
<p>
If a server does not support advise loops, it should specify the CBF_FAIL_ADVISES filter flag in the <a href="ddemlib_2v6t.htm"><b>DdeInitialize</b></a> function. This flag prevents the DDEML from sending the <a href="ddemlib_7nqs.htm">XTYP_ADVSTART</a> and XTYP_ADVSTOP transactions to the server. </p>
<p>&nbsp;</p></body>
</HTML>
