<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ReadFileScatter</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_readfilescatter"></a>ReadFileScatter</h1>
<p>
The <b>ReadFileScatter</b> function reads data from a file and stores the data into a set of buffers. </p>
<p>
The <b>ReadFileScatter </b>function starts reading data from the file at a position specified by an <a href="synchro_8tf6.htm"><b>OVERLAPPED</b></a> structure. </p>
<p>
The <b>ReadFileScatter</b> function operates asynchronously.</p>
<pre><code><b>BOOL ReadFileScatter(
  HANDLE</b><i> hFile</i><b>,              </b>// handle to a file to read data from
<b>  FILE_SEGMENT_ELEMENT aSegmentArray</b><i> []</i><b>,</b>
<b>                             </b>// pointer to an array of buffer 
                             // pointers
<b>  DWORD</b><i> nNumberOfBytesToRead</i><b>,  </b>// number of bytes to read
<b>  LPDWORD</b><i> lpReserved</i><b>,        </b>// reserved; must be NULL
<b>  LPOVERLAPPED</b><i> lpOverlapped  </i>// pointer to an asynchronous I/O data 
                             // structure
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFile</i></dt>
<dd>
An open handle to the file to read from. 
<p>
This file handle must have been created using GENERIC_READ to specify read access to the file, FILE_FLAG_OVERLAPPED to specify asynchronous I/O, and FILE_FLAG_NO_BUFFERING to specify non-cached I/O.
</dd>
<dt>
<i>aSegmentArray</i></dt>
<dd>
Pointer to an array of <b>FILE_SEGMENT_ELEMENT </b>pointers to buffers. The function stores the data it reads from the file into this set of buffers. 
<p>
Each buffer should be the size of a system memory page. Each buffer should be aligned on a system memory page size boundary.

<p>
A <b>FILE_SEGMENT_ELEMENT</b> pointer is a 64-bit value. The <b>ReadFileScatter</b> function uses all 64 bits. Since the operating systems do not currently support 64-bit memory addressing, you must explicitly zero the upper 32 bits of each <b>FILE_SEGMENT_ELEMENT</b> pointer.

<p>
The function stores the data into the buffers in a sequential manner: it stores data into the first buffer, then into the second buffer, then into the next, filling each buffer, until there is no more data or there are no more buffers.

<p>
The final element of the array should be a NULL pointer.
</dd>
<dt>
<i>nNumberOfBytesToRead</i></dt>
<dd>
Specifies the number of bytes to read from the file.</dd>
<dt>
<i>lpReserved</i></dt>
<dd>
This parameter is reserved for future use. You must set it to NULL.</dd>
<dt>
<i>lpOverlapped</i></dt>
<dd>
Pointer to an <a href="synchro_8tf6.htm"><b>OVERLAPPED</b></a> data structure.
<p>
The <b>ReadFileScatter</b> function requires a valid <b>OVERLAPPED</b> structure. The <i>lpOverlapped</i> parameter cannot be NULL. 

<p>
The <b>ReadFileScatter</b> function starts reading data from the file at a position specified by the <b>Offset</b> and <b>OffsetHigh</b> members of the <b>OVERLAPPED</b> structure.

<p>
The <b>ReadFileScatter</b> function may return before the read operation has completed. In that case, the <b>ReadFileScatter</b> function returns the value zero, and the <a href="errors_3uwi.htm"><b>GetLastError</b></a> function returns the value ERROR_IO_PENDING. This asynchronous operation of <b>ReadFileScatter</b> lets the calling process continue while the read operation completes. You can call the <a href="synchro_75v8.htm"><b>GetOverlappedResult</b></a>, <a href="synchro_738k.htm"><b>HasOverlappedIoCompleted</b></a>, or <a href="filesio_071v.htm"><b>GetQueuedCompletionStatus</b></a> function to obtain information about the completion of the read operation. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call the <a href="errors_3uwi.htm"><b>GetLastError</b></a> function.</p>
<p>
If the function attempts to read past the end of the file, the function returns zero, and <b>GetLastError</b> returns ERROR_HANDLE_EOF.</p>
<p>
If the function returns before the read operation has completed, the function returns zero, and <b>GetLastError</b> returns ERROR_IO_PENDING.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP2 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="filesio_2xm7.htm">File I/O Overview</a>, <a href="filesio_3n5f.htm">File Functions</a>, <a href="filesio_7wmd.htm"><b>CreateFile</b></a>, <a href="synchro_75v8.htm"><b>GetOverlappedResult</b></a>, <a href="filesio_071v.htm"><b>GetQueuedCompletionStatus</b></a>, <a href="synchro_738k.htm"><b>HasOverlappedIoCompleted</b></a>, <a href="synchro_8tf6.htm"><b>OVERLAPPED</b></a>, <a href="filesio_39id.htm"><b>ReadFile</b></a>, <a href="filesio_0660.htm"><b>ReadFileEx</b></a>, <b>ReadFileVlm</b>, <a href="filesio_55iq.htm"><b>WriteFileGather</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
