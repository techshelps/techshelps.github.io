<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AddAccessDeniedObjectAce</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_addaccessdeniedobjectace"></a>AddAccessDeniedObjectAce</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>AddAccessDeniedObjectAce</b> function adds an access-denied ACE to the end of a DACL. The new ACE can deny access to an object, or to a property set or property on an object. You can also use <b>AddAccessDeniedObjectAce</b> to add an ACE that only a specified type of child object can inherit.</p>
<pre><code><b>BOOL AddAccessDeniedObjectAce(
  PACL</b><i> pAcl</i><b>,             </b>// pointer to an ACL
<b>  DWORD</b><i> dwAceRevision</i><b>,   </b>// ACL revision level
<b>  DWORD</b><i> AceFlags</i><b>,        </b>// ACE inheritance flags
<b>  DWORD</b><i> AccessMask</i><b>,      </b>// access mask for the new ACE
<b>  GUID </b><i>*ObjectTypeGuid</i><b>,</b>  // type of object protected by the ACE
<b>  GUID </b><i>*InheritedObjectTypeGuid</i><b>,</b><i>  </i>
                         // type of object that can inherit the ACE
<b>  PSID</b><i> pSid      </i><b>        </b>// SID of the trustee for the new ACE
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pAcl</i></dt>
<dd>
Pointer to a DACL. The <b>AddAccessDeniedObjectAce</b> function adds an access-denied ACE to the end of this DACL. The ACE is in the form of an <a href="acctrlow_0642.htm"><b>ACCESS_DENIED_OBJECT_ACE</b></a> structure. </dd>
<dt>
<i>dwAceRevision</i></dt>
<dd>
Specifies the revision level of the DACL being modified. This value must be ACL_REVISION_DS. If the DACL's revision level is lower than ACL_REVISION_DS, the function changes it to ACL_REVISION_DS. </dd>
<dt>
<i>AceFlags</i></dt>
<dd>
A set of bit flags that control ACE inheritance. The function sets these flags in the <b>AceFlags</b> member of the <a href="accctrl_0gvm.htm"><b>ACE_HEADER</b></a> structure of the new ACE. This parameter can be a combination of the following values. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=16%>Value</th>
<th align=left width=84%>Meaning</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%>CONTAINER_INHERIT_ACE</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>The ACE is inherited by container objects.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>INHERIT_ONLY_ACE</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>The ACE does not apply to the object to which the ACL is assigned, but it can be inherited by child objects.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>INHERITED_ACE</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>Indicates an inherited ACE. This flag allows operations that change the security on a tree of objects to modify inherited ACEs, while not changing ACEs that were directly applied to the object. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>NO_PROPAGATE_INHERIT_ACE</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>The OBJECT_INHERIT_ACE and CONTAINER_INHERIT_ACE bits are not propagated to an inherited ACE.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>OBJECT_INHERIT_ACE</td>
</tr>
<tr valign=top>
<td width=16%></td>
<td width=84%>The ACE is inherited by noncontainer objects.</td>
</tr>
</table><br>

</dd>
<dt>
<i>AccessMask</i></dt>
<dd>
A set of bit flags that use the <a href="accctrl_1vci.htm"><b>ACCESS_MASK</b></a> format to specify the access rights that the new ACE denies to the specified SID. This mask must use the <a href="accctrl_3wdw.htm">Windows NT access mask format</a>, not the <a href="accctrl_6gfo.htm">provider-independent access-mask format</a>. </dd>
<dt>
<i>ObjectTypeGuid</i></dt>
<dd>
Pointer to a <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_guid">
</object><a href=JavaScript:alink_1.Click()><b>GUID</b></a> structure that identifies the type of object, property set, or property protected by the new ACE. If this parameter is NULL, the new ACE protects the object to which the ACL is assigned.</dd>
<dt>
<i>InheritedObjectTypeGuid</i></dt>
<dd>
Pointer to a <b>GUID</b> structure that identifies the type of object that can inherit the new ACE. If this parameter is non-NULL, only the specified object type can inherit the ACE. If NULL, any type of child object can inherit the ACE. In either case, inheritance is also controlled by the value of the <i>AceFlags</i> parameter, as well as by any protection against inheritance placed on the child objects.</dd>
<dt>
<i>pSid</i></dt>
<dd>
Pointer to a <a href="accctrl_5lyq.htm"><b>SID</b></a> structure that identifies the user, group, or logon session to which the new ACE grants access.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. If the <i>AceFlags</i> parameter specifies invalid flags, <b>GetLastError</b> returns ERROR_INVALID_FLAGS.</p>
<h4>Remarks</h4>
<p>
If both <i>ObjectTypeGuid</i> and <i>InheritedObjectTypeGuid</i> are NULL, use the <b>AddAccessDeniedAceEx</b> function rather than <b>AddAccessDeniedObjectAce</b>. This is suggested because an <b>ACCESS_DENIED_ACE</b> is smaller and more efficient than an <b>ACCESS_DENIED_OBJECT_ACE</b>.</p>
<p>
Although the <b>AddAccessDeniedObjectAce</b> function adds the new ACE to the end of the ACL, access-denied ACEs should appear at the beginning of an ACL. The caller must ensure that ACEs are added to the DACL in the correct order. For more information, see <a href="accctrl_2hik.htm">Order of ACEs in a DACL</a>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="acctrlow_0xik.htm">Low-Level Access-Control Overview</a>, <a href="acctrlow_6iyb.htm">Low-Level Access Control Functions</a>, <a href="acctrlow_7she.htm"><b>ACCESS_DENIED_ACE</b></a>, <a href="acctrlow_0642.htm"><b>ACCESS_DENIED_OBJECT_ACE</b></a>, <a href="accctrl_0gvm.htm"><b>ACE_HEADER</b></a>, <a href="accctrl_4h6a.htm"><b>ACL</b></a>, <a href="acctrlow_5d7p.htm"><b>AddAccessAllowedObjectAce</b></a>, <a href="acctrlow_1bjs.htm"><b>AddAccessDeniedAceEx</b></a>, <a href="acctrlow_9wo6.htm"><b>AddAuditAccessObjectAce</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
