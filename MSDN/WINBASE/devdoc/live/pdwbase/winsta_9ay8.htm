<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateDesktop</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_createdesktop"></a>CreateDesktop</h1>
<p>
The <b>CreateDesktop</b> function creates a new desktop on the window station associated with the calling process. It returns a handle that can be used to access the new desktop. The calling process must have an associated window station, either assigned by the system at process creation time or set by <a href="winsta_34tq.htm"><b>SetProcessWindowStation</b></a>. A desktop is a secure object contained within a window station object. A desktop has a logical display surface and contains windows, menus, and hooks.</p>
<pre><code><b>HDESK CreateDesktop(
  LPCTSTR</b><i> lpszDesktop</i><b>,    </b>// name of the new desktop
<b>  LPCTSTR</b><i> lpszDevice</i><b>,     </b>// reserved; must be NULL.
<b>  LPDEVMODE</b><i> pDevMode</i><b>,     </b>// reserved; must be NULL
<b>  DWORD</b><i> dwFlags</i><b>,          </b>// flags to control interaction with other 
                          // applications
<b>  DWORD</b><i> dwDesiredAccess</i><b>,  </b>// specifies access of returned handle
<b>  LPSECURITY_ATTRIBUTES</b><i> lpsa  </i>// specifies security attributes of 
                              // the desktop
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpszDesktop</i></dt>
<dd>
Pointer to a null-terminated string specifying the name of the desktop to be created. Desktop names are case-insensitive and may not contain backslash characters (\).</dd>
<dt>
<i>lpszDevice</i></dt>
<dd>
Reserved; must be NULL. The desktop uses the default display driver loaded at boot time.</dd>
<dt>
<i>pDevMode</i></dt>
<dd>
Reserved; must be NULL.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
A bit flag parameter that controls how the calling application will cooperate with other applications on the desktop. This parameter can specify zero or the following value:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Value</th>
<th align=left width=57%>Description</th>
</tr>
<tr valign=top>
<td width=43%>DF_ALLOWOTHERACCOUNTHOOK</td>
<td width=57%>Allows processes running in other accounts on the desktop to set hooks in this process.</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwDesiredAccess</i></dt>
<dd>
Specifies the access rights the returned handle has to the desktop. This parameter must include the DESKTOP_CREATEWINDOW flag because internally <b>CreateDesktop</b> uses the handle to create a window. In addition, you can specify any of the standard access rights, such as READ_CONTROL or WRITE_DAC, and a combination of the following desktop-specific access rights.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=46%>Value</th>
<th align=left width=54%>Description</th>
</tr>
<tr valign=top>
<td width=46%>DESKTOP_CREATEMENU</td>
<td width=54%>Required to create a menu on the desktop.</td>
</tr>
<tr valign=top>
<td width=46%>DESKTOP_CREATEWINDOW</td>
<td width=54%>Required to create a window on the desktop.</td>
</tr>
<tr valign=top>
<td width=46%>DESKTOP_ENUMERATE</td>
<td width=54%>Required for the desktop to be enumerated.</td>
</tr>
<tr valign=top>
<td width=46%>DESKTOP_HOOKCONTROL</td>
<td width=54%>Required to establish any of the window hooks.</td>
</tr>
<tr valign=top>
<td width=46%>DESKTOP_JOURNALPLAYBACK</td>
<td width=54%>Required to perform journal playback on the desktop.</td>
</tr>
<tr valign=top>
<td width=46%>DESKTOP_JOURNALRECORD</td>
<td width=54%>Required to perform journal recording on the desktop.</td>
</tr>
<tr valign=top>
<td width=46%>DESKTOP_READOBJECTS</td>
<td width=54%>Required to read objects on the desktop.</td>
</tr>
<tr valign=top>
<td width=46%>DESKTOP_SWITCHDESKTOP</td>
<td width=54%>Required to activate the desktop using the <a href="winsta_0a7k.htm"><b>SwitchDesktop</b></a> function.</td>
</tr>
<tr valign=top>
<td width=46%>DESKTOP_WRITEOBJECTS</td>
<td width=54%>Required to write objects on the desktop.</td>
</tr>
</table><br>

</dd>
<dt>
<i>lpsa</i></dt>
<dd>
Pointer to a <a href="accctrl_8gs2.htm"><b>SECURITY_ATTRIBUTES</b></a> structure that determines whether the returned handle can be inherited by child processes. If <i>lpsa</i> is NULL, the handle cannot be inherited. 
<p>
The <b>lpSecurityDescriptor</b> member of the structure specifies a security descriptor for the new desktop. If <i>lpsa</i> is NULL, the desktop inherits its security descriptor from the parent window station. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a handle to the newly created desktop. If the specified desktop already exists, the function succeeds and returns a handle to the existing desktop. When you are finished using the handle, call the <a href="winsta_99v4.htm"><b>CloseDesktop</b></a> function to close it.</p>
<p>
If the function fails, the return value is NULL. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
The<b> CreateDesktop</b> function returns a handle that can be used to access the desktop.</p>
<p>
If the <i>dwDesiredAccess</i> parameter specifies the READ_CONTROL, WRITE_DAC, or WRITE_OWNER standard access rights to access the security descriptor of the desktop object, you must also request the DESKTOP_READOBJECTS and DESKTOP_WRITEOBJECTS access rights.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.51 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="winsta_15v7.htm">Window Stations and Desktops Overview</a>, <a href="winsta_9zeb.htm">Window Station and Desktop Functions</a>, <a href="winsta_99v4.htm"><b>CloseDesktop</b></a>, <a href="accctrl_8gs2.htm"><b>SECURITY_ATTRIBUTES</b></a>, <a href="winsta_34tq.htm"><b>SetProcessWindowStation</b></a>, <a href="winsta_0a7k.htm"><b>SwitchDesktop</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
