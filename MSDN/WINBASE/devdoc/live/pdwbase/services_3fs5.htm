<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ControlService</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_controlservice"></a>ControlService</h1>
<p>
The <b>ControlService</b> function sends a control code to a Win32-based service. </p>
<pre><code><b>BOOL ControlService(
  SC_HANDLE</b><i> hService</i><b>,  </b>// handle to service
<b>  DWORD</b><i> dwControl</i><b>,     </b>// control code
<b>  LPSERVICE_STATUS</b><i> lpServiceStatus</i> 
                       // pointer to service status structure
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hService</i></dt>
<dd>
Handle to the service. This handle is returned by the <a href="services_8isl.htm"><b>OpenService</b></a> or <a href="services_3p9h.htm"><b>CreateService</b></a> function. The access required for this handle depends on the <i>dwControl</i> code requested. </dd>
<dt>
<i>dwControl</i></dt>
<dd>
Specifies the requested control code. This value can be one of the standard control codes in the following table: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>Value</th>
<th align=left width=53%>Meaning</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=47%>SERVICE_CONTROL_STOP</td>
<td width=53%>Requests the service to stop. The <i>hService</i> handle must have SERVICE_STOP access.</td>
</tr>
<tr valign=top>
<td width=47%>SERVICE_CONTROL_PAUSE</td>
<td width=53%>Requests the service to pause. The <i>hService</i> handle must have SERVICE_PAUSE_CONTINUE access.</td>
</tr>
<tr valign=top>
<td width=47%>SERVICE_CONTROL_<br>
CONTINUE</td>
<td width=53%>Requests the paused service to resume. The <i>hService</i> handle must have SERVICE_PAUSE_CONTINUE access.</td>
</tr>
<tr valign=top>
<td width=47%>SERVICE_CONTROL_<br>
INTERROGATE</td>
<td width=53%>Requests the service to update immediately its current status information to the service control manager. The <i>hService</i> handle must have SERVICE_INTERROGATE access.</td>
</tr>
<tr valign=top>
<td width=47%> SERVICE_CONTROL_<br>
SHUTDOWN</td>
<td width=53%>The <b>ControlService</b> function fails if this control code is specified.</td>
</tr>
</table><br>


<p>
This value can also be a user-defined control code, as described in the following table: 

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=36%>Value</th>
<th align=left width=64%>Meaning </th>
</tr>
<tr valign=top>
<td width=36%>Range 128 to 255.</td>
<td width=64%>The service defines the action associated with the control code. The <i>hService</i> handle must have SERVICE_USER_DEFINED_CONTROL access. </td>
</tr>
</table><br>

</dd>
<dt>
<i>lpServiceStatus</i></dt>
<dd>
Pointer to a <a href="services_9s36.htm"><b>SERVICE_STATUS</b></a> structure to receive the latest service status information. The information returned reflects the most recent status that the service reported to the service control manager. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Errors</h4>
<p>
The following error codes can be set by the service control manager. Other error codes can be set by the registry functions that are called by the service control manager. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=12%>Value</th>
<th align=left width=88%>Meaning</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%>ERROR_ACCESS_DENIED</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%>The specified handle was not opened with the necessary access.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>ERROR_DEPENDENT_SERVICES_RUNNING</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%>The service cannot be stopped because other running services are dependent on it.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>ERROR_INVALID_SERVICE_CONTROL</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%>The requested control code is not valid, or it is unacceptable to the service.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>ERROR_SERVICE_CANNOT_ACCEPT_CTRL</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%>The requested control code cannot be sent to the service because the state of the service is SERVICE_STOPPED, SERVICE_START_PENDING, or SERVICE_STOP_PENDING.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>ERROR_SERVICE_NOT_ACTIVE</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%>The service has not been started.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>ERROR_SERVICE_REQUEST_TIMEOUT</td>
</tr>
<tr valign=top>
<td width=12%></td>
<td width=88%>The service did not respond to the start request in a timely fashion.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <b>ControlService</b> function asks the service control manager to send the requested control code to the service. The service control manager sends the code if the service accepts the control and if the service is in a state in which a control can be sent to it. You cannot stop and start a service unless the security descriptor allows you to. The default security descriptor allows LocalSystem, Administrators, and Power Users to stop and start services. To change the security descriptor of a service, use <a href="acctrlow_2jcp.htm"><b>SetServiceObjectSecurity</b></a>. </p>
<p>
The <a href="services_8coj.htm"><b>QueryServiceStatus</b></a> or function returns a <a href="services_9s36.htm"><b>SERVICE_STATUS</b></a> structure whose <b>dwCurrentState</b> and <b>dwControlsAccepted</b> members indicate the current state and controls accepted by a running service. All running services accept the SERVICE_CONTROL_INTERROGATE control code by default. Each service specifies the other control codes that it accepts when it calls the <a href="services_90oj.htm"><b>SetServiceStatus</b></a> function to report its status. A service should always accept these codes when it is running, no matter what it is doing. </p>
<p>
The following table shows the action of the service control manager in each of the possible service states: </p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=37%>Service state</th>
<th align=left width=13%>Stop</th>
<th align=left width=50%>Other controls</th>
</tr>
<tr valign=top>
<td width=37%>STOPPED</td>
<td width=13%>(c)</td>
<td width=50%>(c) </td>
</tr>
<tr valign=top>
<td width=37%>STOP_PENDING</td>
<td width=13%>(b)</td>
<td width=50%>(b) </td>
</tr>
<tr valign=top>
<td width=37%>START_PENDING</td>
<td width=13%>(a)</td>
<td width=50%>(b) </td>
</tr>
<tr valign=top>
<td width=37%>RUNNING</td>
<td width=13%>(a)</td>
<td width=50%>(a) </td>
</tr>
<tr valign=top>
<td width=37%>CONTINUE_PENDING</td>
<td width=13%>(a)</td>
<td width=50%>(a) </td>
</tr>
<tr valign=top>
<td width=37%>PAUSE_PENDING</td>
<td width=13%>(a)</td>
<td width=50%>(a) </td>
</tr>
<tr valign=top>
<td width=37%>PAUSED</td>
<td width=13%>(a)</td>
<td width=50%>(a) </td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=9%>(a)</td>
<td width=91%>If the service accepts this control code, send the request to the service; otherwise, <b>ControlService</b> returns zero and <b>GetLastError</b> returns ERROR_INVALID_SERVICE_CONTROL. </td>
</tr>
<tr valign=top>
<td width=9%>(b)</td>
<td width=91%>The service is not in a state in which a control can be sent to it, so <b>ControlService</b> returns zero and <b>GetLastError</b> returns ERROR_SERVICE_CANNOT_ACCEPT_CTRL. </td>
</tr>
<tr valign=top>
<td width=9%>(c)</td>
<td width=91%>The service is not active, so <b>ControlService</b> returns zero and <b>GetLastError</b> returns ERROR_SERVICE_NOT_ACTIVE. </td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winsvc.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="services_0p0z.htm">Services Overview</a>, <a href="services_2uwj.htm">Service Functions</a>, <a href="services_3p9h.htm"><b>CreateService</b></a>, <a href="services_8isl.htm"><b>OpenService</b></a>, <a href="services_8coj.htm"><b>QueryServiceStatus</b></a>, <a href="acctrlow_2jcp.htm"><b>SetServiceObjectSecurity</b></a>, <a href="services_90oj.htm"><b>SetServiceStatus</b></a>, <a href="services_9s36.htm"><b>SERVICE_STATUS</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
