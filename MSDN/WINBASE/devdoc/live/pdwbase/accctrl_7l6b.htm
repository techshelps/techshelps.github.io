<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interaction Between Threads and Securable Objects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_interaction_between_threads_and_securable_objects"></a>Interaction Between Threads and Securable Objects</h3>
<p>
When a thread attempts to use a securable object, the system gets the user and group SIDs from the thread's access token. The system checks the object's DACL, looking for ACEs that apply to these SIDs. The system checks each ACE until access is either granted or denied or until there are no more ACEs to check. Conceivably, an ACL could have several ACEs that apply to the token's SIDs. And, if this occurs, the access rights granted by each ACE accumulate. For example, if one ACE grants read access to a group and another ACE grants write access to a user who is a member of the group, the user can have both read and write access to the object. </p>
<p>
The following illustration shows the relationship between these blocks of security information:</p>
<p>
<img src="images/cssec_02.gif" border=0> </p>
<p>&nbsp;</p></body>
</HTML>
