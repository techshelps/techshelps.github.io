<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handler</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_handler"></a>Handler</h1>
<p>
A <b>Handler</b> function is an application-defined function used with the <a href="services_7t0y.htm"><b>RegisterServiceCtrlHandler</b></a> function. A service program uses it as the control handler function of a particular Win32-based service. The <b>LPHANDLER_FUNCTION</b> type defines a pointer to this function. <b>Handler</b> is a placeholder for the application-defined name. </p>
<pre><code><b>VOID WINAPI Handler(
  DWORD</b><i> fdwControl</i>   // requested control code
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>fdwControl</i></dt>
<dd>
Specifies the requested control code. This value can be one of the standard control codes in the following table: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>Value</th>
<th align=left width=53%>Meaning</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=47%>SERVICE_CONTROL_STOP</td>
<td width=53%>Requests the service to stop. </td>
</tr>
<tr valign=top>
<td width=47%>SERVICE_CONTROL_PAUSE</td>
<td width=53%>Requests the service to pause. </td>
</tr>
<tr valign=top>
<td width=47%>SERVICE_CONTROL_<br>
CONTINUE</td>
<td width=53%>Requests the paused service to resume. </td>
</tr>
<tr valign=top>
<td width=47%>SERVICE_CONTROL_<br>
INTERROGATE</td>
<td width=53%>Requests the service to update immediately its current status information to the service control manager. </td>
</tr>
<tr valign=top>
<td width=47%>SERVICE_CONTROL_<br>
SHUTDOWN</td>
<td width=53%>Requests the service to perform cleanup tasks, because the system is shutting down.</td>
</tr>
</table><br>


<p>
This value can also be a user-defined control code, as described in the following table: 

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=36%>Value</th>
<th align=left width=64%>Meaning </th>
</tr>
<tr valign=top>
<td width=36%>Range 128 to 255.</td>
<td width=64%>The service defines the action associated with the control code. The <i>hService</i> handle must have SERVICE_USER_DEFINED_CONTROL access. </td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
This function does not return a value. </p>
<h4>Remarks</h4>
<p>
When a Win32-based service is started, its <b>ServiceMain</b> function should immediately call the <a href="services_7t0y.htm"><b>RegisterServiceCtrlHandler</b></a> function to specify a <b>Handler</b> function to process control requests. </p>
<p>
The control dispatcher in the main thread of a Win32-based service process invokes the control handler function for the specified service whenever it receives a control request from the service control manager. After processing the control request, the control handler must call the <b>SetServiceStatus</b> function to report its current status to the service control manager. </p>
<p>
The SERVICE_CONTROL_SHUTDOWN control should only be processed by services that must absolutely clean up during shutdown, because there is an extremely limited time (about 20 seconds) available for service shutdown. After this time expires, system shutdown proceeds regardless of whether service shutdown is complete. If the service needs to take more time to shut down, it should send out STOP_PENDING status messages, along with a wait hint, so that the service controller knows how long to wait before reporting to the system that service shutdown is complete. For example, the EventLog service needs to clear a dirty bit in the files that it maintains, and the server service needs to shut down so that network connections aren't made when the system is in the shutdown state. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winsvc.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>User-defined.</p>
<h4>See Also</h4>
<p>
<a href="services_0p0z.htm">Services Overview</a>, <a href="services_2uwj.htm">Service Functions</a>, <a href="services_7t0y.htm"><b>RegisterServiceCtrlHandler</b></a>, <a href="services_61pq.htm"><b>ServiceMain</b></a>, <a href="services_90oj.htm"><b>SetServiceStatus</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
