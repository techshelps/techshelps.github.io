<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Generic Thunks</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_about_generic_thunks_pt"></a>About Generic Thunks</h1>
<p>
The generic thunking mechanism provides functions that allow a 16-bit application to load a Win32®-based DLL, get the addresses of its exported functions, call the functions (passing each one up to thirty-two 32-bit arguments), convert 16:16 (WOW) addresses to 0:32 addresses (useful if you need to build up a 32-bit structure that contains pointers and pass a pointer to it), and free the Win32-based DLL. This process is similar to the <a href="dll_2lt3.htm">run-time dynamic linking</a> used between a Win32-based application and a Win32-based DLL. </p>
<p>
You may find that other IPC mechanisms are more powerful and portable. Keep this in mind when deciding whether or not to use thunks.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Microsoft® Windows® 95 and Windows® 98 provide another thunking mechanism called flat thunks. For more information, see <a href="win95/tc_82wi.htm">Thunk Compiler</a>.</p>
<p>&nbsp;</p></body>
</HTML>
