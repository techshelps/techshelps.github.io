<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetCompressedFileSize</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getcompressedfilesize"></a>GetCompressedFileSize</h1>
<p>
The <b>GetCompressedFileSize</b> function obtains the actual number of bytes of disk storage used to store a specified file. If the file is located on a volume that supports compression, and the file is compressed, the value obtained is the compressed size of the specified file. If the file is located on a volume that supports sparse files, and the file is a sparse file, the value obtained is the sparse size of the specified file. </p>
<p>
If the file is not located on a volume that supports compression or sparse files, or if the file is not compressed or a sparse file, the value obtained is the actual file size, the same as the value returned by a call to <a href="filesio_05id.htm"><b>GetFileSize</b></a>.</p>
<pre><code><b>DWORD GetCompressedFileSize(
  LPCTSTR</b><i> lpFileName</i><b>,     </b>// pointer to name of file
<b>  LPDWORD</b><i> lpFileSizeHigh  </i>// pointer to DWORD to receive high-order 
                          // doubleword of file size
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpFileName</i></dt>
<dd>
Pointer to a null-terminated string that specifies the name of the file.</dd>
<dt>
<i>lpFileSizeHigh</i></dt>
<dd>
Pointer to a <b>DWORD</b> variable that the function sets to the high-order doubleword of the compressed file size. The function's return value is the low-order doubleword of the compressed file size.
<p>
This parameter can be NULL if the high-order doubleword of the compressed file size is not needed. Files less than 4 gigabytes in size do not need the high-order doubleword. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the low-order doubleword of the actual number of bytes of disk storage used to store the specified file, and if <i>lpFileSizeHigh</i> is non-NULL, the function puts the high-order doubleword of that actual value into the <b>DWORD</b> pointed to by that parameter. This is the compressed file size for compressed files, the actual file size for noncompressed files.</p>
<p>
If the function fails, and <i>lpFileSizeHigh</i> is NULL, the return value is 0xFFFFFFFF. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>.</p>
<p>
If the function fails, and <i>lpFileSizeHigh</i> is non-NULL, the return value is 0xFFFFFFFF, and <b>GetLastError</b> returns a value other than NO_ERROR.</p>
<h4>Remarks</h4>
<p>
Calling the <b>GetCompressedFileSize</b> function with the name of a nonseeking device, such as a pipe or a communications device, has no meaning.</p>
<p>
Note that if the return value is 0xFFFFFFFF and <i>lpFileSizeHigh</i> is non-NULL, an application must call <b>GetLastError</b> to determine whether the function has succeeded or failed.</p>
<p>
An application can determine whether a volume is compressed by calling <b>GetVolumeInformation</b>, then checking the status of the FS_VOL_IS_COMPRESSED flag in the <b>DWORD</b> value pointed to by that function's <i>lpFileSystemFlags</i> parameter.</p>
<p>
An application can determine whether a file is compressed by implementing the following pseudocode:</p>
<pre><code>call <b>GetVolumeInformation</b> on the file's volume 
if the file's volume is compressed 
    call <b>GetCompressedFileSize</b> on the file 
    call <b>GetFileSize</b> on the file 
    if the sizes don't match 
        the file is compressed 
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="fsys_4jeb.htm">File Systems Overview</a>, <a href="fsys_419v.htm">File System Functions</a>, <a href="filesio_05id.htm"><b>GetFileSize</b></a>,<b> <a href="fsys_6wfi.htm">GetVolumeInformation</a></b></p>
<p>&nbsp;</p></body>
</HTML>
