<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetFileAttributesEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getfileattributesex"></a>GetFileAttributesEx</h1>
<p>
The <b>GetFileAttributesEx</b> function obtains attribute information about a specified file or directory. </p>
<p>
This function is similar to the <a href="filesio_9pgz.htm"><b>GetFileAttributes</b></a> function. <b>GetFileAttributes</b> returns a set of FAT-style attribute information. <b>GetFileAttributesEx</b> is designed to obtain other sets of file or directory attribute information. Currently, <b>GetFileAttributeEx</b> obtains a set of standard attributes that is a superset of the FAT-style attribute information. </p>
<pre><code><b>BOOL GetFileAttributesEx(
</b>  <b>LPCTSTR</b> <i>lpFileName</i><b>,</b>        // pointer to string that specifies a 
                             // file or directory
<b>  GET_FILEEX_INFO_LEVELS</b><i> fInfoLevelId</i><b>,</b> 
                             // value that specifies the type of 
                             // attribute information to obtain
<b>  LPVOID</b><i> lpFileInformation</i>   // pointer to buffer to receive 
                             // attribute information
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpFileName</i></dt>
<dd>
Pointer to a null-terminated string that specifies a file or directory. 
<p>
By default, this string is limited to MAX_PATH characters. The limit is related to how the <b>GetFileAttributesEx </b>function parses paths. An application can transcend this limit and send in paths longer than MAX_PATH characters by calling the wide (W) version of <b>GetFileAttributesEx</b> and prepending "<code>\\?\</code>" to the path. However, each component in the path cannot be more than MAX_PATH characters long. The "<code>\\?\</code>" tells the function to turn off path parsing. This technique also works with UNC names. The "<code>\\?\</code>" is ignored as part of the path. For example, "<code>\\?\C:\myworld\private</code>" is seen as "<code>C:\myworld\private</code>", and "<code>\\?\UNC\peanuts\hotstuff\coolapps</code>" is seen as "\\<code>peanuts\hotstuff\coolapps</code>". 
</dd>
<dt>
<i>fInfoLevelId</i></dt>
<dd>
Specifies a <a href="filesio_4ws2.htm"><b>GET_FILEEX_INFO_LEVELS</b></a> enumeration type that gives the set of attribute information to obtain. </dd>
<dt>
<i>lpFileInformation</i></dt>
<dd>
Pointer to a buffer that receives the attribute information. The type of attribute information stored into this buffer is determined by the value of <i>fInfoLevelId</i>. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a nonzero value. </p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="filesio_2xm7.htm">File I/O Overview</a>, <a href="filesio_3n5f.htm">File Functions</a>, <a href="filesio_9pgz.htm"><b>GetFileAttributes</b></a>, <a href="filesio_4ws2.htm"><b>GET_FILEEX_INFO_LEVELS</b></a>, <a href="filesio_9a2b.htm"><b>SetFileAttributes</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
