<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OpenDesktop</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_opendesktop"></a>OpenDesktop</h1>
<p>
The <b>OpenDesktop</b> function returns a handle to an existing desktop. A desktop is a secure object contained within a window station object. A desktop has a logical display surface and contains windows, menus and hooks.</p>
<pre><code><b>HDESK OpenDesktop(
  LPTSTR</b><i> lpszDesktop</i><b>,    </b>// name of the desktop to open
<b>  DWORD</b><i> dwFlags</i><b>,         </b>// flags to control interaction with other applications
<b>  BOOL</b><i> fInherit</i><b>,         </b>// specifies whether returned handle is inheritable
<b>  DWORD</b><i> dwDesiredAccess  </i>// specifies access of returned handle
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpszDesktop</i></dt>
<dd>
Pointer to null-terminated string specifying the name of the desktop to be opened. Desktop names are case-insensitive.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
A bit flag parameter that controls how the calling application will cooperate with other applications on the desktop. This parameter can specify zero or the following value:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>DF_ALLOWOTHERACCOUNTHOOK</td>
<td width=52%>Allows processes running in other accounts on the desktop to set hooks in this process.</td>
</tr>
</table><br>

</dd>
<dt>
<i>fInherit</i></dt>
<dd>
Specifies whether the returned handle is inherited when a new process is created. If this value is TRUE, new processes will inherit the handle.</dd>
<dt>
<i>dwDesiredAccess</i></dt>
<dd>
Specifies the access rights the returned handle has to the desktop. This parameter can include any of the standard access rights, such as READ_CONTROL or WRITE_DAC, and a combination of the following desktop-specific access rights.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Value</th>
<th align=left width=51%>Description</th>
</tr>
<tr valign=top>
<td width=49%>DESKTOP_CREATEMENU</td>
<td width=51%>Required to create a menu on the desktop.</td>
</tr>
<tr valign=top>
<td width=49%>DESKTOP_CREATEWINDOW</td>
<td width=51%>Required to create a window on the desktop.</td>
</tr>
<tr valign=top>
<td width=49%>DESKTOP_ENUMERATE</td>
<td width=51%>Required for the desktop to be enumerated.</td>
</tr>
<tr valign=top>
<td width=49%>DESKTOP_HOOKCONTROL</td>
<td width=51%>Required to establish any of the window hooks.</td>
</tr>
<tr valign=top>
<td width=49%>DESKTOP_JOURNALPLAYBACK</td>
<td width=51%>Required to perform journal playback on the desktop.</td>
</tr>
<tr valign=top>
<td width=49%>DESKTOP_JOURNALRECORD</td>
<td width=51%>Required to perform journal recording on the desktop.</td>
</tr>
<tr valign=top>
<td width=49%>DESKTOP_READOBJECTS</td>
<td width=51%>Required to read objects on the desktop.</td>
</tr>
<tr valign=top>
<td width=49%>DESKTOP_SWITCHDESKTOP</td>
<td width=51%>Required to activate the desktop using <a href="winsta_0a7k.htm"><b>SwitchDesktop</b></a>.</td>
</tr>
<tr valign=top>
<td width=49%>DESKTOP_WRITEOBJECTS</td>
<td width=51%>Required to write objects on the desktop.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a handle to the opened desktop. When you are finished using the handle, call the <a href="winsta_99v4.htm"><b>CloseDesktop</b></a> function to close it. </p>
<p>
If the function fails, the return value is NULL. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
The calling process must have an associated window station, either assigned by the system at process creation time or set by the <a href="winsta_34tq.htm"><b>SetProcessWindowStation</b></a> function.</p>
<p>
If the <i>dwDesiredAccess</i> parameter specifies the READ_CONTROL, WRITE_DAC, or WRITE_OWNER standard access rights to access the security descriptor of the desktop object, you must also request the DESKTOP_READOBJECTS and DESKTOP_WRITEOBJECTS access rights.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.51 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="winsta_15v7.htm">Window Stations and Desktops Overview</a>, <a href="winsta_9zeb.htm">Window Station and Desktop Functions</a>, <a href="winsta_99v4.htm"><b>CloseDesktop</b></a>, <a href="winsta_9ay8.htm"><b>CreateDesktop</b></a>, <a href="winsta_34tq.htm"><b>SetProcessWindowStation</b></a>, <a href="winsta_9v3k.htm"><b>SetThreadDesktop</b></a>, <a href="winsta_0a7k.htm"><b>SwitchDesktop</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
