<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OpenThreadToken</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_openthreadtoken"></a>OpenThreadToken</h1>
<p>
The <b>OpenThreadToken</b> function opens the access token associated with a thread. </p>
<pre><code><b>BOOL OpenThreadToken(
  HANDLE</b><i> ThreadHandle</i><b>,  </b>// handle to thread
<b>  DWORD</b><i> DesiredAccess</i><b>,  </b>// access to process
<b>  BOOL</b><i> OpenAsSelf</i><b>,      </b>// flag for process or thread security
<b>  PHANDLE</b><i> TokenHandle</i>   // pointer to handle to open access token
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ThreadHandle</i></dt>
<dd>
Identifies the thread whose access token is opened. </dd>
<dt>
<i>DesiredAccess</i></dt>
<dd>
Specifies an access mask that specifies the requested types of access to the access token. These requested access types are reconciled against the token's discretionary access-control list (ACL) to determine which accesses are granted or denied. The following access rights have been defined for access tokens. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>TOKEN_ADJUST_DEFAULT</td>
<td width=52%>Required to change the default ACL, primary group, or owner of an access token.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_ADJUST_GROUPS</td>
<td width=52%>Required to change the groups specified in an access token.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_ADJUST_PRIVILEGES</td>
<td width=52%>Required to change the privileges specified in an access token.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_ALL_ACCESS</td>
<td width=52%>Combines the STANDARD_RIGHTS_REQUIRED standard access rights and all individual access rights for tokens.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_ASSIGN_PRIMARY</td>
<td width=52%>Required to attach a primary token to a process in addition to the SE_CREATE_TOKEN_NAME privilege.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_DUPLICATE</td>
<td width=52%>Required to duplicate an access token.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_EXECUTE</td>
<td width=52%>Combines the STANDARD_RIGHTS_EXECUTE standard access rights and the TOKEN_IMPERSONATE access right.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_IMPERSONATE</td>
<td width=52%>Required to attach an impersonation access token to a process.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_QUERY</td>
<td width=52%>Required to query the contents of an access token.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_QUERY_SOURCE</td>
<td width=52%>Required to query the source of an access token.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_READ</td>
<td width=52%>Combines the STANDARD_RIGHTS_READ standard access rights and the TOKEN_QUERY access right.</td>
</tr>
<tr valign=top>
<td width=48%>TOKEN_WRITE</td>
<td width=52%>Combines the STANDARD_RIGHTS_WRITE standard access rights and the TOKEN_ADJUST_PRIVILEGES, TOKEN_ADJUST_GROUPS, and TOKEN_ADJUST_DEFAULT access rights.</td>
</tr>
</table><br>

</dd>
<dt>
<i>OpenAsSelf</i></dt>
<dd>
Specifies a flag indicating whether the access check is to be made against the security context of the thread calling the <b>OpenThreadToken</b> function or against the security context of the process for the calling thread. 
<p>
If this parameter is FALSE, the access check is performed using the security context for the calling thread. If the thread is impersonating a client, this security context can be that of a client process. If this parameter is TRUE, the access check is made using the security context of the process for the calling thread. 
</dd>
<dt>
<i>TokenHandle</i></dt>
<dd>
Pointer to a handle identifying the newly opened access token when the function returns. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The <i>OpenAsSelf</i> parameter allows a server process to open the access token for a client process when the client process has specified the SecurityIdentification impersonation level for the <b>SECURITY_IMPERSONATION_LEVEL</b> enumerated type. Without this parameter, the calling process is not be able to open the client's access token using the client's security context, because it is impossible to open executive-level objects using the SecurityIdentification impersonation level. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="accctrl_2hf0.htm">Access Control Overview</a>, <a href="accctrl_6cmr.htm">Access Control Functions</a>, <a href="accctrl_4iur.htm"><b>AdjustTokenGroups</b></a>, <a href="accctrl_6xbn.htm"><b>AdjustTokenPrivileges</b></a>, <a href="accctrl_2jvy.htm"><b>GetTokenInformation</b></a>, <a href="accctrl_0zam.htm"><b>OpenProcessToken</b></a>, <a href="accctrl_5z5a.htm"><b>SetThreadToken</b></a>, <a href="accctrl_9j5a.htm"><b>SetTokenInformation</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
