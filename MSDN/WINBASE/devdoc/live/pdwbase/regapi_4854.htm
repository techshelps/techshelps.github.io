<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RegEnumKeyEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_regenumkeyex"></a>RegEnumKeyEx</h1>
<p>
The <b>RegEnumKeyEx</b> function enumerates subkeys of the specified open registry key. The function retrieves information about one subkey each time it is called. Unlike the <a href="regapi_1juh.htm"><b>RegEnumKey</b></a> function, <b>RegEnumKeyEx</b> retrieves the class name of the subkey and the time it was last modified. </p>
<pre><code><b>LONG RegEnumKeyEx(
  HKEY</b><i> hKey</i><b>,          </b>// handle to key to enumerate
<b>  DWORD</b><i> dwIndex</i><b>,      </b>// index of subkey to enumerate
  LPTSTR lpName,      // address of buffer for subkey name
<b>  LPDWORD</b><i> lpcbName</i><b>,   </b>// address for size of subkey buffer
<b>  LPDWORD</b><i> lpReserved</i><b>, </b>// reserved
<b>  LPTSTR</b><i> lpClass</i><b>,     </b>// address of buffer for class string
<b>  LPDWORD</b><i> lpcbClass</i><b>,  </b>// address for size of class buffer
<b>  PFILETIME</b><i> lpftLastWriteTime</i> 
                      // address for time key last written to
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hKey</i></dt>
<dd>
Handle to a currently open key or one of the following predefined reserved handle values: 
<p>
<b>HKEY_CLASSES_ROOT</b><br>
<b>HKEY_CURRENT_CONFIG</b><br>
<b>HKEY_CURRENT_USER</b><br>
<b>HKEY_LOCAL_MACHINE</b><br>
<b>HKEY_USERS<br>
Windows NT:</b> <b>HKEY_PERFORMANCE_DATA</b> <br>
<b>Windows 95 and Windows 98:</b> <b>HKEY_DYN_DATA</b> 

<p>
The enumerated keys are subkeys of the key identified by <i>hKey</i>. 
</dd>
<dt>
<i>dwIndex</i></dt>
<dd>
Specifies the index of the subkey to retrieve. This parameter should be zero for the first call to the <b>RegEnumKeyEx</b> function and then incremented for subsequent calls. 
<p>
Because subkeys are not ordered, any new subkey will have an arbitrary index. This means that the function may return subkeys in any order. 
</dd>
<dt>
<i>lpName</i></dt>
<dd>
Pointer to a buffer that receives the name of the subkey, including the terminating null character. The function copies only the name of the subkey, not the full key hierarchy, to the buffer. </dd>
<dt>
<i>lpcbName</i></dt>
<dd>
Pointer to a variable that specifies the size, in characters, of the buffer specified by the <i>lpName</i> parameter. This size should include the terminating null character. When the function returns, the variable pointed to by <i>lpcbName</i> contains the number of characters stored in the buffer. The count returned does not include the terminating null character. </dd>
<dt>
<i>lpReserved</i></dt>
<dd>
Reserved; must be NULL. </dd>
<dt>
<i>lpClass</i></dt>
<dd>
Pointer to a buffer that contains the class of the enumerated subkey when the function returns. This parameter can be NULL if the class is not required. </dd>
<dt>
<i>lpcbClass</i></dt>
<dd>
Pointer to a variable that specifies the size, in characters, of the buffer specified by the <i>lpClass</i> parameter. The size should include the terminating null character. When the function returns, <i>lpcbClass</i> contains the number of characters stored in the buffer. The count returned does not include the terminating null character. This parameter can be NULL only if <i>lpClass</i> is NULL. </dd>
<dt>
<i>lpftLastWriteTime</i></dt>
<dd>
Pointer to a variable that receives the time the enumerated subkey was last written to. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is ERROR_SUCCESS.</p>
<p>
If the function fails, the return value is a nonzero error code defined in WINERROR.H. You can use the <a href="strings_0sdh.htm"><b>FormatMessage</b></a> function with the FORMAT_MESSAGE_FROM_SYSTEM flag to get a generic description of the error.</p>
<h4>Remarks</h4>
<p>
To enumerate subkeys, an application should initially call the <b>RegEnumKeyEx</b> function with the <i>dwIndex</i> parameter set to zero. The application should then increment the <i>dwIndex</i> parameter and call <b>RegEnumKeyEx</b> until there are no more subkeys (until the function returns ERROR_NO_MORE_ITEMS). </p>
<p>
The application can also set <i>dwIndex</i> to the index of the last subkey on the first call to the function and decrement the index until the subkey with the index 0 is enumerated. To retrieve the index of the last subkey, use the <a href="regapi_5xkp.htm"><b>RegQueryInfoKey</b></a> function. </p>
<p>
While an application is using the <b>RegEnumKeyEx</b> function, it should not make calls to any registration functions that might change the key being enumerated. </p>
<p>
The key identified by <i>hKey</i> must have been opened with KEY_ENUMERATE_SUB_KEYS access (KEY_READ includes KEY_ENUMERATE_SUB_KEYS). Use the <b>RegCreateKeyEx</b> or <b>RegOpenKeyEx</b> function to open the key. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winreg.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="regapi_9bzt.htm">Registry Overview</a>, <a href="regapi_59mb.htm">Registry Functions</a>, <a href="regapi_1woo.htm"><b>RegCreateKeyEx</b></a>, <a href="regapi_1po9.htm"><b>RegDeleteKey</b></a>, <a href="regapi_1juh.htm"><b>RegEnumKey</b></a>, <a href="regapi_7yns.htm"><b>RegOpenKeyEx</b></a>, <a href="regapi_5xkp.htm"><b>RegQueryInfoKey</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
