<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetProcAddress</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getprocaddress"></a>GetProcAddress</h1>
<p>
The <b>GetProcAddress</b> function returns the address of the specified exported dynamic-link library (DLL) function. </p>
<pre><code><b>FARPROC GetProcAddress(
  HMODULE</b><i> hModule</i><b>,    </b>// handle to DLL module
<b>  LPCSTR</b><i> lpProcName</i>   // name of function
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hModule</i></dt>
<dd>
Handle to the DLL module that contains the function. The <a href="dll_1o8p.htm"><b>LoadLibrary</b></a> or <a href="dll_5plx.htm"><b>GetModuleHandle</b></a> function returns this handle. </dd>
<dt>
<i>lpProcName</i></dt>
<dd>
Pointer to a null-terminated string containing the function name, or specifies the function's ordinal value. If this parameter is an ordinal value, it must be in the low-order word; the high-order word must be zero. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the address of the DLL's exported function.</p>
<p>
If the function fails, the return value is NULL. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The <b>GetProcAddress</b> function is used to retrieve addresses of exported functions in DLLs. </p>
<p>
The spelling and case of the function name pointed to by <i>lpProcName</i> must be identical to that in the <b>EXPORTS</b> statement of the source DLL's module-definition (.DEF) file. The exported names of Win32 API functions may differ from the names you use when calling these functions in your code. This difference is hidden by macros used in the SDK header files. For more information, see <a href="unicode_2dyr.htm">Win32 Function Prototypes</a>. </p>
<p>
The <i>lpProcName</i> parameter can identify the DLL function by specifying an ordinal value associated with the function in the <b>EXPORTS</b> statement. <b>GetProcAddress</b> verifies that the specified ordinal is in the range 1 through the highest ordinal value exported in the .DEF file. The function then uses the ordinal as an index to read the function's address from a function table. If the .DEF file does not number the functions consecutively from 1 to <i>N</i> (where <i>N</i> is the number of exported functions), an error can occur where <b>GetProcAddress</b> returns an invalid, non-NULL address, even though there is no function with the specified ordinal. </p>
<p>
In cases where the function may not exist, the function should be specified by name rather than by ordinal value. </p>
<p>
<b>Windows CE:</b> The <i>lpProcName</i> parameter must be in unicode.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="dll_512r.htm">Dynamic-Link Libraries Overview</a>, <a href="dll_0qr7.htm">Dynamic-Link Library Functions</a>, <a href="dll_3cs9.htm"><b>FreeLibrary</b></a>, <a href="dll_5plx.htm"><b>GetModuleHandle</b></a>,<b> <a href="dll_1o8p.htm">LoadLibrary</a></b> </p>
<p>&nbsp;</p></body>
</HTML>
