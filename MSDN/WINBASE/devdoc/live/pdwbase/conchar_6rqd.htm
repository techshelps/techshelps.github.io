<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WriteConsoleOutputAttribute</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_writeconsoleoutputattribute"></a>WriteConsoleOutputAttribute</h1>
<p>
The <b>WriteConsoleOutputAttribute</b> function copies a number of foreground and background color attributes to consecutive cells of a console screen buffer, beginning at a specified location. </p>
<pre><code><b>BOOL WriteConsoleOutputAttribute(
  HANDLE</b><i> hConsoleOutput</i><b>,  </b>// handle to a console screen buffer
<b>  CONST WORD</b><i> *lpAttribute</i><b>,  </b>// pointer to buffer to write attributes 
                            // from
<b>  DWORD</b><i> nLength</i><b>,          </b>// number of character cells to write to
<b>  COORD</b><i> wWriteCoord</i><b>,      </b>// coordinates of first cell to write to
<b>  LPDWORD</b><i> lpNumberOfAttrsWritten</i> 
                          // pointer to number of cells written to
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hConsoleOutput</i></dt>
<dd>
Handle to the screen buffer. The handle must have GENERIC_WRITE access. </dd>
<dt>
<i>lpAttribute</i></dt>
<dd>
Pointer to a buffer that contains the attributes to write to the screen buffer. </dd>
<dt>
<i>nLength</i></dt>
<dd>
Specifies the number of screen buffer character cells to write to. </dd>
<dt>
<i>dwWriteCoord</i></dt>
<dd>
Specifies the column and row coordinates of the first cell in the screen buffer to write to. </dd>
<dt>
<i>lpNumberOfAttrsWritten</i></dt>
<dd>
Pointer to a 32-bit variable that receives the number of attributes actually written to the screen buffer. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
If the number of attributes to be written to extends beyond the end of the specified row in the screen buffer, attributes are written to the next row. If the number of attributes to be written to extends beyond the end of the screen buffer, the attributes are written up to the end of the screen buffer. </p>
<p>
The character values at the positions written to are not changed. </p>
<p>
Each attribute specifies the foreground (text) and background colors in which that character cell is drawn. The attribute values are some combination of the following values: FOREGROUND_BLUE, FOREGROUND_GREEN, FOREGROUND_RED, FOREGROUND_INTENSITY, BACKGROUND_BLUE, BACKGROUND_GREEN, BACKGROUND_RED, and BACKGROUND_INTENSITY. For example, the following combination of values produces red text on a white background: </p>
<pre><code>FOREGROUND_RED | BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE 
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincon.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="conchar_4p6c.htm">Consoles and Character-Mode Support Overview</a>, <a href="conchar_3vg3.htm">Console Functions</a>, <a href="conchar_91ro.htm"><b>ReadConsoleOutput</b></a>, <a href="conchar_20o5.htm"><b>ReadConsoleOutputAttribute</b></a>, <a href="conchar_1qk2.htm"><b>ReadConsoleOutputCharacter</b></a>, <a href="conchar_9ktw.htm"><b>WriteConsoleOutput</b></a>, <a href="conchar_6hma.htm"><b>WriteConsoleOutputCharacter</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
