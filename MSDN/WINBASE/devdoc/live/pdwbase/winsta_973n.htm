<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating an Interactive Process</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_creating_an_interactive_process"></a>Creating an Interactive Process</h2>
<p>
The following code fragment shows how a Win32 service process could use the <a href="prothred_7sdu.htm"><b>STARTUPINFO</b></a> structure in a <a href="prothred_9dpv.htm"><b>CreateProcess</b></a> call to create a process that has access to the user's interactive window station and default desktop. A noninteractive Win32 service could use this technique to interact with the logged on user. The new process could then use a named pipe or some other means of interprocess communication to communicate with the Win32 service. </p>
<p>
To create an interactive process as shown in this example, a Win32 service must be logged in to the LocalSystem account.</p>
<pre><code>#include &lt;windows.h&gt; 
 
STARTUPINFO si; 
PROCESS_INFORMATION ProcessInformation; 
 
si.cb = sizeof(STARTUPINFO); 
si.lpReserved = NULL; 
si.lpTitle = NULL; 
si.lpDesktop = "WinSta0\\Default"; 
si.dwX = si.dwY = si.dwXSize = si.dwYSize = 0L; 
si.dwFlags = 0;; 
si.wShowWindow = SW_SHOW; 
si.lpReserved2 = NULL; 
si.cbReserved2 = 0; 
if (CreateProcess(NULL, lpszCmdLine, NULL, NULL, FALSE, 
                   0, NULL, NULL, &amp;si, &amp;ProcessInformation)) 
{ 
    CloseHandle(ProcessInformation.hProcess); 
    CloseHandle(ProcessInformation.hThread); 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
