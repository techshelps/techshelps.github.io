<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>StackWalk</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_stackwalk"></a>StackWalk</h1>
<p>
The <b>StackWalk</b> function provides a portable method for obtaining a stack trace.</p>
<pre><code><b>BOOL StackWalk(
  IN DWORD</b><i> MachineType</i><b>,                                          </b>
<b>  IN HANDLE</b><i> hProcess</i><b>,                                            </b>
  <b>IN HANDLE</b> <i>hThread</i><b>,                                             </b>
<b>  IN OUT LPSTACKFRAME</b><i> StackFrame</i><b>,                                </b>
<b>  IN OUT LPVOID</b><i> ContextRecord</i><b>,                                   </b>
<b>  IN PREAD_PROCESS_MEMORY_ROUTINE</b><i> ReadMemoryRoutine</i><b>,             </b>
<b>  IN PFUNCTION_TABLE_ACCESS_ROUTINE</b><i> FunctionTableAccessRoutine</i><b>,  </b>
<b>  IN PGET_MODULE_BASE_ROUTINE</b><i> GetModuleBaseRoutine</i><b>,              </b>
<b>  IN PTRANSLATE_ADDRESS_ROUTINE</b><i> TranslateAddress                 </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>MachineType</i></dt>
<dd>
Specifies the architecture type of the machine for which the stack trace is generated. This parameter can be one of the following values:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=62%>Value</th>
<th align=left width=38%>Meaning</th>
</tr>
<tr valign=top>
<td width=62%>IMAGE_FILE_MACHINE_I386</td>
<td width=38%>Intel </td>
</tr>
<tr valign=top>
<td width=62%>IMAGE_FILE_MACHINE_R4000</td>
<td width=38%>MIPS </td>
</tr>
<tr valign=top>
<td width=62%>IMAGE_FILE_MACHINE_R10000</td>
<td width=38%>MIPS</td>
</tr>
<tr valign=top>
<td width=62%>IMAGE_FILE_MACHINE_ALPHA</td>
<td width=38%>DEC Alpha</td>
</tr>
<tr valign=top>
<td width=62%>IMAGE_FILE_MACHINE_POWERPC</td>
<td width=38%>IBM PowerPC</td>
</tr>
</table><br>

</dd>
<dt>
<i>hProcess</i></dt>
<dd>
Handle to the process for which the stack trace is generated. If the caller supplies a valid callback pointer for the <i>ReadMemoryRoutine</i> parameter, then this value does not have to be a valid process handle. It can be a token that is unique and consistently the same for all calls to the <b>StackWalk</b> function. If the ImageHlp symbol handler is used with <b>StackWalk</b>, use the same process handles for the calls to each function.</dd>
<dt>
<i>hThread</i></dt>
<dd>
Handle to the thread for which the stack trace is generated. If the caller supplies a valid callback pointer for the <i>ReadMemoryRoutine</i> parameter, then this value does not have to be a valid thread handle. It can be a token that is unique and consistently the same for all calls to the <b>StackWalk</b> function.</dd>
<dt>
<i>StackFrame</i></dt>
<dd>
Pointer to a <a href="imgehlp1_8twy.htm"><b>STACKFRAME</b></a> structure. This structure is filled with information for the next frame, if the function call succeeds.</dd>
<dt>
<i>ContextRecord</i></dt>
<dd>
Pointer to a <a href="debug_6fw2.htm"><b>CONTEXT</b></a> structure. This parameter is required only when the <i>MachineType</i> parameter is <i>not</i> IMAGE_FILE_MACHINE_I386.</dd>
<dt>
<i>ReadMemoryRoutine</i></dt>
<dd>
Pointer to a callback routine that provides memory read services. When the <b>StackWalk</b> function needs to read memory from the process's address space, this callback is used. If NULL is passed, then the <a href="debug_2mpl.htm"><b>ReadProcessMemory</b></a> function is used. In this case, the <i>hProcess</i> parameter <i>must</i> be a valid process handle.</dd>
<dt>
<i>FunctionTableAccessRoutine</i></dt>
<dd>
Pointer to a callback routine that provides access to the run-time function table for the process. For RISC machines, this function accesses the <i>pdata</i> table, while on X86 machines this function accesses the <i>fpo</i> table. This parameter is required because the <b>StackWalk</b> function does not have access to the process's run-time function table.
<p>
The symbol handler in ImageHlp provides functions that load and access the run-time table. If these functions are used, then <a href="imgehlp1_8j77.htm"><b>SymFunctionTableAccess</b></a> can be passed as a valid parameter.
</dd>
<dt>
<i>GetModuleBaseRoutine</i></dt>
<dd>
Pointer to a callback routine that provides a module base for any given virtual address. This parameter is required. The symbol handler in ImageHlp provides functions that load and maintain module information. If these functions are used, then <a href="imgehlp1_8mjp.htm"><b>SymGetModuleBase</b></a> can be passed as a valid parameter.</dd>
<dt>
<i>TranslateAddress</i></dt>
<dd>
Pointer to a callback routine that provides address translation for 16-bit addresses. Most, if not all, callers of <b>StackWalk </b>can safely pass NULL for this parameter.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is TRUE.</p>
<p>
If the function fails, the return value is FALSE. To retrieve extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
The <b>StackWalk</b> function provides a portable method for obtaining a stack trace. This function is used by all Microsoft debuggers and tools that require stack trace facilities. Using the <b>StackWalk</b> function is recommended over writing your own function because of all the complexities associated with stack walking on Win32 platforms. In addition, there are compiler options that cause the stack to appear differently, depending on how the module is compiled. By using this function, your application has a portable stack trace that continues to work as the compiler and operating system change.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in imagehlp.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use imagehlp.lib.</p>
<h4>See Also</h4>
<p>
<a href="imgehlp1_3hzz.htm">PE Image Helper (ImageHlp) Overview</a>, <a href="imgehlp1_2sqb.htm">ImageHlp Debugger Functions</a>, <a href="debug_6fw2.htm"><b>CONTEXT</b></a>, <a href="imgehlp1_8twy.htm"><b>STACKFRAME</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
