<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interlocked Variable Access</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_interlocked_variable_access"></a>Interlocked Variable Access</h2>
<p>
The functions <a href="synchro_1lb9.htm"><b>InterlockedCompareExchange</b></a>, <a href="synchro_5q04.htm"><b>InterlockedExchangeAdd</b></a>, <a href="synchro_06ic.htm"><b>InterlockedDecrement</b></a>, <a href="synchro_4qed.htm"><b>InterlockedExchange</b></a>, and <a href="synchro_1k38.htm"><b>InterlockedIncrement</b></a> provide a simple mechanism for synchronizing access to a variable that is shared by multiple threads. The threads of different processes can use this mechanism if the variable is in shared memory.</p>
<p>
The <b>InterlockedIncrement</b> and <b>InterlockedDecrement</b> functions combine the operations of incrementing or decrementing the variable and checking the resulting value. This atomic operation is useful in a multitasking operating system, in which the system can interrupt one thread's execution to grant a slice of processor time to another thread. Without such synchronization, one thread could increment a variable but be interrupted by the system before it can check the resulting value of the variable. A second thread could then increment the same variable. When the first thread receives its next timeslice, it will check the value of the variable, which has now been incremented not once but twice. The interlocked variable-access functions protect against this kind of error.</p>
<p>
The <a href="synchro_4qed.htm"><b>InterlockedExchange</b></a> function atomically exchanges the values of the specified variables. The <a href="synchro_5q04.htm"><b>InterlockedExchangeAdd</b></a> function combines two operations: adding two variables together and storing the result in one of the variables.</p>
<p>
The <a href="synchro_1lb9.htm"><b>InterlockedCompareExchange</b></a> function combines two operations: comparing two values and storing a third value in one of the variables, based on the outcome of the comparison.</p>
<p>&nbsp;</p></body>
</HTML>
