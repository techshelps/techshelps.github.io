<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetThreadPriority</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getthreadpriority"></a>GetThreadPriority</h1>
<p>
The <b>GetThreadPriority</b> function returns the priority value for the specified thread. This value, together with the priority class of the thread's process, determines the thread's base-priority level. </p>
<pre><code><b>int GetThreadPriority(
  HANDLE</b><i> hThread</i>   // handle to thread
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hThread</i></dt>
<dd>
Handle to the thread. 
<p>
<b>Windows NT:</b> The handle must have THREAD_QUERY_INFORMATION access.  

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the thread's priority level.</p>
<p>
If the function fails, the return value is THREAD_PRIORITY_ERROR_RETURN. To get extended error information, call <a href="errors_3uwi.htm"><b>GetLastError</b></a>. </p>
<p>
The thread's priority level is one of the following values: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=15%>Priority</th>
<th align=left width=85%>Meaning</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%>THREAD_PRIORITY_ABOVE_NORMAL</td>
</tr>
<tr valign=top>
<td width=15%></td>
<td width=85%>Indicates 1 point above normal priority for the priority class.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>THREAD_PRIORITY_BELOW_NORMAL</td>
</tr>
<tr valign=top>
<td width=15%></td>
<td width=85%>Indicates 1 point below normal priority for the priority class.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>THREAD_PRIORITY_HIGHEST</td>
</tr>
<tr valign=top>
<td width=15%></td>
<td width=85%>Indicates 2 points above normal priority for the priority class.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>THREAD_PRIORITY_IDLE</td>
</tr>
<tr valign=top>
<td width=15%></td>
<td width=85%>Indicates a base-priority level of 1 for IDLE_PRIORITY_CLASS, NORMAL_PRIORITY_CLASS, or HIGH_PRIORITY_CLASS processes, and a base-priority level of 16 for REALTIME_PRIORITY_CLASS processes.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>THREAD_PRIORITY_LOWEST</td>
</tr>
<tr valign=top>
<td width=15%></td>
<td width=85%>Indicates 2 points below normal priority for the priority class.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>THREAD_PRIORITY_NORMAL</td>
</tr>
<tr valign=top>
<td width=15%></td>
<td width=85%>Indicates normal priority for the priority class.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>THREAD_PRIORITY_TIME_CRITICAL</td>
</tr>
<tr valign=top>
<td width=15%></td>
<td width=85%>Indicates a base-priority level of 15 for IDLE_PRIORITY_CLASS, NORMAL_PRIORITY_CLASS, or HIGH_PRIORITY_CLASS processes, and a base-priority level of 31 for REALTIME_PRIORITY_CLASS processes.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Every thread has a base-priority level determined by the thread's priority value and the priority class of its process. The operating system uses the base-priority level of all executable threads to determine which thread gets the next slice of CPU time. Threads are scheduled in a round-robin fashion at each priority level, and only when there are no executable threads at a higher level will scheduling of threads at a lower level take place. </p>
<p>
For a table that shows the base-priority levels for each combination of priority class and thread priority value, refer to the <b>SetPriorityClass</b> function. </p>
<p>
<b>Windows CE:</b> The thread's priority level is one of the following values: 
<dl>
<dt>
THREAD_PRIORITY_TIME_CRITICAL</dt>
<dd>
Indicates 3 points above normal priority. </dd>
<dt>
THREAD_PRIORITY_HIGHEST</dt>
</dl>
<p>
Indicates 2 points above normal priority. 
<dl>
<dt>
THREAD_PRIORITY_ABOVE_NORMAL</dt>
<dd>
Indicates 1 point above normal priority. </dd>
</dl>
<p>
THREAD_PRIORITY_NORMAL</p>
<p>
Indicates normal priority.
<dl>
<dt>
THREAD_PRIORITY_BELOW_NORMAL</dt>
<dd>
Indicates 1 point below normal priority. </dd>
</dl>
<p>
THREAD_PRIORITY_LOWEST</p>
<p>
Indicates 2 points below normal priority. </p>
<p>
THREAD_PRIORITY_ABOVE_IDLE</p>
<p>
Indicates 3 points below normal priority.
<dl>
<dt>
THREAD_PRIORITY_IDLE</dt>
<dd>
Indicates 4 points below normal priority. </dd>
</dl>
<p>
Windows CE does not support priority classes. The order in which threads are scheduled is determined only by their thread priorities.</p>
<p>
When manipulating priorities, ensure that a high-priority thread does not consume all of the available CPU time. A thread with a priority level of THREAD_PRIORITY_TIME_CRITICAL will execute until it explicitly yields processing to other threads. Processing of these threads is not yielded to other threads with the THREAD_PRIORITY_TIME_CRITICAL priority level. Such a thread can interfere with the normal operation of the operating system if the thread doesn't explicitly yield processing quickly. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="prothred_86sz.htm">Processes and Threads Overview</a>, <a href="prothred_3mgj.htm">Process and Thread Functions</a>, <a href="prothred_83sj.htm"><b>GetPriorityClass</b></a>, <a href="prothred_9z1v.htm"><b>SetPriorityClass</b></a>, <a href="prothred_9f5l.htm"><b>SetThreadPriority</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
