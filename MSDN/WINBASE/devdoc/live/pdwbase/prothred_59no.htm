<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ResumeThread</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_resumethread"></a>ResumeThread</h1>
<p>
The <b>ResumeThread</b> function decrements a thread's suspend count. When the suspend count is decremented to zero, the execution of the thread is resumed. </p>
<pre><code><b>DWORD ResumeThread(
  HANDLE</b><i> hThread</i>   // identifies thread to restart
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hThread</i></dt>
<dd>
Specifies a handle for the thread to be restarted. 
<p>
<b>Windows NT:</b> The handle must have THREAD_SUSPEND_RESUME access to the thread.  

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the thread's previous suspend count. </p>
<p>
If the function fails, the return value is 0xFFFFFFFF. To get extended error information, call <b>GetLastError</b>. </p>
<h4>Remarks</h4>
<p>
The <b>ResumeThread</b> function checks the suspend count of the subject thread. If the suspend count is 0, the thread is not currently suspended. Otherwise, the subject thread's suspend count is decremented. If the resulting value is 0, then the execution of the subject thread is resumed. </p>
<p>
If the return value is 0, the specified thread was not suspended. If the return value is 1, the specified thread was suspended but was restarted. If the return value is greater than 1, the specified thread is still suspended. </p>
<p>
Note that while reporting debug events, all threads within the reporting process are frozen. Debuggers are expected to use the <b>SuspendThread</b> and <b>ResumeThread</b> functions to limit the set of threads that can execute within a process. By suspending all threads in a process except for the one reporting a debug event, it is possible to "single step" a single thread. The other threads are not released by a continue operation if they are suspended. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="prothred_86sz.htm">Processes and Threads Overview</a>, <a href="prothred_3mgj.htm">Process and Thread Functions</a>, <a href="prothred_7gkk.htm"><b>SuspendThread</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
