<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Event Sources</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_event_sources"></a>Event Sources</h3>
<p>
Each <a href="eventlog_1ayb.htm">logfile</a> can contain subkeys called <i>event sources</i>. The event source is the name of the software that logs the event. It is often the name of the application, or the name of a subcomponent of the application, if the application is large. Applications and services should add their names to the <b>Application</b> logfile. Device drivers should add their names to the <b>System</b> logfile. The structure is as follows: </p>
<p class=indent1>
<b>HKEY_LOCAL_MACHINE</b> <br>
&nbsp;&nbsp;&nbsp;&nbsp;<b>SYSTEM</b> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>CurrentControlSet</b> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Services</b> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>EventLog</b> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Application</b> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>AppName</i><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Security</b> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>System</b> <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>DriverName</i></p>
<p>
The application provides its name when it opens the event log using the <a href="eventlog_48px.htm"><b>RegisterEventSource</b></a> function. You cannot use a source name that has already been used as a logfile name. In addition, source names cannot be hierarchical (that is, you cannot use the backslash character [\]). </p>
<p>
Each event source contains information specific to the software that will be logging the events, such as the <a href="eventlog_8183.htm">message files</a>, as shown in the following table. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=34%>Registry Value</th>
<th align=left width=66%>Description</th>
</tr>
<tr valign=top>
<td width=34%><b>EventMessageFile</b></td>
<td width=66%>Specifies the path for the event message file. You can list multiple files, separated by semicolons. An event message file contains language-dependent strings that describe the events. This value has the type REG_EXPAND_SZ.</td>
</tr>
<tr valign=top>
<td width=34%><b>CategoryMessageFile</b></td>
<td width=66%>Specifies the path for the category message file. You can list multiple files, separated by semicolons. A category message file contains language-dependent strings that describe the categories. This value has the type REG_EXPAND_SZ.</td>
</tr>
<tr valign=top>
<td width=34%><b>ParameterMessageFile</b></td>
<td width=66%>Specifies the path for the parameter message file. You can list multiple files, separated by semicolons. A parameter message file contains language-independent strings that are to be inserted into the event description strings. This value has the type REG_EXPAND_SZ.</td>
</tr>
<tr valign=top>
<td width=34%><b>CategoryCount</b></td>
<td width=66%>Specifies the number of event categories supported. This value has the type REG_DWORD.</td>
</tr>
<tr valign=top>
<td width=34%><b>TypesSupported</b></td>
<td width=66%>Specifies a bitmask of supported types. This value has the type REG_DWORD. It can be one or more of the following values: <p>
EVENTLOG_ERROR_TYPE<br>
EVENTLOG_WARNING_TYPE<br>
EVENTLOG_INFORMATION_TYPE<br>
EVENTLOG_AUDIT_SUCCESS<br>
EVENTLOG_AUDIT_FAILURE </p>
</td>
</tr>
</table><br>
<p>
When an application uses the <a href="eventlog_48px.htm"><b>RegisterEventSource</b></a> or <a href="eventlog_3elj.htm"><b>OpenEventLog</b></a> function to get a handle to an event log, the event-logging service searches for the specified event source in the registry. For example, the <b>Application</b> logfile might contain event sources for Microsoft SQL Server and Microsoft Excel. If an application uses <b>RegisterEventSource</b> or <b>OpenEventLog</b> with a source name of Application, SQL, or Excel, the event-logging service returns a handle to the <b>Application</b> logfile.</p>
<p>
An application can use the <b>Application</b> event log without adding a new event source to the registry. If the application calls <b>RegisterEventSource</b>, passing a source name that cannot be found in the registry, the event-logging service uses the <b>Application</b> logfile by default. However, because there are no message files, the Event Viewer cannot map any event identifiers or event categories to a description string, and will display an error. For this reason, you should add a unique event source to the registry for your application and specify a message file. </p>
<p>&nbsp;</p></body>
</HTML>
