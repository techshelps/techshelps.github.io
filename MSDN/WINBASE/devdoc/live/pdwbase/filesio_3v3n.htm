<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Locking and Unlocking Files</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_locking_and_unlocking_files"></a>Locking and Unlocking Files</h3>
<p>
Although the system allows more than one application to open a file and write to it, applications must not write over each other's work. An application can prevent this problem by temporarily locking a region in a file. The <a href="filesio_63xh.htm"><b>LockFile</b></a> and <a href="filesio_39h4.htm"><b>LockFileEx</b></a> functions lock a specified range of bytes in a file. The range may extend beyond the current end of the file. Locking part of a file prevents all other processes from reading or writing anywhere in the specified area. Attempts to read from or write to a region locked by another process always fail. </p>
<p>
The <b>LockFileEx</b> function allows an application to specify either a <i>shared lock</i> or an <i>exclusive lock</i>. An exclusive lock denies all other processes both read and write access to the specified region of the file. A shared lock denies all processes write access to the specified region of the file, including the process that first locks the region. This can be used to create a read-only region in a file.</p>
<p>
The application unlocks the region by using the <a href="filesio_1jl1.htm"><b>UnlockFile</b></a> or <a href="filesio_4dko.htm"><b>UnlockFileEx</b></a> function. An application should unlock all locked areas before closing a file. </p>
<p>&nbsp;</p></body>
</HTML>
