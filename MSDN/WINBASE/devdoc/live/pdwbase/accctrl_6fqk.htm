<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetSecurityDescriptorControl</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setsecuritydescriptorcontrol"></a>SetSecurityDescriptorControl</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>SetSecurityDescriptorControl</b> function sets the control bits of a security descriptor. The function can set only the control bits that relate to automatic inheritance of ACEs. To set the other control bits of a security descriptor, use the Win32 functions, such as <a href="acctrlow_0fxo.htm"><b>SetSecurityDescriptorDacl</b></a>, for modifying the components of a security descriptor. </p>
<pre><code><b>BOOL SetSecurityDescriptorControl(
  PSECURITY_DESCRIPTOR</b><i> pSecurityDescriptor</i><b>,    </b>// security descriptor
<b>  SECURITY_DESCRIPTOR_CONTROL</b><i> ControlBitsOfInterest</i><b>,  </b>// bits to set
<b>  SECURITY_DESCRIPTOR_CONTROL</b><i> ControlBitsToSet</i><b> </b>// new control bits 
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pSecurityDescriptor</i></dt>
<dd>
Pointer to a <a href="accctrl_6i5u.htm"><b>SECURITY_DESCRIPTOR</b></a> structure whose control and revision information are set.</dd>
<dt>
<i>ControlBitsOfInterest</i></dt>
<dd>
A <a href="acctrlow_7u5u.htm"><b>SECURITY_DESCRIPTOR_CONTROL</b></a> mask that indicates the control bits to set. This mask can be a combination of the following flags.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Value</th>
<th align=left width=51%>Meaning</th>
</tr>
<tr valign=top>
<td width=49%>SE_DACL_AUTO_INHERIT_REQ</td>
<td width=51%>Requests that the provider for the object protected by the security descriptor automatically propagate the DACL to existing child objects. If the provider supports automatic inheritance, it propagates the DACL to any existing child objects, and sets the SE_DACL_AUTO_INHERITED bit in the security descriptors of the object and its child objects.</td>
</tr>
<tr valign=top>
<td width=49%>SE_DACL_AUTO_INHERITED</td>
<td width=51%>Indicates a security descriptor in which the DACL is set up to support automatic propagation of inheritable ACEs to existing child objects. This bit is set only if the automatic inheritance algorithm has been performed for the object and its existing child objects. <p>
This bit is not set in security descriptors for Windows NT versions 4.0 and earlier, which did not support automatic propagation of inheritable ACEs.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>SE_DACL_PROTECTED</td>
<td width=51%>Protects the DACL of the security descriptor from being modified by inheritable ACEs.</td>
</tr>
<tr valign=top>
<td width=49%>SE_SACL_AUTO_INHERIT_REQ</td>
<td width=51%>Requests that the provider for the object protected by the security descriptor automatically propagate the SACL to existing child objects. If the provider supports automatic inheritance, it propagates the SACL to any existing child objects, and sets the SE_SACL_AUTO_INHERITED bit in the security descriptors of the object and its child objects.</td>
</tr>
<tr valign=top>
<td width=49%>SE_SACL_AUTO_INHERITED</td>
<td width=51%>Indicates a security descriptor in which the SACL is set up to support automatic propagation of inheritable ACEs to existing child objects. This bit is set only if the automatic inheritance algorithm has been performed for the object and its existing child objects. <p>
This bit is not set in security descriptors for Windows NT versions 4.0 and earlier, which did not support automatic propagation of inheritable ACEs.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>SE_SACL_PROTECTED</td>
<td width=51%>Protects the SACL of the security descriptor from being modified by inheritable ACEs.</td>
</tr>
</table><br>

</dd>
<dt>
<i>ControlBitsToSet</i></dt>
<dd>
A <a href="acctrlow_7u5u.htm"><b>SECURITY_DESCRIPTOR_CONTROL</b></a> mask that indicates the new values for the control bits specified by the <i>ControlBitsOfInterest</i> mask. This parameter can be a combination of the flags listed for the <i>ControlBitsOfInterest</i> parameter.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <b>GetLastError</b>. </p>
<h4>Remarks</h4>
<p>
The <b>SetSecurityDescriptorControl</b> function specifies the control bit or bits to modify, and whether the bits are on or off. For example, the following code marks the DACL on the security descriptor as protected:</p>
<pre><code>SetSecurityDescriptorControl( &amp;SecDesc,
            SE_DACL_PROTECTED, SE_DACL_PROTECTED );
 </code></pre>
<p>
And this code marks the DACL as not protected:</p>
<pre><code>SetSecurityDescriptorControl( &amp;SecDesc,
            SE_DACL_PROTECTED, 0 );
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="accctrl_2hf0.htm">Access Control Overview</a>, <a href="accctrl_6cmr.htm">Access Control Functions</a>, <a href="accctrl_04h8.htm"><b>GetSecurityDescriptorControl</b></a>, <a href="accctrl_6i5u.htm"><b>SECURITY_DESCRIPTOR</b></a>, <a href="acctrlow_7u5u.htm"><b>SECURITY_DESCRIPTOR_CONTROL</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
