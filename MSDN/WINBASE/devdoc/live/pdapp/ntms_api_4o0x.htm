<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EjectNtmsMedia</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_zaw_ejectntmsmedia"></a>EjectNtmsMedia</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>EjectNtmsMedia</b> function ejects the specified medium from the port of the current library. If the library is busy, RSM queues <b>EjectNtmsMedia</b> and returns success.</p>
<pre><code><b>DWORD WINAPI EjectNtmsMedia(
</b>  <b>HANDLE</b> <i>hSession</i><b>,</b> 
  <b>LPNTMS_GUID</b> <i>lpMediaId</i><b>,</b>
  <b>LPNTMS_GUID</b> <i>lpEjectOperation</i><b>,</b>
  <b>DWORD</b> <i>dwAction</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hSession</i></dt>
<dd>
Handle to the session returned by the <a href="ntms_api_3kq6.htm"><b>OpenNtmsSession</b></a> function.</dd>
<dt>
<i>lpMediaId</i></dt>
<dd>
Specifies the unique identifier of a piece of physical media (PMID).</dd>
<dt>
<i>lpEjectOperation</i></dt>
<dd>
Specifies the GUID of the eject process. This must be used with the <i>dwAction</i> parameter set to the NTMS_EJECT_STOP flag.</dd>
<dt>
<i>dwAction</i></dt>
<dd>
This parameter can be one of the following values.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>NTMS_EJECT_START</td>
<td width=52%>Start the eject operation with a port. The specified medium is ejected until the time-out event occurs or until NTMS_EJECT_STOP is issued. The time-out value is specified in the library object and is applied to all ejects in the library.</td>
</tr>
<tr valign=top>
<td width=48%>NTMS_EJECT_STOP</td>
<td width=52%>Terminate the ejection process before the time-out event lapses. </td>
</tr>
<tr valign=top>
<td width=48%>NTMS_EJECT_QUEUE</td>
<td width=52%>Queue the specified media for ejection. Used to group media for multi-slot NTMS_IEPORT objects. </td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
ERROR_ACCESS_DENIED </dt>
<dd>
NTMS_CONTROL_ACCESS to the library is denied. Other security errors are also possible, but they would indicate a security subsystem error.</dd>
<dt>
ERROR_BUSY</dt>
<dd>
More media was queued than slots available in the NTMS_IEPORT object.</dd>
<dt>
ERROR_DATABASE_FAILURE </dt>
<dd>
The database is inaccessible or damaged.</dd>
<dt>
ERROR_DATABASE_FULL </dt>
<dd>
The database is full.</dd>
<dt>
ERROR_DEVICE_NOT_AVAILABLE</dt>
<dd>
The library is disabled.</dd>
<dt>
ERROR_INVALID_HANDLE </dt>
<dd>
The session ID is invalid or missing.</dd>
<dt>
ERROR_INVALID_OPERATION </dt>
<dd>
A stop was performed on an invalid operation ID.</dd>
<dt>
ERROR_INVALID_PARAMETER </dt>
<dd>
A library ID or operation ID pointer is missing.</dd>
<dt>
ERROR_LIBRARY_OFFLINE </dt>
<dd>
The library ID refers to an offline library that cannot eject media.</dd>
<dt>
ERROR_MEDIA_NOT_AVAILABLE</dt>
<dd>
The media is disabled.</dd>
<dt>
ERROR_NOT_ENOUGH_MEMORY </dt>
<dd>
There was an allocation failure during processing.</dd>
<dt>
ERROR_SUCCESS </dt>
<dd>
The eject is queued.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Media ejected using the <b>EjectNtmsMedia</b> function is moved to the offline library or deleted from the database. Cleaner cartridges, foreign media, and incompatible media are deleted when ejected.</p>
<p>
If the NTMS_EJECT_STOP flag is specified for <i>dwAction</i>, the <b>EjectNtmsMedia</b> function stops the eject operation specified by the <i>lpEjectOperation</i> parameter. The <i>lpEjectOperation</i> GUID is returned when the NTMS_EJECT_START flag  is used.</p>
<p>
The NTMS_EJECT_QUEUE flag is used to bundle or batch media marked for ejection into a multi-slot library. You can queue media for ejection using the queue action when the application has queued all the necessary media. The application uses the start command to begin the physical eject operation. If more media is queued than slots in the NTMS_IEPORT object, <b>EjectNtmsMedia</b> returns ERROR_BUSY. To begin the physical eject operation, the application can use the START action on the last media or use a NULL media ID with the Start Operation</p>
<p>
The QUEUE action does not return a GUID that can be used for the STOP action. However, when the queued requests are started with the START action, a GUID returns that can be used to cancel the entire operation with the STOP action.</p>
<p>
If the media is currently in use (mounted or opened), this function returns an error.</p>
<p>
If the library does not have a port, use the <b>AccessNtmsLibraryDoor</b> function to insert and eject media.</p>
<p>
Eject works only with online libraries.</p>
<p>
The <b>EjectNtmsMedia</b> function returns to the application as soon as the eject request is queued.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ntmsapi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use ntmsapi.lib.</p>
<h4>See Also</h4>
<p>
<a href="ntms_api_5nz9.htm#_zaw_library_control_functions">Library Control Functions</a>, <a href="ntms_api_22zl.htm"><b>InjectNtmsMedia</b></a></p>
<p>&nbsp;</p></body>
</HTML>
