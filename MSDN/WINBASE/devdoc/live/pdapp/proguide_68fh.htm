<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cleaning Drives in RSM</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_zaw_cleaning_drives_in_rsm"></a>Cleaning Drives in RSM</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Unless you are developing an application that is intended to manage device maintenance, your application does not have to address drive cleaning. RSM is designed to manage device maintenance.</p>
<p>
In the RSM model of device maintenance, each library unit can contain one cleaner cartridge. Administrators can use the RSM MMC snap-in to clean a drive, reserve or release a cleaner slot, and insert or eject a cleaner cartridge.</p>
<p>
RSM maintains a usage count for each cleaner cartridge. When a cleaner reaches its maximum usage count, RSM generates an operator request. If the administrator ejects a cleaner cartridge before it has reached its maximum usage count, RSM releases the usage count information.</p>
<p>
If you are developing an application that manages device maintenance, you can use the following RSM functions to implement drive cleaning functionality.
<ul>
<li>
<a href="ntms_api_7hlx.htm"><b>CleanNtmsDrive</b></a></li>
<li>
<a href="ntms_api_2t2q.htm"><b>EjectNtmsCleaner</b></a></li>
<li>
<a href="ntms_api_79de.htm"><b>InjectNtmsCleaner</b></a></li>
<li>
<a href="ntms_api_70vo.htm"><b>ReleaseNtmsCleanerSlot</b></a></li>
<li>
<a href="ntms_api_20fo.htm"><b>ReserveNtmsCleanerSlot</b></a></li>
</ul>
<p>&nbsp;</p></body>
</HTML>
