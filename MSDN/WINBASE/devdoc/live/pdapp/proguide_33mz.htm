<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NTMSDATA.BAK</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_zaw_ntmsdata.bak"></a>NTMSDATA.BAK</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The NTMSDATA.BAK (replica) file contains a interlocked replica of the database's data file. The purpose of this file is not to create a backup, but to provide a consistent replica of the database file while updates are in progress. An update to the main data file occurs only during a transaction commit operation, at which time the data file becomes inconsistent. The replica is guaranteed to remain consistent across the update and until the main data file is consistent again, at which point the replica is updated slowly. Although the database uses the slow update model for the backup, the database employs an interlock that prevents the main data file from beginning another update until the replica is completely up to date. This provides the benefit of improved performance for the thread performing the commit operation while ensuring integrity. Although this means that any thread performing back-to-back commit operations incurs a performance penalty for the replica, in practice very few RSM operations use back-to-back transaction commits.</p>
<p>&nbsp;</p></body>
</HTML>
