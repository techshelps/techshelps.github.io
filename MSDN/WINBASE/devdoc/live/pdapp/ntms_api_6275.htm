<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AllocateNtmsMedia</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_zaw_allocatentmsmedia"></a>AllocateNtmsMedia</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>AllocateNtmsMedia</b> function allocates a piece of available media.</p>
<pre><code><b>DWORD WINAPI AllocateNtmsMedia(
</b>  <b>HANDLE</b> <i>hSession</i><b>,</b>
  <b>LPNTMS_GUID</b> <i>lpMediaPool</i><b>,</b>
  <b>LPNTMS_GUID</b> <i>lpPartition</i><b>,</b>
  <b>LPNTMS_GUID</b> <i>lpMediaId</i><b>,</b>
  <b>DWORD</b> <i>dwOptions</i><b>,</b>
  <b>DWORD</b> <i>dwTimeout</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hSession</i></dt>
<dd>
Handle to the session returned by the <a href="ntms_api_3kq6.htm"><b>OpenNtmsSession</b></a> function.</dd>
<dt>
<i>lpMediaPool</i></dt>
<dd>
Specifies the unique identifier of a media pool from which the media is to be allocated.</dd>
<dt>
<i>lpPartition</i></dt>
<dd>
Specifies the part ID of a partition to use for LMID. The partition must be in the Available or Import state. This feature can be used to allocate a particular partition or to import media. This parameter is optional. A NULL pointer is normally used.</dd>
<dt>
<i>lpMediaId</i></dt>
<dd>
Used to return the media ID of the allocated medium. The returned logical media ID is NULL if the medium cannot be allocated. </dd>
<dt>
<i>dwOptions</i></dt>
<dd>
This parameter must be one or more of the following values.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>NTMS_ALLOCATE_ERROR_IF_UNAVAILABLE</td>
<td width=52%>Prevents the submission of an operator request for new media if none can be allocated with the specified constraints.</td>
</tr>
<tr valign=top>
<td width=48%>NTMS_ALLOCATE_NEW</td>
<td width=52%>Allocates a partition of the specified medium that cannot be shared with another application's logical media. For example, this value reserves the second side of two-sided optical media. </td>
</tr>
<tr valign=top>
<td width=48%>NTMS_ALLOCATE_NEXT</td>
<td width=52%>Allocate the next partition of the multipartitioned medium previously allocated with the NTMS_ALLOCATE_NEW value. This allows a single application to use both partitions of a piece of two-sided media and ensure that the application owns all the data on the piece of physical media.<p>
If all the partitions of the medium are already allocated, the allocation request fails.</p>
</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwTimeout</i></dt>
<dd>
Specifies the maximum time allowed, in milliseconds, to allocate the specified media. Set this parameter to INFINITE so the function will not time out. Set this parameter to zero to not wait for media. Note that this function does not queue a request for more media if the NTMS_ALLOCATE_ERROR_IF_UNAVAILABLE value is specified.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
ERROR_ACCESS_DENIED</dt>
<dd>
NTMS_MODIFY_ACCESS to media's media pool is denied.</dd>
<dt>
ERROR_CANCELLED</dt>
<dd>
The operator canceled the request for new media.</dd>
<dt>
ERROR_DATABASE_FAILURE</dt>
<dd>
The database is inaccessible or damaged.</dd>
<dt>
ERROR_DATABASE_FULL</dt>
<dd>
The database is full.</dd>
<dt>
ERROR_DEVICE_NOT_AVAILABLE</dt>
<dd>
An intermediate resource is not available; for example, the <a href="ntmsglos_3t6h.htm#_zaw_scratch_media_pool_gly">scratch media pool</a> is not available.</dd>
<dt>
ERROR_INVALID_HANDLE</dt>
<dd>
The session handle is invalid or missing.</dd>
<dt>
ERROR_INVALID_MEDIA</dt>
<dd>
The partition ID or logical media ID was invalid upon input when using the NTMS_ALLOCATE_NEXT flag.</dd>
<dt>
ERROR_INVALID_MEDIA_POOL</dt>
<dd>
The media pool ID is invalid.</dd>
<dt>
ERROR_INVALID_PARAMETER</dt>
<dd>
The media or media pool ID is missing.</dd>
<dt>
ERROR_MEDIA_OFFLINE</dt>
<dd>
The specified media is offline and cannot be allocated.</dd>
<dt>
ERROR_MEDIA_UNAVAILABLE</dt>
<dd>
No media has been allocated within the specified time-out event. </dd>
<dt>
ERROR_NOT_ENOUGH_MEMORY</dt>
<dd>
There was an allocation failure during processing.</dd>
<dt>
ERROR_SUCCESS</dt>
<dd>
The function was successful.</dd>
<dt>
ERROR_TIMEOUT</dt>
<dd>
The time-out event expired before media was available.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Only application pools may be specified for allocation using the <b>AllocateNtmsMedia</b> function.</p>
<p>
The <b>AllocateNtmsMedia</b> function returns an LMID. Depending upon the media pool's policy, if the specified media pool does not contain any online Available media, <b>AllocateNtmsMedia</b> might search the scratch media pool for the specified medium to move to the specified media pool. Media from the designated media pool is allocated first, and then the scratch media is moved and allocated.</p>
<p>
If the media pool contains any online Available media, a medium from the pool is allocated.</p>
<p>
If the media pool is configured to allocate media from the scratch pool automatically, and the scratch pool contains online Available media, a medium is moved to the specified pool and allocated.</p>
<p>
When the NTMS_ALLOCATE_NEXT value is specified, the <i>lpMediaId</i> parameter must point to a valid media ID at the time of invocation. In this case, <i>lpMediaId</i> is used as an IN and OUT parameter. The next partition of the multiple partitioned (sided) medium specified by <i>lpMediaId</i> is allocated, and the new partition ID is returned through <i>lpMediaId</i> (overwriting the original media ID passed in). </p>
<p>
If NTMS_ALLOCATE_ERROR_IF_UNAVAILABLE is specified, ERROR_MEDIA_ UNAVAILABLE is returned if no media is available.</p>
<p>
When necessary, RSM generates an operator request to insert new or Available media. If the time specified in the <i>dwTimeout</i> parameter elapses before the operator request is handled, RSM returns ERROR_TIMEOUT and deletes the operator request.</p>
<p>
If the user cancels the allocation request, RSM returns ERROR_CANCELLED.</p>
<p>
If a user indicates that the operator request has been satisfied, the request is deleted and RSM retries the process. The following steps describe how to allow media to be imported into RSM:</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To allow media to be imported into RSM</h5>
<ol>
<li>
The <b>AllocateNtmsMedia</b> function specifies a partition in the Import Media pool or in the Import state.</li>
<li>
RSM moves the medium to the specified media pool.</li>
<li>
RSM changes the media's state to allocated. </li>
<li>
RSM returns an <a href="ntmsglos_6ni1.htm#_zaw_lmid_gly">LMID</a>. </li>
</ol>
<p>
<b>Note</b>&nbsp;&nbsp;For two-sided media the flip side remains in the Import state and is not available for use until imported.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ntmsapi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use ntmsapi.lib.</p>
<h4>See Also</h4>
<p>
<a href="ntms_api_5nz9.htm#_zaw_media_services_functions">Media Services Functions</a>, <a href="ntms_api_9lwh.htm"><b>DeallocateNtmsMedia</b></a></p>
<p>&nbsp;</p></body>
</HTML>
