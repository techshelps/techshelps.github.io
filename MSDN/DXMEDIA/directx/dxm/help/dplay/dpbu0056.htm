<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirectPlay3::Receive</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IDirectPlay3::Receive">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="Receive"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/dplay/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectPlay Animated Header -- IDirectPlay3::Receive"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/dplay/art/hdrdplay.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectPlay Animated Header -- IDirectPlay3::Receive"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/dplay/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectPlay SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/dplay/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/dplay/dpbu0009.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/dplay/dpbu0055.htm">IDirectPlay3::Open</A>
<IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/dplay/dpbu0057.htm">IDirectPlay3::SecureOpen</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2><HR COLOR="#0000FF">IDirectPlay3::Receive</H2>
<BR CLEAR=ALL>
<A HREF="/directx/dxm/help/dplay/dpbu0022.htm">IDirectPlay3 Interface</A>
<P>Retrieves a message from the message queue. 

<P><B>HRESULT</B> <B>Receive</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDPID</B> <I>lpidFrom</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDPID</B> <I>lpidTo</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwFlags</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpData</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDWORD</B> <I>lpdwDataSize</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpidFrom</I>
</DT><DD>Pointer to a DPID that will be set to the sender's player ID when this method returns. If the DPRECEIVE_FROMPLAYER flag is specified, this variable must be initialized with the player ID before calling this method.
</DD><DT><I>lpidTo</I>
</DT><DD>Pointer to a DPID that will be set to the receiver's player ID when this method returns. If the DPRECEIVE_TOPLAYER flag is specified, this variable must be initialized with the player ID before calling this method.
</DD><DT><I>dwFlags</I>
</DT><DD>One or more of the following control flags can be set. By default (<I>dwFlags</I> = 0), the first available message will be retrieved. 
<DL>
<DT><B><A NAME="DPRECEIVE_ALL">DPRECEIVE_ALL</A></B>
</DT><DD>Returns the first available message. This is the default.
</DD><DT><B><A NAME="DPRECEIVE_PEEK">DPRECEIVE_PEEK</A></B>
</DT><DD>Returns a message as specified by the other flags, but does not remove it from the message queue. This flag must be specified if <I>lpData</I> is NULL.
</DD><DT><B><A NAME="DPRECEIVE_TOPLAYER">DPRECEIVE_TOPLAYER</A></B> and <B><A NAME="DPRECEIVE_FROMPLAYER">DPRECEIVE_FROMPLAYER</A></B> 
</DT><DD>If both DPRECEIVE_TOPLAYER and DPRECEIVE_FROMPLAYER are specified, <B>Receive</B> will only return messages that are 1) sent to the player specified by <I>lpidTo</I> and 2) sent from the player specified by <I>lpidFrom</I>. Note that both conditions must be met.
</DD><DD>If only DPRECEIVE_TOPLAYER is specified, <B>Receive</B> will only return messages sent to the player specified by <I>lpidTo</I>.
</DD><DD>If only DPRECEIVE_FROMPLAYER is specified, <B>Receive</B> will only return messages sent from the player specified by <I>lpidFrom</I>.
</DD><DD>If neither DPRECEIVE_TOPLAYER nor DPRECEIVE_FROMPLAYER is set, <B>Receive</B> will return the first available message.
</DD></DL>
</DD><DT><I>lpData</I>
</DT><DD>Pointer to a buffer where the message data is to be written. Set this parameter to NULL to request only the size of data. The <I>lpdwDataSize</I> parameter will be set to the size required to hold the data. If the message came from player ID DPID_SYSMSG, the application should cast <I>lpData</I> to <A HREF="/directx/dxm/help/dplay/dpbu0100.htm">DPMSG_GENERIC</A> and check the <B>dwType</B> member to see what type of system message it is before processing it.
</DD><DT><I>lpdwDataSize</I>
</DT><DD>Pointer to a DWORD that is initialized to the size of the buffer before calling this method. After the method returns, this parameter will be set to the number of bytes copied into the buffer. If the buffer was too small (DPERR_BUFFERTOOSMALL), then this parameter will be set to the buffer size required. The message order in the receive queue can change between calls to <B>IDirectPlay3::Receive</B>. Therefore, it is possible to get a DPERR_BUFFERTOOSMALL error again even after the application has allocated the memory requested from the previous call to <B>IDirectPlay3::Receive</B>. It is best to keep reallocating memory until a DPERR_BUFFERTOOSMALL error is not received.
</DD></DL>
<H5>Return Values</H5>
<P>Returns DP_OK if successful, or one of the following error values otherwise:
<DL>
<DT><A HREF="/directx/dxm/help/dplay/dpbu0119.htm#DPERR_BUFFERTOOSMALL">DPERR_BUFFERTOOSMALL</A>
</DT><DT><A HREF="/directx/dxm/help/dplay/dpbu0119.htm#DPERR_GENERIC">DPERR_GENERIC</A>
</DT><DT><A HREF="/directx/dxm/help/dplay/dpbu0119.htm#DPERR_INVALIDOBJECT">DPERR_INVALIDOBJECT</A>
</DT><DT><A HREF="/directx/dxm/help/dplay/dpbu0119.htm#DPERR_INVALIDPARAMS">DPERR_INVALIDPARAMS</A>
</DT><DT><A HREF="/directx/dxm/help/dplay/dpbu0119.htm#DPERR_INVALIDPLAYER">DPERR_INVALIDPLAYER</A>
</DT><DT><A HREF="/directx/dxm/help/dplay/dpbu0119.htm#DPERR_NOMESSAGES">DPERR_NOMESSAGES</A>
</DT></DL>

<H5>Remarks</H5>
<P>Any message received from a player ID defined as DPID_SYSMSG is a system message used to notify the application of a change in the session. In those cases, the <I>lpData</I> of system messages should be cast to <A HREF="/directx/dxm/help/dplay/dpbu0100.htm">DPMSG_GENERIC</A> and the <B>dwType</B> member should be examined to see what specific system message it is.

<P>Messages that were sent to a player ID defined as DPID_ALLPLAYERS or to a Group ID still appear to come from the sending player ID. An application will only receive messages directed to a local player. A player cannot receive a message in which the values pointed to by <I>lpidFrom</I> and <I>lpidTo</I> are equal.

<P>If DPSESSION_NOMESSAGEID is specified in the session description, the <I>lpidFrom</I> will always be 0xFFFFFFFF and the <I>lpidTo</I> value is arbitrary.
<P>All the service providers shipped with DirectPlay perform integrity checks on the data to protect against corruption. Any message retrieved using <B>Receive</B> is guaranteed to be free from corruption. 

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/dplay/dpbu0100.htm">DPMSG_GENERIC</A>, <A HREF="/directx/dxm/help/dplay/dpbu0058.htm">IDirectPlay3::Send</A>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
