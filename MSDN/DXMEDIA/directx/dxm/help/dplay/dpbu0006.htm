<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using DirectPlay</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Using DirectPlay">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="dplay_Using_DirectPlay"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/dplay/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectPlay Animated Header -- Using DirectPlay"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/dplay/art/hdrdplay.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectPlay Animated Header -- Using DirectPlay"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/dplay/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectPlay SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/dplay/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/dplay/default.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/dplay/dpbu0005.htm">DirectPlay Providers</A>
<IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/dplay/dpbu0007.htm">DirectPlay Interface Overviews</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Using DirectPlay</H2>
<BR CLEAR=ALL>
<P>This section contains the following topics that explain how to use different aspects of DirectPlay:
<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Debug_vs_Retail">Debug versus Retail DLLs</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Working_with_GUIDs">Working with GUIDs</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_DirectPlay_Interfaces">DirectPlay Interfaces</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Using_Callback_Functions">Using Callback Functions</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Building_Lobby_Aware_Applications">Building Lobby-Aware Applications</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_DirectPlay_Messages">DirectPlay Messages</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_DirectPlay_Address">DirectPlay Address (Optional)</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_5_Migration">Migrating from Previous Versions of DirectPlay</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_DirectPlay_Samples">DirectPlay Tools and Samples</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#Security_and_Authentication">Security and Authentication</A>
</UL>
<H3><A NAME="dplay_Debug_vs_Retail">Debug versus Retail DLLs</A></H3>
<P>The Software Development Kit (SDK) has the option to install debug or retail builds of the DirectPlay dynamic-link libraries (DLLs). When developing software, it is best to install the debug versions of the DLLs. The debug DLLs have additional code that will validate internal data structures and output debug error messages (using the Win32&#174; <B>OutputDebugString</B> API) while your program is executing. When an error occurs, the debug output will give you a more detailed description of what the problem is. The debug DLLs will execute more slowly than the retail DLLs but are much more useful for debugging an application. Be sure to ship the retail version with your application.

<P>In order to see the debug messages, it is necessary to configure your computer so that debug output will be displayed in a window or on a remote computer. An interactive development environment like Microsoft&#174; Visual C++&#153; allows you to do this. Consult the environment's documentation for set-up instructions.


<H3><A NAME="dplay_Working_with_GUIDs">Working with GUIDs</A></H3>
<P>Globally unique identifiers are 16-byte data structures that you can use to identify objects in a globally unique way. Whenever a GUID is required in an API, a symbol representing that GUID should be used. The symbols are either defined in one of the DirectPlay header files or the application developer must generate them. You can generate GUIDs by using the Guidgen.exe utility that comes with Microsoft Visual C++. For example, every application must define an application GUID that identifies the application that is running in a session.

<P><B>Note</B>  If there are different versions of an application that cannot interoperate in the same session, they should have different application GUIDs to distinguish them.<P>To use DirectPlay-defined GUIDs successfully in your application, you must either define the INITGUID symbol prior to all other include and define statements, or you must link to the Dxguid.lib library. If you define INITGUID, you should define it in only one of your source modules.


<H3><A NAME="dplay_DirectPlay_Interfaces">DirectPlay Interfaces</A></H3>
<P>All the functionality in DirectPlay is accessed through member functions on Component Object Model (COM) interfaces. To use them, an application must obtain the appropriate COM interface.

<P>The standard method of obtaining COM interfaces is to use the Win32 <B><A NAME="CoCreateInstance">CoCreateInstance</A></B> API.

 To use it successfully,

 the application must first call the Win32 <B>CoInitialize</B> API to initialize COM and then call <B>CoCreateInstance</B>, specifying the GUID of the desired interface. For example, use the following code to obtain an <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3A</A> interface:


<PRE><FONT FACE="Courier" SIZE="2">
  // C++ example
  hr = CoCreateInstance( CLSID_DirectPlay, NULL, CLSCTX_INPROC_SERVER, 
                         IID_IDirectPlay3A, (LPVOID*)&amp;lpDirectPlay3A);
  // C example
  hr = CoCreateInstance( &amp;CLSID_DirectPlay, NULL, CLSCTX_INPROC_SERVER, 
                         &amp;IID_IDirectPlay3A, (LPVOID*)&amp;lpDirectPlay3A);

</FONT></PRE>
<P>When the program is finished, all the COM interfaces must be freed by calling the <A HREF="/directx/dxm/help/dplay/dpbu0120.htm#IUnknown__Release">Release</A> method on each interface. Finally, the Win32 <B>CoUninitialize</B> method should be called to uninitialize COM.

<P>If you call <B>CoCreateInstance</B> without first calling <B>CoInitialize</B> you will get a CO_E_NOTINITIALIZED error, with the error text "CoInitialize has not been called."


<P>DirectPlay has several COM interfaces. Each interface represents a revision of an earlier version of DirectPlay in which new methods are added. COM interfaces are numbered sequentially with each revision. The latest COM interface will have all the latest functionality of DirectPlay. To access the new functionality (for example, <A HREF="/directx/dxm/help/dplay/dpbu0059.htm#SendChatMessage">IDirectPlay3::SendChatMessage</A>), you must use the latest COM interface. Source code written for an earlier COM interface will work.

<P>Once a COM interface is obtained, an alternate interface can be used on the same object by calling the <A HREF="/directx/dxm/help/dplay/dpbu0120.htm#IUnknown__QueryInter">QueryInterface</A> method on the interface. For example, <A HREF="/directx/dxm/help/dplay/dpbu0011.htm#DirectPlayCreate">DirectPlayCreate</A> will create a DirectPlay object and return an <B>IDirectPlay</B> interface. If your application requires an <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3</A> interface, it can call <B>QueryInterface</B> on the <B>IDirectPlay</B> interface. Be sure to release the original <B>IDirectPlay</B> interface if it is no longer needed.


<H3><A NAME="dplay_Using_Callback_Functions">Using Callback Functions</A></H3>
<P>The enumeration methods in DirectPlay are used to return a list of items to the application. The application calls an enumeration method (such as <A HREF="/directx/dxm/help/dplay/dpbu0037.htm#EnumPlayers">IDirectPlay3::EnumPlayers</A>) and supplies a pointer to a callback function that it has implemented. DirectPlay will call the callback function once for each item in the list. The enumeration method will not return until all the items in the list have been returned to the application through the callback function.

<P>It is extremely important that all callbacks be declared correctly. For example:
<PRE><FONT FACE="Courier" SIZE="2">
BOOL FAR PASCAL EnumConnectionsCallback(LPCGUID lpguidSP, LPVOID lpConnection, DWORD dwConnectionSize,
LPCDPNAME lpName, DWORD dwFlags, LPVOID pContext);
</FONT></PRE>
<P>The FAR PASCAL symbol will define the function as <B>_stdcall</B>. That means it will clean up the stack before returning to DirectPlay. Do not cast function pointers when passing them to a DirectPlay enumeration method. If there is a compiler warning about the function pointer, fix the function declaration.


<H3><A NAME="dplay_Building_Lobby_Aware_Applications">Building Lobby-Aware Applications</A></H3>
<P>A lobby-aware application is one that, at a minimum, supports being launched from a lobby. A matchmaking lobby is a site on the Internet where end users can find other people to play games with. Once a group of people has decided to start an application session, the lobby software can launch the application on each person's computer and have them all connect to a session. The main benefit for end users is the ease with which they can establish a session with other players. Not only does it allow a user to easily find opponents, but there is also no need for the user to:
<UL><LI>Select a service provider. The lobby will specify which service provider to use.
<LI>Decide whether to host or join a session. The lobby will specify whether to create or join a session.
<LI>Enter a network address or configure the network. The lobby will supply this information if it is needed.
<LI>Enter the name of the player. The lobby will pass in the same name that the user connected to the lobby with.
</UL>
<P>Other benefits of the lobby are:
<UL><LI>It can keep track of sessions in progress and enable users to join them.
<LI>It can receive status messages from the session and display the progress to other users on a scoreboard.
<LI>It can obtain final scores and maintain player rankings for tournament play.
</UL>
<P>For a DirectPlay application to be lobby-aware, at a minimum it must support being launched from a lobby. You can add other features to make it integrate better with the lobby. For additional information see the following topics within this section.
<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Registering_Lobby_Aware_Applications">Registering Lobby-Aware Applications</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Supporting_External_Lobby_Launching">Supporting External Lobby Launching</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Lobby_Messaging">LobbyMessaging (Optional)</A>
</UL>
<H4><A NAME="dplay_Registering_Lobby_Aware_Applications">Registering Lobby-Aware Applications</A></H4>
<P>To enable a lobby to launch a DirectPlay application, the application must add the following entries to the system registry. Once an application has been registered, it will be recognized as a lobby-aware application and lobbies can launch it.
These registry entries must be deleted when the application is removed.
<P>The following example shows the registry entries for the DPCHAT sample application included in the SDK. 
<PRE><FONT FACE="Courier" SIZE="2">
[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DirectPlay\Applications\DPChat]
"Guid"="{5BFDB060-06A4-11D0-9C4F-00A0C905425E}"
"File"="dpchat.exe"
"CommandLine"=""
"Path"="C:\DXSDK\sdk\bin"
"CurrentDirectory"="C:\DXSDK\sdk\bin"
</FONT></PRE>
<P>The keys and values are:
<DL>
<DT>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DirectPlay\Applications\
</DT><DD>The key's name will be the name of the application that the <A HREF="/directx/dxm/help/dplay/dpbu0073.htm#EnumLocalApplications">IDirectPlayLobby2::EnumLocalApplications</A> method returns. It is <B>DPChat</B> in the preceding example.
</DD><DT>Guid
</DT><DD>This is the 16-byte GUID that identifies the application. It is formatted as shown in the example. This should be the same GUID that is put in the <B> guidApplication</B> member of the <A HREF="/directx/dxm/help/dplay/dpbu0091.htm#DPSESSIONDESC2">DPSESSIONDESC2</A> structure when creating a session. A GUID can be generated using the Guidgen.exe utility.
</DD><DT>File
</DT><DD>This is the file name of the application executable.
</DD><DT>CommandLine
</DT><DD>This lists any command-line parameters that are to be specified when a lobby launches the application.
</DD><DT>Path
</DT><DD>This is the directory that the application executable resides in.
</DD><DT>CurrentDirectory
</DT><DD>This is the directory to set as the current directory after launching the application executable.
</DD></DL>
<H4><A NAME="dplay_Supporting_External_Lobby_Launching">Supporting External Lobby Launching</A></H4>
<P>Once the application has been registered, the DirectPlay application must be able to recognize whether a lobby launched it or not. If a lobby launched it, it must follow a slightly different code path to set up the network connection. Consult the DUEL (Lobby.c) and DPCHAT (Lobby.cpp) samples in the SDK for the code necessary to support external lobby launching. See <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0008.htm#dplay_Connect_Lobby">Tutorial 1: Connecting by Using the Lobby</A> for a demonstration on how to connect an application by using a DirectPlay lobby. 
<P>The necessary basic steps are:
<OL><LI>At startup, create an <A HREF="/directx/dxm/help/dplay/dpbu0067.htm#IDirectPlayLobby2">IDirectPlayLobby2</A> interface using the <B>CoCreateInstance</B> API.
<LI>The application can examine the connection information that was passed in by the lobby and modify some of the connection settings if necessary. The <A HREF="/directx/dxm/help/dplay/dpbu0074.htm#GetConnectionSettings">IDirectPlayLobby2::GetConnectionSettings</A> method returns a <A HREF="/directx/dxm/help/dplay/dpbu0088.htm#DPLCONNECTION">DPLCONNECTION</A> structure with the connection settings. This method returns <A HREF="/directx/dxm/help/dplay/dpbu0119.htm#DPERR_NOTLOBBIED">DPERR_NOTLOBBIED</A> if a lobby did not launch the application. New settings can be set with <A HREF="/directx/dxm/help/dplay/dpbu0078.htm#SetConnectionSettings">IDirectPlayLobby2::SetConnectionSettings</A>.
<LI><A HREF="/directx/dxm/help/dplay/dpbu0068.htm#Connect">IDirectPlayLobby2::Connect</A> creates or joins the specified application session using the specified service provider, and returns an <B>IDirectPlay2</B> interface. <A HREF="/directx/dxm/help/dplay/dpbu0068.htm#Connect">Connect</A> returns an error if the session could not be created/joined, or if a lobby did not launch the application.
<LI>Use <B>QueryInterface</B> to obtain an <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3</A> interface and then call <B>Release</B> on the <B>IDirectPlay2</B> interface.
<LI>Create a player using the name information supplied in the <A HREF="/directx/dxm/help/dplay/dpbu0088.htm#DPLCONNECTION">DPLCONNECTION</A> structure obtained in step two.
</OL>
<P>At this point, the application can continue on the same code path as if the user had manually selected a connection, joined or created a session, and entered the name of the player to create.
<P>The <A HREF="/directx/dxm/help/dplay/dpbu0067.htm#IDirectPlayLobby2">IDirectPlayLobby2</A> interface can be saved if the game will pass information back to the lobby (see <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Lobby_Messaging">Lobby Messaging</A>), or it can be discarded by using the <B>Release</B> method if no messages will be sent.
<P>Many lobbies will launch the application and then go into a suspend mode, waiting for the application to terminate. DirectPlay will notify the lobby when the application that it launched has terminated. For this reason it is important that the application launched by the lobby not launch another application.


<H4><A NAME="dplay_Lobby_Messaging">Lobby Messaging (Optional)</A></H4>
<P>After registering a lobby-aware application and adding the code to support external lobby launching, the next step in integrating the application with the lobby is to send information back to the lobby or to request information from the lobby. This is done by exchanging messages with the lobby through the <A HREF="/directx/dxm/help/dplay/dpbu0077.htm#SendLobbyMessage">IDirectPlayLobby2::SendLobbyMessage</A> and <A HREF="/directx/dxm/help/dplay/dpbu0075.htm#ReceiveLobbyMessage">IDirectPlayLobby2::ReceiveLobbyMessage</A> methods on the <A HREF="/directx/dxm/help/dplay/dpbu0067.htm#IDirectPlayLobby2">IDirectPlayLobby2</A> interface. Standard message structures have been defined by DirectPlay to facilitate this functionality.
<P>Sending information to the lobby is done through setting properties. The application must create and fill in a <A HREF="/directx/dxm/help/dplay/dpbu0112.htm#DPLMSG_SETPROPERTY">DPLMSG_SETPROPERTY</A> structure and send it to the lobby by using the <A HREF="/directx/dxm/help/dplay/dpbu0077.htm#SendLobbyMessage">SendLobbyMessage</A> method. Each property identifies a distinct type of data. The application developer should generate GUIDs (using Guidgen.exe) for every property that will be set. The lobby operator needs to obtain this list of GUIDs from the application developer along with the description and data structure of each property.
<P>Properties can take the form of:
<UL><LI>Current individual player scores.
<LI>Final individual player scores.
<LI>Player configuration for later retrieval.
<LI>Current game status (level or mission).
</UL>
<P>The lobby can store this information or display it to other users in the lobby so they can monitor the game's progress. An application can request confirmation that the property was set correctly by supplying a nonzero request ID with the set property message.
<P>Requesting information from the lobby is done through requesting properties. The application must create and fill in a <A HREF="/directx/dxm/help/dplay/dpbu0110.htm#DPLMSG_GETPROPERTY">DPLMSG_GETPROPERTY</A> structure and send it to the lobby by using the <A HREF="/directx/dxm/help/dplay/dpbu0077.htm#SendLobbyMessage">SendLobbyMessage</A> method. At some later time, the lobby will send a message back to the application&#151;a <A HREF="/directx/dxm/help/dplay/dpbu0111.htm#DPLMSG_GETPROPERTYRE">DPLMSG_GETPROPERTYRESPONSE</A> structure that contains the property data that was requested. The application can retrieve the message from the lobby message queue using the <A HREF="/directx/dxm/help/dplay/dpbu0075.htm#ReceiveLobbyMessage">ReceiveLobbyMessage</A> method. As before, the application developer generates the GUIDs for each property and the lobby operator must obtain them from the developer.
<P>The following list shows examples of some properties that can be requested from the lobby:
<UL><LI>Game configuration settings &#151; enables players to configure the game in the lobby before launching the game.
<LI>Player configuration settings &#151; enables players to configure their players in the lobby or to use a stored configuration from a previous session.
<LI>Other information stored from a previous session.
</UL>
<P>Not all lobbies will be able to support these standard lobby messages. The application can determine whether the lobby that it was launched from supports standard lobby messages by sending a <A HREF="/directx/dxm/help/dplay/dpbu0110.htm#DPLMSG_GETPROPERTY">DPLMSG_GETPROPERTY</A> message requesting the <A HREF="/directx/dxm/help/dplay/dpbu0116.htm#DPLPROPERTY_MessagesSupported">DPLPROPERTY_MessagesSupported</A> property.



<H3><A NAME="dplay_DirectPlay_Messages">DirectPlay Messages</A></H3>
<P>The following sections describe how to use messages in DirectPlay.
<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Synchronization">Synchronization</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Using_System_Messages">Using System Messages</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Using_Lobby_Messages">Using Lobby Messages</A>
</UL>
<H4><A NAME="dplay_Synchronization">Synchronization</A></H4>
<P>An application can use two methods to process DirectPlay messages. The first is to check the receive queue during the main loop of the application. Typically, this means the application is single threaded.

<P>Alternatively, an application can have a separate thread to wait for messages and process them. In this case the application should supply a non-NULL auto-reset synchronization event handle (see the Win32 <B>CreateEvent</B> API) when it creates players. DirectPlay will set this event whenever a message arrives for that player. All the local players in an application can share the same event or each can have his or her own event.

<P>The message processing thread should then use the Win32 <B>WaitForSingleObject</B> API to wait until the event is set. Continue calling <A HREF="/directx/dxm/help/dplay/dpbu0056.htm#Receive">Receive</A> until there are no more messages in the message queue.


<H4><A NAME="dplay_Using_System_Messages">Using System Messages</A></H4>
<P>Messages returned by the <A HREF="/directx/dxm/help/dplay/dpbu0056.htm#Receive">IDirectPlay3::Receive</A> method from player ID DPID_SYSMSG are system messages. All system messages begin with a double-word value specified by the <B>dwType</B> DWORD value. You can cast the buffer returned by the <B>IDirectPlay3::Receive</B> method to a generic message (<A HREF="/directx/dxm/help/dplay/dpbu0100.htm#DPMSG_GENERIC">DPMSG_GENERIC</A>) and switch on the <B>dwType</B> element, which will have a value equal to one of the messages with the DPSYS_ prefix. After the application has determined which system message it is, the buffer should be cast to the appropriate structure (beginning with the DPMSG_ prefix) to read the data.

<P>Your application should be prepared to handle the following system messages:
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value of dwType </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Message structure </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Cause
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_ADDGROUPTOGROUP </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0093.htm#DPMSG_ADDGROUPTOGROU">DPMSG_ADDGROUPTOGROUP</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An existing group has been added to an existing group.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_ADDPLAYERTOGROUP </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0094.htm#DPMSG_ADDPLAYERTOGRO">DPMSG_ADDPLAYERTOGROUP</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An existing player has been added to an existing group.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_CHAT </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0095.htm#DPMSG_CHAT">DPMSG_CHAT</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A chat message has been received.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_CREATEPLAYERORGROUP </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0096.htm#DPMSG_CREATEPLAYEROR">DPMSG_CREATEPLAYERORGROUP</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A new player or group has been created.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_DELETEGROUPFROMGROUP </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0097.htm#DPMSG_DELETEGROUPFRO">DPMSG_DELETEGROUPFROMGROUP</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A group has been removed from a group.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_DELETEPLAYERFROMGROUP </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0098.htm#DPMSG_DELETEPLAYERFR">DPMSG_DELETEPLAYERFROMGROUP</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A player has been removed from a group.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_DESTROYPLAYERORGROUP </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0099.htm#DPMSG_DESTROYPLAYERO">DPMSG_DESTROYPLAYERORGROUP</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An existing player or group has been destroyed.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_HOST </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0101.htm#DPMSG_HOST">DPMSG_HOST</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The current host has left the session and this application is the new host.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_SECUREMESSAGE </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0102.htm#DPMSG_SECUREMESSAGE">DPMSG_SECUREMESSAGE</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A digitally signed or encrypted message has been received.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_SESSIONLOST </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0103.htm#DPMSG_SESSIONLOST">DPMSG_SESSIONLOST</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The connection with the session has been lost.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_SETPLAYERORGROUPDATA </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0104.htm#DPMSG_SETPLAYERORGRO">DPMSG_SETPLAYERORGROUPDATA</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Player or group data has changed.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_SETPLAYERORGROUPNAME </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0105.htm#DPMSG_SETPLAYERORGRO">DPMSG_SETPLAYERORGROUPNAME</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Player or group name has changed.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_SETSESSIONDESC </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0106.htm#DPMSG_SETSESSIONDESC">DPMSG_SETSESSIONDESC</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The session description has changed.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPSYS_STARTSESSION </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0107.htm#DPMSG_STARTSESSION">DPMSG_STARTSESSION</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The lobby server is requesting that a session be started.
</FONT></TD>
</TR>
</TABLE>
<H4><A NAME="dplay_Using_Lobby_Messages">Using Lobby Messages</A></H4>
<P>Messages returned by the <A HREF="/directx/dxm/help/dplay/dpbu0075.htm#ReceiveLobbyMessage">IDirectPlayLobby2::ReceiveLobbyMessage</A> method fall into two categories: DirectPlay-defined messages and custom-defined messages. The message category can be identified by the <I>lpdwMessageFlags</I> parameter of <A HREF="/directx/dxm/help/dplay/dpbu0075.htm#ReceiveLobbyMessage">ReceiveLobbyMessage</A>. The flags indicate that the message is either a system message (the <A HREF="/directx/dxm/help/dplay/dpbu0075.htm#DPLMSG_SYSTEM">DPLMSG_SYSTEM</A> flag) or a standard message (the <A HREF="/directx/dxm/help/dplay/dpbu0075.htm#DPLMSG_STANDARD">DPLMSG_STANDARD</A> flag). If neither of these flags is set, the message is custom-defined. System messages are generated automatically by DirectPlay and are sent to the lobby only to inform it of changes in the status of the application. Standard messages can be generated by either the lobby or the application and sent to the other. 
<P>The advantage of standard messages over custom-defined messages is that the receiver can positively interpret the message. It is not required that all applications or lobbies act on standard messages.

<P>DirectPlay-defined messages all start with a DWORD value that identifies the type of the message. After retrieving a message using <A HREF="/directx/dxm/help/dplay/dpbu0075.htm#ReceiveLobbyMessage">ReceiveLobbyMessage</A>, the <I>lpData</I> pointer to the message data should be cast to the <A HREF="/directx/dxm/help/dplay/dpbu0109.htm#DPLMSG_GENERIC">DPLMSG_GENERIC</A> structure and the structure's <B> dwType</B> member examined. Based on the value of <B> dwType</B>, the <I>lpData</I> pointer should then be cast to the appropriate message structure for further processing.
<P>Lobbies should be prepared to handle all the following message types.

 Applications need to handle the <A HREF="/directx/dxm/help/dplay/dpbu0111.htm#DPLMSG_GETPROPERTYRE">DPLMSG_GETPROPERTYRESPONSE</A> message if they generate <A HREF="/directx/dxm/help/dplay/dpbu0110.htm#DPLMSG_GETPROPERTY">DPLMSG_GETPROPERTY</A> messages.
<P>Messages returned by the <A HREF="/directx/dxm/help/dplay/dpbu0075.htm#ReceiveLobbyMessage">IDirectPlayLobby2::ReceiveLobbyMessage</A> method that have a <I>dwFlags</I> parameter set to DPLMSG_SYSTEM are system messages. All system messages begin with a double-word value specified by <B>dwType</B>. You can cast the buffer returned by the <B>IDirectPlayLobby2::ReceiveLobbyMessage</B> method to a generic message (<A HREF="/directx/dxm/help/dplay/dpbu0109.htm#DPLMSG_GENERIC">DPLMSG_GENERIC</A>) and switch on the <B>dwType</B> element, which will have a value equal to one of the messages with the DPLSYS_ prefix.

<P>The following list shows the possible values of the <I>dwType</I> data member, and the message structure and message cause associated with each value.
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value of dwType </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Message structure </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Cause
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPLSYS_APPTERMINATED </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0109.htm#DPLMSG_GENERIC">DPLMSG_GENERIC</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The application has terminated.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPLSYS_CONNECTIONSETTINGSREAD </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0109.htm#DPLMSG_GENERIC">DPLMSG_GENERIC</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The application has read the connection settings.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPLSYS_DPLAYCONNECTFAILED </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0109.htm#DPLMSG_GENERIC">DPLMSG_GENERIC</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The application failed to connect to the DirectPlay session.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPLSYS_DPLAYCONNECTSUCCEEDED </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0109.htm#DPLMSG_GENERIC">DPLMSG_GENERIC</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The application successfully connected to the DirectPlay session.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPLSYS_GETPROPERTY </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0110.htm#DPLMSG_GETPROPERTY">DPLMSG_GETPROPERTY</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The application is requesting a property from the lobby.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> DPLSYS_GETPROPERTYRESPONSE </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0111.htm#DPLMSG_GETPROPERTYRE">DPLMSG_GETPROPERTYRESPONSE</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The lobby is responding to a prior DPLMSG_GETPROPERTY message.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPLSYS_SETPROPERTY </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0112.htm#DPLMSG_SETPROPERTY">DPLMSG_SETPROPERTY</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The application is setting a property on the lobby.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPLSYS_SETPROPERTYRESPONSE 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/dplay/dpbu0113.htm#DPLMSG_SETPROPERTYRE">DPLMSG_SETPROPERTYRESPONSE</A> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The lobby is responding to a prior DPLMSG_SETPROPERTY message.
</FONT></TD>
</TR>
</TABLE>
<H3><A NAME="dplay_DirectPlay_Address">DirectPlay Address (Optional)</A></H3>
<P>A DirectPlay Address is a data format that DirectPlay uses to pass addressing information between lobby servers, applications, DirectPlay, and service providers. The format is flexible enough to hold any number of variable-length data fields that make up a network address. It is not necessary to understand DirectPlay Addresses in order to use DirectPlay. In fact, it is possible to successfully write a DirectPlay application without understanding DirectPlay Addresses at all.


<P>This section contains the following topics:
<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_DirectPlay_Address_Data_Types">DirectPlay Address Data Types</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Using_DirectPlay_Addresses">Using DirectPlay Addresses</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Examples_of_Using_DirectPlay_Addresses">Examples of Using DirectPlay Addresses</A>
</UL>
<P>It is only necessary to learn about DirectPlay Addresses if you want to do the following things:
<UL><LI>Override the standard service provider dialog boxes. You need to create a DirectPlay Address that specifies which service provider to use and contains all the information the service provider needs to establish a connection. You then pass the DirectPlay Address to the <A HREF="/directx/dxm/help/dplay/dpbu0054.htm#InitializeConnection">IDirectPlay3::InitializeConnection</A> method.
<LI>Write a lobby client that will launch an external DirectPlay application. The lobby client needs to create a DirectPlay Address that specifies which service provider to use and contains all the information the service provider needs to establish a connection and automatically connect the client to a session. You need to create a DirectPlay Address of the session to be joined and put it in the <A HREF="/directx/dxm/help/dplay/dpbu0088.htm#DPLCONNECTION">DPLCONNECTION</A> structure before calling the <A HREF="/directx/dxm/help/dplay/dpbu0076.htm#RunApplication">IDirectPlayLobby2::RunApplication</A> method.
</UL>
<P>A DirectPlay Address is a sequence of variable-length data chunks tagged with a GUID that supplies all the address information needed by DirectPlay. Examples are the network address of a server, the network address of a player, the e-mail name of a player, or the network address of a session. 
 

<H4><A NAME="dplay_DirectPlay_Address_Data_Types">DirectPlay Address Data Types</A></H4>
<P>Microsoft has predefined the following general data types for each data chunk. Based on the data type, the data must be cast to the appropriate type or structure to interpret the data. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>GUID </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Type of Data 
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_ComPort </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="/directx/dxm/help/dplay/dpbu0084.htm#DPCOMPORTADDRESS">DPCOMPORTADDRESS</A> structure that contains all the settings for the COM port. The <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_Serial_Link">serial connection</A> service provider will use this information to configure the serial port.


</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_INet </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A null-terminated ANSI string (LPSTR) containing an IP address ("137.55.100.173") or a domain net ("gameworld.com"). The length in bytes must include the terminator.
<P>A blank address is a string that contains only the ANSI terminator (0x00) and has a length of 1 byte. If a blank address is supplied, the Internet TCP/IP connection service provider will use this information to enumerate sessions on the specified network address or to broadcast on the subnet. 

</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_INetW </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A null-terminated Unicode string (LPWSTR) containing an IP address ("137.55.100.173") or a domain net ("gameworld.com"). The length in bytes must include the terminator.
<P>A blank address is a string that contains only the Unicode terminator (0x0000) and has a length of 2 bytes. If a blank address is supplied, the Internet TCP/IP connection service provider will use this information to enumerate sessions on the specified network address or broadcast on the subnet. 

</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_LobbyProvider
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The 16-byte GUID that specifies the lobby provider this DirectPlay Address applies to.

</FONT></TD>
</TR>

<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_Modem
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A variable-length null-terminated ANSI string (LPSTR) specifying which installed modem to use. The length in bytes must include the terminator. The modem service provider will use this modem without displaying a dialog box asking the user which modem to use. Use the <A HREF="/directx/dxm/help/dplay/dpbu0047.htm#GetPlayerAddress">IDirectPlay3::GetPlayerAddress</A> method to determine which modems are available.

</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_ModemW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A variable-length null-terminated Unicode string (LPWSTR) specifying which installed modem to use. The length in bytes must include the terminator. The modem service provider will use this modem without displaying a dialog box asking the user which modem to use. Use the <A HREF="/directx/dxm/help/dplay/dpbu0047.htm#GetPlayerAddress">IDirectPlay3::GetPlayerAddress</A> method to determine which modems are available.

</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_Phone
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A variable-length null-terminated ANSI string (LPSTR) containing a phone number. The length in bytes must include the terminator. The modem service provider will call this phone number on the <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A> method. If no modem is specified, the first modem will be used.

</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_PhoneW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A variable-length null-terminated Unicode string (LPWSTR) containing a phone number. The length in bytes must include the terminator. The modem service provider will call this phone number on the <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A> method. If no modem is specified, the first modem will be used.

</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_ServiceProvider
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The 16-byte GUID that specifies the service provider this DirectPlay Address applies to.

</FONT></TD>
</TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_TotalSize
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A DWORD containing the size of entire DPADDRESS structure.

</FONT></TD>
</TR>

</TABLE>
<H4><A NAME="dplay_Using_DirectPlay_Addresses">Using DirectPlay Addresses</A></H4>
<P>You can use a DirectPlay Address to encapsulate all the information necessary to initialize a DirectPlay object. At a minimum, this is the GUID of a DirectPlay provider, but can also include the network address of an application or lobby server and even a specific session instance GUID.
<P>A DirectPlay Address can be used to supply enough information to DirectPlay (and the DirectPlay provider) when it is initialized so that no dialog boxes appear later during the process of establishing a session or connecting to a session.
<P>The DirectPlay Addresses returned by <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0033.htm#EnumConnections">EnumConnections</A> are simply registered DirectPlay providers that the user can choose from. When one of these is initialized, dialog boxes can appear, which ask the user for more information. 

<P>The application can create a DirectPlay Address directly using the <A HREF="/directx/dxm/help/dplay/dpbu0069.htm#CreateAddress">IDirectPlayLobby2::CreateAddress</A> and <A HREF="/directx/dxm/help/dplay/dpbu0070.htm#CreateCompoundAddress">IDirectPlayLobby2::CreateCompoundAddress</A> methods on the <A HREF="/directx/dxm/help/dplay/dpbu0067.htm#IDirectPlayLobby2">IDirectPlayLobby2</A> interface and pass the connection to the <A HREF="/directx/dxm/help/dplay/dpbu0054.htm#InitializeConnection">IDirectPlay3::InitializeConnection</A> method to initialize the DirectPlay object. If enough valid information is supplied, then no DirectPlay dialog boxes will appear. 


<H4><A NAME="dplay_Examples_of_Using_DirectPlay_Addresses">Examples of Using DirectPlay Addresses</A></H4>
<P>This topic contains examples of DirectPlay Addresses and the data they contain for different connection types.

<P><B>A DirectPlay Address describing an IPX connection</B>
<P>Initializing this connection will bind the DirectPlay object to the IPX service provider.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>guidDataType </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>dwDataSize </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Data 
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_ServiceProvider </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">16 </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">{685BC400-9D2C-11cf-A9CD-00AA006886E3}
</FONT></TD>
</TR>
</TABLE>
<P><B>A DirectPlay Address describing a modem connection</B>
<P>Initializing this connection binds DirectPlay to the modem service provider and stores the phone number. A subsequent call the <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A> will dial the number without asking the user for a phone number.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>guidDataType </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>dwDataSize </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Data 
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_ServiceProvider </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">16 </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">{44EAA760-CB68-11cf-9C4E-00A0C905425E}
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_Phone </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> 9 (including NULL terminator) </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"555-8237"
</FONT></TD>
</TR>
</TABLE>
<P><B>A DirectPlay Address describing a TCP/IP connection</B>
<P>Initializing this connection binds DirectPlay to the TCP/IP service provider and stores the IP address. A subsequent call <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A> will enumerate sessions on this server without asking the user for an IP address.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>guidDataType </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>dwDataSize </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Data 
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_ServiceProvider </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">16 </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">{36E95EE0-8577-11cf-960C-0080C7534E82}
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPAID_INet </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">10 (including NULL terminator) </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"127.0.0.1"
</FONT></TD>
</TR>
</TABLE>
<H3><A NAME="dplay_5_Migration">Migrating from Previous Versions of DirectPlay</A></H3>
<P>The DirectPlay version 5 API is fully compatible with applications written for any previous version of DirectPlay. That is, you can recompile your application by using DirectPlay on the DirectX 5 SDK without making any changes to the code. DirectPlay supplied with the DirectX 5 SDK supports all the APIs and behavior of earlier DirectPlay versions.
<P>For specific information, see:
<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Migrating_from_DirectPlay_3">Migrating from DirectPlay 3</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#Migrating_from_DirectPlay_2_or_Earlier">Migrating from DirectPlay 2 or Earlier</A>
</UL>
<H4><A NAME="dplay_Migrating_from_DirectPlay_3">Migrating from DirectPlay 3</A></H4>
<P>If you are migrating to DirectPlay version 5 from DirectPlay version 3, you do not have to make any changes. However, you should upgrade your application to use the new <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3 Interface</A> or <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3A</A> interfaces.

<P>For a list of new features in version 5 of DirectPlay, see <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0001.htm">What's New in DirectPlay 5</A>.

<P>Some system messages have changed for DirectPlay 5, with new data members added to the end. Applications that need to be backward-compatible with older run times should either:
<UL><LI>Compile with the DirectX 3 header files and libraries.
<LI>Not reference new data members.
<LI>Test with both the DirectX 3 and the DirectX 5 runtime.
</UL>
<P>The system message structures that have new members for DirectPlay 5 are:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Structure </B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>New Members
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPMSG_CREATEPLAYERORGROUP </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPID dpIdParent
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DWORD dwFlags
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPMSG_DESTROYPLAYERORGROUP </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPNAME dpnName
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DPID dpIdParent
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> </FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DWORD dwFlags
</FONT></TD>
</TR>
</TABLE>
<H4><A NAME="Migrating_from_DirectPlay_2_or_Earlier">Migrating from DirectPlay 2 or Earlier</A></H4>
<P>The names of the DirectPlay DLLs in version 3 and later are different from those in previous DirectPlay versions. Applications compiled with DirectX 2 or earlier do not use the new DirectPlay DLLs. To use the new DLLs, the application must be recompiled and linked to the Dplayx.lib import library. 
<P>It is also recommended that you add the code necessary to make the application lobby-aware. This means that an external lobby or matchmaking program can start the application and supply it with all the information necessary to connect to a session. The application need not ask the user to decide on a <A HREF="/directx/dxm/help/dplay/dpbu0129.htm#service_provider">service provider</A>, select a session, or supply any other information (such as a telephone number or network address).

<P>In addition, several other new features were added in the DirectPlay version 5 API, including: 
<UL><LI>Internet support.

<LI>Direct serial connection.

<LI>More stability and robustness.

<LI>Support for Unicode to better support localization.

<LI>Host migration. If the <A HREF="/directx/dxm/help/dplay/dpbu0125.htm#host">host</A> of a session drops out of the session, host responsibilities are passed on to another player. In DirectPlay version 2, if the host (name server) left a session, no new players could be created.

<LI>Ability of the application to communicate with the lobby program to update games status for spectators, as well as receive information about initial conditions.

<LI>Ability to host more than one application session on a computer.

<LI>Ability to determine when a remote computer loses its connection and to generate appropriate messages.
</UL>
<P>There are other features in DirectPlay 5 that you can use to reduce the amount of communication-management code in your application, including the following:

<UL><LI>Ability to associate application-specific data with a DirectPlay group ID or player ID. This allows the application to leverage the player and group list-management code that is already part of DirectPlay. Local data is data that the local application uses directly, such as a bitmap that represents a player. Local data is not propagated over the network. Remote data is associated with the player or group. DirectPlay propagates any changes to remote data to all other applications in the session. Remote data must be shared among all the applications in a session, such as a player's position, orientation, and velocity. By using DirectPlay functions to propagate this data, the application need not manage it by using a series of methods that send and receive information.

<LI>Ability for the application to associate a name with a group. This is useful for team play.
</UL>
<P>Some of the new features added to DirectPlay 5 are not directly related to applications, including the following:

<UL><LI>APIs that the <A HREF="/directx/dxm/help/dplay/dpbu0127.htm#lobby_client">lobby client</A> software uses to start and connect a lobby-able DirectPlay application. Also included are APIs that allow an application and the lobby to exchange information during a session.

<LI>Service provider development kit that includes documentation and sample code for creating your own service provider.
</UL>
<A NAME="dplay_Migration_Steps_to"></A><P><B>Migrating to the IDirectPlay3 Interface</B>
<P>To migrate an application created with DirectPlay version 2 or earlier, carry out the following steps:

<OL><LI>Find out if your application was launched from a lobby client. For more information, see <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0008.htm#dplay_Getting_Connection">Step 2: Retrieving the Connection Settings</A>.

<LI>If your application is enumerating <A HREF="/directx/dxm/help/dplay/dpbu0129.htm#service_provider">service provider</A>s, use the <A HREF="/directx/dxm/help/dplay/dpbu0033.htm#EnumConnections">EnumConnections</A> method to determine if a service provider is available. If so, call the <A HREF="/directx/dxm/help/dplay/dpbu0054.htm#InitializeConnection">InitializeConnection</A> method on the service provider. If <B>InitializeConnection</B> returns an error, the service provider cannot run on the system, and you should not add that service provider to the list to show to the user. If the call succeeds, use the <A HREF="/directx/dxm/help/dplay/dpbu0120.htm#IUnknown__Release">Release</A> method to release the DirectPlay object and add the service provider to the list.

<LI>Call the <A HREF="/directx/dxm/help/dplay/dpbu0120.htm#IUnknown__QueryInter">QueryInterface</A> method on the <B>IDirectPlay</B> interface to obtain an <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3</A> (Unicode) or <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3A</A> (ANSI) interface. The only difference between the two interfaces is how strings in the structures are read and written. For the Unicode interface, Unicode strings are read and written to the member of the structure that is of the <B>LPWSTR</B> type. For the ANSI interface, ANSI strings are read and written to the member of the structure that is of the <B>LPSTR</B> type.

<LI>Make all the changes necessary to use the new structures in existing APIs. For example, instead of the following:

<PRE><FONT FACE="Courier" SIZE="2">lpDP-&gt;SetPlayerName(pidPlayer, lpszFriendlyName, lpszFormalName)
</FONT></PRE>
<P>where <I>lpDP</I> is an <B>IDirectPlay</B> interface, use the following:

<PRE><FONT FACE="Courier" SIZE="2">DPNAME PlayerName, *lpPlayerName;
PlayerName.dwSize = sizeof(DPNAME);
lpPlayerName = &amp;PlayerName;

lpPayerName-&gt;lpszShortNameA = lpszFriendlyName;
lpPlayerName-&gt;lpszLongNameA = lpszFormalName;
lpDP3A-&gt;SetPlayerName(pidPlayer, lpPlayerName, 0)
</FONT></PRE>
<P>where <I>lpDP3A</I> is an <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3A</A> interface. If the application is using Unicode strings (and therefore instantiates an <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3</A> interface), use the following:

<PRE><FONT FACE="Courier" SIZE="2">lpPayerName-&gt;lpszShortName = lpwszFriendlyName;
lpPlayerName-&gt;lpszLongName = lpwszFormalName;
lpDP3-&gt;SetPlayerName(pidPlayer, lpPlayerName, 0)
</FONT></PRE>
<P>where <I>lpDP3</I> is an <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3</A> interface.

<LI>Update the following system messages:

<UL><LI>DPSYS_ADDPLAYER has been replaced by DPSYS_CREATEPLAYERORGROUP.
<LI>DPSYS_DELETEPLAYER and DPSYS_DELETEGROUP have been combined in a single DPSYS_DESTROYPLAYERORGROUP message.
<LI>DPSYS_DELETEPLAYERFROMGRP has been changed to DPSYS_DELETEPLAYERFROMGROUP.
</UL>
<LI>Update your application to generate a DPSYS_SETPLAYERORGROUPNAME message when a player or group name changes, and a DPSYS_SETPLAYERORGROUPDATA message when the player or group data changes.

<LI>Update the <B>DPSESSIONDESC</B> structure to <A HREF="/directx/dxm/help/dplay/dpbu0091.htm#DPSESSIONDESC2">DPSESSIONDESC2</A>, and add the new members to the <A HREF="/directx/dxm/help/dplay/dpbu0082.htm#DPCAPS">DPCAPS</A> structure.

<LI>Update the callback functions for <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A>, <A HREF="/directx/dxm/help/dplay/dpbu0035.htm#EnumGroups">IDirectPlay3::EnumGroups</A>, <A HREF="/directx/dxm/help/dplay/dpbu0034.htm#EnumGroupPlayers">IDirectPlay3::EnumGroupPlayers</A>, and <A HREF="/directx/dxm/help/dplay/dpbu0037.htm#EnumPlayers">IDirectPlay3::EnumPlayers</A>.

<LI>Update the manner in which the <I>hEvent</I> parameter is supplied to the <A HREF="/directx/dxm/help/dplay/dpbu0028.htm#CreatePlayer">IDirectPlay3::CreatePlayer</A> method. In previous versions of DirectPlay, this parameter was <I>lpEvent</I>. DirectPlay does not return an event; instead, the application must create it. This allows the application the flexibility of creating one event for all the players.

<LI>Set the <A HREF="/directx/dxm/help/dplay/dpbu0091.htm#DPSESSION_KEEPALIVE">DPSESSION_KEEPALIVE</A> flag in the <A HREF="/directx/dxm/help/dplay/dpbu0091.htm#DPSESSIONDESC2">DPSESSIONDESC2</A> structure if the application needs DirectPlay to detect when players drop out of the game abnormally.

<LI>Update your application to create sessions with the <A HREF="/directx/dxm/help/dplay/dpbu0091.htm#DPSESSION_MIGRATEHOS">DPSESSION_MIGRATEHOST</A> flag. This enables another computer to become the <A HREF="/directx/dxm/help/dplay/dpbu0125.htm#host">host</A> if the current host drops out of the session. If your application has any special code that only the host runs, then your application should set this flag when it creates a session. It should also add support for the DPSYS_HOST system message. For a list of system messages, see <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_Using_System_Messages">Using System Messages</A>.

<LI>Become familiar with the new methods of the <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3</A> interface and use them in your application. Pay particular attention to the <A HREF="/directx/dxm/help/dplay/dpbu0063.htm#SetPlayerData">IDirectPlay3::SetPlayerData</A> and <A HREF="/directx/dxm/help/dplay/dpbu0049.htm#GetPlayerData">IDirectPlay3::GetPlayerData</A> methods. You might be able to substitute the code where you broadcast player state information to all the other players by using the <A HREF="/directx/dxm/help/dplay/dpbu0058.htm#Send">IDirectPlay3::Send</A> and <A HREF="/directx/dxm/help/dplay/dpbu0056.htm#Receive">IDirectPlay3::Receive</A> methods.
</OL>
<H3><A NAME="dplay_DirectPlay_Samples">DirectPlay Tools and Samples</A></H3>
<P>The following samples show how to use DirectPlay. These DirectPlay samples are included on the DirectX 5 CD-ROM. The Control Panel tool can be used to find out about DirectPlay applications.
<P><B>DirectX Control Panel Tool</B>
<UL><LI>Found in <B>Control Panel</B>. Double-click to open the DirectX <B>Properties</B> dialog box.
<LI>The <B>DirectPlay</B> tab displays all the registered DirectPlay service providers and applications.
<LI>Open the DirectX <B>Properties</B> dialog box before starting a DirectPlay application to see on-the-fly statistics about DirectPlay communications such as bytes/second and messages/second. 
</UL>
<P><B>SDK/SAMPLES/BELLHOP</B>
<UL><LI>A lobby client program that uses the IDirectPlay3 interface to communicate with a lobby server.
<LI>Uses the LSERVER test lobby server so that a real lobby client/server environment can be set up.
<LI>BELLHOP can be used to test external lobby support in your application.
<LI>LSERVER can be used as a test server to write your own lobby client or integrate a lobby client into your application.
</UL>
<P><B>SDK/SAMPLES/DPCHAT</B>
<UL><LI>A simple Windows-based chat program that uses IDirectPlay3.
 <LI>Uses IDirectPlayLobby to make it lobby-able.
</UL>
<P><B>SDK/SAMPLES/DPLAUNCH</B>
<UL><LI>A stand-alone application that demonstrates how a DirectPlay 5 application
 can be launched from an external source using the IDirectPlayLobby2 interface.
<LI>Can also be used to test the lobby support in your application.
</UL>
<P><B>SDK/SAMPLES/DPSLOTS</B>
<UL><LI>A DirectPlay client/server application that uses security.

<LI>The server controls all the slot machines and tracks how much money each player has.
<LI>The client securely logs in to the server.
</UL>
<P><B>SDK/SAMPLES/DUEL</B>

<UL><LI>A multiplayer game that uses the IDirectPlay interface.
 <LI>Uses IDirectPlayLobby to make it lobby-able.
</UL>
<P><B>SDK/SAMPLES/DXVIEW</B>
<UL><LI>An application that shows all the available service providers and their capabilities.
 <LI>Shows all the registered lobby-aware applications installed on the system. 
<LI>Uses asynchronous <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">EnumSessions</A> to monitor the active sessions on the service provider.
</UL>
<P><B>SDK/SAMPLES/OVERRIDE</B>
<UL><LI>A simple demonstration of how to override the DirectPlay service provider dialogs.
</UL>
<H3><A NAME="Security_and_Authentication">Security and Authentication</A></H3>
<P>DirectPlay security allows an application running on a server to authenticate users against a database of known users before allowing them to join a session. Once a user has been authenticated, all communications between the client and server can be done securely either by digitally signing messages (to verify the identity of the sender) or by encrypting the messages.
<P>The following diagram shows DirectPlay security architecture. (SSPI = Security Support Provider Interface, CAPI = CryptoAPI, MS RSA Base CP = Microsoft RSA Base Cryptographic Provider, NTLM = NT LAN Manager.)
<P><IMG SRC="/directx/dxm/help/dplay/art/over12.gif" WIDTH="332" HEIGHT="185" ALT="DirectPlay security architecture">

<P><B>User and Message Authentication</B>
<P>DirectPlay provides user and message authentication (digital signing) support through the Windows&#174; Security Support Provider Interface (SSPI). This is a standard interface that gives software access to various security packages under the Windows operating system. A security package is an implementation of a protocol between a client and server that establishes the identity of the client and provides other security services, such as digital signing. The default security package that DirectPlay uses is called NTLM (Windows&#174; NT&#174; LAN Manager) Security Support Provider.

<P>This security package is based on the NTLM authentication protocol. NTLM is a shared-secret, user challenge-response authentication protocol that supports pass-through authentication to a domain controller in the server's domain or in a domain trusted by the current domain's domain controller. This protocol provides a high level of security because passwords are never sent out on the network. NTLMSSP ships with the Windows 95 and Windows NT operating systems.

<P>A DirectPlay application can choose to use a different SSPI security package when it creates a session by calling the <A HREF="/directx/dxm/help/dplay/dpbu0057.htm#SecureOpen">SecureOpen</A> method. For example, DPA (Distributed Password Authentication) Security Support Provider is another security package that organizations can use to provide membership services to a large customer base (hundreds of thousands). This security package is available through the Microsoft Commercial Internet Services (MCIS) Membership Server. 

<P><B>Message Privacy (encryption/decryption)</B>
<P>DirectPlay provides message encryption support through the Windows Cryptography Application Programming Interface (CAPI). This is a standard interface similar to SSPI that gives software access to various cryptographic packages under the Windows operating system. This architecture allows DirectPlay applications to plug in cryptographic packages that provide the desired level of encryption (40 bit, 128 bit, and so on) legally allowed in the locale of use. 

<P>The default CryptoAPI (CAPI) provider for DirectPlay cryptography services is the Microsoft RSA Base Cryptographic Provider version 1.0. The default CAPI provider type is PROV_RSA_FULL. The default encryption algorithm is the CALG_RC4 stream cipher. This provider is supplied by Microsoft and is included with Microsoft Internet Explorer for Windows 95, Windows 95 OSR-2 Update, and Windows NT 4.0 operating system.

<P>A DirectPlay application can choose to use a different cryptographic provider when it creates a session by using the SecureOpen method. Please note that DirectPlay only supports stream ciphers.

<P>For more information about SSPI, NTLM, DPA, MCIS, CAPI, and the RSA Base Cryptographic Provider, see <I>http://www.microsoft.com</I>.

<P><B>Secure Sessions</B>

<P>User authentication should not be confused with password protection of a session. Authentication is used to verify that the user is allowed access to the server by virtue of having been added to the membership database by the administrator of the server. Only users that are part of the membership database are permitted to join the session. A password can be added to a session, so that only those members who know the password can join a particular session. Additionally, authentication requires a server that supports authentication, while any computer can put a password on a session.

<P>For example, a server on the Internet might have a membership of a thousand users. Anybody can enumerate the sessions that are available on the server, but only members will be able to join sessions on the server. Users who want only their friends (who are members) to be able to join can put a password on their session. 


<P>Once a secure server has been set up and an initial membership list has been established, a secure DirectPlay session can be started. Creating a secure DirectPlay session simply requires the server to create a session using <A HREF="/directx/dxm/help/dplay/dpbu0055.htm#Open">IDirectPlay3::Open</A> or <A HREF="/directx/dxm/help/dplay/dpbu0057.htm#SecureOpen">IDirectPlay3::SecureOpen</A> and to specify the <A HREF="/directx/dxm/help/dplay/dpbu0091.htm#DPSESSION_SECURESERV">DPSESSION_SECURESERVER</A> flag in the <A HREF="/directx/dxm/help/dplay/dpbu0091.htm#DPSESSIONDESC2">DPSESSIONDESC2</A> structure.

<P>A DirectPlay application can choose to use alternate providers when it creates a session by calling the <A HREF="/directx/dxm/help/dplay/dpbu0057.htm#SecureOpen">SecureOpen</A> method and specifying the providers to use in the <A HREF="/directx/dxm/help/dplay/dpbu0090.htm#DPSECURITYDESC">DPSECURITYDESC</A> structure. For a different SSPI provider (for user and message authentication), an application needs to specify the provider name in the <I>lpszSSPIProvider</I> member of the <B>DPSECURITYDESC</B> structure. For a different CryptoAPI provider (for message privacy), an application needs to specify the provider name, provider type, and encryption algorithm in the <I>lpszCAPIProvider</I>, <I>dwCAPIProviderType</I>, and <I>dwEncryptionAlgorithm</I> members, respectively.


<P>When a client enumerates this session, the <A HREF="/directx/dxm/help/dplay/dpbu0091.htm#DPSESSIONDESC2">DPSESSIONDESC2</A> structure returned by <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A> will have the <A HREF="/directx/dxm/help/dplay/dpbu0091.htm#DPSESSION_SECURESERV">DPSESSION_SECURESERVER</A> flag set. This tells the client that authentication credentials will be required to join the session. If the client attempts to join the session using <A HREF="/directx/dxm/help/dplay/dpbu0055.htm#Open">IDirectPlay3::Open</A>, the security package may allow the user in if the user's credentials were already established through a system log on (for example, through NT LAN Manager). Otherwise, a <A HREF="/directx/dxm/help/dplay/dpbu0119.htm#DPERR_LOGONDENIED">DPERR_LOGONDENIED</A> error is returned. The application must then collect credentials from the user, put them in a <A HREF="/directx/dxm/help/dplay/dpbu0086.htm#DPCREDENTIALS">DPCREDENTIALS</A> structure, and try to join the session again by calling <A HREF="/directx/dxm/help/dplay/dpbu0057.htm#SecureOpen">SecureOpen</A>, passing in the <B>DPCREDENTIALS</B> structure. <B>SecureOpen</B> is recommended for security. 


<P>Within a secure session, all DirectPlay system messages are digitally signed to verify the identity of the sender. Certain system messages that carry sensitive information are encrypted. System messages that originate from one player and need to be broadcast to all the other players in the session are first sent to the server. The server then puts its signature on the message and forwards the message to all the other computers in the session. Player to player messages are not signed by default and are not routed through the server. 

<P>An application can choose to sign or encrypt specific player-to-player messages using the <A HREF="/directx/dxm/help/dplay/dpbu0058.htm#DPSEND_SIGNED">DPSEND_SIGNED</A> and <A HREF="/directx/dxm/help/dplay/dpbu0058.htm#DPSEND_ENCRYPTED">DPSEND_ENCRYPTED</A> flags in the <A HREF="/directx/dxm/help/dplay/dpbu0058.htm#Send">IDirectPlay3::Send</A> method. Signed and encrypted player messages are routed through the server and delivered as secure system messages. When a secure message is received by a player, the message will contain flags indicating whether the message came in signed or encrypted. Messages that do not pass the verification are dropped. 
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
