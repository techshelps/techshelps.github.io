<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EnumPlayersCallback2</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="EnumPlayersCallback2">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="EnumPlayersCallback2"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/dplay/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectPlay Animated Header -- EnumPlayersCallback2"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/dplay/art/hdrdplay.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectPlay Animated Header -- EnumPlayersCallback2"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/dplay/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectPlay SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/dplay/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/dplay/dpbu0009.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/dplay/dpbu0019.htm">EnumLocalApplicationsCallback</A>
<IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/dplay/dpbu0021.htm">EnumSessionsCallback2</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2><HR COLOR="#0000FF">EnumPlayersCallback2</H2>
<BR CLEAR=ALL>
<P>Application-defined callback function. The application must implement this function and pass a pointer to it in the <A HREF="/directx/dxm/help/dplay/dpbu0035.htm">IDirectPlay3::EnumGroups</A>, <A HREF="/directx/dxm/help/dplay/dpbu0034.htm">IDirectPlay3::EnumGroupPlayers</A>, <A HREF="/directx/dxm/help/dplay/dpbu0037.htm">IDirectPlay3::EnumPlayers</A>, and <A HREF="/directx/dxm/help/dplay/dpbu0036.htm">IDirectPlay3::EnumGroupsInGroup</A> methods. The callback is called once for each player/group that is enumerated. 


<P><B>BOOL</B> <B>FAR</B> <B>PASCAL</B> <B>EnumPlayersCallback2</B><B>(</B><BR>&nbsp;&nbsp;<B>DPID</B> <I>dpId</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwPlayerType</I><B>,</B><BR>&nbsp;&nbsp;<B>LPCDPNAME</B> <I>lpName</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwFlags</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpContext</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dpId</I>
</DT><DD>The DPID of the player or group being enumerated.
</DD><DT><I>dwPlayerType</I>
</DT><DD>Type of entity, either DPPLAYERTYPE_GROUP or DPPLAYERTYPE_PLAYER.
</DD><DT><I>lpName</I>
</DT><DD>Read only pointer to a <A HREF="/directx/dxm/help/dplay/dpbu0089.htm">DPNAME</A> structure containing the name of the player or group. This pointer is only valid for the duration of the callback function. Any data that is to be saved for future reference must be copied to some application owned memory.
</DD><DT><I>dwFlags</I>
</DT><DD>Flags describing the group or player being enumerated.


</DD><DD>DPENUMGROUPS_SHORTCUT &#151; the group is a shortcut.
</DD><DD>DPENUMGROUPS_STAGINGAREA &#151; the group is a staging area.
</DD><DD>DPENUMPLAYERS_GROUP &#151; both players and groups are being enumerated. This flag is returned only if it was specified in the enumeration method calling this callback.
</DD><DD>DPENUMPLAYERS_LOCAL &#151; the player or group exists on a local computer. This flag is returned only if it was specified in the enumeration method calling this callback.
</DD><DD>DPENUMPLAYERS_REMOTE &#151; the player or group exists on a remote computer. This flag is returned only if it was specified in the enumeration method calling this callback.
</DD><DD>DPENUMPLAYERS_SESSION &#151; the player or group exists in the session identified by <I>lpguidInstance</I> in the enumeration method. This flag is returned only if it was specified in the enumeration method calling this callback.
</DD><DD>DPENUMPLAYERS_SERVERPLAYER &#151; the player is the server player in an application/server session. Only one server player exists in each session.
</DD><DD>DPENUMPLAYERS_SPECTATOR &#151; the player is a spectator (applies to players only).
</DD><DT><I>lpContext</I>
</DT><DD>Pointer to an application-defined context.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE to continue the enumeration or FALSE to stop it.

<H5>Remarks</H5>
<P>Any pointers returned in a callback function are temporary and are valid only in the body of the callback function. If the application needs to save pointer information, it must allocate memory to hold the data, copy the data, and then store the pointer to this new data. 
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/dplay/dpbu0089.htm">DPNAME</A>, <A HREF="/directx/dxm/help/dplay/dpbu0035.htm">IDirectPlay3::EnumGroups</A>,
<A HREF="/directx/dxm/help/dplay/dpbu0037.htm">IDirectPlay3::EnumPlayers</A>, <A HREF="/directx/dxm/help/dplay/dpbu0034.htm">IDirectPlay3::EnumGroupPlayers</A>, <A HREF="/directx/dxm/help/dplay/dpbu0036.htm">IDirectPlay3::EnumGroupsInGroup</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
