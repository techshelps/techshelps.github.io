<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DirectPlay Providers</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="DirectPlay Providers">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="dplay_DirectPlay_Providers"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/dplay/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectPlay Animated Header -- DirectPlay Providers"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/dplay/art/hdrdplay.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectPlay Animated Header -- DirectPlay Providers"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/dplay/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectPlay SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/dplay/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/dplay/default.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/dplay/dpbu0004.htm">DirectPlay Lobby Overview</A>
<IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/dplay/dpbu0006.htm">Using DirectPlay</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>DirectPlay Providers</H2>
<BR CLEAR=ALL>
<P>This section describes the DirectPlay interface and the DirectPlay service providers and how they interact with each other. See:
<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_Service_Providers">Service Providers</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_Lobby_Providers">Lobby Providers</A>
</UL>
<P>The DirectPlay interface is a common interface to the application for simple send and receive type messaging, as well as higher-level services like player management, groups for multicast, data management and propagation, and lobby services for locating other players on a network.
<P>The service providers furnish network-specific communications services as requested by DirectPlay. Online services and network operators can supply service providers to use specialized hardware, protocols, communications media, and network resources. A service provider can simply be a layer between DirectPlay and an existing transport like Winsock,


 or it can use specialized resources on an online service such as multicast servers, enhanced quality of service, or billing services. Microsoft includes four generic service providers with DirectPlay: <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_Modem_to_Modem">head-to-head modem (TAPI)</A>, <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_Serial_Link">serial connection</A>, <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_TCP_IP">Internet TCP/IP</A> (using Winsock), and <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_IPX">IPX</A> (also using Winsock).

<P>The DirectPlay interface hides the complexities and unique tasks required to establish an arbitrary communications link inside the DirectPlay provider implementation. An application using DirectPlay need only concern itself with the performance and capabilities of the virtual network presented by DirectPlay. It need not know whether a modem, network card, or online service is providing the medium.

<P>DirectPlay will dynamically bind to any DirectPlay provider installed on the user's system. The application interacts with the DirectPlay object. The DirectPlay object interacts with one of the available DirectPlay service providers, and the selected service provider interacts with the transport, protocol, and other network resources.

<P>The DirectPlay API is exposed to the application through several Component Object Model (COM) interfaces. (See <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_DirectPlay_Interfaces">DirectPlay Interfaces</A> for a discussion of COM and DirectPlay.) Application sessions can talk to someone else on the network through the <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3</A> and <A HREF="/directx/dxm/help/dplay/dpbu0022.htm#IDirectPlay3">IDirectPlay3A</A> interfaces. The first uses Unicode strings in all the DirectPlay structures, while the second uses ANSI strings. <B>IDirectPlay</B>, <B>IDirectPlay2</B>, and <B>IDirectPlay2A</B>

 still exist for backward compatibility with applications written to a previous version of the DirectPlay Software Development Kit (SDK). 

<P>Lobby clients can talk to another application on the same machine through the <A HREF="/directx/dxm/help/dplay/dpbu0067.htm#IDirectPlayLobby2">IDirectPlayLobby2</A> and <A HREF="/directx/dxm/help/dplay/dpbu0067.htm#IDirectPlayLobby2">IDirectPlayLobby2A</A> interfaces. The first interface uses Unicode strings while the second uses ANSI strings. The <B>IDirectPlayLobby</B> interface still exists for backward compatibility. 



<H3><A NAME="dplay_Service_Providers">Service Providers</A></H3>
<P>The service provider furnishes network-specific communication services as requested by DirectPlay. Online services and network operators can supply service providers for specialized hardware and communications media. Microsoft includes the following service providers with DirectPlay: 
<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_TCP_IP">TCP/IP</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_IPX">IPX</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_Modem_to_Modem">Modem-to-Modem</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0005.htm#dplay_Serial_Link">Serial Link</A>
</UL>
<P>Individual service providers are identified using a globally unique identifier (GUID). GUIDs for the standard service providers are listed in the header file DPLAY.H. Third-party service providers will have their own GUIDs. 
<P>This section outlines what to expect from the default service providers that Microsoft provides. To obtain information about the behavior of third-party service providers, contact the network operator.

<H4><A NAME="dplay_TCP_IP">TCP/IP</A></H4>
<P>The TCP/IP service provider uses Winsock to communicate over the Internet or local area network (LAN) using the TCP/IP protocol. It uses UDP (User Datagram Protocol) packets for nonguaranteed messaging and TCP for guaranteed messaging. A single computer can host multiple DirectPlay sessions using TCP/IP.

<P>When the <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A> method is called, TCP/IP displays a dialog box asking the user for the session's IP address. The user must enter the IP address of the computer hosting the session to be joined. If the computer has a name (such as microsoft.com), the name can be used instead of the IP address, and DirectPlay will use Domain Name System (DNS) lookup to find it. The <B>IDirectPlay3::EnumSessions</B> method will return the sessions that the computer is hosting. The user can also leave the address blank and select <B>OK</B>. In this case, DirectPlay will broadcast a message looking for sessions. This will generally only work on a LAN and only on the same subnet.
<P><B>Note:</B>  A Windows&#174; 95 user can determine his or her IP address by choosing <B>Run</B> from the <B>Start</B> menu and typing WINIPCFG as the program to run. A Windows&#174; NT&#174; user can determine his or her IP address by running IPConfig from the command line. 
If the user is connected to both a LAN and a dial-up Internet service provider (ISP), the computer can have two IP addresses, and the correct one must be selected. Most dial-up ISPs assign a dynamic IP address that changes each time the user logs on.
<P>An application can call <A HREF="/directx/dxm/help/dplay/dpbu0054.htm#InitializeConnection">IDirectPlay3::InitializeConnection</A>,

 or can call <A HREF="/directx/dxm/help/dplay/dpbu0078.htm#SetConnectionSettings">IDirectPlayLobby2::SetConnectionSettings</A> followed by a call to <A HREF="/directx/dxm/help/dplay/dpbu0068.htm#Connect">Connect</A>, to supply an IP address to the service provider in a <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_DirectPlay_Address">DirectPlay Address</A>. The address must be a null-terminated ANSI or Unicode string (each has a different data type GUID). If a broadcast enumeration of sessions is desired, the address must be a zero-length string; that is, a string only consisting of the null terminator.
<P>The DirectPlay TCP/IP service provider does not generally work through firewalls.

<P>Adding DirectPlay lobby support can eliminate the need for users to enter an IP address if they start the game from a lobby server.
<P>This service provider can be identified using the symbol definition DPSPGUID_TCPIP.
<P><B>Note:</B>  A Windows 95 user can configure his or her computer connections to display or not display a dialog box requesting connection information when DirectPlay tries to initiate a TCP/IP connection. To suppress the display of this dialog box, follow these steps:
<OL><LI>Open Control Panel.
<LI>Double-click the Internet icon.
<LI>Choose the Connection tab.
<LI>Clear the checkbox next to <B>Connect to the Internet as needed</B>.
</OL>
<H4><A NAME="dplay_IPX">IPX</A></H4>
<P>The IPX service provider uses Winsock to communicate over a local area network (LAN) using the Internet Packet Exchange (IPX) protocol. The service provider only supports nonguaranteed messaging. A single computer can host only one DirectPlay session using IPX.
<P>IPX always uses a broadcast to find sessions on the network, so the <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A> method will not display a dialog box requesting IP addresses.
<P>IPX will not enumerate sessions on another subnet. 

<P>Once a session is established, packets are sent directly between computers (they are not broadcast).

<P>This service provider can be identified using the symbol definition DPSPGUID_IPX.



<H4><A NAME="dplay_Modem_to_Modem">Modem-to-Modem</A></H4>
<P>Modem-to-modem communication uses Telephony Application Programming Interface (TAPI) to communicate with another modem. 
<P>Creating a session (by using the <A HREF="/directx/dxm/help/dplay/dpbu0055.htm#Open">IDirectPlay3::Open</A> method) causes a dialog box to appear, asking the user which modem to wait for a call on. The <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A> method will also display a dialog box asking the user what phone number to call and which modem to use. Once the information is entered, DirectPlay will dial the modem and try to find sessions hosted by the computer on the other end. In both cases, dialogs are displayed to show the progress.

<p>To enumerate the modem sessions without any dialogs, call <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A> in a loop with the DPENUMSESSIONS_RETURNSTATUS flag (see <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">EnumSessions</A> for more details).  When DP_OK is returned, the application should then call <B>EnumSessions</B> one more time to obtain the actual list of sessions.
<p>When calling <B>EnumSessions</B> in a loop like this, the application must implement a windows message loop as follows:
<PRE><FONT FACE="Courier" SIZE="2">

while (lpDPLAY->EnumSessions(lpsd, 0, lpEnumSessionsCallback, lpContext, DPENUMSESSIONS_RETURNSTATUS) == DPERR_CONNECTING)
{
	MSG	msg;

	if (PeekMessage(&msg, 0, 0, 0, PM_REMOVE))
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}

	Sleep(500);
}
</FONT></PRE>


<P>The current list of available modems can be obtained from the service provider by initializing it and calling <A HREF="/directx/dxm/help/dplay/dpbu0047.htm#GetPlayerAddress">IDirectPlay3::GetPlayerAddress</A> with a player ID of zero. The <A CLASS=tctop HREF="/directx/dxm/help/dplay/dpbu0006.htm#dplay_DirectPlay_Address">DirectPlay Address</A> returned will contain a data chunk with the ANSI modem names (DPAID_Modem) and the Unicode modem names (DPAID_ModemW). The list of modems is a series of NULL-terminated strings with a zero-length string at the end of the list.
<P>If you insert too many delays into the message processing, you may lose packets; for example, if you print a lot of debug information. 

<P>This service provider can be identified using the symbol definition DPSPGUID_MODEM.

<H4><A NAME="dplay_Serial_Link">Serial Link</A></H4>
<P>A serial link is used to communicate with another computer through the serial ports.
<P>Creating a session (using the <A HREF="/directx/dxm/help/dplay/dpbu0055.htm#Open">IDirectPlay3::Open</A> method) causes a dialog box to appear asking the user to configure the serial port. The <A HREF="/directx/dxm/help/dplay/dpbu0038.htm#EnumSessions">IDirectPlay3::EnumSessions</A> method will also display a dialog box asking the user to configure the serial port. You must configure the serial port the same way on both computers.
<P>If you insert too many delays into the message processing, you may lose packets; for example, if you print a lot of debug information. 

<P>This service provider can be identified using the symbol definition DPSPGUID_SERIAL.


<H3><A NAME="dplay_Lobby_Providers">Lobby Providers</A></H3>
<P>The lobby provider is a client component dynamic-link library (DLL) supplied by the developer of a lobby server. It

 implements communications functions with the lobby server as requested by DirectPlay. A lobby client written using the DirectPlay API can interoperate with any lobby server for which a lobby provider DLL is present on the system.

<P>The DirectX&#174; SDK installs a lobby provider for use with the test lobby server (LSERVER.EXE) included with the SDK. This lobby provider is used by the BELLHOP sample lobby client, and together they can be used to test the lobby-aware functions your applications. 



<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/dplay/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
