<HTML> 
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DirectAnimation SDK, JScript sample</TITLE>

<!-- SNIFF_START -->
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
var g_isIE=false, g_isNav=false, g_iMaj=0, g_sPlat="";
// -->
</SCRIPT>
<SCRIPT LANGUAGE="JAVASCRIPT" SRC="../ver.js"></SCRIPT>


<SCRIPT LANGUAGE="JAVASCRIPT" DEFER SRC="../common.js"></SCRIPT>
<SCRIPT LANGUAGE="JAVASCRIPT" DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{

		SetTOC();
	}
}
//-->
</SCRIPT>

<!-- STYLE_START -->
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
   var sVR='../'	// Set root for the style sheet
   var sCSS='<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->

</HEAD>
<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->	 	 

<BODY BGCOLOR=WHITE TOPMARGIN=15 LEFTMARGIN=10>
 
          

<DIV ID=controlDiv>
<OBJECT ID="DAViewer"
        STYLE="position:absolute; left:10; top:50;width:800;height:800;z-index: -1"
        CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
</DIV>
<FORM NAME="form1" ACTION="">
<CENTER>
<H1>Opacity</H1>
<INPUT TYPE=BUTTON VALUE="" NAME=StartBtn OnClick="start()"> 
</CENTER>



<SCRIPT LANGUAGE="JAVASCRIPT">
<!--

  var m_frm=document.form1;
  m_frm.StartBtn.value="Show";
  var FlagNotStarted=true;
  

 
  function start()
  {
 
    if (FlagNotStarted)
    {
     m_frm.StartBtn.value="         ";
     opac();
     FlagNotStarted=false;
    }
  }


   function opac ()
    {
      // This example demonstrates different levels of opacity. The circle on top of the square
      // allows different amounts of the square to show through, depending on how opaque it is.
      // The translation transforms are used for placing the image on the page.

      // Measurements will be in meters and get access to DAStatic functions
      m=DAViewer.MeterLibrary;
    
      // The shapes won't have borders
      ls=m.EmptyLineStyle
      // Use the default font style for the labels
      fs=m.DefaultFont;


      // This is the underlying square, which has a width and height of .04 meters
      // The Rect function returns a DAPath2, which we then turn into a DAImage with
      // the Fill function. It has no border and is colored green. 
      mySquare=m.Rect(.04,.04).Fill(ls, m.SolidColorImage(m.Blue));
      // Translate the image
      mySquare1=mySquare.Transform(m.Translate2(-.04, .06));
      
      // This is the circle on top of the square
      // It has a width and height of .03 meters, no border and is colored red.
      myCircle=m.Oval(.03,.03).Fill(ls, m.SolidColorImage(m.Red));
      // Translate the image
      myCircle1=myCircle.Transform(m.Translate2(-.04, .06));

      // This is the label under the example
      label1String="Fully opaque by default";
      label1Image=m.StringImage(label1String, fs).Transform(m.Translate2(-.04, .03));

      // Combine the two images and the label 
      opacExample1=m.Overlay(myCircle1, m.Overlay(mySquare1, label1Image));

      // Explicitly set the opacity of the circle to 1 (fully opaque)
      // This looks the same as Circle1 because images are, by default, fully opaque
      myCircle2=myCircle.Opacity(1).Transform(m.Translate2(.02, .06));
      // Place the square
      mySquare2=mySquare.Transform(m.Translate2(.02, .06));

      // This is the label under the example
      label2String="Opacity=1";
      label2Image=m.StringImage(label2String, fs).Transform(m.Translate2(.02, .03));

      //Combine the images and the label
      opacExample2=m.Overlay(myCircle2, m.Overlay(mySquare2, label2Image));

      // Set the opacity of the circle to 0.5
      myCircle3=myCircle.Opacity(0.5).Transform(m.Translate2(.08, .06)); 
      // Place the square
      mySquare3=mySquare.Transform(m.Translate2(.08, .06));

      // This is the label under the example
      label3String="Opacity=0.5";
      label3Image=m.StringImage(label3String, fs).Transform(m.Translate2(.08, .03));

      //Combine the images and the label
      opacExample3=m.Overlay(myCircle3, m.Overlay(mySquare3, label3Image));

      // Set the opacity of the circle to 0
      myCircle4=myCircle.Opacity(0).Transform(m.Translate2(-.04, 0)); 
      // Place the square
      mySquare4=mySquare.Transform(m.Translate2(-.04, 0));

      // This is the label under the example
      label4String="Opacity=0";
      label4Image=m.StringImage(label4String, fs).Transform(m.Translate2(-.04, -.03));

      //Combine the images and the label
      opacExample4=m.Overlay(myCircle4, m.Overlay(mySquare4, label4Image));

      // Set the opacity of the circle to a time-varying value
      // Notice that, to do this, we must use the OpacityAnim function
      // Negative values of opacLevel are treated as an opacity of 0
      opacLevel=m.Sin(m.Mul(m.LocalTime, m.DANumber(2)));
      myCircle5=myCircle.OpacityAnim(opacLevel).Transform(m.Translate2(.02, 0)); 
      // Place the square
      mySquare5=mySquare.Transform(m.Translate2(.02, 0));

      // This is the label under the example
      label5String="Opacity varies over time";
      label5Image=m.StringImage(label5String, fs).Transform(m.Translate2(.02, -.03));

      //Combine the images and the label
      opacExample5=m.Overlay(myCircle5, m.Overlay(mySquare5, label5Image));
     

      // Create an array to hold the images to be rendered
      opacExamples=new Array(opacExample1, opacExample2, opacExample3, opacExample4, opacExample5);


      finalImg=m.OverlayArray(opacExamples);

      DAViewer.Image=finalImg;    


      DAViewer.Start(); 

  }

//-->
</script>

</FORM>

</BODY>
</HTML>