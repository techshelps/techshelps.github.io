<HTML> 
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DirectAnimation SDK, JScript sample</TITLE>

<!-- SNIFF_START -->
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
var g_isIE=false, g_isNav=false, g_iMaj=0, g_sPlat="";
// -->
</SCRIPT>
<SCRIPT LANGUAGE="JAVASCRIPT" SRC="../ver.js"></SCRIPT>


<SCRIPT LANGUAGE="JAVASCRIPT" DEFER SRC="../common.js"></SCRIPT>
<SCRIPT LANGUAGE="JAVASCRIPT" DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{

		SetTOC();
	}
}
//-->
</SCRIPT>

<!-- STYLE_START -->
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
   var sVR='../'	// Set root for the style sheet
   var sCSS='<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->

</HEAD>
<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->	 	 

<BODY BGCOLOR=WHITE TOPMARGIN=15 LEFTMARGIN=10>
 
          

<DIV ID=controlDiv>
<OBJECT ID="DAViewer"
        STYLE="position:absolute; left:10; top:50;width:800;height:900;z-index: -1"
        CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
</DIV>
<FORM NAME="form1" ACTION="">
<CENTER>
<H1>Arcs</H1>
<INPUT TYPE=BUTTON VALUE="" NAME=StartBtn OnClick="start()"> 
</CENTER>


<SCRIPT LANGUAGE="JAVASCRIPT">
<!--

  var m_frm=document.form1;
  m_frm.StartBtn.value="Show";
  var FlagNotStarted=true;
  

 
  function start()
  {
 
    if (FlagNotStarted)
    {
     m_frm.StartBtn.value="         ";
     shapes();
     FlagNotStarted=false;
    }
  }


   function shapes ()
    {
      // This example demonstrates how to make arcs and uses the ArcDegrees and 
      // ArcRadiansAnim functions.
      // These functions return a DAPath2 object. To render them, they must be DAImages.
      // The Draw function uses a linestyle to draw the arcs. The fill function would
      // have no effect because arcs do not enclose an area (even if they look like circles).
      // The translation transforms are used to place the arcs on the page.

      // All the static arcs on this page have an equal width and height of .04 meters.

      
      // Measurements will be in meters
      m=DAViewer.MeterLibrary;

      // Use the default line style, set to red, to draw the arcs
      ls=m.DefaultLineStyle.Color(m.Red);

      // Use the default font style for the labels
      fs=m.DefaultFont;

      // Example 1
      // This is an 180 degree arc that starts at 0 and goes to 180 degrees
      arc1=m.ArcDegrees(0, 180, .04, .04).Draw(ls).Transform(m.Translate2(-.06, .07));

      // Label
      label1String="Example 1";
      label1Image=m.StringImage(label1String, fs).Transform(m.Translate2(-.06, .04));

      // Combine the label with the example
      arc1=m.Overlay(arc1, label1Image);
      
      // Example 2
      // This is an 180 degree arc that starts at 90 and goes to 270 degrees
      arc2=m.ArcDegrees(90, 270, .04, .04).Draw(ls).Transform(m.Translate2(.01, .07));

      // Label
      label2String="Example 2";
      label2Image=m.StringImage(label2String, fs).Transform(m.Translate2(.01, .04));

      // Combine the label with the example
      arc2=m.Overlay(arc2, label2Image);
      
      // Example 3
      // This is an 180 degree arc that starts at 90 and goes to -90 degrees 
      arc3=m.ArcDegrees(90, -90, .04, .04).Draw(ls).Transform(m.Translate2(.05, .07));

      // Label
      label3String="Example 3";
      label3Image=m.StringImage(label3String, fs).Transform(m.Translate2(.05, .04));

      // Combine the label with the example
      arc3=m.Overlay(arc3, label3Image);

      // Example 4
      // This is an 180 degree arc that starts at 0 and goes to -180 degrees
      arc4=m.ArcDegrees(0, -180, .04, .04).Draw(ls).Transform(m.Translate2(-.06, .01));

      // Label
      label4String="Example 4";
      label4Image=m.StringImage(label4String, fs).Transform(m.Translate2(-.06, -.02));

      // Combine the label with the example
      arc4=m.Overlay(arc4, label4Image);

      // Example 5
      // This is a 360 degree arc
      arc5=m.ArcDegrees(0, 360, .04, .04).Draw(ls).Transform(m.Translate2(.01, .01));

      // Label
      label5String="Example 5";
      label5Image=m.StringImage(label5String, fs).Transform(m.Translate2(.01, -.02));

      // Combine the label with the example
      arc5=m.Overlay(arc5, label5Image);

      // Example 6
      // This example uses radians (2PI radians=360 degrees)and has a time-varying height equal to the sine of LocalTime
      // The height is multiplied by .04 to scale it down
      arc6=m.ArcRadiansAnim(m.DANumber(0), m.DANumber(Math.PI * 2), m.DANumber(.04), m.Mul(m.DANumber(.04), m.Sin(m.LocalTime)))
                               .Draw(ls).Transform(m.Translate2(.06, .01));
      // Label
      label6String="Example 6";
      label6Image=m.StringImage(label6String, fs).Transform(m.Translate2(.06, -.02));

      // Combine the label with the example
      arc6=m.Overlay(arc6, label6Image);

      // Example 7
      // The same as Example 6 except that the width varies instead of the height
      arc7=m.ArcRadiansAnim(m.DANumber(0), m.DANumber(Math.PI * 2), m.Mul(m.DANumber(.04), m.Sin(m.LocalTime)), m.DANumber(.04))
                               .Draw(ls).Transform(m.Translate2(-.06, -.04));
      // Label
      label7String="Example 7";
      label7Image=m.StringImage(label7String, fs).Transform(m.Translate2(-.06, -.07));

      // Combine the label with the example
      arc7=m.Overlay(arc7, label7Image);


      // Example 8
      // Both the width and height vary over time (same rate as previous examples)
      arc8=m.ArcRadiansAnim(m.DANumber(0), m.DANumber(Math.PI * 2), m.Mul(m.DANumber(.04), m.Sin(m.LocalTime)), m.Mul(m.DANumber(.04), m.Sin(m.LocalTime)))
                               .Draw(ls).Transform(m.Translate2(.01, -.04));
      // Label
      label8String="Example 8";
      label8Image=m.StringImage(label8String, fs).Transform(m.Translate2(.01, -.07));

      // Combine the label with the example
      arc8=m.Overlay(arc8, label8Image);

      // Example 9
      // This 360 degree arc will be a path for a dot to follow, so we don't need to draw it
      arc9=m.ArcDegrees(0, 360, .04, .04).Transform(m.Translate2(.06, -.04));

      // Draw the dot
      // It is a purple circle with a radius of .005 meters
      dot=m.Oval(.005,.005).Fill(ls, m.SolidColorImage(m.Purple));

      // The transform is the instruction to follow the arc, completing the path in 5 seconds, and
      // to repeat this over and over 
      xf=m.FollowPath(arc9, 5).RepeatForever();

      // Transform the dot
      dot=dot.Transform(xf);

      // Label
      label9String="Example 9";
      label9Image=m.StringImage(label9String, fs).Transform(m.Translate2(.06, -.07));

      // Combine the label with the example
      dot=m.Overlay(dot, label9Image);
       


      // Put the images in an array because it will be easier to use OverlayArray rather than a series of nested Overlay functions
      exampleArray=new Array(arc1, arc2, arc3, arc4, arc5, arc6, arc7, arc8, dot);

      // Define the image that will be rendered
      DAViewer.Image=m.OverlayArray(exampleArray); 
      DAViewer.Start(); 

  }

//-->
</script>

</FORM>

</BODY>
</HTML>