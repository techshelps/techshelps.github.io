<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Simple Pick Example</TITLE>

<!-- SNIFF_START -->
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
var g_isIE=false, g_isNav=false, g_iMaj=0, g_sPlat="";
// -->
</SCRIPT>
<SCRIPT LANGUAGE="JAVASCRIPT" SRC="../ver.js"></SCRIPT>


<SCRIPT LANGUAGE="JAVASCRIPT" DEFER SRC="../common.js"></SCRIPT>
<SCRIPT LANGUAGE="JAVASCRIPT" DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{

		SetTOC();
	}
}
//-->
</SCRIPT>

<!-- STYLE_START -->
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
   var sVR='../'	// Set root for the style sheet
   var sCSS='<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->

</HEAD>
<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->	 

<BODY BGCOLOR=WHITE TOPMARGIN=15 LEFTMARGIN=20>
 

<DIV ID=controlDiv>
<OBJECT ID="DAViewer"
        STYLE="position:absolute; left:5; top:40;width:700;height:200;z-index: -1"
        CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
</DIV>

<SCRIPT LANGUAGE="JScript">
  var FlagNotStarted=true;
  function start ()
  {
 
    if (FlagNotStarted)
    {
      pick();
      FlagNotStarted=false;
    }
  }

  function pick()
  {

  // This example demonstrates how to make an image "pickable." This means it reacts to
  // an event when the mouse is within its borders.

  // In this example, the square goes cycles between blue and red when the mouse is within
  // its borders and the the left button is down.


  // First, select the meter library 
  m=DAViewer.MeterLibrary;

  // Create a detectable empty image. We need this because we can only make 
  // images and geometries pickable and we have to define our pickable events. 

  myImage=m.DetectableEmptyImage;

  // We need to crop it, so set the minimum and maximum points equal to those of the square
  // we're going to draw later on.
  minPt=m.Point2(-.01,-.01)
  maxPt=m.Point2(.01,.01);

  // Now crop the detectable empty image to the right size
  myImage=myImage.Crop(minPt, maxPt);

  // Make the image pickable
  pickImg=myImage.Pickable();

  // Construct an event. This means something will happen only when the mouse
  // is within the pickable region AND when the mouse's left button is down. 
  myEvent=m.AndEvent(m.LeftButtonDown, pickImg.PickEvent);
  
  // Set up the two colors of the rectangle
  myBlue=m.ColorRgb(0,0,1);
  myRed=m.ColorRgb(1,0,0);

  // Now create an object that holds our colors and our event
  // This will set the color first to blue, then, when the event occurs, to red
  // then, when the event occurs again, back to blue (It cycles between the two).
  colcyc=new ActiveXObject("DirectAnimation.DAColor");
  colcyc.Init(m.Until(myBlue, myEvent, m.Until(myRed, myEvent, colcyc)));
 
  // This will be the fill for the square
  myFill=m.SolidColorImage(colcyc);

  // Now draw a square (a rectangle with equal width and height, and fill it in
  // with our cycling colors
  sqImg=m.Rect(.02,.02).Fill(m.DefaultLineStyle, myFill);

  // Finally, put our pickable, empty image on top of the rectangle
  dualImg=m.Overlay(pickImg.Image, sqImg);
 
  // And display it 
  DAViewer.Image=dualImg; 
  DAViewer.Start(); 
}

 
</SCRIPT>
<CENTER>
<H2>Simple Picking Example</H2>
<INPUT TYPE=BUTTON VALUE="Show" NAME="StartBtn" OnClick="start()">
</CENTER>

</BODY>
</HTML>

