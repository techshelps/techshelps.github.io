<HTML> 
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DirectAnimation SDK, JScript sample</TITLE>

<!-- SNIFF_START -->
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
var g_isIE=false, g_isNav=false, g_iMaj=0, g_sPlat="";
// -->
</SCRIPT>
<SCRIPT LANGUAGE="JAVASCRIPT" SRC="../ver.js"></SCRIPT>


<SCRIPT LANGUAGE="JAVASCRIPT" DEFER SRC="../common.js"></SCRIPT>
<SCRIPT LANGUAGE="JAVASCRIPT" DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{

		SetTOC();
	}
}
//-->
</SCRIPT>

<!-- STYLE_START -->
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
   var sVR='../'	// Set root for the style sheet
   var sCSS='<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->

</HEAD>
<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->	 	 

<BODY BGCOLOR=WHITE TOPMARGIN=15 LEFTMARGIN=10>
 
          

<DIV ID=controlDiv>
<OBJECT ID="DAViewer"
        STYLE="position:absolute; left:10; top:50;width:800;height:800;z-index: -1"
        CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
</DIV>
<FORM NAME="form1" ACTION="">
<CENTER>
<H1>Pies</H1>
<INPUT TYPE=BUTTON VALUE="" NAME=StartBtn OnClick="start()"> 
</CENTER>


<SCRIPT LANGUAGE="JAVASCRIPT">
<!--

  var m_frm=document.form1;
  m_frm.StartBtn.value="Show";
  var FlagNotStarted=true;
  

 
  function start()
  {
 
    if (FlagNotStarted)
    {
     m_frm.StartBtn.value="         ";
     pies();
     FlagNotStarted=false;
    }
  }


   function pies ()
    {

      // Measurements will be in meters
      m=DAViewer.MeterLibrary;

      // Use the default line style, set to red, to draw the arcs
      ls=m.DefaultLineStyle.Color(m.Red);

      // Use the default font style for the labels
      fs=m.DefaultFont;

      // Example 1
      // This is an 90 degree pie that starts at 0 and goes to 90 degrees
      pie1=m.PieDegrees(0, 90, .04, .04).Draw(ls).Transform(m.Translate2(-.06, .05));

      // Label
      label1String="Example 1";
      label1Image=m.StringImage(label1String, fs).Transform(m.Translate2(-.05, .04));

      // Combine the label with the example
      pie1=m.Overlay(pie1, label1Image);
      
      // Example 2
      // This is an 90 degree arc that starts at 90 and goes to 180 degrees
      pie2=m.PieDegrees(90, 180, .04, .04).Draw(ls).Transform(m.Translate2(.01, .05));

      // Label
      label2String="Example 2";
      label2Image=m.StringImage(label2String, fs).Transform(m.Translate2(0, .04));

      // Combine the label with the example
      pie2=m.Overlay(pie2, label2Image);
      
      // Example 3
      // This is an 120 degree arc that starts at 0 and goes to 120 degrees 
      pie3=m.PieDegrees(0, 120, .04, .04).Draw(ls).Transform(m.Translate2(.05, .05));

      // Label
      label3String="Example 3";
      label3Image=m.StringImage(label3String, fs).Transform(m.Translate2(.06, .04));

      // Combine the label with the example
      pie3=m.Overlay(pie3, label3Image);

      // Example 4
      // This is an 180 degree pie that starts at 0 and goes to -180 degrees
      pie4=m.PieDegrees(0, -180, .04, .04).Draw(ls).Transform(m.Translate2(-.05, .02));

      // Label
      label4String="Example 4";
      label4Image=m.StringImage(label4String, fs).Transform(m.Translate2(-.05, -.01));

      // Combine the label with the example
      pie4=m.Overlay(pie4, label4Image);

      // Example 5
      // This is a 360 degree pie
      pie5=m.PieDegrees(0, 360, .04, .04).Draw(ls).Transform(m.Translate2(.01, .01));

      // Label
      label5String="Example 5";
      label5Image=m.StringImage(label5String, fs).Transform(m.Translate2(.01, -.02));

      // Combine the label with the example
      pie5=m.Overlay(pie5, label5Image);

      // Example 6
      // This example shows a time-varying ending angle, defined by "angle"
      // It multiplies the sine of LocalTime with PI
      // Note that this uses radians and is an "anim" function
      angle=(m.Mul(m.Sin(m.LocalTime), m.DANumber(Math.PI)));
      pie6=m.PieRadiansAnim(m.DANumber(0),  angle, m.DANumber(.04), m.DANumber(.04))
                               .Draw(ls).Transform(m.Translate2(.06, .01));
      // Label
      label6String="Example 6";
      label6Image=m.StringImage(label6String, fs).Transform(m.Translate2(.06, -.02));

      // Combine the label with the example
      pie6=m.Overlay(pie6, label6Image);

      // Example 7
      // This example shows a time-varying width, defined by "width"
      width=m.Mul(m.DANumber(.04), m.Sin(m.LocalTime))
      pie7=m.PieRadiansAnim(m.DANumber(0), m.DANumber(Math.PI), width, m.DANumber(.04))
                               .Draw(ls).Transform(m.Translate2(-.06, -.05));
      // Label
      label7String="Example 7";
      label7Image=m.StringImage(label7String, fs).Transform(m.Translate2(-.06, -.06));

      // Combine the label with the example
      pie7=m.Overlay(pie7, label7Image);


      // Example 8
      // This example shows a time-varying height, defined by "height"
      height=m.Mul(m.DANumber(.04), m.Sin(m.LocalTime))
      pie8=m.PieRadiansAnim(m.DANumber(0), m.DANumber(Math.PI), m.DANumber(.04), height)
                               .Draw(ls).Transform(m.Translate2(.01, -.05));
      // Label
      label8String="Example 8";
      label8Image=m.StringImage(label8String, fs).Transform(m.Translate2(.01, -.08));

      // Combine the label with the example
      pie8=m.Overlay(pie8, label8Image);

      // Example 9
    
      // Draw the dot
      // It is a purple circle with a radius of .005 meters
      dot=m.Oval(.005,.005).Fill(ls, m.SolidColorImage(m.Purple));

      // The transform is the instruction to follow the path defined by pie9, completing the path in 5 seconds, and
      // to repeat this over and over
      // This is the same pie as Example 6
      pie9=m.PieRadiansAnim(m.DANumber(0),  angle, m.DANumber(.04), m.DANumber(.04))
                               .Transform(m.Translate2(.06, -.06)); 
      xf=m.FollowPath(pie9, 5).RepeatForever();

      // Transform the dot
      dot=dot.Transform(xf);

      // Label
      label9String="Example 9";
      label9Image=m.StringImage(label9String, fs).Transform(m.Translate2(.06, -.08));

      // Combine the label with the example
      dot=m.Overlay(dot, label9Image);
  

      // Put the images in an array because it will be easier to use OverlayArray rather than a series of nested Overlay functions
      exampleArray=new Array(pie1, pie2, pie3, pie4, pie5, pie6, pie7, pie8, dot);

      // Define the image that will be rendered
      DAViewer.Image=m.OverlayArray(exampleArray); 
      DAViewer.Start(); 

  }

//-->
</script>

</FORM>

</BODY>
</HTML>