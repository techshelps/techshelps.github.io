<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAStatic Functions Relevant to DAPath2 Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="DAStatic Functions Relevant to DAPath2 Objects">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="RelDAPath2Methv"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --DAStatic Functions Relevant to DAPath2 Objects"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --DAStatic Functions Relevant to DAPath2 Objects"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0032.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0092.htm">DAStatic Properties Relevant to DANumber Objects</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0094.htm">DAStatic Functions Relevant to DAPoint2 Objects</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>DAStatic Functions Relevant to DAPath2 Objects</H2>
<BR CLEAR=ALL>
<H3><HR COLOR="#0000FF"><A NAME="arcdgv_path2">ArcDegrees</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object representing a segment of an oval (In effect, this is an arc). The oval is centered at the origin.

<P><B>lib.ArcDegrees</B><B>(</B><BR>&nbsp;&nbsp;<I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>startAngle</I>
 </DT><DD>The number (a double) representing the starting angle of the oval segment, expressed in degrees.
</DD><DT><I>endAngle</I>
 </DT><DD>The number (a double) representing the ending angle of the oval segment, expressed in degrees.
</DD><DT><I>arcWidth</I>
 </DT><DD>The number (a double) representing the arc width, expressed in either meters or pixels, depending on whether the MeterLibrary or the PixelLibrary is selected. If the PixelLibrary is selected, remember that positive-y is down.
</DD><DT><I>arcHeight</I>
 </DT><DD>The number (a double) representing the arc height, expressed in either meters or pixels, depending on whether the MeterLibrary or the PixelLibrary is selected. If the PixelLibrary is selected, remember that positive-y is down..
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object.


<H3><HR COLOR="#0000FF"><A NAME="arcanv_path2">ArcRadiansAnim</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object representing a segment of an oval (In effect, this is an arc). The oval is centered at the origin.

<P><B>lib.ArcRadiansAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>startAngle</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the starting angle of the arc, expressed in radians. This must be an animated number.
</DD><DT><I>endAngle</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the ending angle of the arc, expressed in radians. This must be an animated number.
</DD><DT><I>arcWidth</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the arc width, expressed in meters, or pixels, depending on whether the Pixel Library or the MeterLibrary was selected. This must be an animated number.
</DD><DT><I>arcHeight</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the arc height, expressed in meters, or pixels, depending on whether the Pixel Library or the MeterLibrary was selected. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object.


<H5>Remarks</H5>
<P>If the PixelLibrary is selected, remember that the positive y-axis is down.

<H3><HR COLOR="#0000FF"><A NAME="arcv_path2">ArcRadians</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0093.htm#arcanv_path2">ArcRadiansAnim</A> except that the arguments are non-animated numbers (doubles).

<P><B>lib.ArcRadians</B><B>(</B><BR>&nbsp;&nbsp;<I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H3><HR COLOR="#0000FF"><A NAME="concatv_path2">Concat</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object that represents the concatenation of the given paths. In the new path, the points of <I>p1</I> occur first, followed by those of <I>p2</I>. Path <I>p2</I> is transformed so that the first point of <I>p2</I> aligns with the last point of <I>p1</I>.

<P><B>lib.Concat</B><B>(</B><BR>&nbsp;&nbsp;<I>p1</I><B>,</B><BR>&nbsp;&nbsp;<I>p2</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>p1</I> and <I>p2</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="concatav_path2">ConcatArray</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object that represents the concatenation of the <B>DAPath2</B> objects in the array. In the new path, the points of the first path in the array occur first, followed sequentially by the other paths in the array. The second path, for example, is transformed so that its first point aligns with the last point of the first path.

<P><B>lib.ConcatArray</B><B>(</B><BR>&nbsp;&nbsp;<I>paths</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>paths</I>
 </DT><DD>The array (variant) of <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="cubicv_path2">CubicBSplinePath</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object based on a cubic B-spline curve. The curve depends on the control points and the knot vector, and requires that:

<P>The control points define the approximate direction and shape of the function. The knots represent the junction values, in parameter space, between the connected polynomial parts. For a number of knots <I>k</I>, the function is valid in the range [3, knot<I>k</I>-2], and is otherwise undefined.

<P><B>lib.CubicBSplinePath</B><B>(</B><BR>&nbsp;&nbsp;<I>points</I><B>,</B><BR>&nbsp;&nbsp;<I>knots</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>points</I>
 </DT><DD>An array (variant) of <A HREF="/directx/dxm/help/da/DA_E0060.htm">DAPoint2</A> objects representing the points used to calculate the B-spline.
</DD><DT><I>knots</I>
 </DT><DD>An array (variant) of <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> objects representing the knots used to calculate the B-spline. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object.


<H3><HR COLOR="#0000FF"><A NAME="linev_path2">Line</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object that represents the line segment defined by the given points. 

<P><B>lib.Line</B><B>(</B><BR>&nbsp;&nbsp;<I>p1</I><B>,</B><BR>&nbsp;&nbsp;<I>p2</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>p1</I> and <I>p2</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0060.htm">DAPoint2</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="ovalanv_path2">OvalAnim</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object that represents an oval, centered about the origin, and whose width and height are described by the given <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> arguments.

<P><B>lib.OvalAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>width</I><B>,</B><BR>&nbsp;&nbsp;<I>height</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>width</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the oval's width. This must be an animated number.
</DD><DT><I>height</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the oval's height. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object.


<H5>Remarks</H5>
<P>The units can either be meters or pixels, depending on whether the MeterLibrary or the PixelLibrary is selected. If the PixelLibrary is selected, remember that positive-y is down.

<H3><HR COLOR="#0000FF"><A NAME="ovalv_path2">Oval</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0093.htm#ovalanv_path2">OvalAnim</A> except that the arguments are non-animated numbers (doubles).

<P><B>lib.Oval</B><B>(</B><BR>&nbsp;&nbsp;<I>width</I><B>,</B><BR>&nbsp;&nbsp;<I>height</I><BR>&nbsp;&nbsp;<B>)</B><BR><H3><HR COLOR="#0000FF"><A NAME="piedgv_path2">PieDegrees</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object representing a closed path that traces a segment of an oval and connects it to the origin. (In effect, it is a pie-shaped wedge). The oval is centered at the origin.

<P><B>lib.PieDegrees</B><B>(</B><BR>&nbsp;&nbsp;<I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>startAngle</I>
 </DT><DD>The double representing the starting angle of the oval segment, expressed in degrees.
</DD><DT><I>endAngle</I>
 </DT><DD>The double representing the ending angle of the oval segment, expressed in degrees.
</DD><DT><I>arcWidth</I>
 </DT><DD>The double representing the arc width, expressed in meters, or pixels, depending on whether the MeterLibrary or the PixelLibrary is selected.
</DD><DT><I>arcHeight</I>
 </DT><DD>The double representing the arc height, expressed in meters or pixels, depending on whether the MeterLibrary or the PixelLibrary is selected.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object.


<H3><HR COLOR="#0000FF"><A NAME="pieanv_path2">PieRadiansAnim</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object representing a closed path that traces a segment of an oval and connects it to the origin. (In effect, it is a pie-shaped wedge). The oval is centered at the origin.

<P><B>lib.PieRadiansAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>startAngle</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the starting angle of the oval segment, expressed in radians. This must be an animated number.
</DD><DT><I>endAngle</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the ending angle of the oval segment, expressed in radians. This must be an animated number.
</DD><DT><I>arcWidth</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the arc width, expressed in meters or pixels, depending on whether the MeterLibrary or the PixelLibrary is selected. This must be an animated number.
</DD><DT><I>arcHeight</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the arc height, expressed in meters or pixels, depending on whether the MeterLibrary or the PixelLibrary is selected. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object.


<H3><HR COLOR="#0000FF"><A NAME="piev_path2">PieRadians</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0093.htm#pieanv_path2">PieRadiansAnim</A> except that the arguments are non-animated numbers (doubles).

<P><B>lib.PieRadians</B><B>(</B><BR>&nbsp;&nbsp;<I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H3><HR COLOR="#0000FF"><A NAME="polydrawv_path2">PolyDrawPath</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object by manipulating the array of points with the codes contained in the <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> array. The codes represent the instructions that can be OR'd together, where:

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Code</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">01</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PT_CLOSEFIGURE</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Connects points to create a closed figure.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">02</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PT_LINETO</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Connects points in a line.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">04</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PT_BEZIERTO</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Connects points in a Bezier curve. These must occur in multiples of 3.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">06</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PT_MOVETO</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Moves to a point. This is, implicitly, always the first instruction.
</FONT></TD>
</TR>
</TABLE>
<P><B>lib.PolyDrawPath</B><B>(</B><BR>&nbsp;&nbsp;<I>points</I><B>,</B><BR>&nbsp;&nbsp;<I>codes</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>points</I>
 </DT><DD>An array of <A HREF="/directx/dxm/help/da/DA_E0060.htm">DAPoint2</A> objects.
</DD><DT><I>codes</I>
 </DT><DD>An array of <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> objects representing the instruction codes.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object. 


<H5>Remarks</H5>
<P>This function is the equivalent of the Graphics Drawing Interface (GDI) PolyDraw function.

<H3><HR COLOR="#0000FF"><A NAME="polylinev_path2">Polyline</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object that consists of the given (animated) points. The path can be used either for drawing or animation. The default line style is the <A HREF="/directx/dxm/help/da/DA_E0083.htm#defaultv_line">defaultLineStyle</A>. 

<P><B>lib.Polyline</B><B>(</B><BR>&nbsp;&nbsp;<I>points</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>points</I>
 </DT><DD>An array (variant) of <A HREF="/directx/dxm/help/da/DA_E0060.htm">DAPoint2</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="rayv_path2">Ray</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object that represents the line segment from the origin to the given (animated) point. 

<P><B>lib.Ray</B><B>(</B><BR>&nbsp;&nbsp;<I>p</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>p</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0060.htm">DAPoint2</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="rectangleanv_path2">RectAnim</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object representing a rectangle, centered at the origin.

<P><B>lib.RectAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>width</I><B>,</B><BR>&nbsp;&nbsp;<I>height</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>width</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the width of the rectangle, either in meters or pixels depending on whether the MeterLibrary or the PixelLibrary is selected. This must be an animated number.
</DD><DT><I>height</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the height of the rectangle, either in meters or pixels depending on whether the MeterLibrary or the PixelLibrary is selected. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object.


<H5>Remarks</H5>
<P>If the PixelLibrary is selected, remember that positive-y is down.

<H3><HR COLOR="#0000FF"><A NAME="rectanglev_path2">Rect</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0093.htm#rectangleanv_path2">RectAnim</A> except that the arguments are non-animated numbers (doubles).

<P><B>lib.Rect</B><B>(</B><BR>&nbsp;&nbsp;<I>width</I><B>,</B><BR>&nbsp;&nbsp;<I>height</I><BR>&nbsp;&nbsp;<B>)</B><BR><H3><HR COLOR="#0000FF"><A NAME="roundrectanv_path2">RoundRectAnim</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object that is a rectangle, centered about the origin, with rounded, rather than square, corners. The corners are considered to be segments of an oval (in effect, an arc), centered at the origin.

<P><B>lib.RoundRectAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>width</I><B>,</B><BR>&nbsp;&nbsp;<I>height</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>width</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the rectangle's width. This must be an animated number.
</DD><DT><I>height</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the rectangle's height. This must be an animated number.
</DD><DT><I>arcWidth</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the arc width. This must be an animated number.
</DD><DT><I>arcHeight</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the arc height. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object.
 

<H5>Remarks</H5>
<P>The units can either be meters or pixels, depending on whether the MeterLibrary or the PixelLibrary is selected. If the PixelLibrary is selected, remember that positive-y is down.

<H3><HR COLOR="#0000FF"><A NAME="roundrectv_path2">RoundRect</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0093.htm#roundrectanv_path2">RoundRectAnim</A> except that the arguments are non-animated numbers (doubles).

<P><B>lib.RoundRect</B><B>(</B><BR>&nbsp;&nbsp;<I>width</I><B>,</B><BR>&nbsp;&nbsp;<I>height</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H3><HR COLOR="#0000FF"><A NAME="stringpathanv_path2">StringPathAnim</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object from the supplied <A HREF="/directx/dxm/help/da/DA_E0110.htm">DAString</A> object. The appearance is specified by the <A HREF="/directx/dxm/help/da/DA_E0045.htm">DAFontStyle</A> object. The path behavior is useful for creating a matte to which an image behavior can be clipped.

<P><B>lib.StringPathAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>string</I><B>,</B><BR>&nbsp;&nbsp;<I>fs</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>string</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0110.htm">DAString</A> object used to create the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object.
</DD><DT><I>fs</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0045.htm">DAFontStyle</A> object specifying the appearance of the text.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0058.htm">DAPath2</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0093.htm#stringpathv_path2">StringPath</A>

<H3><HR COLOR="#0000FF"><A NAME="stringpathv_path2">StringPath</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0093.htm#stringpathanv_path2">StringPathAnim</A> except that <I>string</I> is non-animated.

<P><B>lib.StringPath</B><B>(</B><BR>&nbsp;&nbsp;<I>string</I><B>,</B><BR>&nbsp;&nbsp;<I>fs</I><BR>&nbsp;&nbsp;<B>)</B><BR><P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
