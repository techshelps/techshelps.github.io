<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Vector3Bvr Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Vector3Bvr Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="Vector3Bvr_Class"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Vector3Bvr Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Vector3Bvr Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0118.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0211.htm">Vector2Bvr Class</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0213.htm">Viewer Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Vector3Bvr Class</H2>
<BR CLEAR=ALL>
<PRE><FONT FACE="Courier" SIZE="2">public class Vector3Bvr extends Behavior {
    // Methods

    public Vector3Bvr div(NumberBvr scalar);
    public NumberBvr  getSphericalCoordLength();
    public NumberBvr  getSphericalCoordXYAngle();
    public NumberBvr  getSphericalCoordYZAngle();
    public NumberBvr  getPolarCoordAngle();
    public NumberBvr  getX();
    public NumberBvr  getY();
    public NumberBvr  getZ();
    public NumberBvr  length();
    public NumberBvr  lengthSquared();
    public Vector3Bvr mul(NumberBvr scalar);
    public Vector3Bvr normalize();
    public Vector3Bvr transform(Transform3Bvr xf);

    public static Vector3Bvr newUninitBvr();

}
</FONT></PRE>
<P>Creates an object that represents a three-dimensional vector behavior. At any given time, the value of the behavior is a direction and length (magnitude), specified as a triplet of coordinate values given as either Cartesian coordinates (<I>x</I>, <I>y</I>, <I>z</I>) or spherical coordinates (<I>XYangle</I>, <I>YZangle</I>, <I>lenght</I>). The direction of the vector is parallel to the ray that starts at the origin and passes through the point specified by the vector's coordinates, and the length is the distance between the origin and the point.

<P>Because coordinate values are number behaviors (<A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> objects), the direction and length of the vector behavior may change over time as the number behaviors change. For more information about behaviors, see the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> class.

<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#Vector3Bvr_Methods">Vector3Bvr Methods</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#Vector3Bvr_Relevant_Methods_Statics">Relevant Methods from the Statics Class</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#Vector3Bvr_Relevant_Fields_Statics">Relevant Fields from the Statics Class</A>
</UL>
<H3><A NAME="Vector3Bvr_Methods">Vector3Bvr Methods</A></H3>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#div_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">div</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#gscl_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">getSphericalCoordLength</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#gscxy_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">getSphericalCoordXYAngle</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#gscyz_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">getSphericalCoordYZAngle</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#getX_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">getX</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#getY_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">getY</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#getZ_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">getZ</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#length_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">length</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#lengthSquared_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">lengthSquared</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#mul_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">mul</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#normalize_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">normalize</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#transform_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">transform</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0212.htm#newUninitBvr_v3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">newUninitBvr</A><BR>
<H4><HR COLOR="#0000FF"><A NAME="div_v3">div</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Creates a new three-dimensional vector behavior that points in the same direction as the original vector but has a length that has been divided by <I>scalar</I>.

<P><B>public</B> <B>Vector3Bvr</B> <B>div</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>scalar</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>scalar</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0212.htm#mul_v3">mul</A>

<H4><HR COLOR="#0000FF"><A NAME="gscl_v3">getSphericalCoordLength</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object that is the distance of the vector from the origin.

<P><B>public</B> <B>NumberBvr</B> <B>getSphericalCoordLength</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0212.htm#gscxy_v3">getSphericalCoordXYAngle</A>, <A HREF="/directx/dxm/help/da/DA_E0212.htm#gscyz_v3">getSphericalCoordYZAngle</A>, <A HREF="/directx/dxm/help/da/DA_E0204.htm#vector3Spherical_v3">vector3Spherical</A>
<H4><HR COLOR="#0000FF"><A NAME="gscxy_v3">getSphericalCoordXYAngle</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object that is the counter-clockwise angle, in radians, of the vector about the y-axis, starting at positive z. The range is [-Pi, +Pi].

<P><B>public</B> <B>NumberBvr</B> <B>getSphericalCoordXYAngle</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0212.htm#gscyz_v3">getSphericalCoordYZ</A>, <A HREF="/directx/dxm/help/da/DA_E0212.htm#gscl_v3">getSphericalCoordLength</A>, <A HREF="/directx/dxm/help/da/DA_E0204.htm#vector3Spherical_v3">vector3Spherical</A>

<H4><HR COLOR="#0000FF"><A NAME="gscyz_v3">getSphericalCoordYZAngle</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object that is the YZ angle, in radians, going up from the XZ-plane towards the positive y-ray. The range is [-Pi/2, +Pi/2].

<P><B>public</B> <B>NumberBvr</B> <B>getSphericalCoordYZAngle</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0212.htm#gscxy_v3">getSphericalCoordXYAngle</A>, <A HREF="/directx/dxm/help/da/DA_E0212.htm#gscl_v3">getSphericalCoordLength</A>, <A HREF="/directx/dxm/help/da/DA_E0204.htm#vector3Spherical_v3">vector3Spherical</A>

<H4><HR COLOR="#0000FF"><A NAME="getX_v3">getX</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Creates a number behavior that represents the <I>x</I> coordinate of this vector behavior. 

<P><B>public</B> <B>NumberBvr</B> <B>getX</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object. 


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0212.htm#getY_v3">getY</A>, <A HREF="/directx/dxm/help/da/DA_E0212.htm#getZ_v3">getZ</A>, <A HREF="/directx/dxm/help/da/DA_E0204.htm#vector3_v3">vector3</A>

<H4><HR COLOR="#0000FF"><A NAME="getY_v3">getY</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Creates a number behavior that represents the <I>y</I> coordinate of this vector behavior. 

<P><B>public</B> <B>NumberBvr</B> <B>getY</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object. 


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0212.htm#getX_v3">getX</A>, <A HREF="/directx/dxm/help/da/DA_E0212.htm#getZ_v3">getZ</A>, <A HREF="/directx/dxm/help/da/DA_E0204.htm#vector3_v3">vector3</A>

<H4><HR COLOR="#0000FF"><A NAME="getZ_v3">getZ</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Creates a number behavior that represents the <I>z</I> coordinate of this vector behavior. 

<P><B>public</B> <B>NumberBvr</B> <B>getZ</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object. 


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0212.htm#getX_v3">getX</A>, <A HREF="/directx/dxm/help/da/DA_E0212.htm#getY_v3">getY</A>, <A HREF="/directx/dxm/help/da/DA_E0204.htm#vector3_v3">vector3</A>

<H4><HR COLOR="#0000FF"><A NAME="length_v3">length</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Creates a number behavior that represents the length of a vector behavior.

<P><B>public</B> <B>NumberBvr</B> <B>length</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0212.htm#lengthSquared_v3">lengthSquared</A>

<H4><HR COLOR="#0000FF"><A NAME="lengthSquared_v3">lengthSquared</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Creates a number behavior that represents the length of a vector behavior squared. 

<P><B>public</B> <B>NumberBvr</B> <B>lengthSquared</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0212.htm#length_v3">length</A>

<H4><HR COLOR="#0000FF"><A NAME="mul_v3">mul</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Creates a new three-dimensional vector behavior that points in the same direction as the original vector but has a length that has been multiplied by <I>scalar</I>.

<P><B>public</B> <B>Vector3Bvr</B> <B>mul</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>scalar</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>scalar</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0212.htm#div_v3">div</A>

<H4><HR COLOR="#0000FF"><A NAME="normalize_v3">normalize</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Creates a normalized, three-dimensional vector behavior. The normalized vector has the same direction as the original vector, but the length is 1.

<P><B>public</B> <B>Vector3Bvr</B> <B>normalize</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A> object.


<H4><HR COLOR="#0000FF"><A NAME="transform_v3">transform</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>Creates a new three-dimensional vector behavior that is the result of applying the given transformation to the original vector. The translation elements of the transformation are ignored; translation does not apply to vectors.

<P><B>public</B> <B>Vector3Bvr</B> <B>transform</B><B>(</B><BR>&nbsp;&nbsp;<B>Transform3Bvr</B> <I>xf</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>xf</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A> object.


<H5>Remarks</H5>
<P>This attribute composes values.

<H4><HR COLOR="#0000FF"><A NAME="newUninitBvr_v3">newUninitBvr</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<P>This method allows you to refer to an <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A> behavior before that behavior has been defined. With this method you can create the behavior and use it in the definition of other behaviors, but not actually define its contents until some later point. (This is accomplished with the <A HREF="/directx/dxm/help/da/DA_E0124.htm#init_beh">init</A> method, which is available on all behaviors.) The system generates a run-time error if you initialize a non-uninitialized behavior, initialize an uninitialized behavior that has already been initialized, or run an initialized behavior that has not yet been initialized.

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>newUninitBvr</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A> object.


<H3><A NAME="Vector3Bvr_Relevant_Methods_Statics">Relevant Methods from the Statics Class</A></H3>
<P>The following methods are defined in the Statics class and are most relevant to objects of type <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A>.

<P><A HREF="/directx/dxm/help/da/DA_E0204.htm#add_v3">public static Vector3Bvr add(Vector3Bvr v1, Vector3Bvr v2);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0204.htm#bSpline_v3">public static Vector3Bvr bSpline(int degree, NumberBvr[] knots, Vector3Bvr[] control_elements, NumberBvr[] weights, NumberBvr evaluation));</A>
<P><A HREF="/directx/dxm/help/da/DA_E0204.htm#cross_v3">public static Vector3Bvr cross(Vector3Bvr v1, Vector3Bvr v2);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0204.htm#derivative_v3">public static Vector3Bvr derivative(Vector3Bvr vec);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0204.htm#dot_v3">public static NumberBvr dot(Vector3Bvr v1, Vector3Bvr v2);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0204.htm#integral_v3">public static Vector3Bvr integral(Vector3Bvr vec);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0204.htm#neg_v3">public static Vector3Bvr neg(Vector3Bvr v1);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0204.htm#sub_v3">public static Vector3Bvr sub(Vector3Bvr v1, Vector3Bvr v2);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0204.htm#vector3_v3">public static Vector3Bvr vector3(NumberBvr x, NumberBvr y, NumberBvr z);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0204.htm#vector3Spherical_v3">public static Vector3Bvr vector3Spherical(NumberBvr XYangle, NumberBvr YZangle, NumberBvr length);</A>

<H3><A NAME="Vector3Bvr_Relevant_Fields_Statics">Relevant Fields from the Statics Class</A></H3>
<P>The following fields are defined in the Statics class and are most relevant to objects of type <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A>.

<P><A HREF="/directx/dxm/help/da/DA_E0205.htm#xVector3_v3">public final static Vector3Bvr xVector3;</A>
<P><A HREF="/directx/dxm/help/da/DA_E0205.htm#yVector3_v3">public final static Vector3Bvr yVector3;</A>
<P><A HREF="/directx/dxm/help/da/DA_E0205.htm#zVector3_v3">public final static Vector3Bvr zVector3;</A>
<P><A HREF="/directx/dxm/help/da/DA_E0205.htm#zeroVector3_v3">public final static Vector3Bvr zeroVector3;</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
