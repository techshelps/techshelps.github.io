<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Static Methods Relevant to Path2Bvr Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Static Methods Relevant to Path2Bvr Objects">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="RelPath2BvrMeth"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Static Methods Relevant to Path2Bvr Objects"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Static Methods Relevant to Path2Bvr Objects"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0118.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0188.htm">Static Fields Relevant to NumberBvr Objects</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0190.htm">Static Methods Relevant to Point2Bvr Objects</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Static Methods Relevant to Path2Bvr Objects</H2>
<BR CLEAR=ALL>
<H3><HR COLOR="#0000FF"><A NAME="arc_path2">arc</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object representing a segment of an oval (In effect, an arc). The oval is centered at the origin.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>arc</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>startAngle</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the starting angle of the arc, expressed in radians. This parameter can also be of type double.
</DD><DT><I>endAngle</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the ending angle of the arc, expressed in radians. This parameter can also be of type double.
</DD><DT><I>arcWidth</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the width of the arc, expressed in meters. This parameter can also be of type double.
</DD><DT><I>arcHeight</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the height of the arc, expressed in meters. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object.


<H3><HR COLOR="#0000FF"><A NAME="arcdg_path2">arcDegrees</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object representing a segment of an oval (In effect, this is an arc). The oval is centered at the origin.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>arcDegrees</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>startAngle</I>
 </DT><DD>The double representing the starting angle of the oval segment, expressed in degrees.
</DD><DT><I>endAngle</I>
 </DT><DD>The double representing the ending angle of the oval segment, expressed in degrees.
</DD><DT><I>arcWidth</I>
 </DT><DD>The double representing the width of the arc, expressed in meters.
</DD><DT><I>arcHeight</I>
 </DT><DD>The double representing the height of the arc, expressed in meters.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object.


<H3><HR COLOR="#0000FF"><A NAME="concat_path2">concat</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a path behavior that represents the concatenation of the given path behaviors. In the new path, the points of <I>p1</I> occur first, followed by those of <I>p2</I>. Path <I>p2</I> is transformed so that the first point of <I>p2</I> aligns with the last point of <I>p1</I>.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>concat</B><B>(</B><BR>&nbsp;&nbsp;<B>Path2Bvr</B> <I>p1</I><B>,</B><BR>&nbsp;&nbsp;<B>Path2Bvr</B> <I>p2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>p1</I> and <I>p2</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A>object. 


<H3><HR COLOR="#0000FF"><A NAME="concata_path2">concatArray</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a path behavior that represents the concatenation of the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> objects in the array. In the new path, the points of the first path in the array occur first, followed sequentially by the other paths in the array. The second path, for example, is transformed so that its first point aligns with the last point of the first path.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>concatArray</B><B>(</B><BR>&nbsp;&nbsp;<B>Path2Bvr[]</B> <I>paths</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>paths</I>
 </DT><DD>The array of <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A>object. 


<H3><HR COLOR="#0000FF"><A NAME="cubic_path2">cubicBSplinePath</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> behavior based on a cubic B-spline curve. The curve depends on the control points and the knot vector, and requires that:

<PRE><FONT FACE="Courier" SIZE="2">
numberofPoints = numberofKnots - 2
</FONT></PRE>
<P>The control points define the approximate direction and shape of the function. The knots represent the junction values, in parameter space, between the connected polynomial parts. For a number of knots <I>k</I>, the function is valid in the range [3, knot<I>k</I>-2], and is otherwise undefined.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>cubicBSplinePath</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr[]</B> <I>points</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>knots</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>points</I>
 </DT><DD>An array of <A HREF="/directx/dxm/help/da/DA_E0155.htm">Point2Bvr</A> objects representing the points used to calculate the B-spline.
</DD><DT><I>knots</I>
 </DT><DD>An array of <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> objects representing the knots used to calculate the B-spline. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object.


<H3><HR COLOR="#0000FF"><A NAME="line_path2">line</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a path behavior that represents the line segment defined by the given point behaviors. 

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>line</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>p1</I><B>,</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>p2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>p1</I> and <I>p2</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0155.htm">Point2Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A>object. 


<H3><HR COLOR="#0000FF"><A NAME="oval_path2">oval</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object that represents an oval, centered about the origin, and whose width and height are described by the given <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> arguments.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>oval</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>width</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>height</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>x-radius</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the oval's width. This parameter can also be of type double.
</DD><DT><I>y-radius</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the oval's height. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object.


<H3><HR COLOR="#0000FF"><A NAME="pie_path2">pie</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object representing a closed path that traces a segment of an oval and connects it to the origin. (In effect, it is a pie-shaped wedge). The oval is centered at the origin.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>pie</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>startAngle</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the starting angle of the oval segment, expressed in radians. This parameter can also be of type double.
</DD><DT><I>endAngle</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the ending angle of the oval segment, expressed in radians. This parameter can also be of type double.
</DD><DT><I>arcWidth</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the width of the arc, expressed in meters. This parameter can also be of type double.
</DD><DT><I>arcHeight</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the height of the arc, expressed in meters. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object.


<H3><HR COLOR="#0000FF"><A NAME="piedg_path2">pieDegrees</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object representing a closed path that traces a segment of an oval and connects it to the origin. (In effect, it is a pie-shaped wedge). The oval is centered at the origin.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>pieDegrees</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>startAngle</I>
 </DT><DD>The double representing the starting angle of the oval segment, expressed in degrees.
</DD><DT><I>endAngle</I>
 </DT><DD>The double representing the ending angle of the oval segment, expressed in degrees.
</DD><DT><I>arcWidth</I>
 </DT><DD>The double representing the width of the arc, expressed in meters.
</DD><DT><I>arcHeight</I>
 </DT><DD>The double representing the height of the arc, expressed in meters.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object.


<H3><HR COLOR="#0000FF"><A NAME="polydrawPath_path2">polydrawPath</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object by manipulating the array of points with the codes contained in the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> array. The codes represent the instructions that can be OR'd together, where:

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Code</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">01</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PT_CLOSEFIGURE</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Connects points to create a closed figure.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">02</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PT_LINETO</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Connects points in a line.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">04</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PT_BEZIERTO</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Connects points in a Bezier curve. These must occur in multiples of 3.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">06</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PT_MOVETO</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Moves to a point. This is, implicitly, always the first instruction.
</FONT></TD>
</TR>
</TABLE>
<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>polydrawPath</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr[]</B> <I>points</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>codes</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>points</I>
 </DT><DD>An array of <A HREF="/directx/dxm/help/da/DA_E0155.htm">Point2Bvr</A> objects.
</DD><DT><I>codes</I>
 </DT><DD>An array of <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> objects representing the instruction codes.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object. 


<H5>Remarks</H5>
<P>This function is equivalent to the Graphics Drawing Interface (GDI) <B>polydraw</B> function.

<H3><HR COLOR="#0000FF"><A NAME="polyline_path2">polyline</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a path behavior that consists of the given point behaviors. The path can be used either for drawing or animation. The default line style is the <A HREF="/directx/dxm/help/da/DA_E0179.htm#default_line">defaultLineStyle</A>. 

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>polyline</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr[]</B> <I>points</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>points</I>
 </DT><DD>An array of <A HREF="/directx/dxm/help/da/DA_E0155.htm">Point2Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="ray_path2">ray</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a path behavior that represents the line segment from the origin to the given point behavior. 

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>ray</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>p</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>p</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0155.htm">Point2Bvr</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A>object. 


<H3><HR COLOR="#0000FF"><A NAME="rectangle_path2">rect</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object representing a rectangle, centered at the origin.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>rect</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>width</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>height</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>width</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the width of the rectangle. This parameter can also be of type double.
</DD><DT><I>height</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the height of the rectangle. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object.


<H3><HR COLOR="#0000FF"><A NAME="roundrect_path2">roundRect</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object that is a rectangle, centered about the origin, with rounded, rather than square, corners. The corners are considered to be segments of an oval (in effect, an arc), centered at the origin.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>roundRect</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>width</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>height</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>width</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the rectangle's width. This parameter can also be of type double.
</DD><DT><I>height</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the rectangle's height. This parameter can also be of type double.
</DD><DT><I>arcWidth</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the width of the arc, expressed in meters. This parameter can also be of type double.
</DD><DT><I>arcHeight</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the height of the arc, expressed in meters. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object.
 

<H3><HR COLOR="#0000FF"><A NAME="stringpath_path2">stringPath</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object from the supplied <A HREF="/directx/dxm/help/da/DA_E0206.htm">StringBvr</A> object. The appearance is specified by the <A HREF="/directx/dxm/help/da/DA_E0139.htm">FontStyleBvr</A> object. The path behavior is useful for creating a matte to which an image behavior can be clipped.

<P><B>public</B> <B>static</B> <B>Path2Bvr</B> <B>stringPath</B><B>(</B><BR>&nbsp;&nbsp;<B>StringBvr</B> <I>string</I><B>,</B><BR>&nbsp;&nbsp;<B>FontStyleBvr</B> <I>fs</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>string</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0206.htm">StringBvr</A> object used to create the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object. This parameter can also be of type java.lang.String.
</DD><DT><I>fs</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0139.htm">FontStyleBvr</A> object specifying the appearance of the string.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0152.htm">Path2Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0152.htm#draw_path2">draw</A>, <A HREF="/directx/dxm/help/da/DA_E0152.htm#fill_path2">fill</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
