<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Static Methods Relevant to Point3Bvr Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Static Methods Relevant to Point3Bvr Objects">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="RelPoint3BvrMeth"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Static Methods Relevant to Point3Bvr Objects"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Static Methods Relevant to Point3Bvr Objects"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0118.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0191.htm">Static Fields Relevant to Point2Bvr Objects</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0193.htm">Static Fields Relevant to Point3Bvr Objects</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Static Methods Relevant to Point3Bvr Objects</H2>
<BR CLEAR=ALL>
<H3><HR COLOR="#0000FF"><A NAME="add_pt3v">add</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a three-dimensional point behavior. The location of the point is calculated by adding the corresponding coordinates of the given point and vector behaviors.

<P><B>public</B> <B>static</B> <B>Point3Bvr</B> <B>add</B><B>(</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>pt</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>vec</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pt</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> object.
</DD><DT><I>vec</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> object. 


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0192.htm#sub_pt3v">sub</A>

<H3><HR COLOR="#0000FF"><A NAME="bSpline_pt3">bSpline</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> behavior based on a B-spline function. The function depends on the control elements, the knot vector, the mathematical degree, and the weights of the control elements (these are optional).

<P>A B-spline function without weights is piecewise polynomial and with weights is piecewise rational (the quotient of two polynomials). It requires that:
 
<P>numberOfControlElements = numberOfKnots - <I>degree</I> + 1

<P>The control elements define the approximate direction and shape of the function. The knots represent junction values, in parameter space, between the connected polynomial parts. 

<P>Given a degree <I>d</I> and a number of knots <I>k</I>, the function is valid in the range knot<I>d</I> to knot<I>k-d</I>+1, and is otherwise undefined. For example, for a degree 2 curve, the valid range is from the second knot to the next to the last knot, inclusive.

<P>The returned <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> is the traversal of the spline function according to the <I>evaluation</I> parameter. The evaluation parameter is a <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> that must be in the valid range of the spline, which is [knot<I>d</I>, knot<I>k</I>-<I>d</I>+1]. Any values outside this range are automatically clamped to the end values.

<P><B>public</B> <B>static</B> <B>Point3Bvr</B> <B>bSpline</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>degree</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>knots</I><B>,</B><BR>&nbsp;&nbsp;<B>Point3Bvr[]</B> <I>control_elements</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>weights</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>evaluation</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>degree</I>
 </DT><DD>A number representing the mathematical degree of the B-spline to evaluate. Must be 1, 2, or 3. 
</DD><DT><I>knots</I>
 </DT><DD>An array of <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> objects representing the knots used to calculate the B-spline. 
</DD><DT><I>control_elements</I>
 </DT><DD>An array of <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> objects representing the control elements used to calculate the B-spline.
</DD><DT><I>weights</I>
 </DT><DD>An array of <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> objects representing the weights used to calculate the B-spline. There must be the same number of weights as control elements. For non-rational B-splines, the value of <I>weights</I> is null.
</DD><DT><I>evaluation</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object that controls the spline evaluation.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="derivative_pt3">derivative</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P><P>Creates a three-dimensional vector behavior of the instantaneous derivative (rate of change) of the given point behavior. For example, a constant yields a constant derivative of [0 0 0], and <A HREF="/directx/dxm/help/da/DA_E0192.htm#point3_pt3">point3</A>(time, 0) (without additional time substitutions) yields a constant derivative of [1 0 0]. 

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>derivative</B><B>(</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>pt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pt</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="distance_pt3">distance</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a number behavior representing the distance between two point behaviors. 

<P><B>public</B> <B>static</B> <B>NumberBvr</B> <B>distance</B><B>(</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>p1</I><B>,</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>p2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>p1</I> and <I>p3</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object. 


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0192.htm#distanceSquared_pt3">distanceSquared</A>
<H3><HR COLOR="#0000FF"><A NAME="distanceSquared_pt3">distanceSquared</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a number behavior representing the square of the distance between two point behaviors. This is the same as the <A HREF="/directx/dxm/help/da/DA_E0192.htm#distance_pt3">distance</A> method except that the distance is squared.

<P><B>public</B> <B>static</B> <B>NumberBvr</B> <B>distanceSquared</B><B>(</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>p1</I><B>,</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>p2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>p1</I> and <I>p3</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object.


<H5>Remarks</H5>
<P>This method is slightly more efficient than the <A HREF="/directx/dxm/help/da/DA_E0192.htm#distance_pt3">distance</A> method.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0192.htm#distance_pt3">distance</A>

<H3><HR COLOR="#0000FF"><A NAME="point3_pt3">point3</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a three-dimensional point behavior. The location of the point is given in Cartesian coordinates.

<P><B>public</B> <B>static</B> <B>Point3Bvr</B> <B>point3</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>x</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>y</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>z</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>x</I>, <I>y</I>, and <I>z</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> objects, specifying the coordinate values. The <I>x</I> specifies the distance along the x-axis from the origin to the point, <I>y</I> specifies the distance along the y-axis, and <I>z</I> the distance along the z-axis. These parameters can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0192.htm#point3Spherical_pt3">point3Spherical</A>

<H3><HR COLOR="#0000FF"><A NAME="point3Spherical_pt3">point3Spherical</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a three-dimensional point behavior. The location of the point is given in spherical coordinates.

<P><B>public</B> <B>static</B> <B>Point3Bvr</B> <B>point3Spherical</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>XYangle</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>YZangle</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>length</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>XYangle</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object of the counter-clockwise XY angle, in radians, of the point about the positive y-ray. The angle begins at the positive z-ray, so that [0 0 1] has a <I>XYangle</I> of 0, and [1 0 0] has a <I>XYangle</I> of pi/2. This parameter can also be of type double.
</DD><DT><I>YZangle</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object of the counter-clockwise elevation angle, in radians, of the point above the XZ-plane. A <I>YZangle</I> of pi/2 means the point is straight up (on the positive y-ray), and a <I>YZangle</I> of -pi/2 is straight down (on the negative y-ray). This parameter can also be of type double. 
</DD><DT><I>length</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object of the distance of the point from the origin. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> object. 


<H5>Remarks</H5>
<P>The following table correlates Cartesian coordinates with polar coordinates:

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Cartesian</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>XYangle</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>YZangle</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Length
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Coordinates
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 0 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[d 0 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[-d 0 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">-pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> X = Don't Care
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 d 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 -d 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">-pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 0 d]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 0 -d]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">pi</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
</TABLE>
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0192.htm#point3_pt3">point3</A>

<H3><HR COLOR="#0000FF"><A NAME="sub_pt3">sub</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a three-dimensional vector behavior. The coordinate values of the vector are calculated by subtracting the coordinates of <I>p3</I> from the corresponding coordinates of <I>p1</I>.

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>sub</B><B>(</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>p1</I><B>,</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>p2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>p1</I> and <I>p3</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="sub_pt3v">sub</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics Class</A>
<P>Creates a three-dimensional point behavior. The location of the point is calculated by subtracting the coordinates of the given vector behavior from the corresponding coordinates of the given point behavior.

<P><B>public</B> <B>static</B> <B>Point3Bvr</B> <B>sub</B><B>(</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>pt</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>vec</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pt</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> object.
</DD><DT><I>vec</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0192.htm#add_pt3v">add</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
