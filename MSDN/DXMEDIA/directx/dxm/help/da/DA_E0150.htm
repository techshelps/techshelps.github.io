<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NumberBvr Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="NumberBvr Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="NumberBvr_Class"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --NumberBvr Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --NumberBvr Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0118.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0149.htm">MontageBvr Class</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0151.htm">PairObject Class</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>NumberBvr Class</H2>
<BR CLEAR=ALL>
<PRE><FONT FACE="Courier" SIZE="2">public class NumberBvr extends Behavior {
    
    // Methods
    public Object extract();
    public StringBvr toString(double a);
    public StringBvr toString(NumberBvr a);

    public static NumberBvr  newUninitBvr();
}
</FONT></PRE>
<P>Creates an object that represents a number behavior. At any given time, the value of the behavior is a floating point number.

<P>For more information about behaviors, see the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> class.

<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0150.htm#NumberBvr_Methods">NumberBvr Methods</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0150.htm#NumberBvr_Relevant_Methods_Statics">Relevant Methods from the Statics Class</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0150.htm#NumberBvr_Relevant_Fields_Statics">Relevant Fields from the Statics Class</A>
</UL>
<H3><A NAME="NumberBvr_Methods">NumberBvr Methods</A></H3>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0150.htm#extract_num">extract</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0150.htm#toString_numd">toString</A>(<I>double</I>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0150.htm#toString_num">toString</A>(<I>NumberBvr</I>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0150.htm#newUninitBvr_num">newUninitBvr</A>
</FONT></TD>
</TR>
</TABLE>
<H4><HR COLOR="#0000FF"><A NAME="extract_num">extract</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr Class</A>
<P>Extracts the value of behavior, returning a Java object. The behavior must have a constant value. 

<P><B>public</B> <B>Object</B> <B>extract</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns a Java object. For more information about java.lang.Object objects, consult a Java reference.


<H4><HR COLOR="#0000FF"><A NAME="toString_numd">toString</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr Class</A>
<P>Converts a double to a StringBvr.

<P><B>public</B> <B>StringBvr</B> <B>toString</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>a</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B> <BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The double representing the number of digits to use after the decimal point.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0206.htm">StringBvr</A> object.


<H4><HR COLOR="#0000FF"><A NAME="toString_num">toString</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr Class</A>
<P>Converts a NumberBvr to a StringBvr.

<P><B>public</B> <B>StringBvr</B> <B>toString</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>a</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B> <BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The NumberBvr object representing the number of digits to use after the decimal point.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0206.htm">StringBvr</A> object.


<H4><HR COLOR="#0000FF"><A NAME="newUninitBvr_num">newUninitBvr</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr Class</A>
<P>This method allows you to refer to an <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> behavior before that behavior has been defined. With this method you can create the behavior and use it in the definition of other behaviors, but not actually define its contents until some later point. (This is accomplished with the <A HREF="/directx/dxm/help/da/DA_E0124.htm#init_beh">init</A> method, which is available on all behaviors.) The system generates a run-time error if you initialize a non-uninitialized behavior, initialize an uninitialized behavior that has already been initialized, or run an initialized behavior that has not yet been initialized.

<P><B>public</B> <B>static</B> <B>NumberBvr</B> <B>newUninitBvr</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object.


<H3><A NAME="NumberBvr_Relevant_Methods_Statics">Relevant Methods from the Statics Class</A></H3>
<P>The following methods are defined in the <A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics</A> class and are most relevant for objects of type <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A>.

<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#abs_num">public static NumberBvr abs(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#acos_num">public static NumberBvr acos(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#add_num">public static NumberBvr add(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#asin_num">public static NumberBvr asin(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#atan_num">public static NumberBvr atan(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#atan2_num">public static NumberBvr atan2(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#bSpline_num">public static NumberBvr bSpline(int degree, NumberBvr[] knots, NumberBvr[] control_elements, NumberBvr[] weights NumberBvr evaluation);</A> 
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#ceiling_num">public static NumberBvr ceiling(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#cos_num">public static NumberBvr cos(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#degreesToRadians_num">public static NumberBvr degreesToRadians(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#derivative_num">public static NumberBvr derivative(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#div_num">public static NumberBvr div(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#eq_num">public static BooleanBvr eq(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#exp_num">public static NumberBvr exp(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#floor_num">public static NumberBvr floor(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#gt_num">public static BooleanBvr gt(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#gte_num">public static BooleanBvr gte(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#integral_num">public static NumberBvr integral(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#inter_num">public static NumberBvr interpolate(NumberBvr from, NumberBvr to, NumberBvr duration);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#ln_num">public static NumberBvr ln(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#log10_num">public static NumberBvr log10(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#lt_num">public static BooleanBvr lt(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#lte_num">public static BooleanBvr lte(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#mod_num">public static NumberBvr mod(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#mul_num">public static NumberBvr mul(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#ne_num">public static BooleanBvr ne(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#neg_num">public static NumberBvr neg(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#pow_num">public static NumberBvr pow(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#radiansToDegrees_num">public static NumberBvr radiansToDegrees(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#round_num">public static NumberBvr round(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#seededRandom_num">public static NumberBvr seededRandom(double seed);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#sin_num">public static NumberBvr sin(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#slowan_num">public static NumberBvr slowInSlowOut(NumberBvr from, NumberBvr to, NumberBvr duration, NumberBvr acceleration)</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#sqrt_num">public static NumberBvr sqrt(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#sub_num">public static NumberBvr sub(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#tan_num">public static NumberBvr tan(NumberBvr a);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0187.htm#toBvr_num">public static NumberBvr toBvr(double a);</A>

<H3><A NAME="NumberBvr_Relevant_Fields_Statics">Relevant Fields from the Statics Class</A></H3>
<P>The following fields are defined in the <A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics</A> class and are most relevant for objects of type <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A>.

<P><A HREF="/directx/dxm/help/da/DA_E0188.htm#globalTime_num">public final static NumberBvr globalTime;</A>
<P><A HREF="/directx/dxm/help/da/DA_E0188.htm#localTime_num">public final static NumberBvr localTime;</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
