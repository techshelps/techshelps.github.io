<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Preferences Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Preferences Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="Preferences_Class"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Preferences Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Preferences Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0118.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0156.htm">Point3Bvr Class</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0158.htm">PropertyDispatcher Class</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Preferences Class</H2>
<BR CLEAR=ALL>
<PRE><FONT FACE="Courier" SIZE="2">public class Preferences extends java.lang.Object{

    // Fields
    public final static String COLOR_KEY_BLUE;
    public final static String COLOR_KEY_GREEN;
    public final static String COLOR_KEY_RED;
    public final static String DITHERING;
    public final static String ENGINE_OPTIMIZATIONS;
    public final static String FILL_MODE;
    public final static int    FILL_MODE_POINT;
    public final static int    FILL_MODE_SOLID;
    public final static int    FILL_MODE_WIREFRAME;
    public final static String MAX_FRAMES_PER_SEC;
    public final static String OVERRIDE_APPLICATION_PREFERENCES;
    public final static String PERSPECTIVE_CORRECT;
    public final static String RGB_LIGHTING_MODE;
    public final static String SHADE_MODE;
    public final static int    SHADE_MODE_FLAT;
    public final static int    SHADE_MODE_GOURAUD;
    public final static int    SHADE_MODE_PHONG;
    public final static String TEXTURE_QUALITY;
    public final static int    TEXTURE_QUALITY_LINEAR;
    public final static int    TEXTURE_QUALITY_NEAREST;
    public final static String USE_VIDEOMEM;
    public final static String USE_3-D_HW;
     
    // Constructor
    public Preferences();

   // Methods
   public boolean getBoolean(String preference);
   public double getDouble(String preference);
   public int getInt(String preference);
   public String getString(String preference);
   public void propagate();
   public void set(String preference, boolean value);
   public void set(String preference, double value);
   public void set(String preference, int value);
   public void set(String preference, String value);
}
</FONT></PRE>
<P>A <B>Preferences</B> object controls various model qualities (such as texturing and shading) and hardware preferences. The object contains methods both for setting and retrieving these values. Each preference is identified with a string and its value is set by either a boolean, an integer, or a double. Before getting or setting a preference, first obtain the <B>Preference</B> object with the <A HREF="/directx/dxm/help/da/DA_E0213.htm#getPreferences_v">Viewer.getPreferences</A> method. 

<P>The first time DirectAnimation is run, it establishes the default preferences in the registry. This means the end-user can control what the default preference settings are. When the <A HREF="/directx/dxm/help/da/DA_E0213.htm#getPreferences_v">Viewer.getPreferences</A> method is invoked, the <B>Preferences</B> object contains these settings. These settings can be overridden by calling the <B>set()</B> methods on the <B>Preferences</B> object.

<P>A preference called <A HREF="/directx/dxm/help/da/DA_E0157.htm#override_pref">OVERRIDE_APPLICATION_PREFERENCES</A> allows the end-user to decide if a canvas or applet can override the other preferences. If it is TRUE, then explicitly setting the <B>Preferences</B> object will have no effect. 

<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#Constructor_pref">Preferences Constructor</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#Preferences_Methods">Preferences Methods</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#Preferences_Fields">Preferences Fields</A>
</UL>
<H3><HR COLOR="#0000FF"><A NAME="Constructor_pref">Preferences Constructor</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences Class</A>
<P>Constructs an <A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences</A> object. 

<P><B>public</B> <B>Preferences</B><B>(</B> <B>)</B><B>;</B><BR>
<HR COLOR="#0000FF">
<BR CLEAR=ALL><H3><A NAME="Preferences_Methods">Preferences Methods</A></H3>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#getBoolean_pref">getBoolean</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#getDouble_pref">getDouble</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#getInt_pref">getInt</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#getString_pref">getString</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#propagate_pref">propagate</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#setsb_pref">set</A>(<I>preference</I>, <I>boolean</I>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#setsd_pref">set</A>(<I>preference</I>, <I>double</I>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#setsi_pref">set</A>(<I>preference</I>, <I>int</I>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0157.htm#setss_pref">set</A>(<I>preference</I>, <I>string</I>)

</FONT></TD>
</TR>
</TABLE>
<H4><HR COLOR="#0000FF"><A NAME="getBoolean_pref">getBoolean</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences Class</A>
<P>Returns the value of those preferences that are set by booleans.

<P><B>public</B> <B>boolean</B> <B>getBoolean</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>preference</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>preference</I>
 </DT><DD>The name of the preference.
</DD></DL>
<H5>Return Values</H5>
<P>Returns a boolean. For more information about booleans, consult a Java reference.


<H4><HR COLOR="#0000FF"><A NAME="getDouble_pref">getDouble</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences Class</A>
<P>Returns the value of those preferences that are set by a double.

<P><B>public</B> <B>double</B> <B>getDouble</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>preference</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>preference</I>
 </DT><DD>The name of the preference.
</DD></DL>
<H5>Return Values</H5>
<P>Returns a double. For more information about doubles, consult a Java reference.


<H4><HR COLOR="#0000FF"><A NAME="getInt_pref">getInt</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences Class</A>
<P>Returns the value of those preferences that are set by an integer.

<P><B>public</B> <B>int</B> <B>getInt</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>preference</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>preference</I>
 </DT><DD>The name of the preference.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an integer. For more information about integers, consult a Java reference.


<H4><HR COLOR="#0000FF"><A NAME="getString_pref">getString</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences Class</A>
<P>Returns the name of a preference.

<P><B>public</B> <B>String</B> <B>getString</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>preference</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>preference</I>
 </DT><DD>The name of the preference.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the value of those preferences that are set by a string. For more information about strings, consult a Java reference.


<H4><HR COLOR="#0000FF"><A NAME="propagate_pref">propagate</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences Class</A>
<P>Tells the system to use the new preferences. Use after calling <A HREF="/directx/dxm/help/da/DA_E0213.htm#getPreferences_v">Viewer.getPreferences</A> and the <B>Preference.set()</B> methods but before the model is running. 

<P><B>public</B> <B>void</B> <B>propagate</B><B>(</B> <B>)</B><B>;</B><BR><H4><HR COLOR="#0000FF"><A NAME="setsb_pref">set</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences Class</A>
<P>Sets the value of those preferences that are determined by booleans. 

<P><B>public</B> <B>void</B> <B>set</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>preference</I><B>,</B><BR>&nbsp;&nbsp;<B>boolean</B> <I>value</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>preference</I>
 </DT><DD>The name of the preference.
</DD><DT><I>value</I>
 </DT><DD>The value of the preference.
</DD></DL>
<H4><HR COLOR="#0000FF"><A NAME="setsd_pref">set</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences Class</A>
<P>Sets the value of those preferences that are determined by doubles. 


<P><B>public</B> <B>void</B> <B>set</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>preference</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>value</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>preference</I>
 </DT><DD>The name of the preference.
</DD><DT><I>value</I>
 </DT><DD>The value of the preference.
</DD></DL>
<H4><HR COLOR="#0000FF"><A NAME="setsi_pref">set</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences Class</A>
<P>Sets the value of those preferences that are determined by integers. 

<P><B>public</B> <B>void</B> <B>set</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>preference</I><B>,</B><BR>&nbsp;&nbsp;<B>int</B> <I>value</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>preference</I>
 </DT><DD>The name of the preference.
</DD><DT><I>value</I>
 </DT><DD>The value of the preference.
</DD></DL>
<H4><HR COLOR="#0000FF"><A NAME="setss_pref">set</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences Class</A>
<P>Sets the value of those preferences that are determined by strings.

<P><B>public</B> <B>void</B> <B>set</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>preference</I><B>,</B><BR>&nbsp;&nbsp;<B>String</B> <I>value</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>preference</I>
 </DT><DD>The name of the preference.
</DD><DT><I>value</I>
 </DT><DD>The value of the preference.
</DD></DL>
<H3><A NAME="Preferences_Fields">Preferences Fields</A></H3>
<DL>
<DT><B><A NAME="keyblue_pref">public final static String COLOR_KEY_BLUE</A></B>
 </DT><DD>Determines the value of the blue RGB component. The value is set by an integer that can range from 0 to 255. The default value is 245.
</DD><DT><B><A NAME="keygreen_pref">public final static String COLOR_KEY_GREEN</A></B>
 </DT><DD>Determines the value of the green RGB component. The value is set by an integer that can range from 0 to 255. The default value is 254.
</DD><DT><B><A NAME="keyred_pref">public final static String COLOR_KEY_RED</A></B>
 </DT><DD>Determines the value of the red RGB component. The value is set by an integer that can range from 0 to 255. The default value is 1.
</DD><DT><B><A NAME="dither_pref">public final static String DITHERING</A></B>
 </DT><DD>Determines whether or not dithering is enabled. The value is set by a boolean. The default mode is Enabled.
</DD><DT><B><A NAME="optimizations_pref">public final static String ENGINE_OPTIMIZATIONS</A></B>
 </DT><DD>Determines whether or not there will be optimizations. Optimizations include such things as image caching and dirty rectangle optimization. The value is set by a boolean. The default value is On.
</DD><DT><B><A NAME="fillmode_pref">public final static String FILL_MODE</A></B>
 </DT><DD>Determines the fill mode, which can be FILL_MODE_POINT, FILL_MODE_SOLID, or FILL_MODE_WIREFRAME. The value is set by an integer. The default mode is Solid. 
</DD><DT><B><A NAME="fillmodepoint_pref">public final static int FILL_MODE_POINT</A></B>
 </DT><DD>Sets the fill mode to point.
</DD><DT><B><A NAME="fillmodesolid_pref">public final static int FILL_MODE_SOLID</A></B>
 </DT><DD>Sets the fill mode to solid. This is the default mode.
</DD><DT><B><A NAME="fillmodewireframe_pref">public final static int FILL_MODE_WIREFRAME</A></B>
 </DT><DD>Sets the fill mode to wireframe.
</DD><DT><B><A NAME="override_pref">public final static String OVERRIDE_APPLICATION_PREFERENCES</A></B>
 </DT><DD>A boolean value that, if true, means the registry overrides any attempts by the application to set preferences. This value cannot be set. It can only be retrieved with <A HREF="/directx/dxm/help/da/DA_E0157.htm#getBoolean_pref">getBoolean</A>. The default value is Off. 
</DD><DT><B><A NAME="perspective_pref">public final static String PERSPECTIVE_CORRECT</A></B>
 </DT><DD>Determines whether or not texturing will be adjusted for perspective. The value is set by a boolean. The default mode is On.
</DD><DT><B><A NAME="frames_pref">public final static MAX_FRAMES_PER_SEC</A></B>
 </DT><DD>Determines the maximum number of frames per second. The value is set by a double. The default value is 30.
</DD><DT><B><A NAME="rgblighting_pref">public final static String RGB_LIGHTING_MODE</A></B>
 </DT><DD>Determines whether or not the lighting mode is RGB. The value is set by a boolean. The default value is On.
</DD><DT><B><A NAME="shademode_pref">public final static String SHADE_MODE</A></B>
 </DT><DD>Determines what the shading mode will be. The possibilities are SHADE_MODE_FLAT, SHADE_MODE_GOURAUD, or SHADE_MODE_PHONG. The value is set by an integer. The default mode is GOURAUD. 
</DD><DT><B><A NAME="shademodeflat_pref">public final static SHADE_MODE_FLAT</A></B>
 </DT><DD>Sets the shading mode to flat.
</DD><DT><B><A NAME="shademodegouraud_pref">public final static int SHADE_MODE_GOURAUD</A></B>
 </DT><DD>Sets the shading mode to Gouraud. This is the default mode. 
</DD><DT><B><A NAME="shademodephong_pref">public final static int SHADE_MODE_PHONG</A></B>
 </DT><DD>Sets the shading mode to Phong.
</DD><DT><B><A NAME="texturequality_pref">public final static String TEXTURE_QUALITY</A></B>
 </DT><DD>Determines what the texture rendering quality will be. The possibilities are TEXTURE_QUALITY_LINEAR or TEXTURE_QUALITY_NEAREST. The value is set by an integer. The default mode is NEAREST. 
</DD><DT><B><A NAME="texturequalitylinear_pref">public final static int TEXTURE_QUALITY_LINEAR</A></B>
 </DT><DD>Sets the texture rendering quality to linear. 
</DD><DT><B><A NAME="texturequalitynearest_pref">public final static int TEXTURE_QUALITY_NEAREST</A></B>
 </DT><DD>Sets the texture rendering quality to nearest. This is the default mode.
</DD><DT><B><A NAME="use3-D_pref">public final static String USE_3-D_HW</A></B>
 </DT><DD>Determines whether or not 3-D hardware will be enabled. The value is set by a boolean. The default is Off. This preference cannot be overridden by the application. It is a read-only value.
</DD><DT><B><A NAME="videomem_pref">public final static USE_VIDEOMEM</A></B>
 </DT><DD>Determines whether or not the video memory will be enabled. The value is set by a boolean. The default is On. 
</DD></DL>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
