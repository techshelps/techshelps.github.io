<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sprite Control</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Sprite Control">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="dasprite"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Sprite Control"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Sprite Control"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0019.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0021.htm">Sequencer Control</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0023.htm">Structured Graphics Control</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Sprite Control</H2>
<BR CLEAR=ALL>
<P>The Sprite control lets you create and control image source-based, flip book-style animation for a Web page, and enables you to have frame-by-frame control over your animation. You can set markers to trigger events at desired points in <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0275.htm#sprite">sprite</A> playback, or create individual mouse events for each frame of the animation.


<P>To use the Sprite control, you must first instantiate it on the HTML page, as shown in the following syntax:


<P><B>Syntax</B>
<PRE><FONT FACE="Courier" SIZE="2">

&lt;OBJECT ID=object 
CLASSID="clsid: FD179533-D86E-11d0-89D6-00A0C90833E6 "&gt;
[&lt;PARAM NAME="Property | Method" VALUE="PropertyValue"&gt;]
&lt;/OBJECT&gt;
</FONT></PRE>
<P><B>Parameters</B>

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>object</I>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">String identifying the object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Property | Method
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One of the Sprite control properties or methods in the following lists.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PropertyValue
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Valid value for the specified property or method.


</FONT></TD></TR></TABLE>
<P>To use the Sprite control from within a scripting language such as Microsoft JScript&#153;, Microsoft Visual Basic(r) Scripting Edition (VBScript), or other Web scripts, use the following script syntax:
<PRE><FONT FACE="Courier" SIZE="2">
object.Property | Method [=PropertyValue]

</FONT></PRE>
<P>Some properties and methods are scriptable only. See the desired topic for syntax details.

<A NAME="Sprite_Properties"></A><P><B>Sprite Control Properties

</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Property
 </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprAutoStart_Property">AutoStart</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines whether the sprite starts playback upon loading.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprColorKey_Property">ColorKey</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the transparency color for a source image.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprFinalFrame_Property">FinalFrame</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the sprite to display a designated frame when playback is stopped.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprFrame_Property">Frame</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the sprite image frame currently displayed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprFrameMap_Property">FrameMap</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the order in which sprite frames play back, and the length of time each frame is displayed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprImage_Property">Image</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves a Microsoft&#174; DirectAnimation&#153; image from the Sprite control (script only). 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprInitialFrame_Property">InitialFrame</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the frame number that the sprite displays when it becomes visible.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprLibrary_Property">Library</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the DirectAnimation Library reference (script only).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprMaximumRate_Property">MaximumRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the sprite's maximum rendering rate (number of times the control will render per second).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcMouseEventsEnabled_Property">MouseEventsEnabled</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves whether the sprite responds to mouse events.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprNumFrames_Property">NumFrames</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the number of frames in the sprite source.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprNumFramesAcross_Property">NumFramesAcross</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the width (in frames) of the sprite source.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprNumFramesDown_Property">NumFramesDown</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the length (in frames) of the sprite source.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprPlayRate_Property">PlayRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the sprite's playback speed. 


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprPlayState_Property">PlayState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the sprite's playback state, whether stopped, playing, or paused.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprRepeat_Property">Repeat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the number of times the sprite will


 loop during playback
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprSourceURL_Property">SourceURL</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the URL that points to the sprite source image.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprTime_Property">Time</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the elapsed playback time for the sprite, including looping.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprTimerInterval_Property">TimerInterval</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the length of time between frames, (in milliseconds) for the sprite's rendering.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprUseColorKey_Property">UseColorKey</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves whether to use the sprite's transparency information.
</FONT></TD></TR></TABLE>
<A NAME="Sprite_Methods"></A><P><B>Sprite Control Methods
</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Method
 </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprAddFrameMarker_Method">AddFrameMarker</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets a marker to fire an event when playback reaches the designated frame.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprAddTimeMarker_Method">AddTimeMarker</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets a marker to fire an event when playback reaches the designated time.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprFrameSeek_Method">FrameSeek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the sprite playback to a specific frame.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprPause_Method">Pause</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stops playback at the current frame and maintains current frame position.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprPlay_Method">Play</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Begins playback from the current frame.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprSeek_Method">Seek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the sprite playback to a specific elapsed time.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprStop_Method">Stop</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Ends playback at the current frame.
</FONT></TD></TR></TABLE>
<A NAME="Sprite_Events"></A><P><B>Sprite Control Events
</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Event
 </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnClick_Event">onclick</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the user clicks the sprite once.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnDblClick_Event">ondblclick</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the user double-clicks the sprite.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnFrameSeek_Event">onframeseek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs after the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprFrameSeek_Method">FrameSeek</A> method has been called.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnMarker_Event">onmarker</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when a time marker has been reached, either during sprite playback or when stopped.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnMediaLoaded_Event">onmedialoaded</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when a piece of sprite media is completely downloaded.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnMouseDown_Event">onmousedown</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the user presses the mouse button down while the mouse pointer is over a sprite.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnMouseMove_Event">onmousemove</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the user moves the mouse pointer across the sprite's nontransparent area.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnMouseOut_Event">onmouseout</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the cursor leaves the sprite's nontransparent area.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnMouseOver_Event">onmouseover</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the cursor enters a nontransparent area of the sprite.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnMouseUp_Event">onmouseup</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the user releases the mouse button while the mouse pointer is over a sprite.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnPause_Event">onpause</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when sprite playback pauses.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnPlay_Event">onplay</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the sprite begins playback.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnPlayMarker_Event">onplaymarker</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when a time marker is reached during sprite playback.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnSeek_Event">onseek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs after the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprSeek_Method">Seek</A> method is called.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnStop_Event">onstop</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the sprite playback stops.


</FONT></TD></TR></TABLE>
<P>A Sprite control renders its visual display based on a source file that contains a series of <I>frames</I>. Each frame contains one of the images used to create the animation. This image can be a separate image file or part of a file that provides images for multiple frames in a sequential strip. The file providing the images for a sprite is known as the <I>sprite source</I>.

<P>The images used for a Sprite control can be in different formats. For example, you can use images in .gif, .jpg, .png (Portable Network Graphics), and .wmf (windows metafile) formats.


 You can't mix image formats within the same sprite source, but you can change the sprite source image dynamically. 

<P>A Sprite control can use a <I>frame map</I> to define a specific order in which to display frames. The frame map also defines how long each frame is displayed. If the sprite does not include a frame map, frames are displayed in their order of appearance within the image source file, and each frame appears for the same length of time, as specified by the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprTimerInterval_Property">TimerInterval</A> property.

<P>A Sprite control will not begin its animation sequence until all of its media is downloaded.


<H3><HR COLOR="#0000FF"><A NAME="sprAutoStart_Property">AutoStart Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Determines whether the sprite starts playback immediately after loading.<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B> <BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;AutoStart&quot;</B> <B>VALUE=&quot;fStart&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.AutoStart</B> <B>[=fStart]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>fStart</I>
 </DT><DD>Boolean value that sets when the playback starts. If True (&#150;1 or nonzero), playback starts as soon as the sprite is loaded, or if False (0) the sprite simply loads and does not play until explicitly started with a <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprPlay_Method">Play</A> method.


 The default value is False.


 Read-write at run time; write access is available at run time only when the sprite is stopped.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprColorKey_Property">ColorKey Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets the transparency color to use


 with this specific sprite. Read-write at run time; write access is available at run time only when the sprite is stopped.
<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;ColorKey</B> <B>&quot;</B> <I>VALUE=&quot;r</I><B>,</B><BR>&nbsp;&nbsp;<I>g</I><B>,</B><BR>&nbsp;&nbsp;<B>b</B> <B>&quot;&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.ColorKey=lib.DAColor</B><BR><H5>Parameters</H5>
<DL><DT><I>r</I>
 </DT><DD>Integer that specifies the red value (0-255).
</DD><DT><I>g</I>
 </DT><DD>Integer that specifies the green value (0-255).
</DD><DT><I>b</I>
 </DT><DD>Integer that specifies the blue value (0-255).


</DD><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>DAColor</I>
 </DT><DD>The <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0040.htm#DAColor_Class">DAColor</A> object that specifies the sprite's color. 


</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprFinalFrame_Property">FinalFrame Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets the sprite to display the designated frame when playback is stopped. Read-write at run time, write accessible only when sprite is stopped.
<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>Name=&quot;FinalFrame&quot;</B> <B>Value=&quot;fframeflag&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.FinalFrame</B> <B>[=fframeflag]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>fframeflag</I>
 </DT><DD>Integer expression identifying the desired frame to be displayed when sprite playback stops. Values can be &#150;1 (display current frame), 0 (return to the initial frame), or any valid frame number, from 1 to <I>n</I> where <I>n</I> represents the last frame in the sprite source. The default value is <B>0</B>, return to the initial frame.


</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprFrame_Property">Frame Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Specifies the sprite image for the frame currently displayed on the page. Read-only at run time.


<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>nFrame=object.Frame</B><BR><H5>Parameters</H5>
<DL><DT><I>nFrame</I>
 </DT><DD>Integer expression identifying the current frame, from 0 to <I>n</I>, where <I>n</I> represents the last frame in the sprite source. The default value is 1.
</DD></DL>
<H5>Remarks</H5>
<P>If the sprite has a frame map, the value of the <B>Frame</B> property is a one-based index into the frame map. For example, if the frame map defines 10 frames, the <B>Frame</B> property value is 10 when the last frame in the frame map appears on the page.
<P>VBScript note: To use the value returned by the <B>Frame</B> property, you will have to use the Microsoft Visual Basic&#174;, Scripting Edition cInt function


 to convert the value from an unsigned integer into a variant that VBScript will accept. An example would be FrameNum=cInt(sprite.Frame).

<P>The following example sets the indicator for a form to the value of the current frame for the sprite named SpriteHorse:
<PRE><FONT FACE="Courier" SIZE="2">
document.MyForm.txtFrame.value=SpriteHorse.Frame
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprFrameMap_Property">FrameMap Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Specifies the order in which sprite frames play back and the length of time each frame is displayed.


 Read/write at run time; write access is available at run time only when the sprite is stopped.
<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;FrameMap&quot;</B> <I>VALUE=&quot;nImage1</I><B>,</B><BR>&nbsp;&nbsp;<B>t1</B> <B>[;</B> <I>nImage2</I><B>,</B><BR>&nbsp;&nbsp;<B>t2</B> <B>...]</B> <B>&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><I>object.FrameMap=&quot;nImage1</I><B>,</B><BR>&nbsp;&nbsp;<B>t1</B> <B>[;</B> <I>nImage2</I><B>,</B><BR>&nbsp;&nbsp;<B>t2</B> <B>...]</B> <B>&quot;</B><BR><H5>Parameters</H5>
<DL><DT><I>nImage1</I>, <I>nImage2</I>,<I>...</I>


 </DT><DD>Integer expression denoting the image to draw from the frame source over the duration. The first frame in the sprite is numbered 1. The default value is the order in the source file.
</DD><DT><I>t1, t2, ...</I>
 </DT><DD>Expression indicating the frame's duration (seconds.milliseconds, 0.000). The default value is the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprTimerInterval_Property">TimerInterval</A> duration.
</DD></DL>
<H5>Remarks</H5>
<P>Sprites that use frame maps can display source images in an order other than the images' consecutive order of appearance within the source file. They can also display each frame in the sprite for a different length of time.

<P>If the sprite has not been authored with a <B>FrameMap</B> property setting, frames appear in their order of appearance within the frame source file. The frames are in order from left to right, from top to bottom, within the file. Each frame appears for the number of seconds.milliseconds given by the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprTimerInterval_Property">TimerInterval</A> property.

<P>The following examples create a frame map with six frames.
<UL><LI>Frame 1 displays image 6 for 100 milliseconds.
<LI>Frame 2 displays image 5 for 200 milliseconds.
<LI>Frame 3 displays image 4 for 300 milliseconds.
<LI>Frame 4 displays image 3 for 400 milliseconds.
<LI>Frame 5 displays image 2 for 100 milliseconds.
<LI>Frame 6 displays image 1 for 100 milliseconds.
</UL>
<PRE><FONT FACE="Courier" SIZE="2">
&lt;PARAM NAME="FrameMap"
VALUE="6,0.100;5,0.200;4,0.300;3,0.400;2,0.100;1,0.100"&gt;
</FONT></PRE>
<P>
<PRE><FONT FACE="Courier" SIZE="2">
object.FrameMap="6,0.100;5,0.200;4,0.300;3,0.400;2,0.100;1,0.100"
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprImage_Property">Image Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets or retrieves a <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0047.htm#DAImage_Class">DAImage</A> object


 used for the Sprite control. 
<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Image=DAImage</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.


</DD><DT><I>DAImage</I>
 </DT><DD>The <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0047.htm#DAImage_Class">DAImage</A> object used for the sprite image. 


</DD></DL>
<H5>Remarks</H5>
<P>The following JScript code shows how to use this property:
<PRE><FONT FACE="Courier" SIZE="2">
m.DAControl.PixelLibrary;
img=m.ImportImage("mygif.gif");
mysprite.Image=img;
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprInitialFrame_Property">InitialFrame Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Specifies the frame the sprite displays when it becomes visible. Read/write at run time; write access is available at run time only when the sprite is stopped.


<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;InitialFrame&quot;</B> <B>VALUE=&quot;nFrame&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.InitialFrame</B> <B>[=nFrame]</B> <BR><H5>Parameters</H5>
<DL><DT><I>nFrame</I>
 </DT><DD>An integer expression specifying the frame that the sprite should seek to before starting playback. The value of the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprFrame_Property">Frame</A> property is a one-based index into the frame map. For example, if the frame map defines 10 frames, the <B>Frame</B> property value is 10 when the last frame in the frame map appears on the page. If the 
<B>InitialFrame</B> property is set to 0, the sprite will load the media but will display a blank frame until the 
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprPlay_Method">Play</A> method is invoked. If the <B>InitialFrame</B> property is set to &#150;1 (or any number less than zero), the sprite will not load the media and will display a blank frame until the <B>Play</B> method is invoked, at which point it will begin media download and start playback after the media has been completely downloaded. The default value is 1.
</DD></DL>
<H5>Remarks</H5>
<P>This property is scriptable, but if it is set from a script, only the initial frame


 of the sprite as it is set in the HTML-persistence is changed. The current frame of the sprite is not changed.
<P>The following example sets an initial frame indicator on the page to the value of the <B>InitialFrame</B> property for the sprite named SpriteHorse:
<PRE><FONT FACE="Courier" SIZE="2">
document.MyForm.txtInitialFrame.value=SpriteHorse.InitialFrame
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprLibrary_Property">Library Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Retrieves a <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0063.htm#DAStatics_Class">DAStatics</A> object that gives the sprite access to the DirectAnimation library functions and properties. 


<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>lib=object.Library</B><BR><H5>Parameters</H5>
<DL><DT><I>lib</I>
 </DT><DD>A <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0063.htm#DAStatics_Class">DAStatics</A> object. 


</DD><DT><I>object</I>
 </DT><DD>Name of the sprite.
 


</DD></DL>
<H5>Remarks</H5>
<P>The following JScript code shows how to use this property:
<PRE><FONT FACE="Courier" SIZE="2">
mysprite.Library=DAControl.PixelLibrary;
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprMaximumRate_Property">MaximumRate Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets or retrieves the sprite's maximum rendering speed (number of times the control will render per second). Read-write at run time; write access is available at run time only when the sprite is stopped.
<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;MaximumRate&quot;</B> <B>VALUE=&quot;fps&quot;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.MaximumRate</B> <B>[=fps]</B> <BR><H5>Parameters</H5>
<DL><DT><I>fps</I>
 </DT><DD>Number of frames per second. Default is 30. 
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprNumFrames_Property">NumFrames Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>The number of frames in the Sprite source. Read/write at run time; write access is available only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;NumFrames&quot;</B> <B>VALUE=&quot;nframes&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.NumFrames</B> <B>[=nframes]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>nframes</I>
 </DT><DD>Integer indicating the total number of frames in the image for this frame source.
</DD></DL>
<H5>Remarks</H5>
<P>If the sprite includes a frame map, the <B>NumFrames</B> property gives the number of frames defined in the map. If you change the <B>NumFrames</B>, <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprNumFramesAcross_Property">NumFramesAcross</A>, or <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprNumFramesDown_Property">NumFramesDown</A> properties, the sprite does not refresh until you set the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprSourceURL_Property">SourceURL</A> property again.
<H3><HR COLOR="#0000FF"><A NAME="sprNumFramesAcross_Property">NumFramesAcross Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>The width (in frames) of the sprite source image.


 Read/write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;NumFramesAcross&quot;</B> <B>VALUE=&quot;nAcross&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.NumFramesAcross</B> <B>[=nAcross]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of sprite.

</DD><DT><I>nAcross</I>
 </DT><DD>Integer indicating the number of frames across in the sprite source image.
</DD></DL>
<H5>Remarks</H5>
<P>If you change the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprNumFrames_Property">NumFrames</A>, <B>NumFramesAcross</B>, or <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprNumFramesDown_Property">NumFramesDown</A> properties, the sprite does not refresh until you set the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprSourceURL_Property">SourceURL</A> property again.
<H3><HR COLOR="#0000FF"><A NAME="sprNumFramesDown_Property">NumFramesDown Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>The length (in frames) of the Sprite Frame Source. Read/write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;NumFramesDown&quot;</B> <B>VALUE=&quot;nDown&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.NumFramesDown</B> <B>[=nDown]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of sprite.

</DD><DT><I>nDown</I>
 </DT><DD>Integer indicating the number of frames in the sprite source image.


</DD></DL>
<H5>Remarks</H5>
<P>If you change the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprNumFrames_Property">NumFrames</A>, <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprNumFramesAcross_Property">NumFramesAcross</A>, or <B>NumFramesDown</B> properties, the sprite does not refresh until you set the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprSourceURL_Property">SourceURL</A> property again.
<H3><HR COLOR="#0000FF"><A NAME="sprPlayRate_Property">PlayRate Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets or retrieves the sprite's playback speed. Can be used to speed up or slow down sprite playback, or even play the sprite backward. Read-write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;PlayRate&quot;</B> <B>VALUE=&quot;rSpeed&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.PlayRate=rSpeed</B><BR><H5>Parameters</H5>
<DL><DT><I>rSpeed</I>
 </DT><DD>Floating-point expression


 indicating the number used to multiply the duration for each frame. The default value is 1.0. Possible values are:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value

 </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning 
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Positive (&gt;0.0)
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sprite plays forward.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0.0
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Disables the <B>PlayRate</B> property.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Negative (&lt;0.0)
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sprite plays backward.
</FONT></TD></TR></TABLE>
</DD></DL>
<H5>Remarks</H5>
<P>If the sprite does not have a frame map, the timer interval is divided by the value of <B>PlayRate</B> to determine the duration for all frames. <B>PlayRate</B> values greater than 1.0 speed up playback; values smaller than 1.0 slow down playback.

<P>The following example sets the play rate for the sprite named SpriteHorse to the value the user enters on the page:
<PRE><FONT FACE="Courier" SIZE="2">
SUB PlayRate_onclick
SpriteHorse.PlayRate=document.MyForm.txtPlayRate.value
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprPlayState_Property">PlayState Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Retrieves the playback state of the sprite: stopped, playing, or paused.

<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>state=object.PlayState</B> <BR><H5>Parameters</H5>
<DL><DT><I>state</I>
 </DT><DD>Integer value. Zero if the control is stopped, 1 if the control is playing,


 2 if the media is paused. 
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprRepeat_Property">Repeat Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets or retrieves the number of times the sprite will


 loop during playback. Read-write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;Repeat&quot;</B> <B>VALUE=&quot;nRepeat&quot;</B> <B>&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Repeat=nRepeat</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>nRepeat</I>
 </DT><DD>Integer expression indicating the number of times the sprite repeats playback. The default is 1. To loop infinitely, use &#150;1. The value 0 disables the <B>Repeat</B> property. Negative values are treated as unsigned. 
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprSourceURL_Property">SourceURL Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets or retrieves the URL that points to the sprite source image. Read-write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;SourceURL&quot;</B> <B>VALUE=&quot;URL&quot;&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.SourceURL=URL</B> <BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>URL</I>
 </DT><DD>String pointing to the image file. 
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprTime_Property">Time Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Retrieves the sprite's elapsed playback time (in milliseconds). Playback repetitions are included in the time calculations. Read-only at run time.

<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Time=eTime</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>eTime</I>
 </DT><DD>Number of milliseconds into the animation. The default value is zero.
</DD></DL>
<H5>Remarks</H5>
<P>The <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnSeek_Event">onseek</A> event is fired upon completion of the <B>Time </B>property change.


<H3><HR COLOR="#0000FF"><A NAME="sprTimerInterval_Property">TimerInterval Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>The length of time, in seconds.milliseconds, between the sprite's frame updates. Read/write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;TimerInterval&quot;</B> <B>VALUE=&quot;nInterval&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.TimerInterval</B> <B>[=nInterval]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>nInterval</I>
 </DT><DD>Expression defining the number of seconds.milliseconds between sprite frame updates. The default interval is 0.100 seconds (0.100) or 10 frames per second.
</DD></DL>
<H5>Remarks</H5>
<P>This property


 specifies the minimum length of time between sprite frame updates. For example, if the timer interval is set to 0.100 seconds and an image is scheduled to display at 0.150 seconds, the image will not be displayed until 0.200 seconds because the timer interval resolution is set to 0.100 milliseconds. If the image is scheduled to appear for 0.050 seconds or less (because of a frame map) it might not even appear.

<P>The following example sets the value of the timer interval indicator on the page to the value of the <B>TimerInterval</B> property for the sprite named SpriteHorse:
<PRE><FONT FACE="Courier" SIZE="2">
document.MyForm.txtTimerInterval.value=SpriteHorse.TimerInterval
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprUseColorKey_Property">UseColorKey Property</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets or retrieves the property that specifies whether to use the sprite's transparency information. Read-write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;UseColorKey&quot;</B> <B>VALUE=&quot;0</B> <B>|</B> <B>1&quot;&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.UseColorKey=fFalse</B> <BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>fFalse</I>
 </DT><DD>Boolean value, True (1) or False (0). A value of True specifies that the transparency information set by the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprColorKey_Property">ColorKey</A> property is used. A value of False specifies that the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprColorKey_Property">ColorKey</A> transparency information is not be used. The default is False. 


</DD></DL>
<H5>Remarks</H5>
<P> If the <B>ColorKey</B> property value is


 set in a PARAM tag, then you should also set the <B>UseColorKey</B> value in a PARAM tag.
<H3><HR COLOR="#0000FF"><A NAME="sprAddFrameMarker_Method">AddFrameMarker Method</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets a marker to fire an event when playback reaches the designated frame. This method can be used or modified only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;AddFrameMarkerx&quot;</B> <B>VALUE=&quot;</B> <I>frame</I> <B>,</B><BR>&nbsp;&nbsp;<B>marker</B> <I>name</I> <B>,</B><BR>&nbsp;&nbsp;<B>[fRelative]&quot;&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.AddFrameMarker</B><B>(</B><BR>&nbsp;&nbsp;<I>frame</I> <B>,</B><BR>&nbsp;&nbsp;<B>&quot;</B> <B>marker</B> <B>name</B> <I>&quot;</I> <B>,</B><BR>&nbsp;&nbsp;<B>[</B> <B>fRelative</B> <I>]</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>x</I>
 </DT><DD>A sequential integer identifying the frame marker, starting at 1 (PARAM tag syntax only). If you are adding more than one frame marker through PARAM tag syntax, you must make each <B>AddFrameMarker</B> method call distinct by adding an sequential integer at the end of the <B>AddFrameMarker</B> PARAM name.


 starting at 1.
</DD><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>Frame</I>
 </DT><DD>Number or key name of the frame that the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnMarker_Event">onmarker</A> or <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnPlayMarker_Event">onplaymarker</A> event fires on.


</DD><DT><I>marker name</I>
 </DT><DD>Name of the marker.
</DD><DT><I>fRelative</I>
 </DT><DD>An optional flag that specifies event firing. DAn optional flag that specifies event firing. efault is True. If True (relative) the event fires every time, including in loops. If False (absolute) the event fires at the specified time once and ignores looping.


 For PARAM Tag syntax, use zero (False) or nonzero (True); for script use predefined constants True and False.




</DD></DL>
<H5>Remarks</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnMarker_Event">onmarker</A> events are fired whether or not the sprite is playing. <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnPlayMarker_Event">onplaymarker</A> events are only fired when the sprite is playing. 

<P>The following sprite has three markers defined.
<PRE><FONT FACE="Courier" SIZE="2">
&lt;PARAM name="AddFrameMarker1" value="0,FrameEight,0"&gt;
&lt;PARAM name="AddFrameMarker2" value="4,FrameFour,0"&gt;
&lt;PARAM name="AddFrameMarker3" value="8,FrameZero,0"&gt;
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprAddTimeMarker_Method">AddTimeMarker Method</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets a marker to fire an event when playback reaches the designated time. This method can be used or modified only when the sprite is stopped.
<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;AddTimeMarker</B> <B>x</B> <B>&quot;</B> <B>VALUE=&quot;</B> <I>time</I> <B>,</B><BR>&nbsp;&nbsp;<B>marker</B> <I>name</I><B>,</B><BR>&nbsp;&nbsp;<B>[</B> <B>fAbsolute</B> <B>]&quot;&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.AddTimeMarker</B><B>(</B><BR>&nbsp;&nbsp;<I>time</I> <B>,</B><BR>&nbsp;&nbsp;<B>&quot;</B> <B>marker</B> <I>name&quot;</I><B>,</B><BR>&nbsp;&nbsp;<B>[</B> <B>fAbsolute</B> <I>]</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>x</I>
 </DT><DD>A sequential integer identifying the time marker, starting at 1 (PARAM tag syntax only). If you are adding more than one time marker through PARAM tag syntax, you must make each <B>AddTimeMarker</B> method call distinct by adding an sequential integer at the end of the <B>AddTimeMarker</B> PARAM name.
</DD><DT><I>time</I>
 </DT><DD>Time for the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnMarker_Event">onmarker</A> or <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprOnPlayMarker_Event">onplaymarker</A> event to fire. 
</DD><DT><I>marker name</I>
 </DT><DD>Name of the marker. 
</DD><DT><I>fAbsolute</I>
 </DT><DD>An optional flag that specifies event firing. Default is True. If True (absolute) the event fires at the specified time once and ignores looping. If False (relative) the event fires everytime, including in loops. For PARAM tag syntax, use 0 for False and use &#150;1 or nonzero for True. For script, use the predefined constants True and False.



 For PARAM Tag syntax, use zero (False) or nonzero (True); for script use predefined constants True and False. 
</DD></DL>
<H5>Remarks</H5>
<P>For details on the events fired for markers. <B>onmarker</B> events are fired whether or not the sprite is playing. <B>onplaymarker</B> events are fired only when the sprite is playing. 

<P><B>Example</B>
The following PARAM tag examples show how to use this method.



<PRE><FONT FACE="Courier" SIZE="2">
&lt;PARAM name="AddTimeMarker1" value="0.0,MyMark,1"&gt;
&lt;PARAM name=" AddTimeMarker2" value="4.7,FrameFour,1"&gt;
&lt;PARAM name=" AddTimeMarker3" value="8.0,FrameZero,1"&gt;
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprFrameSeek_Method">FrameSeek Method</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets the sprite playback to a specific frame.

<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.FrameSeek</B><B>(</B><BR>&nbsp;&nbsp;<I>frame</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B> <BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>frame</I>
 </DT><DD>New playback frame for the sprite.
</DD></DL>
<H5>Remarks</H5>
<P>The following example seeks the sprite named SpriteHorse in response to an <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnClick_Event">onclick</A> event: 


<PRE><FONT FACE="Courier" SIZE="2">
SUB SpriteHorse_onclick
&#009;SpriteHorse.FrameSeek(5)
END SUB
</FONT></PRE>
<P><B>mouseover example</B>
Right click inside the frame and View Source to get source code.

<center><iframe name="exampleframe" src="/directx/dxm/help/da/docsamps/spr-3State.htm"
height=200 width=400 align=center FRAMEBORDER=10 FRAMESPACING=5
scrolling="no">
</iframe></center>
<BR CLEAR=ALL><H3><HR COLOR="#0000FF"><A NAME="sprPause_Method">Pause Method</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Stops playback at the current frame and maintains current frame position.

<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Pause</B> <BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD></DL>
<H5>Remarks</H5>
<P>Does not rewind the media. 


<P>The following example pauses


 the sprite named SpriteHorse in response to an <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnClick_Event">onclick</A> event: 
<PRE><FONT FACE="Courier" SIZE="2">
SUB SpriteHorse_onclick
&#009;SpriteHorse.Pause
END SUB
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprPlay_Method">Play Method</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Begins playback from the current frame. This method is scriptable only.
<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Play</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD></DL>
<H5>Remarks</H5>
<P>The following example starts playing the sprite named SpriteHorse in response to an <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnClick_Event">onclick</A> event:

<PRE><FONT FACE="Courier" SIZE="2">
SUB Play_onclick
&#009;SpriteHorse.Play
END SUB
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprSeek_Method">Seek Method</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Sets the sprite playback to start at the specified elapsed time.


<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Seek</B> <B>(</B><BR>&nbsp;&nbsp;<I>time</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>time</I>
 </DT><DD>Elapsed time after which the sprite begins playing.


</DD></DL>
<H5>Remarks</H5>
<P>The following example seeks the sprite named SpriteHorse in response to an <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnClick_Event">onclick</A> event: 

<PRE><FONT FACE="Courier" SIZE="2">
SUB SpriteHorse_onclick
&#009;SpriteHorse.seek(0.0)
END SUB
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprStop_Method">Stop Method</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Ends playback at the current frame and resets the sprite's playback position to the beginning.


 This method is scriptable only.
<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Stop</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD></DL>
<H5>Remarks</H5>
<P>The following example stops playing the sprite named SpriteHorse in response to an <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0024.htm#darcOnClick_Event">onclick</A> event:

<PRE><FONT FACE="Courier" SIZE="2">
SUB SpriteHorse_onclick
&#009;SpriteHorse.Stop
END SUB
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprOnFrameSeek_Event">onframeseek Event</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Occurs after the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprFrameSeek_Method">FrameSeek</A> method has been invoked and the current playback frame has been changed.

<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onframeseek</B><B>(</B><BR>&nbsp;&nbsp;<I>newframe</I><BR>&nbsp;&nbsp;<B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onframeseek</B><B>(</B><BR>&nbsp;&nbsp;<I>newframe</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>script</I>
 </DT><DD>Script to be run.


</DD><DT><I>newframe</I>
 </DT><DD>New frame to which the current playback position has been set.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprOnMarker_Event">onmarker Event</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Occurs when a frame or time marker has been reached.

<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onmarker</B><B>(</B><BR>&nbsp;&nbsp;<I>markername</I><BR>&nbsp;&nbsp;<B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onmarker</B><B>(</B><BR>&nbsp;&nbsp;<I>markername</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>markername</I>
 </DT><DD>String containing the marker name established in the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprAddTimeMarker_Method">AddTimeMarker</A> or <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprAddFrameMarker_Method">AddFrameMarker</A> methods. 
</DD><DT><I>script</I>
 </DT><DD>Script to be run.
</DD></DL>
<H5>Remarks</H5>
<P>This event occurs when the sprite playback position reaches the marker point, either when the sprite is playing, paused, or stopped. For example, if you seek to the marker position while the sprite is paused or stopped, the <B>onmarker</B> event will occur.


<H3><HR COLOR="#0000FF"><A NAME="sprOnMediaLoaded_Event">onmedialoaded Event</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Occurs when a piece of sprite media is fully downloaded. 

<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_</B> <B>onmedialoaded</B><B>(</B><BR>&nbsp;&nbsp;<I>URL</I><BR>&nbsp;&nbsp;<B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onmedialoaded</B><B>(</B><BR>&nbsp;&nbsp;<I>URL</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>script</I>
 </DT><DD>Script to be run.
</DD><DT><I>URL</I>
 </DT><DD>URL used to load the media.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprOnPause_Event">onpause Event</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Occurs when sprite playback is paused.
<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onpause</B><B>(</B> <B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onpause</B><B>(</B> <B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>script</I>
 </DT><DD>Script to be run when the event occurs.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprOnPlay_Event">onplay Event</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Occurs when the sprite starts. The sprite will not start until all media is downloaded. 
<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onplay</B><B>(</B> <B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onplay</B><B>(</B> <B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>script</I>
 </DT><DD>Script to be run when the event occurs.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="sprOnPlayMarker_Event">onplaymarker Event</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Occurs when a marker is reached during sprite playback.
<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onplaymarker</B><B>(</B><BR>&nbsp;&nbsp;<I>markername</I><BR>&nbsp;&nbsp;<B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onplaymarker</B><B>(</B><BR>&nbsp;&nbsp;<I>markername</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>markername</I>
 </DT><DD>String containing the marker name established in the <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprAddTimeMarker_Method">AddTimeMarker</A> or <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprAddFrameMarker_Method">AddFrameMarker</A> methods. 
</DD><DT><I>script</I>
 </DT><DD>Script to be run.
</DD></DL>
<H5>Remarks</H5>
<P>This event occurs when the sprite playback position reaches the marker point while the sprite is playing.


<H3><HR COLOR="#0000FF"><A NAME="sprOnSeek_Event">onseek Event</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Occurs after a <A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm#sprSeek_Method">Seek</A> method has been invoked and the playback position has changed. 
<P><BR><B>Sub</B> <B>object_onseek</B><B>(</B><BR>&nbsp;&nbsp;<I>newtime</I><BR>&nbsp;&nbsp;<B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onseek</B><B>(</B><BR>&nbsp;&nbsp;<I>newtime</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>newtime</I>
 </DT><DD>Variable that contains the time value of the new playback position, in seconds.milliseconds (0.000).
</DD><DT><I>script</I>
 </DT><DD>Script to be run.
</DD></DL>
<H5>Remarks</H5>
<P>You can use <B>onseek</B> to set up conditional behavior, as shown in the following example:


<P><PRE><FONT FACE="Courier" SIZE="2">
&#009;Sub sprite1_onseek(newtime)
&#009;&#009;If newtime=2.000 then
&#009;&#009;&#009;sprite1.stop
&#009;&#009;Else
&#009;&#009;&#009;sprite1.play
&#009;&#009;End If
&#009;End Sub
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="sprOnStop_Event">onstop Event</A></H3>
<A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0022.htm">Sprite Control</A>
<P>Occurs when the sprite playback stops.


<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onstop</B><B>(</B> <B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onstop</B><B>(</B> <B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.


</DD></DL>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A CLASS=tctop HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
