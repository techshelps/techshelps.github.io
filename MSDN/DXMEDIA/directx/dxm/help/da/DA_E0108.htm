<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAStatic Functions Relevant to DAVector3 Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="DAStatic Functions Relevant to DAVector3 Objects">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="RelVec3BvrMethv"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --DAStatic Functions Relevant to DAVector3 Objects"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --DAStatic Functions Relevant to DAVector3 Objects"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0032.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0107.htm">DAStatic Properties Relevant to DAVector2 Objects</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0109.htm">DAStatic Properties Relevant to DAVector3 Objects</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>DAStatic Functions Relevant to DAVector3 Objects</H2>
<BR CLEAR=ALL>
<H3><HR COLOR="#0000FF"><A NAME="addv_v3">AddVector3</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object. The direction and length of the vector are calculated by adding the corresponding coordinates of the given vectors. 

<P><B>lib.AddVector3</B><B>(</B><BR>&nbsp;&nbsp;<I>v1</I><B>,</B><BR>&nbsp;&nbsp;<I>v2</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0108.htm#subv_v3">SubVector3</A>

<H3><HR COLOR="#0000FF"><A NAME="crossv_v3">CrossVector3</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object that represents the "cross product" of the given vectors. The new vector has a length that is equal to the product of the lengths of the original vectors and the sine of the angle between them. The new vector has a direction that is perpendicular to the plane formed by the original vectors and that obeys the right-hand rule.

<P><B>lib.CrossVector3</B><B>(</B><BR>&nbsp;&nbsp;<I>v1</I><B>,</B><BR>&nbsp;&nbsp;<I>v2</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object.


<H3><HR COLOR="#0000FF"><A NAME="derivativev_v3">DerivativeVector3</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P><P>Creates a <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object that is the instantaneous derivative (rate of change) of the given vector. For example, a constant vector behavior yields a constant derivative of [0 0 0], and Vector3(time, 0, 0) (without any additional time substitutions) yields a constant derivative vector of [1 0 0]. 

<P><B>lib.DerivativeVector3</B><B>(</B><BR>&nbsp;&nbsp;<I>vec</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>vec</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="dotv_v3">DotVector3</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object that represents the "dot product" of the given vectors. The dot product is the product of the lengths of the vectors and the cosine of the angle between them.

<P><B>lib.DotVector3</B><B>(</B><BR>&nbsp;&nbsp;<I>v1</I><B>,</B><BR>&nbsp;&nbsp;<I>v2</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD><A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object.


<H3><HR COLOR="#0000FF"><A NAME="integralv_v3">IntegralVector3</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object that represents the sum of the all values of <I>vec</I> from the given start time to the present. 

<P><B>lib.IntegralVector3</B><B>(</B><BR>&nbsp;&nbsp;<I>vec</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object. 


<H3><HR COLOR="#0000FF"><A NAME="negv_v3">NegVector3</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object that has the same length as the original vector, but points in the opposite direction.

<P><B>lib.NegVector3</B><B>(</B><BR>&nbsp;&nbsp;<I>v1</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object that is the original vector.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object.


<H3><HR COLOR="#0000FF"><A NAME="subv_v3">SubVector3</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object. The direction and length of the vector are calculated by subtracting the coordinates of <I>v2</I> from the corresponding coordinates of <I>v1</I>. 

<P><B>lib.SubVector3</B><B>(</B><BR>&nbsp;&nbsp;<I>v1</I><B>,</B><BR>&nbsp;&nbsp;<I>v2</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD><A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0108.htm#addv_v3">AddVector3</A>

<H3><HR COLOR="#0000FF"><A NAME="vector3anv_v3">Vector3Anim</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object having a direction and length as specified by the given Cartesian coordinates.

<P><B>lib.Vector3Anim</B><B>(</B><BR>&nbsp;&nbsp;<I>x</I><B>,</B><BR>&nbsp;&nbsp;<I>y</I><B>,</B><BR>&nbsp;&nbsp;<I>z</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>x</I>, <I>y</I>, and <I>z</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> objects specifying the coordinate values. The <I>x</I> specifies a distance along the x-axis from the origin to a point, <I>y</I> specifies a distance along the y-axis, and <I>z</I> a distance along the z-axis. These must be animated numbers.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object. 


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0108.htm#vector3Sphericalanv_v3">Vector3SphericalAnim</A>

<H3><HR COLOR="#0000FF"><A NAME="vector3v_v3">Vector3</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0108.htm#vector3anv_v3">Vector3Anim</A> except that <I>x</I>, <I>y</I>, and <I>z</I> are non-animated numbers (doubles).

<P><B>lib.Vector3</B><B>(</B><BR>&nbsp;&nbsp;<I>x</I><B>,</B><BR>&nbsp;&nbsp;<I>y</I><B>,</B><BR>&nbsp;&nbsp;<I>z</I><BR>&nbsp;&nbsp;<B>)</B><BR><H3><HR COLOR="#0000FF"><A NAME="bSplinev_v3">Vector3BSpline</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> behavior based on a B-spline function. The function depends on the control elements, the knot vector, the mathematical degree, and the weights of the control elements (these are optional).

<P>A B-spline function without weights is piecewise polynomial and with weights is piecewise rational (the quotient of two polynomials). It requires that:
 
<P>numberOfControlElements = numberOfKnots - <I>degree</I> + 1

<P>The control elements define the approximate direction and shape of the function. The knots represent junction values, in parameter space, between the connected polynomial parts. 

<P>Given a degree <I>d</I> and a number of knots <I>k</I>, the function is valid in the range knot<I>d</I> to knot<I>k-d</I>+1, and is otherwise undefined. For example, for a degree 2 curve, the valid range is from the second knot to the next to the last knot, inclusive.

<P>The returned <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> is the traversal of the spline function according to the <I>evaluation</I> parameter. The evaluation parameter is a <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> that must be in the valid range of the spline, which is [knot<I>d</I>, knot<I>k</I>-<I>d</I>+1]. Any values outside this range are automatically clamped to the end values.

<P><B>lib.Vector3BSpline</B><B>(</B><BR>&nbsp;&nbsp;<I>degree</I><B>,</B><BR>&nbsp;&nbsp;<I>knots</I><B>,</B><BR>&nbsp;&nbsp;<I>control_elements</I><B>,</B><BR>&nbsp;&nbsp;<I>weights</I><B>,</B><BR>&nbsp;&nbsp;<I>evaluation</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>degree</I>
 </DT><DD>A number (long) representing the mathematical degree of the B-spline to evaluate. Must be 1, 2, or 3. 
</DD><DT><I>knots</I>
 </DT><DD>An array (variant) of <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> objects representing the knots used to calculate the B-spline. 
</DD><DT><I>control_elements</I>
 </DT><DD>An array (variant) of <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> objects representing the control elements used to calculate the B-spline.
</DD><DT><I>weights</I>
 </DT><DD>An array (variant) of <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> objects representing the weights used to calculate the rational B-spline. There must be the same number of weights as control elements. For non-rational B-splines, the value of <I>weights</I> is null.
</DD><DT><I>evaluation</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object that controls the spline evaluation. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object.


<H3><HR COLOR="#0000FF"><A NAME="vector3Sphericalanv_v3">Vector3SphericalAnim</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object having a direction and length as specified by the given spherical coordinates.

<P><B>lib.Vector3SphericalAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>XYangle</I><B>,</B><BR>&nbsp;&nbsp;<I>YZangle</I><B>,</B><BR>&nbsp;&nbsp;<I>length</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>XYangle</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object of the counter-clockwise XY angle, in radians, of the point about the positive y-axis. The angle begins at the positive z-ray, so that [0 0 1] has a <I>theta</I> of 0, and [1 0 0] has a <I>theta</I> of pi/2. This must be an animated number.
</DD><DT><I>YZangle</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object of the counter-clockwise elevation angle, in radians, of the point above the XZ-plane. A <I>YZangle</I> of pi/2 means the point is straight up (on the positive y-ray), and a <I>YZangle</I> of -pi/2 is straight down (on the negative y-ray). This must be an animated number. 
</DD><DT><I>length</I>
 </DT><DD>A <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object specifying the length of the vector. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0116.htm">DAVector3</A> object. 


<H5>Remarks</H5>
<P>The following table correlates Cartesian coordinates with polar coordinates (X means "Don't Care"):

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Cartesian</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>XYangle</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>YZangle</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Length
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Coordinates
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 0 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[d 0 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[-d 0 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">-pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 d 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 -d 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">-pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 0 d]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 0 -d]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">pi</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
</TABLE>
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0108.htm#vector3anv_v3">Vector3Anim</A>

<H3><HR COLOR="#0000FF"><A NAME="vector3Sphericalv_v3">Vector3Spherical</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0108.htm#vector3Sphericalanv_v3">Vector3SphericalAnim</A> except that <I>XYangle</I>, <I>YZangle</I>, and <I>length</I> are non-animated numbers (doubles).

<P><B>lib.Vector3Spherical</B><B>(</B><BR>&nbsp;&nbsp;<I>XYangle</I><B>,</B><BR>&nbsp;&nbsp;<I>YZangle</I><B>,</B><BR>&nbsp;&nbsp;<I>length</I><BR>&nbsp;&nbsp;<B>)</B><BR><P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
