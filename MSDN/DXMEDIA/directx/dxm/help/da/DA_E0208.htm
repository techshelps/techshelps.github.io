<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transform3Bvr Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Transform3Bvr Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="Transform3Bvr_Class"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Transform3Bvr Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Transform3Bvr Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0118.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0207.htm">Transform2Bvr Class</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0209.htm">TupleBvr Class</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Transform3Bvr Class</H2>
<BR CLEAR=ALL>
<PRE><FONT FACE="Courier" SIZE="2">public class Transform3Bvr extends Behavior {

    // Methods
    public Transform3Bvr inverse();
    public BooleanBvr    isSingular();
    public Transform2Bvr parallelTransform2();
   
    public static Transform3Bvr newUninitBvr();

}
</FONT></PRE>
<P>Just as a <A HREF="/directx/dxm/help/da/DA_E0207.htm">Transform2Bvr</A> transforms a two-dimensional object into another two-dimensional object, a <B>Transform3Bvr</B> transforms a three-dimensional object into another three-dimensional object. Other transforms include the <A HREF="/directx/dxm/help/da/DA_E0140.htm#rendercam_g">render</A> method, which transforms three-dimensional objects into two-dimensional objects, and the <A HREF="/directx/dxm/help/da/DA_E0156.htm#project_pt3">project</A> method, which transforms a three-dimensional point into a two-dimensional point. 

<P>For more information about behaviors, see the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> class.

<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0208.htm#Transform3Bvr_Methods">Transform3Bvr Methods</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0208.htm#Transform3Bvr_Relevant_Methods_Statics">Relevant Methods from the Statics Class</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0208.htm#Transform3Bvr_Relevant_Fields_Statics">Relevant Fields from the Statics Class</A>
</UL>
<H3><A NAME="Transform3Bvr_Methods">Transform3Bvr Methods</A></H3>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0208.htm#inverse_xf3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">inverse</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0208.htm#isSingular_xf3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">isSingular</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0208.htm#parallel_xf3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">parallelTransform2</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0208.htm#newUninitBvr_xf3"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">newUninitBvr</A><BR>
<H4><HR COLOR="#0000FF"><A NAME="inverse_xf3">inverse</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr Class</A>
<P>Creates a transformation behavior that is the inverse of the original transformation.

<P><B>public</B> <B>Transform3Bvr</B> <B>inverse</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr</A> object.

<H5>Remarks</H5>
<P> The inverse transformation is useful for removing the effects of the original transformation from a three-dimensional object. To characterize transforms of an unknown type, use <A HREF="/directx/dxm/help/da/DA_E0208.htm#isSingular_xf3">isSingular</A>. 


<H4><HR COLOR="#0000FF"><A NAME="isSingular_xf3">isSingular</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr Class</A>
<P>Creates a boolean behavior that indicates whether the transform is singular or not. A singular transform is one that has no inverse. 

<P><B>public</B> <B>BooleanBvr</B> <B>isSingular</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0125.htm">BooleanBvr</A> object. This object's value is true if the transform is singular; otherwise, it is false.


<H4><HR COLOR="#0000FF"><A NAME="parallel_xf3">parallelTransform2</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0207.htm">Transform2Bvr</A> object from the <A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr</A> object. 

<P><B>public</B> <B>Transform2Bvr</B> <B>parallelTransform2</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0207.htm">Transform2Bvr</A> object.

<H5>Remarks</H5>
<P>This method is equivalent to casting an orthographic projection of the <A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr</A> onto the X-Y plane. For predictable results, the transform must be an affine (4<FONT FACE="Symbol">&#180;</FONT>3) transform rather than a perspective (4<FONT FACE="Symbol">&#180;</FONT>4) transform.


<H4><HR COLOR="#0000FF"><A NAME="newUninitBvr_xf3">newUninitBvr</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr Class</A>
<P>This method allows you to refer to an <A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr</A> behavior before that behavior has been defined. With this method you can create the behavior and use it in the definition of other behaviors, but not actually define its contents until some later point. (This is accomplished with the <A HREF="/directx/dxm/help/da/DA_E0124.htm#init_beh">init</A> method, which is available on all behaviors.) The system generates a run-time error if you initialize a non-uninitialized behavior, initialize an uninitialized behavior that has already been initialized, or run an initialized behavior that has not yet been initialized.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>newUninitBvr</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr</A> object.


<H3><A NAME="Transform3Bvr_Relevant_Methods_Statics">Relevant Methods from the Statics Class</A></H3>
<P>The following methods are defined in the <A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics</A> class and are most relevant to objects of type <A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr</A>.

<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#compose_xf3">public static Transform3Bvr compose(Transform3Bvr xf1, Transform3Bvr xf2);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#compose3_xf3">public static Transform3Bvr compose3Array(Transform3Bvr[] xforms);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#lookAtFrom_xf3">public static Transform3Bvr lookAtFrom(Point3Bvr from, Point3Bvr to, Vector3Bvr up);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#rotate_xf3">public static Transform3Bvr rotate(Vector3Bvr axis, NumberBvr radians);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#rotatedg_xf3">public static Transform3Bvr rotateDegrees(Vector3Bvr axis, double degrees);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#rotateRate_xf3">public static Transform3Bvr rotateRate(Vector3Bvr axis, double radians);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#rotateRatedg_xf3">public static Transform3Bvr rotateRateDegrees(Vector3Bvr axis, double degrees);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#scale_xf3n">public static Transform3Bvr scale(NumberBvr sx, NumberBvr sy, NumberBvr sz);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#scale_xf3v">public static Transform3Bvr scale(Vector3Bvr v);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#scaleRate_xf3">public static Transform3Bvr scaleRate(double x, double y, double z);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#scale3_xf3">public static Transform3Bvr scale3(NumberBvr uniformFactor);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#scale3Rate_xf3">public static Transform3Bvr scale3Rate(double rate);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#transform4x4_xf3">public static Transform3Bvr transform4x4(NumberBvr[] matrix);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#translate_xf3n">public static Transform3Bvr translate(NumberBvr tx, NumberBvr ty, NumberBvr tz);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#translatept_xf3">public static Transform3Bvr translate(Point3Bvr loc);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#translate_xf3v">public static Transform3Bvr translate(Vector3Bvr v);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#translateRate_xf3">public static Transform3Bvr translateRate(double x, double y, double z)</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#xShear_xf3">public static Transform3Bvr xShear(NumberBvr a, NumberBvr b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#xShearRate_xf3">public static Transform3Bvr xShearRate(double a, double b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#yShear_xf3">public static Transform3Bvr yShear(NumberBvr c, NumberBvr d);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#yShearRate_xf3">public static Transform3Bvr yShearRate(double c, double d);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#zShear_xf3">public static Transform3Bvr zShear(NumberBvr e, NumberBvr f);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0199.htm#zShearRate_xf3">public static Transform3Bvr zShearRate(double e, double f);</A>

<H3><A NAME="Transform3Bvr_Relevant_Fields_Statics">Relevant Fields from the Statics Class</A></H3>
<P>The following fields are defined in the <A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics</A> class and are most relevant to objects of type <A HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr</A>.

<P><A HREF="/directx/dxm/help/da/DA_E0200.htm#identity_xf3">public final static Transform3Bvr identityTransform3;</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
