<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Viewer Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Viewer Interface">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="Viewer_Interface"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Viewer Interface"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Viewer Interface"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0118.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0212.htm">Vector3Bvr Class</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0214.htm">Java Defaults</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Viewer Interface</H2>
<BR CLEAR=ALL>
<PRE><FONT FACE="Courier" SIZE="2">public interface Viewer extends java.lang.Object {
    // Methods
    public abstract double getCurrentTime();
    public abstract double getCurrentTickTime();
    public abstract Preferences getPreferences();
    public abstract ErrorAndWarningReceiver registerErrorAndWarningReceiver(ErrorAndWarningReceiver w);
    public abstract void startModel();
    public abstract void stopModel();
    public abstract void tick();
    public abstract void tick(double timeToUse);
}
</FONT></PRE>
<P>The <B>Viewer</B> interface methods give complete control over a rendering device. Every method needed to view a model is included here. By implementing these abstract methods, it is possible to write custom viewers that can provide unique functionality. Developers can, for instance, control the tick rate of their models.



<H3><A NAME="ViewerInterface_Methods">Viewer Methods</A></H3>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0213.htm#getCurrentTime_v">getCurrentTime</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0213.htm#getCurrentTickTime_v">getCurrentTickTime</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0213.htm#getPreferences_v">getPreferences</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0213.htm#registerErrorAndWarningReceiver_v">registerErrorAndWarningReceiver</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0213.htm#startModel_v">startModel</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0213.htm#stopModel_v">stopModel</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0213.htm#tick_0">tick</A>()
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0213.htm#tick_v">tick</A>(<I>timeToUse</I>)

</FONT></TD>
</TR>
</TABLE>
<H4><HR COLOR="#0000FF"><A NAME="getCurrentTime_v">getCurrentTime</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0213.htm">Viewer Interface</A>
<P>Returns the number of seconds since <A HREF="/directx/dxm/help/da/DA_E0213.htm#startModel_v">startModel</A> was invoked.

<P><B>public</B> <B>abstract</B> <B>double</B> <B>getCurrentTime</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns a double floating-point number.


<H4><HR COLOR="#0000FF"><A NAME="getCurrentTickTime_v">getCurrentTickTime</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0213.htm">Viewer Interface</A>
<P>Returns the time provided for the most recent call to <A HREF="/directx/dxm/help/da/DA_E0213.htm#tick_0">tick</A> or 0 if <B>tick</B> has not yet been called.

<P><B>public</B> <B>abstract</B> <B>double</B> <B>getCurrentTickTime</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the double floating-point number representing the current tick time.


<H4><HR COLOR="#0000FF"><A NAME="getPreferences_v">getPreferences</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0213.htm">Viewer Interface</A>
<P>Allows the application to dynamically view the viewer preferences. For more information about preferences, see <A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences</A>.

<P><B>public</B> <B>abstract</B> <B>Preferences</B> <B>getPreferences</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0157.htm">Preferences</A> object.


<H4><HR COLOR="#0000FF"><A NAME="registerErrorAndWarningReceiver_v">registerErrorAndWarningReceiver</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0213.htm">Viewer Interface</A>
<P>Allows the application to register an object that will have its methods invoked upon asynchronous errors encountered when DirectAnimation media is controlling the frame loop or when recoverable errors occur when sampling and displaying the model.

<P><B>public</B> <B>abstract</B> <B>ErrorAndWarningReceiver</B> <B>registerErrorAndWarningReceiver</B><B>(</B><BR>&nbsp;&nbsp;<B>ErrorAndWarningReceiver</B> <I>w</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>w</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0137.htm">ErrorAndWarningReceiver</A> object to be registered.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0137.htm">ErrorAndWarningReceiver</A> object.

<H4><HR COLOR="#0000FF"><A NAME="startModel_v">startModel</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0213.htm">Viewer Interface</A>
<P>Starts the behaviors associated with the model at global time 0. Also causes the <A HREF="/directx/dxm/help/da/DA_E0146.htm#createModel_model">createModel</A> method on the model itself to be invoked.

<P><B>public</B> <B>abstract</B> <B>void</B> <B>startModel</B><B>(</B> <B>)</B><B>;</B><BR><H4><HR COLOR="#0000FF"><A NAME="stopModel_v">stopModel</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0213.htm">Viewer Interface</A>
<P>Forces all media to stop immediately. It is not required to call this method, however, without it, some media (such as sounds) will continue playing until the object is released.

<P><B>public</B> <B>abstract</B> <B>void</B> <B>stopModel</B><B>(</B> <B>)</B><B>;</B><BR><H4><HR COLOR="#0000FF"><A NAME="tick_0">tick</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0213.htm">Viewer Interface</A>
<P>Acutally a shorthand way of writing <I>tick(getCurrentTime())</I>. It is the easiest way to explicitly sample and display model and provides a real-time clock for global time.

<P><B>public</B> <B>abstract</B> <B>void</B> <B>tick</B><B>(</B> <B>)</B><B>;</B><BR><H4><HR COLOR="#0000FF"><A NAME="tick_v">tick</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0213.htm">Viewer Interface</A>
<P>Explicitly performs a single sampling and display of the model, where <I>timeToUse</I> represents the global time.

<P><B>public</B> <B>abstract</B> <B>void</B> <B>tick</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>timeToUse</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>timeToUse</I>The global time for the single sampling.
</DT></DL>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
