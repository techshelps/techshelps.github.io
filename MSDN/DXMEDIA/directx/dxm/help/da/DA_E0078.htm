<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAStatic Functions Relevant to DAGeometry Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="DAStatic Functions Relevant to DAGeometry Objects">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="RelGeoBvrMethv"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --DAStatic Functions Relevant to DAGeometry Objects"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --DAStatic Functions Relevant to DAGeometry Objects"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0032.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0077.htm">DAStatic Properties Relevant to DAFontStyle Objects</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0079.htm">DAStatic Properties Relevant to DAGeometry Objects</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>DAStatic Functions Relevant to DAGeometry Objects</H2>
<BR CLEAR=ALL>
<H3><HR COLOR="#0000FF"><A NAME="importGeometryv_g">ImportGeometry</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> by synchronously importing the given .X file. Synchronous loads are blocking calls, which means that ticking will not continue on any model until all synchronous downloads are completed. These downloads should be small and listed before asynchronous downloads. Use asynchronous downloads for more complex images and sounds. See <A HREF="/directx/dxm/help/da/DA_E0078.htm#importGeometryav_g">ImportGeometryAsync</A> for a description of the asynchronous import function. 

<P><B>lib.ImportGeometry</B><B>(</B><BR>&nbsp;&nbsp;<I>url</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>url</I>
 </DT><DD>The pathname (a string) of the file to be downloaded.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H3><HR COLOR="#0000FF"><A NAME="importGeometryav_g">ImportGeometryAsync</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Asynchronously imports the given .X file. Asynchronous downloads should be listed after synchronous ones and used for more complex sounds and images. For a description of the synchronous import function, see <A HREF="/directx/dxm/help/da/DA_E0078.htm#importGeometryv_g">ImportGeometry</A>. 

<P><B>lib.ImportGeometryAsync</B><B>(</B><BR>&nbsp;&nbsp;<I>url</I><B>,</B><BR>&nbsp;&nbsp;<I>geoStandIn</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>url</I>
 </DT><DD>The pathname (a string) of the geometry to be downloaded.
</DD><DT><I>geoStandIn</I>
 </DT><DD>The geometry to use while the contents at <I>url</I> are still being downloaded. This argument cannot be null.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0048.htm">DAImportationResult</A> object, which has the following relevant properties:

<P>
<UL><LI><A HREF="/directx/dxm/help/da/DA_E0048.htm#compevv_impr">CompletionEvent</A>, which is the event that triggers once the download is complete.
<LI><A HREF="/directx/dxm/help/da/DA_E0048.htm#geov_impr">Geometry</A>, which is the imported <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.
<LI><A HREF="/directx/dxm/help/da/DA_E0048.htm#progv_impr">Progress</A>, which is the progress of the download.
<LI><A HREF="/directx/dxm/help/da/DA_E0048.htm#sizev_impr">Size</A>, which is the size of the download.
</UL>

<H3><HR COLOR="#0000FF"><A NAME="soundSourcev_g">SoundSource</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object that contains <I>sound</I>. The bounding box is the empty bounding box, where the maximum coordinate is less than the minimum coordinate.

<P><B>lib.SoundSource</B><B>(</B><BR>&nbsp;&nbsp;<I>sound</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>sound</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0062.htm">DASound</A> object that contained within the geometry.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H3><HR COLOR="#0000FF"><A NAME="spotLightanv_g">SpotLightAnim</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a spotlight geometry. A spotlight is a positioned, directed light source initially located at the origin and directed along the negative z-axis. Examples of real-world spotlights include desklamps, headlights, and flashlights. The bounding box is the empty bounding box, where the maximum extent is less than the minimum extent.

<P>The <I>fullcone</I> parameter specifies the half-angle of the region that will receive the full intensity of the spotlight. This parameter can have values from 0.00 to pi. 

<P>The <I>cutoff parameter</I> specifies the half-angle of the region past which surfaces will receive no illumination. This parameter can have values from the value of <I>fullcone</I> to pi.

<P><B>lib.SpotLightAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>fullcone</I><B>,</B><BR>&nbsp;&nbsp;<I>cutoff</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>fullcone</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object specifying the angle in radians from the main spotlight axis for which surfaces will receive full illumination from the light. This must be an animated number. 
</DD><DT><I>cutoff</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object specifying the angle in radians from the main spotlight axis past which surfaces will receive no illumination from the light. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H5>Remarks</H5>
<P>Surfaces receive illumination from the spotlight in the following manner:

<UL><LI>If the surface point is within <I>fullcone</I> radians of the main spotlight axis, the spotlight acts as a pointlight source (including distance attenuation effects). 
<LI>If the surface point is greater than <I>fullcone</I> radians, but is within <I>cutoff</I> radians of the main spotlight axis, the surface receives illumination that is attenuated by the angular displacement.
<LI>If the surface point is greater than <I>cutoff</I> radians from the main spotlight axis, it receives no illumination.
</UL>
<P>These rules are illustrated in the following diagram:
<P>
<P><IMG SRC="/directx/dxm/help/da/art/spotlite.gif" WIDTH="493" HEIGHT="397" ALT="Spotlight">
<P>
<H5>Remarks</H5>
<P>The following diagram shows how the intensity of the spotlight changes in relationship to the angle:
<P>
<P><IMG SRC="/directx/dxm/help/da/art/intensit.gif" WIDTH="343" HEIGHT="131" ALT="Intensity">
<P>
<H3><HR COLOR="#0000FF"><A NAME="spotLightv_g">SpotLight</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0078.htm#spotLightanv_g">SpotLightAnim</A> except that <I>cutoff</I> is a non-animated number (a double). Note that <I>fullcone</I> is still an animated number (a <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A>).

<P><B>lib.SpotLight</B><B>(</B><BR>&nbsp;&nbsp;<I>fullcone</I><B>,</B><BR>&nbsp;&nbsp;<I>cutoff</I><BR>&nbsp;&nbsp;<B>)</B><BR><H3><HR COLOR="#0000FF"><A NAME="unionv_g">UnionGeometry</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object by combining the given geometries. The new geometry contains all elements of the original geometries. The bounding box of a set of unioned geometries is simply the union of the bounding boxes of each of the geometries. 

<P><B>lib.UnionGeometry</B><B>(</B><BR>&nbsp;&nbsp;<I>g1</I><B>,</B><BR>&nbsp;&nbsp;<I>g2</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>g1</I> and <I>g2</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H3><HR COLOR="#0000FF"><A NAME="uniongav_g">UnionGeometryArray</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics Class</A>
<P>Creates a geometry behavior by combining the geometries in the array. The new geometry contains all elements of the original geometries. The bounding box of a set of unioned geometries is simply the union of the bounding boxes of each of the geometries. 

<P><B>lib.UnionGeometryArray</B><B>(</B><BR>&nbsp;&nbsp;<I>geoArray</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>geoArray</I>
 </DT><DD>The array of <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
