<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Statics Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Statics Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="Statics_Class"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Statics Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Statics Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0118.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0159.htm">SoundBvr Class</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0161.htm">Static Methods Relevant to Behavior Objects</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Statics Class</H2>
<BR CLEAR=ALL>
<PRE><FONT FACE="Courier" SIZE="2">public class Statics{
    // Behavior Static Methods
    public static Behavior cond(BooleanBvr bool, Behavior a, Behavior b);
    public static Behavior sequence(Behavior a, Behavior b);
    public static Behavior until(Behavior a, DXMEvent e, Behavior b);
    public static Behavior untilEx(Behavior a, DXMEvent e);
    public static Behavior untilNotify(Behavior a, DXMEvent e, UntilNotifier notifier);

    // BooleanBvr Static Fields
    public final static BooleanBvr falseBvr;
    public final static BooleanBvr leftButtonState;
    public final static BooleanBvr rightButtonState;
    public final static BooleanBvr trueBvr;

    // BooleanBvr Static Methods
    public static BooleanBvr and(BooleanBvr b1, BooleanBvr b2);
    public static BooleanBvr keyState(int keyCode);
    public static BooleanBvr not(BooleanBvr b);
    public static BooleanBvr or(BooleanBvr b1, BooleanBvr b2);
    public static BooleanBvr toBvr(Boolean bool);

    // CameraBvr Static Methods
    public static CameraBvr parallelCamera(NumberBvr nearclip);
    public static CameraBvr perspectiveCamera(NumberBvr projdst, NumberBvr nearclip);

    // ColorBvr Static Fields
    public final static ColorBvr aqua;
    public final static ColorBvr black;
    public final static ColorBvr blue;
    public final static ColorBvr cyan;
    public final static ColorBvr fuchsia;
    public final static ColorBvr gray;
    public final static ColorBvr green;
    public final static ColorBvr lime;
    public final static ColorBvr magenta;
    public final static ColorBvr maroon;
    public final static ColorBvr navy;
    public final static ColorBvr olive;
    public final static ColorBvr purple;
    public final static ColorBvr red;
    public final static ColorBvr silver;
    public final static ColorBvr teal;
    public final static ColorBvr white;
    public final static ColorBvr yellow;

    // ColorBvr Static Methods
    public static ColorBvr colorHsl(NumberBvr h, NumberBvr s, NumberBvr l);
    public static ColorBvr colorRgb(NumberBvr r, NumberBvr g, NumberBvr b);
    public static ColorBvr colorRgb255(short r, short g, short b);

    // DashStyleBvr Static Fields
    public final static DashStyleBvr dashStyleDashed;
    public final static DashStyleBvr dashStyleSolid;

    // DXMApplet Static Methods
    public ErrorAndWarningReceiver registerErrorAndWarningReceiver(ErrorAndWarningReceiver w);

    // DXMEvent Static Fields
    public final static DXMEvent always;
    public final static DXMEvent leftButtonDown;
    public final static DXMEvent leftButtonUp;
    public final static DXMEvent never;
    public final static DXMEvent rightButtonDown;
    public final static DXMEvent rightButtonUp;

    // DXMEvent Static Methods
    public static DXMEvent andEvent(DXMEvent first, DXMEvent second);
    public static DXMEvent keyDown(int keyCode);
    public static DXMEvent keyUp(int keyCode);
    public static DXMEvent newUninitBvr();
    public static DXMEvent notEvent(DXMEvent ev);
    public static DXMEvent orEvent(DXMEvent first, DXMEvent second);
    public static DXMEvent predicate(BooleanBvr bool);
    public static DXMEvent thenEvent(DXMEvent e1, DXMEvent e2);
    public static DXMEvent timer(NumberBvr timeout);
    public static void     unregisterCallback(Object object);

    // EndStyleBvr Static Fields
    public final static EndStyleBvr endStyleFlat;
    public final static EndStyleBvr endStyleRound;
    public final static EndStyleBvr endStyleSquare;

    // FontStyleBvr Static Fields
    public final static FontStyleBvr defaultFont;

    // FontStyleBvr Static Methods
    public static FontStyleBvr font(StringBvr face, NumberBvr points, ColorBvr color);
    
    //GeometryBvr Static Fields
    public final static GeometryBvr ambientLight;
    public final static GeometryBvr directionalLight;
    public final static GeometryBvr emptyGeometry;
    public final static GeometryBvr pointLight;

    // GeometryBvr Static Methods
    public static GeometryBvr importGeometry(URL url);
    public static GeometryBvr importGeometry(URL url, GeometryBvr geoStandIn, DXMEvent[] ev, NumberBvr[] progress, NumberBvr[] size);
    public static GeometryBvr soundSource(SoundBvr sound);
    public static GeometryBvr spotLight(NumberBvr fullcone, NumberBvr cutoff);
    public static GeometryBvr union(GeometryBvr g1, GeometryBvr g2);
    public static GeometryBvr unionArray(GeometryBvr geometries);

    // ImageBvr Static Fields
    public final static ImageBvr detectableEmptyImage;
    public final static ImageBvr emptyImage;

    // ImageBvr Static Methods
    public static ImageBvr  gradientHorizontal(ColorBvr start, ColorBvr stop, NumberBvr fallOff); 
    public static ImageBvr  gradientPolygon(Point2Bvr[] pts, ColorBvr[] colors);
    public static ImageBvr  gradientSquare(ColorBvr lowerLeft, ColorBvr upperLeft, ColorBvr upperRight, ColorBvr lowerRight);
    public static ImageBvr  hatchBackwardDiagonal(ColorBvr color, NumberBvr size);
    public static ImageBvr  hatchCross(ColorBvr color, NumberBvr size);
    public static ImageBvr  hatchForwardDiagonal (ColorBvr color, NumberBvr size);
    public static ImageBvr  hatchHorizontal(ColorBvr color, NumberBvr size);
    public static ImageBvr  hatchVertical(ColorBvr color, NumberBvr size);
    public static ImageBvr  importImage(URL url);
    public static ImageBvr  importImage(URL url, ImageBvr imgStandIn, DXMEvent[] ev, NumberBvr[] progress, NumberBvr[] size);
    public static NumberBvr importMovie(URL url, ImageBvr[] img, SoundBvr[] snd);
    public static NumberBvr importMovie(URL url, ImageBvr[] img, SoundBvr[] snd, ImageBvr imgStandIn, SoundBvr sndStandIn, DXMEvent[] ev, NumberBvr[] progress, NumberBvr[] size); 
    public static ImageBvr  overlay(ImageBvr i1, ImageBvr i2);
    public static ImageBvr  overlayArray(ImageBvr[] im);
    public static ImageBvr  radialGradientPolygon(ColorBvr inner, ColorBvr outer, Point2Bvr[] points, NumberBvr fallOff);
    public static ImageBvr  radialGradientRegularPoly(ColorBvr inner, ColorBvr outer, NumberBvr edges, NumberBvr fallOff);
    public static ImageBvr  radialGradientSquare(ColorBvr inner, ColorBvr outer, NumberBvr fallOff);
    public static ImageBvr  solidColorImage(ColorBvr col);
    public static ImageBvr  stringImage(StringBvr string, FontStyleBvr font);
    
    // JoinStyleBvr Static Fields
    public final static JoinStyleBvr joinStyleBevel;
    public final static JoinStyleBvr joinStyleMiter;
    public final static JoinStyleBvr joinStyleRound;

    // LineStyleBvr Static Fields
    public final static LineStyleBvr defaultLineStyle;

    // MatteBvr Static Fields
    public final static MatteBvr clearMatte;
    public final static MatteBvr opaqueMatte;

    // MatteBvr Static Methods
    public static MatteBvr difference(MatteBvr m1, MatteBvr m2);
    public static MatteBvr fillMatte(Path2Bvr path);
    public static MatteBvr intersect(MatteBvr m1, MatteBvr m2);
    public static MatteBvr textMatte(StringBvr text, FontStyleBvr fs);
    public static MatteBvr union(MatteBvr m1, MatteBvr m2);

    // MicrophoneBvr Static Fields
    public final static MicrophoneBvr defaultMicrophone;

    // Miscellaneous Static Fields
    public final  static double cm;
    public final  static double foot;
    public final  static double inch;
    public final  static double meter;
    public final  static double mm;
    public final  static NumberBvr pixelBvr;

    // Miscellaneous Static Methods
    public static URL buildURL(URL url, String pathname);
    public static String getVersionString();
    
    // MontageBvr Static Fields
    public final static MontageBvr emptyMontage;

    // MontageBvr Static Methods
    public static MontageBvr imageMontage(ImageBvr image, NumberBvr depth);
    public static MontageBvr union(MontageBvr m1, MontageBvr m2);

    // NumberBvr Static Fields
    public final static NumberBvr  globalTime;
    public final static NumberBvr  localTime;

    // NumberBvr Static Methods
    public static NumberBvr  abs(NumberBvr a);
    public static NumberBvr  acos(NumberBvr a);
    public static NumberBvr  add(NumberBvr a, NumberBvr b);
    public static NumberBvr  asin(NumberBvr a);
    public static NumberBvr  atan(NumberBvr a);
    public static NumberBvr  atan2(NumberBvr a, NumberBvr b);
    public static NumberBvr  bSpline(int degree, NumberBvr[] knots, NumberBvr[] control_elements, NumberBvr[] weights, NumberBvr evaluation); 
    public static NumberBvr  ceiling(NumberBvr a);
    public static NumberBvr  cos(NumberBvr a);
    public static NumberBvr  degreesToRadians(NumberBvr a);
    public static NumberBvr  derivative(NumberBvr a);
    public static NumberBvr  div(NumberBvr a, NumberBvr b);
    public static BooleanBvr eq(NumberBvr a, NumberBvr b);
    public static NumberBvr  exp(NumberBvr a);
    public static NumberBvr  floor(NumberBvr a);
    public static BooleanBvr gt(NumberBvr a, NumberBvr b);
    public static BooleanBvr gte(NumberBvr a, NumberBvr b);
    public static NumberBvr  integral(NumberBvr a);
    public static NumberBvr  ln(NumberBvr a);
    public static NumberBvr  log10(NumberBvr a);
    public static BooleanBvr lt(NumberBvr a, NumberBvr b);
    public static BooleanBvr lte(NumberBvr a, NumberBvr b);
    public static NumberBvr  mod(NumberBvr a, NumberBvr b);
    public static NumberBvr  mul(NumberBvr a, NumberBvr b);
    public static BooleanBvr ne(NumberBvr a, NumberBvr b);
    public static NumberBvr  neg(NumberBvr a);
    public static NumberBvr  pow(NumberBvr a, NumberBvr b);
    public static NumberBvr  radiansToDegrees(NumberBvr a);
    public static NumberBvr  round(NumberBvr a);
    public static NumberBvr  seededRandom(double seed);
    public static NumberBvr  sin(NumberBvr a);
    public static NumberBvr  sqrt(NumberBvr a);
    public static NumberBvr  sub(NumberBvr a, NumberBvr b);
    public static NumberBvr  tan(NumberBvr a);
    public static NumberBvr  toBvr(double a);

    // Path2Bvr Static Methods
    public static Path2Bvr arc(NumberBvr startAngle, NumberBvr endAngle, NumberBvr arcWidth, NumberBvr arcHeight);
    public static Path2Bvr arcDegrees(double startAngle, double endAngle, double arcWidth, double arcHeight);
    public static Path2Bvr concat(Path2Bvr p1, Path2Bvr p2);
    public static Path2Bvr concatArray(Path2Bvr[] paths);
    public static Path2Bvr cubicBSplinePath(Point2Bvr[], NumberBvr[]);
    public static Path2Bvr line(Point2Bvr p1, Point2Bvr p2);
    public static Path2Bvr oval(NumberBvr width, NumberBvr height);
    public static Path2Bvr pie(NumberBvr startAngle, NumberBvr endAngle, NumberBvr arcWidth, arcHeight);
    public static Path2Bvr pieDegrees(double startAngle, double endAngle, double arcWidth, double arcHeight);
    public static Path2Bvr polydrawPath(Point2Bvr[] points, NumberBvr[] codes);
    public static Path2Bvr polyline(Point2Bvr[] points);
    public static Path2Bvr ray(Point2Bvr p);
    public static Path2Bvr roundRect(NumberBvr width, NumberBvr height, NumberBvr arcWidth, NumberBvr arcHeight);
    public static Path2Bvr rect(NumberBvr width, NumberBvr height);
    public static Path2Bvr stringPath(StringBvr string, FontStyleBvr fs);

    // Point2Bvr Static Fields
    public final static Point2Bvr mousePosition;
    public final static Point2Bvr origin2;

    // Point2Bvr Static Methods
    public static Point2Bvr  add(Point2Bvr pt, Vector2Bvr vec);
    public static Point2Bvr  bSpline(int degree, NumberBvr[] knots, Point2Bvr[] control_elements, NumberBvr[] weights, NumberBvr evaluation);
    public static Vector2Bvr derivative(Point2Bvr pt);
    public static NumberBvr  distance(Point2Bvr p1, Point2Bvr p2);
    public static NumberBvr  distanceSquared(Point2Bvr p1, Point2Bvr p2);
    public static Point2Bvr  point2(NumberBvr x, NumberBvr y);
    public static Point2Bvr  point2Polar(NumberBvr XYangle, NumberBvr length);
    public static Vector2Bvr sub(Point2Bvr p1, Point2Bvr p2);
    public static Point2Bvr  sub(Point2Bvr pt, Vector2Bvr vec);

    // Point3Bvr Static Fields
    public final static Point3Bvr origin3;

    // Point3Bvr Static Methods
    public static Point3Bvr  add(Point3Bvr pt, Vector3Bvr vec);
    public static Point3Bvr  bSpline(int degree, NumberBvr[] knots, Point3Bvr[] control_elements, NumberBvr[] weights, NumberBvr evaluation);
    public static Vector3Bvr derivative(Point3Bvr pt);
    public static NumberBvr  distance(Point3Bvr p1, Point3Bvr p2);
    public static NumberBvr  distanceSquared(Point3Bvr p1, Point3Bvr p2);
    public static Point3Bvr  point3(NumberBvr x, NumberBvr y, NumberBvr z);
    public static Point3Bvr  point3Spherical(NumberBvr XYangle, NumberBvr YZangle, NumberBvr length);
    public static Vector3Bvr sub(Point3Bvr p1, Point3Bvr p2);
    public static Point3Bvr  sub(Point3Bvr pt, Vector3Bvr vec);

    // SoundBvr Static Fields
    public final static SoundBvr silence;
    public final static SoundBvr sinSynth;

    // SoundBvr Static Methods
    public static SoundBvr importSound(URL url, NumberBvr[] soundLength); 
    public static SoundBvr importSound(URL url, NumberBvr[] soundLength, SoundBvr sndStandIn, DXMEvent[] ev, NumberBvr[] progress, NumberBvr[] size);    
    public static SoundBvr mix(SoundBvr sound1, SoundBvr sound2);
    public static SoundBvr mixArray(SoundBvr[] sounds);

    // StringBvr Static Methods
    public static StringBvr concat(StringBvr a, StringBvr b);
    public static StringBvr toBvr(String string);


    // Transform2Bvr Static Fields
    public final static Transform2Bvr identityTransform2;

    // Transform2Bvr Static Methods
    public static Transform2Bvr compose(Transform2Bvr xf1, Transform2Bvr xf2);
    public static Transform2Bvr compose2Array(Transform2Bvr[] xforms);
    public static Transform2Bvr followPath(Path2Bvr path, NumberBvr evaluator);
    public static Transform2Bvr followPathAngle(Path2Bvr path, NumberBvr evaluator);
    public static Transform2Bvr followPathAngleUpright(Path2Bvr path, NumberBvr evaluator); 
    public static Transform2Bvr rotate(NumberBvr radians);
    public static Transform2Bvr rotateDegrees(double degrees);
    public static Transform2Bvr rotateRate(double radians);
    public static Transform2Bvr rotateRateDegrees(double degrees);
    public static Transform2Bvr scale(NumberBvr sx, NumberBvr sy);
    public static Transform2Bvr scale(Vector2Bvr v);
    public static Transform2Bvr scaleRate(double x, double y);
    public static Transform2Bvr scale2(NumberBvr uniformFactor);
    public static Transform2Bvr scale2Rate(double rate);
    public static Transform2Bvr transform3x2(NumberBvr[] matrix);
    public static Transform2Bvr translate(NumberBvr tx, NumberBvr ty);
    public static Transform2Bvr translate(Vector2Bvr v);
    public static Transform2Bvr translateRate(double x, double y);
    public static Transform2Bvr xShear(NumberBvr x);
    public static Transform2Bvr xShearRate(double xRate);
    public static Transform2Bvr yShear(NumberBvr y);
    public static Transform2Bvr yShearRate(double yRate);

    // Transform3Bvr Static Fields
    public final static Transform3Bvr identityTransform3;

    // Transform3Bvr Static Methods
    public static Transform3Bvr compose(Transform3Bvr xf1, Transform3Bvr xf2);
    public static Transform3Bvr compose3Array(Transform3Bvr[] xforms);
    public static Transform3Bvr lookAtFrom(Point3Bvr from, Point3Bvr to, Vector3Bvr up);
    public static Transform3Bvr rotate(Vector3Bvr axis, NumberBvr radians);
    public static Transform3Bvr rotateDegrees(Vector3Bvr axis, double degrees);
    public static Transform3Bvr rotateRate(Vector3Bvr axis, double radians);
    public static Transform3Bvr rotateRateDegrees(Vector3Bvr axis, double radians);
    public static Transform3Bvr scale(NumberBvr sx, NumberBvr sy, NumberBvr sz);
    public static Transform3Bvr scale(Vector3Bvr v);
    public static Transform3Bvr scaleRate(double x, double y, double z);
    public static Transform3Bvr scale3(NumberBvr uniformFactor);
    public static Transform3Bvr scale3Rate(double rate);
    public static Transform3Bvr transform4x4(NumberBvr[] matrix);
    public static Transform3Bvr translate(NumberBvr tx, NumberBvr ty, NumberBvr tz);
    public static Transform3Bvr translate(Vector3Bvr v);
    public static Transform3Bvr translateRate(double x, double y, double z);
    public static Transform3Bvr xShear(NumberBvr a, NumberBvr b);
    public static Transform3Bvr xShearRate(double a, double b);
    public static Transform3Bvr yShear(NumberBvr c, NumberBvr d);
    public static Transform3Bvr yShearRate(double c, double d);
    public static Transform3Bvr zShear(NumberBvr e, NumberBvr f);
    public static Transform3Bvr zShearRate(double e, double f);


    // TupleBvr Static Methods
    public static TupleBvr pairBvr(Behavior first, Behavior second);
    public static TupleBvr tripleBvr(Behavior first, Behavior second, Behavior third);

    // Vector2Bvr Static Fields
    public final static Vector2Bvr xVector2;
    public final static Vector2Bvr yVector2;
    public final static Vector2Bvr zeroVector2;

    // Vector2Bvr Static Methods
    public static Vector2Bvr add(Vector2Bvr v1, Vector2Bvr v2);
    public static Vector2Bvr bSpline(int degree, NumberBvr[] knots, Vector2Bvr[] control_elements, NumberBvr[] weights, NumberBvr evaluation);
    public static Vector2Bvr derivative(Vector2Bvr vec);
    public static NumberBvr  dot(Vector2Bvr v1, Vector2Bvr v2);
    public static Vector2Bvr integral(Vector2Bvr vec);
    public static Vector2Bvr neg(Vector2Bvr v1);
    public static Vector2Bvr sub(Vector2Bvr v1, Vector2Bvr v2);
    public static Vector2Bvr vector2(NumberBvr x, NumberBvr y);
    public static Vector2Bvr vector2Polar(NumberBvr XYangle, NumberBvr length);
    public static Vector2Bvr vector2PolarDegrees(double XYangle, double length);

    // Vector3Bvr Static Fields
    public final static Vector3Bvr xVector3;
    public final static Vector3Bvr yVector3;
    public final static Vector3Bvr zVector3;
    public final static Vector3Bvr zeroVector3;

    // Vector3Bvr Static Methods
    public static Vector3Bvr add(Vector3Bvr v1, Vector3Bvr v2);
    public static Vector3Bvr bSpline(int degree, NumberBvr[] knots, Vector3Bvr[] control_elements, NumberBvr[] weights, NumberBvr evaluation));
    public static Vector3Bvr cross(Vector3Bvr v1, Vector3Bvr v2);
    public static Vector3Bvr derivative(Vector3Bvr vec);
    public static NumberBvr  dot(Vector3Bvr v1, Vector3Bvr v2);
    public static Vector3Bvr integral(Vector3Bvr vec);
    public static Vector3Bvr neg(Vector3Bvr v1);
    public static Vector3Bvr sub(Vector3Bvr v1, Vector3Bvr v2);
    public static Vector3Bvr vector3(NumberBvr x, NumberBvr y, NumberBvr z);
    public static Vector3Bvr vector3Spherical(NumberBvr XYangle, NumberBvr YZangle, NumberBvr length);
}
</FONT></PRE>
<P>The Statics class collects all the static methods and constants provided by the other classes in com.ms.dxmedia and makes them available as static methods on the Statics class. In addition, the Model class extends from Statics. This means that, when a programmer is implementing the <A HREF="/directx/dxm/help/da/DA_E0146.htm#createModel_model">createModel</A> method of the class they extend from <A HREF="/directx/dxm/help/da/DA_E0146.htm">Model</A>, all of the static methods in <B>Statics</B> become available without qualification.

<P>The following table lists the classes that have static methods and/or fields:

<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>B
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0161.htm">Static Methods Relevant to Behavior Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0162.htm">Static Methods Relevant to BooleanBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0163.htm">Static Fields Relevant to BooleanBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>C
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0164.htm">Static Methods Relevant to CameraBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0165.htm">Static Methods Relevant to ColorBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0166.htm">Static Fields Relevant to ColorBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>D
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0167.htm">Static Fields Relevant to DashStyleBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0169.htm">Static Methods Relevant to DXMEvent Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0170.htm">Static Fields Relevant to DXMEvent Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>E
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0171.htm">Static Fields Relevant to EndStyleBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>F
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0172.htm">Static Methods Relevant to FontStyleBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0173.htm">Static Fields Relevant to FontStyleBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>G
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0174.htm">Static Methods Relevant to GeometryBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0175.htm">Static Fields Relevant to GeometryBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>I
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0176.htm">Static Methods Relevant to ImageBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0177.htm">Static Fields Relevant to ImageBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>J
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0178.htm">Static Fields Relevant to JoinStyleBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>L
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0179.htm">Static Fields Relevant to LineStyleBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>M
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0180.htm">Static Methods Relevant to MatteBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0181.htm">Static Fields Relevant to MatteBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0182.htm">Static Fields Relevant to MicrophoneBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0183.htm">Static Methods (Miscellaneous)</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0184.htm">Static Fields (Miscellaneous)</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0185.htm">Static Methods Relevant to MontageBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0186.htm">Static Fields Relevant to MontageBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>N
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0187.htm">Static Methods Relevant to NumberBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0188.htm">Static Fields Relevant to NumberBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>P
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0189.htm">Static Methods Relevant to Path2Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0190.htm">Static Methods Relevant to Point2Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0191.htm">Static Fields Relevant to Point2Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0192.htm">Static Methods Relevant to Point3Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0193.htm">Static Fields Relevant to Point3Bvr Objects</A> 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>S
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0194.htm">Static Methods Relevant to SoundBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0195.htm">Static Fields Relevant to SoundBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0196.htm">Static Methods Relevant to StringBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>T
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0197.htm">Static Methods Relevant to Transform2Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0198.htm">Static Fields Relevant to Transform2Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0199.htm">Static Methods Relevant to Transform3Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0200.htm">Static Fields Relevant to Transform3Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0201.htm">Static Methods Relevant to TupleBvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>V
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0202.htm">Static Methods Relevant to Vector2Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0203.htm">Static Fields Relevant to Vector2Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0204.htm">Static Methods Relevant to Vector3Bvr Objects</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0205.htm">Static Fields Relevant to Vector3Bvr Objects</A>
</FONT></TD>
</TR>
</TABLE>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
