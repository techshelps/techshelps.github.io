<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TupleBvr Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="TupleBvr Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="TupleBvr_Class"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --TupleBvr Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --TupleBvr Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0118.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0208.htm">Transform3Bvr Class</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0210.htm">UntilNotifier Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>TupleBvr Class</H2>
<BR CLEAR=ALL>
<PRE><FONT FACE="Courier" SIZE="2">public class TupleBvr extends Behavior
     //Constructor
     public TupleBvr(Behavior[] tuple);

     //Methods
     public Behavior nth(int i);
     public int length();

     public static TupleBvr newUninitBvr(TupleBvr tuple);
}
</FONT></PRE>
<P> A <B>TupleBvr</B> object is similar to an array. It can, however, accept heterogeneous types. The two methods included in this class are convenience utilities. Any number of members can be included in a <B>TupleBvr</B> object. 

<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0209.htm#Constructor_tuple">TupleBvr Constructor</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0209.htm#TupleBvr_Methods">TupleBvr Methods</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0209.htm#TupleBvr_Relevant_Methods_Statics">Relevant Methods from the Statics Class</A>
</UL>
<H3><HR COLOR="#0000FF"><A NAME="Constructor_tuple">TupleBvr Constructor</A></H3>
<A HREF="/directx/dxm/help/da/DA_E0209.htm">TupleBvr Class</A>
<P>Constructs the <A HREF="/directx/dxm/help/da/DA_E0209.htm">TupleBvr</A> object.

<P><B>public</B> <B>TupleBvr</B><B>(</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>behaviors[]</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>behaviors</I>
 </DT><DD>The behaviors to be included in the <A HREF="/directx/dxm/help/da/DA_E0209.htm">TupleBvr</A>.
</DD></DL>

<HR COLOR="#0000FF">
<BR CLEAR=ALL><H3><A NAME="TupleBvr_Methods">TupleBvr Methods</A></H3>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0209.htm#length_tuple"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">length</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0209.htm#nth_tuple"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">nth</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0209.htm#newUninit_tuple"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">newUninit</A><BR>
<H4><HR COLOR="#0000FF"><A NAME="length_tuple">length</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0209.htm">TupleBvr Class</A>
<P>Determines the length of a tuple behavior.

<P><B>public</B> <B>int</B> <B>length</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an integer. For more information about integers, consult a Java reference.


<H4><HR COLOR="#0000FF"><A NAME="nth_tuple">nth</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0209.htm">TupleBvr Class</A>
<P>Selects a <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> object based on the value of <I>i</I>.

<P><B>public</B> <B>Behavior</B> <B>nth</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>i</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>i</I>
 </DT><DD>The index into the <A HREF="/directx/dxm/help/da/DA_E0209.htm">TupleBvr</A> object. Note that this is <B>not</B> a time-varying index.
</DD></DL>
<H4><HR COLOR="#0000FF"><A NAME="newUninit_tuple">newUninit</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0209.htm">TupleBvr Class</A>
<P>Allows you to refer to an <A HREF="/directx/dxm/help/da/DA_E0209.htm">Transform3Bvr</A> behavior before that behavior has been defined. With this method you can create the behavior and use it in the definition of other behaviors, but not actually define its contents until some later point. (This is accomplished with the <A HREF="/directx/dxm/help/da/DA_E0124.htm#init_beh">init</A> method, which is available on all behaviors.) The system generates a run-time error if you initialize a non-uninitialized behavior, initialize an uninitialized behavior that has already been initialized, or run an initialized behavior that has not yet been initialized.

<P><B>public</B> <B>static</B> <B>TupleBvr</B> <B>newUninitBvr</B><B>(</B><BR>&nbsp;&nbsp;<B>TupleBvr</B> <I>tuple</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>tuple</I>
 </DT><DD>Used to establish the type the tuple holds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0209.htm">TupleBvr</A> object.


<H3><A NAME="TupleBvr_Relevant_Methods_Statics">Relevant Methods from the Statics Class</A></H3>
<P>The following methods are defined in the <A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics</A> and are most relevant to objects of type <A HREF="/directx/dxm/help/da/DA_E0209.htm">TupleBvr</A>.

<P><A HREF="/directx/dxm/help/da/DA_E0201.htm#pair_tuple">public static TupleBvr pairBvr(Behavior first, Behavior second);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0201.htm#triple_tuple">public static TupleBvr tripleBvr(Behavior first, Behavior second, Behavior third);</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
