<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAGeometry Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="DAGeometry Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="DAGeometry_Class"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --DAGeometry Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --DAGeometry Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0032.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0045.htm">DAFontStyle Class</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0047.htm">DAImage Class</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>DAGeometry Class</H2>
<BR CLEAR=ALL>
<P>The <B>DAGeometry</B> class is a class of three-dimensional objects that includes surfaces, lights, sounds, their attributes, and/or combinations of these elements. Like other DirectAnimation objects, the value of the elements of the geometry can change over time.

<P>In general, every geometry behavior is spatially infinite and of infinite resolution. Conceptually, each of the infinitely many points in the geometry has associated with it an opacity value, a color, a normal (used for lighting computations), a texture coordinate, a detectability value, and a single-channel sound emanating from that point (generally, this is silence).

<P>Surface geometry is either detectable or not. If a surface is detectable, the geometry fires an event whenever the cursor passes over a surface point. Neither lights nor sounds are detectable (or pickable). 

<P>Light geometries include ambient lights, directional lights, point lights, and spotlights. Light geometries can be attributed with both color and distance attenuation. 

<P>A texture in a geometry is an image, the points of which are mapped to the surface of the three-dimensional object represented by the geometry. If there is no surface in the geometry, the texture is ignored. 

<P>A geometry can also be a sound. The sound is audible when the geometry is within the appropriate range of a microphone behavior.

<P>The bounding box query is used to construct and compose media, and different types of images and behaviors provide specific bounding boxes. This means, for example, that the bounding box of an image is not defined as the smallest axis-aligned, enclosing region of the non-transparent parts of an image. Instead, bounding boxes are defined on a per-operation basis. The <I>emptyGeometry</I> object, for example, has its own definition of a bounding box, defined below.

<P>This class inherits from <A HREF="/directx/dxm/help/da/DA_E0037.htm">DABehavior</A>.


<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#DAGeometry_Functions">DAGeometry Functions</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#DAGeometry_Properties">DAGeometry Properties</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#DAGeometry_Relevant_Funcs_Statics">Relevant Functions from the DAStatics Class</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#DAGeometry_Relevant_Props_Statics">Relevant Properties from the DAStatics Class</A>
</UL>
<H3><A NAME="DAGeometry_Functions">DAGeometry Functions</A></H3>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#diffuseColorv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">DiffuseColor</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#lightAttenuationanv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LightAttenuationAnim</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#lightAttenuationv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LightAttenuation</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#lightColorv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LightColor</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#opacityanv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">OpacityAnim</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#opacityv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Opacity</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#pickv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Pickable</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#rendercamv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Render</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#rendermicv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">RenderSound</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#texturev_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Texture</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#transformv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Transform</A><BR>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#undetectablev_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Undetectable</A><BR>
<H4><HR COLOR="#0000FF"><A NAME="diffuseColorv_g">DiffuseColor</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Specifies the diffuse color of the new <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object. The diffuse color is the diffuse (or matte) reflective color of the surface. By default, the diffuse color is white. The bounding box is the bounding box of the underlying geometry.

<P><B>geometryObj.DiffuseColor</B><B>(</B><BR>&nbsp;&nbsp;<I>col</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>col</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0040.htm">DAColor</A> object that is the color.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H5>Remarks</H5>
<P>This attribute overrides previous values.

<H4><HR COLOR="#0000FF"><A NAME="lightAttenuationanv_g">LightAttenuationAnim</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> in which any light sources have the given attenuation. The new attenuation is set to 1 / (<I>const</I> + <I>linear</I> <FONT FACE="Symbol">&#180;</FONT> <I>d</I> + <I>quadratic</I> <FONT FACE="Symbol">&#180;</FONT> <I>d</I><SUP>2</SUP>) where <I>d</I> is the distance from the light to the object. By default, the attenuation coefficients are (1, 0, 0), which means no light attenuation. The bounding box is the bounding box of the underlying geometry.

<P><B>geometryObj.LightAttenuationAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>const</I><B>,</B><BR>&nbsp;&nbsp;<I>linear</I><B>,</B><BR>&nbsp;&nbsp;<I>quadratic</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>const</I>, <I>linear</I>, and <I>quadratic</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> objects specifying the attenuation of a light source. These must be animated numbers.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H5>Remarks</H5>
<P>An attenuation of (1, 1, 0) gives a linear attenuation that is useful for light falloff in a room. An attenuation of (1, 0, 1) gives a quadratic attenuation that simulates lights that are in the open, such as street lamps and headlights. This attribute overrides previous values. 

<H4><HR COLOR="#0000FF"><A NAME="lightAttenuationv_g">LightAttenuation</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0046.htm#lightAttenuationanv_g">LightAttenuationAnim</A> except that the arguments are non-animated numbers (doubles).

<P><B>geometryObj.LightAttenuation</B><B>(</B><BR>&nbsp;&nbsp;<I>const</I><B>,</B><BR>&nbsp;&nbsp;<I>linear</I><B>,</B><BR>&nbsp;&nbsp;<I>quadratic</I><BR>&nbsp;&nbsp;<B>)</B><BR><H4><HR COLOR="#0000FF"><A NAME="lightColorv_g">LightColor</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Creates a new <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object in which all embedded lights have the specified color. By default, a light source is white. The bounding box is the bounding box of the underlying geometry.

<P><B>geometryObj.LightColor</B><B>(</B><BR>&nbsp;&nbsp;<I>col</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>col</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0040.htm">DAColor</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H5>Remarks</H5>
<P>This attribute overrides previous values.

<H4><HR COLOR="#0000FF"><A NAME="opacityanv_g">OpacityAnim</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Sets the opacity value for all surfaces to <I>opac</I>. Opacity values can range from 0.0 to 1.0. If the corresponding <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object has a value outside this range, the integer part of the value is discarded and only the fractional part is used. By default, the opacity is 1.

<P><B>geometryObj.OpacityAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>opac</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>opac</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0056.htm">DANumber</A> object representing the opacity value. The geometry is fully opaque if the value is 1, and fully transparent if the value is 0. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H5>Remarks</H5>
<P>This function composes values. The resulting opacity is the new value times the old value.

<H4><HR COLOR="#0000FF"><A NAME="opacityv_g">Opacity</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Same as <A HREF="/directx/dxm/help/da/DA_E0046.htm#opacityanv_g">OpacityAnim</A> except that <I>opac</I> is a non-animated number (a double).

<P><B>geometryObj.Opacity</B><B>(</B><BR>&nbsp;&nbsp;<I>opac</I><BR>&nbsp;&nbsp;<B>)</B><BR><H4><HR COLOR="#0000FF"><A NAME="pickv_g">Pickable</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Makes a <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object pickable. Use this function along with the returned <A HREF="/directx/dxm/help/da/DA_E0059.htm">DAPickableResult</A> object to create a reactive behavior (This means that, when the mouse is in the pickable area, an event occurs).

<P>The behavior of a "pickable" image is identical to that of an ordinary image until the mouse is in the pickable region and there are no geometries (other than <A HREF="/directx/dxm/help/da/DA_E0046.htm#undetectablev_g">undetectable</A> ones) between it and the mouse. Then, an event (created in <A HREF="/directx/dxm/help/da/DA_E0059.htm">DAPickableResult</A>) occurs.

<P><B>geometryObj.Pickable</B><B>(</B> <B>)</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0059.htm">DAPickableResult</A> object. 
 

<H4><HR COLOR="#0000FF"><A NAME="rendercamv_g">Render</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0047.htm">DAImage</A> object that is a two-dimensional projection of <I>geometryObj</I>. The <I>camera</I> parameter defines how the geometry is projected into two dimensions. The resulting image is infinite in extent. The bounding box of a rendered geometry is the axis-aligned extent of the projection of the three-dimensional bounding box onto the image plane.

<P><B>geometryObj.Render</B><B>(</B><BR>&nbsp;&nbsp;<I>camera</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>camera</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0039.htm">DACamera</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0047.htm">DAImage</A> object.


<H4><HR COLOR="#0000FF"><A NAME="rendermicv_g">RenderSound</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0062.htm">DASound</A> object that represents the sound associated with <I>geometryObj</I> as detected by the given microphone.

<P><B>geometryObj.RenderSound</B><B>(</B><BR>&nbsp;&nbsp;<I>mic</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>mic</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0054.htm">DAMicrophone</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0062.htm">DASound</A> object.


<H4><HR COLOR="#0000FF"><A NAME="texturev_g">Texture</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object by mapping the given image, as defined by <I>texture</I>, to the surfaces of the original geometry. If the geometry has no surfaces, the texture is ignored. If the original geometry already has a texture, the new texture completely overlays the original. Texture maps have no effect when applied to a geometry that lacks texture coordinates. By default, a geometry has no texture. The bounding box is the bounding box of the underlying geometry.

<P><B>geometryObj.Texture</B><B>(</B><BR>&nbsp;&nbsp;<I>image</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>image</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0047.htm">DAImage</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H5>Remarks</H5>
<P>This attribute overrides previous values.

<H4><HR COLOR="#0000FF"><A NAME="transformv_g">Transform</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Creates a <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object that is the result of applying the given three-dimensional transformation to the original geometry behavior. The transformation applies to all points in the geometry, including those associated with the positions and orientations of light sources, textures, and sounds. The bounding box of a transformed geometry is the axis-aligned box enclosing the box that is the result of applying the transformation to the underlying geometry.

<P><B>geometryObj.Transform</B><B>(</B><BR>&nbsp;&nbsp;<I>xf</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>xf</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0112.htm">DATransform3</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H5>Remarks</H5>
<P>This function composes values. The resulting transformation is the new value applied to the old value.

<H4><HR COLOR="#0000FF"><A NAME="undetectablev_g">Undetectable</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>Creates a new, undetectable <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object from the original geometry. An undetectable geometry means that, while the geometry is still as visible or as audible as before, any attempts to pick it are ignored. 

<P><B>geometryObj.Undetectable</B><B>(</B> <B>)</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A> object.


<H5>Remarks</H5>
<P>The <B>Undetectable</B> function is useful for specifying which objects are detectable and which are not. For example, suppose a semi-transparent green sphere is used to simulate a glow around an object. Because this sphere encloses the object, the object itself would be unpickable. Instead, the pick information would always be for the sphere. Tagging the sphere as unpickable allows the object itself to be picked. This attribute overrides previous values.

<H3><A NAME="DAGeometry_Properties">DAGeometry Properties</A></H3>
<P><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0046.htm#boundingBoxv_g"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">BoundingBox</A><BR>
<H4><HR COLOR="#0000FF"><A NAME="boundingBoxv_g">BoundingBox</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry Class</A>
<P>A read-only property with a <A HREF="/directx/dxm/help/da/DA_E0036.htm">DABbox3</A> value that creates a bounding box object defining the axis-aligned bounding box enclosing all non-transparent portions of the <I>geometryObj</I>. 

<P><B>geometryObj.BoundingBox</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0036.htm">DABbox3</A> object.


<H3><A NAME="DAGeometry_Relevant_Funcs_Statics">Relevant Functions from the DAStatics Class</A></H3>
<P>The following functions are defined in the <A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics</A> class and are most relevant to objects of type <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A>.

<P><A HREF="/directx/dxm/help/da/DA_E0078.htm#importGeometryv_g">lib.ImportGeometry(url)</A>
<P><A HREF="/directx/dxm/help/da/DA_E0078.htm#importGeometryav_g">lib.ImportGeometryAsync(url, geoStandIn)</A>
<P><A HREF="/directx/dxm/help/da/DA_E0078.htm#soundSourcev_g">lib.SoundSource(sound)</A>
<P><A HREF="/directx/dxm/help/da/DA_E0078.htm#spotLightanv_g">lib.SpotLightAnim(fullcone, cutoff)</A>
<P><A HREF="/directx/dxm/help/da/DA_E0078.htm#spotLightv_g">lib.SpotLight(fullcone, cutoff)</A>
<P><A HREF="/directx/dxm/help/da/DA_E0078.htm#unionv_g">lib.UnionGeometry(g1, g2)</A>
<P><A HREF="/directx/dxm/help/da/DA_E0078.htm#uniongav_g">lib.UnionGeometryArray(geoArray)</A>

<H3><A NAME="DAGeometry_Relevant_Props_Statics">Relevant Properties from the DAStatics Class</A></H3>
<P>The following properties are defined in the <A HREF="/directx/dxm/help/da/DA_E0063.htm">DAStatics</A> class and are most relevant to objects of type <A HREF="/directx/dxm/help/da/DA_E0046.htm">DAGeometry</A>.

<P><A HREF="/directx/dxm/help/da/DA_E0079.htm#ambientv_geo">lib.AmbientLight</A>
<P><A HREF="/directx/dxm/help/da/DA_E0079.htm#directionalv_geo">lib.DirectionalLight</A>
<P><A HREF="/directx/dxm/help/da/DA_E0079.htm#emptyv_geo">lib.EmptyGeometry</A>
<P><A HREF="/directx/dxm/help/da/DA_E0079.htm#pointv_geo">lib.PointLight</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
