<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Behavior Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Behavior Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="Behavior_Class"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/da/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Behavior Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/da/art/hdrdanim.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectAnimation Animated Header --Behavior Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/da/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/da/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectAnimation SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/da/DA_E0118.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0123.htm">Bbox3Bvr Class</A>
<IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/da/DA_E0125.htm">BooleanBvr Class</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Behavior Class</H2>
<BR CLEAR=ALL>
<PRE><FONT FACE="Courier" SIZE="2">public class Behavior extends java.lang.Object {
    // Methods
    public Behavior bvrHook(BvrCallback callback);
    public Behavior debug();
    public Behavior debug(String name);
    public Behavior debug(String name, boolean onStart);
    public Behavior debug(String name, boolean onStart, PrintStream std);
    public Behavior duration(NumberBvr length)
    public Object extract();
    public void init(Behavior a);
    public Behavior repeat(int repetitions);
    public Behavior repeatForever();
    public Behavior runOnce();
    public Behavior substituteTime(NumberBvr a);
    
}
</FONT></PRE>
<P>All behaviors are potentially time-varying and/or reactive values such as colors, numbers and images. They can be used to construct animated objects. All behavior subclasses inherit the methods of this class.

<P>Because all behaviors are potentially time-varying and/or reactive, their values can change as a function of time or as the result of user input. Time-varying behaviors are created by combining time-based default behaviors (such as <A HREF="/directx/dxm/help/da/DA_E0188.htm#localTime_num">localTime</A>) with other behaviors. Reactive behaviors are created using the <B>until</B>, <A HREF="/directx/dxm/help/da/DA_E0161.htm#until2_beh">untilEx</A>, and <B>untilNotify</B> methods and specifying input events, such as mouse clicks. Complex behaviors can be built by combining existing behaviors. The value of a complex behavior always depends on the values of the behaviors that comprise it.

<P>Behaviors are started either by the <A HREF="/directx/dxm/help/da/DA_E0146.htm#createModel_model">createModel</A> method (which means they start at time = 0) or with the <A HREF="/directx/dxm/help/da/DA_E0210.htm">untilNotify.notify</A> method, when they are started at the event time. When a behavior runs, its time-varying and reactive qualities are active. This means the user can experience any changes that occur in the behavior as time passes or events occur.

<P>In order to type-check behaviors, all behavior types must be known at construction time. This is why there is no <B>Behavior.newUninitBvr()</B> method included in the <B>Behavior</B> class.

<UL><LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#Behavior_Methods">Behavior Methods</A>
<LI><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#Behavior_Relevant_Methods_Statics">Relevant Methods from the Statics Class</A>
</UL>
<H3><A NAME="Behavior_Methods">Behavior Methods</A></H3>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#BvrHook_beh">bvrHook</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#debug0_beh">debug</A>()
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#debug1_beh">debug</A>(<I>name</I>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#debug2_beh">debug</A>(<I>name</I>, <I>onStart</I>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#debug3_beh">debug</A>(<I>name</I>, <I>onStart</I>, <I>std</I>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#duration_beh">duration</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#extract_beh">extract</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#init_beh">init</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#repeat_beh">repeat</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#repeatForever_beh">repeatForever</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#runOnce_beh">runOnce</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><IMG SRC="/directx/dxm/help/da/art/bullet1.gif" WIDTH="5" HEIGHT="11" ALT=""><A CLASS=tctop HREF="/directx/dxm/help/da/DA_E0124.htm#substituteTime_beh">substituteTime</A>
</FONT></TD>
</TR>
</TABLE>
<H4><HR COLOR="#0000FF"><A NAME="BvrHook_beh">bvrHook</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Allows a running behavior to be sampled. 

<P><B>public</B> <B>Behavior</B> <B>bvrHook</B><B>(</B><BR>&nbsp;&nbsp;<B>BvrCallback</B> <I>callback</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>callback</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0126.htm">BvrCallback</A> interface containing the notify method.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> object that is the value of the running behavior at the time it was sampled.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/da/DA_E0126.htm">BvrCallback</A>

<H4><HR COLOR="#0000FF"><A NAME="debug0_beh">debug</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Gives the information about a running behavior.
<P><B>public</B> <B>Behavior</B> <B>debug</B><B>(</B> <B>)</B><B>;</B><BR><H5>Remarks</H5>
<P>This method gives the following information about a running behavior:
<UL><LI>An integer number (the ID), which distinguishes each instance of the behavior.
<LI>The global time that the behavior was started.
<LI>The value of the behavior at the time it was started.
</UL>
<P>The method assumes the following defaults:
<UL><LI>The behavior is unnamed.
<LI>The information is displayed each time an instance of the behavior is started.
<LI>The information is displayed on the standard output.
</UL>
<P>The following example shows that, when it was started, the second instance of a behavior was started at a global time of 39.66 seconds, and had a value of 0.5:

<PRE><FONT FACE="Courier" SIZE="2">
2 started at 39.66 result = 0.5
</FONT></PRE>
<P>This method is unavailable to viewers that don't display the standard output.
<H4><HR COLOR="#0000FF"><A NAME="debug1_beh">debug</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Gives information about a running behavior.

<P><B>public</B> <B>Behavior</B> <B>debug</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>name</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>name</I>
 </DT><DD>The name of the behavior.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> object.


<H5>Remarks</H5>
<P>This method gives the following information about a running behavior:
<UL><LI>The name of the behavior.
<LI>An integer number (the ID), which distinguishes each instance of the behavior.
<LI>The global time that the behavior was started.
<LI>The value of the behavior at the time it was started.
</UL>
<P>The method assumes the following defaults:
<UL><LI>The information is displayed each time an instance of the behavior is started.
<LI>The information is displayed on the standard output.
</UL>
<P>The following example shows that, when it was started, the second instance of a behavior called "b" was started at a global time of 39.66 seconds, and had a value of 0.5:

<PRE><FONT FACE="Courier" SIZE="2">
"b" 2 started at 39.66 result = 0.5
</FONT></PRE>
<P>The next example displays a solid-colored image whose red and green components are 1, and whose blue component is time-varying. The NumberBvr x initially has a value of "b" (a value that varies over time). When the left button of the mouse is pressed, "b" (and therefore, "x" starts all over again, with a value of 0.5.

<P>The debugging information (shown in the previous example) is displayed each time the left mouse button is pressed.


<PRE><FONT FACE="Courier" SIZE="2">
import com.ms.dxmedia.*;

public class DebugTest extends DXMApplet{
  public DebugTest() {
    // Set the model
    setModel(new DebugTestModel()) ;
  } 
}

class DebugTestModel extends Model {
  public void createModel(BvrsToRun extraBvrsToRun) {
      NumberBvr b = (NumberBvr) add(localTime, toBvr(0.5)).Debug("b");

      NumberBvr x = NumberBvr.newUninitBvr();
      x.init(until(b, leftButtonDown, x));
      
      ImageBvr model = solidColorImage(colorRgb(toBvr(1), toBvr(1), x));

      setImage(model);
  }
}       

</FONT></PRE>
<P>This method is unavailable to viewers that don't display the standard output.
<H4><HR COLOR="#0000FF"><A NAME="debug2_beh">debug</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Gives information about a running behavior.
<P><B>public</B> <B>Behavior</B> <B>debug</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>name</I><B>,</B><BR>&nbsp;&nbsp;<B>boolean</B> <I>onStart</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>name</I>
 </DT><DD>The name of the behavior.
</DD><DT><I>onStart</I>
 </DT><DD>If true, the <B>debug</B> method is called when the behavior is started. If false, the method is called whenever the behavior is sampled. The default is true. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> object.


<H5>Remarks</H5>
<P>This method gives the following information about a running behavior:

<UL><LI>The name of the behavior.
<LI>An integer number (the ID), which distinguishes each instance of the behavior.
<LI>The global time that the behavior was started or sampled.
<LI>The local time that the behavior was sampled. (If debug is being called when the behavior is started, then the local time is 0, which is not displayed.)
<LI>The value of the behavior at the time it was started or sampled.
</UL>
<P>This method assumes the information is displayed on the standard output.

<P>The following example shows that, when it was started, the second instance of a behavior called "b" was started at a global time of 39.66 seconds, and had a value of 0.5:

<PRE><FONT FACE="Courier" SIZE="2">
"b" 2 started at 39.66 result = 0.5
</FONT></PRE>
<P>This method is unavailable to viewers that don't display the standard output.
<H4><HR COLOR="#0000FF"><A NAME="debug3_beh">debug</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Gives information about a running behavior.
<P><B>public</B> <B>Behavior</B> <B>debug</B><B>(</B><BR>&nbsp;&nbsp;<B>String</B> <I>name</I><B>,</B><BR>&nbsp;&nbsp;<B>boolean</B> <I>onStart</I><B>,</B><BR>&nbsp;&nbsp;<B>PrintStream</B> <I>std</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>name</I>
 </DT><DD>The name of the behavior.
</DD><DT><I>onStart</I>
 </DT><DD>If true, the <B>debug</B> method is called when the behavior is started. If false, the method is called whenever the behavior is sampled. The default is true. 
</DD><DT><I>std</I>
 </DT><DD>The output device. The default is the standard output.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> object.


<H5>Remarks</H5>
<P>This method gives the following information about a running behavior:
<UL><LI>The name of the behavior.
<LI>An integer number (the ID), which distinguishes each instance of the behavior.
<LI>The global time that the behavior was started or sampled.
<LI>The local time that the behavior was sampled. (If debug is being called when the behavior is started, then the local time is 0, which is not displayed.)
<LI>The value of the behavior at the time it was started or sampled.
</UL>
<P>The following example shows that, when it was started, the second instance of a behavior called "b" was started at a global time of 39.66 seconds, and had a value of 0.5:

<PRE><FONT FACE="Courier" SIZE="2">
"b" 2 started at 39.66 result = 0.5
</FONT></PRE>
<P>This method is unavailable to viewers that don't display the standard output.

<H4><HR COLOR="#0000FF"><A NAME="duration_beh">duration</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Creates an animation fragment by associating a local "stop time" with a behavior. The result is a new behavior that is the same as the original behavior for the length of the duration. Once the duration is over, the behavior is a snapshot of the behavior's state when the duration ended.

<P><B>public</B> <B>Behavior</B> <B>duration</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>length</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>length</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object representing the length of time, in seconds, that the duration lasts. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> object.


<H4><HR COLOR="#0000FF"><A NAME="extract_beh">extract</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Extracts the value of the behavior, returning a Java object. This behavior must have a constant value.

<P><B>public</B> <B>Object</B> <B>extract</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns a Java object. For more information about java.lang.Object objects, consult a Java reference.


<H4><HR COLOR="#0000FF"><A NAME="init_beh">init</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Initializes a behavior created by the <B>newUninit</B> method.

<P><B>public</B> <B>void</B> <B>init</B><B>(</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> object to be initialized.
</DD></DL>
<H4><HR COLOR="#0000FF"><A NAME="repeat_beh">repeat</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Creates a behavior that repeats itself the number of times specified by <I>repetitions</I>.

<P><B>public</B> <B>Behavior</B> <B>repeat</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>repetitions</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>repetitions</I>
 </DT><DD>The number of times the behavior will repeat.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> object.


<H4><HR COLOR="#0000FF"><A NAME="repeatForever_beh">repeatForever</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Creates a behavior that repeats infinitely.

<P><B>public</B> <B>Behavior</B> <B>repeatForever</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> object.


<H4><HR COLOR="#0000FF"><A NAME="runOnce_beh">runOnce</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Used when applications must reference a running behavior once it starts running, but don't require the application to explicitly start that behavior.

<P><B>public</B> <B>Behavior</B> <B>runOnce</B><B>(</B> <B>)</B><B>;</B><BR><H5>Remarks</H5>
<P> The following code fragment plays 2 movies. The first movie plays from the beginning for 10 seconds. It then fades, over a 2 second interval, into a second movie. (Assume the existence of a fade method.)

<PRE><FONT FACE="Courier" SIZE="2">ImageBvr movie1Once = (ImageBvr)movie1.runOnce();
ImageBvr movie2Once = (ImageBvr)movie2.runOnce();
  until(movie1Once,
    timer(toBvr(10)),
      until(fade(div(localTime, toBvr(2)), movie1Once, movie2Once),
        timer(toBvr(2)),
          movie2Once);
</FONT></PRE>
<H4><HR COLOR="#0000FF"><A NAME="substituteTime_beh">substituteTime</A></H4>
<A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior Class</A>
<P>Creates a new behavior from an existing <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> and a <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A>. In the new behavior, the number behavior replaces all occurrences of localTime in the original behavior. (This includes behaviors where localTime is implicit, such as imported movies. The method can be used even if localTime isn't explicitly in the code.) 

<P><B>public</B> <B>Behavior</B> <B>substituteTime</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>a</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="/directx/dxm/help/da/DA_E0150.htm">NumberBvr</A> object that replaces localTime.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A> object.


<H5>Remarks</H5>
<P>This method allows behaviors to be, for example, time-scaled to run faster or slower, time-shifted to start at a different time, or frozen at a particular point in time. Here are some examples:

<PRE><FONT FACE="Courier" SIZE="2">//A point moving 1 unit in x/second, starting at 0&#009;
&#009;b0 = point2(localTime, toBvr(0));

    //Create new behavior moving 0.5 units/second, 
    //by replacing localTime with localTime/2
&#009;b1 = origBvr.substituteTime(div(localTime, toBvr(2)));

    //Create new behavior moving 1 unit/second, 
    //starting at 33, by replacing localTime with localTime + 33
&#009;b2 = origBvr.substituteTime(add(localTime, toBvr(33));

    //Create new behavior moving 2 units/second, starting at 33, 
    //by replacing localTime with (localTime *2) + 33
&#009;b3 = origBvr.substituteTime(add(mul(localTime, toBvr(2)), toBvr(33));

    //Freeze the original behavior at time 77
&#009;b4 = origBvr.substituteTime(toBvr(77));

    //Tie the new behavior to the x-component of the mouse
&#009;b5 = origBvr.substituteTime(mousePosition.getX());

    //Show that replacements are cumulative. The following sequence:
&#009;c0 = point2(localTime, toBvr(0));
&#009;c1 = c0.substituteTime(add(localTime, toBvr(33)));
&#009;c2 = c1.substituteTime(mul(localTime, toBvr(2)));

    //is equivalent to:
&#009;c0.substituteTime(add(mul(localTime, toBvr(2))), toBvr(33));

</FONT></PRE>
<H3><A NAME="Behavior_Relevant_Methods_Statics">Relevant Methods from the Statics Class</A></H3>
<P>The following methods are defined in the <A HREF="/directx/dxm/help/da/DA_E0160.htm">Statics</A> class and are most relevant to objects of type <A HREF="/directx/dxm/help/da/DA_E0124.htm">Behavior</A>.

<P><A HREF="/directx/dxm/help/da/DA_E0161.htm#cond_beh">public static Behavior cond(BooleanBvr bool, Behavior a, Behavior b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0161.htm#sequence_beh">public static Behavior sequence(Behavior a, Behavior b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0161.htm#until_beh">public static Behavior until(Behavior a, DXMEvent e, Behavior b);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0161.htm#until2_beh">public static Behavior untilEx(Behavior a, DXMEvent e);</A>
<P><A HREF="/directx/dxm/help/da/DA_E0161.htm#untilNotify_beh">public static Behavior untilNotify(Behavior a, DXMEvent e, UntilNotifier notifier);</A> 
 
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/da/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
