<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IVideoWindow Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IVideoWindow Interface">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="IVideoWindow"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IVideoWindow Interface"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IVideoWindow Interface"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0091.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown Interface</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>IVideoWindow Interface</H2>
<BR CLEAR=ALL>
<P>The <B>IVideoWindow</B> interface supports the video window properties
of a video renderer. It is a dual interface (accessible through Microsoft&#174; Visual Basic&#174; and
Visual C++&#174;) that controls a generic video window. Generally, this is a video
renderer that draws video into a window on the display.

The <B>IVideoWindow</B> interface supports both properties and methods. Properties are
more easily accessible from many Automation controllers (such as Microsoft
Visual Basic). However, some operations require several properties
to be changed simultaneously; for this reason, methods are provided that allow a
number of related properties to be changed simultaneously. For example, setting the
window's position and size can be done by four individual put_[property name] calls or by
the single method <A HREF="/directx/dxm/help/ds/dssd0183.htm#SetWindowPosition">SetWindowPosition</A>.

<P>The methods require only that the video renderer be connected. If it is not connected,
all the interface functions return <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_E_NOT_CONNECTED">VFW_E_NOT_CONNECTED</A>. Properties set
on a video renderer persist between successive connections and disconnections.
All applications should ensure that they reset the renderer properties before starting a
presentation.

<P>Because this interface is Automation-compatible, there are two important aspects to
remember about parameters accepted by these methods. First, all Boolean returns are
OAFALSE (0) or OATRUE (&#150;1), which is different from the C or C++ definition. Second,
all strings are defined as being of type BSTR. All strings sent to the interface should be allocated
through the Automation <A HREF="/directx/dxm/help/ds/dssd0404.htm#SysAllocString">SysAllocString</A> function, and similarly all strings returned from the
interface should be freed by using the Automation <A HREF="/directx/dxm/help/ds/dssd0404.htm#SysFreeString">SysFreeString</A> function.


<A NAME="When_to_Implement"></A><P><B>When to Implement</B>
<P>The video renderer filter supplied with Microsoft DirectShow&#153; implements this
interface.

It is also implemented by the filter graph manager (via a plug-in distributor)
to pass method calls from the application to the video renderer filter's
implementation of the interface.

<P>Implement this interface if you are writing a replacement video
renderer filter. You can use the <A HREF="/directx/dxm/help/ds/dssd0214.htm#CBaseVideoWindow">CBaseVideoWindow</A> class,
which handles the <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch">IDispatch</A> implementation for Automation,
to help implement this interface.

<A NAME="When_to_Use"></A><P><B>When to Use</B>
<P>This interface is used by applications or other filters that must control
the video window's properties.

<A NAME="Methods_in_Vtable_Or"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#QueryInterface">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IDispatch methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch__GetTypeIn">GetTypeInfoCount</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines whether there is type information available for this dispinterface.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch__GetTypeIn">GetTypeInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the type information for this dispinterface if
 <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch__GetTypeIn">GetTypeInfoCount</A> returned
successfully.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch__GetIDsOfN">GetIDsOfNames</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Converts text names of properties and methods (including arguments) to
their corresponding DISPIDs.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch__Invoke">Invoke</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Calls a method or accesses a property in this dispinterface if given a DISPID
and any other necessary parameters.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IVideoWindow methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Caption">put_Caption</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the text caption on the playback window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Caption">get_Caption</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the text caption on the playback window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_WindowStyle">put_WindowStyle</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the playback window style.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_WindowStyle">get_WindowStyle</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the playback window style.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_WindowStyleEx">put_WindowStyleEx</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the style of the control window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_WindowStyleEx">get_WindowStyleEx</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the playback window's extended style bits.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_AutoShow">put_AutoShow</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies if the window will be automatically shown on the first state change.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_AutoShow">get_AutoShow</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns if the window will be automatically shown on the first state change.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_WindowState">put_WindowState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the current window state (such as visible or minimized).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_WindowState">get_WindowState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current window state (such as visible or minimized).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_BackgroundPalette">put_BackgroundPalette</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the renderer to realize its palette in the background.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_BackgroundPalette">get_BackgroundPalette</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns whenever the renderer realizes its palette in the background.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Visible">put_Visible</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the visibility of the window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Visible">get_Visible</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the visibility of the window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Left">put_Left</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the x-axis coordinate for the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Left">get_Left</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the x-axis coordinate for the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Width">put_Width</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the width of the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Width">get_Width</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the width of the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Top">put_Top</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the y-axis coordinates for the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Top">get_Top</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the y-axis coordinates for the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Height">put_Height</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the height of the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Height">get_Height</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the height of the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Owner">put_Owner</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the owning parent window for the video playback window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Owner">get_Owner</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the owning parent window for the video playback window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_MessageDrain">put_MessageDrain</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies a window to which the video window will post messages.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_MessageDrain">get_MessageDrain</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the window set to receive messages from the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_BorderColor">get_BorderColor</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the border color for the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_BorderColor">put_BorderColor</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the border color for the video window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#get_FullScreenMode">get_FullScreenMode</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the full-screen rendering mode of the video renderer filter supporting this interface.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_FullScreenMode">put_FullScreenMode</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the full-screen mode for the video renderer filter supporting this interface.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#SetWindowForeground">SetWindowForeground</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tells the renderer filter to become the foreground window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#NotifyOwnerMessage">NotifyOwnerMessage</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Forwards messages that have been received by a parent window to a child window
owned by a filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#SetWindowPosition">SetWindowPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the video window position on the display.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#GetWindowPosition">GetWindowPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the video window position.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#GetMinIdealImageSize">GetMinIdealImageSize</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the ideal minimum image size for the video image playback (client) area.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#GetMaxIdealImageSize">GetMaxIdealImageSize</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the ideal maximum image size for the video image playback (client) area.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#GetRestorePosition">GetRestorePosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the normal restored window dimensions.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#HideCursor">HideCursor</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Hides the cursor.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0183.htm#IsCursorHidden">IsCursorHidden</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the cursor is hidden or showing.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="get_AutoShow">IVideoWindow::get_AutoShow</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves information about whether the window will be automatically shown.

<P><B>HRESULT</B> <B>get_AutoShow</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*AutoShow</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>AutoShow</I>
</DT><DD>[out] OATRUE indicates that the window will be made visible when the state is
changed to the paused or running state.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H3><HR COLOR="#0000FF"><A NAME="get_BackgroundPalette">IVideoWindow::get_BackgroundPalette</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves information about whether any palette required will be
realized in the background.

<P><B>HRESULT</B> <B>get_BackgroundPalette</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pBackgroundPalette</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pBackgroundPalette</I>
</DT><DD>[out] OATRUE indicates that the palette will be realized in the background.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H3><HR COLOR="#0000FF"><A NAME="get_BorderColor">IVideoWindow::get_BorderColor</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the border color for the video window.

<P><B>HRESULT</B> <B>get_BorderColor</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pColor</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pColor</I>
 </DT><DD>[out] Retrieved border color as a COLORREF value.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H3><HR COLOR="#0000FF"><A NAME="get_Caption">IVideoWindow::get_Caption</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the textual title string for the video window.

<P><B>HRESULT</B> <B>get_Caption</B><B>(</B><BR>&nbsp;&nbsp;<B>BSTR</B> <I>*strCaption</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>strCaption</I>
</DT><DD>[out] Retrieved window title caption.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H3><HR COLOR="#0000FF"><A NAME="get_FullScreenMode">IVideoWindow::get_FullScreenMode</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Returns the full-screen rendering capabilities of the renderer filter supporting this interface.

<P><B>HRESULT</B> <B>get_FullScreenMode</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*FullScreenMode</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>FullScreenMode</I>
</DT><DD>[out] OATRUE if supporting full-screen video, or OAFALSE if not.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method is called by the filter graph manager when asked to render the video to
full-screen size. If the renderer does not have inherent support for full-screen playback, it
should return E_NOTIMPL. Otherwise, it should return NOERROR. If the renderer
does support full-screen playback, this method determines if it is currently switched on or off.
<H3><HR COLOR="#0000FF"><A NAME="get_Height">IVideoWindow::get_Height</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the height of the video window.

<P><B>HRESULT</B> <B>get_Height</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pHeight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pHeight</I>
</DT><DD>[out] Retrieved vertical dimension of the video window.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H3><HR COLOR="#0000FF"><A NAME="get_Left">IVideoWindow::get_Left</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the x-axis coordinate for the video window.

<P><B>HRESULT</B> <B>get_Left</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pLeft</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pLeft</I>
</DT><DD>[out] The x-axis coordinate to be retrieved.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H3><HR COLOR="#0000FF"><A NAME="GetMaxIdealImageSize">IVideoWindow::GetMaxIdealImageSize</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the ideal maximum image size for the video image playback (client) area.

<P><B>HRESULT</B> <B>GetMaxIdealImageSize</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pWidth</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pHeight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pWidth</I>
 </DT><DD>[out] Image width.
</DD><DT><I>pHeight</I>
 </DT><DD>[out] Image height.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H3><HR COLOR="#0000FF"><A NAME="get_MessageDrain">IVideoWindow::get_MessageDrain</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the window set to receive messages from the video window.

<P><B>HRESULT</B> <B>get_MessageDrain</B><B>(</B><BR>&nbsp;&nbsp;<B>OAHWND</B> <I>*Drain</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Drain</I>
</DT><DD>[in] Window currently assigned to receive messages from the video window.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>The <A HREF="/directx/dxm/help/ds/dssd0183.htm#put_MessageDrain">IVideoWindow::put_MessageDrain</A> description contains a
list of the Microsoft Win32&#174; messages passed to the window that is specified as a message drain.
<H3><HR COLOR="#0000FF"><A NAME="GetMinIdealImageSize">IVideoWindow::GetMinIdealImageSize</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the ideal minimum image size for the video image playback (client) area.

<P><B>HRESULT</B> <B>GetMinIdealImageSize</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pWidth</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pHeight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pWidth</I>
 </DT><DD>[out] Image width.
</DD><DT><I>pHeight</I>
 </DT><DD>[out] Image height.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H3><HR COLOR="#0000FF"><A NAME="get_Owner">IVideoWindow::get_Owner</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the owning parent for the video window.

<P><B>HRESULT</B> <B>get_Owner</B><B>(</B><BR>&nbsp;&nbsp;<B>OAHWND</B> <B>*</B> <I>pOwner</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pOwner</I>
 </DT><DD>[out] Retrieved window handle.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H3><HR COLOR="#0000FF"><A NAME="GetRestorePosition">IVideoWindow::GetRestorePosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Returns the normal restored window dimensions.

<P><B>HRESULT</B> <B>GetRestorePosition</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pLeft</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pTop</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pWidth</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pHeight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pLeft</I>
</DT><DD>[out] Left x-axis coordinate of the window.
</DD><DT><I>pTop</I>
</DT><DD>[out] Top y-axis coordinate of the window.
</DD><DT><I>pWidth</I>
</DT><DD>[out] Width of the window in pixels.
</DD><DT><I>pHeight</I>
</DT><DD>[out] Height of the window in pixels.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>When the window is maximized or minimized, the window position methods return the actual
window size. This method returns the dimensions that the window would be when restored. It is
useful for applications that want to save a window state while the window is maximized or minimized.
<H3><HR COLOR="#0000FF"><A NAME="get_Top">IVideoWindow::get_Top</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the y-axis coordinate of the video window.

<P><B>HRESULT</B> <B>get_Top</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pTop</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pTop</I>
</DT><DD>[out] The y-axis origin to be retrieved.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H3><HR COLOR="#0000FF"><A NAME="get_Visible">IVideoWindow::get_Visible</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the visibility of the video window.

<P><B>HRESULT</B> <B>get_Visible</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pVisible</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pVisible</I>
</DT><DD>[out] OATRUE if the window is shown; otherwise, the window is hidden.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H3><HR COLOR="#0000FF"><A NAME="get_Width">IVideoWindow::get_Width</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the width of the video window.

<P><B>HRESULT</B> <B>get_Width</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pWidth</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pWidth</I>
</DT><DD>[out] Width to be retrieved.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H3><HR COLOR="#0000FF"><A NAME="GetWindowPosition">IVideoWindow::GetWindowPosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Retrieves the current window rectangle (not the client rectangle) in device coordinates.

<P><B>HRESULT</B> <B>GetWindowPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pLeft</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pTop</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pWidth</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pHeight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pLeft</I>
 </DT><DD>[out] The x-axis origin of the window.
</DD><DT><I>pTop</I>
 </DT><DD>[out] The y-axis origin of the window.
</DD><DT><I>pWidth</I>
 </DT><DD>[out] Width of the window in pixels.
</DD><DT><I>pHeight</I>
 </DT><DD>[out] Height of the window in pixels.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method has the same effect as individually calling the <A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Left">IVideoWindow::get_Left</A>,
<A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Top">IVideoWindow::get_Top</A>, <A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Width">IVideoWindow::get_Width</A>, and
<A HREF="/directx/dxm/help/ds/dssd0183.htm#get_Height">IVideoWindow::get_Height</A> methods.
<H3><HR COLOR="#0000FF"><A NAME="get_WindowState">IVideoWindow::get_WindowState</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Returns the state of the video window.

<P><B>HRESULT</B> <B>get_WindowState</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*WindowState</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>WindowState</I>
 </DT><DD>[out] Flags indicating the state of the video window.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method retrieves a subset of the properties of the window state,
specifically SW_MINIMIZE, SW_MAXIMIZE, SW_SHOW, or SW_HIDE.
These have the same definitions as the Microsoft Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#ShowWindow">ShowWindow</A> function.
<H3><HR COLOR="#0000FF"><A NAME="get_WindowStyle">IVideoWindow::get_WindowStyle</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Changes the style parameters for the video window.

<P><B>HRESULT</B> <B>get_WindowStyle</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>*pWindowStyle</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pWindowStyle</I>
</DT><DD>[out] Set of flags that matches a subset of the flags that can be set by the
GWL_STYLE value of the Microsoft Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#GetWindowLong">GetWindowLong</A> function.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>For a complete list of window styles, see the <A HREF="/directx/dxm/help/ds/dssd0404.htm#CreateWindow">CreateWindow</A> function in the
Microsoft Win32 Software Development Kit (SDK).
<H3><HR COLOR="#0000FF"><A NAME="get_WindowStyleEx">IVideoWindow::get_WindowStyleEx</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Changes the style parameters for the video window.

<P><B>HRESULT</B> <B>get_WindowStyleEx</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <B>*</B> <I>pWindowStyleEx</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pWindowStyleEx</I>
</DT><DD>[out] Set of flags that matches a subset of the flags that can be set by the
GWL_STYLE value of the Microsoft Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#GetWindowLong">GetWindowLong</A> function.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This function uses extended window styles. For a complete list of window styles, see the
<A HREF="/directx/dxm/help/ds/dssd0404.htm#CreateWindow">CreateWindow</A> function in the Microsoft Win32 Software Development Kit (SDK).
<H3><HR COLOR="#0000FF"><A NAME="HideCursor">IVideoWindow::HideCursor</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Hides the cursor.

<P><B>HRESULT</B> <B>HideCursor</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>HideCursor</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>HideCursor</I>
 </DT><DD>[in] If OATRUE, do not display the cursor; if OAFALSE, display the cursor.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method is typically used when the video renderer is in full-screen mode,
where cursor display might be unwanted.
<H3><HR COLOR="#0000FF"><A NAME="IsCursorHidden">IVideoWindow::IsCursorHidden</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Determines if the cursor is hidden or showing.

<P><B>HRESULT</B> <B>IsCursorHidden</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <B>*</B> <I>CursorHidden</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>CursorHidden</I>
 </DT><DD>[out] If OATRUE, cursor is hidden; if OAFALSE, cursor is displayed.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method is typically used when the video renderer is in full-screen mode,
where cursor display might be unwanted.
<H3><HR COLOR="#0000FF"><A NAME="NotifyOwnerMessage">IVideoWindow::NotifyOwnerMessage</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Forwards messages that have been received by a parent window
to a child window owned by a filter.

<P><B>HRESULT</B> <B>NotifyOwnerMessage</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>hwnd</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>uMsg</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>wParam</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>lParam</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>hwnd</I>
 </DT><DD>[in] Window handle.
</DD><DT><I>uMsg</I>
 </DT><DD>[in] Message being sent.
</DD><DT><I>wParam</I>
 </DT><DD>[in] Message's <I>wParam</I> passed in.
</DD><DT><I>lParam</I>
 </DT><DD>[in] Message's <I>lParam</I> passed in.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method should be used by windows that make a renderer window a child window.
It forwards significant messages to the child window that the
child window would not otherwise receive. This includes the following messages.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_ACTIVATEAPP
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_DEVMODECHANGE
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_DISPLAYCHANGE
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_PALETTECHANGED
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_PALETTEISCHANGING
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_QUERYNEWPALETTE
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_SYSCOLORCHANGE
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="put_AutoShow">IVideoWindow::put_AutoShow</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Determines whether or not the window will be automatically shown.

<P><B>HRESULT</B> <B>put_AutoShow</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>AutoShow</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>AutoShow</I>
</DT><DD>[in] OATRUE (&#150;1) means the window will be visible when the state changes; OAFALSE (0) means the window remains hidden until explicitly shown.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>Many simple applications require a displayed window when a filter graph is set to the running state. <I>AutoShow</I> defaults to OATRUE so that when the graph changes state to paused or running, the window is visible (it also is set as the foreground window). It will remain visible on all subsequent state changes to paused or running. If you close the window while the stream is running, the window will not automatically reappear. If you stop and restart the stream, however, the window will automatically reappear.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Visible">IVideoWindow::put_Visible</A>
<H3><HR COLOR="#0000FF"><A NAME="put_BackgroundPalette">IVideoWindow::put_BackgroundPalette</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Determines whether any palette required will be realized in the background.

<P><B>HRESULT</B> <B>put_BackgroundPalette</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>BackgroundPalette</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>BackgroundPalette</I>
</DT><DD>[in] OATRUE to realize the palette in the background; otherwise, OAFALSE.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>If this is OATRUE (&#150;1), any palette required by the
video is realized by the renderer in the background. This means that any
colors the palette uses will change to their closest match in the display palette
prior to drawing. This ensures that an application will not have its palette
disturbed when playing a video. It does, however, impose severe performance
penalties on the video and should not be used unless absolutely necessary.
The default value for this property is OAFALSE.
<H3><HR COLOR="#0000FF"><A NAME="put_BorderColor">IVideoWindow::put_BorderColor</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the border color for the video window.

<P><B>HRESULT</B> <B>put_BorderColor</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>Color</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Color</I>
 </DT><DD>[in] New border color as a COLORREF type.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>When a destination rectangle that is set differs from the visible client area
of the window, a border is exposed around the edge.
This method allows an application to change the border color. It is set to
black by default. Any nonsystem color passed in is converted to its
closest match according to the current palette before being used (this is not
an issue on true color devices). Setting this causes the window border to be
repainted in the new color automatically.
<H3><HR COLOR="#0000FF"><A NAME="put_Caption">IVideoWindow::put_Caption</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the textual title string for the video window.

<P><B>HRESULT</B> <B>put_Caption</B><B>(</B><BR>&nbsp;&nbsp;<B>BSTR</B> <I>strCaption</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>strCaption</I>
</DT><DD>[in] Window title caption.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H3><HR COLOR="#0000FF"><A NAME="put_FullScreenMode">IVideoWindow::put_FullScreenMode</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the full-screen mode for the video renderer filter supporting this interface.

<P><B>HRESULT</B> <B>put_FullScreenMode</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>FullScreenMode</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>FullScreenMode</I>
</DT><DD>[in] OATRUE if supporting full-screen video, or OAFALSE if not.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_NOTIMPL if the video renderer doesn't support full-screen mode or NOERROR if it does.


<H5>Remarks</H5>
<P>This method allows an application to switch a full-screen renderer into and out of full-screen mode. The renderer's behavior when switched out of full-screen mode is implementation-dependent. The Microsoft full-screen renderer, for example, switches back to a window.

<P>The <A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow</A> plug-in distributor in the filter graph manager implements full-screen renderer switching. It looks to see if any renderer in the graph supports a full-screen mode and, if not, will temporarily replace the renderer with the default DirectShow full-screen renderer. It calls <A HREF="/directx/dxm/help/ds/dssd0183.htm#GetMaxIdealImageSize">IVideoWindow::GetMaxIdealImageSize</A> to determine if a window can be made a topmost window and resized to the entire display. This is preferred to swapping renderers, because the filter graph might be using DirectDraw&#174; overlays or a hardware decoder filter.
<H3><HR COLOR="#0000FF"><A NAME="put_Height">IVideoWindow::put_Height</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the height of the video window.

<P><B>HRESULT</B> <B>put_Height</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>Height</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Height</I>
</DT><DD>[in] New vertical dimension of the video window.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>Calling this method does not affect the y-axis coordinate of the video window.
<H3><HR COLOR="#0000FF"><A NAME="put_Left">IVideoWindow::put_Left</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the x-axis coordinate for the video window.

<P><B>HRESULT</B> <B>put_Left</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>Left</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Left</I>
</DT><DD>[in] The x-axis coordinate to be set.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>Calling this method does not affect the video window's width.
<H3><HR COLOR="#0000FF"><A NAME="put_MessageDrain">IVideoWindow::put_MessageDrain</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Specifies a window to which the video window will post messages.

<P><B>HRESULT</B> <B>put_MessageDrain</B><B>(</B><BR>&nbsp;&nbsp;<B>OAHWND</B> <I>Drain</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Drain</I>
</DT><DD>[in] Window to which messages will be posted.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>The video renderer passes messages to the specified message drain by calling the Microsoft Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#PostMessage">PostMessage</A> function. These messages allow you to write applications that include user interaction, such as applications that require mouse clicks on specific areas of the video display. An application can have a close relationship with the video window and know at certain time points to look for user interaction. When the renderer passes a message to the drain, it sends the parameters, such as the client-area coordinates, exactly as generated.

<P>DirectShow passes the following messages to the window specified by the <I>Drain</I> parameter, if and when the application generates them.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_KEYDOWN
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_KEYUP
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_LBUTTONDBLCLK
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_LBUTTONDOWN
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_LBUTTONUP
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_MBUTTONDBLCLK
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_MBUTTONDOWN
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_MBUTTONUP
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_MOUSEACTIVATE
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_MOUSEMOVE
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_NCLBUTTONDBLCLK
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_NCLBUTTONDOWN
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_NCLBUTTONUP
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_NCMBUTTONDBLCLK
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_NCMBUTTONDOWN
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_NCMBUTTONUP
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_NCMOUSEMOVE
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_NCRBUTTONDBLCLK
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_NCRBUTTONDOWN
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_NCRBUTTONUP
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_RBUTTONDBLCLK
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_RBUTTONDOWN
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WM_RBUTTONUP
</FONT></TD></TR></TABLE>
<P>Because this member function does not make the message drain window a child window, applications with full-screen capabilities can use it.
<H3><HR COLOR="#0000FF"><A NAME="put_Owner">IVideoWindow::put_Owner</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets an owning parent for the video window.

<P><B>HRESULT</B> <B>put_Owner</B><B>(</B><BR>&nbsp;&nbsp;<B>OAHWND</B> <I>Owner</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Owner</I>
 </DT><DD>[in] Handle of new owner window.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method offers a way for applications to set the owner of the video window. This is often used when playing videos in compound documents. This method changes the parent of the renderer window and sets the WS_CHILD style for the video window.

<P>To forward video window messages to the parent window, use the <A HREF="/directx/dxm/help/ds/dssd0183.htm#put_MessageDrain">IVideoWindow::put_MessageDrain</A> method, supplying the window handle of the parent window. This method does not post messages automatically.

<P>After using this method to set the owner of a video window, you must reset the owner to NULL (by calling put_Owner(NULL)) before releasing the filter graph. Otherwise, messages will continue to be sent to this window and errors will likely occur when the application is terminated.
<H3><HR COLOR="#0000FF"><A NAME="put_Top">IVideoWindow::put_Top</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the y-axis coordinate of the video window.

<P><B>HRESULT</B> <B>put_Top</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>Top</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Top</I>
</DT><DD>[in] The y-axis origin of the video window.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>Calling this method does not affect the height of the video window.
<H3><HR COLOR="#0000FF"><A NAME="put_Visible">IVideoWindow::put_Visible</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Changes the visibility of the video window.

<P><B>HRESULT</B> <B>put_Visible</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>Visible</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Visible</I>
</DT><DD>[in] Boolean flag that is compatible with Automation.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>If the <I>Visible</I> parameter is set to OATRUE (&#150;1), the window is shown.
If it is set to OAFALSE (0), the window is hidden.
<H3><HR COLOR="#0000FF"><A NAME="put_Width">IVideoWindow::put_Width</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the video window's width.

<P><B>HRESULT</B> <B>put_Width</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>Width</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Width</I>
</DT><DD>[in] Width to be set.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>Calling this method does not affect the video window's x-axis coordinate.
<H3><HR COLOR="#0000FF"><A NAME="put_WindowState">IVideoWindow::put_WindowState</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the video window's state.

<P><B>HRESULT</B> <B>put_WindowState</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>WindowState</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>WindowState</I>
</DT><DD>[in] Describes the video window's state.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR.


<H5>Remarks</H5>
<P>This method is a wrapper for the Microsoft Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#ShowWindow">ShowWindow</A> function. <B>IVideoWindow::put_WindowState</B> passes the <I>WindowState</I> parameter on to <A HREF="/directx/dxm/help/ds/dssd0215.htm#DoShowWindow">CBaseWindow::DoShowWindow</A>, which in turn passes it on to <B>ShowWindow</B>. Hence, <I>WindowState</I> can be any value that is valid for <B>ShowWindow</B>.
<H3><HR COLOR="#0000FF"><A NAME="put_WindowStyle">IVideoWindow::put_WindowStyle</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Changes the style parameters for the video window.

<P><B>HRESULT</B> <B>put_WindowStyle</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>WindowStyle</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>WindowStyle</I>
</DT><DD>[in] Set of flags that matches a subset of the flags that can be set by the
GWL_STYLE value of the Microsoft Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#GetWindowLong">GetWindowLong</A> function.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>Use this property to change the overall style of the video window; for example, to
remove the border and caption areas of the video window. It is a fairly thin wrapper on top
of setting the GWL_STYLE value of the Microsoft Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#GetWindowLong">GetWindowLong</A>
function and therefore must be treated with care. In particular, ensure 
that the current styles are first retrieved, and then the necessary bit fields are
added or removed. With some exceptions (noted here), the acceptable flags are the same
as those allowed by the Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#CreateWindow">CreateWindow</A> function.

<P>Do not use this method to affect the window size. For example, if the
window is minimized, do not set the WS_MAXIMIZE style; doing so causes
unpredictable results. Instead, use the <A HREF="/directx/dxm/help/ds/dssd0183.htm#put_WindowState">IVideoWindow::put_WindowState</A> method
for maximizing or minimizing the window.

<P>Any of the following styles return E_INVALIDARG.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_DISABLED
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_HSCROLL
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_ICONIC
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_MAXIMIZE
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_MINIMIZE
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_VSCROLL
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="put_WindowStyleEx">IVideoWindow::put_WindowStyleEx</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the style of the control window.

<P><B>HRESULT</B> <B>put_WindowStyleEx</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>pWindowStyleEx</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pWindowStyleEx</I>
 </DT><DD>[in] Value that specifies the style of the control window.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR.


<H5>Remarks</H5>
<P>This method uses EX window styles. For a complete list of extended window styles, see the
<A HREF="/directx/dxm/help/ds/dssd0404.htm#CreateWindowEx">CreateWindowEx</A> function in the Microsoft Win32 Software Development Kit (SDK).

<P>Use this property to change the overall style of the video window; for example, to remove the
border and caption areas of the video window. It is a fairly thin wrapper on top of setting the
GWL_STYLE value of the Microsoft Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#GetWindowLong">GetWindowLong</A> function and therefore
must be treated with care. In particular, ensure that the current styles are first retrieved,
and then the necessary bit fields are added or removed.

<P>Note: Do not use the following window styles as they are not validated.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_DISABLED
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_HSCROLL
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_ICONIC
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_MAXIMIZE
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_MINIMIZE
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">WS_VSCROLL
</FONT></TD></TR></TABLE>
<P>With some exceptions (noted here), the acceptable flags are the same as those allowed by the Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#CreateWindow">CreateWindow</A> function.
<H3><HR COLOR="#0000FF"><A NAME="SetWindowForeground">IVideoWindow::SetWindowForeground</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Moves the video window to the foreground and optionally gives it focus.

<P><B>HRESULT</B> <B>SetWindowForeground</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>Focus</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Focus</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0404.htm#Long">Long</A> value that specifies whether the video window will get focus. A value of &#150;1 gives the window focus and 0 does not.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The method succeeded.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>Focus</I> doesn't equal &#150;1 or 0.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_E_NOT_CONNECTED">VFW_E_NOT_CONNECTED</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The current filter isn't connected to a complete filter graph.
</FONT></TD></TR></TABLE>

<H3><HR COLOR="#0000FF"><A NAME="SetWindowPosition">IVideoWindow::SetWindowPosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<P>Sets the position of the video window (not the client rectangle position) in
device coordinates.

<P><B>HRESULT</B> <B>SetWindowPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>Left</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>Top</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>Width</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>Height</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Left</I>
 </DT><DD>[in] The x-axis origin of the window.
</DD><DT><I>Top</I>
 </DT><DD>[in] The y-axis origin of the window.
</DD><DT><I>Width</I>
 </DT><DD>[in] Width of the window.
</DD><DT><I>Height</I>
 </DT><DD>[in] Height of the window.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method has the same effect as individually calling the <A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Left">IVideoWindow::put_Left</A>,
<A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Top">IVideoWindow::put_Top</A>, <A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Width">IVideoWindow::put_Width</A>, and
<A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Height">IVideoWindow::put_Height</A> methods.

<P>Specify, in window coordinates, where the video should appear. For example, setting a
destination of (100,50,200,400) positions the video playback at an origin of 100 pixels from the
left of the client area and 50 pixels from the top, with an overall size of 200 x 400 pixels. If the
video is smaller than this (or a source rectangle has been specified that is smaller than the video),
it will be stretched appropriately. Similarly, if the video is larger than the destination rectangle,
the video is compressed into the visible rectangle. There are fairly severe performance penalties
if an application does not keep the source and destination rectangles the same size.

<P>Under typical circumstances, when no destination rectangle has been set, the
video fills the entire visible client window area (regardless of
how much the user has stretched the window). Also, the destination rectangle
properties correctly return the size of the video window client area.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
