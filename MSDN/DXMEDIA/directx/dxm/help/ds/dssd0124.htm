<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICaptureGraphBuilder Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="ICaptureGraphBuilder Interface">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="ICaptureGraphBuilder"></A>

<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- ICaptureGraphBuilder Interface"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- ICaptureGraphBuilder Interface"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0091.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0123.htm">IBasicVideo Interface</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0125.htm">IConfigAviMux Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>ICaptureGraphBuilder Interface</H2>
<BR CLEAR=ALL>
<P>The <B>ICaptureGraphBuilder</B> interface enables you to build capture graphs, preview graphs, file recompression graphs, or even unusual custom graphs easily. See <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0055.htm">Recompress an AVI File</A> for more information.

<A NAME="When_to_Implement"></A><P><B>When to Implement</B>
<P>Do not implement this interface. DirectShow already does so.




<A NAME="When_to_Use"></A><P><B>When to Use</B>
<P>Use this interface in your capture and recompression applications to make it easier to build filter graphs.

<A NAME="Methods_in_Vtable_Or"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#QueryInterface">QueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">AddRef</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>ICaptureGraphBuilder methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0124.htm#SetFiltergraph">SetFiltergraph</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tells the graph builder object which filter graph to use.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0124.htm#GetFiltergraph">GetFiltergraph</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the filter graph that the builder is using.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0124.htm#SetOutputFileName">SetOutputFileName</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Creates the rendering section of the filter graph, which will save bits to disk with the specified file name.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0124.htm#FindInterface">FindInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Looks for the specified interface on the filter, upstream and downstream from the filter, and, optionally, only on the output pin of the given category.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0124.htm#RenderStream">RenderStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Connects a source filter's pin, of an optionally specified category, to the rendering filter, and optionally through another filter.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0124.htm#ControlStream">ControlStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sends stream control messages to the pin of the specified category on one or more capture filters in a graph. 

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0124.htm#AllocCapFile">AllocCapFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Preallocates a capture file to a specified size.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0124.htm#CopyCaptureFile">CopyCaptureFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Copies the valid media data from the preallocated capture file.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="AllocCapFile">ICaptureGraphBuilder::AllocCapFile</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0124.htm">ICaptureGraphBuilder Interface</A>
<P>Preallocates a capture file to a specified size.

<P><B>HRESULT</B> <B>AllocCapFile</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCOLESTR</B> <I>lpwstr</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORDLONG</B> <I>dwlSize</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpwstr</I>


 </DT><DD>[in] Pointer to a Unicode string containing the name of the file to create or resize.
</DD><DT><I>dwSize</I>
 </DT><DD>[in] Size, in bytes, of the file to be allocated.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. 

<H5>Remarks</H5>
<P>The call will fail if the file is read-only. For best capture results, always capture to a defragmented, preallocated capture file that is larger than the size of the capture data.

<P>Note that under the current DirectShow implementation of this interface, a call to this method will be much quicker on a Windows 95 platform than it will be on a Windows NT platform.


<H3><HR COLOR="#0000FF"><A NAME="ControlStream">ICaptureGraphBuilder::ControlStream</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0124.htm">ICaptureGraphBuilder Interface</A>
<P>Sends stream control messages to the pin of the specified category on one or more capture filters in a graph.
<P><B>HRESULT</B> <B>ControlStream</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <I>*pCategory</I><B>,</B><BR>&nbsp;&nbsp;<B>IBaseFilter</B> <I>*pFilter</I><B>,</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>*pstart</I><B>,</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>*pstop</I><B>,</B><BR>&nbsp;&nbsp;<B>WORD</B> <I>wStartCookie</I><B>,</B><BR>&nbsp;&nbsp;<B>WORD</B> <I>wStopCookie</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B> <BR><H5>Parameters</H5>
<DL><DT><I>pCategory</I>
 </DT><DD>[in] Pointer to a GUID specifying the output pin category. Typical values include the following. See <A HREF="/directx/dxm/help/ds/dssd0303.htm#AMPROPERTY_PIN_CATEG">AMPROPERTY_PIN_CATEGORY</A> for a list of all pin categories. NULL indicates control all capture filters in the graph.
<UL><LI><A HREF="/directx/dxm/help/ds/dssd0303.htm#PIN_CATEGORY_CAPTURE">PIN_CATEGORY_CAPTURE</A>
<LI><A HREF="/directx/dxm/help/ds/dssd0303.htm#PIN_CATEGORY_PREVIEW">PIN_CATEGORY_PREVIEW</A>
<LI>NULL
</UL>
</DD><DT><I>pFilter</I>
 </DT><DD>[in] Pointer to an <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface on the filter to control. Specifying NULL controls all capture filters in the graph. You will get one notification for each capture filter.
</DD><DT><I>pstart</I>
 </DT><DD>[in] Pointer to the start time for capture. NULL means start now. <B><A NAME="MAX_TIME">MAX_TIME</A></B> means cancel previous request, or take no action if there is no previous request.
</DD><DT><I>pstop</I>
 </DT><DD>[in] Pointer to the stop time for capture. NULL means stop now. <I>MAX_TIME</I> means cancel previous request, or take no action if there is no previous request.
</DD><DT><I>wStartCookie</I>
 </DT><DD>[in] Specifies a particular value to be sent when the start occurs.
</DD><DT><I>wStopCookie</I>
 </DT><DD>[in] Specifies a particular value to be sent when the stop occurs.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. The current DirectShow implementation returns S_FALSE if the stop notification is sent before the last sample sent by the capture filter is rendered, otherwise returns S_OK. 

<P>If this method returns S_FALSE, the application might want to wait before destroying the filter graph to allow all samples to pass through the graph and be rendered. Otherwise, samples might be lost.

<P>If a capture filter does not support the <A HREF="/directx/dxm/help/ds/dssd0109.htm">IAMStreamControl</A> interface on its preview pin, the filter should return the failure code E_NOINTERFACE in response to a call to this method. 

<H5>Remarks</H5>
<P>Use this method for frame-accurate capture, or for individual control of capture and preview. For example, you could turn off writing of the captured image to disk if you only want to preview the captured image.

<P>This method calls the <A HREF="/directx/dxm/help/ds/dssd0109.htm">IAMStreamControl</A> interface on the pins. 

<P>This method sends one notification for each filter found with a pin of the specified category.
<H3><HR COLOR="#0000FF"><A NAME="CopyCaptureFile">ICaptureGraphBuilder::CopyCaptureFile</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0124.htm">ICaptureGraphBuilder Interface</A>
<P>Copies the valid media data from the preallocated capture file.
<P><BR><B>HRESULT</B> <B>CopyCaptureFile</B><B>(</B><BR>&nbsp;&nbsp;<B>[in]</B> <B>LPOLESTR</B> <I>lpwstrOld</I><B>,</B><BR>&nbsp;&nbsp;<B>[in]</B> <B>LPOLESTR</B> <I>lpwstrNew</I><B>,</B><BR>&nbsp;&nbsp;<B>[in]</B> <B>int</B> <I>fAllowEscAbort</I><B>,</B><BR>&nbsp;&nbsp;<B>[in]</B> <B>IAMCopyCaptureFileProgress</B> <I>*pCallback</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpwstrOld</I>
 </DT><DD>[in] Pointer to a Unicode string containing the source file name.
</DD><DT><I>lpwstrNew</I>
 </DT><DD>[in] Pointer to a Unicode string containing the destination file name. Valid data is copied to this file.
</DD><DT><I>fAllowEscAbort</I>
 </DT><DD>[in] TRUE indicates that pressing the <SMALL>ESC</SMALL> key aborts the copy operation, FALSE indicates that this method will ignore that keystroke.
</DD><DT><I>pCallback</I>
 </DT><DD>[in] Optional pointer to an <A HREF="/directx/dxm/help/ds/dssd0097.htm">IAMCopyCaptureFileProgress</A> interface that you implement to show the progress (percentage complete) of the copy operation.

</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. 

<H5>Remarks</H5>
<P>The new file will contain only valid data and therefore can be much shorter than the source file. Typically, you will always capture to the same huge preallocated file and use this method to copy the data you want to save from each capture to a new file.

<P>If you specify <I>pCallback</I>, the <A HREF="/directx/dxm/help/ds/dssd0097.htm#Progress">Progress</A> method on the <A HREF="/directx/dxm/help/ds/dssd0097.htm">IAMCopyCaptureFileProgress</A> interface will be called periodically with an integer between 0 and 100 representing the percentage complete. 

<H3><HR COLOR="#0000FF"><A NAME="FindInterface">ICaptureGraphBuilder::FindInterface</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0124.htm">ICaptureGraphBuilder Interface</A>
<P>Looks for the specified interface on the filter, upstream and downstream from the filter, and, optionally, only on the output pin of the given category.
<P><B>HRESULT</B> <B>FindInterface</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <I>*pCategory</I><B>,</B><BR>&nbsp;&nbsp;<B>IBaseFilter</B> <I>*pf</I><B>,</B><BR>&nbsp;&nbsp;<B>REFIID</B> <I>riid</I><B>,</B><BR>&nbsp;&nbsp;<B>void</B> <I>**ppint</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><BR><H5>Parameters</H5>
<DL><DT><I>pCategory</I>
 </DT><DD>[in] Pointer to a GUID specifying the output pin category. Typical values include the following. See <A HREF="/directx/dxm/help/ds/dssd0303.htm#AMPROPERTY_PIN_CATEG">AMPROPERTY_PIN_CATEGORY</A> for a list of all pin categories. NULL indicates search all the output pins regardless of category.
<UL><LI><A HREF="/directx/dxm/help/ds/dssd0303.htm#PIN_CATEGORY_CAPTURE">PIN_CATEGORY_CAPTURE</A>
<LI><A HREF="/directx/dxm/help/ds/dssd0303.htm#PIN_CATEGORY_PREVIEW">PIN_CATEGORY_PREVIEW</A>
<LI>NULL
</UL>
</DD><DT><I>pf</I>
 </DT><DD>[in] Pointer to an <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface of the filter.
</DD><DT><I>riid</I>
 </DT><DD>[in] Reference ID of the desired interface. 
</DD><DT><I>ppint</I>
 </DT><DD>[out] Address of a void pointer. If the interface was found, this method initializes <I>ppint</I> so that it contains the address of a pointer to the found interface. Call the <A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A> method to decrement the reference count when you're done with the interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. 

<H5>Remarks</H5>
<P>This method looks for the interface on the filter, and upstream and downstream of the filter, unless a category is given. If a category is given, it only looks downstream of the output pin of that category.  It can be used to find interfaces on renderers, multiplexers, TV tuners, crossbars, and so forth.

<p>If <I>pCategory</I> == &amp;LOOK_UPSTREAM_ONLY, then the graph builder will look upstream of the filter given in parameter <I>pf</I>, but not on the filter itself, nor downstream of the filter.

<p>If <I>pCategory</I> == &amp;LOOK_DOWNSTREAM_ONLY, then the graph builder will look downstream of the filter given in parameter <I>pf</I>, but not on the filter itself, nor upstream of the filter.

<p>For example, capture graphs can have two crossbars in them, a video crossbar (upstream of the video capture filter) and an audio crossbar (upstream of the video crossbar). You can find the video crossbar filter that implements IAMCrossbar as shown in the following code:
<PRE><FONT FACE="Courier" SIZE="2">
IAMCrossbar *pVideoCrossbar;
FindInterface(NULL, pVideoCaptureFilter, IID_IAMCrossbar, (void **)&pVideoCrossbar);
</FONT></PRE>

<p>You can then find the IAMCrossbar filter of the audio crossbar as shown in the following code:

<PRE><FONT FACE="Courier" SIZE="2">
IBaseFilter *pBaseFilter;
IAMCrossbar *pAudioCrossbar;
pVideoCrossbar->QueryInterface(IID_IBaseFilter, (void **)pBaseFilter);
FindInterface(&LOOK_UPSTREAM_ONLY, pBaseFilter, IID_IAMCrossbar, (void **)&pAudioCrossbar);
pBaseFilter->Release();
</FONT></PRE>

<p>See AMCAP, the capture sample in the SDK for an example of how to use interface.


<H3><HR COLOR="#0000FF"><A NAME="GetFiltergraph">ICaptureGraphBuilder::GetFiltergraph</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0124.htm">ICaptureGraphBuilder Interface</A>
<P>Retrieves the filter graph that the builder is using.
<P><B>HRESULT</B> <B>GetFiltergraph</B><B>(</B><BR>&nbsp;&nbsp;<B>IGraphBuilder</B> <I>**ppfg</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppfg</I>
 </DT><DD>[out] Address of a pointer to an <A HREF="/directx/dxm/help/ds/dssd0151.htm">IGraphBuilder</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. 


<H5>Remarks</H5>
<P>This method increments the reference count on the <A HREF="/directx/dxm/help/ds/dssd0151.htm">IGraphBuilder</A> interface; be sure to decrement the reference count on <B>IGraphBuilder</B> by calling the <A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A> method.

<H3><HR COLOR="#0000FF"><A NAME="RenderStream">ICaptureGraphBuilder::RenderStream</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0124.htm">ICaptureGraphBuilder Interface</A>
<P>Connects a source filter's pin, of an optionally specified category, to the rendering filter, and optionally through another filter.
<P><B>HRESULT</B> <B>RenderStream</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <I>*pCategory</I><B>,</B><BR>&nbsp;&nbsp;<B>IUnknown</B> <I>*pSource</I><B>,</B><BR>&nbsp;&nbsp;<B>IBaseFilter</B> <I>*pfCompressor</I><B>,</B><BR>&nbsp;&nbsp;<B>IBaseFilter</B> <I>*pfRenderer</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCategory</I>
 </DT><DD>[in] Pointer to a GUID specifying which output pin of the source filter to connect. Typical values include the following. See <A HREF="/directx/dxm/help/ds/dssd0303.htm#AMPROPERTY_PIN_CATEG">AMPROPERTY_PIN_CATEGORY</A> for a list of all pin categories. NULL indicates render the only output pin, regardless of category.
<UL><LI><A HREF="/directx/dxm/help/ds/dssd0303.htm#PIN_CATEGORY_CAPTURE">PIN_CATEGORY_CAPTURE</A>
<LI><A HREF="/directx/dxm/help/ds/dssd0303.htm#PIN_CATEGORY_PREVIEW">PIN_CATEGORY_PREVIEW</A>
<LI>NULL
</UL>
</DD><DT><I>pSource</I>
 </DT><DD>[in] Pointer to an <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> or an <A HREF="/directx/dxm/help/ds/dssd0170.htm">IPin</A> interface representing either the source filter or an output pin. Source filters are typically a file source filter, such as an AVI file source filter or a capture filter. 
</DD><DT><I>pfCompressor</I>
 </DT><DD>[in] Pointer to an <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface representing the optional compression filter.
</DD><DT><I>pfRenderer</I>
 </DT><DD>[in] Pointer to an <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface representing the renderer. You can use the <I>ppf</I> (multiplexer) parameter from <A HREF="/directx/dxm/help/ds/dssd0124.htm#SetOutputFileName">ICaptureGraphBuilder::SetOutputFileName</A> to supply this value.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. 

<H5>Remarks</H5>
<P>If you specify <A HREF="/directx/dxm/help/ds/dssd0303.htm#PIN_CATEGORY_CAPTURE">PIN_CATEGORY_CAPTURE</A> for <I>pCategory</I> and a capture filter for <I>pSource</I>, this method instantiates and connects additional required upstream filters, such as TV tuners and crossbars. It then renders the capture pin of <I>pSource</I>. 

<P>If <I>pSource</I> is a pin, then specify NULL for <I>pCategory</I> and this method renders the stream from that pin.

<P>If the source filter has only one output pin, specify NULL for <I>pCategory</I>.

<P>All required filters must be present in the graph before the application calls this method.
<p>Some capture filters that work with new WDM VPE (Video Port Extension) video capture hardware have VIDEO PORT pins instead of PREVIEW pins meant for previewing. These VIDEO PORT pins do not connect directly to a video renderer, but instead to a special filter called the <A HREF="/directx/dxm/help/ds/dssd0347.htm">Overlay Mixer</A>. Your application does not need to worry about this. All you have to do is call <B>RenderStream</B> with &PIN_CATEGORY_PREVIEW and the capture graph builder will correctly render the VIDEO PORT pin through an overlay mixer if that is what is necessary.


<p>When you render a capture or preview pin of a video capture filter (using <B>RenderStream</B> with the <I>&PIN_CATEGORY_CAPTURE</I> or <I>&PIN_CATEGORY_PREVIEW</I> category) and the capture filter only has a capture pin but no preview pin, the <A HREF="/directx/dxm/help/ds/smarttee.htm"> Smart Tee</A> filter (QCAP.DLL) will be used automatically to allow simultaneous capture and preview. For example, calling <B>RenderStream</B> with the <I>&PIN_CATEGORY_CAPTURE</I> category will actually connect a Smart Tee filter to the capture pin of the filter, and then render the capture pin of the Smart Tee. If you then call <B>RenderStream</B> with the <I>&PIN_CATEGORY_PREVIEW</I> category on the capture pin, it will actually render the preview pin of the Smart Tee. If calling <B>RenderStream</B> with <I>&PIN_CATEGORY_PREVIEW</I> results in using the capture pin and a Smart Tee filter, <B>RenderStream</B> will return VFW_S_NOPREVIEWPIN to indicate this. Thus, if <A HREF="/directx/dxm/help/ds/dssd0124.htm#FindInterface">FindInterface</A> fails to find a preview interface, you may need to call <A HREF="/directx/dxm/help/ds/dssd0124.htm#FindInterface">FindInterface</A> with the &PIN_CATEGORY_PREVIEW category and with the &PIN_CATEGORY_CAPTURE category, since the preview interface may be found by looking downstream of the capture pin of the capture filter. See the AMCAP.cpp sample for an example of using this interface and writing a capture application.

<H3><HR COLOR="#0000FF"><A NAME="SetFiltergraph">ICaptureGraphBuilder::SetFiltergraph</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0124.htm">ICaptureGraphBuilder Interface</A>
<P>Tells the graph builder object which filter graph to use.
<P><B>HRESULT</B> <B>SetFiltergraph</B><B>(</B><BR>&nbsp;&nbsp;<B>IGraphBuilder</B> <I>*pfg</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pfg</I>
 </DT><DD>[in] Pointer to an <A HREF="/directx/dxm/help/ds/dssd0151.htm">IGraphBuilder</A> interface that specifies the filter graph to use for subsequent calls to the <A HREF="/directx/dxm/help/ds/dssd0145.htm#AddFilter">IFilterGraph::AddFilter</A> method. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. 

<H5>Remarks</H5>
<P>The graph builder will automatically create a filter graph if you don't call this method. If you call this method after the graph builder has created its own filter graph, the call will fail.
<H3><HR COLOR="#0000FF"><A NAME="SetOutputFileName">ICaptureGraphBuilder::SetOutputFileName</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0124.htm">ICaptureGraphBuilder Interface</A>
<P>Creates the rendering section of the filter graph, which will save bits to disk with the specified file name.
<P><B>HRESULT</B> <B>SetOutputFileName</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <I>*pType</I><B>,</B><BR>&nbsp;&nbsp;<B>LPCOLESTR</B> <I>lpwstrFile</I><B>,</B><BR>&nbsp;&nbsp;<B>IBaseFilter</B> <I>**ppf</I><B>,</B><BR>&nbsp;&nbsp;<B>IFileSinkFilter</B> <I>**pSink</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pType</I>
 </DT><DD>[in] Pointer to a <A HREF="/directx/dxm/help/ds/dssd0412.htm#GUID">GUID</A> representing the media subtype. Must be
<P><FONT FACE="Courier New">&amp;MEDIASUBTYPE_Avi</FONT> 
<P>because AVI is currently the only supported output format. 
</DD><DT><I>lpwstrFile</I>
 </DT><DD>[in] Pointer to a Unicode string containing the output file name.
</DD><DT><I>ppf</I>
 </DT><DD>[out] Address of a pointer to an <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface representing the multiplexer filter.

 This method increments the reference count on the <B>IBaseFilter</B> interface so you must decrement the reference count by using 
the <A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A> method on this parameter when done using the filter. 


</DD><DT><I>pSink</I>
 </DT><DD>[out] Address of a pointer to an <A HREF="/directx/dxm/help/ds/dssd0142.htm">IFileSinkFilter</A> interface representing the file writer. This method increments the reference count on the <B>IFileSinkFilter</B> interface so you must decrement the reference count using <A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A> when done using the filter. 


</DD></DL>
<H5>Return Values</H5>
<P><TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning 
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument. Audio-video interleaved (AVI) is the only supported output format.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_OUTOFMEMORY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Out of memory.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_UNEXPECTED </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Unexpected error occurred.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Instance of the AVI multiplexer filter was successfully created.

</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method inserts the multiplexer and the file writer into the filter graph and calls <A HREF="/directx/dxm/help/ds/dssd0142.htm#SetFileName">IFileSinkFilter::SetFileName</A> to set the output file name.

<P>You can use the <I>ppf</I> parameter returned by this method as the <I>pfRenderer</I> parameter in calls to <A HREF="/directx/dxm/help/ds/dssd0124.htm#RenderStream">RenderStream</A>.

<P>You can use the <I>pSink</I> parameter from this method in a call to <A HREF="/directx/dxm/help/ds/dssd0142.htm#SetFileName">SetFileName</A> to change the file name set by <B>ICaptureGraphBuilder::SetOutputFileName</B>. 

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
