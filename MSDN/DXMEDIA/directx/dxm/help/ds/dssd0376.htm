<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMultiMediaStream Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IMultiMediaStream Interface">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="IMultiMediaStream"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IMultiMediaStream Interface"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IMultiMediaStream Interface"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0375.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0375.htm">Multimedia Streaming Reference</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0377.htm">IMediaStream Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>IMultiMediaStream Interface</H2>
<BR CLEAR=ALL>
<P>The <B>IMultiMediaStream</B> interface provides methods that control a multimedia stream and provide access to its underlying media streams. A multimedia stream is the highest-level streaming object and can contain one or more media streams. While each media stream is media-type specific (audio, video, and so on), multimedia streams are generic across all types because they must provide access to a number of streams that can have different media types. <B>IMultiMediaStream</B> interface methods enable you to enumerate and retrieve pointers to the specific streams; <A HREF="/directx/dxm/help/ds/dssd0377.htm">IMediaStream</A> interface methods provide specific control over the media stream behavior.

<P>For sample code which implements the multimedia streaming interfaces see <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0390.htm#mm_code">Multimedia Streaming Sample Code</A>.

<A NAME="When_to_Implement"></A><P><B>When to Implement</B>
<P>Implement this interface when you want create containers for a specific type of media stream.

<A NAME="When_to_Use"></A><P><B>When to Use</B>
<P>Use this interface when your application must enumerate and control a multimedia stream's underlying, type-specific streams.

<A NAME="Methods_in_Vtable_Or"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#QueryInterface">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IMultiMediaStream methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0376.htm#GetInformation">GetInformation</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the capabilities and stream type of a multimedia stream. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0376.htm#GetMediaStream">GetMediaStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a media stream that has the specified purpose ID.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0376.htm#EnumMediaStreams">EnumMediaStreams</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a media stream from a multimedia stream by zero-based index.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0376.htm#GetState">GetState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the multimedia stream's current state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0376.htm#SetState">SetState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the media stream to either a running or stopped state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0376.htm#GetTime">GetTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current time from the multimedia stream's clock, if it has a clock.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0376.htm#GetDuration">GetDuration</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the media stream's duration.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0376.htm#Seek">Seek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the seek location of all derived media streams to the specified time.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0376.htm#GetEndOfStreamEventHandle">GetEndOfStreamEventHandle</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the handle for the event triggered when the stream completes playback.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="EnumMediaStreams">IMultiMediaStream::EnumMediaStreams</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0376.htm">IMultiMediaStream Interface</A>
<P>Retrieves a media stream from a multimedia stream by zero-based index.
<P><B>HRESULT</B> <B>EnumMediaStreams</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>Index</I><B>,</B><BR>&nbsp;&nbsp;<B>IMediaStream**</B> <I>ppMediaStream</I> <B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>Index</I>
 </DT><DD>[in] Index of the stream array to check.
</DD><DT><I>ppMediaStream</I>
 </DT><DD>[out] Address of a pointer to an <A HREF="/directx/dxm/help/ds/dssd0377.htm">IMediaStream</A> interface object. On return, it contains a pointer to the stream at the specified index.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>ppMediaStream</I> pointer is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_FALSE
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>Index</I> is out of range; no streams are left to enumerate. When the method returns this value, it also sets <I>ppMediaStream</I> to NULL.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>You should call this method until it returns S_FALSE, which indicates that the stream enumeration is complete.
<H3><HR COLOR="#0000FF"><A NAME="GetDuration">IMultiMediaStream::GetDuration</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0376.htm">IMultiMediaStream Interface</A>
<P>Returns the media stream's duration.
<P><B>HRESULT</B> <B>GetDuration</B><B>(</B><BR>&nbsp;&nbsp;<B>STREAM_TIME</B> <I>*pDuration</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>pDuration</I>
 </DT><DD>[out] Pointer to a <A HREF="/directx/dxm/help/ds/dssd0387.htm#STREAM_TIME">STREAM_TIME</A> value that will contain the media duration.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value of <I>pDuration</I> is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MS_E_WRITESTREAM
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The media stream is writable and therefore has no duration.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_FALSE
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream contains live data or this method couldn't determine the duration. On return, this method sets <I>pDuration</I> to zero.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream contains recorded media. On return, <I>pDuration</I> contains duration of media.
</FONT></TD></TR></TABLE>

<H3><HR COLOR="#0000FF"><A NAME="GetEndOfStreamEventHandle">IMultiMediaStream::GetEndOfStreamEventHandle</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0376.htm">IMultiMediaStream Interface</A>
<P>Retrieves the handle for the event triggered when the stream completes playback.
<P><B>HRESULT</B> <B>GetEndOfStreamEventHandle</B><B>(</B><BR>&nbsp;&nbsp;<B>HANDLE*</B> <I>phEOS</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>phEOS</I>
 </DT><DD>[out] Pointer to an event HANDLE returned by the current object when it completes playback. If no HANDLE is associated with the object, this value will be NULL.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful or E_POINTER if one or more of the required parameters are NULL.

<H5>Remarks</H5>
<P>The Microsoft&#174; Win32&#174; <A HREF="/directx/dxm/help/ds/dssd0404.htm#WaitForSingleObject">WaitForSingleObject</A> and <A HREF="/directx/dxm/help/ds/dssd0404.htm#WaitForMultipleObjec">WaitForMultipleObjects</A> functions use the retrieved handle to watch for completion of playback.
<H3><HR COLOR="#0000FF"><A NAME="GetInformation">IMultiMediaStream::GetInformation</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0376.htm">IMultiMediaStream Interface</A>
<P>Retrieves the capabilities of a media stream that matches the specified media type.<P><B>HRESULT</B> <B>GetInformation</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwFlags</I><B>,</B><BR>&nbsp;&nbsp;<B>STREAM_TYPE</B> <I>*pStreamType</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pwdFlags</I>
 </DT><DD>[out] Pointer to a value that will contain a combination of one or more of the following flags. Can be NULL.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value</B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MMSSF_ASYNCHRONOUS
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stream supports asynchronous sample updates. All implementations of <A HREF="/directx/dxm/help/ds/dssd0376.htm">IMultiMediaStream</A> will support the asynchronous updates; this flag confirms it.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MMSSF_HASCLOCK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stream has a clock.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MMSSF_SUPPORTSEEK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stream supports seeking.
</FONT></TD></TR></TABLE>
</DD><DT><I>pStreamType</I>
 </DT><DD>[out] Pointer to a <A HREF="/directx/dxm/help/ds/dssd0387.htm#STREAM_TYPE">STREAM_TYPE</A> enumeration type that will contain the media type information for the derived media streams. Can be NULL.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful.


<H5>Remarks</H5>
<P>A stream's capabilities include whether it has a clock, if it supports seeking, and whether it supports asynchronous updating. 
<H3><HR COLOR="#0000FF"><A NAME="GetMediaStream">IMultiMediaStream::GetMediaStream</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0376.htm">IMultiMediaStream Interface</A>
<P>Retrieves a media stream that has the specified purpose ID.
<P><B>HRESULT</B> <B>GetMediaStream</B><B>(</B><BR>&nbsp;&nbsp;<B>REFMSPID</B> <I>idPurpose</I><B>,</B><BR>&nbsp;&nbsp;<B>IMediaStream</B> <I>**ppMediaStream</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>idPurpose</I>
 </DT><DD>Value that specifies the desired stream.
</DD><DT><I>ppMediaStream</I>
 </DT><DD>Address of a pointer to an <A HREF="/directx/dxm/help/ds/dssd0377.htm">IMediaStream</A> interface that will point to the desired media stream.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>ppMediaStream</I> pointer is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MS_E_NOSTREAM
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No stream has the specified purpose ID.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>If a stream exists that matches the purpose ID in <I>idPurpose</I>, the <I>ppMediaStream</I> parameter points to the stream and increments its reference count.

<P>MSPID_PrimaryVideo and MSPID_PrimaryAudio, which represent the primary video and audio streams, are the most commonly used purpose IDs. 
<H3><HR COLOR="#0000FF"><A NAME="GetState">IMultiMediaStream::GetState</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0376.htm">IMultiMediaStream Interface</A>
<P>Retrieves the multimedia stream's current state.
<P><B>HRESULT</B> <B>GetState</B><B>(</B><BR>&nbsp;&nbsp;<B>STREAM_STATE*</B> <I>pCurrentState</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>pCurrentState</I>
 </DT><DD>[out] Pointer to the <A HREF="/directx/dxm/help/ds/dssd0387.htm#STREAM_STATE">STREAM_STATE</A> enumerated type that will contain the current multimedia stream's state.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful or E_POINTER if <I>pCurrentState</I> is invalid.

<H3><HR COLOR="#0000FF"><A NAME="GetTime">IMultiMediaStream::GetTime</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0376.htm">IMultiMediaStream Interface</A>
<P>Retrieves the current time from the multimedia stream's clock, if it has a clock.
<P><B>HRESULT</B> <B>GetTime</B><B>(</B><BR>&nbsp;&nbsp;<B>STREAM_TIME*</B> <I>pCurrentTime</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>pCurrentTime</I>
 </DT><DD>[out] Pointer to a STREAM_TIME value that will contain the current time, if the media stream has a clock.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>pCurrentTime</I> pointer is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_FALSE
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream doesn't have a clock; <I>*pCurrentTime</I> is zero.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream has a clock and the method succeeded; <I>pCurrentTime</I> contains the current time.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>If the stream doesn't have a clock, this method sets <I>*pCurrentTime</I> to zero and returns S_FALSE. If a stream has a clock, the stream sample times are relative to the stream's clock.

<P>STREAM_TIME is defined as a <B>LONGLONG</B> value.
<H3><HR COLOR="#0000FF"><A NAME="Seek">IMultiMediaStream::Seek</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0376.htm">IMultiMediaStream Interface</A>
<P>Sets the seek location of all contained media streams to the specified time. 
<P><B>HRESULT</B> <B>Seek</B><B>(</B><BR>&nbsp;&nbsp;<B>STREAM_TIME</B> <I>SeekTime</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>SeekTime</I>
 </DT><DD>[in] <A HREF="/directx/dxm/help/ds/dssd0387.htm#STREAM_TIME">STREAM_TIME</A> value that specifies the seek time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One of the pointers is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MS_E_NOSEEKING
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One or more media streams don't support seeking.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MS_E_WRITESTREAM
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The streams are writable and therefore don't support seeking.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method won't work on streams that don't support seeking. Before calling this method, retrieve the stream's capabilities by calling <A HREF="/directx/dxm/help/ds/dssd0376.htm#GetInformation">IMultiMediaStream::GetInformation</A>; if the retrieved value includes the MMSSF_SUPPORTSEEK flag, you can call this method.

<P>When seeking a stream that has a clock, the current time can change to an unpredictable value, including a time before the desired seek time. This causes the method to fail.

<P>This method seeks to the specified time in all the media streams derived from the multimedia stream object.




<H3><HR COLOR="#0000FF"><A NAME="SetState">IMultiMediaStream::SetState</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0376.htm">IMultiMediaStream Interface</A>
<P>Sets the media stream to either a running or stopped state.
<P><B>HRESULT</B> <B>SetState</B><B>(</B><BR>&nbsp;&nbsp;<B>STREAM_STATE</B> <I>NewState</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>NewState</I>
 </DT><DD>[in] A <A HREF="/directx/dxm/help/ds/dssd0387.htm#STREAM_STATE">STREAM_STATE</A> enumeration value that specifies the new media stream state.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK.

<H5>Remarks</H5>
<P>When you set the stream to STREAMSTATE_STOP, this method deletes all data still pending.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
