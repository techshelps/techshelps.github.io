<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IVPBaseConfig Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IVPBaseConfig Interface">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="IVPBaseConfig"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IVPBaseConfig Interface"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IVPBaseConfig Interface"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0091.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow Interface</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0185.htm">IVPBaseNotify Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>IVPBaseConfig Interface</H2>
<BR CLEAR=ALL>
<P><B>IVPBaseConfig</B> enables a video port (VP) or overlay mixer filter to communicate with a VP driver (decoder), to set and retrieve configuration information. This interface assumes that the mixer filter creates the video port. The <A HREF="/directx/dxm/help/ds/dssd0186.htm">IVPConfig</A> interface derives from this interface. See also <A HREF="/directx/dxm/help/ds/dssd0185.htm">IVPBaseNotify</A> and <A HREF="/directx/dxm/help/ds/dssd0187.htm">IVPNotify</A>.

<A NAME="When_to_Implement"></A><P><B>When to Implement</B>
<P>The Windows Driver Model (WDM) Ksproxy filter implements this interface so you won't need to implement it in most cases. Implement this interface when you need this functionality on a platform that does not support WDM, or when you need to alter the default behavior.

<A NAME="When_to_Use"></A><P><B>When to Use</B>
<P>The <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0349.htm#VP_Mixer">Overlay Mixer</A> filter uses this interface so you won't need to use it in most cases. Use this interface when you implement your own overlay mixer filter.

<A NAME="Methods_in_Vtable_Or"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#QueryInterface">QueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">AddRef</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IVPBaseConfig methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#GetConnectInfo">GetConnectInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves connection information structures.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#SetConnectInfo">SetConnectInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the index for the current video port connection information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#GetVPDataInfo">GetVPDataInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current video port data information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#GetMaxPixelRate">GetMaxPixelRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the maximum pixels per second rate for a given width and height.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#InformVPInputFormats">InformVPInputFormats</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the device what video formats the video port supports.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#GetVideoFormats">GetVideoFormats</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the video formats the decoder supports.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#SetVideoFormat">SetVideoFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the format that the video will use.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#SetInvertPolarity">SetInvertPolarity</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Reverses the current polarity the decoder uses.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#GetOverlaySurface">GetOverlaySurface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines whether the overlay mixer should use the driver's overlay surface and if so retrieves a pointer to the surface.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#SetDirectDrawKernelHandle">SetDirectDrawKernelHandle</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the DirectDraw&#174; kernel handle for the decoder's <A HREF="/directx/dxm/help/ds/dssd0417.htm#minidriver">minidriver</A> to use.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#SetVideoPortID">SetVideoPortID</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the port ID that the video will use.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#SetDDSurfaceKernelHandle">SetDDSurfaceKernelHandle</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the kernel handle that the DirectDraw surface will use.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0184.htm#SetSurfaceParameters">SetSurfaceParameters</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tells the capture driver about the surface created on its behalf by the Overlay Mixer or VBI surface filter.

</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="GetConnectInfo">IVPBaseConfig::GetConnectInfo</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Retrieves connection information structures.
<P><B>HRESULT</B> <B>GetConnectInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDWORD</B> <I>pdwNumConnectInfo</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDDVIDEOPORTCONNECT</B> <I>pddVPConnectInfo</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdwNumConnectInfo</I>
 </DT><DD>[in/out] Points to a buffer that contains the number of <A HREF="/directx/dxm/help/ds/dssd0404.htm#DDVIDEOPORTCONNECT">DDVIDEOPORTCONNECT</A> structures provided by the <I>pddVPConnectInfo</I> parameter. Contains the actual number of structures returned on output. If <I>pddVPConnectInfo</I> is NULL, this method updates this parameter with the number of structures supported by the driver.
</DD><DT><I>pddVPConnectInfo</I>
 </DT><DD>[in/out] Points to an array of <A HREF="/directx/dxm/help/ds/dssd0404.htm#DDVIDEOPORTCONNECT">DDVIDEOPORTCONNECT</A> structures that the driver fills in. Specify NULL to retrieve the total number of formats supported. 

</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the count or structures were retrieved, or a driver error.

<H5>Remarks</H5>
<P>This method retrieves the various connection information structures such as <B>GUID</B> and port width structures, in an array of structures specified by <I>pddVPConnectInfo</I>. The callee must allocate the correct amount of space for the number of structures requested. 

<P>Set the index for connection information by using the <A HREF="/directx/dxm/help/ds/dssd0184.htm#SetConnectInfo">IVPBaseConfig::SetConnectInfo</A> method.

<H3><HR COLOR="#0000FF"><A NAME="GetMaxPixelRate">IVPBaseConfig::GetMaxPixelRate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Retrieves the maximum pixels per second rate for a given width and height.
<P><B>HRESULT</B> <B>GetMaxPixelRate</B><B>(</B><BR>&nbsp;&nbsp;<B>LPAMVPSIZE</B> <I>pamvpSize</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDWORD</B> <I>pdwMaxPixelsPerSecond</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pamvpSize</I>
 </DT><DD>[in/out] Pointer to an <A HREF="/directx/dxm/help/ds/dssd0298.htm#AMVPSIZE">AMVPSIZE</A> structure containing the desired width and height. The structure receives the final dimensions upon return.
</DD><DT><I>pdwMaxPixelsPerSecond</I>
 </DT><DD>[out] Pointer to the retrieved maximum pixels per second rate.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NULL pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The maximum pixel rate was retrieved.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method retrieves the maximum pixels per second rate expected for a given format and a given scaling factor. If the decoder does not support those scaling factors, then it returns the rate and the nearest scaling factors it supports.
<H3><HR COLOR="#0000FF"><A NAME="GetOverlaySurface">IVPBaseConfig::GetOverlaySurface</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Determines whether the overlay mixer should use the driver's overlay surface and if so retrieves a pointer to the surface.
<P><B>HRESULT</B> <B>GetOverlaySurface</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECTDRAWSURFACE</B> <I>*ppddOverlaySurface</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppddOverlaySurface</I>
 </DT><DD>[out] Address of a pointer to the retrieved DirectDraw&#174; overlay surface object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the overlay surface object was returned. (Default implementation sets the surface to NULL and returns NOERROR.)

<H5>Remarks</H5>
<P>The <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0349.htm#VP_Mixer">Overlay Mixer</A> uses this function to determine if the driver requires the <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0349.htm#VP_Mixer">Overlay Mixer</A> to use its overlay surface and if so to get a pointer to it. If this function returns NULL, then the <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0349.htm#VP_Mixer">Overlay Mixer</A> allocates its own surface.
<H3><HR COLOR="#0000FF"><A NAME="GetVideoFormats">IVPBaseConfig::GetVideoFormats</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Retrieves the video formats the decoder supports.
<P><B>HRESULT</B> <B>GetVideoFormats</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDWORD</B> <I>pdwNumFormats</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDDPIXELFORMAT</B> <I>pddPixelFormats</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdwNumFormats</I>
 </DT><DD>[in/out] Pointer to the number of <A HREF="/directx/dxm/help/ds/dssd0404.htm#DDPIXELFORMAT">DDPIXELFORMAT</A> structures provided by the <I>pddPixelFormats</I> parameter. When called, this method updates this parameter with the actual number of structures retrieved. If <I>pddPixelFormats</I> is NULL, this method updates this parameter with the total number of formats the driver supports.
</DD><DT><I>pddPixelFormats</I>
 </DT><DD>[in/out] Pointer to an array of <A HREF="/directx/dxm/help/ds/dssd0404.htm#DDPIXELFORMAT">DDPIXELFORMAT</A> structures that the driver fills. Specify NULL to retrieve only the count of supported formats in <I>pdwNumFormats</I>.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the count or structures were returned, or a driver error otherwise.

<H5>Remarks</H5>
<P>This method queries for either the number of <A HREF="/directx/dxm/help/ds/dssd0404.htm#DDPIXELFORMAT">DDPIXELFORMAT</A> structures supported by the driver, or retrieves as many structures as can fit into the provided buffer space.

<P>The callee must allocate the correct amount of space for the number of structures requested.

<P>Set the video format by using <A HREF="/directx/dxm/help/ds/dssd0184.htm#SetVideoFormat">IVPBaseConfig::SetVideoFormat</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetVPDataInfo">IVPBaseConfig::GetVPDataInfo</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Retrieves the current video port data information.
<P><B>HRESULT</B> <B>GetVPDataInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>LPAMVPDATAINFO</B> <I>pamvpDataInfo</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pamvpDataInfo</I>
 </DT><DD>[in/out] Pointer to the <A HREF="/directx/dxm/help/ds/dssd0298.htm#AMVPDATAINFO">AMVPDATAINFO</A> data information structure.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NULL pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The video port data information was retrieved.
</FONT></TD></TR></TABLE>

<H3><HR COLOR="#0000FF"><A NAME="InformVPInputFormats">IVPBaseConfig::InformVPInputFormats</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Informs the device what video formats the video port supports.
<P><B>HRESULT</B> <B>InformVPInputFormats</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwNumFormats</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDDPIXELFORMAT</B> <I>pDDPixelFormats</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwNumFormats</I>
 </DT><DD>[in] Number of video formats contained in the <I>pDDPixelFormats</I> parameter. 
</DD><DT><I>pDDPixelFormats</I>
 </DT><DD>[in] Array of pixel format structures (<A HREF="/directx/dxm/help/ds/dssd0404.htm#DDPIXELFORMAT">DDPIXELFORMAT</A>) to send to the device.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_FALSE if failure, or NOERROR otherwise.

<H5>Remarks</H5>
<P>The supplied array of supported video port formats might determine what formats the device, in turn, proposes.
<H3><HR COLOR="#0000FF"><A NAME="SetConnectInfo">IVPBaseConfig::SetConnectInfo</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Sets the index for the current video port connection information.
<P><B>HRESULT</B> <B>SetConnectInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwChosenEntry</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwChosenEntry</I>
 </DT><DD>[in] Index of new video port connect information (zero-based) to pass to the driver. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The video port connect information was set.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>Retrieve connection information by using <A HREF="/directx/dxm/help/ds/dssd0184.htm#GetConnectInfo">IVPBaseConfig::GetConnectInfo</A>.
<H3><HR COLOR="#0000FF"><A NAME="SetDDSurfaceKernelHandle">IVPBaseConfig::SetDDSurfaceKernelHandle</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Sets the kernel handle to be used by the DirectDraw surface.
<P><B>HRESULT</B> <B>SetDDSurfaceKernelHandle</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwDDKernelHandle</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwDDKernelHandle</I>
 </DT><DD>[in] DirectDraw surface handle for kernel mode, passed as a <A HREF="/directx/dxm/help/ds/dssd0404.htm#DWORD">DWORD</A> value.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The specified handle is set successfully.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method sets the DirectDraw handle on the mini driver to enable it to communicate with the video port directly.
<H3><HR COLOR="#0000FF"><A NAME="SetDirectDrawKernelHandle">IVPBaseConfig::SetDirectDrawKernelHandle</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Sets the DirectDraw&#174; kernel handle for the decoder's <A HREF="/directx/dxm/help/ds/dssd0417.htm#minidriver">minidriver</A> to use.
<P><B>HRESULT</B> <B>SetDirectDrawKernelHandle</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwDDKernelHandle</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwDDKernelHandle</I>
 </DT><DD>[in] DirectDraw kernel level handle passed as a <A HREF="/directx/dxm/help/ds/dssd0404.htm#DWORD">DWORD</A> value.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The specified handle was set successfully.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>Sets the DirectDraw kernel level handle on the <A HREF="/directx/dxm/help/ds/dssd0417.htm#minidriver">minidriver</A> to enable it to communicate with DirectDraw directly.
<H3><HR COLOR="#0000FF"><A NAME="SetInvertPolarity">IVPBaseConfig::SetInvertPolarity</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Reverses the current polarity the decoder uses.
<P><B>HRESULT</B> <B>SetInvertPolarity</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The polarity was reversed.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>Reversing polarity means asking the decoder to treat even fields like odd fields and vice versa.
<H3><HR COLOR="#0000FF"><A NAME="SetSurfaceParameters">IVPBaseConfig::SetSurfaceParameters</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Tells the capture driver about the surface created on its behalf by the Overlay Mixer or VBI surface filter.
<P><B>HRESULT</B> <B>SetSurfaceParameters</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwPitch</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwXOrigin</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwYOrigin</I> <B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwPitch</I>
 </DT><DD>[in] Pitch of the surface. Distance (or pitch) in pixels between the start pixels of two consecutive lines of the surface.
</DD><DT><I>dwXOrigin</I>
 </DT><DD>[in] X-value of the pixel at which valid data starts.
</DD><DT><I>dwYOrigin</I>
 </DT><DD>[in] Y-value of the pixel at which valid data starts.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. The current default implementation returns NOERROR if the call completed successfully, or E_NOTIMPL if the method is not implemented.

<H3><HR COLOR="#0000FF"><A NAME="SetVideoFormat">IVPBaseConfig::SetVideoFormat</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Sets the format to be used by the video.
<P><B>HRESULT</B> <B>SetVideoFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwChosenEntry</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwChosenEntry</I>
 </DT><DD>[in] Specifies the index (zero-based) of the video pixel format to use.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new video format was set.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>Retrieve the video formats by using <A HREF="/directx/dxm/help/ds/dssd0184.htm#GetVideoFormats">IVPBaseConfig::GetVideoFormats</A>.
<H3><HR COLOR="#0000FF"><A NAME="SetVideoPortID">IVPBaseConfig::SetVideoPortID</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0184.htm">IVPBaseConfig Interface</A>
<P>Sets the port ID which the video will use.
<P><B>HRESULT</B> <B>SetVideoPortID</B> <B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwVideoPortID</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwVideoPortID </I>
 </DT><DD>[in] DirectDraw video port ID.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The specified port ID is set successfully.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method sets the DirectDraw video port ID on the mini driver to enable it to communicate with the video port directly.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
