<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CBasePropertyPage Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="CBasePropertyPage Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="CBasePropertyPage"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- CBasePropertyPage Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- CBasePropertyPage Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0188.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0208.htm">CBasePin Class</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0210.htm">CBaseReferenceClock Class</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>CBasePropertyPage Class</H2>
<BR CLEAR=ALL>
<P><IMG SRC="/directx/dxm/help/ds/art/cprop01.gif" WIDTH="259" HEIGHT="143" ALT="CBasePropertyPage class hierarchy">

<P>Property pages can be implemented on filters to provide access to custom properties on the filter. This can be useful for developing and debugging the filter, because the Filter Graph Editor displays these property pages. Also, the Microsoft&#174; ActiveMovie Control queries filters in its underlying filter graph for the property pages they support and exposes them to the user. A good example is the video renderer, which exposes quality management information (such as frame rate) through a property page.

<P>This class provides the framework for a property page associated with a filter and implements the <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage">IPropertyPage</A> interface. A property page is a Component Object Model (COM) object, which should be created with a resource ID for a dialog box that will be loaded when required. It should also be given a resource ID for a title string when created.

<P>In addition to implementing the <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage">IPropertyPage</A> interface methods, this class provides several virtual member functions that can be overridden and specialized by the derived class (they return NOERROR by default). These virtual member functions are called at specific events, such as when the property page is activated or deactivated, connected or disconnected, when the changes to properties are to be applied, or when messages to the dialog box are received.

<P>A filter exposing custom property pages should also expose the same functionality to an application through a custom interface. Otherwise, an application has no way to control the filter without displaying the property page. For example, the video renderer supports the <A HREF="/directx/dxm/help/ds/dssd0173.htm">IQualProp</A> interface to access the same quality management information. In fact, the
renderer property page uses that interface to get the information for its property page. To make it easier for applications to access their custom interfaces, filters should also implement their custom interfaces in a plug-in distributor (PID), which is an object that is aggregated with the filter graph manager. Typically, the PID implements its associated filter's interface by simply passing calls through from the application to the filter interface. 



<A NAME="Protected_Data_Membe"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_bDirty">m_bDirty</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Flag to determine whether anything has changed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_DialogId">m_DialogId</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Resource identifier for the dialog box.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_Dlg">m_Dlg</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Dialog box window handle for the property page.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="CBasePropertyPage::m_hwnd">m_hwnd</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Window handle for the property page.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_pPageSite">m_pPageSite</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage">IPropertyPage</A> interface pointer used to access the filter's property information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_TitleId">m_TitleId</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Resource identifier for the property page title.
</FONT></TD></TR></TABLE>
<A NAME="Member_Functions"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#+">CBasePropertyPage</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage</A> object.
</FONT></TD></TR></TABLE>
<A NAME="Overridable_Member_F"></A><P><B>Overridable Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#OnActivate">OnActivate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Called when the property page is activated.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#OnApplyChanges">OnApplyChanges</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> Called when the user applies changes to the property page.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#OnConnect">OnConnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Called when the property page is connected to the filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#OnDeactivate">OnDeactivate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Called when the property page is dismissed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#OnDisconnect">OnDisconnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Called when the property page is disconnected from the owning filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#OnReceiveMessage">OnReceiveMessage</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Called when a message is sent to the property page dialog box window.
</FONT></TD></TR></TABLE>
<A NAME="Implemented_INonDele"></A><P><B>Implemented INonDelegatingUnknown Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#NonDelegatingAddRef">NonDelegatingAddRef</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Default implementation increments the owning filter's reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#NonDelegatingQueryInterface">NonDelegatingQueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Called to retrieve <A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage</A> interfaces. Override this member
 function to pass out pointers to any interfaces added by the derived class.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#NonDelegatingRelease">NonDelegatingRelease</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Default implementation decrements the owning filter's reference count.
</FONT></TD></TR></TABLE>
<A NAME="Implemented_IPropert"></A><P><B>Implemented IPropertyPage Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#Activate">Activate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Creates a dialog box window for the property page.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#Apply">Apply</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Applies current property page values to the underlying object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#Deactivate">Deactivate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Destroys the window created with <A HREF="/directx/dxm/help/ds/dssd0209.htm#Activate">CBasePropertyPage::Activate</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#GetPageInfo">GetPageInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns information about the property page.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#Help">Help</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invokes Help in response to user request.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#IsPageDirty">IsPageDirty</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates whether the property page has changed since activated or since the most recent
call to <A HREF="/directx/dxm/help/ds/dssd0209.htm#Apply">CBasePropertyPage::Apply</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#Move">Move</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Positions and resizes the property page dialog box within the frame.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#SetObjects">SetObjects</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Provides the property page with an array of <A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> pointers for objects associated
with this property page.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#SetPageSite">SetPageSite</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Initializes a property page and provides the page with a pointer to the <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPageSite">IPropertyPageSite</A> interface through which the property page communicates with the property frame.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#Show">Show</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Makes the property page dialog box visible or invisible.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0209.htm#TranslateAccelerator">TranslateAccelerator</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Provides a pointer to an <A HREF="/directx/dxm/help/ds/dssd0404.htm#MSG">MSG</A> structure that specifies a keystroke to process.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="Activate">CBasePropertyPage::Activate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Creates the property page dialog box.

<P><B>HRESULT</B> <B>Activate</B><B>(</B><BR>&nbsp;&nbsp;<B>HWND</B> <I>hwndParent</I><B>,</B><BR>&nbsp;&nbsp;<B>LPCRECT</B> <I>prect</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>fModal</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>hwndParent</I>
 </DT><DD>Handle to the parent window of the dialog box.
</DD><DT><I>prect</I>
 </DT><DD>Pointer to the <A HREF="/directx/dxm/help/ds/dssd0404.htm#RECT">RECT</A> structure that contains the dialog box's screen position.
</DD><DT><I>fModal</I>
 </DT><DD>Value that specifies a modal dialog box if TRUE, or a modeless dialog box if FALSE.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_OUTOFMEMORY if the dialog box creation fails, or E_UNEXPECTED if a property page already exists.

<H5>Remarks</H5>
<P>This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__Activ">IPropertyPage::Active</A> method, which creates a dialog box for the property page (without a frame, caption, system menu, or controls) using <I>hwndParent</I> as the parent window and <I>prect</I> as the positioning rectangle.

<P>The property page maintains the window handle created in this process, which it uses to destroy the dialog box within <A HREF="/directx/dxm/help/ds/dssd0209.htm#Deactivate">CBasePropertyPage::Deactivate</A>.

<H3><HR COLOR="#0000FF"><A NAME="Apply">CBasePropertyPage::Apply</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Applies current property page values to the underlying object.

<P><B>HRESULT</B> <B>Apply</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns E_UNEXPECTED if <A HREF="/directx/dxm/help/ds/dssd0209.htm#SetObjects">CBasePropertyPage::SetObjects</A> has not been called or if the <A HREF="/directx/dxm/help/ds/dssd0209.htm#m_pPageSite">m_pPageSite</A> data member has not been initialized with a pointer to the filter's property page.

<H5>Remarks</H5>
<P>This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__Apply">IPropertyPage::Apply</A> method. The object to be changed is provided through a previous call to <A HREF="/directx/dxm/help/ds/dssd0209.htm#SetObjects">CBasePropertyPage::SetObjects</A>. This should be the filter's <A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> interface. Therefore, this member function should not fail because of nonexistent interfaces.


<P>This member function sets the <A HREF="/directx/dxm/help/ds/dssd0209.htm#m_bDirty">m_bDirty</A> data member to FALSE and calls the virtual <A HREF="/directx/dxm/help/ds/dssd0209.htm#OnApplyChanges">CBasePropertyPage::OnApplyChanges</A> member function, which should be overridden in the derived class to apply the changes to the properties.

<H3><HR COLOR="#0000FF"><A NAME="+">CBasePropertyPage::CBasePropertyPage</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Constructs a <A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage</A> object.

<P><B>CBasePropertyPage</B><B>(</B><BR>&nbsp;&nbsp;<B>TCHAR</B> <I>*pName</I><B>,</B><BR>&nbsp;&nbsp;<B>LPUNKNOWN</B> <I>pUnk</I><B>,</B><BR>&nbsp;&nbsp;<B>int</B> <I>DialogId</I><B>,</B><BR>&nbsp;&nbsp;<B>int</B> <I>TitleId</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pName</I>
 </DT><DD>Name of the property page object for debugging purposes.
</DD><DT><I>pUnk</I>
 </DT><DD>Pointer to the COM delegating object.
</DD><DT><I>DialogId</I>
 </DT><DD>Resource ID for the dialog box.
</DD><DT><I>TitleId</I>
 </DT><DD>Resource ID for the dialog box title.
</DD></DL>
<H5>Remarks</H5>
<P>This constructor sets the <A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage</A> data members as follows:
<UL><LI><A HREF="/directx/dxm/help/ds/dssd0209.htm#m_DialogId">m_DialogId</A> is set to <I>DialogId</I>.
<LI><A HREF="/directx/dxm/help/ds/dssd0209.htm#m_TitleId">m_TitleId</A> is set to <I>TitleId</I>.
<LI><A HREF="/directx/dxm/help/ds/dssd0209.htm#CBasePropertyPage::m_hwnd">m_hwnd</A> is set to NULL.
<LI><A HREF="/directx/dxm/help/ds/dssd0209.htm#m_Dlg">m_Dlg</A> is set to NULL.
 <LI><A HREF="/directx/dxm/help/ds/dssd0209.htm#m_pPageSite">m_pPageSite</A> is set to NULL.
 <LI><A HREF="/directx/dxm/help/ds/dssd0209.htm#m_bDirty">m_bDirty</A> is set to FALSE.
</UL>
<H3><HR COLOR="#0000FF"><A NAME="Deactivate">CBasePropertyPage::Deactivate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Destroys the window created with <A HREF="/directx/dxm/help/ds/dssd0209.htm#Activate">CBasePropertyPage::Activate</A>.

<P><B>HRESULT</B> <B>Deactivate</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns E_UNEXPECTED if the data member <A HREF="/directx/dxm/help/ds/dssd0209.htm#CBasePropertyPage::m_hwnd">m_hwnd</A> does not contain a Window handle for the property page.

<H5>Remarks</H5>
<P>This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__Deact">IPropertyPage::Deactivate</A> method. It calls the virtual <A HREF="/directx/dxm/help/ds/dssd0209.htm#OnDeactivate">CBasePropertyPage::OnDeactivate</A> member function and then destroys the property page dialog box.

<H3><HR COLOR="#0000FF"><A NAME="GetPageInfo">CBasePropertyPage::GetPageInfo</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Returns information about the property page.

<P><B>HRESULT</B> <B>GetPageInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>LPPROPPAGEINFO</B> <I>pPageInfo</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pPageInfo</I>
 </DT><DD>Pointer to the caller-allocated <A HREF="/directx/dxm/help/ds/dssd0404.htm#PROPPAGEINFO">PROPPAGEINFO</A> structure in which the property page stores its page information. All allocations stored in this structure become the caller's responsibility.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_OUTOFMEMORY if the function cannot allocate memory for the property page title.


<H5>Remarks</H5>
<P>This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__GetPa">IPropertyPage::GetPageInfo</A> method. It calls the <A HREF="/directx/dxm/help/ds/dssd0281.htm#GetDialogSize">GetDialogSize</A> function to obtain the dialog box size and sets it to a default value in case this call fails.
<H3><HR COLOR="#0000FF"><A NAME="Help">CBasePropertyPage::Help</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Invokes Help in response to user request.

<P><B>HRESULT</B> <B>Help</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>lpszHelpDir</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpszHelpDir</I>
 </DT><DD>Pointer to the string under the HelpDir key in the property page's CLSID information in the registry. If HelpDir does not exist, this will be the path found in the InProcServer32 entry minus the server file name. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_NOTIMPL by default.

<H5>Remarks</H5>
<P>This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__Help">IPropertyPage::Help</A> method, but only as a placeholder. The function does nothing but return E_NOTIMPL.

<P>Calls to this member function must occur between calls to <A HREF="/directx/dxm/help/ds/dssd0209.htm#Activate">CBasePropertyPage::Activate</A> and <A HREF="/directx/dxm/help/ds/dssd0209.htm#Deactivate">CBasePropertyPage::Deactivate</A>.

<P>If the page fails this member function (such as E_NOTIMPL), the frame will attempt to use the <I>pszHelpFile</I> and <I>dwHelpContext</I> fields of the <A HREF="/directx/dxm/help/ds/dssd0404.htm#PROPPAGEINFO">PROPPAGEINFO</A> structure obtained through <A HREF="/directx/dxm/help/ds/dssd0209.htm#GetPageInfo">CBasePropertyPage::GetPageInfo</A>. Therefore, the derived class should either implement <B>CBasePropertyPage::Help</B> or return Help information through <B>CBasePropertyPage::GetPageInfo</B>.
<H3><HR COLOR="#0000FF"><A NAME="IsPageDirty">CBasePropertyPage::IsPageDirty</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Indicates whether the property page has changed since activated or since the most recent call to <A HREF="/directx/dxm/help/ds/dssd0209.htm#Apply">CBasePropertyPage::Apply</A>.

<P><B>HRESULT</B> <B>IsPageDirty</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns S_OK if the value state of the property page is dirty, that is, it has changed and is different from the state of the objects. Returns S_FALSE if the value state of the page has not changed and is current with that of the objects.

<H5>Remarks</H5>
<P>This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__IsPag">IPropertyPage::IsPageDirty</A> method. It returns the value of the <A HREF="/directx/dxm/help/ds/dssd0209.htm#m_bDirty">m_bDirty</A> data member.

<H3><HR COLOR="#0000FF"><A NAME="Move">CBasePropertyPage::Move</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Positions and resizes the property page dialog box within the frame.

<P><B>HRESULT</B> <B>Move</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCRECT</B> <I>prect</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>prect</I>
 </DT><DD>Pointer to the <A HREF="/directx/dxm/help/ds/dssd0404.htm#RECT">RECT</A> structure containing the positioning information for the property page dialog box.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_UNEXPECTED if the <A HREF="/directx/dxm/help/ds/dssd0209.htm#CBasePropertyPage::m_hwnd">m_hwnd</A> data member does not contain a Window handle for the property page.

<H5>Remarks</H5>
<P>This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__Move">IPropertyPage::Move</A> method by calling the Microsoft&#174; Win32&#174; <A HREF="/directx/dxm/help/ds/dssd0404.htm#MoveWindow">MoveWindow</A> function. This member function is called from the <A HREF="/directx/dxm/help/ds/dssd0209.htm#Activate">CBasePropertyPage::Activate</A> member function to position the property page dialog box.

<H3><HR COLOR="#0000FF"><A NAME="NonDelegatingAddRef">CBasePropertyPage::NonDelegatingAddRef</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Increments the reference count for an interface.

<P><B>ULONG</B> <B>NonDelegatingAddRef</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the object's reference count.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="/directx/dxm/help/ds/dssd0276.htm#INonDelegatingUnknow">INonDelegatingUnknown::NonDelegatingAddRef</A> method. It increments the owning filter's reference count.
<H3><HR COLOR="#0000FF"><A NAME="NonDelegatingQueryInterface">CBasePropertyPage::NonDelegatingQueryInterface</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Returns an interface and increments the reference count.

<P><B>HRESULT</B> <B>NonDelegatingQueryInterface</B><B>(</B><BR>&nbsp;&nbsp;<B>REFIID</B> <I>riid</I><B>,</B><BR>&nbsp;&nbsp;<B>void</B> <B>**</B> <I>ppv</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>riid</I>
 </DT><DD>Reference identifier.
</DD><DT><I>ppv</I>
 </DT><DD>Pointer to the interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>ppv</I> is invalid. Returns NOERROR if the query is successful or E_NOINTERFACE if it is not. 

<H5>Remarks</H5>
<P>This member function implements the <A HREF="/directx/dxm/help/ds/dssd0276.htm#INonDelegatingUnknow">INonDelegatingUnknown::NonDelegatingQueryInterface</A> method and passes out references to the <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage">IPropertyPage</A> interface. It then calls the <A HREF="/directx/dxm/help/ds/dssd0263.htm#NonDelegatingQueryInterface">CUnknown::NonDelegatingQueryInterface</A> base class member function. Override this class to return other interfaces on the object in the derived class.
<H3><HR COLOR="#0000FF"><A NAME="NonDelegatingRelease">CBasePropertyPage::NonDelegatingRelease</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Decrements the reference count for an interface.

<P><B>ULONG</B> <B>NonDelegatingRelease</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the reference count.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="/directx/dxm/help/ds/dssd0276.htm#INonDelegatingUnknow">INonDelegatingUnknown::NonDelegatingRelease</A> method. It releases a reference count to the owning filter.
<H3><HR COLOR="#0000FF"><A NAME="OnActivate">CBasePropertyPage::OnActivate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Called when the property page is activated.

<P><B>virtual</B> <B>HRESULT</B> <B>OnActivate</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns NOERROR by default. The overriding member function should return a valid <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function is called from the <A HREF="/directx/dxm/help/ds/dssd0209.htm#Activate">CBasePropertyPage::Activate</A> member function to notify the derived class when the property page is displayed. Override this member function to initialize values in the dialog box. This can be done by calling the Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#SetDlgItemText">SetDlgItemText</A> function with data member values previously initialized when the property page was connected (in the overridden <A HREF="/directx/dxm/help/ds/dssd0209.htm#OnConnect">CBasePropertyPage::OnConnect</A> member function).

<P>For example, the Vidprop.cpp file in the sample video renderer, SampVid, does this as follows:

<PRE><FONT FACE="Courier" SIZE="2">
// Set the text fields in the property page

HRESULT CQualityProperties::OnActivate()
{
    SetEditFieldData();
    return NOERROR;
}


// Initialize the property page fields

void CQualityProperties::SetEditFieldData()
{
    ASSERT(m_pQualProp);
    TCHAR buffer[50];

    wsprintf(buffer,"%d", m_iDropped);
    SendDlgItemMessage(m_Dlg, IDD_QDROPPED, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer);
    wsprintf(buffer,"%d", m_iDrawn);
    SendDlgItemMessage(m_Dlg, IDD_QDRAWN, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer);
    wsprintf(buffer,"%d.%02d", m_iFrameRate/100, m_iFrameRate%100);
    SendDlgItemMessage(m_Dlg, IDD_QAVGFRM, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer);
    wsprintf(buffer,"%d", m_iFrameJitter);
    SendDlgItemMessage(m_Dlg, IDD_QJITTER, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer);
    wsprintf(buffer,"%d", m_iSyncAvg);
    SendDlgItemMessage(m_Dlg, IDD_QSYNCAVG, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer);
    wsprintf(buffer,"%d", m_iSyncDev);
    SendDlgItemMessage(m_Dlg, IDD_QSYNCDEV, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer);
}
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="OnApplyChanges">CBasePropertyPage::OnApplyChanges</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Called when the user applies changes to the property page.

<P><B>virtual</B> <B>HRESULT</B> <B>OnApplyChanges</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns NOERROR by default. The overriding member function should return a valid <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>Override this member function if your property page allows users to set property values. When this member function is called, process the changed properties. For example, set appropriate data members in the derived class to the new values, or call methods in the filter to set the properties. The overriding member function is responsible for calling <A HREF="/directx/dxm/help/ds/dssd0209.htm#IsPageDirty">CBasePropertyPage::IsPageDirty</A> to set the <A HREF="/directx/dxm/help/ds/dssd0209.htm#m_bDirty">m_bDirty</A> data member to TRUE if the properties in the object do not reflect those in the property page when this member function
exits.
<H3><HR COLOR="#0000FF"><A NAME="OnConnect">CBasePropertyPage::OnConnect</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Called when the property page is connected to the filter.

<P><B>virtual</B> <B>HRESULT</B> <B>OnConnect</B><B>(</B><BR>&nbsp;&nbsp;<B>IUnknown</B> <I>*pUnknown</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pUnknown</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> interface of the filter associated with the property page.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR by default. The overriding member function should return a valid <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function is called from the <A HREF="/directx/dxm/help/ds/dssd0209.htm#SetObjects">CBasePropertyPage::SetObjects</A> member function with the <I>ppUnk</I> parameter of that member function, which should be the filter's <A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> interface. Override this member function to acquire property values to be sent to the property page dialog box later (in <A HREF="/directx/dxm/help/ds/dssd0209.htm#OnActivate">CBasePropertyPage::OnActivate</A>).

<P>The following excerpt from the sample video renderer (SampVid) Vidprop.cpp file illustrates the use of this member function.

<PRE><FONT FACE="Courier" SIZE="2">
// Give us the filter to communicate with

HRESULT CQualityProperties::OnConnect(IUnknown *pUnknown)
{
    ASSERT(m_pQualProp == NULL);

    // Ask the renderer for its IQualProp interface

    HRESULT hr = pUnknown-&gt;QueryInterface(IID_IQualProp,(void **)&amp;m_pQualProp);
    if (FAILED(hr)) {
        return E_NOINTERFACE;
    }

    ASSERT(m_pQualProp);

    // Get quality data for the page

    m_pQualProp-&gt;get_FramesDroppedInRenderer(&amp;m_iDropped);
    m_pQualProp-&gt;get_FramesDrawn(&amp;m_iDrawn);
    m_pQualProp-&gt;get_AvgFrameRate(&amp;m_iFrameRate);
    m_pQualProp-&gt;get_Jitter(&amp;m_iFrameJitter);
    m_pQualProp-&gt;get_AvgSyncOffset(&amp;m_iSyncAvg);
    m_pQualProp-&gt;get_DevSyncOffset(&amp;m_iSyncDev);
    return NOERROR;
}
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="OnDeactivate">CBasePropertyPage::OnDeactivate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Called when the property page is dismissed.

<P><B>virtual</B> <B>HRESULT</B> <B>OnDeactivate</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns NOERROR by default. The overriding member function should return a valid <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function is called from the <A HREF="/directx/dxm/help/ds/dssd0209.htm#Deactivate">CBasePropertyPage::Deactivate</A> member function when the user closes the property page. Override this member function to handle any special requirements at that time.
<H3><HR COLOR="#0000FF"><A NAME="OnDisconnect">CBasePropertyPage::OnDisconnect</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Called when the property page is disconnected from the owning filter.

<P><B>virtual</B> <B>HRESULT</B> <B>OnDisconnect</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns NOERROR by default. The overriding member function should return a valid <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function is called from the <A HREF="/directx/dxm/help/ds/dssd0209.htm#SetObjects">CBasePropertyPage::SetObjects</A> member function when the property page is disconnected from the filter. Override this member function to handle any special requirements at that time, such as releasing reference counts on underlying property interfaces.

<P>The following example, from the Vidprop.cpp file in the sample video renderer, SampVid, demonstrates an implementation of this member function in a derived class.

<PRE><FONT FACE="Courier" SIZE="2">
// Release any IQualProp interface we have

HRESULT CQualityProperties::OnDisconnect()
{
    // Release the interface

    if (m_pQualProp == NULL) {
        return E_UNEXPECTED;
    }

    m_pQualProp-&gt;Release();
    m_pQualProp = NULL;
    return NOERROR;
}

</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="OnReceiveMessage">CBasePropertyPage::OnReceiveMessage</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Called when a message is sent to the property page dialog box.

<P><B>virtual</B> <B>BOOL</B> <B>OnReceiveMessage</B><B>(</B><BR>&nbsp;&nbsp;<B>HWND</B> <I>hwnd</I><B>,</B><BR>&nbsp;&nbsp;<B>UINT</B> <I>uMsg</I><B>,</B><BR>&nbsp;&nbsp;<B>WPARAM</B> <I>wParam</I><B>,</B><BR>&nbsp;&nbsp;<B>LPARAM</B> <I>lParam</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>hwnd</I>
 </DT><DD>Window procedure that received the message.
</DD><DT><I>uMsg</I>
 </DT><DD>Message.
</DD><DT><I>wParam</I>
 </DT><DD>Additional message information. This parameter's content depends on the value of the <I>uMsg</I> parameter.
</DD><DT><I>lParam</I>
 </DT><DD>Additional message information. This parameter's content depends on the value of the <I>uMsg</I> parameter.
</DD></DL>
<H5>Return Values</H5>
<P>By default, returns the value returned by the Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#DefWindowProc">DefWindowProc</A> function.

<H5>Remarks</H5>
<P>The default implementation of this member function calls <A HREF="/directx/dxm/help/ds/dssd0404.htm#DefWindowProc">DefWindowProc</A> with the supplied parameters. Override this member function for special handling of messages.
<H3><HR COLOR="#0000FF"><A NAME="SetObjects">CBasePropertyPage::SetObjects</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Provides the property page with an <A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> pointer for objects associated with this property page.

<P><B>HRESULT</B> <B>SetObjects</B><B>(</B><BR>&nbsp;&nbsp;<B>ULONG</B> <I>cObjects</I><B>,</B><BR>&nbsp;&nbsp;<B>LPUNKNOWN</B> <I>*ppUnk</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>cObjects</I>
 </DT><DD>Number of <A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> pointers in the array pointed to by <I>ppUnk</I>. This number should be 1 or 0. If it is 0, the property page must release any pointers previously passed to this method.
</DD><DT><I>ppUnk</I>
 </DT><DD>Pointer to a single <A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> interface pointer identifying a unique object affected by the property sheet in which this (and possibly other) property page is displayed. The property page must cache this pointer by calling <A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">IUnknown::AddRef</A>.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>ppUnk</I> is null, E_UNEXPECTED if <I>cObjects</I> is greater than 1, and otherwise returns the value returned by the <A HREF="/directx/dxm/help/ds/dssd0209.htm#OnConnect">CBasePropertyPage::OnConnect</A> or <A HREF="/directx/dxm/help/ds/dssd0209.htm#OnDisconnect">CBasePropertyPage::OnDisconnect</A>
member function that it calls.

<H5>Remarks</H5>
<P>This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__SetOb">IPropertyPage::SetObjects</A> method. This member function calls the virtual <A HREF="/directx/dxm/help/ds/dssd0209.htm#OnConnect">CBasePropertyPage::OnConnect</A> member function when the <I>cObjects</I> value is 1, or the virtual <A HREF="/directx/dxm/help/ds/dssd0209.htm#OnDisconnect">CBasePropertyPage::OnDisconnect</A> member function when the <I>cObjects</I> value is 0. Override these virtual member functions to acquire (by calling <A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">IUnknown::AddRef</A>) or release (by calling <A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">IUnknown::Release</A>) interfaces to which the property page applies.

<P>Note that the caller must provide the property page with this object before calling <A HREF="/directx/dxm/help/ds/dssd0209.htm#Activate">CBasePropertyPage::Activate</A>, and should call <B>CBasePropertyPage::SetObjects</B> with 0-v as the parameter when deactivating the page or when releasing the object entirely.

<P>This member function allows only one object to be associated with the property page.
<H3><HR COLOR="#0000FF"><A NAME="SetPageSite">CBasePropertyPage::SetPageSite</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Initializes a property page and provides the page with a pointer to the <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPageSite">IPropertyPageSite</A> interface through which the property page communicates with the property frame.

<P><B>HRESULT</B> <B>SetPageSite</B><B>(</B><BR>&nbsp;&nbsp;<B>LPPROPERTYPAGESITE</B> <I>pPageSite</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pPageSite</I>
 </DT><DD>Pointer to the <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPageSite">IPropertyPageSite</A> interface of the page site that manages and provides services to this property page within the entire property sheet.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_UNEXPECTED if if the <A HREF="/directx/dxm/help/ds/dssd0209.htm#m_pPageSite">m_pPageSite</A> data member has not been initialized with a pointer to the filter's property page.

<H5>Remarks</H5>
<P>This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__SetPa">IPropertyPage::SetPageSite</A> method. When passed an <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPageSite">IPropertyPageSite</A> interface, it reference counts the interface and assigns it to <A HREF="/directx/dxm/help/ds/dssd0209.htm#m_pPageSite">m_pPageSite</A>. When passed a null value, it releases the reference count on the <B>IPropertyPageSite</B> interface.

<H3><HR COLOR="#0000FF"><A NAME="Show">CBasePropertyPage::Show</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Makes the property page dialog box visible or invisible. 

<P><B>HRESULT</B> <B>Show</B><B>(</B><BR>&nbsp;&nbsp;<B>UINT</B> <I>nCmdShow</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>nCmdShow</I>
 </DT><DD>Command describing whether to become visible. Only SW_SHOWNORMAL, SW_SHOW, and SW_HIDE are accepted.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_UNEXPECTED if the data member <A HREF="/directx/dxm/help/ds/dssd0209.htm#CBasePropertyPage::m_hwnd">m_hwnd</A> does not contain a Window handle for the property page. Returns E_INVALIDARG if the <I>nCmdShow</I> parameter is not equal to SW_SHOW or SW_SHOWNORMAL (show) or SW_HIDE (hide).

<H5>Remarks</H5>
<P>If the page is made visible, the page should set the focus to itself, specifically to the first property on the page. This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__Show">IPropertyPage::Show</A> method. This is called just before exiting the <A HREF="/directx/dxm/help/ds/dssd0209.htm#Activate">CBasePropertyPage::Activate</A> member function with the <I>nCmdShow</I> SHOW_NORMAL value.

<H3><HR COLOR="#0000FF"><A NAME="TranslateAccelerator">CBasePropertyPage::TranslateAccelerator</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0209.htm">CBasePropertyPage Class</A>
<P>Provides a pointer to an <A HREF="/directx/dxm/help/ds/dssd0404.htm#MSG">MSG</A> structure that specifies a keystroke to process.

<P><B>HRESULT</B> <B>TranslateAccelerator</B><B>(</B><BR>&nbsp;&nbsp;<B>LPMSG</B> <I>lpMsg</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpMsg</I>
 </DT><DD>Pointer to the <A HREF="/directx/dxm/help/ds/dssd0404.htm#MSG">MSG</A> structure describing the keystroke to process.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_NOTIMPL by default.

<H5>Remarks</H5>
<P>This member function implements the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPropertyPage__Trans">IPropertyPage::TranslateAccelerator</A> method. Calls to this member function must occur after a call to <A HREF="/directx/dxm/help/ds/dssd0209.htm#Activate">CBasePropertyPage::Activate</A> and before the corresponding call to <A HREF="/directx/dxm/help/ds/dssd0209.htm#Deactivate">CBasePropertyPage::Deactivate</A>. Override this member function to implement keyboard accelerators for the property page.

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
