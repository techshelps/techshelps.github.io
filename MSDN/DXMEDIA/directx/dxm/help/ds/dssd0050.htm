<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Display a Filter's Property Page from C++</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Display a Filter's Property Page from C++">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="Display_a_Filter's_Property_Page_from_C"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- Display a Filter's Property Page from C++"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- Display a Filter's Property Page from C++"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0047.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0049.htm">Control the Video Playback Window from C++</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0051.htm">Use Multimedia Streaming in DirectShow Applications</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Display a Filter's Property Page from C++</H2>
<BR CLEAR=ALL>
<P>This article walks through a simple C++ program designed to demonstrate how to request a filter to display its property page. It is based on the MPegProp function code in the MPegProp.cpp file, which you can find in the MPegProp sample in the Samples\ds\player directory. 

<P>This code displays the property page of the MPEG video decoder. This filter has a property page that enables you to play MPEG files in color or monochrome. You can see this filter's property page by opening the Filter Graph Editor, choosing the <B>Insert Filters</B> command from the <B>Graph</B> menu, selecting <B>MPEG Video Decoder</B> from the <B>DirectShow Filters</B> list, and clicking the <B>Insert Filters</B> button. After you've inserted the filter, right-click anywhere on it to display its property page.

<P>See these related sections if you want to play back media files or specify the video playback window:
<UL><LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0048.htm">Play a Movie from C++</A> &#151; demonstrates the basic code for playing back a media file.
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0048.htm#Seek">Adding Media Seeking</A> &#151; shows the code needed to seek to a particular location in the media file.
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0049.htm">Control the Video Playback Window from C++</A> &#151; demonstrates how to display a filter's property page, so the user can change how media files are played back.
</UL>
<P>Perform the following steps to control the MPEG video decoder's property page in C/C++. You don't necessarily have to perform the steps in the order presented. 
<OL><LI>Include the necessary headers.
<PRE><FONT FACE="Courier" SIZE="2">
  #include &lt;windows.h&gt;
  #include &lt;mmsystem.h&gt;
  #include &lt;streams.h&gt;
  #include "playfile.h"
</FONT></PRE>
<LI>Define a windows message constant and the HELPER_RELEASE macro, which will be used to release the interfaces from the WndMainProc callback (see the MPegProp code for generic window code).
<PRE><FONT FACE="Courier" SIZE="2">
 #define WM_GRAPHNOTIFY  WM_USER+13
 #define HELPER_RELEASE(x) { if (x) x-&gt;Release(); x = NULL; }
</FONT></PRE>
<LI>Declare variables. 
<PRE><FONT FACE="Courier" SIZE="2">
 HWND      ghApp;
 HINSTANCE ghInst;
 HRESULT   hr;
 LONG      evCode;
 LONG      evParam1;
 LONG      evParam2;
</FONT></PRE>
<P>The <I>ghApp</I> variable is the handle of window to notify when the graph signals an event. The <I>ghInst</I> variable is the HINSTANCE of the window. The <I>evCode</I> variable will hold the event code, and the <I>evParam1</I> and <I>evParam2</I> variables will hold the event parameters.

<LI>Declare and initialize the necessary interfaces. The reference count of the interfaces is automatically incremented on initialization, so you don't need to call the <A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">IUnknown::AddRef</A> method on them. For this example, you need only the four interfaces shown in the following code. For more information, see the documentation for the <A HREF="/directx/dxm/help/ds/dssd0156.htm#IMediaEventEx">IMediaEventEx</A>, <A HREF="/directx/dxm/help/ds/dssd0151.htm#IGraphBuilder">IGraphBuilder</A>, <A HREF="/directx/dxm/help/ds/dssd0154.htm#IMediaControl">IMediaControl</A>, and <A HREF="/directx/dxm/help/ds/dssd0183.htm#IVideoWindow">IVideoWindow</A> interfaces. 

<PRE><FONT FACE="Courier" SIZE="2">
 
  IGraphBuilder *pigb  = NULL;
  IMediaControl *pimc  = NULL;
  IMediaEventEx *pimex = NULL;
  IVideoWindow  *pivw  = NULL;
  IFilterGraph  *pifg  = NULL;
  IBaseFilter   *pifPP = NULL;
  ISpecifyPropertyPages *pispp = NULL;

</FONT></PRE>
<LI>Define the function and declare variables. The <I>szFile</I> parameter is the name of the MPEG video file that will be played.
<PRE><FONT FACE="Courier" SIZE="2">
   void MpegProp (LPSTR szFile)
   {   
     
</FONT></PRE>
<LI>Create a Unicode (wide character) string from the input file name.
<PRE><FONT FACE="Courier" SIZE="2">
        WCHAR wFile[MAX_PATH];
        MultiByteToWideChar( CP_ACP, 0, szFile, -1, wFile, MAX_PATH );
</FONT></PRE>
<LI>Instantiate the filter graph manager, asking for the <A HREF="/directx/dxm/help/ds/dssd0151.htm#IGraphBuilder">IGraphBuilder</A> interface.

<PRE><FONT FACE="Courier" SIZE="2">
        hr = CoCreateInstance(CLSID_FilterGraph,
        NULL,
        CLSCTX_INPROC_SERVER,
        IID_IGraphBuilder,
        (void **)&amp;pigb);
</FONT></PRE>
<LI>Query for the <A HREF="/directx/dxm/help/ds/dssd0154.htm#IMediaControl">IMediaControl</A> interface (provides the methods to run, pause, and stop the playback), the <A HREF="/directx/dxm/help/ds/dssd0156.htm#IMediaEventEx">IMediaEventEx</A> interface (so you can receive event notifications), and the <A HREF="/directx/dxm/help/ds/dssd0183.htm#IVideoWindow">IVideoWindow</A> interface to hide the window when the movie is finished playing.
 
<PRE><FONT FACE="Courier" SIZE="2">
   pigb-&gt;QueryInterface(IID_IMediaControl, (void **)&amp;pimc);
   pigb-&gt;QueryInterface(IID_IMediaEventEx, (void **)&amp;pimex);
   pigb-&gt;QueryInterface(IID_IVideoWindow, (void **)&amp;pivw);
</FONT></PRE>
<LI>Ask the filter graph manager to build the filter graph that renders the input file. This does not play the media file. (When you play the file with <B>Run</B>, the filter graph will automatically render the input file's media type. You do not have to specify a renderer filter.) 
<PRE><FONT FACE="Courier" SIZE="2">
   hr = pigb-&gt;RenderFile(wFile, NULL);
</FONT></PRE>
<LI>Use a window to capture graph signal events. This not only improves performance, but allows your application to run in any threading model. 
<PRE><FONT FACE="Courier" SIZE="2">
   pimex-&gt;SetNotifyWindow((OAHWND)ghApp, WM_GRAPHNOTIFY, 0);
</FONT></PRE>
<P>The window specified by <I>ghApp</I> will handle messages in response to all events from the graph. If an event occurs, DirectShow posts a WM_GRAPHNOTIFY message to the window. 
<LI>Query for the <A HREF="/directx/dxm/help/ds/dssd0145.htm#IFilterGraph">IFilterGraph</A> interface. Through <B>IFilterGraph</B>, you will retrieve a pointer to the <A HREF="/directx/dxm/help/ds/dssd0121.htm#IBaseFilter">IBaseFilter</A> interface on the MPEG Video Codec filter. The easiest way to find the single MPEG video codec in the graph is through <A HREF="/directx/dxm/help/ds/dssd0145.htm#FindFilterByName">IFilterGraph::FindFilterByName</A>.


<PRE><FONT FACE="Courier" SIZE="2">
  pigb-&gt;QueryInterface(IID_IFilterGraph, (void **)&amp;pifg);
</FONT></PRE>
<LI>Use <A HREF="/directx/dxm/help/ds/dssd0145.htm#FindFilterByName">FindFilterByName</A> to find the MPEG Video Codec. This method returns a pointer (<I>&amp;pifPP</I>) to the <A HREF="/directx/dxm/help/ds/dssd0121.htm#IBaseFilter">IBaseFilter</A> interface on the MPEG Video Codec.
<PRE><FONT FACE="Courier" SIZE="2">
   hr = pifg-&gt;FindFilterByName(L"MPEG Video Codec", &amp;pifPP);
</FONT></PRE>
<LI>Retrieve the <A HREF="/directx/dxm/help/ds/dssd0404.htm#ISpecifyPropertyPage">ISpecifyPropertyPages</A> interface for the MPEG Video Codec. This filter has a property page that enables you to play MPEG files in color or monochrome. 
<PRE><FONT FACE="Courier" SIZE="2">
   pif-&gt;QueryInterface(IID_ISpecifyPropertyPages, (void **)&amp;pispp);
</FONT></PRE>
<LI>Allocate a counted array of <A HREF="/directx/dxm/help/ds/dssd0412.htm#GUID">GUID</A>s for the property page. The <A HREF="/directx/dxm/help/ds/dssd0404.htm#ISpecifyPropertyPage">ISpecifyPropertyPages::GetPages</A> method uses the COM <B>CAUUID</B> structure to receive an array of CLSIDs from the filter for each of its property pages. The structure has two members, <B>cElems</B>, which holds the number of property pages, and 
<B>pElems</B>, which points to an array holding the property page CLSIDs.
<PRE><FONT FACE="Courier" SIZE="2">
   CAUUID caGUID;
</FONT></PRE>
<LI>Using the pointer to the MPEG Video Decoder filter's property page, <I>pispp</I>, call the COM <A HREF="/directx/dxm/help/ds/dssd0404.htm#ISpecifyPropertyPage">ISpecifyPropertyPages::GetPages</A> method to fill the caGUID structure with a counted array of UUIDs, where each UUID specifies a property page CLSID. 
<PRE><FONT FACE="Courier" SIZE="2">
   pispp-&gt;GetPages(&amp;caGUID);
</FONT></PRE>
<LI>Release the <A HREF="/directx/dxm/help/ds/dssd0404.htm#ISpecifyPropertyPage">ISpecifyPropertyPages</A> interface.
<PRE><FONT FACE="Courier" SIZE="2">
  HELPER_RELEASE(pispp);
</FONT></PRE>
<LI>Create a modal dialog box to display the MPEG Video Decoder filter's property page. This dialog box appears before the video is played, enabling the user to choose to play back in color or monochrome. 
<PRE><FONT FACE="Courier" SIZE="2">
   OleCreatePropertyFrame(NULL,
            0,
            0,
            L"Filter",          // Caption for the dialog box
            1,                  // Number of filters
            (IUnknown **)&amp;pifPP,  // Pointer to the filter whose property 
                                // Pages are being displayed. This can 
                                // be an array of pointers if more than
                                // one filter's property pages are to 
                                // be displayed. Note that only 
                                // properties common to all the filters 
                                // can be displayed on the same modal 
                                // dialog.
            caGUID.cElems,      // Number of property pages
            caGUID.pElems,      // Pointer to property page CLSIDs
            0,
            0,
            NULL);
</FONT></PRE>
<LI>Release the <A HREF="/directx/dxm/help/ds/dssd0121.htm#IBaseFilter">IBaseFilter</A> interface.
<PRE><FONT FACE="Courier" SIZE="2">
  HELPER_RELEASE(pifPP);
</FONT></PRE>
</OL>
<P>The MPegProp sample uses the same WndMainProc callback function to handle the filter graph messages, the same GetClipFileName function to get the movie to be played, and the same the WinMain function to create the window as the Playfile sample. These are all generic windows functions.

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
