<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Write an Audio Capture Filter</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Write an Audio Capture Filter">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="audcap"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- Write an Audio Capture Filter"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- Write an Audio Capture Filter"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0067.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0068.htm">Write a Video Capture Filter</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0070.htm">Write a Transform Filter in C/C++</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Write an Audio Capture Filter</H2>
<BR CLEAR=ALL>
<P>This article outlines important points to consider when writing an audio capture filter. The Microsoft&#174; DirectShow&#153; SDK includes a standard <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0313.htm#Audio_Capture">Audio Capture</A> filter. 

<P><B>Contents of this article:</B>
<UL><LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0069.htm#audcap_1">Audio Capture Pin Requirements</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0069.htm#audcap_2">Registering an Audio Capture Filter</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0069.htm#audcap_3">Producing Data</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0069.htm#audcap_4">Controlling Individual Streams</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0069.htm#audcap_5">Time Stamping</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0069.htm#audcap_6">Necessary Interfaces</A>
</UL>
<A NAME="audcap_1"></A><P><B>Audio Capture Pin Requirements</B>
<P>The capture filter's capture pin and preview pin (if there is one) must support the <A HREF="/directx/dxm/help/ds/dssd0153.htm#IKsPropertySet">IKsPropertySet</A> interface. See <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0068.htm#caprules_1">Capture and Preview Pin Requirements</A> for more details and sample code for implementing <B>IKsPropertySet</B> on your capture pin.

<P>You must have one input pin for every sound source the capture card can mix before it digitizes the audio. For instance, if your sound card has a line in, microphone in, and CD-ROM input, you would have three input pins. You don't typically connect these input pins to any other filters &#151; you just support the <A HREF="/directx/dxm/help/ds/dssd0094.htm#IAMAudioInputMixer">IAMAudioInputMixer</A> interface on each pin and an application will set recording levels, balance, treble, and so on, on each pin using that interface.

<A NAME="audcap_2"></A><P><B>Registering an Audio Capture Filter</B>
<P>You must register your filter in the audio capture filter category. See the <A HREF="/directx/dxm/help/ds/dssd0273.htm#AMovieDllRegisterServer2">AMovieDllRegisterServer2</A> function for more information. 



<A NAME="audcap_3"></A><P><B>Producing Data</B>
<P>Produce data on the capture pin only when the filter graph is in a running state. Do not send data from your pins when the filter graph is paused. This will confuse the filter graph unless you return <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_S_CANT_CUE">VFW_S_CANT_CUE</A> from the <A HREF="/directx/dxm/help/ds/dssd0202.htm#GetState">CBaseFilter::GetState</A> function, which warns the filter graph that you do not send data when paused. The following code sample shows how to do this.

<PRE><FONT FACE="Courier" SIZE="2">
CMyVidcapFilter::GetState(DWORD dw, FILTER_STATE *State)
{
&#009;*State = m_State;
&#009;if (m_State == State_Paused)
&#009;&#009;return VFW_S_CANT_CUE;
&#009;else
&#009;&#009;return S_OK;
}
</FONT></PRE>
<A NAME="audcap_4"></A><P><B>Controlling Individual Streams</B>
<P>All output pins should support the <A HREF="/directx/dxm/help/ds/dssd0109.htm#IAMStreamControl">IAMStreamControl</A> interface, so an application can turn each pin on or off individually (for instance, to preview without capturing). <B>IAMStreamControl</B> enables you to switch between preview and capture without rebuilding a different graph. See the source code for the <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0363.htm#VidCap">VidCap Sample (Video Capture Filter)</A> sample for details.

<A NAME="audcap_5"></A><P><B>Time Stamping</B>
<P>When you send captured audio samples, the starting time stamp for each group equals the start time of the graph's clock when the first sample in the packet was captured. The ending time stamp equals the start time plus the duration that the audio packet represents. If your audio capture filter is not providing the clock, the time stamps won't match up exactly (where the end of one package is the same as the beginning time stamp of the next package), but that's okay. See <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0068.htm">Write a Video Capture Filter</A> and the source code for the <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0363.htm#VidCap">VidCap Sample (Video Capture Filter)</A> sample for time stamping examples.

<P>You should also set the media time
 of the sample you deliver, as well as the regular time stamp. The media time is the sample number in the packet. So if you are sending one-second packets of 44.1 kilohertz (kHz) audio, you would set media time values of (0, 44100) (44100, 88200), and so on. This enables the downstream filters to know if any audio samples were dropped, even when the regular time stamps are a little random because the clock being used is not the audio digitizing clock.

<P>One other thing: If the filter graph is in a running state, and then paused, and then run again, you must not produce a sample with a time stamp less than the last one you produced before pausing. Time stamps can never go back in time, not even back to before a pause occurred.

<A NAME="audcap_6"></A><P><B>Necessary Interfaces</B>
<P>Read about the following interfaces and consider implementing them. You should implement these interfaces to provide functionality that applications might rely on, so these interfaces are strongly recommended.

<UL><LI>Implement <A HREF="/directx/dxm/help/ds/dssd0102.htm#IAMDroppedFrames">IAMDroppedFrames</A> on your filter or on each output pin that sends data.
<LI>Implement <A HREF="/directx/dxm/help/ds/dssd0108.htm#IAMStreamConfig">IAMStreamConfig</A> on each output pin that sends data.
<LI>Implement <A HREF="/directx/dxm/help/ds/dssd0109.htm#IAMStreamControl">IAMStreamControl</A> on each output pin that sends data.
<LI>Implement <A HREF="/directx/dxm/help/ds/dssd0094.htm#IAMAudioInputMixer">IAMAudioInputMixer</A> on your filter and on each input pin.
</UL>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
