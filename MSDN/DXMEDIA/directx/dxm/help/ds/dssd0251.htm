<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CRendererPosPassThru Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="CRendererPosPassThru Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="CRendererPosPassThru"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- CRendererPosPassThru Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- CRendererPosPassThru Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0188.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0250.htm">CRendererInputPin Class</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0252.htm">CSource Class</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>CRendererPosPassThru Class</H2>
<BR CLEAR=ALL>
<P><IMG SRC="/directx/dxm/help/ds/art/cutil14.gif" WIDTH="323" HEIGHT="261" ALT="CRendererPosPassThru class hierarchy">

<P>The <A HREF="/directx/dxm/help/ds/dssd0163.htm">IMediaSeeking</A> interface is used to seek to a specific sample, frame,
or indexed field. These values are indicated by a whole number, such as frame 20 of a 
sequence of 530. However, when asked for a reference start or end time (in seconds), 
the sample must have this information previously set. The <B>CRendererPosPassThru</B> 
class, implemented on the video renderer, performs this service because the renderer
is responsible for keeping track of reference time and stream time. 

<A NAME="Member_Functions"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0251.htm#+">CRendererPosPassThru</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="/directx/dxm/help/ds/dssd0251.htm">CRendererPosPassThru</A> object.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0251.htm#GetMediaTime">GetMediaTime</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the media start and end times registered in the object.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0251.htm#RegisterMediaTime">RegisterMediaTime</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Registers the media start and end times with the object.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0251.htm#ResetMediaTime">ResetMediaTime</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Resets the object's media start and end times.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="+">CRendererPosPassThru::CRendererPosPassThru</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0251.htm">CRendererPosPassThru Class</A>
<P>Constructs a <A HREF="/directx/dxm/help/ds/dssd0251.htm">CRendererPosPassThru</A> object.

<P><B>CRendererPosPassThru</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>TCHAR</B> <I>*pName</I><B>,</B><BR>&nbsp;&nbsp;<B>LPUNKNOWN</B> <I>pUnk</I><B>,</B><BR>&nbsp;&nbsp;<B>HRESULT</B> <B>*</B> <I>phr</I><B>,</B><BR>&nbsp;&nbsp;<B>IPin</B> <B>*</B> <I>pPin</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pName</I>
 </DT><DD>Name of the object used in the <A HREF="/directx/dxm/help/ds/dssd0251.htm">CRendererPosPassThru</A> constructor for debugging purposes.
</DD><DT><I>pUnk</I>
 </DT><DD>Pointer to the owner of this object.
</DD><DT><I>phr</I>
 </DT><DD>Pointer to an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value for resulting information.
</DD><DT><I>pPin</I>
 </DT><DD>Pointer to the input pin for the filter.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>Allocate the <I>pName</I> parameter in static memory. This name
appears on the debugging terminal upon creation and deletion of the object.
<H3><HR COLOR="#0000FF"><A NAME="GetMediaTime">CRendererPosPassThru::GetMediaTime</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0251.htm">CRendererPosPassThru Class</A>
<P>Retrieves the current media start and end times registered in the object.

<P><B>HRESULT</B> <B>GetMediaTime</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG*</B> <I>pStartTime</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG*</B> <I>pEndTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pStartTime</I>
 </DT><DD>Returned starting media time.
</DD><DT><I>pEndTime</I>
 </DT><DD>Returned ending media time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value from the call to <A HREF="/directx/dxm/help/ds/dssd0245.htm#ConvertTimeFormat">CPosPassThru::ConvertTimeFormat</A> for the start and end times.


<H5>Remarks</H5>
<P>This member function returns the media times set by the 
<A HREF="/directx/dxm/help/ds/dssd0251.htm#RegisterMediaTime">CRendererPosPassThru::RegisterMediaTime</A> member function. 
The starting media time is always returned. Set <I>pEndTime</I> to a 
nonzero value to retrieve the ending media time.
<H3><HR COLOR="#0000FF"><A NAME="RegisterMediaTime">CRendererPosPassThru::RegisterMediaTime</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0251.htm">CRendererPosPassThru Class</A>
<P>Registers the media start and end times with the object.

<P><B>HRESULT</B> <B>RegisterMediaTime</B><B>(</B><BR>&nbsp;&nbsp;<B>IMediaSample</B> <I>*pMediaSample</I><BR>&nbsp;&nbsp;<B>)</B><B>,</B><BR><BR>&nbsp;&nbsp;<B>HRESULT</B> <B>RegisterMediaTime</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <I>pStartTime</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <I>pEndTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pMediaSample</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0161.htm">IMediaSample</A> object containing the media times.
</DD><DT><I>pStartTime</I>
 </DT><DD>Returned starting media time.
</DD><DT><I>pEndTime</I>
 </DT><DD>Returned ending media time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_E_MEDIA_TIME_NOT">VFW_E_MEDIA_TIME_NOT_SET</A> if the 
sample does not have its media times set. Otherwise, returns and <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> from the call to <A HREF="/directx/dxm/help/ds/dssd0161.htm#GetTime">IMediaSample::GetTime</A>.





<H3><HR COLOR="#0000FF"><A NAME="ResetMediaTime">CRendererPosPassThru::ResetMediaTime</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0251.htm">CRendererPosPassThru Class</A>
<P>Resets the object's media start and end times.

<P><B>HRESULT</B> <B>ResetMediaTime</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns NOERROR.


<H5>Remarks</H5>
<P>Sets the start and stop times to zero. 
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
