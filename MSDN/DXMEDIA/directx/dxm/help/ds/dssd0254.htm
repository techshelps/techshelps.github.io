<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CSourceSeeking Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="CSourceSeeking Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="CSourceSeeking"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- CSourceSeeking Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- CSourceSeeking Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0188.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0255.htm">CSourceStream Class</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>CSourceSeeking Class</H2>
<BR CLEAR=ALL>
<P><IMG SRC="/directx/dxm/help/ds/art/cutil15.gif" WIDTH="262" HEIGHT="172" ALT="CSourceSeeking class hierarchy">

<P><B>CSourceSeeking</B> is an abstract class that assists source filters with the implementation of <A HREF="/directx/dxm/help/ds/dssd0163.htm">IMediaSeeking</A> interface methods. This class enables a source filter to handle calls that change the start and stop positions in the media stream and the playback rate. 

<P>Derive from this class and set the positions. This class supports <A HREF="/directx/dxm/help/ds/dssd0163.htm">IMediaSeeking</A>, and calls the pure virtual member functions
<A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeStart">CSourceSeeking::ChangeStart</A>, <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeStop">CSourceSeeking::ChangeStop</A>, and <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeRate">CSourceSeeking::ChangeRate</A> when <A HREF="/directx/dxm/help/ds/dssd0254.htm#SetPositions">CSourceSeeking::SetPositions</A> or <A HREF="/directx/dxm/help/ds/dssd0254.htm#SetRate">CSourceSeeking::SetRate</A> is called, to enable a source filter to handle these commands and start sending new data. 

<P>Override the <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeStart">CSourceSeeking::ChangeStart</A>, <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeStop">CSourceSeeking::ChangeStop</A>, and <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeRate">CSourceSeeking::ChangeRate</A> member functions to do something when the properties change.

<A NAME="Protected_Data_Membe"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_dRateSeeking">m_dRateSeeking</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Playback rate. Set to 1 by default.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_dwSeekingCaps">m_dwSeekingCaps</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Seeking capabilities returned in the <A HREF="/directx/dxm/help/ds/dssd0254.htm#GetCapabilities">GetCapabilities</A> function. Can be one or more of the following values: AM_SEEKING_CanSeekForwards, AM_SEEKING_CanSeekBackwards, AM_SEEKING_CanSeekAbsolute, AM_SEEKING_CanGetStopPos, AM_SEEKING_CanGetDuration. Set to all of these by default.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_pLock">m_pLock</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pointer to a <A HREF="/directx/dxm/help/ds/dssd0218.htm">CCritSec</A> object for locking.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_rtDuration">m_rtDuration</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Duration of the stream. Set to <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_rtStop">m_rtStop</A> by default.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_rtStart">m_rtStart</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Start time. Set to zero by default.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_rtStop">m_rtStop</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stop time. Set to the largest positive 64-bit integer possible (9223372036854775807) by default.
</FONT></TD></TR></TABLE>
<A NAME="Member_Functions"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#+">CSourceSeeking</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking</A> object.
</FONT></TD></TR></TABLE>
<A NAME="Overridable_Member_F"></A><P><B>Overridable Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeRate">ChangeRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Override this pure virtual to handle notification of a change of sample rate. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeStart">ChangeStart</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Override this pure virtual to handle notification of a change of start time. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeStop">ChangeStop</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Override this pure virtual to handle notification of a change in stop time. 
</FONT></TD></TR></TABLE>
<A NAME="Implemented_IMediaSe"></A><P><B>Implemented IMediaSeeking Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#CheckCapabilities">CheckCapabilities</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Checks that all requested capabilities are in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_dwSeekingCaps">m_dwSeekingCaps</A>. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#ConvertTimeFormat">ConvertTimeFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Checks that the time format is TIME_FORMAT_MEDIA_TIME. This is the only format currently available.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetAvailable">GetAvailable</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the range of seeking times. Earliest is zero and latest is the media stream's duration.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetCapabilities">GetCapabilities</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current seeking capabilities in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_dwSeekingCaps">m_dwSeekingCaps</A>. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetCurrentPosition">GetCurrentPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Not currently implemented.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetDuration">GetDuration</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the length of time the media stream will play.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetPositions">GetPositions</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current start and stop position settings.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetPreroll">GetPreroll</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the preroll time to zero.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetRate">GetRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current playback rate.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetStopPosition">GetStopPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the position within the media stream at which playback should stop.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetTimeFormat">GetTimeFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the time format to TIME_FORMAT_MEDIA_TIME. This is the only format currently supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#IsFormatSupported">IsFormatSupported</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the requested format is TIME_FORMAT_MEDIA_TIME. This is the only format currently supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#IsUsingTimeFormat">IsUsingTimeFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the requested format is TIME_FORMAT_MEDIA_TIME. This is the only format currently supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#QueryPreferredFormat">QueryPreferredFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the preferred time format to TIME_FORMAT_MEDIA_TIME. This is the only format currently supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#SetPositions">SetPositions</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets current and stop positions, first checking that the seeking options are valid. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#SetRate">SetRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the playback rate.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#SetTimeFormat">SetTimeFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Checks that the time format is TIME_FORMAT_MEDIA_TIME. This is the only format currently supported.
</FONT></TD></TR></TABLE>
<A NAME="Implemented_INonDele"></A><P><B>Implemented INonDelegatingUnknown Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0254.htm#NonDelegatingQueryInterface">NonDelegatingQueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves an interface and increments the reference count on the interface.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="ChangeRate">CSourceSeeking::ChangeRate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Override this member function to handle notification of a change of sample rate.

<P><B>virtual</B> <B>HRESULT</B> <B>ChangeRate</B><B>(</B> <B>)</B> <B>PURE;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function is called when a change to the rate has been made by a call to the <A HREF="/directx/dxm/help/ds/dssd0254.htm#SetRate">CSourceSeeking::SetRate</A> function. Override this and change the rate of data sent. Typically, you do this by calling <A HREF="/directx/dxm/help/ds/dssd0203.htm#BeginFlush">CBaseInputPin::BeginFlush</A> and <A HREF="/directx/dxm/help/ds/dssd0203.htm#EndFlush">CBaseInputPin::EndFlush</A>, and then send samples marked with new time stamps, for example, with an implementation <A HREF="/directx/dxm/help/ds/dssd0170.htm#NewSegment">NewSegment</A> method.
<H3><HR COLOR="#0000FF"><A NAME="ChangeStart">CSourceSeeking::ChangeStart</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Override this member function to handle notification of a change of start time.

<P><B>virtual</B> <B>HRESULT</B> <B>ChangeStart</B><B>(</B> <B>)</B> <B>PURE;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function is called when a new start position has been requested by a call to <A HREF="/directx/dxm/help/ds/dssd0254.htm#SetPositions">CSourceSeeking::SetPositions</A>. Override this and change the data sent. Typically, you do this by calling <A HREF="/directx/dxm/help/ds/dssd0203.htm#BeginFlush">CBaseInputPin::BeginFlush</A> and <A HREF="/directx/dxm/help/ds/dssd0203.htm#EndFlush">CBaseInputPin::EndFlush</A>, and then send samples marked with new start time, for example, with an implementation <A HREF="/directx/dxm/help/ds/dssd0170.htm#NewSegment">NewSegment</A> method.
<H3><HR COLOR="#0000FF"><A NAME="ChangeStop">CSourceSeeking::ChangeStop</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Override this member function to handle notification of a change in stop time.

<P><B>virtual</B> <B>HRESULT</B> <B>ChangeStop</B><B>(</B> <B>)</B> <B>PURE;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function is called when a change to the stop position has been made by a call to <A HREF="/directx/dxm/help/ds/dssd0254.htm#SetPositions">CSourceSeeking::SetPositions</A>. Override this and ensure that the correct stop time is being observed. Typically, you do this by calling <A HREF="/directx/dxm/help/ds/dssd0203.htm#BeginFlush">CBaseInputPin::BeginFlush</A> and <A HREF="/directx/dxm/help/ds/dssd0203.htm#EndFlush">CBaseInputPin::EndFlush</A>, and then send samples marked with new stop time, for example, with an implementation <A HREF="/directx/dxm/help/ds/dssd0170.htm#NewSegment">NewSegment</A> method.
<H3><HR COLOR="#0000FF"><A NAME="CheckCapabilities">CSourceSeeking::CheckCapabilities</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Checks that all the requested capabilities are among the flags in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_dwSeekingCaps">m_dwSeekingCaps</A>.

<P><B>HRESULT</B> <B>CheckCapabilities</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <B>*</B> <I>pCapabilities</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCapabilities</I>
 </DT><DD>Pointer to an <B>AM_SEEKING_CAPABILITIES</B> enumerator



 containing the desired seeking capabilities flags in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_dwSeekingCaps">m_dwSeekingCaps</A>. This value can be any combination of the following flags:

 <TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetCurrentPos
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetDuration
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetStopPos
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanPlayBackwards
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekAbsolute 
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekBackwards
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekForwards 
 </FONT></TD></TR></TABLE>
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pCapabilities</I> is not a valid pointer, S_OK if all the requested capabilities in <I>pCapabilities</I> are supported, or S_FALSE if they are not.


<H3><HR COLOR="#0000FF"><A NAME="ConvertTimeFormat">CSourceSeeking::ConvertTimeFormat</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Checks that the time format is TIME_FORMAT_MEDIA_TIME. This is the only format currently available.
<P><B>HRESULT</B> <B>ConvertTimeFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pTarget</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pTargetFormat</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <I>Source</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pSourceFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pTarget</I>
 </DT><DD>Time set to <I>Source</I> time if the format is TIME_FORMAT_MEDIA_TIME or NULL.
</DD><DT><I>pTargetFormat</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0412.htm#GUID">GUID</A> of the TIME_FORMAT_MEDIA_TIME format, or NULL. 
</DD><DT><I>Source</I>
 </DT><DD>Time in original format. 
</DD><DT><I>pSourceFormat</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0412.htm#GUID">GUID</A> of the TIME_FORMAT_MEDIA_TIME format, or NULL. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pTarget</I> is not a valid pointer, or E_INVALIDARG if <I>pTargetFormat</I> and <I>pSourceFormat</I> are not equal to TIME_FORMAT_MEDIA_TIME or NULL; otherwise, returns S_OK.



<H3><HR COLOR="#0000FF"><A NAME="+">CSourceSeeking::CSourceSeeking</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Constructs a <A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking</A> object.

<P><B>CSourceSeeking</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>TCHAR</B> <B>*</B> <I>pName</I><B>,</B><BR>&nbsp;&nbsp;<B>LPUNKNOWN</B> <I>pUnk</I><B>,</B><BR>&nbsp;&nbsp;<B>HRESULT</B> <B>*</B> <I>phr</I><B>,</B><BR>&nbsp;&nbsp;<B>CCritSec</B> <B>*</B> <I>pLock</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pName</I>
 </DT><DD>Name of the object used in the <A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking</A> constructor for debugging purposes.
</DD><DT><I>pUnk</I>
 </DT><DD>Pointer to the owner of this object.
</DD><DT><I>phr</I>
 </DT><DD>Pointer to an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value for information about the results of creating this object.
</DD><DT><I>pLock</I>
 </DT><DD>Pointer to a <A HREF="/directx/dxm/help/ds/dssd0218.htm">CCritSec</A> object used for synchronization within a process.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>Allocate the <I>pName</I> parameter in static memory. This name appears on the debugging terminal upon creation and deletion of the object.
<H3><HR COLOR="#0000FF"><A NAME="GetAvailable">CSourceSeeking::GetAvailable</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Returns the range of seeking times.

<P><B>HRESULT</B> <B>GetAvailable</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pEarliest</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pLatest</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pEarliest</I>
 </DT><DD>Earliest time that can be seeked to. Set to zero.
</DD><DT><I>pLatest</I>
 </DT><DD>Latest time that can be seeked to. Set to <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_rtDuration">m_rtDuration</A>.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK. 


<H3><HR COLOR="#0000FF"><A NAME="GetCapabilities">CSourceSeeking::GetCapabilities</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Retrieves the seeking capabilities of the media stream.
<P><B>HRESULT</B> <B>GetCapabilities</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <B>*</B> <I>pCapabilities</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCapabilities</I>
 </DT><DD>Set to the seeking capability flags in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_dwSeekingCaps">m_dwSeekingCaps</A>, which can be any combination of the following:
 <TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetCurrentPos
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetDuration
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetStopPos
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanPlayBackwards
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekAbsolute 
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekBackwards
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekForwards 
 </FONT></TD></TR></TABLE>
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pCapabilities</I> is invalid; otherwise, returns S_OK.


<H3><HR COLOR="#0000FF"><A NAME="GetCurrentPosition">CSourceSeeking::GetCurrentPosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Not currently implemented.

<P><B>HRESULT</B> <B>GetCurrentPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG*</B> <I>pCurrent</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCurrent</I>
 </DT><DD>Current position in current time format units.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_NOTIMPL.


<H5>Remarks</H5>
<P>This function is typically supported only in renderers and not in source filters. 
<H3><HR COLOR="#0000FF"><A NAME="GetDuration">CSourceSeeking::GetDuration</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Retrieves the length of time that the media stream will play.

<P><B>HRESULT</B> <B>GetDuration</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG*</B> <I>pDuration</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pDuration</I>
 </DT><DD>Duration of the media stream set to the value in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_rtDuration">m_rtDuration</A>.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pDuration</I> is invalid; otherwise, returns S_OK.


<H5>Remarks</H5>
<P>The duration in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_rtDuration">m_rtDuration</A> is set to the stop time in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_rtStop">m_rtStop</A>. Set the stop time with the <A HREF="/directx/dxm/help/ds/dssd0254.htm#SetPositions">CSourceSeeking::SetPositions</A> function.
<H3><HR COLOR="#0000FF"><A NAME="GetPositions">CSourceSeeking::GetPositions</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Retrieves the current and stop position settings.

<P><B>HRESULT</B> <B>GetPositions</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pCurrent</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pStop</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCurrent</I>
 </DT><DD>Current start time set to the value in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_rtStart">m_rtStart</A>.
</DD><DT><I>pStop</I>
 </DT><DD>Current stop time set to the value in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_rtStop">m_rtStop</A>.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK.


<H5>Remarks</H5>
<P>The start and stop times are set in the <A HREF="/directx/dxm/help/ds/dssd0254.htm#SetPositions">CSourceSeeking::SetPositions</A> function.
<H3><HR COLOR="#0000FF"><A NAME="GetPreroll">CSourceSeeking::GetPreroll</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Sets the preroll time to zero.

<P><B>HRESULT</B> <B>GetPreroll</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pPreroll</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pPreroll</I>
 </DT><DD>Returned preroll time of zero. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pPreroll</I> is invalid; otherwise, returns S_OK.


<H3><HR COLOR="#0000FF"><A NAME="GetRate">CSourceSeeking::GetRate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Retrieves the current playback rate. 

<P><B>HRESULT</B> <B>GetRate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <B>*</B> <I>pdRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdRate</I>
 </DT><DD>Returned playback rate set to the value in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_dRateSeeking">m_dRateSeeking</A>, where 1 is the normal rate. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pdRate</I> is invalid; otherwise, returns S_OK.


<H5>Remarks</H5>
<P>Set the rate in the <A HREF="/directx/dxm/help/ds/dssd0254.htm#SetRate">CSourceSeeking::SetRate</A> function.
<H3><HR COLOR="#0000FF"><A NAME="GetStopPosition">CSourceSeeking::GetStopPosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Retrieves the position within the media stream at which playback should stop.

<P><B>HRESULT</B> <B>GetStopPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG*</B> <I>pStop</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pStop</I>
 </DT><DD>Returned stop time set to the value in <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_rtStop">m_rtStop</A>.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pStop</I> is invalid; otherwise, returns S_OK.


<H5>Remarks</H5>
<P>Set the stop time in the <A HREF="/directx/dxm/help/ds/dssd0254.htm#SetPositions">CSourceSeeking::SetPositions</A> function.
<H3><HR COLOR="#0000FF"><A NAME="GetTimeFormat">CSourceSeeking::GetTimeFormat</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Sets the time format to TIME_FORMAT_MEDIA_TIME, which determines the format of units used during seeking.

<P><B>HRESULT</B> <B>GetTimeFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pFormat</I>
 </DT><DD>Media time format set to TIME_FORMAT_MEDIA_TIME.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pFormat</I> is invalid; otherwise, returns S_OK.



<H5>Remarks</H5>
<P>TIME_FORMAT_MEDIA_TIME is the only time format currently supported.
<H3><HR COLOR="#0000FF"><A NAME="IsFormatSupported">CSourceSeeking::IsFormatSupported</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Determines if the requested format is TIME_FORMAT_MEDIA_TIME. 
<P><B>HRESULT</B> <B>IsFormatSupported</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pFormat</I>
 </DT><DD>Time format to compare to TIME_FORMAT_MEDIA_TIME.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pFormat</I> is invalid, S_OK if the format in <I>pFormat</I> is TIME_FORMAT_MEDIA_TIME, or S_FALSE if the format in <I>pFormat</I> is not TIME_FORMAT_MEDIA_TIME.


<H5>Remarks</H5>
<P>TIME_FORMAT_MEDIA_TIME is the only time format currently supported. As implemented, this function is the same as <A HREF="/directx/dxm/help/ds/dssd0254.htm#IsUsingTimeFormat">CSourceSeeking::IsUsingTimeFormat</A>.

<H3><HR COLOR="#0000FF"><A NAME="IsUsingTimeFormat">CSourceSeeking::IsUsingTimeFormat</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Determines if the requested format is TIME_FORMAT_MEDIA_TIME. 

<P><B>HRESULT</B> <B>IsUsingTimeFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pFormat</I>
 </DT><DD>Time format to compare to TIME_FORMAT_MEDIA_TIME.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pFormat</I> is invalid, S_OK if the format in <I>pFormat</I> is TIME_FORMAT_MEDIA_TIME, or S_FALSE if the format in <I>pFormat</I> is not TIME_FORMAT_MEDIA_TIME.


<H5>Remarks</H5>
<P>TIME_FORMAT_MEDIA_TIME is the only time format currently supported. As implemented, this method is the same as <A HREF="/directx/dxm/help/ds/dssd0254.htm#IsFormatSupported">CSourceSeeking::IsFormatSupported</A>.
<H3><HR COLOR="#0000FF"><A NAME="NonDelegatingQueryInterface">CSourceSeeking::NonDelegatingQueryInterface</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Retrieves an interface and increments the reference count on the interface.

<P><B>HRESULT</B> <B>NonDelegatingQueryInterface</B><B>(</B><BR>&nbsp;&nbsp;<B>REFIID</B> <I>riid</I><B>,</B><BR>&nbsp;&nbsp;<B>void</B> <I>**ppv</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>riid</I>
 </DT><DD>Reference identifier.
</DD><DT><I>ppv</I>
 </DT><DD>Pointer to the interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>ppv</I> is invalid. Returns NOERROR if the query is successful or E_NOINTERFACE if it is not. 

<H5>Remarks</H5>
<P>Returns pointers to the <A HREF="/directx/dxm/help/ds/dssd0163.htm">IMediaSeeking</A> and <A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> interfaces by default. Override this method to publish any additional interfaces implemented by the derived class.

<P>This member function implements the <A HREF="/directx/dxm/help/ds/dssd0276.htm#INonDelegatingUnknow">INonDelegatingUnknown::NonDelegatingQueryInterface</A> method.
<H3><HR COLOR="#0000FF"><A NAME="QueryPreferredFormat">CSourceSeeking::QueryPreferredFormat</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Sets the preferred time format to TIME_FORMAT_MEDIA_TIME.

<P><B>HRESULT</B> <B>QueryPreferredFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>GUID</B> <I>*pFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pFormat</I>
 </DT><DD>Time format set to TIME_FORMAT_MEDIA_TIME.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pFormat</I> is invalid; otherwise, returns S_OK.


<H5>Remarks</H5>
<P>TIME_FORMAT_MEDIA_TIME is the only time format currently supported. 
<H3><HR COLOR="#0000FF"><A NAME="SetPositions">CSourceSeeking::SetPositions</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Sets current and stop positions, first checking that the seeking options are valid.

<P><B>HRESULT</B> <B>SetPositions</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pCurrent</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>CurrentFlags</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pStop</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>StopFlags</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCurrent</I>
 </DT><DD>Start position if stopped, or position to continue from if paused.
</DD><DT><I>CurrentFlags</I>
 </DT><DD>Flags that indicate the type of seek. Valid values are AM_SEEKING_AbsolutePositioning and AM_SEEKING_RelativePositioning. See the <A HREF="/directx/dxm/help/ds/dssd0163.htm#SetPositions">IMediaSeeking::SetPositions</A> method for a description of these flags.
</DD><DT><I>pStop</I>
 </DT><DD>Position in the stream at which to quit playback.
</DD><DT><I>StopFlags</I>
 </DT><DD>Flags that indicate stop position seeking options. Valid values are AM_SEEKING_AbsolutePositioning, AM_SEEKING_RelativePositioning, and AM_SEEKING_IncrementalPositioning. See the <A HREF="/directx/dxm/help/ds/dssd0163.htm#SetPositions">IMediaSeeking::SetPositions</A> method for a description of these flags.
 
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_INVALIDARG if <I>CurrentFlags</I> and <I>StopFlags</I> are not one of the values listed, or E_POINTER if <I>pCurrent</I> or <I>pStop</I> is invalid; otherwise, returns the <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> returned by calls to the <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeStart">CSourceSeeking::ChangeStart</A> and <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeStop">CSourceSeeking::ChangeStop</A> functions.


<H5>Remarks</H5>
<P>You must implement <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeStart">ChangeStart</A> and <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeStop">ChangeStop</A> to use this method. 


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetPositions">CSourceSeeking::GetPositions</A>, <A HREF="/directx/dxm/help/ds/dssd0254.htm#GetStopPosition">CSourceSeeking::GetStopPosition</A>, <A HREF="/directx/dxm/help/ds/dssd0254.htm#GetDuration">CSourceSeeking::GetDuration</A>

<H3><HR COLOR="#0000FF"><A NAME="SetRate">CSourceSeeking::SetRate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Sets a new playback rate.

<P><B>HRESULT</B> <B>SetRate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>dRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dRate</I>
 </DT><DD>New rate, where 1.0 is the normal normal playback speed. Specifying 2.0 causes playback at twice the normal rate: a video created for 10 frames per second (fps) will be played back at 20 fps, if resources permit. Audio streams played back at above-normal speed increase the pitch rather than drop samples. A rate of 0.5 specifies half speed. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value returned by the call to the <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeRate">CSourceSeeking::ChangeRate</A> function.
 

<H5>Remarks</H5>
<P>You must implement <A HREF="/directx/dxm/help/ds/dssd0254.htm#ChangeRate">ChangeRate</A> to use this method. The <A HREF="/directx/dxm/help/ds/dssd0254.htm#m_dRateSeeking">m_dRateSeeking</A> data member is set to the new rate. Setting the rate to zero causes an error.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0254.htm#GetRate">CSourceSeeking::GetRate</A>
<H3><HR COLOR="#0000FF"><A NAME="SetTimeFormat">CSourceSeeking::SetTimeFormat</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
<P>Checks that the requested format is TIME_FORMAT_MEDIA_TIME. 
<P><B>HRESULT</B> <B>SetTimeFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pFormat</I>
 </DT><DD>Time format to compare to TIME_FORMAT_MEDIA_TIME.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pFormat</I> is invalid, S_OK if the format in <I>pFormat</I> is TIME_FORMAT_MEDIA_TIME, or E_INVALIDARG if the format in <I>pFormat</I> is not TIME_FORMAT_MEDIA_TIME.


<H5>Remarks</H5>
<P>TIME_FORMAT_MEDIA_TIME is the only time format currently supported. 
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
