<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMediaFilter Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IMediaFilter Interface">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="IMediaFilter"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IMediaFilter Interface"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IMediaFilter Interface"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0091.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0157.htm">IMediaEventSink Interface</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0159.htm">IMediaPosition Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>IMediaFilter Interface</H2>
<BR CLEAR=ALL>
<P>Multimedia components that provide time-based data expose the <B>IMediaFilter</B>
interface. This interface abstracts an object that processes time-based data streams and
represents a multimedia device (possibly implemented in software). It
controls the active or running state of the object and the synchronization of this
state with other objects in the system.

<P>This interface inherits the <A HREF="/directx/dxm/help/ds/dssd0404.htm#IPersist">IPersist</A> interface.

<A NAME="When_to_Implement"></A><P><B>When to Implement</B>
<P>Methods on this interface should be implemented as part of any filter. This is
typically done by using the base class <A HREF="/directx/dxm/help/ds/dssd0202.htm#CBaseFilter">CBaseFilter</A>, which implements
<A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> and <A HREF="/directx/dxm/help/ds/dssd0158.htm">IMediaFilter</A>.

<A NAME="When_to_Use"></A><P><B>When to Use</B>
<P>Because the <A HREF="/directx/dxm/help/ds/dssd0158.htm">IMediaFilter</A> interface is inherited by the <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface,
which adds other necessary methods required to be exported by filters, this
interface is not normally used directly by the filter graph manager or other filters.
It can, however, be of use to plug-in distributors. For example, the filter graph manager internally exports <B>IMediaFilter</B>; its plug-in distributor exports <A HREF="/directx/dxm/help/ds/dssd0154.htm">IMediaControl</A> and calls the 
<B>IMediaFilter</B> methods to implement its own methods.

<A NAME="Methods_in_Vtable_Or"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#QueryInterface">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IMediaFilter methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0158.htm#Stop">Stop</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the filter to transition to the new (stopped) state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0158.htm#Pause">Pause</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the filter to transition to the new (paused) state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0158.htm#Run">Run</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the filter to transition to the new (running) state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0158.htm#GetState">GetState</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines the state of the filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0158.htm#SetSyncSource">SetSyncSource</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Identifies the reference clock to which the filter should synchronize activity.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0158.htm#GetSyncSource">GetSyncSource</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current reference clock (or NULL if there is no clock).
Passes a time value to synchronize independent streams.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="GetState">IMediaFilter::GetState</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0158.htm">IMediaFilter Interface</A>
<P>Determines the filter's state.

<P><B>HRESULT</B> <B>GetState</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwMilliSecsTimeout</I><B>,</B><BR>&nbsp;&nbsp;<B>FILTER_STATE</B> <B>*</B> <I>State</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwMilliSecsTimeout</I>
</DT><DD>[in] Duration of the time-out, in milliseconds. To block indefinitely, pass INFINITE.
</DD><DT><I>State</I>
</DT><DD>[out] Returned state of the filter. States include stopped, paused,
running, or intermediate (in the process of changing).
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if the state is running, paused, or inactive; otherwise,
returns <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_S_STATE_INTERMED">VFW_S_STATE_INTERMEDIATE</A> if the transition is not complete
(the time-out expired). The state returned in the latter case is the one being changed to.

<H5>Remarks</H5>
<P>Usually, renderer filters will return <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_S_STATE_INTERMED">VFW_S_STATE_INTERMEDIATE</A> until they receive 
enough data to render at least one sample. In some circumstances, a filter will 
find that it can supply data on all of its output streams. This
condition usually occurs because of unusual or bad data. An example of unusual data 
might be an MPEG slide show, where video frames occur infrequently in the data but audio is 
continuous. In this case, 

a video frame in the video stream might not be found until
a certain spot in the audio stream. If the filter discovers that it cannot complete the 
state change (for this or any other reason), it can return <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_S_CANT_CUE">VFW_S_CANT_CUE</A>. 

<P>When an application calls the filter graph manager's <A HREF="/directx/dxm/help/ds/dssd0154.htm#GetState">IMediaControl::GetState</A> method,
the filter graph manager calls <B>GetState</B> on the filter and
continues to poll. If the filter graph manager receives <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_S_CANT_CUE">VFW_S_CANT_CUE</A> back from the filter, 
it returns this value to the application from its <B>IMediaControl::GetState</B> method. 

<H3><HR COLOR="#0000FF"><A NAME="GetSyncSource">IMediaFilter::GetSyncSource</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0158.htm">IMediaFilter Interface</A>
<P>Retrieves the current reference clock in use by this filter.

<P><B>HRESULT</B> <B>GetSyncSource</B><B>(</B><BR>&nbsp;&nbsp;<B>IReferenceClock</B> <B>**</B> <I>pClock</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pClock</I>
</DT><DD>[out] Pointer to a reference clock; it will be set to the <A HREF="/directx/dxm/help/ds/dssd0175.htm">IReferenceClock</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>The returned interface (if it is non-NULL) will have a reference added by the
<A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">IUnknown::AddRef</A> method. The calling application should release the interface
by calling the <A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">IUnknown::Release</A> method when it has finished with the pointer.
<H3><HR COLOR="#0000FF"><A NAME="Pause">IMediaFilter::Pause</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0158.htm">IMediaFilter Interface</A>
<P>Informs the filter to transition to the new state.

<P><B>HRESULT</B> <B>Pause</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns S_OK if the transition is complete; otherwise, returns one of the following values.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>Error</I> value </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Transition failed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_FALSE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Transition is not complete, but no error has occurred.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>The state transition might not be immediate (external mechanical activity
might be involved, for example). The state method might return before the transition has
completed.
<H3><HR COLOR="#0000FF"><A NAME="Run">IMediaFilter::Run</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0158.htm">IMediaFilter Interface</A>
<P>Informs the filter to transition to the new (running) state.
Passes a time value to synchronize independent streams.

<P><B>HRESULT</B> <B>Run</B><B>(</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>tStart</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>tStart</I>
</DT><DD>Time value of the reference clock.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>The <I>tStart</I> parameter is the amount to be added to the <A HREF="/directx/dxm/help/ds/dssd0161.htm">IMediaSample</A>
time stamp to determine the time at which that sample should be rendered according to the
reference clock. That is, it is the reference time at which a sample with a stream time of
zero should be rendered.

<P>For example, the time value for the beginning of the stream is the time at
which the first sample should appear. If the application restarts from paused mode in
midstream, <I>tStart</I> is the amount of time paused, plus the start time.

<P>The filter graph provides this information to its filters. An application
calling the filter graph may pass a start time of zero, in which case the filter
graph calculates a time that will begin as soon as possible. Filter graphs accept zero to mean
as soon as possible; most filters do not.
<H3><HR COLOR="#0000FF"><A NAME="SetSyncSource">IMediaFilter::SetSyncSource</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0158.htm">IMediaFilter Interface</A>
<P>Identifies the reference clock to which the filter should synchronize activity.

<P><B>HRESULT</B> <B>SetSyncSource</B><B>(</B><BR>&nbsp;&nbsp;<B>IReferenceClock</B> <B>*</B> <I>pClock</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pClock</I>
</DT><DD>[in] Pointer to the <A HREF="/directx/dxm/help/ds/dssd0175.htm">IReferenceClock</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method is of most importance to rendering filters and might not apply to other filters.
The <I>pClock</I> parameter can be NULL, meaning that the filter should run as fast as
possible at its current quality settings without any attempt to synchronize. For example, a
filter graph that is doing compression probably runs in this mode. Each filter
takes as long as it needs.
<H3><HR COLOR="#0000FF"><A NAME="Stop">IMediaFilter::Stop</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0158.htm">IMediaFilter Interface</A>
<P>Informs the filter to transition to the new state.

<P><B>HRESULT</B> <B>Stop</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns S_OK if the transition is complete; otherwise, returns one of the following values.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>Error</I> value </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Transition failed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_FALSE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Transition is not complete, but no error has occurred.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>The state transition might not be immediate (external mechanical activity might be involved,
for example). The state functions might return before the transition has completed.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
