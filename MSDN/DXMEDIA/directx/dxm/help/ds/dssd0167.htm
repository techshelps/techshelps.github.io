<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMixerPinConfig Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IMixerPinConfig Interface">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="IMixerPinConfig"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IMixerPinConfig Interface"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IMixerPinConfig Interface"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0091.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0166.htm">IMemInputPin Interface</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/IMixerPinConfig2.htm">IMixerPinConfig2 Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>IMixerPinConfig Interface</H2>
<BR CLEAR=ALL>
<P>The <B>IMixerPinConfig</B> interface is exposed on the input pins of overlay mixer filters and contains methods that manipulate video streams in various ways. The overlay mixer filter contains multiple input pins that are dynamically created as video input streams are added. The video stream on the first pin is known as the <I>primary stream</I> and subsequent streams are known as <I>secondary streams</I>. 




<P>Use this interface to manipulate the parameters involved in mixing various video streams. These parameters include getting and setting position, z-order, blending and transparency levels, aspect ratio correction, and colorkeys of streams.

<A NAME="When_to_Implement"></A><P><B>When to Implement
</B>
<P>DirectShow implements this interface on the input pins of overlay mixer filters. Developers should implement this interface when they create filters that mix video streams.

<A NAME="When_to_Use"></A><P><B>When to Use
</B>
<P>Applications use this interface to get and set attributes when mixing multiple video streams.

<A NAME="Methods_in_Vtable_Or"></A><P><B>Methods in Vtable Order

</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#QueryInterface">QueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">AddRef</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IMixerPinConfig methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetRelativePosition">SetRelativePosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the position of the stream in the display window.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetRelativePosition">GetRelativePosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the position of the stream in the display window.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetZOrder">SetZOrder</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the z-order of a particular video stream.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetZOrder">GetZOrder</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the z-order of a particular video stream.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetColorKey">SetColorKey</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the colorkey being used by a video stream.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetColorKey">GetColorKey</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the colorkey being used by a video stream.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetBlendingParameter">SetBlendingParameter</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the blending parameter that defines how a secondary stream is blended with a primary stream. 
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetBlendingParameter">GetBlendingParameter</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the value of the blending parameter that defines how a secondary stream is blended with a primary stream.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetAspectRatioMode">SetAspectRatioMode</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the aspect ratio correction mode for window resizing.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetAspectRatioMode">GetAspectRatioMode</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the aspect ratio correction mode for window resizing.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetStreamTransparent">SetStreamTransparent</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the stream to transparent.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetStreamTransparent">SetStreamTransparent</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines whether a stream is transparent.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="GetAspectRatioMode">IMixerPinConfig::GetAspectRatioMode</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Retrieves the aspect ratio correction mode for window resizing.
<P><B>STDMETHOD</B> <B>GetAspectRatioMode</B><B>(</B><BR>&nbsp;&nbsp;<B>AM_ASPECT_RATIO_MODE*</B> <I>pamAspectRatioMode</I><BR>&nbsp;&nbsp;<B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>pamAspectRatioMode</I>
 </DT><DD>[out] Pointer to an <A HREF="/directx/dxm/help/ds/dssd0299.htm#AM_ASPECT_RATIO_MODE">AM_ASPECT_RATIO_MODE</A> enumerated type member.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. Current DirectShow implementation return values include:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method called on secondary stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Value invalid or NULL.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No error.
</FONT></TD></TR></TABLE>

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetAspectRatioMode">IMixerPinConfig::SetAspectRatioMode</A>

<H3><HR COLOR="#0000FF"><A NAME="GetBlendingParameter">IMixerPinConfig::GetBlendingParameter</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Retrieves the value of the blending parameter that defines how a secondary stream is blended with a primary stream. 
<P><B>STDMETHOD</B> <B>GetBlendingParameter</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwBlendingParameter</I><BR>&nbsp;&nbsp;<B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdwBlendingParameter</I>
 </DT><DD>[out] Value between 0 and 255 that indicates the amount of blending between a primary stream and a secondary stream. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. Current DirectShow implementation return values include:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_UNEXPECTED </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method called on primary stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Value outside of possible range (0-255).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No error.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>A value of zero indicates that the secondary stream is invisible; a value of 255 indicates the primary stream is invisible in the area that the secondary stream occupies.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetBlendingParameter">IMixerPinConfig::SetBlendingParameter</A>

<H3><HR COLOR="#0000FF"><A NAME="GetColorKey">IMixerPinConfig::GetColorKey</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Retrieves the colorkey being used by a video stream.
<P><B>STDMETHOD</B> <B>GetColorKey</B><B>(</B><BR>&nbsp;&nbsp;<B>COLORKEY</B> <I>*pColorKey</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pColor</I> <B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>pColorKey</I>
 </DT><DD>[out] Pointer to a <A HREF="/directx/dxm/help/ds/dssd0298.htm#COLORKEY">COLORKEY</A> structure that contains the key type and a palette index. 
</DD><DT><I>pColor</I>
 </DT><DD>[out] Value indicating the palette index of the <A HREF="/directx/dxm/help/ds/dssd0298.htm#COLORKEY">COLORKEY</A> structure.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. Current DirectShow implementation return values include:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid arguments, both parameters are NULL.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>GetColorKey</B> failed because the colorkey isn't known.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No error.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>Getting the value on the primary stream will retrieve the destination colorkey being used by the overlay surface. Getting this value on the secondary pin returns the colorkey being used by that particular stream.

<P>Current DirectShow implementation of this interface can return NULL for either the <I>pColorKey</I> or the <I>pColor</I> parameters; however, the method will fail and return E_INVALIDARG if both parameters are NULL.
 
<P><B>Note</B>  The <A HREF="/directx/dxm/help/ds/dssd0404.htm#DWORD">DWORD</A> value returned by the <I>pColor</I> parameter is the actual color being used. So, if the bit depth of the display is 8, 16, 24, 32 the last 8, 16, 24 or 32 bits of the <B>DWORD</B> specify the actual value of the colorkey.<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetColorKey">IMixerPinConfig::SetColorKey</A>

<H3><HR COLOR="#0000FF"><A NAME="GetStreamTransparent">IMixerPinConfig::GetStreamTransparent</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Determines whether a stream is transparent.
<P><B>STDMETHOD</B> <B>GetStreamTransparent</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>*pbStreamTransparent</I><BR>&nbsp;&nbsp;<B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>pbStreamTransparent</I>
 </DT><DD>[out] TRUE indicates transparent stream; FALSE indicates not a transparent stream.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method is not supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No error.
</FONT></TD></TR></TABLE>

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetStreamTransparent">IMixerPinConfig::SetStreamTransparent</A>
<H3><HR COLOR="#0000FF"><A NAME="GetRelativePosition">IMixerPinConfig::GetRelativePosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Retrieves the position of the stream in the display window.
<P><B>STDMETHOD</B> <B>GetRelativePosition</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwLeft</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwTop</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwRight</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwBottom</I> <B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdwLeft</I>
 </DT><DD>[out] Indicates the x-coordinate in the top-left corner of the display window.
</DD><DT><I>pdwTop</I>
 </DT><DD>[out] Indicates the y-coordinate in the top-left corner of the display window.
</DD><DT><I>pdwRight</I>
 </DT><DD>[out] Indicates the x-coordinate in the bottom-right corner of the display window.
</DD><DT><I>pdwBottom</I>
 </DT><DD>[out] Indicates the y-coordinate in the bottom-right corner of the display window.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. Current DirectShow implementation return values include:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Coordinates not in the {0, 0, 10,000, 10,000} range.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No error.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method assumes window coordinates of {0, 0, 10,000, 10,000}. If the video stream is being rendered in the bottom right quarter of the display window, this method would return {5,000, 5,000, 10,000, 10,000}.
 
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetRelativePosition">IMixerPinConfig::SetRelativePosition</A>
<H3><HR COLOR="#0000FF"><A NAME="GetZOrder">IMixerPinConfig::GetZOrder</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Retrieves the z-order of a particular video stream.
<P><B>STDMETHOD</B> <B>GetZOrder</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwZOrder</I> <B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdwZOrder</I>
 </DT><DD>[out] Value indicating the order in which streams will clip each other.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. This method is not currently implemented and returns E_NOTIMPL.

<H5>Remarks</H5>
<P>Images with larger z-values are always in front of images with smaller z-values.
 
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#SetZOrder">IMixerPinConfig::SetZOrder</A>
<H3><HR COLOR="#0000FF"><A NAME="SetAspectRatioMode">IMixerPinConfig::SetAspectRatioMode</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Sets the aspect ratio correction mode for window resizing.
<P><B>STDMETHOD</B> <B>SetAspectRatioMode</B><B>(</B><BR>&nbsp;&nbsp;<B>AM_ASPECT_RATIO_MODE</B> <I>amAspectRatioMode</I><BR>&nbsp;&nbsp;<B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>amAspectRatioMode</I>
 </DT><DD>[in] Specify one of the <A HREF="/directx/dxm/help/ds/dssd0299.htm#AM_ASPECT_RATIO_MODE">AM_ASPECT_RATIO_MODE</A> enumerated type members.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. Current DirectShow implementation return values include:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method called on secondary stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No error.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>Currently this function is implemented only on the primary pin of the <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0349.htm#VP_Mixer">Overlay Mixer</A> filter. Calling it on a secondary pin will result in an error.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetAspectRatioMode">IMixerPinConfig::GetAspectRatioMode</A>

<H3><HR COLOR="#0000FF"><A NAME="SetBlendingParameter">IMixerPinConfig::SetBlendingParameter</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Sets the blending parameter that defines how a secondary stream is blended with a primary stream. 
<P><B>STDMETHOD</B> <B>SetBlendingParameter</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwBlendingParameter</I><BR>&nbsp;&nbsp;<B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwBlendingParameter</I>
 </DT><DD>[in] Value between 0 and 255 that indicates the amount of blending between a primary stream and a secondary stream. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. Current DirectShow implementation return values include:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_UNEXPECTED </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method called on primary stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Value outside of possible range (0 to 255).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No error.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>The value of the <I>dwBlendingParameter</I> parameter must be between 0 and 255, where 0 makes the secondary stream invisible and 255 makes the primary stream invisible in the area that the secondary stream occupies. If no value is set the default is 255.

<P>This method is not intended to be called on the primary stream.

<P><B>Note</B>  Current DirectShow implementation of this interface allows only values of 0 or 255 for the <I>dwBlendingParameter</I> parameter. Any other values are invalid.<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetBlendingParameter">IMixerPinConfig::GetBlendingParameter</A>

<H3><HR COLOR="#0000FF"><A NAME="SetColorKey">IMixerPinConfig::SetColorKey</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Sets the colorkey being used by a video stream.
<P><B>STDMETHOD</B> <B>SetColorKey</B><B>(</B><BR>&nbsp;&nbsp;<B>COLORKEY</B> <I>*pColorKey</I> <B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>pColorKey</I>
 </DT><DD>[in] Pointer to a <A HREF="/directx/dxm/help/ds/dssd0298.htm#COLORKEY">COLORKEY</A> structure.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. This method is not currently implemented and returns E_NOTIMPL.

<H5>Remarks</H5>
<P>The term colorkey has different meanings depending on which stream it is referring to. The colorkey of the primary stream refers to the destination colorkey being used by the overlay surface. The colorkey of the secondary stream refers to the source colorkey used, when blitting from an offscreen surface to the primary surface. 

<P>Applications should set the colorkey of the primary pin to an obscure color (some color which, in all probability, will not be present on the desktop). Overlay mixer filters will try to pick an obscure color, but if the application knows that the specified color is part of some other content, then the application should change it.

<P>Setting the colorkey on the secondary stream can be used to make the stream transparent and enable nonrectangular images. For example, if the secondary stream is closed-captioned text, then the closed-captioned text decoder should paint a solid color in the background and then set the colorkey on the corresponding pin to that color. This ensures that all pixels are transferred except those specified by the colorkey. If possible, applications should set the colorkey of the secondary stream to the same as that of the primary stream to give a slight performance advantage.

<P>Setting this value on the primary stream sets the destination colorkey being used by the overlay surface. By default, the destination colorkey is used as the colorkey for all transparent (secondary) streams.<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetColorKey">IMixerPinConfig::GetColorKey</A>
<H3><HR COLOR="#0000FF"><A NAME="SetStreamTransparent">IMixerPinConfig::SetStreamTransparent</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Sets the stream to transparent.
<P><B>STDMETHOD</B> <B>SetStreamTransparent</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bStreamTransparent</I><BR>&nbsp;&nbsp;<B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>bStreamTransparent</I>
 </DT><DD>[in] Pass in TRUE to indicate stream is transparent; FALSE to indicate not a transparent stream.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method is not supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No error.
</FONT></TD></TR></TABLE>

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetStreamTransparent">IMixerPinConfig::GetStreamTransparent</A>
<H3><HR COLOR="#0000FF"><A NAME="SetRelativePosition">IMixerPinConfig::SetRelativePosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Sets the position of the stream in the display window.
<P><B>STDMETHOD</B> <B>SetRelativePosition</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwLeft</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwTop</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwRight</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwBottom</I> <B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwLeft</I>
 </DT><DD>[in] Specifies the x-coordinate in the upper-left corner of the display window. 
</DD><DT><I>dwTop</I>
 </DT><DD>[in] Specifies the y-coordinate in the upper-left corner of the display window. 
</DD><DT><I>dwRight</I>
 </DT><DD>[in] Specifies the x-coordinate in the bottom-right corner of the display window. 
</DD><DT><I>dwBottom</I>
 </DT><DD>[in] Specifies the y-coordinate in the bottom-right corner of the display window.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. Current DirectShow implementation return values include:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Coordinates not in the {0, 0, 10,000, 10,000} range.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No error.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method assumes window coordinates of {0, 0, 10,000, 10,000}. Therefore, if you want your video stream to be rendered in the bottom right quarter of the display window, you would call this method with the parameters {5,000, 5,000, 10,000, 10,000}.

<P><B>Note</B>  Values greater than 10,000 are invalid and will cause an error.<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetRelativePosition">IMixerPinConfig::GetRelativePosition</A>
<H3><HR COLOR="#0000FF"><A NAME="SetZOrder">IMixerPinConfig::SetZOrder</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0167.htm">IMixerPinConfig Interface</A>
<P>Sets the z-order of a particular video stream. 
<P><B>STDMETHOD</B> <B>SetZOrder</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwZOrder</I> <B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwZOrder</I>
 </DT><DD>[in] Value indicating the order in which streams will clip each other.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation of the interface. This method is not currently implemented and returns E_NOTIMPL.

<H5>Remarks</H5>
<P>The z-order indicates which streams can clip other streams. Images with larger z-values are always in front of images with smaller z-values.

<P>The relative order of multiple streams is significant only if the video images overlap.

<P>Specifying the same z-order for two overlapping streams can cause strange video artifacts.




<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0167.htm#GetZOrder">IMixerPinConfig::GetZOrder</A>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
