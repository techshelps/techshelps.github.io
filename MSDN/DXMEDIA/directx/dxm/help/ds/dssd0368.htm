<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C/C++-based Sample Applications</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="C/C++-based Sample Applications">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="C/C++-basedSampleApplications"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- C/C++-based Sample Applications"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- C/C++-based Sample Applications"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0309.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0367.htm">Cutlist Sample Applications</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0369.htm">Visual Basic-based Sample Applications</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>C/C++-based Sample Applications</H2>
<BR CLEAR=ALL>
<P>This article details sample applications that are written in C++ or C. The sample applications implement media players or perform other application-related functions. The differences between them are mainly the different programming languages, API, or frameworks used.

<P>Some of these samples use the Microsoft&#174; Foundation Classes (MFC).
<P><B>Contents of this article:</B>
<UL><LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#AMCap">AMCap Sample (DirectShow Capture Application)</A> 
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#CPlay">CPlay Sample (C/COM-based Media Player Application)</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#dvdsampl">Dvdsampl Sample (DVD Player Application)</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#inwindow">InWindow Sample (Window Playback Application)</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#Indeo_Player">IPlay Sample (Indeo Player Application)</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#MFCPlay">MFCPlay Sample (C++/COM-based Media Player Application)</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#MPEGProp">MPEGProp Sample (MPEG Property Page Display Application)</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#playfile">PlayFile Sample (Simple Playback Application)</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#ShowStrm">ShowStrm Sample (Multimedia Streaming Application)</A>
<LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#VidClip">VidClip Sample (Video Editing Application)</A>

</UL>
<A NAME="AMCap"></A><P><B>AMCap Sample (DirectShow Capture Application)</B>
<P>The DirectShow capture sample, AMCap, demonstrates the basics of capturing audio and video from a hardware source to a specified output file or to a preview window.

<P>To see a list of the hardware capture devices on your system, choose the <B>Devices</B> menu; DirectShow uses the <A HREF="/directx/dxm/help/ds/dssd0127.htm">ICreateDevEnum</A> interface to create the list of devices that appears. After choosing a device, choose the <B>Set Frame Rate</B> command from the <B>Capture</B> menu and set the desired frame rate; the default value is 30 frames per second. To set an output file for your capture, pick the <B>Set Capture File</B> command from the <B>File</B> menu. DirectShow uses the <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0332.htm">File Writer</A> filter to associate your specified file with the capture session.

<P>If you want to turn audio capturing on or off, choose the <B>Capture Audio</B> command from the <B>Capture</B> menu. To turn capture previewing on or off, choose the Preview command from the Options menu. When you are ready to begin capturing, choose the <B>Start Capture</B> command from the <B>Capture</B> menu. If you want to save your captured data to a file other than the specified output file, choose the <B>Save Captured Video As</B> command from the <B>File</B> menu.

<P><B>Note:</B>  Before you begin capturing for the first time, choose Allocate File Space from the File menu to preallocate the capture file. Preallocating the file improves capture performance. AMCap calls <A HREF="/directx/dxm/help/ds/dssd0124.htm#AllocCapFile">AllocCapFile</A> to preallocate the capture file.<P><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0361.htm#sample_locations">Sample Locations</A>



<A NAME="CPlay"></A><P><B>CPlay Sample (C/COM-based Media Player Application)</B>
<P>This C/COM-based media player sample, CPlay, is a simple application that renders multimedia files using DirectShow&#153; from within the C language. The CPlay sample does not use Microsoft Foundation Classes (MFC). If you want to see a sample that uses MFC, see <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#MFCPlay">MFCPlay Sample (C++/COM-based Media Player Application)</A>. The CPlay sample shows how to utilize the DirectShow components without using the base classes provided with DirectShow. The sample creates a filter graph (by calling <A HREF="/directx/dxm/help/ds/dssd0404.htm#CoCreateInstance">CoCreateInstance</A> to get a pointer to the <A HREF="/directx/dxm/help/ds/dssd0151.htm">IGraphBuilder</A> interface), and requests the filter graph to render a file. The filter graph is then controlled by using the <A HREF="/directx/dxm/help/ds/dssd0154.htm">IMediaControl</A> interface. This sample also uses the <A HREF="/directx/dxm/help/ds/dssd0155.htm">IMediaEvent</A> and <A HREF="/directx/dxm/help/ds/dssd0159.htm">IMediaPosition</A> interfaces. 

<P>CPlay is a minimal application that implements the following menu commands: Open, Play, Pause, Stop, and Exit on the File menu, and About on the Help menu.

<P><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0361.htm#sample_locations">Sample Locations</A>




<A NAME="dvdsampl"></A><P><B>Dvdsampl Sample (DVD Player Application)</B>
<P>The DirectShow DVD sample player, Dvdsampl, is a simple application that plays DVD Video content. It uses the <A HREF="/directx/dxm/help/ds/dssd0134.htm">IDvdGraphBuilder</A> interface to build a DVD filter graph and to obtain interface pointers for <A HREF="/directx/dxm/help/ds/dssd0105.htm">IAMLine21Decoder</A>, <A HREF="/directx/dxm/help/ds/dssd0133.htm">IDvdControl</A>, and <A HREF="/directx/dxm/help/ds/dssd0135.htm">IDvdInfo</A>. It uses those interfaces and enables you to turn closed captioning on and off, play in full screen mode, and display and select from DVD menus.

<P><B>Note:</B>  Your system must include DVD playback hardware to run this sample.<P><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0361.htm#sample_locations">Sample Locations</A>



<A NAME="inwindow"></A><P><B>InWindow Sample (Window Playback Application)</B>
<P>The InWindow application is a simple sample that shows minimal code required to play back a media file into a specific window. It builds on the <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#playfile">PlayFile sample</A>. Like PlayFile, it provides a file Open dialog box that enables you to open media files. It also uses <A HREF="/directx/dxm/help/ds/dssd0151.htm">IGraphBuilder</A>, <A HREF="/directx/dxm/help/ds/dssd0156.htm">IMediaEventEx</A>, and <A HREF="/directx/dxm/help/ds/dssd0154.htm">IMediaControl</A> as PlayFile does. InWindow expands on the PlayFile functionality by calling <A HREF="/directx/dxm/help/ds/dssd0183.htm#put_Owner">IVideoWindow::put_Owner</A>, <A HREF="/directx/dxm/help/ds/dssd0183.htm#put_WindowStyle">IVideoWindow::put_WindowStyle</A>, and <A HREF="/directx/dxm/help/ds/dssd0183.htm#SetWindowPosition">IVideoWindow::SetWindowPosition</A> to direct playback into the main application window.

<P><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0361.htm#sample_locations">Sample Locations</A>




<A NAME="Indeo_Player"></A><P><B>IPlay Sample (Indeo Player Application)</B>
<P>The Intel&#174; Indeo player sample, IPlay, uses DirectShow to render multimedia files and demonstrates the Indeo Video Interactive application programming interfaces (API). IPlay demonstrates how to access the advanced features of the Indeo Video Interactive (IVI) codec. It is a simple application written in C++ using Microsoft Foundation Classes (MFC). If the file is an IVI format file, it enables controls for the IVI advanced features. The advanced features include local decoding, a decoding time limit, and the ability to adjust brightness, saturation, and contrast.

<P>The Ax_spec.h file defines the interfaces of the IVI codec. The CIPlayDoc::OnOpenDocument function demonstrates how to determine if a file is an IVI format file. The CIPlayDoc::Getxxx and CIPlayDoc::Setxxx functions demonstrate how to get and set the IVI playback parameters for the advanced features.

<P>This sample uses the following interfaces:
<UL><LI><A HREF="/directx/dxm/help/ds/dssd0151.htm">IGraphBuilder</A> &#151; to create a filter graph and render a file
<LI><A HREF="/directx/dxm/help/ds/dssd0145.htm">IFilterGraph</A> &#151; to enumerate the filters in the filter graph
<LI><A HREF="/directx/dxm/help/ds/dssd0154.htm">IMediaControl</A> &#151; to play/pause/stop the playback
<LI><A HREF="/directx/dxm/help/ds/dssd0155.htm">IMediaEvent</A> &#151; to be notified of <A HREF="/directx/dxm/help/ds/dssd0306.htm#EC_COMPLETE">EC_COMPLETE</A> (playback complete) and other events
<LI><A HREF="/directx/dxm/help/ds/dssd0159.htm">IMediaPosition</A> &#151; to set the time that the media stream begins
<LI><A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow</A> &#151; to set the window size/caption/position
<LI><A HREF="/directx/dxm/help/ds/dssd0123.htm">IBasicVideo</A> &#151; to get the native window size.
</UL>
<P>IPlay also implements and uses the <B>IIndeoDecode</B> interface (not part of DirectShow).


<P><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0361.htm#sample_locations">Sample Locations</A>



<A NAME="MFCPlay"></A><P><B>MFCPlay Sample (C++/COM-based Media Player Application)</B>
<P>The C++/COM-based media player sample, MFCPlay, is a simple application that renders multimedia files using DirectShow from within C++ and Microsoft Foundation Classes (MFC). It demonstrates how to connect the DirectShow components by using the interfaces provided with DirectShow and MFC. The sample creates a filter graph (by calling <A HREF="/directx/dxm/help/ds/dssd0404.htm#CoCreateInstance">CoCreateInstance</A> to get a pointer to the <A HREF="/directx/dxm/help/ds/dssd0151.htm">IGraphBuilder</A> interface), and requests the filter graph to render a file. The filter graph is then controlled by using the <A HREF="/directx/dxm/help/ds/dssd0154.htm">IMediaControl</A> interface. This sample also uses the <A HREF="/directx/dxm/help/ds/dssd0155.htm">IMediaEvent</A> and <A HREF="/directx/dxm/help/ds/dssd0159.htm">IMediaPosition</A> interfaces.

<P>The MFCPlay application implements the following menu commands: Open, Play, Pause, Stop, and Exit on the File menu, and About on the Help menu.

<P><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0361.htm#sample_locations">Sample Locations</A>




<A NAME="MPEGProp"></A><P><B>MPEGProp Sample (MPEG Property Page Display Application)</B>
<P>The MPEGProp sample application demonstrates how to display a filter's property page.

<P>When you open MPEGProp, choose Open from the File menu and select an MPEG media file from the standard Open dialog box. After you select an appropriate file, MPEGProp calls <A HREF="/directx/dxm/help/ds/dssd0404.htm#CoCreateInstance">CoCreateInstance</A> to create a new filter graph and renders the chosen source file. MPEGProp calls <A HREF="/directx/dxm/help/ds/dssd0145.htm#FindFilterByName">IFilterGraph::FindFilterByName</A> to locate the <A HREF="/directx/dxm/help/ds/dssd0346.htm">MPEG Video Codec</A> filter, and then calls <A HREF="/directx/dxm/help/ds/dssd0404.htm#OleCreatePropertyFra">OleCreatePropertyFrame</A> with the codec pointer to display the filter's property page.

<P><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0361.htm#sample_locations">Sample Locations</A>



<A NAME="playfile"></A><P><B>PlayFile Sample (Simple Playback Application)</B>
<P>The PlayFile application is a simple sample that shows minimal code required to play back a media file. It provides a file Open dialog box that enables you to open files including file types such as AVI, MPEG, MOV, and QT. PlayFile uses the <A HREF="/directx/dxm/help/ds/dssd0151.htm#RenderFile">IGraphBuilder::RenderFile</A> method to render the filter graph for the chosen media file, <A HREF="/directx/dxm/help/ds/dssd0156.htm">IMediaEventEx</A> to handle signaling of events, <A HREF="/directx/dxm/help/ds/dssd0154.htm#Run">IMediaControl::Run</A> to play the resulting filter graph, and <A HREF="/directx/dxm/help/ds/dssd0154.htm#Stop">IMediaControl::Stop</A> to stop playback. The sample calls <A HREF="/directx/dxm/help/ds/dssd0183.htm">IVideoWindow</A> to control whether the playback window is visible. Video follows the default behavior and plays back in a separate window rather than in the main application window.

<P>See <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0368.htm#inwindow">InWindow Sample (Window Playback Application)</A> for a sample that builds on PlayFile and plays back video into the main application window.

<P><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0361.htm#sample_locations">Sample Locations</A>


<A NAME="ShowStrm"></A><P><B>ShowStrm Sample (Multimedia Streaming Application)</B>
<P>The ShowStrm application demonstrates how to use a Microsoft&#174; DirectDraw&#174; surface to blit a multimedia stream. It is a console application that sends a movie out to the surface when invoked from the command line with the following syntax:

<PRE><FONT FACE="Courier" SIZE="2">
SHOWSTRM Name_of_Movie
</FONT></PRE>
<P>For example, to play Angry.avi, you could use the command:

<PRE><FONT FACE="Courier" SIZE="2">
C:\&gt;SHOWSTRM angry.avi
</FONT></PRE>
<P><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0361.htm#sample_locations">Sample Locations</A>


<A NAME="VidClip"></A><P><B>VidClip Sample (Video Editing Application)</B>
<P>The VidClip application demonstrates how to use the multimedia streaming interfaces and how to support rudimentary video editing. The VidClip sample reads from multiple streams and writes to a single stream. For more information on the multimedia streaming interfaces, see <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0374.htm#mms_iface_list">List of Multimedia Streaming Interfaces</A>.

<P>On the <B>Video</B> menu in the VidClip application, choose the <B>Add Clip</B> command to add clips to your list; you can include start and stop times, if you want to add only a portion of a clip. Choose the <B>Edit Clip</B> command to edit existing clips in the list, and the <B>Delete Clip</B> command to delete clips. The <B>Make a Movie</B> command combines the clips into one stream. 

<P>On the <B>File</B> menu, choose the <B>Settings</B> command to set the height, width, depth, and compression for the stream data. Choose the <B>Save</B> command to save the settings to a file in your project. 

<P><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0361.htm#sample_locations">Sample Locations</A>


<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
