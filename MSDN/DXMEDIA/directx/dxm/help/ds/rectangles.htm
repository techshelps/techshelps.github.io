<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Source and Target Rectangles in Video Renderers</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Source and Target Rectangles in Video Renderers">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="Source_and_Target_Rectangles_in_Video_Renderers"></A>

<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- Source and Target Rectangles in Video Renderers"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- Source and Target Rectangles in Video Renderers"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0066.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0088.htm">Alternative Video Renderers</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0089.htm">Exposing Capture and Compression Formats</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Source and Target Rectangles in Video Renderers</H2>
<BR CLEAR=ALL>

<P>There are three sizes found in the <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFO">VIDEOINFO</A>, <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER">VIDEOINFOHEADER</A>, and <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER2">VIDEOINFOHEADER2</A> format structures of video mediatypes. This article explains what they are and how they work.

<p>First, there is a size in the <B>bmiHeader</B> member of these structures. The <B>bmiHeader</B> member is a <A HREF="/directx/dxm/help/ds/dssd0078.htm#BITMAPINFOHEADER_AVI">BITMAPINFOHEADER</A> structure with its own width and height members <B>bmiHeader.biWidth</B> and <B> bmiHeader.biHeight</B>.
<p>Secondly, there is a rectangle in the <B>rcSource</B> member of these structures, and lastly there is a rectangle in the <B>rcTarget</B> member of these structures.


<p>Assume you have two filters, A and B, and that these filters are connected to each other (A on the left, or upstream, and B on the right, or downstream) with a certain video mediatype.
<p>The buffers that pass between filters A and B have the size (<B>bmiHeader.biWidth</B>, <B>bmiHeader.biHeight</B>). Filter A should take a portion of its input video determined by <B>rcSource</B> and stretch that video to fill the <B>rcTarget</B> portion of the buffer.  The portion of the input video to use is based on how <B>rcSource</B> compares to the (<B>biWidth</B>, <B>biHeight</B>) size of the media type that filters A and B originally connected with. If <B>rcSource</B> is empty, filter A uses its entire input video. If <B>rcTarget</B> is empty, filter A fills the entire output buffer.
<p>For example, assume filter A is receiving video data that is 160x120 pixels. Assume also that filter A is connected to filter B with the following mediatype:
<dl>
<dd>(biWidth, biHeight):  320,240</dd>
<dd>rcSource: (0, 0, 0, 0)</dd>
<dd>rcTarget: (0, 0, 0, 0)</dd>
</dl>

<p>This means that filter A will stretch the video it receives by 2 in both x and y, and fill a 320x240 output buffer.


<p> As another example, assume filter A is receiving 160x120 video data, and that it is connected to filter B with the following mediatype:
<dl>
<dd>(biWidth, biHeight):  320,240</dd>
<dd>rcSource: (0, 0, 160, 240)</dd>
<dd>rcTarget: (0, 0, 0, 0)</dd>
</dl>
<p>The <B>rcSource</B> member is relative to the connected buffer size of 320,240. Since the specified <B>rcSource</B> (0, 0, 160, 240) is the left half of the buffer, filter A will take the left half of its input video, or the (0, 0, 80, 120) portion, and stretch the video to a size of (320,240) (by 4 in the x direction, and by 2 in the y direction) and filling the 320x240 output buffer.

<p>Now assume that filter A calls <A HREF="/directx/dxm/help/ds/dssd0197.htm#GetBuffer">GetBuffer</a>, and the media sample returned has a media type attached to it, signifying that filter B wants filter A to provide a different size or kind of video than it has previously been providing. Assume the new media type is:
<dl>
<dd>(biWidth, biHeight): 640,480</dd>
<dd>rcSource: (0, 0, 160, 120)</dd>
<dd>rcTarget: (0, 0, 80, 60)</dd>
</dl>

<p>This means that the media sample has a buffer that is 640x480 in size. The <B>rcSource</B> member is relative to the original connected media type (320,240) not to the new media type of (640,480), so <B>rcSource</B> specifies that the top left corner (25%) of the input video is to be used. This portion of the input video is placed in the top left (80,60) pixels of the 640x480 output buffer, as specified by <B>rcTarget</B> of (0, 0, 80, 60).  Since filter A is receiving 160x120 video, the top left corner of the input video is an (80,60) piece, the same size of the output bitmap, and no stretching is required.

<p>Filter A will place no data in the other pixels of the output buffer, and will leave those bits untouched. The <B>rcSource</B> member is bounded by the <B>biWidth</B> and <B>biHeight</B> of the original connected media type between filters A and B, and <B>rcTarget</B> is bounded by the new <B>biWidth</B> and <B>biHeight</B> of the media sample.  In the example above <B>rcSource</B> could not go outside the boundaries of (0,0,320,240) and <B>rcTarget</B> could not go outside the boundaries of (0,0,640,480).






<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
