<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IFilterInfo Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IFilterInfo Interface">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="IFilterInfo"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IFilterInfo Interface"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IFilterInfo Interface"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0091.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0146.htm">IFilterGraph2 Interface</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0148.htm">IFilterMapper Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>IFilterInfo Interface</H2>
<BR CLEAR=ALL>
<P><B>IFilterInfo</B> is an interface that manages information about a filter and provides
access to the filter and to the <A HREF="/directx/dxm/help/ds/dssd0171.htm">IPinInfo</A> interfaces representing the pins on the filter.
It is essentially an <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface that can be accessed through Automation.
This was created to provide access to the <B>IBaseFilter</B> methods from Microsoft&#174;
Visual Basic&#174; applications without incurring the overhead of Automation in the
<B>IBaseFilter</B> interface itself.

<A NAME="When_to_Implement"></A><P><B>When to Implement</B>
<P>This interface is implemented by the filter graph manager for use by
Automation client applications, such as Microsoft Visual Basic.

<A NAME="When_to_Use"></A><P><B>When to Use</B>
<P>Use this interface from an application to retrieve information about a filter
and to retrieve individual pin objects in the filter or a collection of
all pin objects belonging to the filter. This can be used when adding filters
to a filter graph and connecting pins together.

<A NAME="Methods_in_Vtable_Or"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#QueryInterface">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IDispatch methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch__GetTypeIn">GetTypeInfoCount</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines whether there is type information available for this dispinterface.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch__GetTypeIn">GetTypeInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the type information for this dispinterface if
 <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch__GetTypeIn">GetTypeInfoCount</A> returned
successfully.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch__GetIDsOfN">GetIDsOfNames</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Converts text names of properties and methods (including arguments) to
their corresponding DISPIDs.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0404.htm#IDispatch__Invoke">Invoke</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Calls a method or accesses a property in this dispinterface if given a DISPID
and any other necessary parameters.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IFilterInfo methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0147.htm#FindPin">FindPin</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Locates a pin and returns an <A HREF="/directx/dxm/help/ds/dssd0171.htm">IPinInfo</A> interface.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0147.htm#get_Name">get_Name</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the filter name.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0147.htm#get_VendorInfo">get_VendorInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a string containing optional information supplied by a vendor about the specified filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0147.htm#get_Filter">get_Filter</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface for the filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0147.htm#get_Pins">get_Pins</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves an <A HREF="/directx/dxm/help/ds/dssd0096.htm">IAMCollection</A> interface which provides access to the <A HREF="/directx/dxm/help/ds/dssd0171.htm">IPinInfo</A>
interfaces for this filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0147.htm#get_IsFileSource">get_IsFileSource</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the filter is a file source filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0147.htm#get_Filename">get_Filename</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the file name associated with the source filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0147.htm#put_Filename">put_Filename</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the file name containing the media source.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="FindPin">IFilterInfo::FindPin</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0147.htm">IFilterInfo Interface</A>
<P>Locates a pin, given an identifier, and returns an <A HREF="/directx/dxm/help/ds/dssd0171.htm">IPinInfo</A> interface.

<P><B>HRESULT</B> <B>FindPin</B><B>(</B><BR>&nbsp;&nbsp;<B>BSTR</B> <I>strPinID</I><B>,</B><BR>&nbsp;&nbsp;<B>IDispatch</B> <I>**ppUnk</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>strPinID</I>
 </DT><DD>[in] String pin identifier.
</DD><DT><I>ppUnk</I>
 </DT><DD>[out] <A HREF="/directx/dxm/help/ds/dssd0171.htm">IPinInfo</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method corresponds to the <A HREF="/directx/dxm/help/ds/dssd0121.htm#FindPin">IBaseFilter::FindPin</A> method.
This method is exposed for use by Automation clients and is not expected to be used by
C or C++ applications because of performance limitations.

<H3><HR COLOR="#0000FF"><A NAME="get_Filename">IFilterInfo::get_Filename</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0147.htm">IFilterInfo Interface</A>
<P>Retrieves the file name associated with the source filter.

<P><B>HRESULT</B> <B>get_Filename</B><B>(</B><BR>&nbsp;&nbsp;<B>BSTR</B> <I>*pstrFilename</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pstrFilename</I>
 </DT><DD>[out, retval] File name containing the source media.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This method is exposed for use by Automation clients and is not expected to be used by
C or C++ applications because of performance limitations.
<H3><HR COLOR="#0000FF"><A NAME="get_Filter">IFilterInfo::get_Filter</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0147.htm">IFilterInfo Interface</A>
<P>Retrieves the <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface of the filter.

<P><B>HRESULT</B> <B>get_Filter</B><B>(</B><BR>&nbsp;&nbsp;<B>IUnknown</B> <I>**ppUnk</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppUnk</I>
 </DT><DD>[out, retval] <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface of the filter represented by <A HREF="/directx/dxm/help/ds/dssd0147.htm">IFilterInfo</A>.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>The object that implements <A HREF="/directx/dxm/help/ds/dssd0147.htm">IFilterInfo</A> is a wrapper and is not the same COM object
as the filter itself. Thus a call to <B>IFilterInfo::QueryInterface</B> for <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> will fail. 
The <B>IFilterInfo::get_Filter</B> method allows an application to obtain the filter object itself.
This method is exposed for use by Automation clients and is not expected to be used by
C or C++ applications because of performance limitations.
<H3><HR COLOR="#0000FF"><A NAME="get_IsFileSource">IFilterInfo::get_IsFileSource</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0147.htm">IFilterInfo Interface</A>
<P>Determines if the filter is a file source filter.

<P><B>HRESULT</B> <B>get_IsFileSource</B><B>(</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>*pbIsSource</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pbIsSource</I>
 </DT><DD>[out, retval] Returned Boolean value.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value. Returns OATRUE if filter is a file source filter;
otherwise, returns OAFALSE.

<H5>Remarks</H5>
<P>This method is exposed for use by Automation clients and is not expected to be used by
C or C++ applications because of performance limitations.
<H3><HR COLOR="#0000FF"><A NAME="get_Name">IFilterInfo::get_Name</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0147.htm">IFilterInfo Interface</A>
<P>Retrieves the filter name.

<P><B>HRESULT</B> <B>get_Name</B><B>(</B><BR>&nbsp;&nbsp;<B>BSTR</B> <I>*strName</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>strName</I>
 </DT><DD>[out, retval] Name of the filter.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This method is exposed for use by Automation clients and is not expected to be used by
C or C++ applications because of performance limitations.
<H3><HR COLOR="#0000FF"><A NAME="get_Pins">IFilterInfo::get_Pins</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0147.htm">IFilterInfo Interface</A>
<P>Retrieves an <A HREF="/directx/dxm/help/ds/dssd0096.htm">IAMCollection</A> interface, which provides access to the
<A HREF="/directx/dxm/help/ds/dssd0171.htm">IPinInfo</A> interfaces for the pins on this filter.

<P><B>HRESULT</B> <B>get_Pins</B><B>(</B><BR>&nbsp;&nbsp;<B>IDispatch</B> <I>**ppUnk</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppUnk</I>
 </DT><DD>[out, retval] <A HREF="/directx/dxm/help/ds/dssd0096.htm">IAMCollection</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This method is exposed for use by Automation clients and is not expected to be used by
C or C++ applications because of performance limitations. Visual Basic applications can enumerate the <A HREF="/directx/dxm/help/ds/dssd0171.htm">IPinInfo</A> interfaces
in the returned <A HREF="/directx/dxm/help/ds/dssd0096.htm">IAMCollection</A> object by using the <FONT FACE="Courier New">For Each ...Next </FONT>syntax.
<H3><HR COLOR="#0000FF"><A NAME="get_VendorInfo">IFilterInfo::get_VendorInfo</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0147.htm">IFilterInfo Interface</A>
<P>Retrieves a string containing optional information supplied by a vendor about the
specified filter.

<P><B>HRESULT</B> <B>get_VendorInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>BSTR</B> <I>*strVendorInfo</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>strVendorInfo</I>
 </DT><DD>[out, retval] String containing vendor information.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This method is exposed for use by Automation clients and is not expected to be used by
C or C++ applications because of performance limitations.
<H3><HR COLOR="#0000FF"><A NAME="put_Filename">IFilterInfo::put_Filename</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0147.htm">IFilterInfo Interface</A>
<P>Sets the file name containing the media source.

<P><B>HRESULT</B> <B>put_Filename</B><B>(</B><BR>&nbsp;&nbsp;<B>BSTR</B> <I>strFilename</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>strFilename</I>
 </DT><DD>[in] Name of the file for the source filter to read from.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This method is exposed for use by Automation clients and is not expected to be used by
C or C++ applications because of performance limitations.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
