<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using DirectDrawEx</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Using DirectDrawEx">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="using_ddrawex"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- Using DirectDrawEx"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- Using DirectDrawEx"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0391.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0391.htm">DirectDrawEx</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0393.htm">IDirectDrawFactory Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Using DirectDrawEx</H2>
<BR CLEAR=ALL>
<P>This article provides a brief overview of DirectDrawEx and how it extends the functionality of a DirectDraw object as described in the Microsoft DirectX&#174; SDK. 

<P><B>Contents of this article:</B>
<UL><LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0392.htm#whatis_ddex">What Is DirectDrawEx?</A>
 <LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0392.htm#adv_ddex">Advantages of Using DirectDrawEx</A>
 <LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0392.htm#creating_ddraw_objects_surfaces">Creating DirectDraw Objects and Surfaces with DirectDrawEx</A>
 <LI><A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0392.htm#distinctions">Distinctions Between DirectDraw and DirectDrawEx</A>
</UL>
<A NAME="whatis_ddex"></A><P><B>What Is DirectDrawEx?</B>
<P>DirectDrawEx is a dynamic-link library (DLL) that extends current functionality of DirectDraw, enhancing existing features and providing new functionality. DirectDrawEx also exposes new interfaces that applications can use when you include the Ddrawex.h header file.

<P>To create a DirectDraw object that can use the extended features provided by DirectDrawEx, you must create the object by using the <A HREF="/directx/dxm/help/ds/dssd0393.htm">IDirectDrawFactory</A> interface. A DirectDraw object created with the <B>IDirectDrawFactory</B> interface will support the <A HREF="/directx/dxm/help/ds/dssd0394.htm">IDirectDraw3</A> interface, aggregation of DirectDraw surfaces, data exchange, and palette mapping, in addition to the features of DirectDraw objects described in the DirectX SDK. 


<A NAME="adv_ddex"></A><P><B>Advantages of Using DirectDrawEx</B>
<P>The primary advantage of creating a <A HREF="/directx/dxm/help/ds/dssd0404.htm#DirectDraw">DirectDraw</A> object through the <A HREF="/directx/dxm/help/ds/dssd0393.htm">IDirectDrawFactory</A> interface is that it exposes the <A HREF="/directx/dxm/help/ds/dssd0394.htm">IDirectDraw3</A> interface. The <B>IDirectDraw3</B> interface inherits all the functionality of the <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDirectDraw">IDirectDraw</A> and the <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDirectDraw2">IDirectDraw2</A> interfaces and provides a new method that can retrieve a pointer to an <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDirectDrawSurface">IDirectDrawSurface</A> interface, given a handle to a device context.

<P>To obtain the <A HREF="/directx/dxm/help/ds/dssd0394.htm">IDirectDraw3</A> interface, you must call the <A HREF="/directx/dxm/help/ds/dssd0393.htm#CreateDirectDraw">IDirectDrawFactory::CreateDirectDraw</A> method to create the DirectDraw object and expose the <A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> and <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDirectDraw">IDirectDraw</A> interfaces. Applications can then call <A HREF="/directx/dxm/help/ds/dssd0181.htm#QueryInterface">QueryInterface</A> to obtain a pointer to the <B>IDirectDraw3</B> interface. To view sample code that demonstrates this, see <A CLASS=TCTOP HREF="/directx/dxm/help/ds/dssd0392.htm#creating_ddraw_objects_surfaces">Creating DirectDraw Objects and Surfaces with DirectDrawEx</A>.

<P>Another advantage of using DirectDrawEx over using <A HREF="/directx/dxm/help/ds/dssd0404.htm#DirectDraw">DirectDraw</A> is that you can now aggregate inner objects with outer objects by using the <A HREF="/directx/dxm/help/ds/dssd0394.htm#CreateSurface">IDirectDraw3::CreateSurface</A> method. Formerly, <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDirectDraw__CreateS">IDirectDraw::CreateSurface</A> and <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDirectDraw2__Create">IDirectDraw2::CreateSurface</A> did not provide COM aggregation features. For a thorough description of how <A HREF="/directx/dxm/help/ds/dssd0394.htm">IDirectDraw3</A> implements aggregation see, <B>IDirectDraw3::CreateSurface</B>.

<P>Finally, DirectDrawEx now also provides the DDSCAPS_DATAEXCHANGE flag for the <A HREF="/directx/dxm/help/ds/dssd0404.htm#DDSCAPS">DDSCAPS</A> structure's <B>dwcaps</B> member. When a surface is created using the DDSCAPS_DATAEXCHANGE flag, the surface will automatically be moved into video memory if there is enough video memory available, otherwise a system memory surface will be created. This stabilizes video memory surfaces and ensures that they will not be lost, even if system memory decides to move them into video memory in the future. 


<A NAME="creating_ddraw_objects_surfaces"></A><P><B>Creating DirectDraw Objects and Surfaces with DirectDrawEx</B>
<P>The following sample code demonstrates how to create a DirectDraw object by using DirectDrawEx, and get a pointer to the <A HREF="/directx/dxm/help/ds/dssd0394.htm">IDirectDraw3</A> interface. The code shows how to create and call DirectDraw objects.

<PRE><FONT FACE="Courier" SIZE="2">
#include ddrawex.h

void CreateDDEx()
{
&#009;//Declarations
&#009;HRESULT &#009;hr;
&#009;IDirectDraw &#009;*pDD;    
&#009;IDirectDraw3 &#009;*pDD3; 
&#009;IDirectDrawFactory *pDDF;

&#009;//Initialize COM library&#009;
&#009;CoInitialize(NULL);


&#009;//Create a DirectDrawFactory object and get  
&#009;//an IDirectDrawFactory interface pointer.
&#009;CoCreateInstance(CLSID_DirectDrawFactory, NULL, CLSCTX_INPROC_SERVER, 
&#009;&#009;&#009;&#009;&#009;&#009;&#009;IID_IDirectDrawFactory, (void **)&amp;pDDF);

&#009;//Call the IDirectDrawFactory::CreateDirectDraw method to create the 
&#009;//DirectDraw surface, set the cooperative level, and get the address 
&#009;//of an IDirectDraw interface pointer.
&#009;hr = (pDDF-&gt;CreateDirectDraw(NULL, GetDesktopWindow(), DDSCL_NORMAL, 
&#009;&#009;&#009;&#009;NULL, NULL, &amp;pDD));

&#009;if (hr !=DD_OK) {//error checking
&#009;}
&#009;
&#009;//Now query for the new IDirectDraw3 interface, and release the old one.
&#009;hr =(pDD-&gt;QueryInterface(IID_IDirectDraw3, (LPVOID*)&amp;pDD3));
&#009;
&#009;if (hr !=S_OK) {//error checking
&#009;}
&#009;
&#009;//Release IDirectDraw.
&#009;pDD-&gt;Release();
&#009;pDD= NULL;&#009;

&#009;//Initialize the DDSURFACEDESC structure for the primary surface.
&#009;ZeroMemory(&amp;ddsd, sizeof(ddsd));
      ddsd.dwSize = sizeof(ddsd);    
&#009;ddsd.dwFlags = DDSD_CAPS;
      ddsd.ddsCaps.dwCaps = DDSCAPS_PRIMARYSURFACE; 
      hr = pDD3-&gt;CreateSurface(&amp;ddsd, &amp;pPrimarySurface, NULL);
&#009;

&#009;//Do whatever you need to do in your application here with your 
&#009;//DirectDraw surface.

&#009;//Release IDirectDraw3, IDirectDrawFactory, and the DirectDraw surface.
&#009;pDD3-&gt;Release();
&#009;pDDF-&gt;Release();
&#009;pPrimarySurface-&gt;Release();    

&#009;//Close the COM library
&#009;CoUninitialize();
}
</FONT></PRE>
<A NAME="distinctions"></A><P><B>Distinctions Between DirectDraw and DirectDrawEx</B>
<P>One important distinction to note between DirectDrawEx and DirectDraw is that applications that have created multiple <A HREF="/directx/dxm/help/ds/dssd0404.htm#DirectDrawSurface">DirectDrawSurface</A> objects through a DirectDrawEx surface must release every DirectDraw surface.

<P>Also, calling the <A HREF="/directx/dxm/help/ds/dssd0404.htm#GetDDInterface">GetDDInterface</A> method from any surface created under DirectDrawEx will return a pointer to the <A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> interface instead of a pointer to an <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDirectDraw">IDirectDraw</A> interface. Applications must use the <A HREF="/directx/dxm/help/ds/dssd0181.htm#QueryInterface">IUnknown::QueryInterface</A> method to retrieve the <B>IDirectDraw</B>, <A HREF="/directx/dxm/help/ds/dssd0404.htm#IDirectDraw2">IDirectDraw2</A>, or <A HREF="/directx/dxm/help/ds/dssd0394.htm">IDirectDraw3</A> interfaces.

<P>Finally, DirectDrawEx does not currently support blitting between surfaces created by DirectDrawEx and surfaces created by DirectDraw. Applications should blit only between similar surfaces.



<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
