<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COARefTime Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="COARefTime Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="COARefTime"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- COARefTime Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- COARefTime Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0188.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0241.htm">CMsgThread Class</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0243.htm">COutputQueue Class</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>COARefTime Class</H2>
<BR CLEAR=ALL>
<P><IMG SRC="/directx/dxm/help/ds/art/cutil05.gif" WIDTH="205" HEIGHT="56" ALT="COARefTime class hierarchy">

<P>This class converts between the Automation-compatible REFTIME type and the
REFERENCE_TIME type used within and between filters.

<P>Time parameters within the control interfaces are represented as <A HREF="/directx/dxm/help/ds/dssd0404.htm#double">double</A>
values, containing a fractional number of seconds. Interfaces supported
between and within filters use a 64-bit <A HREF="/directx/dxm/help/ds/dssd0404.htm#LONGLONG">LONGLONG</A> type containing the time
in 100-nanosecond units. Filters use this class to convert between the two
formats. It is derived from <A HREF="/directx/dxm/help/ds/dssd0248.htm">CRefTime</A> and thus is a <B>LONGLONG</B>, but it can be
constructed from and assigned <B>double</B> values.

<A NAME="Member_Functions"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#+">COARefTime</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object.
</FONT></TD></TR></TABLE>
<A NAME="Operators"></A><P><B>Operators</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#double_operator">double</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the reference time as a <A HREF="/directx/dxm/help/ds/dssd0404.htm#double">double</A> value.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_Equal_Operator">Operator =</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Copy constructor for the <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> class.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_EQTEST_Operator">Operator ==</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests for equality between <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> objects.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_NOTEQ_Operator">Operator !=</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests for inequality between <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> objects.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_LT_Operator">Operator &lt;</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests if one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object is less than another <B>COARefTime</B> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_GT_Operator">Operator &gt;</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests if one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object is greater than another <B>COARefTime</B> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_LTEQ_Operator">Operator &lt;=</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests if one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object is less than or equal to another <B>COARefTime</B> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_GTEQ_Operator">Operator &gt;=</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests if one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object is greater than or equal to another <B>COARefTime</B> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_PLUS_Operator">Operator +</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds two <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> objects.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_MINUS_Operator">Operator &#150;</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Subtracts one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object from another <B>COARefTime</B> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_PLUSEQ_Operator">Operator +=</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds two <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> objects and makes this object equal to the result.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_MINUSEQ_Operator">Operator &#150;=</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Subtracts one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object from another <B>COARefTime</B> object
and makes this object equal to the result.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_MULT_Operator">Operator *</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Multiplies two <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> objects.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0242.htm#COARefTime_DIV_Operator">Operator /</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Divides one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object by another <B>COARefTime</B> object.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="+">COARefTime::COARefTime</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Constructs a <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object.

<P><B>COARefTime</B><B>(</B><BR>&nbsp;&nbsp;<B>CRefTime</B> <I>t</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><B>COARefTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>t</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><B>COARefTime</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>d</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>t</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0248.htm">CRefTime</A> value or REFERENCE_TIME value passed through to the class.
Units are 100 nanoseconds.
</DD><DT><I>d</I>
 </DT><DD>A <A HREF="/directx/dxm/help/ds/dssd0404.htm#double">double</A> value that constructs the <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> class.
Units in this case are (fractional) seconds.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H3><HR COLOR="#0000FF"><A NAME="double_operator">COARefTime::double</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Retrieves the reference time as a <A HREF="/directx/dxm/help/ds/dssd0404.htm#double">double</A> value, converted
from 100-nanosecond units to seconds.


<PRE><FONT FACE="Courier" SIZE="2">operator double();
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="COARefTime_Equal_Operator">COARefTime::Operator =</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Copy constructor for a <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object.


<P><B>COARefTime&amp;</B> <B>operator=</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>double&amp;</B> <I>rd</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rd</I>
 </DT><DD>A <A HREF="/directx/dxm/help/ds/dssd0404.htm#double">double</A> value that constructs a <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H3><HR COLOR="#0000FF"><A NAME="COARefTime_EQTEST_Operator">COARefTime::Operator ==</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Tests for equality between <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> objects.

<P><B>BOOL</B> <B>operator==</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object tested is equal to
this object and FALSE otherwise.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR="#0000FF"><A NAME="COARefTime_NOTEQ_Operator">COARefTime::Operator !=</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Tests for inequality between <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> objects.

<P><B>BOOL</B> <B>operator!=</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object tested is not equal to
this object; otherwise, returns FALSE.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR="#0000FF"><A NAME="COARefTime_LT_Operator">COARefTime::Operator &lt;</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Tests if one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object is less than another <B>COARefTime</B> object.

<P><B>BOOL</B> <B>operator</B> <B>&lt;</B> <B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object tested is less than
this object; otherwise, returns FALSE.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR="#0000FF"><A NAME="COARefTime_GT_Operator">COARefTime::Operator &gt;</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Tests if one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object is greater than another <B>COARefTime</B> object.

<P><B>BOOL</B> <B>operator</B> <B>&gt;</B> <B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object tested is greater than this
object; otherwise, returns FALSE.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR="#0000FF"><A NAME="COARefTime_GTEQ_Operator">COARefTime::Operator &gt;=</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Tests if one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object is greater than or equal to another <B>COARefTime</B> object.

<P><B>BOOL</B> <B>operator</B> <B>&gt;=</B> <B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object tested is greater than or equal to this
object; otherwise, returns FALSE.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR="#0000FF"><A NAME="COARefTime_LTEQ_Operator">COARefTime::Operator &lt;=</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Tests if one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object is less than or equal to another <B>COARefTime</B> object.

<P><B>BOOL</B> <B>operator</B> <B>&lt;=</B> <B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object tested is less than or equal to
this object; otherwise, returns FALSE.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR="#0000FF"><A NAME="COARefTime_PLUS_Operator">COARefTime::Operator +</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Adds two <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> objects.

<P><B>COARefTime</B> <B>operator+</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object to be added.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result of the addition.


<H3><HR COLOR="#0000FF"><A NAME="COARefTime_MINUS_Operator">COARefTime::Operator &#150;</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Subtracts one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object from another <B>COARefTime</B> object.

<P><B>COARefTime</B> <B>operator-</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object to be subtracted.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result of the subtraction.


<H5>Remarks</H5>
<P>This object is the object subtracted from.

<H3><HR COLOR="#0000FF"><A NAME="COARefTime_PLUSEQ_Operator">COARefTime::Operator +=</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Adds two <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> objects and makes this object
equal to the result.

<P><B>COARefTime&amp;</B> <B>operator+=</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object to be added.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result.


<H3><HR COLOR="#0000FF"><A NAME="COARefTime_MINUSEQ_Operator">COARefTime::Operator &#150;=</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Subtracts one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object from another <B>COARefTime</B> object 
and makes this object equal to the result.

<P><B>COARefTime&amp;</B> <B>operator-=</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object to be subtracted.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result.


<H5>Remarks</H5>
<P>This object is the object subtracted from.

<H3><HR COLOR="#0000FF"><A NAME="COARefTime_MULT_Operator">COARefTime::Operator *</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Multiplies the <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object by a value.

<P><B>COARefTime</B> <B>operator*</B><B>(</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>l</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>l</I>
 </DT><DD>Value to multiply by.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result.


<H3><HR COLOR="#0000FF"><A NAME="COARefTime_DIV_Operator">COARefTime::Operator /</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime Class</A>
<P>Divides one <A HREF="/directx/dxm/help/ds/dssd0242.htm">COARefTime</A> object by a value.

<P><B>COARefTime</B> <B>operator/</B><B>(</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>l</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>l</I>
 </DT><DD>Value to divide by.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result.


<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
