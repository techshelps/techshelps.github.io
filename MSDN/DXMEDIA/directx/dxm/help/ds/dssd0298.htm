<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Structures</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Structures">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="Structures_grp"></A>

<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- Structures"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- Structures"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0090.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0297.htm">Debug Output Location</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0299.htm">Data Types</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>Structures</H2>
<BR CLEAR=ALL>
<P>This section describes the Microsoft&#174; DirectShow&#153; structures.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Structure </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#ALLOCATOR_PROPERTIES">ALLOCATOR_PROPERTIES</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains the allocator's count, size, alignment, and prefix properties.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AM_DVD_RENDERSTATUS">AM_DVD_RENDERSTATUS</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Provides status (failure) codes for <A HREF="/directx/dxm/help/ds/dssd0134.htm#RenderDvdVideoVolume">IDvdGraphBuilder::RenderDvdVideoVolume</A>. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AM_MEDIA_TYPE">AM_MEDIA_TYPE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes a media sample type.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AM_SAMPLE2_PROPERTIES">AM_SAMPLE2_PROPERTIES</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes the properties of a generic media sample. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AMOVIESETUP_FILTER">AMOVIESETUP_FILTER</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains filter information for registering a filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AMOVIESETUP_MEDIATYPE">AMOVIESETUP_MEDIATYPE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains media type information for registering a filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AMOVIESETUP_PIN">AMOVIESETUP_PIN</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains pin information for registering a filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AM_STREAM_INFO">AM_STREAM_INFO</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains start and stop information given to a pin.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AMVPDATAINFO">AMVPDATAINFO</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies the data-specific characteristics of the VP input stream. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AMVPDIMINFO">AMVPDIMINFO</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies the dimensional characteristics of the VP input stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AMVPSIZE">AMVPSIZE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies the width and height for a VP image.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#DVD_ATR">DVD_ATR</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies DVD attributes.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#DVD_TIMECODE">DVD_TIMECODE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains DVD timecode in hours, minutes, seconds, and frames. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#FILTER_INFO">FILTER_INFO</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains information about a filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#PIN_INFO">PIN_INFO</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains information about a pin.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#POSITION">POSITION</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Placeholder for linked lists.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#Quality">Quality</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes a quality message by indicating Flood or Famine in the renderer and specifying the percentage of frames to drop or add to optimize the renderer's performance.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#REGFILTER">REGFILTER</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes a filter in the registry.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#REGFILTER2">REGFILTER2</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes a filter for registration through the <A HREF="/directx/dxm/help/ds/dssd0149.htm">IFilterMapper2</A> interface.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#REGFILTERPINS2">REGFILTERPINS2</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains information for registering a filter through the <A HREF="/directx/dxm/help/ds/dssd0149.htm">IFilterMapper2</A> interface.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#REGPINMEDIUM">REGPINMEDIUM</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes a pin medium (as defined in the Windows NT DDK) for registration through the <A HREF="/directx/dxm/help/ds/dssd0149.htm">IFilterMapper2</A> interface.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#REGFILTERPINS">REGFILTERPINS</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains pin information for registering a filter. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#REGPINTYPES">REGPINTYPES</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains media type information for registering a filter.
</FONT></TD></TR></TABLE>
<P>The following structure maintains information about graphics device interface (GDI) bitmaps and device-independent bitmaps (DIBs). This is used solely by the <A HREF="/directx/dxm/help/ds/dssd0229.htm">CImageAllocator</A>, <A HREF="/directx/dxm/help/ds/dssd0232.htm">CImageSample</A>, and <A HREF="/directx/dxm/help/ds/dssd0223.htm">CDrawImage</A> window utility classes.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Structure </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#DIBDATA">DIBDATA</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains information about each DIB.
</FONT></TD></TR></TABLE>
<P>The following structures maintain information about video, as well as video capture and compression.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Structure </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#TRUECOLORINFO_structure">TRUECOLORINFO</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Maintains color information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#ANALOGVIDEOINFO">ANALOGVIDEOINFO</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Maintains information about the format of the analog video signal. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#AUDIO_STREAM_CONFIG_CAPS">AUDIO_STREAM_CONFIG_CAPS</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains information about all possible audio formats supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#COLORKEY">COLORKEY</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Communicates color key information between the renderer and another filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#MPEG1VIDEOINFO">MPEG1VIDEOINFO</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains additional MPEG-1 video system information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#MPEG2VIDEOINFO">MPEG2VIDEOINFO</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains additional MPEG-2 video system information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#TIMECODE">TIMECODE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains basic timecode frame count information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#TIMECODE_SAMPLE">TIMECODE_SAMPLE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains complete timecode information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEO_STREAM_CONFIG_CAPS">VIDEO_STREAM_CONFIG_CAPS</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains information about possible connections.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFO">VIDEOINFO</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains information that specifies a video image and its color palette and bitmasks.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER">VIDEOINFOHEADER</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes the bitmap and color information for a video image.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER2">VIDEOINFOHEADER2</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes the bitmap and color information for a video image, including interlace, copy protection, and pixel aspect ratio information.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="ALLOCATOR_PROPERTIES">ALLOCATOR_PROPERTIES</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains the allocator's count, size, alignment, and prefix properties.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct _AllocatorProperties {
&#009;long cBuffers;
&#009;long cbBuffer;
&#009;long cbAlign;
&#009;long cbPrefix;
} ALLOCATOR_PROPERTIES;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="cBuffers">cBuffers</A></B>
 </DT><DD>Count of buffers at this allocator.
</DD><DT><B><A NAME="cbBuffer">cbBuffer</A></B>
 </DT><DD>Size of each buffer in bytes, excluding any prefix.
</DD><DT><B><A NAME="cbAlign">cbAlign</A></B>
 </DT><DD>Alignment of the buffer; buffer start will be aligned on a multiple of this value.
</DD><DT><B><A NAME="cbPrefix">cbPrefix</A></B>
 </DT><DD>Each buffer is preceded by a prefix of this many bytes.
</DD></DL>
<H5>Remarks</H5>
<P>The <A HREF="/directx/dxm/help/ds/dssd0237.htm#GetPointer">CMediaSample::GetPointer</A> member function points to the beginning of the
buffer, not including the prefix bytes designated by <B>cbPrefix</B>.

<P>The alignment is applied to the prefix data, if any. If a nonzero prefix is used, the beginning of the prefix is aligned according to <A HREF="/directx/dxm/help/ds/dssd0298.htm#cbAlign">cbAlign</A>. Since the buffer pointer returned by <A HREF="/directx/dxm/help/ds/dssd0161.htm#GetPointer">IMediaSample::GetPointer</A> points to the area immediately following the prefix, the <B>cbPrefix</B> address (the value returned by <B>IMediaSample::GetPointer</B> 
minus <B>cbPrefix</B>) should be aligned on an address that is a multiple of <B>cbAlign</B> bytes.
<H3><HR COLOR="#0000FF"><A NAME="AM_DVD_RENDERSTATUS">AM_DVD_RENDERSTATUS</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Provides status (failure) codes for <A HREF="/directx/dxm/help/ds/dssd0134.htm#RenderDvdVideoVolume">IDvdGraphBuilder::RenderDvdVideoVolume</A>.

<PRE><FONT FACE="Courier" SIZE="2">
typedef struct {
HRESULT hrVPEStatus;&#009;
BOOL    bVPEFailed;          
&#009;BOOL    bDVDVolInvalid;      
&#009;BOOL    bDVDVolUnknown;      
&#009;BOOL    bNoLine21In;
&#009;BOOL    bNoLine21Out;           
&#009;int     iNumStreams;         
&#009;int     iNumStreamsFailed;   
&#009;DWORD   dwFailedStreamsFlag; 
} AM_DVD_RENDERSTATUS;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="hrVPEStatus">hrVPEStatus</A></B>
 </DT><DD>Video port extension (VPE) error code. Zero indicates success; any other value is failure.
</DD><DT><B><A NAME="bVPEFailed">bVPEFailed</A></B>
 </DT><DD>TRUE if the caller didn't set the <A HREF="/directx/dxm/help/ds/dssd0299.htm#AM_DVD_NOVPE">AM_DVD_NOVPE</A> flag in the <A HREF="/directx/dxm/help/ds/dssd0134.htm#RenderDvdVideoVolume">RenderDvdVideoVolume</A> call and VPE mixing failed; FALSE otherwise.
</DD><DT><B><A NAME="bDVDVolInvalid">bDVDVolInvalid</A></B>
 </DT><DD>TRUE if the specified DVD volume to be played does not exist; FALSE otherwise.
</DD><DT><B><A NAME="bDVDVolUnknown">bDVDVolUnknown</A></B>
 </DT><DD>TRUE if no DVD volume is specified or if it isn't found; FALSE otherwise.
</DD><DT><B><A NAME="bNoLine21In">bNoLine21In</A></B>
 </DT><DD>TRUE if the video decoder doesn't produce Line 21 (closed captioning) data; FALSE otherwise.
</DD><DT><B><A NAME="bNoLine21Out">bNoLine21Out</A></B>
 </DT><DD>TRUE if the video decoder can't show decoded Line 21 data as CC on video; FALSE otherwise.
</DD><DT><B><A NAME="iNumStreams">iNumStreams</A></B>
 </DT><DD>Number of DVD streams to render.
</DD><DT><B><A NAME="iNumStreamsFailed">iNumStreamsFailed</A></B>
 </DT><DD>Number of streams that failed to render.
</DD><DT><B><A NAME="dwFailedStreamsFlag">dwFailedStreamsFlag</A></B>
 </DT><DD>Combination of <A HREF="/directx/dxm/help/ds/dssd0299.htm#AM_DVD_STREAM_FLAGS">AM_DVD_STREAM_FLAGS</A> flags indicating which streams failed.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0134.htm#RenderDvdVideoVolume">IDvdGraphBuilder::RenderDvdVideoVolume</A>
<H3><HR COLOR="#0000FF"><A NAME="AM_MEDIA_TYPE">AM_MEDIA_TYPE</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Describes a media sample type.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct  _MediaType
    {
    GUID      majortype;
    GUID      subtype;
    BOOL      bFixedSizeSamples;
    BOOL      bTemporalCompression;
    ULONG     lSampleSize;
    GUID      formattype;
    IUnknown  *pUnk;
    ULONG     cbFormat;
    /* [size_is] */ BYTE __RPC_FAR *pbFormat;
    } AM_MEDIA_TYPE;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="majortype">majortype</A></B>
 </DT><DD>Major type of the media sample.
</DD><DT><B><A NAME="AM_MEDIA_TYPE_subtype">subtype</A></B>
 </DT><DD>Subtype of the media sample.
</DD><DT><B><A NAME="bFixedSizeSamples">bFixedSizeSamples</A></B>
 </DT><DD>If TRUE, samples are of a fixed size.
</DD><DT><B><A NAME="bTemporalCompression">bTemporalCompression</A></B>
 </DT><DD>If TRUE, samples are compressed.
</DD><DT><B><A NAME="lSampleSize">lSampleSize</A></B>
 </DT><DD>Size of the sample in bytes.
</DD><DT><B><A NAME="formattype">formattype</A></B>
 </DT><DD>Registered (<A HREF="/directx/dxm/help/ds/dssd0412.htm#GUID">GUID</A>) format type.
</DD><DT><B><A NAME="pUnk">pUnk</A></B>
 </DT><DD>Pointer to the <A HREF="/directx/dxm/help/ds/dssd0181.htm">IUnknown</A> interface.
</DD><DT><B><A NAME="cbFormat">cbFormat</A></B>
 </DT><DD>Size of the format section of the media type.
</DD><DT><B><A NAME="pbFormat">pbFormat</A></B>
 </DT><DD>Pointer to the format section of the media type. The layout of
this is determined by the format type <A HREF="/directx/dxm/help/ds/dssd0412.htm#GUID">GUID</A>. <B><A NAME="Format_types">Format types</A></B> include the following:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Format type </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Structure pointed to
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">FORMAT_MPEGVideo </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#MPEG1VIDEOINFO">MPEG1VIDEOINFO</A>
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">FORMAT_VideoInfo </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER">VIDEOINFOHEADER</A>
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">FORMAT_WaveFormatEx </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0078.htm#WAVEFORMATEX_AVI">WAVEFORMATEX</A> 
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">FORMAT_MPEG2Video </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#MPEG2VIDEOINFO">MPEG2VIDEOINFO</A>
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">FORMAT_VideoInfo2 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER2">VIDEOINFOHEADER2</A>
</FONT></TD></TR></TABLE>
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="AM_SAMPLE2_PROPERTIES">AM_SAMPLE2_PROPERTIES</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Describes the properties of a generic media sample.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagAM_SAMPLE2_PROPERTIES {
    DWORD    cbData;
    DWORD    dwTypeSpecificFlags;
    DWORD    dwSampleFlags;
    LONG     lActual;
    REFERENCE_TIME tStart;
    REFERENCE_TIME tStop;
    DWORD    dwStreamId;
    AM_MEDIA_TYPE *pMediaType;
    BYTE    *pbBuffer;
    LONG     cbBuffer;
} AM_SAMPLE2_PROPERTIES;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="cbData">cbData</A></B>
</DT><DD>Length of property data for extensibility; number of bytes including this field.
</DD><DT><B><A NAME="dwTypeSpecificFlags">dwTypeSpecificFlags</A></B>
</DT><DD>Type-specific flag data. These flags are defined separately for each media type. Default is zero.
</DD><DT><B><A NAME="dwSampleFlags">dwSampleFlags</A></B>
</DT><DD>Flags bits defined by the <A HREF="/directx/dxm/help/ds/dssd0299.htm#AM_SAMPLE_PROPERTY_FLAGS">AM_SAMPLE_PROPERTY_FLAGS</A> enumerated data type. All undefined bits are reserved (set them to zero, and do not copy them).
</DD><DT><B><A NAME="lActual">lActual</A></B>
</DT><DD>Length of data in the buffer pointed to by the <B>pbBuffer</B> member.
</DD><DT><B><A NAME="tStart">tStart</A></B>
</DT><DD>Start time if valid.
</DD><DT><B><A NAME="tStop">tStop</A></B>
</DT><DD>Stop time if valid.
</DD><DT><B><A NAME="dwStreamId">dwStreamId</A></B>
</DT><DD>Stream identifier. Stream 0 is the normal media transport. Stream 1 is control. Currently, only Stream 0 is used. Filters should pass any other stream ID directly to their output pins without processing.
</DD><DT><B><A NAME="pMediaType">pMediaType</A></B>
</DT><DD>Copy of the media type. It becomes invalid after the sample has been released.
</DD><DT><B><A NAME="pbBuffer">pbBuffer</A></B>
</DT><DD>Pointer to the buffer. The pointer becomes invalid after the sample is released.
</DD><DT><B><A NAME="cbBuffer">cbBuffer</A></B>
</DT><DD>Total length of the buffer pointed to by <B>pbBuffer</B>, in bytes.
</DD></DL>
<H5>Remarks</H5>
<P>The <A HREF="/directx/dxm/help/ds/dssd0162.htm">IMediaSample2</A> interface uses this structure.
<H3><HR COLOR="#0000FF"><A NAME="AMOVIESETUP_FILTER">AMOVIESETUP_FILTER</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains filter information for registering a filter.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct _AMOVIESETUP_FILTER
{
    const CLSID * clsID;
    LPWSTR     strName;
    DWORD      dwMerit;
    UINT       nPins;
    LPAMOVIESETUP_PIN lpPin;
}
AMOVIESETUP_FILTER
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="clsID">clsID</A></B>
 </DT><DD>Class identifier of the filter.
</DD><DT><B><A NAME="strName">strName</A></B>
 </DT><DD>Name of the filter.
</DD><DT><B><A NAME="dwMerit">dwMerit</A></B>
 </DT><DD>Merit used by the GraphBuilder object when constructing a filter graph.
</DD><DT><B><A NAME="nPins">nPins</A></B>
 </DT><DD>Number of pins on the filter.
</DD><DT><B><A NAME="lpPin">lpPin</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0298.htm#AMOVIESETUP_PIN">AMOVIESETUP_PIN</A> structure providing pin information.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="AMOVIESETUP_MEDIATYPE">AMOVIESETUP_MEDIATYPE</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Media type information for registering a filter.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct _AMOVIESETUP_MEDIATYPE
{
    const CLSID * clsMajorType;
    const CLSID * clsMinorType;
} AMOVIESETUP_MEDIATYPE;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="clsMajorType">clsMajorType</A></B>
 </DT><DD>Major media type supported by the filter.
</DD><DT><B><A NAME="clsMinorType">clsMinorType</A></B>
 </DT><DD>Minor media type supported by the filter.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="AMOVIESETUP_PIN">AMOVIESETUP_PIN</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Pin information for registering a filter.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct _AMOVIESETUP_PIN
{
    LPWSTR           strName;
    BOOL             bRendered;
    BOOL             bOutput;
    BOOL             bZero;
    BOOL             bMany;
    const CLSID *    clsConnectsToFilter;
    LPWSTR           strConnectsToPin;
    UINT             nMediaTypes;
    LPAMOVIESETUP_MEDIATYPE lpMediaType;
}
AMOVIESETUP_PIN;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="strName">strName</A></B>
 </DT><DD>Name of the pin.
</DD><DT><B><A NAME="bRendered">bRendered</A></B>
 </DT><DD>Set to TRUE if the filter renders this input; otherwise, set to FALSE.
</DD><DT><B><A NAME="bOutput">bOutput</A></B>
 </DT><DD>Flag to indicate if this pin is an output pin.
</DD><DT><B><A NAME="bZero">bZero</A></B>
 </DT><DD>If the filter has zero instances of this pin, set this to TRUE; otherwise,
set to FALSE. For example, a decompression filter might choose not to 
create a sound output pin for a movie without a sound track.
</DD><DT><B><A NAME="bMany">bMany</A></B>
 </DT><DD>If the filter has many instances of this pin, set this to TRUE; otherwise,
set to FALSE. For example, a mixer might have multiple instances of its input pin.
</DD><DT><B><A NAME="clsConnectsToFilter">clsConnectsToFilter</A></B>
 </DT><DD>CLSID of the filter to which this filter connects in a filter graph.
</DD><DT><B><A NAME="strConnectsToPin">strConnectsToPin</A></B>
 </DT><DD>Name of the pin to which this pin connects in a filter graph.
</DD><DT><B><A NAME="nMediaTypes">nMediaTypes</A></B>
 </DT><DD>Number of media types supported by this pin.
</DD><DT><B><A NAME="lpMediaType">lpMediaType</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0298.htm#AMOVIESETUP_MEDIATYPE">AMOVIESETUP_MEDIATYPE</A> structure providing media type information.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="AM_STREAM_INFO">AM_STREAM_INFO</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains start and stop information given to a pin.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct {
    REFERENCE_TIME tStart;
    REFERENCE_TIME tStop;
    DWORD dwStartCookie;
    DWORD dwStopCookie;
    DWORD dwFlags;
} AM_STREAM_INFO;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="tStart">tStart</A></B>
 </DT><DD>Time at which streaming will start.
</DD><DT><B><A NAME="tStop">tStop</A></B>
 </DT><DD>Time at which streaming will stop. 
</DD><DT><B><A NAME="dwStartCookie">dwStartCookie</A></B>
 </DT><DD>Number that will be given to the application that ordered the start, when the event occurs.
</DD><DT><B><A NAME="dwStopCookie">dwStopCookie</A></B>
 </DT><DD>Number that will be given to the application that ordered the stop, when the event occurs.
</DD><DT><B><A NAME="dwFlags">dwFlags</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0299.htm#AM_STREAM_INFO_FLAGS">AM_STREAM_INFO_FLAGS</A> enumeration type flag.
</DD></DL>
<H5>Remarks</H5>
<P>Access this structure through the <A HREF="/directx/dxm/help/ds/dssd0109.htm">IAMStreamControl</A> interface.
<H3><HR COLOR="#0000FF"><A NAME="AMVPDATAINFO">AMVPDATAINFO</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Specifies the data-specific characteristics of the VP input stream.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct _AMVPDATAINFO{
DWORD dwSize;&#009; 
DWORD dwMicrosecondsPerField; 
AMVPDIMINFO amvpDimInfo;&#009; 
DWORD dwPictAspectRatioX;&#009;
DWORD dwPictAspectRatioY;&#009;
BOOL bEnableDoubleClock;&#009;
BOOL bEnableVACT;&#009;&#009;
BOOL bDataIsInterlaced;&#009;&#009;
LONG lHalfLinesOdd;&#009;&#009;
BOOL bFieldPolarityInverted;&#009;
DWORD dwNumLinesInVREF;
LONG lHalfLinesEven;  &#009;&#009;
DWORD dwReserved1;&#009;&#009;
} AMVPDATAINFO, *LPAMVPDATAINFO;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="dwSize">dwSize</A></B> 
 </DT><DD>Size of the structure, in bytes.
</DD><DT><B><A NAME="dwMicrosecondsPerFie">dwMicrosecondsPerField</A></B>
 </DT><DD>Time taken by each field.
</DD><DT><B><A NAME="amvpDimInfo">amvpDimInfo</A></B>
 </DT><DD>Dimensional information.
</DD><DT><B><A NAME="dwPictAspectRatioX">dwPictAspectRatioX</A></B>
 </DT><DD>The X dimension of picture aspect ratio.
</DD><DT><B><A NAME="dwPictAspectRatioY">dwPictAspectRatioY</A></B>
 </DT><DD>The Y dimension of picture aspect ratio.
</DD><DT><B><A NAME="bEnableDoubleClock">bEnableDoubleClock</A></B>
 </DT><DD>Video port should enable double clocking.
</DD><DT><B><A NAME="bEnableVACT">bEnableVACT</A></B>
 </DT><DD>Video port should use an external VACT signal.


</DD><DT><B><A NAME="bDataIsInterlaced">bDataIsInterlaced</A></B>
 </DT><DD>Indicates that the signal is interlaced.
</DD><DT><B><A NAME="lHalfLinesOdd">lHalfLinesOdd</A></B>
 </DT><DD>Number of half lines in the odd field.
</DD><DT><B><A NAME="bFieldPolarityInvert">bFieldPolarityInverted</A></B>
 </DT><DD>Video port should invert the field polarity.
</DD><DT><B><A NAME="dwNumLinesInVREF">dwNumLinesInVREF</A></B>
 </DT><DD>Number of lines of data in VREF.
</DD><DT><B><A NAME="lHalfLinesEven">lHalfLinesEven</A></B>
 </DT><DD>Number of half lines in the even field.
</DD><DT><B><A NAME="dwReserved1">dwReserved1</A></B>
 </DT><DD>Reserved for future use.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="AMVPDIMINFO">AMVPDIMINFO</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Specifies the dimensional characteristics of the VP input stream.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct _AMVPDIMINFO{
DWORD dwFieldWidth;&#009; 
DWORD dwFieldHeight;&#009; 
DWORD dwVBIWidth;&#009; 
DWORD dwVBIHeight;&#009;
RECT rcValidRegion;&#009;
} AMVPDIMINFO, *LPAMVPDIMINFO;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="dwFieldWidth">dwFieldWidth</A></B>
 </DT><DD>Field width of the data.
</DD><DT><B><A NAME="dwFieldHeight">dwFieldHeight</A></B>
 </DT><DD>Field height of the data.
</DD><DT><B><A NAME="dwVBIWidth">dwVBIWidth</A></B>
 </DT><DD>Width of the VBI data.
</DD><DT><B><A NAME="dwVBIHeight">dwVBIHeight</A></B>
 </DT><DD>Height of the VBI data.
</DD><DT><B><A NAME="rcValidRegion">rcValidRegion</A></B>
 </DT><DD>Valid rectangle, used for cropping.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="AMVPSIZE">AMVPSIZE</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Specifies the width and height for a VP image. 

<PRE><FONT FACE="Courier" SIZE="2">typedef struct _AMVPSIZE{
DWORD dwWidth;
DWORD dwHeight;
} AMVPSIZE, *LPAMVPSIZE;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="dwWidth">dwWidth</A></B>
 </DT><DD>Width, in pixels.
</DD><DT><B><A NAME="dwHeight">dwHeight</A></B>
 </DT><DD>Height.
</DD></DL>
<H5>Remarks</H5>
<P>The context could be anything such as scaling, cropping, and so on.
<H3><HR COLOR="#0000FF"><A NAME="ANALOGVIDEOINFO">ANALOGVIDEOINFO</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Maintains information about the format of the analog video signal. 

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagAnalogVideoInfo {
    RECT            rcSource;           
    RECT            rcTarget;           
    DWORD           dwActiveWidth;      
    DWORD           dwActiveHeight;     
    REFERENCE_TIME  AvgTimePerFrame;    
} ANALOGVIDEOINFO;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="rcSource">rcSource</A></B>
 </DT><DD>Source video rectangle.
</DD><DT><B><A NAME="rcTarget">rcTarget</A></B>
 </DT><DD>Destination target rectangle. 
</DD><DT><B><A NAME="dwActiveWidth">dwActiveWidth</A></B>
 </DT><DD>Source video width.
</DD><DT><B><A NAME="dwActiveHeight">dwActiveHeight</A></B>
 </DT><DD>Source video height (483 for NTSC, 575 for PAL/SECAM).
</DD><DT><B><A NAME="AvgTimePerFrame">AvgTimePerFrame</A></B>
 </DT><DD>Average time per frame in 100-nanosecond units.
</DD></DL>
<H5>Remarks</H5>
<P>Filters using this format usually pass the video signal using a hardware-based
connection rather than using memory-based transports. 

<P>An example of a definition of an analog video media type connection would be a
connection of NTSC video using "M" color encoding. This would use a major media type
of MEDIATYPE_AnalogVideo, a subtype of MEDIASUBTYPE_AnalogVideo_NTSC_M, and a 
format type of FORMAT_AnalogVideo. 
<H3><HR COLOR="#0000FF"><A NAME="AUDIO_STREAM_CONFIG_CAPS">AUDIO_STREAM_CONFIG_CAPS</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains information about all possible audio formats supported.
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _AUDIO_STREAM_CONFIG_CAPS {
        GUID guid;
        ULONG MinimumChannels;
        ULONG MaximumChannels;
        ULONG ChannelsGranularity;
        ULONG MinimumBitsPerSample;
        ULONG MaximumBitsPerSample;
        ULONG BitsPerSampleGranularity;
        ULONG MinimumSampleFrequency;
        ULONG MaximumSampleFrequency;
        ULONG SampleFrequencyGranularity;
    } AUDIO_STREAM_CONFIG_CAPS;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="guid">guid</A></B>
 </DT><DD>Will be set to MEDIATYPE_Audio to indicate an audio sample.
</DD><DT><B><A NAME="MinimumChannels">MinimumChannels</A></B>
 </DT><DD>Minimum number of channels this pin supports.
</DD><DT><B><A NAME="MaximumChannels">MaximumChannels</A></B>
</DT><DD>Maximum number of channels this pin supports (for example, 2 for stereo).
</DD><DT><B><A NAME="ChannelsGranularity">ChannelsGranularity</A></B>
 </DT><DD>Granularity of the channels. For example, you could specify channels 2 through 4 in steps of 2.
</DD><DT><B><A NAME="MinimumBitsPerSample">MinimumBitsPerSample</A></B>
 </DT><DD>Minimum bits per sample.
</DD><DT><B><A NAME="MaximumBitsPerSample">MaximumBitsPerSample</A></B>
 </DT><DD>Maximum bits per sample.
</DD><DT><B><A NAME="BitsPerSampleGranula">BitsPerSampleGranularity</A></B>
 </DT><DD>Granularity of the bits. For example, you could specify 8 bits or 32 bits in steps of 8.
</DD><DT><B><A NAME="MinimumSampleFrequen">MinimumSampleFrequency</A></B>
 </DT><DD>Minimum frequency allowed.
</DD><DT><B><A NAME="MaximumSampleFrequen">MaximumSampleFrequency</A></B>
 </DT><DD>Maximum frequency allowed.
</DD><DT><B><A NAME="SampleFrequencyGranu">SampleFrequencyGranularity</A></B>
 </DT><DD>Granularity of the frequency. For example, you could specify 11025 to 44100Hz in steps of 11025
</DD></DL>
<H5>Remarks</H5>
<P>This structure is returned by an audio capture or compression filter.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0108.htm#GetStreamCaps">IAMStreamConfig::GetStreamCaps</A>
<H3><HR COLOR="#0000FF"><A NAME="COLORKEY">COLORKEY</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Communicates color key information between the renderer and another filter. 

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagCOLORKEY
    {
    DWORD           KeyType;
    DWORD           PaletteIndex;
    COLORREF        LowColorValue;
    COLORREF        HighColorValue;
    }    COLORKEY;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="KeyType">KeyType</A></B>
 </DT><DD>Key type. Can be <B><A NAME="CK_NOCOLORKEY">CK_NOCOLORKEY</A></B>, <B><A NAME="CK_INDEX">CK_INDEX</A></B>, or <B><A NAME="CK_RGB">CK_RGB</A></B>. <A HREF="/directx/dxm/help/ds/dssd0298.htm#CK_INDEX">CK_INDEX</A> and <B>CK_RGB</B> can be logically combined.
</DD><DT><B><A NAME="PaletteIndex">PaletteIndex</A></B>
 </DT><DD>Palette index.
</DD><DT><B><A NAME="LowColorValue">LowColorValue</A></B>
 </DT><DD>Lowest RGB color value.
</DD><DT><B><A NAME="HighColorValue">HighColorValue</A></B>
 </DT><DD>Highest RGB color value.
</DD></DL>
<H5>Remarks</H5>
<P>The video renderer supports a data transport accessed through the <A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay</A> interface. This will typically be used by hardware decoder filters that need the renderer to communicate where to put the data rather than requiring the renderer to draw the data. One mechanism for communicating where to put the images is by using a color key. This structure is used by a filter (typically a hardware decoder) to describe color key requirements to the video renderer.
<H3><HR COLOR="#0000FF"><A NAME="DIBDATA">DIBDATA</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Maintains information about each GDI DIB. 

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagDIBDATA {
    LONG        PaletteVersion;  
    DIBSECTION  DibSection;     
    HBITMAP     hBitmap;        
    HANDLE      hMapping;      
    BYTE        *pBase;         
} DIBDATA;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="PaletteVersion">PaletteVersion</A></B>
 </DT><DD>Current palette version in use.
</DD><DT><B><A NAME="DibSection">DibSection</A></B>
 </DT><DD>Details of DIB section allocated.
</DD><DT><B><A NAME="hBitmap">hBitmap</A></B>
 </DT><DD>Handle to bitmap for drawing.
</DD><DT><B><A NAME="hMapping">hMapping</A></B>
 </DT><DD>Handle to shared memory block.
</DD><DT><B><A NAME="pBase">pBase</A></B>
 </DT><DD>Pointer to base memory address.
</DD></DL>
<H5>Remarks</H5>
<P>When the allocator creates a sample, it allocates a <A HREF="/directx/dxm/help/ds/dssd0404.htm#DIBSECTION">DIBSECTION</A> to the sample. When a window receives a sample, it can call the Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#BitBlt">BitBlt</A> function to pass the sample from one device context to another device context. This is a mechanism for the image allocator, an image sample, and the draw class to pass bitmap information to each other.
<H3><HR COLOR="#0000FF"><A NAME="DVD_ATR">DVD_ATR</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Specifies DVD attributes.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagDVD_ATR 
{
    ULONG    ulCAT;     
    BYTE    pbATRI[768];
} DVD_ATR;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="ulCAT">ulCAT</A></B>
 </DT><DD>VMG_CAT if this is for a volume; or VTS_CAT if this is for a Video Title Set (VTS) 
</DD><DT><B><A NAME="pbATRI">pbATRI</A></B>
 </DT><DD>All stream attributes for menu and title from bytes 256 to 1023 of VMGI or VTSI.
</DD></DL>
<H5>Remarks</H5>
<P>Refer to the <A HREF="/directx/dxm/help/ds/dssd0133.htm#DVD_Video_specificat">DVD-Video specification</A> to parse these structures.
<H3><HR COLOR="#0000FF"><A NAME="DVD_TIMECODE">DVD_TIMECODE</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains DVD timecode in hours, minutes, seconds, and frames. 

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagDVD_TIMECODE")
{
   ULONG Hours1   :4; 
   ULONG Hours10  :4; 

   ULONG Minutes1 :4; 
   ULONG Minutes10:4; 

   ULONG Seconds1 :4; 
   ULONG Seconds10:4; 

   ULONG Frames1  :4; 
   ULONG Frames10 :2; 

   ULONG FrameRateCode:2; 
} DVD_TIMECODE;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="Hours1">Hours1</A></B>
 </DT><DD>Hours.
</DD><DT><B><A NAME="Hours10">Hours10</A></B>
 </DT><DD>Tens of hours.
</DD><DT><B><A NAME="Minutes1">Minutes1</A></B>
 </DT><DD>Minutes.
</DD><DT><B><A NAME="Minutes10">Minutes10</A></B>
 </DT><DD>Tens of minutes.
</DD><DT><B><A NAME="Seconds1">Seconds1</A></B>
 </DT><DD>Seconds.
</DD><DT><B><A NAME="Seconds10">Seconds10</A></B>
 </DT><DD>Tens of seconds.
</DD><DT><B><A NAME="Frames1">Frames1</A></B>
 </DT><DD>Frames.
</DD><DT><B><A NAME="Frames10">Frames10</A></B>
 </DT><DD>Tens of frames.
</DD><DT><B><A NAME="FrameRateCode">FrameRateCode</A></B>
 </DT><DD>Frames per second dropped and not dropped as indicated by <A HREF="/directx/dxm/help/ds/dssd0299.htm#DVD_FRAMERATE">DVD_FRAMERATE</A>.
</DD></DL>
<H5>Remarks</H5>
<P>DVD Timecode is binary coded decimal (BCD) encoded in the format 0xHhMmSsFf, where
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">H is tens of hours
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">h is hours
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">M is tens of minutes
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">m is minutes
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S is tens of seconds
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">s is seconds
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">F is tens of frames
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">f is frames
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="FILTER_INFO">FILTER_INFO</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains information about a filter.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct  _FilterInfo
    {
    WCHAR achName[ 128 ];
    IFilterGraph __RPC_FAR *pGraph;
    }     FILTER_INFO;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="achName">achName</A></B>
 </DT><DD>Name of the filter.
</DD><DT><B><A NAME="pGraph">pGraph</A></B>
 </DT><DD>Pointer to the <A HREF="/directx/dxm/help/ds/dssd0145.htm">IFilterGraph</A> interface to which the filter is connected.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="MPEG1VIDEOINFO">MPEG1VIDEOINFO</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Describes an MPEG-1 video stream.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagMPEG1VIDEOINFO {
    VIDEOINFOHEADER hdr;
    DWORD           dwStartTimeCode;
    DWORD           cbSequenceHeader;
    BYTE            bSequenceHeader[1];
} MPEG1VIDEOINFO;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="hdr">hdr</A></B>
 </DT><DD>Compatible with <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER">VIDEOINFOHEADER</A>.
</DD><DT><B><A NAME="dwStartTimeCode">dwStartTimeCode</A></B>
 </DT><DD>25-bit "group-of-pictures" time code at start of data. 
</DD><DT><B><A NAME="cbSequenceHeader">cbSequenceHeader</A></B>
 </DT><DD>Length in bytes of <A HREF="/directx/dxm/help/ds/dssd0298.htm#bSequenceHeader">bSequenceHeader</A>.
</DD><DT><B><A NAME="bSequenceHeader">bSequenceHeader</A></B>
 </DT><DD>Sequence header including quantization matrices, if any.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="MPEG2VIDEOINFO">MPEG2VIDEOINFO</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Describes an MPEG-2 video stream.
<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagMPEG2VIDEOINFO {
    VIDEOINFOHEADER2    hdr;
    DWORD               dwStartTimeCode;   
    DWORD               cbSequenceHeader;     
    DWORD               dwProfile;     
    DWORD               dwLevel;            
    DWORD               dwFlags;            
    DWORD               dwSequenceHeader[1];     
} MPEG2VIDEOINFO;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="hdr">hdr</A></B>
 </DT><DD>Compatible with <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER2">VIDEOINFOHEADER2</A>. 
</DD><DT><B><A NAME="dwStartTimeCode">dwStartTimeCode</A></B>
 </DT><DD>25-bit "group-of-pictures" time code at start of data (not used for DVD).
</DD><DT><B><A NAME="cbSequenceHeader">cbSequenceHeader</A></B>
 </DT><DD>Length in bytes of <A HREF="/directx/dxm/help/ds/dssd0298.htm#dwSequenceHeader">dwSequenceHeader</A> (zero for DVD). 
</DD><DT><B><A NAME="dwProfile">dwProfile</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0299.htm#MPEG2Profile">MPEG2Profile</A> enumerated type member.
</DD><DT><B><A NAME="dwLevel">dwLevel</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0299.htm#MPEG2Level">MPEG2Level</A> enumerated type member.
</DD><DT><B><A NAME="dwFlags">dwFlags</A></B>
 </DT><DD>Flag indicating preferences. Set one or a combination of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMMPEG2_DoPanScan </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If set, the MPEG-2 video decoder should crop the output image based on pan-scan vectors in picture_display_extension


 and change the picture aspect ratio accordingly.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMMPEG2_DVDLine21Field1 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If set, the MPEG-2 decoder must be able to produce an output pin for DVD style closed-captioned data found in the Group Of Pictures (GOP) layer of field 1.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMMPEG2_DVDLine21Field2 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If set, the MPEG-2 decoder must be able to produce an output pin for DVD style closed-captioned data found in the GOP layer of field 2.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMMPEG2_SourceIsLetterboxed </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If set, indicates that black bars have been encoded in the top and bottom of the video.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMMPEG2_FilmCameraMode </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If set, indicates "film mode" used for 625/50


 content. If cleared, indicates that "camera mode" was used.
</FONT></TD></TR></TABLE>
</DD><DD>Note, set undefined flags to zero or connection will be rejected.


</DD><DT><B><A NAME="dwSequenceHeader">dwSequenceHeader</A></B>
 </DT><DD>Sequence header including quantization matrices, if any.

</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="PIN_INFO">PIN_INFO</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains information about a pin.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct  _PinInfo
    {
    IBaseFilter  *pFilter;
    PIN_DIRECTION dir;
    WCHAR achName[ 128 ];
    }        PIN_INFO;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="pFilter">pFilter</A></B>
 </DT><DD>Pointer to the <A HREF="/directx/dxm/help/ds/dssd0121.htm">IBaseFilter</A> interface of the owning filter.
</DD><DT><B><A NAME="dir">dir</A></B>
 </DT><DD>Direction of the pin (input or output).
</DD><DT><B><A NAME="achName">achName</A></B>
 </DT><DD>Name of the pin.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="POSITION">POSITION</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Placeholder for a linked list.

<PRE><FONT FACE="Courier" SIZE="2">
struct __POSITION { int unused; };
typedef __POSITION* POSITION;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="unused">unused</A></B>
 </DT><DD>Integer value that specifies the location of an item in a linked list.
</DD></DL>
<H5>Remarks</H5>
<P>This structure can point to any element in a linked list, including null elements (such as an end-of-list marker). This structure will, however, become invalid if you delete the item it points to.

<P>When you perform operations that return a <B>POSITION</B> pointer on a single list element, a successful operation sets it to an appropriate non-null value, while null indicates that the items position could not be found.


 When you perform operations on the entire list, the pointer represents a Win32 BOOLEAN value, where TRUE indicates success and FALSE indicates failure.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0204.htm#GetHeadPositionI">CBaseList::GetHeadPositionI</A>, <A HREF="/directx/dxm/help/ds/dssd0204.htm#GetTailPositionI">CBaseList::GetTailPositionI</A><H3><HR COLOR="#0000FF"><A NAME="Quality">Quality</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Describes a quality message by indicating Flood or Famine in the renderer and specifying the percentage of frames to drop or add to optimize the renderer's performance.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct{
    QualityMessageType Type;
    long                Proportion;
    REFERENCE_TIME       Late;
    REFERENCE_TIME       TimeStamp;
                           } Quality;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="Type_member">Type</A></B>
 </DT><DD>Either <A HREF="/directx/dxm/help/ds/dssd0299.htm#Famine">Famine</A> or <A HREF="/directx/dxm/help/ds/dssd0299.htm#Flood">Flood</A>, indicating that a downstream filter needs more or less data.
</DD><DT><B><A NAME="Proportion">Proportion</A></B>
 </DT><DD>Value that specifies the rate at which DirectShow should continue to send media samples. The base value is 1000, which indicates there should be no change. A percentage increase or decrease from 1000 indicates the percentage of frames to add or drop. If this value is 800, for example, DirectShow will drop 20 percent of the incoming frames to match the renderer's speed.
</DD><DT><B><A NAME="Late">Late</A></B>
 </DT><DD>If a famine exists downstream, this is the amount of time by which the stream is lagging.
</DD><DT><B><A NAME="TimeStamp">TimeStamp</A></B>
 </DT><DD>Value that specifies the time when DirectShow created this structure, which is usually the start time on a video sample.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="REGFILTER">REGFILTER</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Identifies a filter in the registry.

<PRE><FONT FACE="Courier" SIZE="2">
typedef struct {
    CLSID Clsid;             
    LPWSTR Name;           
} REGFILTER;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="Clsid">Clsid</A></B>
 </DT><DD>Class identifier of the filter.
</DD><DT><B><A NAME="Name">Name</A></B>
 </DT><DD>Name of the filter.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="TIMECODE">TIMECODE</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains basic timecode frame count information.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagTIMECODE {
&#009;&#009;WORD&#009;wFrameRate;&#009;
&#009;&#009;WORD&#009;wFrameFract;&#009;
&#009;&#009;DWORD&#009;dwFrames;
}TIMECODE;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="wFrameRate">wFrameRate</A></B>
 </DT><DD>Number of frames per second. Specify with one of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Setting </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ED_FORMAT_SMPTE_30 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">30 frames per second.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ED_FORMAT_SMPTE_30DROP </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">30 frames per second drop frame (actual rate 29.97 fps).
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ED_FORMAT_SMPTE_25 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">25 frames per second.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ED_FORMAT_SMPTE_24 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">24 frames per second.
</FONT></TD></TR></TABLE>
</DD><DT><B><A NAME="wFrameFract">wFrameFract</A></B>
 </DT><DD>Fractional frame. Full scale is 0x1000. 
</DD><DT><B><A NAME="dwFrames">dwFrames</A></B>
 </DT><DD>Timecode value as a binary framecount.


</DD></DL>
<H5>Remarks</H5>
<P>Fractional frame can be used to indicate temporal offset into frame when timecode was actually read from an external device; for example, wFrameFract=0x7ff means the timecode value was read from the device at the end of the first video field.

<P><B>Note</B>  Because timecode commonly enters or leaves computer systems as ASCII values, conversion helper methods that convert the ASCII values to and from binary framecounts are supplied in the sample filter.


<H3><HR COLOR="#0000FF"><A NAME="TIMECODE_SAMPLE">TIMECODE_SAMPLE</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains complete timecode information.
<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagTIMECODE_SAMPLE {
&#009;LONGLONG&#009;qwTick;&#009;&#009;
&#009;TIMECODE&#009;timecode;&#009;
&#009;DWORD&#009;&#009;dwUser;&#009;
&#009;DWORD&#009;&#009;dwFlags;
} TIMECODE_SAMPLE;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="qwTick">qwTick</A></B>
 </DT><DD>Reference time, in 100-nanosecond units.
</DD><DT><B><A NAME="timecode">timecode</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0298.htm#TIMECODE">TIMECODE</A> structure.
</DD><DT><B><A NAME="dwUser">dwUser</A></B>
 </DT><DD>Packed SMPTE <A HREF="/directx/dxm/help/ds/dssd0425.htm#userbits">userbits</A>.
</DD><DT><B><A NAME="dwFlags">dwFlags</A></B>
 </DT><DD>Timecode flag masks. Specify one or more of the following:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_TIMECODE_FLAG_FCM </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Frame code mode; 0 = nondrop; 1 = drop.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_TIMECODE_FLAG_CF </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Color frame flag.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_TIMECODE_FLAG_FIELD </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Field flag.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_TIMECODE_FLAG_DF </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Drop frame flag (from flags in actual timecode on external media).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_TIMECODE_COLORFRAME </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Which frame in color sequence.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_TIMECODE_COLORSEQUENCE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Duration in frames of complete sequence.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_TIMECODE_FILMSEQUENCE_TYPE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One of FILM_SEQUENCE_XXX defines.
</FONT></TD></TR></TABLE>
</DD></DL>
<H5>Remarks</H5>
<P>The upper 16 bits in <B>dwFlags</B> are reserved for future use &#151; set to zero.
 
<H3><HR COLOR="#0000FF"><A NAME="TRUECOLORINFO_structure">TRUECOLORINFO</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains color palette and bitmask information for a video image.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tag_TRUECOLORINFO {
    DWORD dwBitMasks[iMASK_COLORS];
    RGBQUAD bmiColors[iPALETTE_COLORS];
} TRUECOLORINFO;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="dwBitMasks_iMASK_COL">dwBitMasks[iMASK_COLORS]</A></B>
 </DT><DD>Array of color masks (one per color element).
</DD><DT><B><A NAME="bmiColors_iPALETTE_C">bmiColors[iPALETTE_COLORS]</A></B>
 </DT><DD>Array of palette colors.
</DD></DL>
<H5>Remarks</H5>
<P>This structure is not used for some RGB formats. For more information about which fields are valid under different circumstances, see the Microsoft Win32&#174; documentation for <A HREF="/directx/dxm/help/ds/dssd0078.htm#BITMAPINFO">BITMAPINFO</A>.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFO">VIDEOINFO</A>

<H3><HR COLOR="#0000FF"><A NAME="VIDEO_STREAM_CONFIG_CAPS">VIDEO_STREAM_CONFIG_CAPS</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains information about possible connections.

<PRE><FONT FACE="Courier" SIZE="2">
typedef struct  _VIDEO_STREAM_CONFIG_CAPS
    {
    GUID guid;
    ULONG VideoStandard;
    SIZE InputSize;
    SIZE MinCroppingSize;
    SIZE MaxCroppingSize;
    int CropGranularityX;
    int CropGranularityY;
    int CropAlignX;
    int CropAlignY;
    SIZE MinOutputSize;
    SIZE MaxOutputSize;
    int OutputGranularityX;
    int OutputGranularityY;
    int StretchTapsX;
    int StretchTapsY;
    int ShrinkTapsX;
    int ShrinkTapsY;
    LONGLONG MinFrameInterval;
    LONGLONG MaxFrameInterval;
    LONG MinBitsPerSecond;
    LONG MaxBitsPerSecond;
    }&#009;VIDEO_STREAM_CONFIG_CAPS;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="guid">guid</A></B>
</DT><DD>Will set MEDIATYPE_Video to indicate a video sample.
</DD><DT><B><A NAME="VideoStandard">VideoStandard</A></B>
</DT><DD>The analog video standard supported. Set in the <A HREF="/directx/dxm/help/ds/dssd0299.htm#AnalogVideoStandard">AnalogVideoStandard</A> enumeration type (0 if not supported).
</DD><DT><B><A NAME="InputSize">InputSize</A></B>
</DT><DD>Size of the incoming signal, expressed through the Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#SIZE">SIZE</A> structure as the image rectangle's width and height in pixels. For a compressor, the size is taken from the width and height members of the Win32 <A HREF="/directx/dxm/help/ds/dssd0078.htm#BITMAPINFOHEADER_AVI">BITMAPINFOHEADER</A> structure in the input pin's <A HREF="/directx/dxm/help/ds/dssd0298.htm#AM_MEDIA_TYPE">AM_MEDIA_TYPE</A> structure. For a capture filter, the size is the largest signal the filter can digitize with every pixel remaining unique.
</DD><DT><B><A NAME="MinCroppingSize">MinCroppingSize</A></B>
</DT><DD>Smallest cropping rectangle allowed, as specified in the <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER">VIDEOINFOHEADER</A> structure's 
<A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER_rcSource">rcSource</A> member.
</DD><DT><B><A NAME="MaxCroppingSize">MaxCroppingSize</A></B>
</DT><DD>Largest cropping rectangle allowed, as specified in the <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER">VIDEOINFOHEADER</A> structure's 
<A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER_rcSource">rcSource</A> member.
</DD><DT><B><A NAME="CropGranularityX">CropGranularityX</A></B>
</DT><DD>Granularity of the cropping size. For example, you could specify that the only valid widths are an even multiple of four.
</DD><DT><B><A NAME="CropGranularityY">CropGranularityY</A></B>
</DT><DD>Granularity of the cropping size. For example, you could specify that the only valid heights are an even multiple of four.
</DD><DT><B><A NAME="CropAlignX">CropAlignX</A></B>
</DT><DD>Alignment of the cropping rectangle inside <A HREF="/directx/dxm/help/ds/dssd0298.htm#InputSize">InputSize</A>. For example, you could specify that rectangles must start on a boundary that is a multiple of four.
</DD><DT><B><A NAME="CropAlignY">CropAlignY</A></B>
</DT><DD>Alignment of the cropping rectangle inside <A HREF="/directx/dxm/help/ds/dssd0298.htm#InputSize">InputSize</A>. For example, you could specify that rectangles must start on a boundary that is a multiple of four.
</DD><DT><B><A NAME="MinOutputSize">MinOutputSize</A></B>
</DT><DD>Smallest bitmap this pin can produce.
</DD><DT><B><A NAME="MaxOutputSize">MaxOutputSize</A></B>
</DT><DD>Largest bitmap this pin can produce.
</DD><DT><B><A NAME="OutputGranularityX">OutputGranularityX</A></B>
</DT><DD> Granularity of output bitmap width.
</DD><DT><B><A NAME="OutputGranularityY">OutputGranularityY</A></B>
</DT><DD>Granularity of output bitmap height.
</DD><DT><B><A NAME="StretchTapsX">StretchTapsX</A></B>
</DT><DD>Value indicating how well the filter can stretch the image's width. A value of 0 means the filter can't stretch; 1 means it uses pixel doubling; 2 means it uses interpolation (2 taps); 3 and higher indicate it implements better interpolation.

</DD><DT><B><A NAME="StretchTapsY">StretchTapsY</A></B>
</DT><DD>Value indicating how well the filter can stretch the image's height. A value of 0 means the filter can't stretch; 1 means it uses pixel doubling; 2 means it uses interpolation (2 taps); 3 and higher indicate it implements better interpolation.


</DD><DT><B><A NAME="ShrinkTapsX">ShrinkTapsX</A></B>
</DT><DD>Value indicating how well the filter can shrink the image's width. A value of 0 means the filter can't shrink; 1 means it just eliminates some rows of pixels; 2 means it uses interpolation (2 taps); 3 and higher indicate it implements better interpolation.
</DD><DT><B><A NAME="ShrinkTapsY">ShrinkTapsY</A></B>
</DT><DD>Value indicating how well the filter can shrink the image's height. A value of 0 means the filter can't shrink; 1 means it just eliminates some rows of pixels; 2 means it uses interpolation (2 taps); 3 and higher indicate it implements better interpolation.
</DD><DT><B><A NAME="MinFrameInterval">MinFrameInterval</A></B>
</DT><DD>Minimum frame rate allowed. This applies to the capture filter only.
</DD><DT><B><A NAME="MaxFrameInterval">MaxFrameInterval</A></B>
</DT><DD>Maximum frame rate allowed. This applies to the capture filter only.
</DD><DT><B><A NAME="MinBitsPerSecond">MinBitsPerSecond</A></B>
</DT><DD>Minimum data rate this pin can produce.
</DD><DT><B><A NAME="MaxBitsPerSecond">MaxBitsPerSecond</A></B>
</DT><DD>Maximum data rate this pin can produce.
</DD></DL>
<H5>Remarks</H5>
<P>For example, assume the following values for some of the structure members.
<UL><LI><A HREF="/directx/dxm/help/ds/dssd0298.htm#MinCroppingSize">MinCroppingSize</A> = (160, 120)
<LI><A HREF="/directx/dxm/help/ds/dssd0298.htm#MaxCroppingSize">MaxCroppingSize</A> = (320, 240)
<LI><A HREF="/directx/dxm/help/ds/dssd0298.htm#CropGranularityX">CropGranularityX</A> = 4
<LI><A HREF="/directx/dxm/help/ds/dssd0298.htm#CropGranularityY">CropGranularityY</A> = 8

</UL>
<P>These values indicate that valid cropping sizes begin at <A HREF="/directx/dxm/help/ds/dssd0298.htm#MinCroppingSize">MinCroppingSize</A> and increase in steps in the x-direction by <A HREF="/directx/dxm/help/ds/dssd0298.htm#CropGranularityX">CropGranularityX</A> and in the y-direction by <A HREF="/directx/dxm/help/ds/dssd0298.htm#CropGranularityY">CropGranularityY</A>. In this case the x-value can be anywhere from 160 to 320 pixels in steps of 4 and the y-value can be anywhere from 120 to 240 pixels in steps of 8.

<P>In this scenario a few of the valid sizes are:
<UL><LI>160 &#215; 120, 164 &#215; 120, 168 &#215; 120, 172 &#215; 120, and so on
<LI>160 &#215; 128, 164 &#215; 128, 168 &#215; 128, 172 &#215; 128, and so on
<LI>160 &#215; 136, 164 &#215; 136, 168 &#215; 136, 172 &#215; 136, and so on
</UL>
<P><A HREF="/directx/dxm/help/ds/dssd0298.htm#CropAlignX">CropAlignX</A> and <A HREF="/directx/dxm/help/ds/dssd0298.htm#CropAlignY">CropAlignY</A> indicate where the cropping rectangle can be inside the input size rectangle. Given a 160 &#215; 120 sized cropping rectangle and the following:

<UL><LI>CropAlignX = 2
<LI>CropAlignY = 4
</UL>
<P>Some of the valid values for the <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER">VIDEOINFOHEADER</A> structure's <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER_rcSource">rcSource</A> member are:

<UL><LI>(0, 0, 160, 120)
<LI>(2, 0, 162, 120)
<LI>(2, 4, 162, 124)
<LI>(2, 8, 162, 128)
</UL>
<P>For a 320 &#215; 240 cropping rectangle and the same cropping alignment values, (2, 4, 322, 244) is one example of the many legal rectangles.

<P>The structure members discussed in this section work together to specify what values of <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER_rcSource">rcSource</A> are valid for the <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER">VIDEOINFOHEADER</A> structure that describes the output pin's media type. Of the remaining structure members, <A HREF="/directx/dxm/help/ds/dssd0298.htm#MinOutputSize">MinOutputSize</A>, <A HREF="/directx/dxm/help/ds/dssd0298.htm#MaxOutputSize">MaxOutputSize</A>, <A HREF="/directx/dxm/help/ds/dssd0298.htm#OutputGranularityX">OutputGranularityX</A>, and <A HREF="/directx/dxm/help/ds/dssd0298.htm#OutputGranularityY">OutputGranularityY</A> describe the <A HREF="/directx/dxm/help/ds/dssd0404.htm#biWidth">biWidth</A> and <A HREF="/directx/dxm/help/ds/dssd0404.htm#biHeight">biHeight</A> members of the <A HREF="/directx/dxm/help/ds/dssd0078.htm#BITMAPINFOHEADER_AVI">BITMAPINFOHEADER</A> structure contained in the output pin's media type <B>VIDEOINFOHEADER</B> structure.

<H3><HR COLOR="#0000FF"><A NAME="VIDEOINFO">VIDEOINFO</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Describes the bitmap and color information for a video image.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagVIDEOINFO {
    RECT            rcSource,
    RECT            rcTarget,
    DWORD           dwBitRate,
    DWORD           dwBitErrorRate,
    REFERENCE_TIME  AvgTimePerFrame;
    BITMAPINFOHEADER    bmiHeader;
union {
        RGBQUAD     bmiColors[iPALETTE_COLORS];
        DWORD       dwBitMasks[iMASK_COLORS];
        TRUECOLORINFO   TrueColorInfo;
    };
} VIDEOINFO;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="rcSource">rcSource</A></B>
 </DT><DD>Portion of the input video to use. See <A HREF="/directx/dxm/help/ds/Rectangles.htm">Source and Target Rectangles in Video Renderers</A> for examples of how this member works.
</DD><DT><B><A NAME="rcTarget">rcTarget</A></B>
 </DT><DD>Where the video should be displayed. See <A HREF="/directx/dxm/help/ds/Rectangles.htm">Source and Target Rectangles in Video Renderers</A> for examples of how this member works.
</DD><DT><B><A NAME="dwBitRate">dwBitRate</A></B>
 </DT><DD>Approximate bit data rate.
</DD><DT><B><A NAME="dwBitErrorRate">dwBitErrorRate</A></B>
 </DT><DD>Bit error rate for this stream.
</DD><DT><B><A NAME="AvgTimePerFrame">AvgTimePerFrame</A></B>
 </DT><DD>Average time per frame, in 100-nanosecond units.
</DD><DT><B><A NAME="bmiHeader">bmiHeader</A></B>
 </DT><DD>Win32 <A HREF="/directx/dxm/help/ds/dssd0078.htm#BITMAPINFOHEADER_AVI">BITMAPINFOHEADER</A> structure that contains color and dimension information for a device-independent bitmap.
</DD><DT><B><A NAME="bmiColors">bmiColors</A></B>
 </DT><DD>Array of Win32 <A HREF="/directx/dxm/help/ds/dssd0404.htm#RGBQUAD">RGBQUAD</A> structures that specifies the video's color palette. Each structure represents a single color, which is a combination of red, green, and blue intensities.
</DD><DT><B><A NAME="dwBitMasks">dwBitMasks</A></B>
 </DT><DD>Array of <A HREF="/directx/dxm/help/ds/dssd0404.htm#DWORD">DWORD</A> values that specify true color bitmasks.
</DD><DT><B><A NAME="TrueColorInfo_member">TrueColorInfo</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0298.htm#TRUECOLORINFO_structure">TRUECOLORINFO</A> structure that contains both a color palette and an array of color bitmasks.
</DD></DL>
<H5>Remarks</H5>
<P>Never use this structure unless you are sure that you will use it only to store standard RGB formats. If you store anything other than standard RGB, the variable size of the <A HREF="/directx/dxm/help/ds/dssd0298.htm#bmiHeader">bmiHeader</A> structure will almost certainly cause problems. You should use the <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER">VIDEOINFOHEADER</A> structure instead. If for some reason you find it absolutely necessary to use the <B>VIDEOINFO</B> structure, do not access <B>TrueColorInfo</B>, <A HREF="/directx/dxm/help/ds/dssd0298.htm#dwBitMasks">dwBitMasks</A>, and <A HREF="/directx/dxm/help/ds/dssd0298.htm#bmiColors">bmiColors</A> directly; use the <A HREF="/directx/dxm/help/ds/dssd0268.htm#TRUECOLORINFO_MACRO">TRUECOLORINFO</A>, <A HREF="/directx/dxm/help/ds/dssd0268.htm#COLORS">COLORS</A>, and <A HREF="/directx/dxm/help/ds/dssd0268.htm#BITMASKS">BITMASKS</A> macros to return the pointers to the color information.

<P>The first five data members are equivalent to a <A HREF="/directx/dxm/help/ds/dssd0298.htm#VIDEOINFOHEADER">VIDEOINFOHEADER</A> structure. They are expanded in full simply to reduce the amount of dereferencing needed when dealing with a pointer to a <B>VIDEOINFO</B> structure.

<P>Which of the <B>TrueColorInfo</B>, <A HREF="/directx/dxm/help/ds/dssd0298.htm#dwBitMasks">dwBitMasks</A>, and <A HREF="/directx/dxm/help/ds/dssd0298.htm#bmiColors">bmiColors</A> fields is valid depends on the contents of the <A HREF="/directx/dxm/help/ds/dssd0078.htm#BITMAPINFOHEADER_AVI">BITMAPINFOHEADER</A> structure. 

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/rectangles.htm">Source and Target Rectangles in Video Renderers</A>


<H3><HR COLOR="#0000FF"><A NAME="VIDEOINFOHEADER">VIDEOINFOHEADER</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Describes the bitmap and color information for a video image.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagVIDEOINFOHEADER {
    RECT                rcSource,
    RECT                rcTarget;
    DWORD               dwBitRate;
    DWORD               dwBitErrorRate;
    REFERENCE_TIME      AvgTimePerFrame;
    BITMAPINFOHEADER    bmiHeader;
} VIDEOINFOHEADER;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="VIDEOINFOHEADER_rcSource">rcSource</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0404.htm#RECT">RECT</A> structure that specifies the source video window. This structure can be a clipping rectangle, to select a portion of the source video stream. See <A HREF="/directx/dxm/help/ds/Rectangles.htm">Source and Target Rectangles in Video Renderers</A> for examples of how this member works.
</DD><DT><B><A NAME="VIDEOINFOHEADER_rcTarget">rcTarget</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0404.htm#RECT">RECT</A> structure that specifies the destination video window. See <A HREF="/directx/dxm/help/ds/Rectangles.htm">Source and Target Rectangles in Video Renderers</A> for examples of how this member works.
</DD><DT><B><A NAME="VIDEOINFOHEADER_dwBitRate">dwBitRate</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0404.htm#DWORD">DWORD</A> value that specifies the video stream's approximate data rate, in bits per second.
</DD><DT><B><A NAME="dwBitErrorRate">dwBitErrorRate</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0404.htm#DWORD">DWORD</A> value that specifies the video stream's data error rate, in bit errors per second.
</DD><DT><B><A NAME="VIDEOINFOHEADER_AvgTimePerFrame">AvgTimePerFrame</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0175.htm#REFERENCE_TIME">REFERENCE_TIME</A> value that specifies the video frame's average display time, in 100-nanosecond units.
</DD><DT><B><A NAME="videoinfoheader_bmiheader">bmiHeader</A></B>
 </DT><DD>Win32 <A HREF="/directx/dxm/help/ds/dssd0078.htm#BITMAPINFOHEADER_AVI">BITMAPINFOHEADER</A> structure that contains color and dimension information for the video image bitmap.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/rectangles.htm">Source and Target Rectangles in Video Renderers</A>

<H3><HR COLOR="#0000FF"><A NAME="VIDEOINFOHEADER2">VIDEOINFOHEADER2</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Describes the bitmap and color information for a video image, including interlace, copy protection, and pixel aspect ratio information.
<PRE><FONT FACE="Courier" SIZE="2">typedef struct tagVIDEOINFOHEADER2 {
    RECT                rcSource;
    RECT                rcTarget;
    DWORD               dwBitRate;
    DWORD               dwBitErrorRate;
    REFERENCE_TIME      AvgTimePerFrame;
    DWORD               dwInterlaceFlags;   // use AMINTERLACE_* defines. Reject connection if undefined bits are not 0
    DWORD               dwCopyProtectFlags; // use AMCOPYPROTECT_* defines. Reject connection if undefined bits are not 0
    DWORD               dwPictAspectRatioX; 
    DWORD               dwPictAspectRatioY; 
    DWORD               dwReserved1;        
    DWORD               dwReserved2;        
    BITMAPINFOHEADER    bmiHeader;
} VIDEOINFOHEADER2;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="rcSource">rcSource</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0404.htm#RECT">RECT</A> structure that specifies what part of the source stream should be used to fill the destination buffer. The renderers can use this field to ask the decoders to stretch or clip. See <A HREF="/directx/dxm/help/ds/Rectangles.htm">Source and Target Rectangles in Video Renderers</A> for examples of how this member works.
</DD><DT><B><A NAME="rcTarget">rcTarget</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0404.htm#RECT">RECT</A> structure that specifies that specifies what part of the destination buffer should be used. See <A HREF="/directx/dxm/help/ds/Rectangles.htm">Source and Target Rectangles in Video Renderers</A> for examples of how this member works.
</DD><DT><B><A NAME="dwBitRate">dwBitRate</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0404.htm#DWORD">DWORD</A> value that specifies the video stream's approximate data rate.
</DD><DT><B><A NAME="dwBitErrorRate">dwBitErrorRate</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0404.htm#DWORD">DWORD</A> value that specifies the video stream's data error rate.
</DD><DT><B><A NAME="AvgTimePerFrame">AvgTimePerFrame</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0175.htm#REFERENCE_TIME">REFERENCE_TIME</A> value that specifies the video frame's average display time, in milliseconds.
</DD><DT><B><A NAME="dwInterlaceFlags">dwInterlaceFlags</A></B>
 </DT><DD>Flag set by one of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Setting </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_IsInterlaced </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates an interlace stream. If 0, other interlace bits are irrelevant.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_1FieldPerSample </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates one field per media sample. If 0, indicates 2 fields per media sample.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_Field1First </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates Field 1 is first. If 0, indicates Field 2 is first. Top field in PAL is field 1, top field in NTSC is field 2.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_UNUSED </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Unused.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_FieldPatternMask </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Bits used to indicate field pattern.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_FieldPatField1Only </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream never contains a Field 2.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_FieldPatField2Only </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream never contains a Field 1.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_FieldPatBothRegular </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">There will be a Field 2 for every Field 1.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_FieldPatBothIrregular </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Random pattern of Field 1s and Field 2s.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_DisplayModeMask </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Bits used to indicate display mode.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_DisplayModeBobOnly </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates Bob display mode only.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_DisplayModeWeaveOnly </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates Weave display mode only.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AMINTERLACE_DisplayModeBobOrWeave </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates either Bob or Weave display mode.
</FONT></TD></TR></TABLE>
</DD><DD>Set undefined flags to zero or connection should be rejected.


</DD><DT><B><A NAME="dwCopyProtectFlags">dwCopyProtectFlags</A></B>
 </DT><DD>Flag set with the AMCOPYPROTECT_RestrictDuplication value to indicate duplication of stream should be restricted. If undefined, specify zero or connection should be rejected.
</DD><DT><B><A NAME="dwPictAspectRatioX">dwPictAspectRatioX</A></B>
 </DT><DD>The X dimension of picture aspect ratio, for example, 16 for 16 &#215; 9 display (inches by inches, not pixels by pixels).
</DD><DT><B><A NAME="dwPictAspectRatioY">dwPictAspectRatioY</A></B>
 </DT><DD>The Y dimension of picture aspect ratio, for example, 9 for 16 &#215; 9 display (inches by inches, not pixels by pixels).
</DD><DT><B><A NAME="dwReserved1">dwReserved1</A></B>
 </DT><DD>Reserved for future use. Must be zero; reject connection otherwise
</DD><DT><B><A NAME="dwReserved2">dwReserved2</A></B>
 </DT><DD>Reserved for future use. Must be zero; reject connection otherwise
</DD><DT><B><A NAME="bmiHeader">bmiHeader</A></B>
 </DT><DD>Win32 <A HREF="/directx/dxm/help/ds/dssd0078.htm#BITMAPINFOHEADER_AVI">BITMAPINFOHEADER</A> structure that contains color and dimension information for the video image bitmap.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/ds/rectangles.htm">Source and Target Rectangles in Video Renderers</A>

<H3><HR COLOR="#0000FF"><A NAME="REGPINTYPES">REGPINTYPES</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains media type information for registering a filter.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct
{
    const CLSID * clsMajorType;
    const CLSID * clsMinorType;
} REGPINTYPES;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="clsMajorType">clsMajorType</A></B>
 </DT><DD>Major media type supported by the filter. 
</DD><DT><B><A NAME="clsMinorType">clsMinorType</A></B>
 </DT><DD>Minor media type supported by the filter. 
</DD></DL>
<H5>Remarks</H5>
<P>This structure is used by the <A HREF="/directx/dxm/help/ds/dssd0148.htm">IFilterMapper</A> and <A HREF="/directx/dxm/help/ds/dssd0149.htm">IFilterMapper2</A> interfaces to identify media types a pin handles and to register filters.
<P>This structure is equivalent to the <A HREF="/directx/dxm/help/ds/dssd0298.htm#AMOVIESETUP_MEDIATYPE">AMOVIESETUP_MEDIATYPE</A> structure.
<H3><HR COLOR="#0000FF"><A NAME="REGFILTERPINS">REGFILTERPINS</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains pin information for registering a filter. 

<PRE><FONT FACE="Courier" SIZE="2">typedef struct
{
    LPWSTR           strName;
    BOOL             bRendered;
    BOOL             bOutput;
    BOOL             bZero;
    BOOL             bMany;
    const CLSID *    clsConnectsToFilter;
    const WCHAR *    strConnectsToPin;
    UINT             nMediaTypes;
    const REGPINTYPES * lpMediaType;
} REGFILTERPINS;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="strName">strName</A></B>
 </DT><DD>Name of the pin. 
</DD><DT><B><A NAME="bRendered">bRendered</A></B>
 </DT><DD>Set to TRUE if the filter renders this input; otherwise, set to FALSE. 
</DD><DT><B><A NAME="bOutput">bOutput</A></B>
 </DT><DD>Set to TRUE if this pin is an output pin. 
</DD><DT><B><A NAME="bZero">bZero</A></B>
 </DT><DD>Set to TRUE if the filter has zero instances of this pin; otherwise, set to FALSE.
</DD><DT><B><A NAME="bMany">bMany</A></B>
 </DT><DD>Set to TRUE if the filter has more than one instance of this pin; otherwise, set to FALSE.
</DD><DT><B><A NAME="clsConnectsToFilter">clsConnectsToFilter</A></B>
 </DT><DD>CLSID of the filter to which this filter connects in a filter graph. 
</DD><DT><B><A NAME="strConnectsToPin">strConnectsToPin</A></B>
 </DT><DD>Name of the pin to which this pin connects in a filter graph.
</DD><DT><B><A NAME="nMediaTypes">nMediaTypes</A></B>
 </DT><DD>Number of media types supported by this pin.
</DD><DT><B><A NAME="lpMediaType">lpMediaType</A></B>
 </DT><DD><A HREF="/directx/dxm/help/ds/dssd0298.htm#REGPINTYPES">REGPINTYPES</A> structure providing media type information. 
</DD></DL>
<H5>Remarks</H5>
<P>This structure is used by the <A HREF="/directx/dxm/help/ds/dssd0148.htm">IFilterMapper</A> and <A HREF="/directx/dxm/help/ds/dssd0149.htm">IFilterMapper2</A> interfaces for filter registration. It is used if the <B>dwVersion</B> member in <A HREF="/directx/dxm/help/ds/dssd0298.htm#REGFILTER2">REGFILTER2</A> is 1.

<P>This structure is equivalent to the <A HREF="/directx/dxm/help/ds/dssd0298.htm#AMOVIESETUP_PIN">AMOVIESETUP_PIN</A> structure.

<H3><HR COLOR="#0000FF"><A NAME="REGPINMEDIUM">REGPINMEDIUM</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Describes a pin medium (as defined in the Windows NT DDK) for registration through the <A HREF="/directx/dxm/help/ds/dssd0149.htm">IFilterMapper2</A> interface.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct
{
    CLSID clsMedium;
    DWORD dw1;
    DWORD dw2;
} REGPINMEDIUM;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="clsMedium">clsMedium</A></B>
 </DT><DD>Contains the globally unique set identifier.
</DD><DT><B><A NAME="dw1">dw1</A></B>
 </DT><DD>Contains the set-specific identifier for an item within the set.
</DD><DT><B><A NAME="dw2">dw2</A></B>
 </DT><DD>Used for various set flags. Zero when not used.
</DD></DL>
<H5>Remarks</H5>
<P>A <I>medium</I> defines a method of communication (for example, the bus over which the communication occurs). Each ID within that set is used to represent the form of communication. Register mediums for your filter if you need to search for DirectShow filters built on kernel streaming pins, which can connect to each other.

<H3><HR COLOR="#0000FF"><A NAME="REGFILTERPINS2">REGFILTERPINS2</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Contains information for registering a filter through the <A HREF="/directx/dxm/help/ds/dssd0149.htm">IFilterMapper2</A> interface.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct
{    
    DWORD dwFlags;
    UINT             cInstances;
    UINT             nMediaTypes;
    [size_is(nMediaTypes)] const REGPINTYPES * lpMediaType;
    UINT             nMediums;
    [size_is(nMediums)] const REGPINMEDIUM *lpMedium;
    const CLSID      *clsPinCategory;
} REGFILTERPINS2;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="dwFlags">dwFlags</A></B>
 </DT><DD>Combination of <A HREF="/directx/dxm/help/ds/dssd0299.htm#REG_PINFLAG">REG_PINFLAG</A> flags.
</DD><DT><B><A NAME="cInstances">cInstances</A></B>
 </DT><DD>Number of instances of the pin, if known.
</DD><DT><B><A NAME="nMediaTypes">nMediaTypes</A></B>
 </DT><DD>Number of media types supported by this pin. 
</DD><DT><B><A NAME="lpMediaType">lpMediaType</A></B>
 </DT><DD>Array of <B>nMediaTypes</B> <A HREF="/directx/dxm/help/ds/dssd0298.htm#REGPINTYPES">REGPINTYPES</A> structures providing media type information. 


</DD><DT><B><A NAME="nMediums">nMediums</A></B>
 </DT><DD>Number of mediums.
</DD><DT><B><A NAME="lpMedium">lpMedium</A></B>
 </DT><DD>Array of <A HREF="/directx/dxm/help/ds/dssd0298.htm#REGPINMEDIUM">REGPINMEDIUM</A> structures containing medium information for each pin.
</DD><DT><B><A NAME="clsPinCategory">clsPinCategory</A></B>
 </DT><DD>Pin category (for kernel streaming pins) as defined in the Windows NT DDK.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="REGFILTER2">REGFILTER2</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0298.htm">Structures</A>
<P>Describes a filter for registration through the <A HREF="/directx/dxm/help/ds/dssd0149.htm">IFilterMapper2</A> interface.

<PRE><FONT FACE="Courier" SIZE="2">typedef struct
{
    DWORD dwVersion;            // 1 or 2
    DWORD dwMerit;

    /* unnamed union */
    [switch_is(dwVersion)] [switch_type(DWORD)] union
    {
        [case(1)]

            struct
            {
                ULONG cPins;
                [size_is(cPins)] const REGFILTERPINS *rgPins;
            };

        [case(2)]

            struct
            {
                ULONG cPins2;
                [size_is(cPins2)] const REGFILTERPINS2 *rgPins2;
            };

        [default]
            ;
    } ;

} REGFILTER2;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="dwVersion">dwVersion</A></B>
 </DT><DD>Indicates the filter registration format to use. 
</DD><DT><B><A NAME="dwMerit">dwMerit</A></B>
 </DT><DD>Position in the order of enumeration. Filters or categories with higher merit are enumerated first. 
</DD><DT><B><A NAME="cPins">cPins</A></B>
 </DT><DD>Number of pins (if <B>dwVersion</B> = 1).
</DD><DT><B><A NAME="rgPins">rgPins</A></B>
 </DT><DD>Array of <A HREF="/directx/dxm/help/ds/dssd0298.htm#REGFILTERPINS">REGFILTERPINS</A> structures representing each pin to be registered (if <B>dwVersion</B> = 1).
</DD><DT><B><A NAME="cPins2">cPins2</A></B>
 </DT><DD>Number of pins (if <B>dwVersion</B> = 2).
</DD><DT><B><A NAME="rgPins2">rgPins2</A></B>
 </DT><DD>Array of <A HREF="/directx/dxm/help/ds/dssd0298.htm#REGFILTERPINS2">REGFILTERPINS2</A> structures representing each pin to be registered (if <B>dwVersion</B> = 2).
</DD></DL>
<H5>Remarks</H5>
<P>This structure is passed in to the <A HREF="/directx/dxm/help/ds/dssd0149.htm#RegisterFilter">IFilterMapper2::RegisterFilter</A> method. 

<P>Set <B>dwVersion</B> to 1 if you are using the old format, or to 2 if you need mediums and pin categories.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
