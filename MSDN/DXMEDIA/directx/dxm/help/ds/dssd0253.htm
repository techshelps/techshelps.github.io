<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CSourcePosition Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="CSourcePosition Class">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="CSourcePosition"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- CSourcePosition Class"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- CSourcePosition Class"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0188.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0252.htm">CSource Class</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0254.htm">CSourceSeeking Class</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>CSourcePosition Class</H2>
<BR CLEAR=ALL>
<P><IMG SRC="/directx/dxm/help/ds/art/cutil10.gif" WIDTH="283" HEIGHT="201" ALT="CSourcePosition class hierarchy">

<P><B>CSourcePosition</B> is an abstract class that assists source filters with
the implementation of <A HREF="/directx/dxm/help/ds/dssd0159.htm">IMediaPosition</A> methods.

<P>Derive from this class and set the duration and default stop positions.
This class supports <A HREF="/directx/dxm/help/ds/dssd0159.htm">IMediaPosition</A>, and calls the pure virtual member functions
<A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeStart">CSourcePosition::ChangeStart</A>, <A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeStop">CSourcePosition::ChangeStop</A>, and 
<A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeRate">CSourcePosition::ChangeRate</A> when <A HREF="/directx/dxm/help/ds/dssd0253.htm#put_CurrentPosition">CSourcePosition::put_CurrentPosition</A>, 
<A HREF="/directx/dxm/help/ds/dssd0253.htm#put_StopTime">CSourcePosition::put_StopTime</A>, or <A HREF="/directx/dxm/help/ds/dssd0253.htm#put_Rate">CSourcePosition::put_Rate</A> is called, 
to allow a source filter to handle these commands and start sending new data. 

<P>Override the <A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeStart">CSourcePosition::ChangeStart</A>, <A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeStop">CSourcePosition::ChangeStop</A>, 
and <A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeRate">CSourcePosition::ChangeRate</A> member functions to do something when the 
properties change.

<A NAME="Protected_Data_Membe"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_Duration">m_Duration</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Duration of the stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_pLock">m_pLock</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pointer to a <A HREF="/directx/dxm/help/ds/dssd0218.htm">CCritSec</A> object for locking.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_Rate">m_Rate</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sample rate.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_Start">m_Start</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Start time.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="m_Stop">m_Stop</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stop time.
</FONT></TD></TR></TABLE>
<A NAME="Member_Functions"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#+">CSourcePosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition</A> object.
</FONT></TD></TR></TABLE>
<A NAME="Overridable_Member_F"></A><P><B>Overridable Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeRate">ChangeRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Override this pure virtual to handle notification that the rate property has changed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeStart">ChangeStart</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Override this pure virtual to handle notification that the start position property has changed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeStop">ChangeStop</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Override this pure virtual to handle notification that the stop position property has changed.
</FONT></TD></TR></TABLE>
<A NAME="Implemented_IMediaPo"></A><P><B>Implemented IMediaPosition Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#get_CurrentPosition">get_CurrentPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Not currently implemented.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#get_Duration">get_Duration</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the total duration of the media.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#get_PrerollTime">get_PrerollTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Not currently implemented.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#get_Rate">get_Rate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the playback rate, relative to normal playback of the media.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#get_StopTime">get_StopTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the position within the media at which playback should stop.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#put_CurrentPosition">put_CurrentPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the position within the media at which playback should start.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#put_PrerollTime">put_PrerollTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Not currently implemented.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#put_Rate">put_Rate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the playback rate, relative to normal playback of the media.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0253.htm#put_StopTime">put_StopTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the position within the media at which playback should stop.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="ChangeRate">CSourcePosition::ChangeRate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Override this member function to handle notification of a change of sample rate.

<P><B>virtual</B> <B>HRESULT</B> <B>ChangeRate</B><B>(</B> <B>)</B> <B>PURE;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function is called when a change to the rate has been made by a call
to <A HREF="/directx/dxm/help/ds/dssd0159.htm#put_Rate">IMediaPosition::put_Rate</A>. Override this and change the rate of 
data sent; typically, this will be by a call to 
<A HREF="/directx/dxm/help/ds/dssd0203.htm#BeginFlush">CBaseInputPin::BeginFlush</A> and <A HREF="/directx/dxm/help/ds/dssd0203.htm#EndFlush">CBaseInputPin::EndFlush</A>, and then 
sending samples marked with new time stamps.
<H3><HR COLOR="#0000FF"><A NAME="ChangeStart">CSourcePosition::ChangeStart</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Override this member function to handle notification of a change of start time.

<P><B>virtual</B> <B>HRESULT</B> <B>ChangeStart</B><B>(</B> <B>)</B> <B>PURE;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function is called when a new start position has been requested by a call
to <A HREF="/directx/dxm/help/ds/dssd0159.htm#put_CurrentPosition">IMediaPosition::put_CurrentPosition</A>. Override this and change the data sent;
typically, this will be by a call to <A HREF="/directx/dxm/help/ds/dssd0203.htm#BeginFlush">CBaseInputPin::BeginFlush</A> and 
<A HREF="/directx/dxm/help/ds/dssd0203.htm#EndFlush">CBaseInputPin::EndFlush</A>, and then sending samples marked with new time stamps.
<H3><HR COLOR="#0000FF"><A NAME="ChangeStop">CSourcePosition::ChangeStop</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Override this member function to handle notification of a change in stop time.

<P><B>virtual</B> <B>HRESULT</B> <B>ChangeStop</B><B>(</B> <B>)</B> <B>PURE;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function is called when a change to the stop position has been made by a call
to <A HREF="/directx/dxm/help/ds/dssd0159.htm#put_StopTime">IMediaPosition::put_StopTime</A>. Override this and ensure that the correct stop
time is being observed; typically, this will be a call to <A HREF="/directx/dxm/help/ds/dssd0203.htm#BeginFlush">CBaseInputPin::BeginFlush</A> and 
<A HREF="/directx/dxm/help/ds/dssd0203.htm#EndFlush">CBaseInputPin::EndFlush</A>, and then resending data.
<H3><HR COLOR="#0000FF"><A NAME="+">CSourcePosition::CSourcePosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Constructs a <A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition</A> object.

<P><B>CSourcePosition</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>TCHAR</B> <B>*</B> <I>pName</I><B>,</B><BR>&nbsp;&nbsp;<B>LPUNKNOWN</B> <I>pUnk</I><B>,</B><BR>&nbsp;&nbsp;<B>HRESULT</B> <B>*</B> <I>phr</I><B>,</B><BR>&nbsp;&nbsp;<B>CCritSec</B> <B>*</B> <I>pLock</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pName</I>
 </DT><DD>Name of the object used in the <A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition</A> constructor for debugging purposes.
</DD><DT><I>pUnk</I>
 </DT><DD>Pointer to the owner of this object.
</DD><DT><I>phr</I>
 </DT><DD>Pointer to an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value for resulting information.
</DD><DT><I>pLock</I>
 </DT><DD>Pointer to a <A HREF="/directx/dxm/help/ds/dssd0218.htm">CCritSec</A> object used for locking.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>Allocate the <I>pName</I> parameter in static memory. This name appears on
the debugging terminal upon creation and deletion of the object.
<H3><HR COLOR="#0000FF"><A NAME="get_CurrentPosition">CSourcePosition::get_CurrentPosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Currently not implemented.

<P><B>HRESULT</B> <B>get_CurrentPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>pllTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pllTime</I>
 </DT><DD>Returned start time as a <A HREF="/directx/dxm/help/ds/dssd0404.htm#double">double</A> value in seconds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_NOTIMPL.


<H5>Remarks</H5>
<P>Override this method if you can return the data you are actually working on. The start position is applied before the rate and therefore is the position at typical playback
speed.
<H3><HR COLOR="#0000FF"><A NAME="get_Duration">CSourcePosition::get_Duration</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Retrieves the total duration of the media stream.

<P><B>HRESULT</B> <B>get_Duration</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>plength</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>plength</I>
 </DT><DD>Returned length of the media stream.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pLength</I> is invalid. Otherwise, returns S_OK.


<H5>Remarks</H5>
<P>The duration assumes normal playback speed; it is therefore unaffected by the rate.
<H3><HR COLOR="#0000FF"><A NAME="get_PrerollTime">CSourcePosition::get_PrerollTime</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Validates the pointer, but the preroll retrieval is not currently implemented.

<P><B>HRESULT</B> <B>get_PrerollTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>pllTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pllTime</I>
 </DT><DD>Returned preroll time as a <A HREF="/directx/dxm/help/ds/dssd0404.htm#double">double</A> value in seconds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pllTime</I> is invalid. Otherwise, returns E_NOTIMPL.


<H5>Remarks</H5>
<P>Preroll time is the time prior to the start position at which nonrandom access
devices, such as tape players, should start rolling.
<H3><HR COLOR="#0000FF"><A NAME="get_Rate">CSourcePosition::get_Rate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Retrieves the rate of playback relative to normal playback speed.

<P><B>HRESULT</B> <B>get_Rate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <B>*</B> <I>pdRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdRate</I>
</DT><DD>Returned rate.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pdRate</I> is invalid. Otherwise, returns S_OK.


<H5>Remarks</H5>
<P>A rate of 1.0 indicates normal playback speed. A rate of 0.5 indicates half
speed. A rate of &#150;1.0 indicates normal speed in reverse.

<H3><HR COLOR="#0000FF"><A NAME="get_StopTime">CSourcePosition::get_StopTime</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Retrieves the time at which the media stream stops.

<P><B>HRESULT</B> <B>get_StopTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>pllTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pllTime</I>
 </DT><DD>Returned stop time as a <A HREF="/directx/dxm/help/ds/dssd0404.htm#double">double</A> value in seconds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_POINTER if <I>pllTime</I> is invalid. Otherwise, returns S_OK.


<H5>Remarks</H5>
<P>The stop time is a position between zero and the duration of the media
at which playback should stop.

<P>The stop position is applied before the rate and therefore is the position at typical playback
speed.
<H3><HR COLOR="#0000FF"><A NAME="put_CurrentPosition">CSourcePosition::put_CurrentPosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Sets the time within the media stream that playback should begin.

<P><B>HRESULT</B> <B>put_CurrentPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME</B> <I>llTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>llTime</I>
 </DT><DD>Start time expressed as a <A HREF="/directx/dxm/help/ds/dssd0404.htm#double">double</A> value in seconds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value from the call to <A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeStart">CSourcePosition::ChangeStart</A>.


<H5>Remarks</H5>
<P>The start time is a position between zero and the duration of the media
at which playback should begin when the next run command is issued.

<P>Setting the start position when paused causes playback to resume from the
new start position when the run command is issued.

<P>The start position is applied before the rate and therefore is the position at typical playback speed.
<H3><HR COLOR="#0000FF"><A NAME="put_PrerollTime">CSourcePosition::put_PrerollTime</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Not currently implemented.

<P><B>HRESULT</B> <B>put_PrerollTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME</B> <I>llTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>llTime</I>
</DT><DD>Preroll time to be set.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_NOTIMPL.


<H5>Remarks</H5>
<P>Preroll time is the time prior to the start position at which nonrandom access
devices, such as tape players, should start rolling.
<H3><HR COLOR="#0000FF"><A NAME="put_Rate">CSourcePosition::put_Rate</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Sets the rate of playback relative to normal speed.

<P><B>HRESULT</B> <B>put_Rate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>dRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dRate</I>
</DT><DD>Rate to set.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value from the call to <A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeRate">CSourcePosition::ChangeRate</A>.


<H5>Remarks</H5>
<P>This property allows an application to speed up or slow down playback relative
to the normal default playback speed. A rate of 1.0 indicates normal playback
speed. Specifying 2.0 causes playback at twice the normal rate: a video
created for 10 frames per second (fps) will be played back at 20 fps, if resources permit.
Audio streams played back at above-normal speed increase the pitch rather
than drop frames.

<P>Negative rates indicate reverse play. Not all media will support reverse play.
<H3><HR COLOR="#0000FF"><A NAME="put_StopTime">CSourcePosition::put_StopTime</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0253.htm">CSourcePosition Class</A>
<P>Sets the time at which the media stream will stop.

<P><B>HRESULT</B> <B>put_StopTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME</B> <I>llTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>llTime</I>
 </DT><DD>Stop time as a <A HREF="/directx/dxm/help/ds/dssd0404.htm#double">double</A> value in seconds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value from the call to <A HREF="/directx/dxm/help/ds/dssd0253.htm#ChangeStop">CSourcePosition::ChangeStop</A>.


<H5>Remarks</H5>
<P>The stop time is a position between zero and the duration of the media
at which playback should stop.

<P>The stop position is applied before the rate and therefore is the position at typical playback speed.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
