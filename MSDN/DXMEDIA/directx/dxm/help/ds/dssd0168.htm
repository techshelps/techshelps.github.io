<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOverlay Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IOverlay Interface">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="IOverlay"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/ds/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IOverlay Interface"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217"><IMG SRC="/directx/dxm/help/ds/art/hdrdshow.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="DirectShow Animated Header -- IOverlay Interface"></TD><TD VALIGN="TOP" WIDTH="383"><IMG SRC="/directx/dxm/help/ds/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft DirectShow SDK">
</TD>
</TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/ds/dssd0091.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/ds/IMixerPinConfig2.htm">IMixerPinConfig2 Interface</A>
<IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/ds/dssd0169.htm">IOverlayNotify Interface</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2>IOverlay Interface</H2>
<BR CLEAR=ALL>
<P>The <B>IOverlay</B> interface provides information so that a filter can write
directly to video memory while placing the video in the correct window position.
It is implemented on the input pin of the video renderer and communicates with an
upstream filter (typically a video decompressor) by calling that filter's
<A HREF="/directx/dxm/help/ds/dssd0169.htm">IOverlayNotify</A> methods to notify it of changes to the video window.

<P>This interface has no relationship to the DirectDraw&#174; overlay capability.
The Microsoft video renderer draws data it receives through the <A HREF="/directx/dxm/help/ds/dssd0166.htm">IMemInputPin</A>
interface, using DirectDraw overlays when available.
This interface, used in place of <B>IMemInputPin</B>,
is intended to provide notification support for any upstream filter that bypasses
the renderer's drawing capabilities, but needs notifications of other display properties.

<P>See the <A HREF="/directx/dxm/help/ds/dssd0169.htm">IOverlayNotify</A> interface for more information on how the
<B>IOverlay</B> and <B>IOverlayNotify</B> interfaces work together.

<A NAME="When_to_Implement"></A><P><B>When to Implement</B>
<P>This interface is implemented on the Microsoft&#174; DirectShow&#153; video renderer filter. It
can also be implemented on replacement video renderer filters if desired.
If doing so, implement this interface so that filters writing directly to the
frame buffer or trying to position an overlay know where to display their video.
To implement this interface, the renderer must be prepared to use methods on
the <A HREF="/directx/dxm/help/ds/dssd0169.htm">IOverlayNotify</A> interface of the filter doing the drawing, with notifications
of video property changes.

<P>The window-based renderer in DirectShow supports both <A HREF="/directx/dxm/help/ds/dssd0166.htm">IMemInputPin</A> and
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay</A> interfaces. These two interfaces are mutually exclusive. A filter chooses to use
the <B>IOverlay</B> transport interface by providing a media type during connection
that has a subtype of MEDIASUBTYPE_Overlay. After connection, it will be able
to get and use successfully the <B>IOverlay</B> interface. If it connects with any
other video formats (such as MEDIASUBTYPE_RGB8), trying to call through
<B>IOverlay</B> returns <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_E_NOT_OVERLAY_CO">VFW_E_NOT_OVERLAY_CONNECTION</A>.

<A NAME="When_to_Use"></A><P><B>When to Use</B>
<P>Use the methods on this function from an upstream filter that must
control video overlay properties and intends to handle the displaying of the
video data itself. This typically is used by hardware video decoders that have
an alternate connection to the video hardware.

<A NAME="Methods_in_Vtable_Or"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#QueryInterface">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#AddRef">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0181.htm#Release">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IOverlay methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0168.htm#GetPalette">GetPalette</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current palette.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0168.htm#SetPalette">SetPalette</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the palette.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0168.htm#GetDefaultColorKey">GetDefaultColorKey</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the default color key.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0168.htm#GetColorKey">GetColorKey</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the identifier of the currently active color key.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0168.htm#SetColorKey">SetColorKey</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Changes the color key.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0168.htm#GetWindowHandle">GetWindowHandle</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the window handle.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0168.htm#GetClipList">GetClipList</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the clipping list.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0168.htm#GetVideoPosition">GetVideoPosition</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current video source and destination rectangles.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0168.htm#Advise">Advise</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets up an advise link for the overlay events.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/ds/dssd0168.htm#Unadvise">Unadvise</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Terminates the advise link.
</FONT></TD></TR></TABLE>
<H3><HR COLOR="#0000FF"><A NAME="Advise">IOverlay::Advise</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay Interface</A>
<P>Sets up an advise link for the overlay events specified by
the <I>dwInterests</I> parameter.

<P><B>HRESULT</B> <B>Advise</B><B>(</B><BR>&nbsp;&nbsp;<B>IOverlayNotify</B> <B>*</B> <I>pOverlayNotify</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwInterests</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pOverlayNotify</I>
 </DT><DD>[in] Notification interface.
</DD><DT><I>dwInterests</I>
 </DT><DD>[in] Callbacks of interest, which can be any subset of the following events.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Event </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ADVISE_NONE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No changes.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ADVISE_CLIPPING </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Change in clipping region (synchronized with the window).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ADVISE_PALETTE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Change in palette.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ADVISE_COLORKEY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Change of chroma key value.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ADVISE_POSITION </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Change in position of video window (not synchronized with the window).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ADVISE_ALL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">All of the above.
</FONT></TD></TR></TABLE>
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>This method sets up an advise link for the <A HREF="/directx/dxm/help/ds/dssd0169.htm">IOverlayNotify</A>
interface to receive notifications. If one of these events occurs, the appropriate
entry point in the <I>pOverlayNotify</I> parameter passed in is called
(<A HREF="/directx/dxm/help/ds/dssd0169.htm#OnClipChange">IOverlayNotify::OnClipChange</A>,
<A HREF="/directx/dxm/help/ds/dssd0169.htm#OnColorKeyChange">IOverlayNotify::OnColorKeyChange</A>,
<A HREF="/directx/dxm/help/ds/dssd0169.htm#OnPaletteChange">IOverlayNotify::OnPaletteChange</A>, or
<A HREF="/directx/dxm/help/ds/dssd0169.htm#OnPositionChange">IOverlayNotify::OnPositionChange</A>).

<P>Only one advise link can be set on any given <A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay</A> interface.
Trying to set another notification interface on second and subsequent calls
returns <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_E_ADVISE_ALREADY">VFW_E_ADVISE_ALREADY_SET</A>. You can cancel an advise link by using
<A HREF="/directx/dxm/help/ds/dssd0168.htm#Unadvise">IOverlay::Unadvise</A>.
<H3><HR COLOR="#0000FF"><A NAME="GetClipList">IOverlay::GetClipList</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay Interface</A>
<P>Retrieves the clipping list.

<P><B>HRESULT</B> <B>GetClipList</B><B>(</B><BR>&nbsp;&nbsp;<B>RECT</B> <B>*</B> <I>pSourceRect</I><B>,</B><BR>&nbsp;&nbsp;<B>RECT</B> <B>*</B> <I>pDestinationRect</I><B>,</B><BR>&nbsp;&nbsp;<B>RGNDATA</B> <B>**</B> <I>ppRgnData</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pSourceRect</I>
</DT><DD>[out] Bounding client rectangle.
</DD><DT><I>pDestinationRect</I>
</DT><DD>[in] Destination rectangle.
</DD><DT><I>ppRgnData</I>
</DT><DD>[out] Header and data describing clipping. If successful,
the Microsoft&#174; Win32&#174; <A HREF="/directx/dxm/help/ds/dssd0404.htm#CoTaskMemFree">CoTaskMemFree</A> function should free memory.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>The <A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay</A> implementation allocates the memory for the
clipping rectangles, because it can vary in length. The filter calling this method
should free the memory (using <A HREF="/directx/dxm/help/ds/dssd0404.htm#CoTaskMemFree">CoTaskMemFree</A>) when it is finished with it.
<H3><HR COLOR="#0000FF"><A NAME="GetColorKey">IOverlay::GetColorKey</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay Interface</A>
<P>Retrieves the current color key used for chroma keying.

<P><B>HRESULT</B> <B>GetColorKey</B><B>(</B><BR>&nbsp;&nbsp;<B>COLORKEY</B> <B>*</B> <I>pColorKey</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pColorKey</I>
</DT><DD>[out] Pointer to where the current color key for chroma keying is copied.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>If you change the color key by using the <A HREF="/directx/dxm/help/ds/dssd0168.htm#SetColorKey">IOverlay::SetColorKey</A> method,
all the advise links receive an <A HREF="/directx/dxm/help/ds/dssd0169.htm#OnColorKeyChange">IOverlayNotify::OnColorKeyChange</A> callback method
with the new color.

<P>If no color key is currently being used, this method returns <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_E_NO_COLOR_KEY_S">VFW_E_NO_COLOR_KEY_SET</A>.
<H3><HR COLOR="#0000FF"><A NAME="GetDefaultColorKey">IOverlay::GetDefaultColorKey</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay Interface</A>
<P>Retrieves the default color key used for a chroma key overlay.

<P><B>HRESULT</B> <B>GetDefaultColorKey</B><B>(</B><BR>&nbsp;&nbsp;<B>COLORKEY</B> <B>*</B> <I>pColorKey</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pColorKey</I>
</DT><DD>[out] Pointer to where the default color key is copied.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>A filter using color keys can get a default color from the video renderer.
The default color key can then be installed into the window using
<A HREF="/directx/dxm/help/ds/dssd0168.htm#SetColorKey">IOverlay::SetColorKey</A>. The colors returned through this method vary depending
on the current display mode. If the colors are 8-bit palettized, they will be
bright system colors (such as magenta). If the display is in a true-color mode,
they will be shades of black.

<P>The <A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay</A> interface ensures that separate instances of the
renderer on the same computer get different color keys so that
overlays do not conflict.
<H3><HR COLOR="#0000FF"><A NAME="GetPalette">IOverlay::GetPalette</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay Interface</A>
<P>Retrieves the current system palette.

<P><B>HRESULT</B> <B>GetPalette</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <B>*</B> <I>pdwColors</I><B>,</B><BR>&nbsp;&nbsp;<B>PALETTEENTRY</B> <B>**</B> <I>ppPalette</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdwColors</I>
</DT><DD>[out] Number of colors present.
</DD><DT><I>ppPalette</I>
</DT><DD>[out] Retrieved palette structure.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H3><HR COLOR="#0000FF"><A NAME="GetVideoPosition">IOverlay::GetVideoPosition</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay Interface</A>
<P>Retrieves the current video source and destination rectangles.

<P><B>HRESULT</B> <B>GetVideoPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>[out]</B> <B>RECT</B> <I>*pSourceRect</I><B>,</B><BR>&nbsp;&nbsp;<B>[out]</B> <B>RECT</B> <I>*pDestinationRect</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pSourceRect</I>
</DT><DD>[out] Bounding video client rectangle.
</DD><DT><I>pDestinationRect</I>
</DT><DD>[in] Destination video rectangle.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H3><HR COLOR="#0000FF"><A NAME="GetWindowHandle">IOverlay::GetWindowHandle</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay Interface</A>
<P>Retrieves the current window handle.

<P><B>HRESULT</B> <B>GetWindowHandle</B><B>(</B><BR>&nbsp;&nbsp;<B>HWND</B> <I>*pHwnd</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pHwnd</I>
</DT><DD>[out] Window handle.
</DD></DL>
<H5>Return Values</H5>
<P>Returns a pointer to the window handle.

<H3><HR COLOR="#0000FF"><A NAME="SetColorKey">IOverlay::SetColorKey</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay Interface</A>
<P>Changes the color key.

<P><B>HRESULT</B> <B>SetColorKey</B><B>(</B><BR>&nbsp;&nbsp;<B>COLORKEY</B> <B>*</B> <I>pColorKey</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pColorKey</I>
</DT><DD>[out] Pointer to the color key value to be set. If successful, the actual
color key value selected is copied to this parameter.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>If you change the color key by using the <B>IOverlay::SetColorKey</B> method,
all the advise links will receive an <A HREF="/directx/dxm/help/ds/dssd0169.htm#OnColorKeyChange">IOverlayNotify::OnColorKeyChange</A> callback
method with the new color.

<P>When using <A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay</A> on a palettized display, a filter can either install a
color key (using <B>IOverlay::SetColorKey</B>) or install a palette
(using <A HREF="/directx/dxm/help/ds/dssd0168.htm#SetPalette">IOverlay::SetPalette</A>), but not both.
This is because color keys in this mode require a palette to be realized that
would conflict with <A HREF="/directx/dxm/help/ds/dssd0168.htm#SetPalette">SetPalette</A>. Color keys can be uninstalled by
requesting a color key with the CK_NOCOLORKEY flag. Likewise, any palette installed
through <B>SetPalette</B> can be uninstalled by calling
<B>SetPalette</B> and passing in null parameters
(that is, SetPalette(0,NULL)).

<P>Trying to set a palette when a color key is installed returns a <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_E_PALETTE_SET">VFW_E_PALETTE_SET</A> error. Trying to set a color key when a palette is installed returns <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_E_COLOR_KEY_SET">VFW_E_COLOR_KEY_SET</A>.
<H3><HR COLOR="#0000FF"><A NAME="SetPalette">IOverlay::SetPalette</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay Interface</A>
<P>Sets the palette.

<P><B>HRESULT</B> <B>SetPalette</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwColors</I><B>,</B><BR>&nbsp;&nbsp;<B>PALETTEENTRY</B> <B>*</B> <I>pPalette</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwColors</I>
</DT><DD>[in] Number of colors present.
</DD><DT><I>pPalette</I>
</DT><DD>[in] Colors to use for the palette.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method sets a logical palette for the window. The window is not guaranteed to
always have the colors requested in the actual system device palette.
The Microsoft&#174; Windows&#174; operating system only guarantees those colors when the window is the
foreground active window. The current device palette can be obtained by calling
<A HREF="/directx/dxm/help/ds/dssd0168.htm#GetPalette">IOverlay::GetPalette</A>.

<P>If the device does not have a palette, it returns <A HREF="/directx/dxm/help/ds/dssd0308.htm#VFW_E_NO_DISPLAY_PAL">VFW_E_NO_DISPLAY_PALETTE</A>.
<H3><HR COLOR="#0000FF"><A NAME="Unadvise">IOverlay::Unadvise</A></H3>
<A HREF="/directx/dxm/help/ds/dssd0168.htm">IOverlay Interface</A>
<P>Terminates the advise link established with the <A HREF="/directx/dxm/help/ds/dssd0169.htm">IOverlayNotify</A> interface.

<P><B>HRESULT</B> <B>Unadvise</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="/directx/dxm/help/ds/dssd0308.htm#HRESULT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method terminates the advise link established by using the <A HREF="/directx/dxm/help/ds/dssd0168.htm#Advise">IOverlay::Advise</A>
method. Only one advise link can be maintained at any one time.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/ds/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
