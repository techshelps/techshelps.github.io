<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirect3DRMFrame2</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IDirect3DRMFrame2">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="IDirect3DRMFrame2"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/d3drm/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="Direct3D Retained Mode Animated Header --IDirect3DRMFrame2"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/d3drm/art/HDRd3drm.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="Direct3D Retained Mode Animated Header --IDirect3DRMFrame2"></TD><TD VALIGN="TOP" WIDTH="383">
<IMG SRC="/directx/dxm/help/d3drm/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft Direct3D Retained Mode SDK"></TD></TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/d3drm/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/d3drm/rm0005.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/d3drm/rm0016.htm">IDirect3DRMFrame</A>
<IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/d3drm/rm0018.htm">IDirect3DRMInterpolator</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2><A NAME="dx5_IDirect3DRMFrame2_d3drm"></A>IDirect3DRMFrame2</H2>
<BR CLEAR=ALL>
<P>The <B>IDirect3DRMFrame2</B> interface is an extension of the <A HREF="/directx/dxm/help/d3drm/rm0016.htm">IDirect3DRMFrame</A> interface. <B>IDirect3DRMFrame2</B> has additional methods that enable using materials, bounding boxes, and axes with frames.
 
<B>IDirect3DRMFrame2</B> also has a <A HREF="/directx/dxm/help/d3drm/rm0017.htm#RayPick">IDirect3DRMFrame2::RayPick</A> method to calculate the intersections of visuals in the frame with a ray of specified position and direction. In addition, <B>IDirect3DRMFrame2</B> has one changed method <A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddMoveCallback2">IDirect3DRMFrame2::AddMoveCallback2</A>.



<P>For a conceptual overview, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#rmobject_IDirect3DRMFrame_Int">IDirect3DRMFrame, IDirect3DRMFrame2, and IDirect3DRMFrameArray Interfaces</A>.

<P>The methods of the <B>IDirect3DRMFrame2</B> interface can be organized into the following groups:
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Axes</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetAxes">GetAxes</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetInheritAxes">GetInheritAxes</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetAxes">SetAxes</A> 
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetInheritAxes">SetInheritAxes</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Background</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetSceneBackground">GetSceneBackground</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetSceneBackgroundDepth">GetSceneBackgroundDepth</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneBackground">SetSceneBackground</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneBackgroundDepth">SetSceneBackgroundDepth</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneBackgroundImage">SetSceneBackgroundImage</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneBackgroundRGB">SetSceneBackgroundRGB</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Bounding Box</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetBox">GetBox</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetBoxEnable">GetBoxEnable</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetHierarchyBox">GetHierarchyBox</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBox">SetBox</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBoxEnable">SetBoxEnable</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Color</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetColor">GetColor</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetColor">SetColor</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetColorRGB">SetColorRGB</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Fog</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetSceneFogColor">GetSceneFogColor</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetSceneFogEnable">GetSceneFogEnable</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetSceneFogMode">GetSceneFogMode</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetSceneFogParams">GetSceneFogParams</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneFogColor">SetSceneFogColor</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneFogEnable">SetSceneFogEnable</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneFogMode">SetSceneFogMode</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneFogParams">SetSceneFogParams</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Hierarchies</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddChild">AddChild</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#DeleteChild">DeleteChild</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetChildren">GetChildren</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetParent">GetParent</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetScene">GetScene</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Lighting</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddLight">AddLight</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#DeleteLight">DeleteLight</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetLights">GetLights</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Loading</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#Load">Load</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Material</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetMaterial">GetMaterial</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetMaterial">SetMaterial</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Material modes</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetMaterialMode">GetMaterialMode</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetMaterialMode">SetMaterialMode</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Positioning and movement</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddMoveCallback2">AddMoveCallback2</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddRotation">AddRotation</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddScale">AddScale</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddTranslation">AddTranslation</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#DeleteMoveCallback">DeleteMoveCallback</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetOrientation">GetOrientation</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetPosition">GetPosition</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetRotation">GetRotation</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetVelocity">GetVelocity</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#LookAt">LookAt</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#Move">Move</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetOrientation">SetOrientation</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetPosition">SetPosition</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetQuarternion">SetQuaternion</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetRotation">SetRotation</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetVelocity">SetVelocity</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Ray Picking</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#RayPick">RayPick</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Sorting</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetSortMode">GetSortMode</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetZbufferMode">GetZbufferMode</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSortMode">SetSortMode</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetZbufferMode">SetZbufferMode</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Textures</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetTexture">GetTexture</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetTextureTopology">GetTextureTopology</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetTexture">SetTexture</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetTextureTopology">SetTextureTopology</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Transformations</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddTransform">AddTransform</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetTransform">GetTransform</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#InverseTransform">InverseTransform</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#Transform">Transform</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Visual objects</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddVisual">AddVisual</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#DeleteVisual">DeleteVisual</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetVisuals">GetVisuals</A>
</FONT></TD></TR></TABLE>
<P>The <B>IDirect3DRMFrame2</B> interface, like all Component Object Model (COM) interfaces, inherits the <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0037.htm#_dx5_IUnknown_Interface_dxintro">IUnknown</A> interface methods. The <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0037.htm#_dx5_IUnknown_Interface_dxintro">IUnknown</A> interface supports the following three methods:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#IUnknown__AddRef">AddRef</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#IUnknown__QueryInter">QueryInterface</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#IUnknown__Release">Release</A>
</FONT></TD></TR></TABLE>
<P>In addition, the <B>IDirect3DRMFrame2</B> interface inherits the following methods from the <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0024.htm">IDirect3DRMObject</A> interface:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#AddDestroyCallback">AddDestroyCallback</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#Clone">Clone</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#DeleteDestroyCallback">DeleteDestroyCallback</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#GetAppData">GetAppData</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#GetClassName">GetClassName</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#GetName">GetName</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#SetAppData">SetAppData</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#SetName">SetName</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR></TABLE>
<P>The Direct3DRMFrame2 object is obtained by using the <A HREF="/directx/dxm/help/d3drm/rm0010.htm#CreateFrame">IDirect3DRM2::CreateFrame</A> method.

<H3><HR COLOR="#0000FF"><A NAME="AddChild">IDirect3DRMFrame2::AddChild</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Adds a child frame to a frame hierarchy.
<P><B>HRESULT</B> <B>AddChild</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpD3DRMFrameChild</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMFrameChild</I>
 </DT><DD>Address of the Direct3DRMFrame object that will be added as a child.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>If the frame being added as a child already has a parent, this method removes it from its previous parent before adding it to the new parent.
<P>To preserve an object's transformation, use the <A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetTransform">IDirect3DRMFrame2::GetTransform</A> method to retrieve the object's transformation before using the <B>AddChild</B> method. Then reapply the transformation after the frame is added.
<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#sec_Hierarchies">Hierarchies</A>
<H3><HR COLOR="#0000FF"><A NAME="AddLight">IDirect3DRMFrame2::AddLight</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Adds a light to a frame.
<P><B>HRESULT</B> <B>AddLight</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMLIGHT</B> <I>lpD3DRMLight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMLight</I>
</DT><DD>Address of a variable that represents the Direct3DRMLight object to be added to the frame.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="AddMoveCallback2">IDirect3DRMFrame2::AddMoveCallback2</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Adds a callback function for special movement processing. The callback is called when the frame is moved or updated.
<P><B>HRESULT</B> <B>AddMoveCallback2</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMFRAME2MOVECALLBACK</B> <I>d3drmFMC</I><B>,</B><BR>&nbsp;&nbsp;<B>VOID</B> <B>*</B> <I>lpArg</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwFlags</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>d3drmFMC</I>
</DT><DD>Application-defined <B>D3DRMFRAME2MOVECALLBACK</B> callback function.
</DD><DT><I>lpArg</I>
</DT><DD>Application-defined data to be passed to the callback function.
</DD><DT><I>dwFlags</I>
</DT><DD>One of the following values:
</DD><DD>D3DRMCALLBACK_PREORDER &#151; The default value. When <A HREF="/directx/dxm/help/d3drm/rm0017.htm#Move">IDirect3DRMFrame2::Move</A> traverses the hierarchy, callbacks for a frame are used before any child frames are traversed.
</DD><DD>D3DRMCALLBACK_POSTORDER &#151; When <A HREF="/directx/dxm/help/d3drm/rm0017.htm#Move">IDirect3DRMFrame2::Move</A> traverses the hierarchy, callbacks for a frame are used after the child frames are traversed. 

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>Multiple callbacks on an individual frame are used in the order that the callbacks were created.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#Move">IDirect3DRMFrame2::Move</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#DeleteMoveCallback">IDirect3DRMFrame2::DeleteMoveCallback</A>
<H3><HR COLOR="#0000FF"><A NAME="AddRotation">IDirect3DRMFrame2::AddRotation</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Adds a rotation about (<I>rvX</I>, <I>rvY</I>, <I>rvZ</I>) by the number of radians specified in <I>rvTheta</I>.
<P><B>HRESULT</B> <B>AddRotation</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMCOMBINETYPE</B> <I>rctCombine</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvX</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvY</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvZ</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvTheta</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rctCombine</I>
</DT><DD>A member of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMCOMBINETYPE">D3DRMCOMBINETYPE</A> enumerated type that specifies how to combine the new rotation with any current frame transformation.
</DD><DT><I>rvX</I>, <I>rvY</I>, and <I>rvZ</I>
</DT><DD>Axis about which to rotate.
</DD><DT><I>rvTheta</I>
</DT><DD>Angle of rotation, in radians.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The specified rotation changes the matrix only for the frame identified by this <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A> interface. This method changes the objects in the frame only once, unlike <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetRotation">IDirect3DRMFrame2::SetRotation</A>, which changes the matrix with every render tick.
<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0001.htm#rmmath_3D_Transformati">3-D Transformations</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetRotation">IDirect3DRMFrame2::SetRotation</A>
<H3><HR COLOR="#0000FF"><A NAME="AddScale">IDirect3DRMFrame2::AddScale</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Scales a frame's local transformation by (<I>rvX</I>, <I>rvY</I>, <I>rvZ</I>). 
<P><B>HRESULT</B> <B>AddScale</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMCOMBINETYPE</B> <I>rctCombine</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvX</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvY</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvZ</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rctCombine</I>
</DT><DD>Member of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMCOMBINETYPE">D3DRMCOMBINETYPE</A> enumerated type that specifies how to combine the new scale with any current frame transformation. 
</DD><DT><I>rvX</I>, <I>rvY</I>, and <I>rvZ</I>
</DT><DD>Scale factors in the x-, y-, and z-directions.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The specified transformation only changes the matrix for the frame identified by the <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A> interface.
<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0001.htm#rmmath_3D_Transformati">3-D Transformations</A>
<H3><HR COLOR="#0000FF"><A NAME="AddTransform">IDirect3DRMFrame2::AddTransform</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Transforms the local coordinates of the frame by the affine transformation specified by <I>rctCombine</I> and <I>rmMatrix</I>.

<P><B>HRESULT</B> <B>AddTransform</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMCOMBINETYPE</B> <I>rctCombine</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DRMMATRIX4D</B> <I>rmMatrix</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rctCombine</I>
</DT><DD>Member of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMCOMBINETYPE">D3DRMCOMBINETYPE</A> enumerated type that specifies how to combine the new transformation with any current transformation.
</DD><DT><I>rmMatrix</I>
</DT><DD>Member of the <A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMMATRIX4D">D3DRMMATRIX4D</A> array that defines the transformation matrix to be combined.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>Although a 4&#215;4 matrix is given, the last column must be the transpose of [0 0 0 1] for the transformation to be affine.
<P>The specified transformation changes the matrix only for the frame identified by this <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A> interface. 
<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0001.htm#rmmath_3D_Transformati">3-D Transformations</A>

<H3><HR COLOR="#0000FF"><A NAME="AddTranslation">IDirect3DRMFrame2::AddTranslation</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Adds a translation by (<I>rvX</I>, <I>rvY</I>, <I>rvZ</I>) to a frame's local coordinate system. 
<P><B>HRESULT</B> <B>AddTranslation</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMCOMBINETYPE</B> <I>rctCombine</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvX</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvY</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvZ</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rctCombine</I>
</DT><DD>Member of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMCOMBINETYPE">D3DRMCOMBINETYPE</A> enumerated type that specifies how to combine the new translation with any current translation.
</DD><DT><I>rvX</I>, <I>rvY</I>, and <I>rvZ</I>
</DT><DD>Definitions of the position changes in the x-, y-, and z-directions.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The specified translation changes the matrix only for the frame identified by this <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A> interface. 
<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0001.htm#rmmath_3D_Transformati">3-D Transformations</A>
<H3><HR COLOR="#0000FF"><A NAME="AddVisual">IDirect3DRMFrame2::AddVisual</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Adds a visual object to a frame. 
<P><B>HRESULT</B> <B>AddVisual</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMVISUAL</B> <I>lpD3DRMVisual</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMVisual</I>
</DT><DD>Address of a variable that represents the Direct3DRMVisual object to be added to the frame.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>Visual objects include meshes and textures. When a visual object is added to a frame, it becomes visible if the frame is in view. The frame references the visual object. 
<H3><HR COLOR="#0000FF"><A NAME="DeleteChild">IDirect3DRMFrame2::DeleteChild</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Removes a frame from the hierarchy. If the frame is not referenced, it is destroyed along with any child frames, lights, and meshes.
<P><B>HRESULT</B> <B>DeleteChild</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpChild</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpChild</I>
</DT><DD>Address of the Direct3DRMFrame object to be used as the child.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#sec_Hierarchies">Hierarchies</A>
<H3><HR COLOR="#0000FF"><A NAME="DeleteLight">IDirect3DRMFrame2::DeleteLight</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Removes a light from a frame, destroying the light if it is no longer referenced. 
When a light is removed from a frame, the light no longer affects meshes in the scene its frame was in.
<P><B>HRESULT</B> <B>DeleteLight</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMLIGHT</B> <I>lpD3DRMLight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMLight</I>
</DT><DD>Address of a variable that represents the Direct3DRMLight object to be removed.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="DeleteMoveCallback">IDirect3DRMFrame2::DeleteMoveCallback</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Removes a frame-move callback function previously added with <A HREF="/directx/dxm/help/d3drm/rm0016.htm#AddMoveCallback">AddMoveCallback</A>.
<P><B>HRESULT</B> <B>DeleteMoveCallback</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMFRAMEMOVECALLBACK</B> <I>d3drmFMC</I><B>,</B><BR>&nbsp;&nbsp;<B>VOID</B> <B>*</B> <I>lpArg</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>d3drmFMC</I>
</DT><DD>Application-defined <A HREF="/directx/dxm/help/d3drm/rm0007.htm#D3DRMFRAMEMOVECALLBA">D3DRMFRAMEMOVECALLBACK</A> callback function.
</DD><DT><I>lpArg</I>
</DT><DD>Application-defined data that was passed to the callback function.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddMoveCallback2">IDirect3DRMFrame2::AddMoveCallback2</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#Move">IDirect3DRMFrame2::Move</A>
<H3><HR COLOR="#0000FF"><A NAME="DeleteVisual">IDirect3DRMFrame2::DeleteVisual</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Removes a visual object from a frame, destroying it if it is no longer referenced.
<P><B>HRESULT</B> <B>DeleteVisual</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMVISUAL</B> <I>lpD3DRMVisual</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMVisual</I>
</DT><DD>Address of a variable that represents the Direct3DRMVisual object to be removed.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetAxes">IDirect3DRMFrame2::GetAxes</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Retrieves the vectors that are aligned with the direction (<I>rvDx</I>, <I>rvDy</I>, <I>rvDz</I>) and up (<I>rvUx</I>, <I>rvUy</I>, <I>rvUz</I>) vectors supplied to the <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetOrientation">IDirect3DRMFrame2::SetOrientation</A> method.
<P><B>HRESULT</B> <B>GetAxes</B><B>(</B><BR>&nbsp;&nbsp;<B>LPD3DVECTOR</B> <I>dir</I><B>,</B><BR>&nbsp;&nbsp;<B>LPD3DVECTOR</B> <I>up</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dir</I>
</DT><DD>The z-axis for the frame. Default is (0,0,1).
</DD><DT><I>up</I>
</DT><DD>The y-axis for the frame. Default is (0,1,0).
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method along with <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetAxes">IDirect3DRMFrame2::SetAxes</A> helps support both left-handed and right-handed coordinate systems. <B>SetAxes</B> allows you to specify that the negative z-axis represents the front of the object.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetAxes">IDirect3DRMFrame2::SetAxes</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetInheritAxes">IDirect3DRMFrame2::GetInheritAxes</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetInheritAxes">IDirect3DRMFrame2::SetInheritAxes</A>
<H3><HR COLOR="#0000FF"><A NAME="GetBox">IDirect3DRMFrame2::GetBox</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Retrieves the bounding box containing a DIRECT3DRMFRAME2 object. The bounding box gives the minimum and maximum <A HREF="/directx/dxm/help/d3drm/rm0051.htm#model_coordinates">model coordinates</A> in each dimension.
<P><B>HRESULT</B> <B>GetBox</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMBOX</B> <B>*</B> <I>lpD3DRMBox</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMBox</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMBOX">D3DRMBOX</A> structure that will be filled with the bounding box coordinates.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. Returns <A HREF="/directx/dxm/help/d3drm/rm0036.htm#D3DRMERR_BOXNOTSET">D3DRMERR_BOXNOTSET</A> unless a valid bounding box has already been set on the frame. For a list of other possible return codes, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method supports a bounding box on a frame for hierarchical culling. A valid bounding box must be set on the frame with <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBox">IDirect3DRMFrame2::SetBox</A>. For a bounding box to be enabled, the <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBoxEnable">IDirect3DRMFrame2::SetBoxEnable</A> method must be used to set the enable flag to TRUE. By default, the box-enable flag is FALSE. There is no default bounding box.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBox">IDirect3DRMFrame2::SetBox</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBoxEnable">IDirect3DRMFrame2::SetBoxEnable</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetBoxEnable">IDirect3DRMFrame2::GetBoxEnable</A>
<H3><HR COLOR="#0000FF"><A NAME="GetBoxEnable">IDirect3DRMFrame2::GetBoxEnable</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Retrieves the flag that determines whether a bounding box is enabled for this Direct3DRMFrame2 object. 
<P><B>BOOL</B> <B>GetBoxEnable</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns TRUE if a bounding box is enabled, or FALSE if it is not enabled. 

<H5>Remarks</H5>
<P>For a bounding box to be enabled, the <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBoxEnable">IDirect3DRMFrame2::SetBoxEnable</A> flag must be used to set the enable flag to TRUE. By default, the box enable flag is FALSE. 
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBoxEnable">IDirect3DRMFrame2::SetBoxEnable</A>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetBox">IDirect3DRMFrame2::GetBox</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBox">IDirect3DRMFrame2::SetBox</A>
<H3><HR COLOR="#0000FF"><A NAME="GetChildren">IDirect3DRMFrame2::GetChildren</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves a list of child frames in the form of a Direct3DRMFrameArray object.
<P><B>HRESULT</B> <B>GetChildren</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAMEARRAY*</B> <I>lplpChildren</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpChildren</I>
</DT><DD>Address of a pointer to be initialized with a valid Direct3DRMFrameArray pointer if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#rmobject_IDirect3DRMFrame_Int">DIRECT3DRMFRAMEARRAY</A>, <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#sec_Hierarchies">Hierarchies</A>
<H3><HR COLOR="#0000FF"><A NAME="GetColor">IDirect3DRMFrame2::GetColor</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the color of the frame.
<P><B>D3DCOLOR</B> <B>GetColor</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the color of the Direct3DRMFrame2 object.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetColor">IDirect3DRMFrame2::SetColor</A>
<H3><HR COLOR="#0000FF"><A NAME="GetHierarchyBox">IDirect3DRMFrame2::GetHierarchyBox</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Calculates a bounding box to contain all the geometry in the hierarchy rooted in this Direct3DRMFrame2 object. 
<P><B>HRESULT</B> <B>GetHierarchyBox</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMBOX</B> <B>*</B> <I>lpD3DRMBox</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMBox</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMBOX">D3DRMBOX</A> structure that will be filled with the bounding box coordinates.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetBox">IDirect3DRMFrame2::GetBox</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBox">IDirect3DRMFrame2::SetBox</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBoxEnable">IDirect3DRMFrame2::SetBoxEnable</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetBoxEnable">IDirect3DRMFrame2::GetBoxEnable</A>
<H3><HR COLOR="#0000FF"><A NAME="GetInheritAxes">IDirect3DRMFrame2::GetInheritAxes</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Retrieves the flag that indicates whether the axes for the frame are inherited from the parent frame. 
<P><B>BOOL</B> <B>GetInheritAxes</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns TRUE if the frame inherits axes (the default) and FALSE if the frame does not inherit axes.

<H5>Remarks</H5>
<P>By default, the axes are inherited from the parent. If a frame is set to inherit from a parent and there is no parent, the frame acts as if it inherits from a parent with the default axes (direction=(0,0,1) and up=(0,1,0)). 
<P>This method and the <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetInheritAxes">IDirect3DRMFrame2::SetInheritAxes</A> method allow a single policy for axes to be set at the root of the hierarchy. 
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetInheritAxes">IDirect3DRMFrame2::SetInheritAxes</A>, 
<A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetAxes">IDirect3DRMFrame2::GetAxes</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetAxes">IDirect3DRMFrame2::SetAxes</A> 
<H3><HR COLOR="#0000FF"><A NAME="GetLights">IDirect3DRMFrame2::GetLights</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves a list of lights in the frame in the form of a Direct3DRMLightArray object.
<P><B>HRESULT</B> <B>GetLights</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMLIGHTARRAY*</B> <I>lplpLights</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpLights</I>
</DT><DD>Address of a pointer to be initialized with a valid Direct3DRMLightArray pointer if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0008.htm#IDirect3DRMLightArray">IDirect3DRMLightArray</A> 
<H3><HR COLOR="#0000FF"><A NAME="GetMaterial">IDirect3DRMFrame2::GetMaterial</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Retrieves the material of the Direct3DRMFrame2 object. 
<P><B>HRESULT</B> <B>GetMaterial</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMMATERIAL</B> <I>*lplpMaterial</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpMaterial</I>
</DT><DD>Address of a variable that will be filled with a pointer to the Direct3DRMMaterial object that is applied to the frame. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetMaterial">IDirect3DRMFrame2::SetMaterial</A>
<H3><HR COLOR="#0000FF"><A NAME="GetMaterialMode">IDirect3DRMFrame2::GetMaterialMode</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the material mode of the frame.
<P><B>D3DRMMATERIALMODE</B> <B>GetMaterialMode</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns a member of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMMATERIALMODE">D3DRMMATERIALMODE</A> enumerated type that specifies the current material mode.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetMaterialMode">IDirect3DRMFrame2::SetMaterialMode</A>
<H3><HR COLOR="#0000FF"><A NAME="GetOrientation">IDirect3DRMFrame2::GetOrientation</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the orientation of a frame relative to the given reference frame. 
<P><B>HRESULT</B> <B>GetOrientation</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>LPD3DVECTOR</B> <I>lprvDir</I><B>,</B><BR>&nbsp;&nbsp;<B>LPD3DVECTOR</B> <I>lprvUp</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpRef</I>
</DT><DD>Address of a variable that represents the Direct3DRMFrame object to be used as the reference.
</DD><DT><I>lprvDir</I> and <I>lprvUp</I>
</DT><DD>Addresses of <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DVECTOR">D3DVECTOR</A> structures that will be filled with the normalized directions of the frame's z-axis and y-axis, respectively.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetOrientation">IDirect3DRMFrame2::SetOrientation</A>
<H3><HR COLOR="#0000FF"><A NAME="GetParent">IDirect3DRMFrame2::GetParent</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the parent frame of the current frame.
<P><B>HRESULT</B> <B>GetParent</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMRAME</B> <B>*</B> <I>lplpParent</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpParent</I>
</DT><DD>Address of a pointer that will be filled with the pointer to the Direct3DRMFrame object representing the frame's parent. If the current frame is the root, this pointer will be NULL when the method returns.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetPosition">IDirect3DRMFrame2::GetPosition</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the position of a frame relative to the given reference frame, that is, it retrieves the distance of the frame from the reference. The distance is stored in the <I>lprvPos</I> parameter as a vector rather than as a linear measure.
<P><B>HRESULT</B> <B>GetPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>LPD3DVECTOR</B> <I>lprvPos</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpRef</I>
</DT><DD>Address of a variable that represents the Direct3DRMFrame object to be used as the reference.
</DD><DT><I>lprvPos</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DVECTOR">D3DVECTOR</A> structure that will be filled with the frame's position.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetPosition">IDirect3DRMFrame2::SetPosition</A>
<H3><HR COLOR="#0000FF"><A NAME="GetRotation">IDirect3DRMFrame2::GetRotation</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the rotation of the frame relative to the given reference frame.
<P><B>HRESULT</B> <B>GetRotation</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>LPD3DVECTOR</B> <I>lprvAxis</I><B>,</B><BR>&nbsp;&nbsp;<B>LPD3DVALUE</B> <I>lprvTheta</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpRef</I>
</DT><DD>Address of a variable that represents the Direct3DRMFrame object to be used as the reference.
</DD><DT><I>lprvAxis</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DVECTOR">D3DVECTOR</A> structure that will be filled with the frame's axis of rotation.
</DD><DT><I>lprvTheta</I>
</DT><DD>Address of a variable that will be the frame's rotation, in radians.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetRotation">IDirect3DRMFrame2::SetRotation</A>, <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#sec_Transformations">Transformations</A>
<H3><HR COLOR="#0000FF"><A NAME="GetScene">IDirect3DRMFrame2::GetScene</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the <A HREF="/directx/dxm/help/d3drm/rm0054.htm#root_frame">root frame</A> of the hierarchy containing the given frame.
<P><B>HRESULT</B> <B>GetScene</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lplpRoot</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpRoot</I>
</DT><DD>Address of the pointer that will be filled with the pointer to the Direct3DRMFrame object representing the scene's root frame.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetSceneBackground">IDirect3DRMFrame2::GetSceneBackground</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the background color of a scene.
<P><B>D3DCOLOR</B> <B>GetSceneBackground</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the color.

<H3><HR COLOR="#0000FF"><A NAME="GetSceneBackgroundDepth">IDirect3DRMFrame2::GetSceneBackgroundDepth</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Retrieves the current background-depth buffer for the scene.
<P><B>HRESULT</B> <B>GetSceneBackgroundDepth</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECTDRAWSURFACE</B> <B>*</B> <I>lplpDDSurface</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpDDSurface</I>
 </DT><DD>Address of a pointer that will be initialized with the address of a DirectDraw surface representing the current background-depth buffer.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneBackgroundDepth">IDirect3DRMFrame2::SetSceneBackgroundDepth</A><H3><HR COLOR="#0000FF"><A NAME="GetSceneFogColor">IDirect3DRMFrame2::GetSceneFogColor</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the fog color of a scene.
<P><B>D3DCOLOR</B> <B>GetSceneFogColor</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the fog color.

<H3><HR COLOR="#0000FF"><A NAME="GetSceneFogEnable">IDirect3DRMFrame2::GetSceneFogEnable</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves whether fog is currently enabled for this scene.
<P><B>BOOL</B> <B>GetSceneFogEnable</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns TRUE if fog is enabled, and FALSE otherwise.

<H3><HR COLOR="#0000FF"><A NAME="GetSceneFogMode">IDirect3DRMFrame2::GetSceneFogMode</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the current fog mode for this scene.
<P><B>D3DRMFOGMODE</B> <B>GetSceneFogMode</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns a member of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMFOGMODE">D3DRMFOGMODE</A> enumerated type that specifies the current fog mode.

<H3><HR COLOR="#0000FF"><A NAME="GetSceneFogParams">IDirect3DRMFrame2::GetSceneFogParams</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the current fog parameters for this scene.
<P><B>HRESULT</B> <B>GetSceneFogParams</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <B>*</B> <I>lprvStart</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <B>*</B> <I>lprvEnd</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <B>*</B> <I>lprvDensity</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lprvStart</I>, <I>lprvEnd</I>, and <I>lprvDensity</I>
</DT><DD>Addresses of variables that will be the fog start, end, and density values.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetSortMode">IDirect3DRMFrame2::GetSortMode</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Retrieves the sorting mode used to process child frames. 
<P><B>D3DRMSORTMODE</B> <B>GetSortMode</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the member of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMSORTMODE">D3DRMSORTMODE</A> enumerated type that specifies the sorting mode.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSortMode">IDirect3DRMFrame2::SetSortMode</A>
<H3><HR COLOR="#0000FF"><A NAME="GetTexture">IDirect3DRMFrame2::GetTexture</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the texture of the given frame.
<P><B>HRESULT</B> <B>GetTexture</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMTEXTURE*</B> <I>lplpTexture</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpTexture</I>
</DT><DD>Address of the pointer that will be filled with the address of the Direct3DRMTexture object representing the frame's texture.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetTexture">IDirect3DRMFrame2::SetTexture</A>
<H3><HR COLOR="#0000FF"><A NAME="GetTextureTopology">IDirect3DRMFrame2::GetTextureTopology</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the topological properties of a texture when mapped onto objects in the given frame.
<P><B>HRESULT</B> <B>GetTextureTopology</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <B>*</B> <I>lpbWrap_u</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <B>*</B> <I>lpbWrap_v</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpbWrap_u</I> and <I>lpbWrap_v</I>
</DT><DD>Addresses of variables that are set to TRUE if the texture is mapped in the u- and v-directions, respectively.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetTextureTopology">IDirect3DRMFrame2::SetTextureTopology</A>
<H3><HR COLOR="#0000FF"><A NAME="GetTransform">IDirect3DRMFrame2::GetTransform</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the local transformation of the frame as a 4&#215;4 affine matrix.
<P><B>HRESULT</B> <B>GetTransform</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMMATRIX4D</B> <I>rmMatrix</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rmMatrix</I>
</DT><DD>A <A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMMATRIX4D">D3DRMMATRIX4D</A> array that will be filled with the frame's transformation. Because this is an array, this value is actually an address.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0001.htm#rmmath_3D_Transformati">3-D Transformations</A>
<H3><HR COLOR="#0000FF"><A NAME="GetVelocity">IDirect3DRMFrame2::GetVelocity</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves the velocity of the frame relative to the given reference frame. Velocity is specified as units per tick. See <A HREF="/directx/dxm/help/d3drm/rm0009.htm#Tick">IDirect3DRM::Tick</A> for more information.
<P><B>HRESULT</B> <B>GetVelocity</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>LPD3DVECTOR</B> <I>lprvVel</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>fRotVel</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpRef</I>
</DT><DD>Address of a variable that represents the Direct3DRMFrame object to be used as the reference.
</DD><DT><I>lprvVel</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DVECTOR">D3DVECTOR</A> structure that will be filled with the frame's velocity.
</DD><DT><I>fRotVel</I>
</DT><DD>Flag specifying whether the rotational velocity of the object is taken into account when retrieving the linear velocity. If this parameter is TRUE, the object's rotational velocity is included in the calculation.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetVelocity">IDirect3DRMFrame2::SetVelocity</A>
<H3><HR COLOR="#0000FF"><A NAME="GetVisuals">IDirect3DRMFrame2::GetVisuals</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Retrieves a list of visuals in the frame.
<P><B>HRESULT</B> <B>GetVisuals</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMVISUALARRAY*</B> <I>lplpVisuals</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpVisuals</I>
</DT><DD>Address of a pointer to be initialized with a valid Direct3DRMVisualArray pointer if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetZbufferMode">IDirect3DRMFrame2::GetZbufferMode</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Retrieves the z-buffer mode; that is, whether z-buffering is enabled or disabled. 
<P>
<P><B>D3DRMZBUFFERMODE</B> <B>GetZbufferMode</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns one of the members of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMZBUFFERMODE">D3DRMZBUFFERMODE</A> enumerated type.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetZbufferMode">IDirect3DRMFrame2::SetZbufferMode</A>
<H3><HR COLOR="#0000FF"><A NAME="InverseTransform">IDirect3DRMFrame2::InverseTransform</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Transforms the vector in the <I>lprvSrc</I> parameter in <A HREF="/directx/dxm/help/d3drm/rm0059.htm#world_coordinates">world coordinates</A> to <A HREF="/directx/dxm/help/d3drm/rm0051.htm#model_coordinates">model coordinates</A>, and returns the result in the <I>lprvDst</I> parameter.
<P><B>HRESULT</B> <B>InverseTransform</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVECTOR</B> <I>*lprvDst</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVECTOR</B> <I>*lprvSrc</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lprvDst</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DVECTOR">D3DVECTOR</A> structure that will be filled with the result of the transformation.
</DD><DT><I>lprvSrc</I>
</DT><DD>Address of a <B>D3DVECTOR</B> structure that is the source of the transformation.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#Transform">IDirect3DRMFrame2::Transform</A>, <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0001.htm#rmmath_3D_Transformati">3-D Transformations</A>
<H3><HR COLOR="#0000FF"><A NAME="Load">IDirect3DRMFrame2::Load</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Loads a Direct3DRMFrame2 object.
<P><B>HRESULT</B> <B>Load</B><B>(</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpvObjSource</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpvObjID</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DRMLOADOPTIONS</B> <I>d3drmLOFlags</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DRMLOADTEXTURECALLBACK</B> <I>d3drmLoadTextureProc</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpArgLTP</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpvObjSource</I>
 </DT><DD>Source for the object to be loaded.

 This source can be a file, resource, memory block, or stream, depending on the source flags specified in the <I>d3drmLOFlags</I> parameter.
</DD><DT><I>lpvObjID</I>
 </DT><DD>Object name or position to be loaded. The use of this parameter depends on the identifier flags specified in the <I>d3drmLOFlags</I> parameter. If the D3DRMLOAD_BYPOSITION flag is specified, this parameter is a pointer to a <B>DWORD</B> value that gives the object's order in the file. This parameter can be NULL.
</DD><DT><I>d3drmLOFlags</I>
 </DT><DD>Value of the <A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMLOADOPTIONS">D3DRMLOADOPTIONS</A> type describing the load options.
</DD><DT><I>d3drmLoadTextureProc</I>
 </DT><DD>A <A HREF="/directx/dxm/help/d3drm/rm0007.htm#D3DRMLOADTEXTURECALL">D3DRMLOADTEXTURECALLBACK</A> callback function used to load any textures used by the object that require special formatting. This parameter can be NULL.
</DD><DT><I>lpArgLTP</I>
 </DT><DD>Address of application-defined data passed to the <A HREF="/directx/dxm/help/d3drm/rm0007.htm#D3DRMLOADTEXTURECALL">D3DRMLOADTEXTURECALLBACK</A> callback function.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>By default, this method loads the first frame hierarchy in the file specified by the <I>lpvObjSource</I> parameter. The frame that uses this method is used as the parent of the new frame hierarchy.
<H3><HR COLOR="#0000FF"><A NAME="LookAt">IDirect3DRMFrame2::LookAt</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Faces the frame toward the target frame, relative to the given reference frame, locking the rotation by the given constraints.
<P><B>HRESULT</B> <B>LookAt</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpTarget</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DRMFRAMECONSTRAINT</B> <I>rfcConstraint</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpTarget</I> and <I>lpRef</I>
</DT><DD>Addresses of variables that represent the Direct3DRMFrame objects to be used as the target and reference, respectively.
</DD><DT><I>rfcConstraint</I>
</DT><DD>Member of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMFRAMECONSTRAINT">D3DRMFRAMECONSTRAINT</A> enumerated type that specifies the axis of rotation to constrain. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="Move">IDirect3DRMFrame2::Move</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Applies the linear and rotational velocities for all frames in the given hierarchy.
<P><B>HRESULT</B> <B>Move</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>delta</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>delta</I>
 </DT><DD>Amount to change the linear and rotational velocity. The change in each component is equal to the velocity of that component multiplied by <I>delta</I>. Although either or both of these velocities can be set relative to any frame, the system automatically converts them to velocities relative to the parent frame for the purpose of applying time deltas. 

<P>
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="RayPick">IDirect3DRMFrame2::RayPick</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Searches the hierarchy starting at this Direct3DRMFrame2 object and calculates the intersections between any visuals and the ray specified by the <I>dvPosition</I> and <I>dvDirection</I> parameters in the coordinate space specified by the <I>lpRefFrame</I> parameter.
<P><B>HRESULT</B> <B>RayPick</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRefFrame</I><B>,</B><BR>&nbsp;&nbsp;<B>LPD3DRMRAY</B> <I>ray</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwFlags</I><B>,</B><BR>&nbsp;&nbsp;<B>LPD3DRMPICKED2ARRAY*</B> <I>lplpPicked2Array</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpRefFrame</I>
 </DT><DD>Address of the Direct3DRMFrame object that contains the ray.
</DD><DT><I>ray</I>
 </DT><DD>Pointer to a <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMRAY">D3DRMRAY</A> structure that contains two D3DVECTOR structures. The first D3DVECTOR structure is the vector direction of the ray. The second D3DVECTOR structure is the position of the origin of the ray. 
</DD><DT><I>dwFlags</I> 

 </DT><DD>Can be one of the following values: 
</DD><DD><B><A NAME="D3DRMRAYPICK_ONLYBOU">D3DRMRAYPICK_ONLYBOUNDINGBOXES</A></B> &#150; Only intersections with bounding boxes of the visuals in the hierarchy are returned. Does not check for exact face intersections.
</DD><DD><B><A NAME="D3DRMRAYPICK_IGNOREF">D3DRMRAYPICK_IGNOREFURTHERPRIMITIVES</A></B> &#150; Only the closest visual that intersects the ray is returned. Ignores visuals farther away than the closest one found so far in a search. 
</DD><DD><B><A NAME="D3DRMRAYPICK_INTERPO">D3DRMRAYPICK_INTERPOLATEUV</A></B> &#150; Interpolate texture coordinates.
</DD><DD><B><A NAME="D3DRMRAYPICK_INTERPO">D3DRMRAYPICK_INTERPOLATECOLOR</A></B> &#150; Interpolate color.
</DD><DD><B><A NAME="D3DRMRAYPICK_INTERPO">D3DRMRAYPICK_INTERPOLATENORMAL</A></B> &#150; Interpolate normal.
</DD><DT><I>lplpPicked2Array</I>
 </DT><DD>The address of a pointer to be initialized with a valid pointer to the <A HREF="/directx/dxm/help/d3drm/rm0008.htm#IDirect3DRMPicked2Array">IDirect3DRMPicked2Array</A> interface. You then use the <A HREF="/directx/dxm/help/d3drm/rm0008.htm#GetPick">IDirect3DRMPicked2Array::GetPick</A> method to retrieve a visual object, an <A HREF="/directx/dxm/help/d3drm/rm0008.htm#IDirect3DRMFrameArray">IDirect3DRMFrameArray</A> interface, and a <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMPICKDESC2">D3DRMPICKDESC2</A> structure. The array of frames is the path through the hierarchy leading to the visual object that intersected the ray. The <B>D3DRMPICKDESC2</B> structure contains the face and group identifiers, pick position, horizontal and vertical texture coordinates for the vertex, vertex normal, and color of the intersected objects.
<P>If you specify D3DRMRAYPICK_ONLYBOUNDINGBOXES, the texture, normal, and color data in the <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMPICKDESC2">D3DRMPICKDESC2</A> structure will be invalid.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>There are two kinds of flags: optimization flags and interpolation flags. Optimization flags allow you to limit the search and therefore make it faster. Interpolation flags specify what to interpolate if a primitive is hit. The three interpolation choices are color, normal, and texture coordinates. 
<P>The ray is specified in the reference frame coordinate space (pointed to by <I>lpRefFrame</I>). If the reference frame is NULL, the ray is specified in world coordinates.
<H3><HR COLOR="#0000FF"><A NAME="Saves">IDirect3DRMFrame2::Save</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Saves a Direct3DRMFrame2 object to the specified file.
<P><B>HRESULT</B> <B>Save</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCSTR</B> <I>lpFilename</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DRMXOFFORMAT</B> <I>d3dFormat</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DRMSAVEOPTIONS</B> <I>d3dSaveFlags</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpFilename</I>
</DT><DD>Address specifying the name of the created file. This file must have a .x file name extension.
</DD><DT><I>d3dFormat</I>
</DT><DD>D3DRMXOF_TEXT value from the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMXOFFORMAT">D3DRMXOFFORMAT</A> enumerated type.
</DD><DT><I>d3dSaveFlags</I>
</DT><DD>Value of the <A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMSAVEOPTIONS">D3DRMSAVEOPTIONS</A> type describing the save options.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="SetAxes">IDirect3DRMFrame2::SetAxes</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Sets the vectors that define a coordinate space by which the <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetOrientation">IDirect3DRMFrame2::SetOrientation</A> vectors are transformed. 
<P><B>HRESULT</B> <B>SetAxes</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>dx</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>dy</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>dz</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>ux</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>uy</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>uz</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dx</I>, <I>dy</I>, <I>dz</I>
</DT><DD>The z-axis for the frame. Default is (0,0,1).
</DD><DT><I>ux</I>, <I>uy</I>, <I>uz</I>
</DT><DD>The y-axis for the frame. Default is (0,1,0).
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method helps support both left-handed and right-handed coordinate systems. This method also allows you to specify that the negative z-axis represents the front of the object.
<P>The <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetOrientation">IDirect3DRMFrame2::SetOrientation</A> direction (<I>rvDx</I>, <I>rvDy</I>, <I>rvDz</I>) and up (<I>rvUx</I>, <I>rvUy</I>, <I>rvUz</I>) vectors are transformed according to the value of the <B>SetAxes</B> vectors.
<P>The axes are inherited by child frames as specified in <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetInheritAxes">IDirect3DRMFrame2::SetInheritAxes</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetAxes">IDirect3DRMFrame2::GetAxes</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetInheritAxes">IDirect3DRMFrame2::GetInheritAxes</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetInheritAxes">IDirect3DRMFrame2::SetInheritAxes</A>
<H3><HR COLOR="#0000FF"><A NAME="SetBox">IDirect3DRMFrame2::SetBox</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Sets the box to be used in bounding-box testing. In order for the bounding box to be valid, its minimum x must be less than or equal to its maximum x, minimum y must be less than or equal to its maximum y, and minimum z must be less than or equal to its maximum z.

<P><B>HRESULT</B> <B>SetBox</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMBOX</B> <B>*</B> <I>lpD3DRMBox</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMBox</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMBOX">D3DRMBOX</A> structure that contains the bounding-box coordinates.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method supports a bounding box on a frame for hierarchical culling. For a bounding box to be enabled, the <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBoxEnable">IDirect3DRMFrame2::SetBoxEnable</A> method must be used to set the enable flag to TRUE. By default, the box-enable flag is FALSE. 

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetBox">IDirect3DRMFrame2::GetBox</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBoxEnable">IDirect3DRMFrame2::SetBoxEnable</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetBoxEnable">IDirect3DRMFrame2::GetBoxEnable</A>
<H3><HR COLOR="#0000FF"><A NAME="SetBoxEnable">IDirect3DRMFrame2::SetBoxEnable</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Enables or disables bounding-box testing for this Direct3DRMFrame2 object. Bounding-box testing cannot be enabled unless a valid bounding box has already been set on the frame.

<P><B>HRESULT</B> <B>SetBoxEnable</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bEnableFlag</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>bEnableFlag</I>
</DT><DD>Flag specifying whether bounding boxes are enabled or not. TRUE to enable a bounding box. FALSE if a bounding box is not enabled. Default is FALSE.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>For a bounding box to be enabled, this method must be used to set the enable flag to TRUE. By default, the box-enable flag is FALSE. 


<P>Bounding-box testing is performed as follows: At render time, the bounding box is transformed into model space and checked for intersection with the viewing frustum. If the entire box is outside of the viewing frustum, none of the visuals in the frame, or in any child frame, are rendered. Otherwise, rendering continues as normal.

<P>Enabling bounding-box testing with a box of {0,0,0,0} completely prevents a frame from being rendered.


<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetBoxEnable">IDirect3DRMFrame2::GetBoxEnable</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetBox">IDirect3DRMFrame2::GetBox</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetBox">IDirect3DRMFrame2::SetBox</A>
<H3><HR COLOR="#0000FF"><A NAME="SetColor">IDirect3DRMFrame2::SetColor</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the color of the frame. This color is used for meshes in the frame when the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMMATERIALMODE">D3DRMMATERIALMODE</A> enumerated type is D3DRMMATERIAL_FROMFRAME.
<P><B>HRESULT</B> <B>SetColor</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DCOLOR</B> <I>rcColor</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rcColor</I>
</DT><DD>New color for the frame.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method is also used to add a color key to a <A HREF="/directx/dxm/help/d3drm/rm0018.htm">DIRECT3DRMFRAMEINTERPOLATOR</A> object.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetColor">IDirect3DRMFrame2::GetColor</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetMaterialMode">IDirect3DRMFrame2::SetMaterialMode</A>
<H3><HR COLOR="#0000FF"><A NAME="SetColorRGB">IDirect3DRMFrame2::SetColorRGB</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the color of the frame. This color is used for meshes in the frame when the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMMATERIALMODE">D3DRMMATERIALMODE</A> enumerated type is D3DRMMATERIAL_FROMFRAME.
<P><B>HRESULT</B> <B>SetColorRGB</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvRed</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvGreen</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvBlue</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rvRed</I>, <I>rvGreen</I>, and <I>rvBlue</I>
</DT><DD>New color for the frame. Each component of the color should be in the range 0 to 1.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method is also used to add an RGB color key to a DIRECT3DRMFRAMEINTERPOLATOR object.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetMaterialMode">IDirect3DRMFrame2::SetMaterialMode</A>
<H3><HR COLOR="#0000FF"><A NAME="SetInheritAxes">IDirect3DRMFrame2::SetInheritAxes</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Specifies whether the axes for the frame are inherited from the parent frame. 
<P><B>HRESULT</B> <B>SetInheritAxes</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>inherit_from_parent</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>inherit_from_parent</I>
</DT><DD>Flag indicating whether the frame should inherit axes from its parent. If TRUE, the frame inherits axes (the default). If FALSE, the frame does not inherit axes.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>By default, the axes are inherited from the parent. If a frame is set to inherit from the parent, and there is no parent, the frame acts as if it inherits from a parent with the default axes (direction=(0,0,1) and up=(0,1,0)). This method allows a single policy for axes to be set at the root of the hierarchy. 

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetInheritAxes">IDirect3DRMFrame2::GetInheritAxes</A>, 
<A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetAxes">IDirect3DRMFrame2::GetAxes</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetAxes">IDirect3DRMFrame2::SetAxes</A> 
<H3><HR COLOR="#0000FF"><A NAME="SetMaterial">IDirect3DRMFrame2::SetMaterial</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Sets the material of the Direct3DRMFrame2 object. 
<P><B>HRESULT</B> <B>SetMaterial</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMMATERIAL</B> <I>*lplpMaterial</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpMaterial</I>
</DT><DD>Address of the Direct3DRMMaterial object that will be applied to the frame. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetMaterial">IDirect3DRMFrame2::GetMaterial</A>
<H3><HR COLOR="#0000FF"><A NAME="SetMaterialMode">IDirect3DRMFrame2::SetMaterialMode</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the material mode for a frame. The material mode determines the source of material information for visuals rendered with the frame. 
<P><B>HRESULT</B> <B>SetMaterialMode</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMMATERIALMODE</B> <I>rmmMode</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rmmMode</I>
</DT><DD>One of the members of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMMATERIALMODE">D3DRMMATERIALMODE</A> enumerated type. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetMaterialMode">IDirect3DRMFrame2::GetMaterialMode</A>
<H3><HR COLOR="#0000FF"><A NAME="SetOrientation">IDirect3DRMFrame2::SetOrientation</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>
<P>Aligns a frame so that its z-direction points along the direction vector [<I>rvDx, rvDy, rvDz</I>] and its y-direction aligns with the vector [<I>rvUx, rvUy, rvUz</I>].
<P><B>HRESULT</B> <B>SetOrientation</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvDx</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvDy</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvDz</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvUx</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvUy</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvUz</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpRef</I>
</DT><DD>Address of a variable that represents the Direct3DRMFrame object to be used as the reference.
</DD><DT><I>rvDx</I>, <I>rvDy</I>, and <I>rvDz</I>
</DT><DD>New z-axis for the frame.
</DD><DT><I>rvUx</I>, <I>rvUy</I>, and <I>rvUz</I>
</DT><DD>New y-axis for the frame.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The default orientation of a frame has a direction vector of [0, 0, 1] and an up vector of [0, 1, 0].
<P>If [<I>rvUx, rvUy, rvUz</I>] is parallel to [<I>rvDx, rvDy, rvDz</I>], the D3DRMERR_BADVALUE error value is returned; otherwise, the [<I>rvUx, rvUy, rvUz</I>] vector passed is projected onto the plane that is perpendicular to [<I>rvDx, rvDy, rvDz</I>].
<P>This method is also used to add an orientation key to a <A HREF="/directx/dxm/help/d3drm/rm0018.htm">Direct3DRMFrameInterpolator</A> object.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetOrientation">IDirect3DRMFrame2::GetOrientation</A>
<H3><HR COLOR="#0000FF"><A NAME="SetPosition">IDirect3DRMFrame2::SetPosition</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the position of a frame relative to the frame of reference. It places the frame a distance of [<I>rvX, rvY, rvZ</I>] from the reference. When a child frame is created within a parent, it is placed at [0, 0, 0] in the parent frame.
<P><B>HRESULT</B> <B>SetPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvX</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvY</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvZ</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpRef</I>
</DT><DD>Address of a variable that represents the Direct3DRMFrame object to be used as the reference.
</DD><DT><I>rvX</I>, <I>rvY</I>, and <I>rvZ</I>
</DT><DD>New position for the frame.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method is also used to add a position key to a <A HREF="/directx/dxm/help/d3drm/rm0018.htm">Direct3DRMFrameInterpolator</A> object.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetPosition">IDirect3DRMFrame2::GetPosition</A>
<H3><HR COLOR="#0000FF"><A NAME="SetQuarternion">IDirect3DRMFrame2::SetQuaternion</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Sets a frame's orientation relative to a reference frame using a unit quaternion. 

<P><B>HRESULT</B> <B>SetQuaternion</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME2</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DRMQUATERNION</B> <I>*quat</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT>lpRef
</DT><DD>Address of a variable that represents the Direct3DRMFrame2 object to be used as the reference.
</DD><DT>quat
</DT><DD>A <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMQUATERNION">D3DRMQUATERNION</A> structure that holds the unit quaternion. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>A quaternion is a four-valued vector that can be used to represent any rotation and that has properties that are useful when interpolating between orientations. A quaternion is a unit quaternion if s**2 + x**2 + y**2 + z**2 = 1.

<P>The function <A HREF="/directx/dxm/help/d3drm/rm0006.htm#D3DRMQuaternionFromR">D3DRMQuaternionFromRotation</A> can be used to generate unit quaternions from arbitrary rotation values.
<P>The <B>SetQuaternion</B> method is supported by FrameInterpolators. See <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#rmobject_IDirect3DRMInterpolator_Int">IDirect3DRMInterpolator Interface</A> for more information about interpolators.
<H3><HR COLOR="#0000FF"><A NAME="SetRotation">IDirect3DRMFrame2::SetRotation</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets a frame rotating by the given angle around the given vector at each call to the <A HREF="/directx/dxm/help/d3drm/rm0009.htm#Tick">IDirect3DRM::Tick</A> or <A HREF="/directx/dxm/help/d3drm/rm0017.htm#Move">IDirect3DRMFrame2::Move</A> method. The direction vector [<I>rvX, rvY, rvZ</I>] is defined in the reference frame.
<P><B>HRESULT</B> <B>SetRotation</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvX</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvY</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvZ</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvTheta</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpRef</I>
</DT><DD>Address of a variable that represents the Direct3DRMFrame object to be used as the reference.
</DD><DT><I>rvX</I>, <I>rvY</I>, and <I>rvZ</I>
</DT><DD>Vector about which rotation occurs.
</DD><DT><I>rvTheta</I>
</DT><DD>Rotation angle, in radians.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The specified rotation changes the matrix with every render tick, unlike the <A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddRotation">IDirect3DRMFrame2::AddRotation</A> method, which changes the objects in the frame only once.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#AddRotation">IDirect3DRMFrame2::AddRotation</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetRotation">IDirect3DRMFrame2::GetRotation</A>
<H3><HR COLOR="#0000FF"><A NAME="SetSceneBackground">IDirect3DRMFrame2::SetSceneBackground</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the background color of a scene.
<P><B>HRESULT</B> <B>SetSceneBackground</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DCOLOR</B> <I>rcColor</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rcColor</I>
</DT><DD>New color for the background.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method is also used to add a background color key to a Direct3DRMFrameInterpolator object.
<H3><HR COLOR="#0000FF"><A NAME="SetSceneBackgroundDepth">IDirect3DRMFrame2::SetSceneBackgroundDepth</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Specifies a background-depth buffer for a scene. 
<P><B>HRESULT</B> <B>SetSceneBackgroundDepth</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECTDRAWSURFACE</B> <I>lpImage</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpImage</I>
</DT><DD>Address of a DirectDraw surface that will store the new background depth for the scene.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The image must have a depth of 16 bits per pixel. If the image and viewport sizes are different, the image is scaled first. For best performance when animating the background-depth buffer, the image should be the same size as the viewport. This enables the depth buffer to be updated directly from the image memory without incurring extra overhead.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetSceneBackgroundDepth">IDirect3DRMFrame2::GetSceneBackgroundDepth</A><H3><HR COLOR="#0000FF"><A NAME="SetSceneBackgroundImage">IDirect3DRMFrame2::SetSceneBackgroundImage</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Specifies a background image for a scene. 
<P><B>HRESULT</B> <B>SetSceneBackgroundImage</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMTEXTURE</B> <I>lpTexture</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpTexture</I>
</DT><DD>Address of a Direct3DRMTexture object that will contain the new background scene.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>If the image is a different size or color depth than the viewport, the image will first be scaled or converted to the correct depth. For best performance when animating the background, the image should be the same size and color depth. This enables the background to be rendered directly from the image memory without incurring any extra overhead.
<H3><HR COLOR="#0000FF"><A NAME="SetSceneBackgroundRGB">IDirect3DRMFrame2::SetSceneBackgroundRGB</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the background color of a scene.
<P><B>HRESULT</B> <B>SetSceneBackgroundRGB</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvRed</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvGreen</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvBlue</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rvRed</I>, <I>rvGreen</I>, and <I>rvBlue</I>
</DT><DD>New color for the background.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method is also used to add a background RGB color key to a Direct3DRMFrameInterpolator object.
<H3><HR COLOR="#0000FF"><A NAME="SetSceneFogColor">IDirect3DRMFrame2::SetSceneFogColor</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the fog color of a scene.
<P><B>HRESULT</B> <B>SetSceneFogColor</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DCOLOR</B> <I>rcColor</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rcColor</I>
</DT><DD>New color for the fog.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method is also used to add a fog color key to a Direct3DRMRFrameInterpolator object.
<H3><HR COLOR="#0000FF"><A NAME="SetSceneFogEnable">IDirect3DRMFrame2::SetSceneFogEnable</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the fog-enable state.
<P><B>HRESULT</B> <B>SetSceneFogEnable</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bEnable</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>bEnable</I>
</DT><DD>New fog-enable state.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="SetSceneFogMode">IDirect3DRMFrame2::SetSceneFogMode</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the fog mode.
<P><B>HRESULT</B> <B>SetSceneFogMode</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMFOGMODE</B> <I>rfMode</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rfMode</I>
</DT><DD>One of the members of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMFOGMODE">D3DRMFOGMODE</A> enumerated type, specifying the new fog mode.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneFogParams">IDirect3DRMFrame2::SetSceneFogParams</A>
<H3><HR COLOR="#0000FF"><A NAME="SetSceneFogParams">IDirect3DRMFrame2::SetSceneFogParams</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the current fog parameters for this scene. 
<P><B>HRESULT</B> <B>SetSceneFogParams</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvStart</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvEnd</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvDensity</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rvStart</I> and <I>rvEnd</I>
</DT><DD>Fog start and end points for linear fog mode. These settings determine the distance from the <A HREF="/directx/dxm/help/d3drm/rm0047.htm#camera">camera</A> at which fog effects first become visible, and the distance at which fog reaches its maximum density.
</DD><DT><I>rvDensity</I>
</DT><DD>Fog density for the exponential fog modes. This value should be in the range 0 through 1.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method is also used to add a fog parameters key to a Direct3DRMRFrameInterpolator object.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMFOGMODE">D3DRMFOGMODE</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetSceneFogMode">IDirect3DRMFrame2::SetSceneFogMode</A>
<H3><HR COLOR="#0000FF"><A NAME="SetSortMode">IDirect3DRMFrame2::SetSortMode</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Sets the sorting mode used to process child frames. You can use this method to change the properties of hidden-surface-removal algorithms.
<P><B>HRESULT</B> <B>SetSortMode</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMSORTMODE</B> <I>d3drmSM</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>d3drmSM</I>
 </DT><DD>One of the members of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMSORTMODE">D3DRMSORTMODE</A> enumerated type, specifying the sorting mode. The default value is D3DRMSORT_FROMPARENT.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetSortMode">IDirect3DRMFrame2::GetSortMode</A>
<H3><HR COLOR="#0000FF"><A NAME="SetTexture">IDirect3DRMFrame2::SetTexture</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the texture of the frame. 
<P><B>HRESULT</B> <B>SetTexture</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMTEXTURE</B> <I>lpD3DRMTexture</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMTexture</I>
</DT><DD>Address of a variable that represents the Direct3DRMTexture object to be used.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The texture is used for meshes in the frame when the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMMATERIALMODE">D3DRMMATERIALMODE</A> enumerated type is D3DRMMATERIAL_FROMFRAME. To disable the frame's texture, use a NULL texture.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetTexture">IDirect3DRMFrame2::GetTexture</A>, <A HREF="/directx/dxm/help/d3drm/rm0017.htm#SetMaterialMode">IDirect3DRMFrame2::SetMaterialMode</A>
<H3><HR COLOR="#0000FF"><A NAME="SetTextureTopology">IDirect3DRMFrame2::SetTextureTopology</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Defines the topological properties of the texture coordinates across objects in the frame. 
<P><B>HRESULT</B> <B>SetTextureTopology</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bWrap_u</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bWrap_v</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>bWrap_u</I> and <I>bWrap_v</I>
</DT><DD>Variables that are set to TRUE to map the texture in the u- and v-directions, respectively.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetTextureTopology">IDirect3DRMFrame2::GetTextureTopology</A>
<H3><HR COLOR="#0000FF"><A NAME="SetVelocity">IDirect3DRMFrame2::SetVelocity</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>

<P>Sets the velocity of the given frame relative to the reference frame. The frame will be moved by the vector [<I>rvX, rvY, rvZ</I>] with respect to the reference frame at each successive call to the <A HREF="/directx/dxm/help/d3drm/rm0009.htm#Tick">IDirect3DRM::Tick</A> or <A HREF="/directx/dxm/help/d3drm/rm0017.htm#Move">IDirect3DRMFrame2::Move</A> method.
<P><B>HRESULT</B> <B>SetVelocity</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvX</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvY</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>rvZ</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>fRotVel</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpRef</I>
</DT><DD>Address of a variable that represents the Direct3DRMFrame object to be used as the reference.
</DD><DT><I>rvX</I>, <I>rvY</I>, and <I>rvZ</I>
</DT><DD>New velocity for the frame.
</DD><DT><I>fRotVel</I>
</DT><DD>Flag specifying whether the rotational velocity of the object is taken into account when setting the linear velocity. If TRUE, the object's rotational velocity is included in the calculation.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetVelocity">IDirect3DRMFrame2::GetVelocity</A>
<H3><HR COLOR="#0000FF"><A NAME="SetZbufferMode">IDirect3DRMFrame2::SetZbufferMode</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>Sets the z-buffer mode; that is, whether z-buffering is enabled or disabled. 
<P>
<P><B>HRESULT</B> <B>SetZbufferMode</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMZBUFFERMODE</B> <I>d3drmZBM</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>d3drmZBM</I>
 </DT><DD>One of the members of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMZBUFFERMODE">D3DRMZBUFFERMODE</A> enumerated type, specifying the z-buffer mode. The default value is D3DRMZBUFFER_FROMPARENT.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#GetZbufferMode">IDirect3DRMFrame2::GetZbufferMode</A>
<H3><HR COLOR="#0000FF"><A NAME="Transform">IDirect3DRMFrame2::Transform</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0017.htm">IDirect3DRMFrame2</A>
<P>
<P>Transforms the vector in the <I>lpd3dVSrc</I> parameter in <A HREF="/directx/dxm/help/d3drm/rm0051.htm#model_coordinates">model coordinates</A> to <A HREF="/directx/dxm/help/d3drm/rm0059.htm#world_coordinates">world coordinates</A>, returning the result in the <I>lpd3dVDst</I> parameter.
<P><B>HRESULT</B> <B>Transform</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVECTOR</B> <I>*lpd3dVDst</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVECTOR</B> <I>*lpd3dVSrc</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpd3dVDst</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DVECTOR">D3DVECTOR</A> structure that will be filled with the result of the transformation operation.
</DD><DT><I>lpd3dVSrc</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DVECTOR">D3DVECTOR</A> structure that is the source of the transformation operation.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0017.htm#InverseTransform">IDirect3DRMFrame2::InverseTransform</A>, <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0001.htm#rmmath_3D_Transformati">3-D Transformations</A>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
