<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Other Types</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="Other Types">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="rmtypes_Other_Types"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/d3drm/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="Direct3D Retained Mode Animated Header --Other Types"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/d3drm/art/HDRd3drm.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="Direct3D Retained Mode Animated Header --Other Types"></TD><TD VALIGN="TOP" WIDTH="383">
<IMG SRC="/directx/dxm/help/d3drm/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft Direct3D Retained Mode SDK"></TD></TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/d3drm/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/d3drm/rm0005.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/d3drm/rm0034.htm">Enumerated Types</A>
<IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/d3drm/rm0036.htm">Return Values</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2><A NAME="dx5_Other_Types_d3drm"></A>Other Types</H2>
<BR CLEAR=ALL>
<P>Microsoft&#174; Direct3D&#174; Retained Mode includes other type definitions, not included in <A HREF="/directx/dxm/help/d3drm/rm0033.htm">structures</A> or <A HREF="/directx/dxm/help/d3drm/rm0034.htm">enumerated types</A>. These are:
<UL><LI><A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMANIMATIONOPTION">D3DRMANIMATIONOPTIONS</A>
<LI><A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMCOLORMODEL">D3DRMCOLORMODEL</A>
<LI><A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMINTERPOLATIONOP">D3DRMINTERPOLATIONOPTIONS</A>
<LI><A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMLOADOPTIONS">D3DRMLOADOPTIONS</A>
<LI><A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMMAPPING">D3DRMMAPPING</A>
<LI><A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMMATRIX4D">D3DRMMATRIX4D</A>
<LI><A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMSAVEOPTIONS">D3DRMSAVEOPTIONS</A>
</UL>
<H3><HR COLOR="#0000FF"><A NAME="D3DRMANIMATIONOPTION">D3DRMANIMATIONOPTIONS</A></H3>
<P>Specifies values used by the <A HREF="/directx/dxm/help/d3drm/rm0011.htm#GetOptions">IDirect3DRMAnimation::GetOptions</A> and <A HREF="/directx/dxm/help/d3drm/rm0011.htm#SetOptions">IDirect3DRMAnimation::SetOptions</A> methods to define how animations are played.
<PRE><FONT FACE="Courier" SIZE="2">typedef DWORD D3DRMANIMATIONOPTIONS;
#define D3DRMANIMATION_CLOSED             0x02L
#define D3DRMANIMATION_LINEARPOSITION     0x04L
#define D3DRMANIMATION_OPEN               0x01L
#define D3DRMANIMATION_POSITION           0x00000020L
#define D3DRMANIMATION_SCALEANDROTATION   0x00000010L
#define D3DRMANIMATION_SPLINEPOSITION     0x08L
</FONT></PRE>
<H5>Parameters</H5>
<DL><DT><B><A NAME="D3DRMANIMATION_CLOSE">D3DRMANIMATION_CLOSED</A></B>
 </DT><DD>Animation plays continually, looping back to the beginning when it reaches the end. In a closed animation, the last key in the animation should be a repeat of the first. This repeated key is used to indicate the time difference between the last and first keys in the looping animation.
</DD><DT><B><A NAME="D3DRMANIMATION_LINEA">D3DRMANIMATION_LINEARPOSITION</A></B>
 </DT><DD>Animation's position is set linearly.
</DD><DT><B><A NAME="D3DRMANIMATION_OPEN">D3DRMANIMATION_OPEN</A></B>
 </DT><DD>Animation plays once and stops.
</DD><DT><B><A NAME="D3DRMANIMATION_POSIT">D3DRMANIMATION_POSITION</A></B>
 </DT><DD>Animation's position matrix should overwrite any transformation matrices that could be set by other methods.
</DD><DT><B><A NAME="D3DRMANIMATION_SCALE">D3DRMANIMATION_SCALEANDROTATION</A></B>
 </DT><DD>Animation's scale and rotation matrix should overwrite any transformation matrices that could be set by other methods.
</DD><DT><B><A NAME="D3DRMANIMATION_SPLIN">D3DRMANIMATION_SPLINEPOSITION</A></B>
 </DT><DD>Animation's position is set using splines.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="D3DRMCOLORMODEL">D3DRMCOLORMODEL</A></H3>
<P>Describes the color model implemented by the device. For more information, see the <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DCOLORMODEL">D3DCOLORMODEL</A> enumerated type.
<PRE><FONT FACE="Courier" SIZE="2">typedef D3DCOLORMODEL D3DRMCOLORMODEL;
</FONT></PRE>
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DCOLORMODEL">D3DCOLORMODEL</A>
<H3><HR COLOR="#0000FF"><A NAME="D3DRMINTERPOLATIONOP">D3DRMINTERPOLATIONOPTIONS</A></H3>
<P>Defines options for the <A HREF="/directx/dxm/help/d3drm/rm0018.htm#Interpolate">IDirect3DRMInterpolator::Interpolate</A> method. These options modify how the object is loaded. 
<PRE><FONT FACE="Courier" SIZE="2">typedef DWORD D3DRMINTERPOLATIONOPTIONS;
#define D3DRMINTERPOLATION_OPEN 0x01L
#define D3DRMINTERPOLATION_CLOSED 0x02L
#define D3DRMINTERPOLATION_NEAREST 0x0100L
#define D3DRMINTERPOLATION_LINEAR 0x04L
#define D3DRMINTERPOLATION_SPLINE 0x08L
#define D3DRMINTERPOLATION_VERTEXCOLOR 0x40L
#define D3DRMINTERPOLATION_SLERPNORMALS 0x80L
</FONT></PRE>
<H5>Parameters</H5>
<DL><DT><B><A NAME="D3DRMINTERPOLATION_O">D3DRMINTERPOLATION_OPEN</A></B>
 </DT><DD>First and last keys of each key chain will fix the interpolated values outside of the index span.
</DD><DT><B><A NAME="D3DRMINTERPOLATION_C">D3DRMINTERPOLATION_CLOSED</A></B>
 </DT><DD>The interpolation is cyclic. The keys effectively repeat infinitely with a period equal to the index span.

 For compatibility with animations, any key with an index equal to the end of the span is ignored.
</DD><DT><B><A NAME="D3DRMINTERPOLATION_N">D3DRMINTERPOLATION_NEAREST</A></B>
 </DT><DD>Nearest key value is used for determining in-between values on each key chain (execution thread). 



</DD><DT><B><A NAME="D3DRMINTERPOLATION_L">D3DRMINTERPOLATION_LINEAR</A></B>
 </DT><DD>Linear interpolation between the two nearest keys is used for determining in-between values on each key chain. 
</DD><DT><B><A NAME="D3DRMINTERPOLATION_S">D3DRMINTERPOLATION_SPLINE</A></B>
 </DT><DD>B-spline blending function on the four nearest keys is used for determining in-between values on each key chain.
 </DD><DT><B><A NAME="D3DRMINTERPOLATION_V">D3DRMINTERPOLATION_VERTEXCOLOR</A></B>
 </DT><DD>Specifies that vertex colors should be interpolated. Only affects the interpolation of <A HREF="/directx/dxm/help/d3drm/rm0021.htm#SetVertices">IDirect3DRMMesh::SetVertices</A>.
</DD><DT><B><A NAME="D3DRMINTERPOLATION_S">D3DRMINTERPOLATION_SLERPNORMALS</A></B>
 </DT><DD>Specifies that vertex normals should be spherically interpolated (not currently implemented). Only affects the interpolation of <A HREF="/directx/dxm/help/d3drm/rm0021.htm#SetVertices">IDirect3DRMMesh::SetVertices</A>.
</DD></DL>
<H3><HR COLOR="#0000FF"><A NAME="D3DRMLOADOPTIONS">D3DRMLOADOPTIONS</A></H3>
<P>Defines options for the <A HREF="/directx/dxm/help/d3drm/rm0009.htm#Load">IDirect3DRM::Load</A>, <A HREF="/directx/dxm/help/d3drm/rm0012.htm#Load">IDirect3DRMAnimationSet::Load</A>, <A HREF="/directx/dxm/help/d3drm/rm0016.htm#Load">IDirect3DRMFrame::Load</A>, <A HREF="/directx/dxm/help/d3drm/rm0022.htm#Load">IDirect3DRMMeshBuilder::Load</A>, and <A HREF="/directx/dxm/help/d3drm/rm0025.htm#Load">IDirect3DRMProgressiveMesh::Load</A> methods. These options modify how the object is loaded. 
<PRE><FONT FACE="Courier" SIZE="2">typedef DWORD D3DRMLOADOPTIONS;
#define D3DRMLOAD_FROMFILE             0x00L
#define D3DRMLOAD_FROMRESOURCE         0x01L
#define D3DRMLOAD_FROMMEMORY           0x02L
#define D3DRMLOAD_FROMURL              0x08L
#define D3DRMLOAD_BYNAME               0x10L
#define D3DRMLOAD_BYPOSITION           0x20L
#define D3DRMLOAD_BYGUID               0x30L
#define D3DRMLOAD_FIRST                0x40L
#define D3DRMLOAD_INSTANCEBYREFERENCE  0x100L
#define D3DRMLOAD_INSTANCEBYCOPYING    0x200L
#define D3DRMLOAD_ASYNCHRONOUS         0x400L
</FONT></PRE>
<H5>Parameters</H5>
<DL><DT><B>Source flags</B>
</DT><DT><B><A NAME="D3DRMLOAD_FROMFILE">D3DRMLOAD_FROMFILE</A></B>
 </DT><DD>Load from a file. This is the default setting.
</DD><DT><B><A NAME="D3DRMLOAD_FROMRESOUR">D3DRMLOAD_FROMRESOURCE</A></B>
 </DT><DD>Load from a resource. If this flag is specified, the <I>lpvObjSource</I> parameter of the calling <B>Load</B> method must point to a <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMLOADRESOURCE">D3DRMLOADRESOURCE</A> structure.
</DD><DT><B><A NAME="D3DRMLOAD_FROMMEMORY">D3DRMLOAD_FROMMEMORY</A></B>
 </DT><DD>Load from memory. If this flag is specified, the <I>lpvObjSource</I> parameter of the calling <B>Load</B> method must point to a <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMLOADMEMORY">D3DRMLOADMEMORY</A> structure.
</DD><DT><B><A NAME="D3DRMLOAD_FROMURL">D3DRMLOAD_FROMURL</A></B>
 </DT><DD>Load from an URL. 

</DD><DD></DD><DT><B>Identifier flags</B>
</DT><DT><B><A NAME="D3DRMLOAD_BYNAME">D3DRMLOAD_BYNAME</A></B>
 </DT><DD>Load any object by using a specified name. 
</DD><DT><B><A NAME="D3DRMLOAD_BYPOSITION">D3DRMLOAD_BYPOSITION</A></B>
 </DT><DD>Load a stand-alone object based on a given zero-based position (that is, the <I>n</I>th object in the file). Stand-alone objects can contain other objects, but are not contained by any other objects.
</DD><DT><B><A NAME="D3DRMLOAD_BYGUID">D3DRMLOAD_BYGUID</A></B>
 </DT><DD>Load any object by using a specified globally unique identifier (GUID).
</DD><DT><B><A NAME="D3DRMLOAD_FIRST">D3DRMLOAD_FIRST</A></B>
 </DT><DD>The default setting. Load the first stand-alone object of the given type (for example, a mesh if the application uses <A HREF="/directx/dxm/help/d3drm/rm0022.htm#Load">IDirect3DRMMeshBuilder::Load</A>). Stand-alone objects can contain other objects, but are not contained by any other objects.
</DD><DD></DD><DT><B>Instance flags</B>
</DT><DT><B><A NAME="D3DRMLOAD_INSTANCEBY">D3DRMLOAD_INSTANCEBYREFERENCE</A></B>
 </DT><DD>Check whether an object already exists with the same name as specified and, if so, use an instance of that object instead of creating a new one.
</DD><DT><B><A NAME="D3DRMLOAD_INSTANCEBY">D3DRMLOAD_INSTANCEBYCOPYING</A></B>
 </DT><DD>Check whether an object already exists with the same name as specified and, if so, copy that object.
</DD><DT><B>Source flags</B>
</DT><DT><B><A NAME="D3DRMLOAD_ASYNCHRONO">D3DRMLOAD_ASYNCHRONOUS</A></B>
 </DT><DD>The <B>Load</B> call will return immediately. It is up to the application to use events to find out how the load is progressing. By default, loading is done synchronously, and the <B>Load</B> call will not return until all data has been loaded or an error occurs. 
</DD></DL>
<H5>Remarks</H5>
<P>Each of the <B>Load</B> methods uses an <I>lpvObjSource</I> parameter to specify the source of the object and an <I>lpvObjID</I> parameter to identify the object. The system interprets the contents of the <I>lpvObjSource</I> parameter based on the choice of source flags, and it interprets the contents of the <I>lpvObjID</I> parameter based on the choice of identifier flags. 
<P>The instance flags do not change the interpretation of any of the parameters. By using the D3DRMLOAD_INSTANCEBYREFERENCE flag, it is possible for an application to load the same file twice without creating any new objects. If an object does not have a name, setting the D3DRMLOAD_INSTANCEBYREFERENCE flag has the same effect as setting the D3DRMLOAD_INSTANCEBYCOPYING flag&#151;the loader creates each unnamed object as a new one, even if some of the objects are identical. 
<H3><HR COLOR="#0000FF"><A NAME="D3DRMMAPPING">D3DRMMAPPING</A></H3>
<P>
<P>Specifies values used by the <A HREF="/directx/dxm/help/d3drm/rm0021.htm#GetGroupMapping">IDirect3DRMMesh::GetGroupMapping</A> and <A HREF="/directx/dxm/help/d3drm/rm0021.htm#SetGroupMapping">IDirect3DRMMesh::SetGroupMapping</A> methods to define how textures are mapped to a group.
<PRE><FONT FACE="Courier" SIZE="2">typedef DWORD D3DRMMAPPING, D3DRMMAPPINGFLAG;
static const D3DRMMAPPINGFLAG D3DRMMAP_WRAPU = 1;
static const D3DRMMAPPINGFLAG D3DRMMAP_WRAPV = 2;
static const D3DRMMAPPINGFLAG D3DRMMAP_PERSPCORRECT = 4;
</FONT></PRE>
<H5>Parameters</H5>
<DL><DT><B><A NAME="D3DRMMAPPINGFLAG">D3DRMMAPPINGFLAG</A></B>
 </DT><DD>Type equivalent to <B>D3DRMMAPPING</B>.
</DD><DT><B><A NAME="D3DRMMAP_WRAPU">D3DRMMAP_WRAPU</A></B>
 </DT><DD>Texture wraps in the u-direction.
</DD><DT><B><A NAME="D3DRMMAP_WRAPV">D3DRMMAP_WRAPV</A></B>
 </DT><DD>Texture wraps in the v-direction.
</DD><DT><B><A NAME="D3DRMMAP_PERSPCORREC">D3DRMMAP_PERSPCORRECT</A></B>
 </DT><DD>Texture wrapping is perspective-corrected.

<P>
</DD></DL>
<H5>Remarks</H5>
<P>The D3DRMMAP_WRAPU and D3DRMMAP_WRAPV flags determine how the rasterizer interprets texture coordinates. The rasterizer always interpolates the shortest distance between texture coordinates; that is, a line. The path taken by this line, and the valid values for the u- and v-coordinates, varies with the use of the wrapping flags. If either or both flags are set, the line can wrap around the texture edge in the u- or v- direction, as if the texture had a cylindrical or toroidal topology. For more information, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#rmobject_IDirect3DRMWrap_Int">IDirect3DRMWrap Interface</A>.
<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#rmobject_IDirect3DRMWrap_Int">IDirect3DRMWrap Interface</A>, <A HREF="/directx/dxm/help/d3drm/rm0021.htm#GetGroupMapping">IDirect3DRMMesh::GetGroupMapping</A>, <A HREF="/directx/dxm/help/d3drm/rm0021.htm#SetGroupMapping">IDirect3DRMMesh::SetGroupMapping</A>
<H3><HR COLOR="#0000FF"><A NAME="D3DRMMATRIX4D">D3DRMMATRIX4D</A></H3>
<P>Expresses a transformation as an array. The organization of the matrix entries is D3DRMMATRIX4D[<I>row</I>][<I>column</I>].
<PRE><FONT FACE="Courier" SIZE="2">typedef D3DVALUE D3DRMMATRIX4D[4][4];
</FONT></PRE>
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0016.htm#AddTransform">IDirect3DRMFrame::AddTransform</A>, <A HREF="/directx/dxm/help/d3drm/rm0016.htm#GetTransform">IDirect3DRMFrame::GetTransform</A>
<H3><HR COLOR="#0000FF"><A NAME="D3DRMSAVEOPTIONS">D3DRMSAVEOPTIONS</A></H3>
<P>Defines options for the <A HREF="/directx/dxm/help/d3drm/rm0022.htm#Save">IDirect3DRMMeshBuilder::Save</A> method.
<PRE><FONT FACE="Courier" SIZE="2">typedef DWORD D3DRMSAVEOPTIONS;
#define D3DRMXOFSAVE_NORMALS 1
#define D3DRMXOFSAVE_TEXTURECOORDINATES 2
#define D3DRMXOFSAVE_MATERIALS 4
#define D3DRMXOFSAVE_TEXTURENAMES 8
#define D3DRMXOFSAVE_ALL 15
#define D3DRMXOFSAVE_TEMPLATES 16 
#define D3DRMSAVE_TEXTURETOPOLOGY 32
</FONT></PRE>
<H5>Parameters</H5>
<DL><DT><B><A NAME="D3DRMXOFSAVE_NORMALS">D3DRMXOFSAVE_NORMALS</A></B>
 </DT><DD>Save <A HREF="/directx/dxm/help/d3drm/rm0052.htm#normal_vector">normal vector</A>s in addition to the basic geometry.
</DD><DT><B><A NAME="D3DRMXOFSAVE_TEXTURE">D3DRMXOFSAVE_TEXTURECOORDINATES</A></B>
 </DT><DD>Save texture coordinates in addition to the basic geometry.
</DD><DT><B><A NAME="D3DRMXOFSAVE_MATERIA">D3DRMXOFSAVE_MATERIALS</A></B>
 </DT><DD>Save materials in addition to the basic geometry.
</DD><DT><B><A NAME="D3DRMXOFSAVE_TEXTURE">D3DRMXOFSAVE_TEXTURENAMES</A></B>
 </DT><DD>Save texture names in addition to the basic geometry.
</DD><DT><B><A NAME="D3DRMXOFSAVE_ALL">D3DRMXOFSAVE_ALL</A></B>
 </DT><DD>Save normal vectors, texture coordinates, materials, and texture names in addition to the basic geometry.
</DD><DT><B><A NAME="D3DRMXOFSAVE_TEMPLAT">D3DRMXOFSAVE_TEMPLATES</A></B>
 </DT><DD>Save templates with the file. By default, templates are not saved.
</DD><DT><B><A NAME="D3DRMSAVE_TEXTURETOP">D3DRMSAVE_TEXTURETOPOLOGY</A></B>
</DT><DD>Save the mesh's face wrap values (set by <A HREF="/directx/dxm/help/d3drm/rm0022.htm#SetTextureTopology">IDirect3DRMMeshBuilder::SetTextureTopology</A> or <A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetTextureTopology">IDirect3DRMFace::SetTextureTopology</A>). This flag is not included when you pass D3DRMXOFSAVE_ALL to the <B>Save</B> method. You should pass D3DRMSAVE_TEXTURETOPOLOGY|D3DRMXOFSAVE_ALL if you want to save everything. You only need to pass this flag when you have called <B>IDirect3DRMMeshBuilder::SetTextureTopology</B> or <B>IDirect3DRMFace::SetTextureTopology</B> and want to preserve the values you set.


</DD></DL>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
