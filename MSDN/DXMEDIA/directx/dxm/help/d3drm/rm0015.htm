<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirect3DRMFace</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IDirect3DRMFace">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="IDirect3DRMFace"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/d3drm/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="Direct3D Retained Mode Animated Header --IDirect3DRMFace"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/d3drm/art/HDRd3drm.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="Direct3D Retained Mode Animated Header --IDirect3DRMFace"></TD><TD VALIGN="TOP" WIDTH="383">
<IMG SRC="/directx/dxm/help/d3drm/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft Direct3D Retained Mode SDK"></TD></TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/d3drm/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/d3drm/rm0005.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/d3drm/rm0014.htm">IDirect3DRMDevice2</A>
<IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/d3drm/rm0016.htm">IDirect3DRMFrame</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2><A NAME="dx5_IDirect3DRMFace_d3drm"></A>IDirect3DRMFace</H2>
<BR CLEAR=ALL>
<P>Applications use the methods of the <B>IDirect3DRMFace</B> interface to interact with a single polygon in a mesh. This section is a reference to the methods of this interface. For a conceptual overview, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#rmobject_IDirect3DRMFace_Int">IDirect3DRMFace and IDirect3DRMFaceArray Interfaces</A>.
<P>The methods of the <B>IDirect3DRMFace</B> interface can be organized into the following groups:
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Color</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetColor">GetColor</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetColor">SetColor</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetColorRGB">SetColorRGB</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Materials</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetMaterial">GetMaterial</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetMaterial">SetMaterial</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Textures</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetTexture">GetTexture</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetTextureCoordinateIndex">GetTextureCoordinateIndex</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetTextureCoordinates">GetTextureCoordinates</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetTextureTopology">GetTextureTopology</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetTexture">SetTexture</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetTextureCoordinates">SetTextureCoordinates</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetTextureTopology">SetTextureTopology</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Vertices and normals</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#AddVertex">AddVertex</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#AddVertexAndNormalIndexed">AddVertexAndNormalIndexed</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetNormal">GetNormal</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetVertex">GetVertex</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetVertexCount">GetVertexCount</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetVertexIndex">GetVertexIndex</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetVertices">GetVertices</A>
</FONT></TD></TR></TABLE>
<P>The <B>IDirect3DRMFace</B> interface, like all Component Object Model (COM) interfaces, inherits the <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0037.htm#_dx5_IUnknown_Interface_dxintro">IUnknown</A> interface methods. The <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0037.htm#_dx5_IUnknown_Interface_dxintro">IUnknown</A> interface supports the following three methods:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#IUnknown__AddRef">AddRef</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#IUnknown__QueryInter">QueryInterface</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#IUnknown__Release">Release</A>
</FONT></TD></TR></TABLE>
<P>In addition, the <B>IDirect3DRMFace</B> interface inherits the following methods from the <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0024.htm">IDirect3DRMObject</A> interface:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#AddDestroyCallback">AddDestroyCallback</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#Clone">Clone</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#DeleteDestroyCallback">DeleteDestroyCallback</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#GetAppData">GetAppData</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#GetClassName">GetClassName</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#GetName">GetName</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#SetAppData">SetAppData</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0024.htm#SetName">SetName</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR></TABLE>
<P>The Direct3DRMFace object is obtained by using the <A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateFace">IDirect3DRM::CreateFace</A> method.

<H3><HR COLOR="#0000FF"><A NAME="AddVertex">IDirect3DRMFace::AddVertex</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Adds a vertex to a Direct3DRMFace object.
<P><B>HRESULT</B> <B>AddVertex</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>x</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>y</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>z</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>x, y,</I> and <I>z</I>
</DT><DD>The x, y, and z components of the new vertex position.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="AddVertexAndNormalIndexed">IDirect3DRMFace::AddVertexAndNormalIndexed</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Adds a vertex and a normal to a Direct3DRMFace object, using an index for the vertex and an index for the normal in the containing mesh builder. The face, vertex, and normal must already be part of a Direct3DRMMeshBuilder object.
<P><B>HRESULT</B> <B>AddVertexAndNormalIndexed</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>vertex</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>normal</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>vertex</I> and <I>normal</I>
</DT><DD>Indexes of the vertex and normal to add.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetColor">IDirect3DRMFace::GetColor</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the color of a Direct3DRMFace object.
<P><B>D3DCOLOR</B> <B>GetColor</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the color.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetColor">IDirect3DRMFace::SetColor</A>
<H3><HR COLOR="#0000FF"><A NAME="GetMaterial">IDirect3DRMFace::GetMaterial</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the material of a Direct3DRMFace object.
<P><B>HRESULT</B> <B>GetMaterial</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMMATERIAL*</B> <I>lplpMaterial</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpMaterial</I>
</DT><DD>Address of the pointer to the Direct3DRMMaterial object applied to the face.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetMaterial">IDirect3DRMFace::SetMaterial</A> 
<H3><HR COLOR="#0000FF"><A NAME="GetNormal">IDirect3DRMFace::GetNormal</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the <A HREF="/directx/dxm/help/d3drm/rm0052.htm#normal_vector">normal vector</A> of a Direct3DRMFace object.
<P><B>HRESULT</B> <B>GetNormal</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVECTOR</B> <I>*lpNormal</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpNormal</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DVECTOR">D3DVECTOR</A> structure that will be filled with the normal vector of the face.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetTexture">IDirect3DRMFace::GetTexture</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the Direct3DRMTexture object applied to a Direct3DRMFace object.
<P><B>HRESULT</B> <B>GetTexture</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMTEXTURE*</B> <I>lplpTexture</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpTexture</I>
</DT><DD>Address of a variable that will be filled with a pointer to the texture applied to the face.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetTexture">IDirect3DRMFace::SetTexture</A>
<H3><HR COLOR="#0000FF"><A NAME="GetTextureCoordinateIndex">IDirect3DRMFace::GetTextureCoordinateIndex</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the index of the vertex for texture coordinates in the face's mesh. You pass in the face-relative vertex index in the <I>which</I> parameter, and this method returns the corresponding mesh-relative vertex index.



<P><B>int</B> <B>GetTextureCoordinateIndex</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>which</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>which</I>
</DT><DD>Index within the face of the vertex whose coorresponding mesh vertex index is being retrieved.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the face's mesh-relative vertex index.

<H3><HR COLOR="#0000FF"><A NAME="GetTextureCoordinates">IDirect3DRMFace::GetTextureCoordinates</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the texture coordinates of a vertex in a Direct3DRMFace object.
<P><B>HRESULT</B> <B>GetTextureCoordinates</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>index</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>*lpU</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>*lpV</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>index</I>
</DT><DD>Index of the vertex.
</DD><DT><I>lpU</I> and <I>lpV</I>
</DT><DD>Addresses of variables that are filled with the texture coordinates of the vertex.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetTextureTopology">IDirect3DRMFace::GetTextureTopology</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the texture topology of a Direct3DRMFace object.
<P><B>HRESULT</B> <B>GetTextureTopology</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>*lpU</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>*lpV</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpU</I> and <I>lpV</I>
</DT><DD>Addresses of variables that are set or cleared, depending on how the cylindrical wrapping flags are set for the face. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0015.htm#SetTextureTopology">IDirect3DRMFace::SetTextureTopology</A> 
<H3><HR COLOR="#0000FF"><A NAME="GetVertex">IDirect3DRMFace::GetVertex</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the position and normal of a vertex in a Direct3DRMFace object.
<P><B>HRESULT</B> <B>GetVertex</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>index</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVECTOR</B> <I>*lpPosition</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVECTOR</B> <I>*lpNormal</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>index</I>
</DT><DD>Index of the vertex.
</DD><DT><I>lpPosition</I> and <I>lpNormal</I>
</DT><DD>Addresses of <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DVECTOR">D3DVECTOR</A> structures that will be filled with the position and normal of the vertex, respectively.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetVertexCount">IDirect3DRMFace::GetVertexCount</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the number of vertices in a Direct3DRMFace object.
<P><B>int</B> <B>GetVertexCount</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the number of vertices.

<H3><HR COLOR="#0000FF"><A NAME="GetVertexIndex">IDirect3DRMFace::GetVertexIndex</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the index of the vertex in the face's mesh. You pass in the face-relative vertex index in the <I>which</I> parameter, and this method returns the corresponding mesh-relative vertex index.

<P><B>int</B> <B>GetVertexIndex</B> <B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>which</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>which</I>
</DT><DD>Index within the face of the vertex whose coorresponding mesh vertex index is being retrieved.
</DD><DD></DD></DL>
<H5>Return Values</H5>
<P>Returns the mesh-relative vertex index.

<H3><HR COLOR="#0000FF"><A NAME="GetVertices">IDirect3DRMFace::GetVertices</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Retrieves the position and <A HREF="/directx/dxm/help/d3drm/rm0052.htm#normal_vector">normal vector</A> of each vertex in a Direct3DRMFace object.
<P><B>HRESULT</B> <B>GetVertices</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*lpdwVertexCount</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVECTOR</B> <I>*lpPosition</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVECTOR</B> <I>*lpNormal</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpdwVertexCount</I>
</DT><DD>Address of a variable that is filled with the number of vertices. This parameter cannot be NULL.
</DD><DT><I>lpPosition</I> and <I>lpNormal</I>
</DT><DD>Arrays of <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DVECTOR">D3DVECTOR</A> structures that will be filled with the positions and normal vectors of the vertices, respectively. If both of these parameters are NULL, the method will fill the <I>lpdwVertexCount</I> parameter with the number of vertices that will be retrieved.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="SetColor">IDirect3DRMFace::SetColor</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Sets a Direct3DRMFace object to a given color.
<P><B>HRESULT</B> <B>SetColor</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DCOLOR</B> <I>color</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>color</I>
</DT><DD>Color to set.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetColor">IDirect3DRMFace::GetColor</A> 
<H3><HR COLOR="#0000FF"><A NAME="SetColorRGB">IDirect3DRMFace::SetColorRGB</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Sets a Direct3DRMFace object to a given color.
<P><B>HRESULT</B> <B>SetColorRGB</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>red</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>green</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>blue</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>red, green,</I> and <I>blue</I>
</DT><DD>The red, green, and blue components of the color.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="SetMaterial">IDirect3DRMFace::SetMaterial</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Sets the material of a Direct3DRMFace object.
<P><B>HRESULT</B> <B>SetMaterial</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMMATERIAL</B> <I>lpD3DRMMaterial</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMMaterial</I>
</DT><DD>Address of the material.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetMaterial">IDirect3DRMFace::GetMaterial</A> 
<H3><HR COLOR="#0000FF"><A NAME="SetTexture">IDirect3DRMFace::SetTexture</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Sets the texture of a Direct3DRMFace object.
<P><B>HRESULT</B> <B>SetTexture</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMTEXTURE</B> <I>lpD3DRMTexture</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMTexture</I>
</DT><DD>Address of the texture.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetTexture">IDirect3DRMFace::GetTexture</A> 
<H3><HR COLOR="#0000FF"><A NAME="SetTextureCoordinates">IDirect3DRMFace::SetTextureCoordinates</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>Sets the texture coordinates of a specified vertex in a Direct3DRMFace object.
<P><B>HRESULT</B> <B>SetTextureCoordinates</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>vertex</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>u</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>v</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>vertex</I>
</DT><DD>Index of the vertex to be set. For example, if the face were a triangle, the possible vertex indices would be 0, 1, and 2.
</DD><DT><I>u</I> and <I>v</I>
</DT><DD>Texture coordinates to assign to the specified vertex. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="SetTextureTopology">IDirect3DRMFace::SetTextureTopology</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A>
<P>

<P>Sets the texture topology of a Direct3DRMFace object.
<P><B>HRESULT</B> <B>SetTextureTopology</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>cylU</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>cylV</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>cylU</I> and <I>cylV</I>
</DT><DD>Specify whether the texture has a cylindrical topology in the u and v dimensions.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0015.htm#GetTextureTopology">IDirect3DRMFace::GetTextureTopology</A> 
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
