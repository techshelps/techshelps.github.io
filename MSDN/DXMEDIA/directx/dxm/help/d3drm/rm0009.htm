<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirect3DRM</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<META NAME="MS-HKWD" CONTENT="IDirect3DRM">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<A NAME="pagetop"></A><A NAME="IDirect3DRM"></A>

<OBJECT ID="DAControl" 
  STYLE="position:absolute; left:0; top:11;width:702;height:90"
  CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D">
</OBJECT>
<!--STYLE="width:702;height:110"-->
<SCRIPT LANGUAGE="JScript">
<!--
  // The DirectAnimation library
  m = DAControl.PixelLibrary;

  /* -- Insert your code here --*/ 

  mediaBase = "art\\";
  glowBase = m.importImage(mediaBase + "glow.gif");
  xImage = m.importImage(mediaBase + "newtransx.gif");
  xImage = xImage.Transform(m.Translate2(-303,0));
  //header1 = m.importImage(mediaBase + "header1.gif");
  //header1 = header1.Transform(m.Translate2(-301,0));

  //header2 = m.importImage(mediaBase + "hdrd3drm.gif");
  //header2 = header2.Transform(m.Translate2(-143,0));

  //header3 = m.importImage(mediaBase + "header3.gif");
  //header3 = header3.Transform(m.Translate2(157,-18));

  //background = m.Overlay(header1, m.Overlay( header2, header3));

  glowPath1 = m.Polyline( new Array( 295,26, 305,26, 305,50, 310,57, 519,57, 
    536,40, 536,17, 675,17, 675,23 ) );

  glowPath2 = m.PolyLine( new Array( 44,41, 44,25, 52,16, 84,16, 106,16 ) );

  glowPath3 = m.PolyLine( new Array( 57,55, 69,55, 78,65, 92,65, 99,58,
    99,82, 95,85, 95,93, 132,93, 132,78,
    303,78, 315,66, 549,66, 549,17, 675,17,
    675,23 ) );

  glowPath4 = m.PolyLine( new Array( 29,55, 19,55, 19,31, 38,30, 38,21,
    46,16, 106,16 ) );

  glowPath5 = m.PolyLine( new Array( 45,62, 45,81, 37,81, 41,85, 46,85,   
  51,91, 68,91, 66,81, 90,81, 90,65, 94,65, 105,47 ) );

  glow1 = glowBase.Transform( moveGlow( glowPath1, 5 ) );
  glow2 = glowBase.Transform( moveGlow( glowPath2, 2 ) );
  glow3 = glowBase.Transform( moveGlow( glowPath3, 8 ) );
  glow4 = glowBase.Transform( moveGlow( glowPath4, 2.5 ) );
  glow5 = glowBase.Transform( moveGlow( glowPath5, 2 ) );

  finalImg = m.Overlay(xImage, m.Overlay( glow5, m.Overlay( glow4, 
    m.Overlay( glow3, m.Overlay( glow2, glow1)))));


  // set the model, an image, as the model to be displayed
  DAControl.Image = finalImg;//m.Overlay(finalImg, background);
  // set the background in case of a non-windowless browser (like IE3)
  DAControl.BackgroundImage = m.SolidColorImage(m.Blue);     
     
  // start the animation       
  DAControl.Start()


  function moveGlow(path, speed)  {
    imDimX = 702;
    imDimY = 120;

    coordsXf = m.Translate2(-imDimX/2, -imDimY/2);
    path = path.Transform(coordsXf);
    return xf = m.FollowPath(path, speed).Repeat(1);
  }

//-->
</SCRIPT>
<TABLE BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="*">
<TR>
<TD ROWSPAN="3" VALIGN="TOP" WIDTH="*">
<IMG SRC="/directx/dxm/help/d3drm/art/header1.gif" WIDTH="107" HEIGHT="110" BORDER=0 ALT="Direct3D Retained Mode Animated Header --IDirect3DRM"></TD>
<TD ROWSPAN="2" VALIGN="TOP" WIDTH="217">
<IMG SRC="/directx/dxm/help/d3drm/art/HDRd3drm.gif" WIDTH="210" HEIGHT="110" BORDER=0 ALT="Direct3D Retained Mode Animated Header --IDirect3DRM"></TD><TD VALIGN="TOP" WIDTH="383">
<IMG SRC="/directx/dxm/help/d3drm/art/header3.gif" WIDTH="383" HEIGHT="95" BORDER=0 ALT="*">
</TD>
<TD VALIGN="TOP" WIDTH="100%">
<IMG SRC="/directx/dxm/help/d3drm/art/spacer1.gif" WIDTH="100%" HEIGHT="94" BORDER=0 ALT="Microsoft Direct3D Retained Mode SDK"></TD></TR><TR><TD VALIGN="TOP"><PRE><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/d3drm/index.htm">Index</A>  <IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black;font-weight:bold" HREF="/directx/dxm/help/d3drm/rm0005.htm">Topic Contents</A>
</FONT></PRE></TD></TR>
<TR><TD COLSPAN="2" VALIGN="TOP"><PRE><FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="/directx/dxm/help/d3drm/rm0008.htm">IDirect3DRM Array Interfaces</A>
<IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="/directx/dxm/help/d3drm/rm0010.htm">IDirect3DRM2</A>
</FONT></PRE></TD></TR></TABLE><BR CLEAR=ALL>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><BLOCKQUOTE STYLE="margin:15pt">
<H2><A NAME="dx5_IDirect3DRM_d3drm"></A>IDirect3DRM</H2>
<BR CLEAR=ALL>
<P>Applications use the methods of the <B>IDirect3DRM</B> interface to create Microsoft&#174; Direct3D&#174; Retained Mode objects and work with system-level variables. This section is a reference to the methods of this interface. For a conceptual overview, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0003.htm#rmobject_IDirect3DRM_Int">IDirect3DRM and IDirect3DRM2 Interfaces</A>.
<P>The methods of the <B>IDirect3DRM</B> interface can be organized into the following groups:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Animation</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateAnimation">CreateAnimation</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateAnimationSet">CreateAnimationSet</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Devices</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateDevice">CreateDevice</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateDeviceFromClipper">CreateDeviceFromClipper</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateDeviceFromD3D">CreateDeviceFromD3D</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateDeviceFromSurface">CreateDeviceFromSurface</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#GetDevices">GetDevices</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Enumeration</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#EnumerateObjects">EnumerateObjects</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Faces</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateFace">CreateFace</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Frames</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateFrame">CreateFrame</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Lights</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateLight">CreateLight</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateLightRGB">CreateLightRGB</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Materials</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateMaterial">CreateMaterial</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meshes</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateMesh">CreateMesh</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateMeshBuilder">CreateMeshBuilder</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Miscellaneous</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateObject">CreateObject</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateUserVisual">CreateUserVisual</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#GetNamedObject">GetNamedObject</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#Load">Load</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#Tick">Tick</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Search paths</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#AddSearchPath">AddSearchPath</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#GetSearchPath">GetSearchPath</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#SetSearchPath">SetSearchPath</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Shadows</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateShadow">CreateShadow</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Textures</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateTexture">CreateTexture</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateTextureFromSurface">CreateTextureFromSurface</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#LoadTexture">LoadTexture</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#LoadTextureFromResource">LoadTextureFromResource</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#SetDefaultTextureColors">SetDefaultTextureColors</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#SetDefaultTextureShades">SetDefaultTextureShades</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Viewports</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateViewport">CreateViewport</A>
 </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Wraps</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateWrap">CreateWrap</A>
</FONT></TD></TR></TABLE>
<P>The <B>IDirect3DRM</B> interface, like all Component Object Model (COM) interfaces, inherits the <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0037.htm#_dx5_IUnknown_Interface_dxintro">IUnknown</A> interface methods. The <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0037.htm#_dx5_IUnknown_Interface_dxintro">IUnknown</A> interface supports the following three methods:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#IUnknown__AddRef">AddRef</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#IUnknown__QueryInter">QueryInterface</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#IUnknown__Release">Release</A>
</FONT></TD></TR></TABLE>
<P>The <B>IDirect3DRM</B> COM interface is created by using the <A HREF="/directx/dxm/help/d3drm/rm0006.htm#Direct3DRMCreate">Direct3DRMCreate</A> function.

<H3><HR COLOR="#0000FF"><A NAME="AddSearchPath">IDirect3DRM::AddSearchPath</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Adds a list of directories to the end of the current file search path. 
<P><B>HRESULT</B> <B>AddSearchPath</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCSTR</B> <I>lpPath</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpPath</I>
</DT><DD>Address of a null-terminated string, specifying the path to add to the current search path.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>For Microsoft&#174; Windows&#174;, the path should be a list of directories separated by semicolons (;). 
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0009.htm#SetSearchPath">IDirect3DRM::SetSearchPath</A>
<H3><HR COLOR="#0000FF"><A NAME="CreateAnimation">IDirect3DRM::CreateAnimation</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates an empty Direct3DRMAnimation object.
<P><B>HRESULT</B> <B>CreateAnimation</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMANIMATION</B> <B>*</B> <I>lplpD3DRMAnimation</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpD3DRMAnimation</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0011.htm">IDirect3DRMAnimation</A> interface if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Immediate Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateAnimationSet">IDirect3DRM::CreateAnimationSet</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates an empty Direct3DRMAnimationSet object.
<P><B>HRESULT</B> <B>CreateAnimationSet</B> <B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMANIMATIONSET</B> <B>*</B> <I>lplpD3DRMAnimationSet</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpD3DRMAnimationSet</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0012.htm">IDirect3DRMAnimationSet</A> interface if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateDevice">IDirect3DRM::CreateDevice</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>Not implemented on the Windows platform.
<P><B>HRESULT</B> <B>CreateDevice</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwWidth</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwHeight</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMDEVICE*</B> <I>lplpD3DRMDevice</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H3><HR COLOR="#0000FF"><A NAME="CreateDeviceFromClipper">IDirect3DRM::CreateDeviceFromClipper</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>Creates a Direct3D Retained Mode Windows device by using a specified DirectDrawClipper object.
<P><B>HRESULT</B> <B>CreateDeviceFromClipper</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECTDRAWCLIPPER</B> <I>lpDDClipper</I><B>,</B><BR>&nbsp;&nbsp;<B>LPGUID</B> <I>lpGUID</I><B>,</B><BR>&nbsp;&nbsp;<B>int</B> <I>width</I><B>,</B><BR>&nbsp;&nbsp;<B>int</B> <I>height</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMDEVICE</B> <B>*</B> <I>lplpD3DRMDevice</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpDDClipper</I>
 </DT><DD>Address of a DirectDrawClipper object.
</DD><DT><I>lpGUID</I>
 </DT><DD>Address of a globally unique identifier (GUID). This parameter can be NULL.
</DD><DT><I>width</I> and <I>height</I>
 </DT><DD>Width and height of the device to be created.
</DD><DT><I>lplpD3DRMDevice</I>
 </DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0013.htm">IDirect3DRMDevice</A> interface if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>If the <I>lpGUID</I> parameter is NULL, the system searches for a device with a default set of device capabilities. This is the recommended way to create a Retained Mode device because it always works, even if the user installs new hardware. 
<P>The system describes the default settings by using the following flags from the <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPRIMCAPS">D3DPRIMCAPS</A> structure in internal device-enumeration calls:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPCMPCAPS_LESSEQUA">D3DPCMPCAPS_LESSEQUAL</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPMISCCAPS_CULLCCW">D3DPMISCCAPS_CULLCCW</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPRASTERCAPS_FOGVE">D3DPRASTERCAPS_FOGVERTEX</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPSHADECAPS_ALPHAF">D3DPSHADECAPS_ALPHAFLATSTIPPLED</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPTADDRESSCAPS_WRA">D3DPTADDRESSCAPS_WRAP</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPTBLENDCAPS_COPY">D3DPTBLENDCAPS_COPY</A> | <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPTBLENDCAPS_MODUL">D3DPTBLENDCAPS_MODULATE</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPTEXTURECAPS_PERS">D3DPTEXTURECAPS_PERSPECTIVE</A> | <A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPTEXTURECAPS_TRAN">D3DPTEXTURECAPS_TRANSPARENCY</A>
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="/directx/dxm/help/d3drm/rm0037.htm#D3DPTFILTERCAPS_NEAR">D3DPTFILTERCAPS_NEAREST</A>
</FONT></TD></TR></TABLE>
<P>If a hardware device is not found, the monochromatic (ramp) software driver is loaded. An application should enumerate devices instead of specifying NULL for <I>lpGUID</I> if it has special needs that are not met by this list of default settings.
<H3><HR COLOR="#0000FF"><A NAME="CreateDeviceFromD3D">IDirect3DRM::CreateDeviceFromD3D</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>Creates a Direct3D Retained Mode Windows device by using specified Direct3D objects.
<P><B>HRESULT</B> <B>CreateDeviceFromD3D</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3D</B> <I>lpD3D</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DDEVICE</B> <I>lpD3DDev</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMDEVICE</B> <B>*</B> <I>lplpD3DRMDevice</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3D</I>
</DT><DD>Address of an instance of Direct3D.
</DD><DT><I>lpD3DDev</I>
</DT><DD>Address of a Direct3D device object.
</DD><DT><I>lplpD3DRMDevice</I>
 </DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0013.htm">IDirect3DRMDevice</A> interface if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateDeviceFromSurface">IDirect3DRM::CreateDeviceFromSurface</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a Windows device for rendering from the specified DirectDraw surfaces. 
<P><B>HRESULT</B> <B>CreateDeviceFromSurface</B><B>(</B><BR>&nbsp;&nbsp;<B>LPGUID</B> <I>lpGUID</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECTDRAW</B> <I>lpDD</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECTDRAWSURFACE</B> <I>lpDDSBack</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMDEVICE</B> <B>*</B> <I>lplpD3DRMDevice</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpGUID</I>
</DT><DD>Address of the globally unique identifier (GUID) used as the required device driver. If this parameter is NULL, the default device driver is used.
</DD><DT><I>lpDD</I>
</DT><DD>Address of the DirectDraw object that is the source of the DirectDraw surface.
</DD><DT><I>lpDDSBack</I>
</DT><DD>Address of the DirectDrawSurface object that represents the <A HREF="/directx/dxm/help/d3drm/rm0046.htm#back_buffer">back buffer</A>.
</DD><DT><I>lplpD3DRMDevice</I>
 </DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0013.htm">IDirect3DRMDevice</A> interface if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateFace">IDirect3DRM::CreateFace</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>Creates an instance of the <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A> interface.
<P><B>HRESULT</B> <B>CreateFace</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFACE</B> <B>*</B> <I>lplpd3drmFace</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpd3drmFace</I>
 </DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0015.htm">IDirect3DRMFace</A> interface if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateFrame">IDirect3DRM::CreateFrame</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a new child frame of the given parent frame. 
<P><B>HRESULT</B> <B>CreateFrame</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpD3DRMFrame</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME*</B> <I>lplpD3DRMFrame</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpD3DRMFrame</I>
</DT><DD>Address of a frame that is to be the parent of the new frame.
</DD><DT><I>lplpD3DRMFrame</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0016.htm">IDirect3DRMFrame</A> interface if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The child frame inherits the motion attributes of its parent. For example, if the parent is moving with a given velocity, the child frame will also move with that velocity. Furthermore, if the parent is set rotating, the child frame

 will rotate about the origin of the parent. Frames that have no parent are called "scenes". To create a scene, specify NULL as the parent. An application can create a frame with no parent and then associate it with a parent frame later by using the <A HREF="/directx/dxm/help/d3drm/rm0016.htm#AddChild">IDirect3DRMFrame::AddChild</A> method.
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0016.htm#AddChild">IDirect3DRMFrame::AddChild</A>
<H3><HR COLOR="#0000FF"><A NAME="CreateLight">IDirect3DRM::CreateLight</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a new light source with the given type and color. 
<P><B>HRESULT</B> <B>CreateLight</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMLIGHTTYPE</B> <I>d3drmltLightType</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DCOLOR</B> <I>cColor</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMLIGHT*</B> <I>lplpD3DRMLight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>d3drmltLightType</I>
</DT><DD>One of the lighting types given in the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMLIGHTTYPE">D3DRMLIGHTTYPE</A> enumerated type.
</DD><DT><I>cColor</I>
</DT><DD>Color of the light.
</DD><DT><I>lplpD3DRMLight</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0019.htm">IDirect3DRMLight</A> interface if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateLightRGB">IDirect3DRM::CreateLightRGB</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a new light source with the given type and color. 
<P><B>HRESULT</B> <B>CreateLightRGB</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMLIGHTTYPE</B> <I>ltLightType</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>vRed</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>vGreen</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>vBlue</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMLIGHT*</B> <I>lplpD3DRMLight</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ltLightType</I>
</DT><DD>One of the lighting types given in the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMLIGHTTYPE">D3DRMLIGHTTYPE</A> enumerated type.
</DD><DT><I>vRed</I>, <I>vGreen</I>, and <I>vBlue</I>
</DT><DD>Color of the light.
</DD><DT><I>lplpD3DRMLight</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0019.htm">IDirect3DRMLight</A> interface if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateMaterial">IDirect3DRM::CreateMaterial</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a material with the given <A HREF="/directx/dxm/help/d3drm/rm0055.htm#specular_property">specular property</A>.
<P><B>HRESULT</B> <B>CreateMaterial</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>vPower</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMMATERIAL</B> <B>*</B> <I>lplpD3DRMMaterial</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>vPower</I>
</DT><DD>Sharpness of the reflected highlights, with a value of 5 giving a metallic look, and higher values giving a more plastic look to the rendered surface.
</DD><DT><I>lplpD3DRMMaterial</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0020.htm">IDirect3DRMMaterial</A> interface if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateMesh">IDirect3DRM::CreateMesh</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a new mesh object with no faces. The mesh is not visible until it is added to a frame.
<P><B>HRESULT</B> <B>CreateMesh</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMMESH*</B> <I>lplpD3DRMMesh</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpD3DRMMesh</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0021.htm">IDirect3DRMMesh</A> interface if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateMeshBuilder">IDirect3DRM::CreateMeshBuilder</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a new mesh builder object.
<P><B>HRESULT</B> <B>CreateMeshBuilder</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMMESHBUILDER*</B> <I>lplpD3DRMMeshBuilder</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpD3DRMMeshBuilder</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0022.htm">IDirect3DRMMeshBuilder</A> interface if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateObject">IDirect3DRM::CreateObject</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a new object without initializing the object.
<P><B>HRESULT</B> <B>CreateObject</B><B>(</B><BR>&nbsp;&nbsp;<B>REFCLSID</B> <I>rclsid</I><B>,</B><BR>&nbsp;&nbsp;<B>LPUNKNOWN</B> <I>pUnkOuter</I><B>,</B><BR>&nbsp;&nbsp;<B>REFIID</B> <I>riid</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <B>FAR*</B> <I>ppv</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rclsid</I>
</DT><DD>Class identifier for the new object.
</DD><DT><I>pUnkOuter</I>
</DT><DD>Pointer to the outer <B>IUnknown</B> that allows COM aggregation features.

</DD><DT><I>riid</I>
</DT><DD>Interface identifier of the object to be created.
</DD><DT><I>ppv</I>
</DT><DD>Address of a pointer to the object when the method returns.
<P>
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>An application that uses this method must initialize the object that has been created. (The other creation methods of the <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A> interface initialize the object automatically.) To initialize the new object, you should use the <B>Init</B> method for that object. An application should use the <B>Init</B> method only once to initialize any given object.
<P>Applications can use this method to implement aggregation in Direct3DRM objects.
<H3><HR COLOR="#0000FF"><A NAME="CreateShadow">IDirect3DRM::CreateShadow</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>Creates a shadow by using the specified visual and light, projecting the shadow onto the specified plane. The shadow is a visual that should be added to the frame that contains the visual.
<P><B>HRESULT</B> <B>CreateShadow</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMVISUAL</B> <I>lpVisual</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMLIGHT</B> <I>lpLight</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>px</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>py</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>pz</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>nx</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>ny</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>nz</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMVISUAL</B> <B>*</B> <I>lplpShadow</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpVisual</I>
</DT><DD>Address of the Direct3DRMVisual object that is casting the shadow.
</DD><DT><I>lpLight</I>
</DT><DD>Address of the <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0019.htm">IDirect3DRMLight</A> interface that is the light source.
</DD><DT><I>px</I>, <I>py</I>, and <I>pz</I>
</DT><DD>Plane that the shadow is to be projected on.
</DD><DT><I>nx</I>, <I>ny</I>, and <I>nz</I>
</DT><DD>Normal to the plane that the shadow is to be projected on.
</DD><DT><I>lplpShadow</I>
</DT><DD>Address of a pointer to be initialized with a valid pointer to the shadow visual, if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateTexture">IDirect3DRM::CreateTexture</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a texture from an image in memory. 
<P><B>HRESULT</B> <B>CreateTexture</B><B>(</B><BR>&nbsp;&nbsp;<B>LPD3DRMIMAGE</B> <I>lpImage</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMTEXTURE*</B> <I>lplpD3DRMTexture</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpImage</I>
</DT><DD>Address of a <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMIMAGE">D3DRMIMAGE</A> structure describing the source for the texture.
</DD><DT><I>lplpD3DRMTexture</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0027.htm">IDirect3DRMTexture</A> interface if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The memory associated with the image is used each time the texture is rendered, rather than the memory being copied into the Direct3D Retained Mode buffers. This allows the image to be used both as a rendering target and as a texture.
<H3><HR COLOR="#0000FF"><A NAME="CreateTextureFromSurface">IDirect3DRM::CreateTextureFromSurface</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a texture from a specified DirectDraw surface.
<P><B>HRESULT</B> <B>CreateTextureFromSurface</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECTDRAWSURFACE</B> <I>lpDDS</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMTEXTURE</B> <B>*</B> <I>lplpD3DRMTexture</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpDDS</I>
</DT><DD>Address of the DirectDrawSurface object containing the texture.
</DD><DT><I>lplpD3DRMTexture</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0027.htm">IDirect3DRMTexture</A> interface if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateUserVisual">IDirect3DRM::CreateUserVisual</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates an application-defined visual object, which can then be added to a scene and rendered by using an application-defined handler.
<P><B>HRESULT</B> <B>CreateUserVisual</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMUSERVISUALCALLBACK</B> <I>fn</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpArg</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMUSERVISUAL</B> <B>*</B> <I>lplpD3DRMUV</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>fn</I>
</DT><DD>Callback function that is <A HREF="/directx/dxm/help/d3drm/rm0007.htm#D3DRMUSERVISUALCALLB">D3DRMUSERVISUALCALLBACK</A> application-defined.
<P>
</DD><DT><I>lpArg</I>
</DT><DD>Address of application-defined data passed to the callback function.
</DD><DT><I>lplpD3DRMUV</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0029.htm">IDirect3DRMUserVisual</A> interface if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Should return D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="CreateViewport">IDirect3DRM::CreateViewport</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a viewport on a device with device coordinates (<I>dwXPos</I>, <I>dwYPos</I>) to (<I>dwXPos</I> + <I>dwWidth</I>, <I>dwYPos</I> + <I>dwHeight</I>). 

<P><B>HRESULT</B> <B>CreateViewport</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMDEVICE</B> <I>lpDev</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpCamera</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwXPos</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwYPos</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwWidth</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwHeight</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMVIEWPORT*</B> <I>lplpD3DRMViewport</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpDev</I>
</DT><DD>Device on which the viewport is to be created.
</DD><DT><I>lpCamera</I>
</DT><DD>Frame that describes the position and direction of the view.
</DD><DT><I>dwXPos</I>, <I>dwYPos</I>, <I>dwWidth</I>, and <I>dwHeight</I>
</DT><DD>Position and size of the viewport, in device coordinates. The viewport size cannot be larger than the physical device or the method will fail. 
</DD><DT><I>lplpD3DRMViewport</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0030.htm">IDirect3DRMViewport</A> interface if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. If the viewport size is larger than the physical device, returns D3DRMERR_BADVALUE. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The viewport displays objects in the scene that contains the <A HREF="/directx/dxm/help/d3drm/rm0047.htm#camera">camera</A>, with the view direction and up vector taken from the camera. The viewport size cannot be larger than the physical device.
<H3><HR COLOR="#0000FF"><A NAME="CreateWrap">IDirect3DRM::CreateWrap</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Creates a wrapping function that can be used to assign texture coordinates to faces and meshes. The vector [<I>ox oy oz</I>] gives the origin of the wrap, [<I>dx dy dz</I>] gives its z-axis, and [<I>ux uy uz</I>] gives its y-axis. The 2-D vectors [<I>ou ov</I>] and [<I>su sv</I>] give an origin and scale factor in the texture applied to the result of the wrapping function.
<P><B>HRESULT</B> <B>CreateWrap</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMWRAPTYPE</B> <I>type</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpRef</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>ox</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>oy</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>oz</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>dx</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>dy</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>dz</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>ux</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>uy</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>uz</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>ou</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>ov</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>su</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>sv</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMWRAP*</B> <I>lplpD3DRMWrap</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>type</I>
</DT><DD>One of the members of the <A HREF="/directx/dxm/help/d3drm/rm0034.htm#D3DRMWRAPTYPE">D3DRMWRAPTYPE</A> enumerated type.
</DD><DT><I>lpRef</I>
</DT><DD>Reference frame for the wrap.
</DD><DT><I>ox</I>, <I>oy</I>, and <I>oz</I>
</DT><DD>Origin of the wrap.
</DD><DT><I>dx</I>, <I>dy</I>, and <I>dz</I>
</DT><DD>Z-axis of the wrap.
</DD><DT><I>ux</I>, <I>uy</I>, and <I>uz</I>
</DT><DD>Y-axis of the wrap.
</DD><DT><I>ou</I> and <I>ov</I>
</DT><DD>Origin in the texture.
</DD><DT><I>su</I> and <I>sv</I>
</DT><DD>Scale factor in the texture.
</DD><DT><I>lplpD3DRMWrap</I>
</DT><DD>Address that will be filled with a pointer to an <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0032.htm">IDirect3DRMWrap</A> interface if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0032.htm">IDirect3DRMWrap</A><H3><HR COLOR="#0000FF"><A NAME="EnumerateObjects">IDirect3DRM::EnumerateObjects</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Uses the callback function specified by the <I>func</I> parameter on each of the active Direct3DRM objects.
<P><B>HRESULT</B> <B>EnumerateObjects</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DRMOBJECTCALLBACK</B> <I>func</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpArg</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>func</I>
</DT><DD>Application-defined <A HREF="/directx/dxm/help/d3drm/rm0007.htm#D3DRMOBJECTCALLBACK">D3DRMOBJECTCALLBACK</A> callback function to be used with each Direct3DRMObject object and the application-defined argument.
</DD><DT><I>lpArg</I>
</DT><DD>Address of application-defined data passed to the callback function.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetDevices">IDirect3DRM::GetDevices</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Returns all the Direct3DRM devices that have been created in the system.
<P>
<P><B>HRESULT</B> <B>GetDevices</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMDEVICEARRAY*</B> <I>lplpDevArray</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lplpDevArray</I>
</DT><DD>Address of a pointer that will be filled with the resulting array of Direct3DRM devices. For information about the Direct3DRMDeviceArray object, see the <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0008.htm#IDirect3DRMDeviceArray">IDirect3DRMDeviceArray</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="GetNamedObject">IDirect3DRM::GetNamedObject</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Finds a Direct3DRMObject given the Direct3DRMObject name.

<P><B>HRESULT</B> <B>GetNamedObject</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>char</B> <B>*</B> <I>lpName</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMOBJECT*</B> <I>lplpD3DRMObject</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpName</I>
</DT><DD>Name of the object to be searched for.
</DD><DT><I>lplpD3DRMObject</I>
</DT><DD>Address of a pointer to be initialized with a valid Direct3DRMObject pointer if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>If the system does not find an object with the name specified in the <I>lpName</I> parameter, this method returns D3DRM_OK, but the <I>lplpD3DRMObject</I> parameter is NULL.
<H3><HR COLOR="#0000FF"><A NAME="GetSearchPath">IDirect3DRM::GetSearchPath</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Returns the current search path. For Windows, the path is a list of directories separated by semicolons (;). 
<P><B>HRESULT</B> <B>GetSearchPath</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <B>*</B> <I>lpdwSize</I><B>,</B><BR>&nbsp;&nbsp;<B>LPSTR</B> <I>lpszPath</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpdwSize</I>
</DT><DD>Pointer to a DWORD. Should contain the length of <I>lpszPath</I> when <B>GetSearchPath</B> is used. On return, contains the length of the string in <I>lpszPath</I> containing the current search path. This parameter cannot be NULL.
</DD><DT><I>lpszPath</I>

</DT><DD>A pointer to a null-terminated string specifying the search path. If <I>lpszPath</I> equals NULL when <B>GetSearchPath</B> is used, the method returns the length of the current string in the location pointed to by the <I>lpdwSize</I> parameter.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0009.htm#SetSearchPath">IDirect3DRM::SetSearchPath</A>
<H3><HR COLOR="#0000FF"><A NAME="Load">IDirect3DRM::Load</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>Loads an object.
<P><B>HRESULT</B> <B>Load</B><B>(</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpvObjSource</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpvObjID</I><B>,</B><BR>&nbsp;&nbsp;<B>LPIID</B> <B>*</B> <I>lplpGUIDs</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwcGUIDs</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DRMLOADOPTIONS</B> <I>d3drmLOFlags</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DRMLOADCALLBACK</B> <I>d3drmLoadProc</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpArgLP</I><B>,</B><BR>&nbsp;&nbsp;<B>D3DRMLOADTEXTURECALLBACK</B> <I>d3drmLoadTextureProc</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lpArgLTP</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMFRAME</B> <I>lpParentFrame</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpvObjSource</I>
 </DT><DD>Source for the object to be loaded. This source can be a file, resource, memory block, or stream, depending on the source flags specified in the <I>d3drmLOFlags</I> parameter.
</DD><DT><I>lpvObjID</I>
 </DT><DD>Object name or position to be loaded. The use of this parameter depends on the identifier flags specified in the <I>d3drmLOFlags</I> parameter. If the D3DRMLOAD_BYPOSITION flag is specified, this parameter is a pointer to a <B>DWORD</B> value that gives the object's order in the file. This parameter can be NULL.
</DD><DT><I>lplpGUIDs</I>
 </DT><DD>Address of an array of interface identifiers to be loaded. For example, if this parameter is a two-element array containing IID_IDirect3DRMMeshBuilder and IID_IDirect3DRMAnimationSet, this method loads all the animation sets and mesh-builder objects. Possible GUIDs must be one or more of the following: IID_IDirect3DRMMeshBuilder, IID_IDirect3DRMAnimationSet, IID_IDirect3DRMAnimation, and IID_IDirect3DRMFrame.
</DD><DT><I>dwcGUIDs</I>
 </DT><DD>Number of elements specified in the <I>lplpGUIDs</I> parameter.
</DD><DT><I>d3drmLOFlags</I>
 </DT><DD>Value of the <A HREF="/directx/dxm/help/d3drm/rm0035.htm#D3DRMLOADOPTIONS">D3DRMLOADOPTIONS</A> type describing the load options.
</DD><DT><I>d3drmLoadProc</I>
 </DT><DD>A <A HREF="/directx/dxm/help/d3drm/rm0007.htm#D3DRMLOADCALLBACK">D3DRMLOADCALLBACK</A> callback function used when the system reads the specified object. 
</DD><DT><I>lpArgLP</I>
 </DT><DD>Address of application-defined data passed to the <B>D3DRMLOADCALLBACK</B> callback function.
</DD><DT><I>d3drmLoadTextureProc</I>
 </DT><DD>A <A HREF="/directx/dxm/help/d3drm/rm0007.htm#D3DRMLOADTEXTURECALL">D3DRMLOADTEXTURECALLBACK</A> callback function used to load any textures used by an object that require special formatting. This parameter can be NULL.
</DD><DT><I>lpArgLTP</I>
 </DT><DD>Address of application-defined data passed to the <B>D3DRMLOADTEXTURECALLBACK</B> callback function.
</DD><DT><I>lpParentFrame</I>

 </DT><DD>Address of a parent Direct3DRMFrame object. This argument only affects the loading of animation sets. When an animation that is loaded from an .x file references an unparented frame in the .x file, the unparented frame's parent is set to the parent frame at <I>lpParentFrame</I>.

 However, if you call <B>Load</B> to load any frames in the .x file, the parent frame at <I>lpParentFrame</I> will not be used as the parent frame for frames in the .x file with no parent. That is, <I>lpParentFrame</I> is used only when you load animation sets. This value of <I>lpParentFrame</I> can be NULL.

<P>
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method allows great flexibility in loading objects from Microsoft&#174; DirectX&#174; files. Here is an example of how to use it:
<PRE><FONT FACE="Courier" SIZE="2">
#include &lt;windows.h&gt;
#include &lt;stdio.h&gt;
#include &lt;initguid.h&gt;
#include &lt;d3drm.h&gt;

LPDIRECT3DRM d3dApi;

int totalMesh = 0, totalAnim = 0, totalFrames = 0;

HRESULT loadTexture(LPSTR name, LPVOID lpArg, LPDIRECT3DRMTEXTURE *tex)
{
&#009;return d3dApi-&gt;lpVtbl-&gt;LoadTexture(d3dApi, name, tex);
}

void loadCallback(LPDIRECT3DRMOBJECT lpObject, REFIID objGuid, LPVOID lpArg)
{
&#009;if (IsEqualIID(objGuid, &amp;IID_IDirect3DRMFrame)) {
&#009;&#009;totalFrames ++;
&#009;&#009;return;
&#009;}

&#009;if (IsEqualIID(objGuid, &amp;IID_IDirect3DRMAnimationSet)) {
&#009;&#009;totalAnim ++;
&#009;&#009;return;
&#009;}

&#009;if (IsEqualIID(objGuid, &amp;IID_IDirect3DRMMeshBuilder)) {
&#009;&#009;totalMesh ++;
&#009;&#009;return;
&#009;}

&#009;return;
}


BOOL loadObjects(LPSTR filename)
{
&#009;LPGUID guids[] = { (LPGUID)&amp;IID_IDirect3DRMMeshBuilder,
&#009;&#009;(LPGUID)&amp;IID_IDirect3DRMAnimationSet,
&#009;&#009;(LPGUID)&amp;IID_IDirect3DRMFrame };

&#009;/* Tell the loader which objects you're interested in */

&#009;if (FAILED(d3dApi-&gt;lpVtbl-&gt;Load(d3dApi, filename, NULL, 
&#009;&#009;&#009;guids, 3, D3DRMLOAD_FROMFILE,
&#009;&#009;&#009;loadCallback, NULL, loadTexture, NULL, NULL)))
&#009;&#009;return FALSE;

&#009;printf("Total Frames loaded = %d\n", totalFrames);
&#009;printf("Total Animation Sets loaded = %d\n", totalAnim);
&#009;printf("Total Meshbuilders loaded = %d\n", totalMesh);

&#009;return TRUE;
}

int main(int argc, char **argv)
{

&#009;if (FAILED(Direct3DRMCreate(&amp;d3dApi)))
&#009;&#009;return FALSE;

&#009;if (argc != 2) {
&#009;&#009;fprintf(stderr, "usage: %s filename\n", argv[0]);
&#009;&#009;return FALSE;
&#009;}

&#009;if (!loadObjects(argv[1])) return FALSE;
&#009;
  return(0);
}
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="LoadTexture">IDirect3DRM::LoadTexture</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Loads a texture from the specified file. This texture can have 8, 24, or 32 bits-per-pixel, and it should be in either the Windows bitmap (.bmp) or Portable Pixmap (.ppm) P6 format. 
<P><B>HRESULT</B> <B>LoadTexture</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>char</B> <B>*</B> <I>lpFileName</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMTEXTURE*</B> <I>lplpD3DRMTexture</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpFileName</I>
</DT><DD>Name of the required .bmp or .ppm file.
</DD><DT><I>lplpD3DRMTexture</I>
</DT><DD>Address of a pointer to be initialized with a valid Direct3DRMTexture pointer if the call succeeds.

</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P><B>LoadTexture</B> checks whether the texture is in .bmp or .ppm format, which are the formats it can load.

 If you want to load other formats, you can add code to the callback to load the image into a <A HREF="/directx/dxm/help/d3drm/rm0033.htm#D3DRMIMAGE">D3DRMIMAGE</A> structure and then use <A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateTexture">IDirect3DRM::CreateTexture</A>.
<P>If you write your own texture callback, the <B>LoadTexture</B> call in the texture callback does not take a reference to the texture. For example:
<PRE><FONT FACE="Courier" SIZE="2">HRESULT loadTextures(char *name, void *arg, LPDIRECT3DRMTEXTURE *tex)
{
    return lpD3DRM-&gt;LoadTexture(name, tex);
}
</FONT></PRE>
<P>In this sample, no reference is taken for <I>tex</I>. If you want to keep a reference to each texture loaded by your texture callback, you should <B>AddRef</B> the texture. For example:

<PRE><FONT FACE="Courier" SIZE="2">LPDIRECT3DRMTEXTURE *texarray;

HRESULT loadTextures(char *name, void *arg, LPDIRECT3DRMTEXTURE *tex)
{
&#009;if (FAILED(lpD3DRM-&gt;LoadTexture(name, tex)) {
&#009;&#009;return NULL;
&#009;}

&#009;texArray[current++] = tex;
&#009;tex-&gt;AddRef();

&#009;return tex;
}
</FONT></PRE>
<H3><HR COLOR="#0000FF"><A NAME="LoadTextureFromResource">IDirect3DRM::LoadTextureFromResource</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Loads a texture from a specified resource.
<P><B>HRESULT</B> <B>LoadTextureFromResource</B><B>(</B><BR>&nbsp;&nbsp;<B>HRSRC</B> <I>rs</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECT3DRMTEXTURE</B> <B>*</B> <I>lplpD3DRMTexture</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rs</I>
</DT><DD>Handle of the resource.
</DD><DT><I>lplpD3DRMTexture</I>
</DT><DD>Address of a pointer to be initialized with a valid Direct3DRMTexture object if the call succeeds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H3><HR COLOR="#0000FF"><A NAME="SetDefaultTextureColors">IDirect3DRM::SetDefaultTextureColors</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Sets the default colors to be used for a Direct3DRMTexture object.
<P><B>HRESULT</B> <B>SetDefaultTextureColors</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwColors</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwColors</I>
</DT><DD>Number of colors.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method affects the texture colors only when it is used before the <A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateTexture">IDirect3DRM::CreateTexture</A> method; it has no effect on textures that have already been created.
<H3><HR COLOR="#0000FF"><A NAME="SetDefaultTextureShades">IDirect3DRM::SetDefaultTextureShades</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Sets the default shades to be used for an Direct3DRMTexture object.
<P><B>HRESULT</B> <B>SetDefaultTextureShades</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwShades</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwShades</I>
</DT><DD>Number of shades.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>This method affects the texture shades only when it is used before the <A HREF="/directx/dxm/help/d3drm/rm0009.htm#CreateTexture">IDirect3DRM::CreateTexture</A> method; it has no effect on textures that have already been created.
<H3><HR COLOR="#0000FF"><A NAME="SetSearchPath">IDirect3DRM::SetSearchPath</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Sets the current file search path from a list of directories. For Windows, the path should be a list of directories separated by semicolons (;). 
<P><B>HRESULT</B> <B>SetSearchPath</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCSTR</B> <I>lpPath</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpPath</I>
</DT><DD>Address of a null-terminated string specifying the path to set as the current search path.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>The default search path is taken from the value of the D3DPATH environment variable. If this is not set, the search path will be empty. When opening a file, the system first looks for the file in the current working directory and then checks every directory in the search path.
<P>
<H5>See Also</H5>
<P><A HREF="/directx/dxm/help/d3drm/rm0009.htm#GetSearchPath">IDirect3DRM::GetSearchPath</A>
<H3><HR COLOR="#0000FF"><A NAME="Tick">IDirect3DRM::Tick</A></H3>
<A HREF="/directx/dxm/help/d3drm/rm0009.htm">IDirect3DRM</A>
<P>
<P>Performs the Direct3DRM system heartbeat. When this method is used, the positions of all moving frames are updated according to their current motion attributes, the scene is rendered to the current device, and relevant callback functions are used at their appropriate times. Control is returned when the rendering cycle is complete. 
<P><B>HRESULT</B> <B>Tick</B><B>(</B><BR>&nbsp;&nbsp;<B>D3DVALUE</B> <I>d3dvalTick</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>d3dvalTick</I>
 </DT><DD>Velocity and rotation step for the <A HREF="/directx/dxm/help/d3drm/rm0016.htm#SetRotation">IDirect3DRMFrame::SetRotation</A> and <A HREF="/directx/dxm/help/d3drm/rm0016.htm#SetVelocity">IDirect3DRMFrame::SetVelocity</A> methods.
</DD></DL>
<H5>Return Values</H5>
<P>Returns D3DRM_OK if successful, or an error otherwise. For a list of possible errors, see <A CLASS=tctop HREF="/directx/dxm/help/d3drm/rm0036.htm">Direct3D Retained Mode Return Values</A>.

<H5>Remarks</H5>
<P>You can implement this method by using other Retained Mode methods to allow more flexibility in rendering a scene.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="../cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="1"><A HREF="#pagetop"><IMG SRC="/directx/dxm/help/d3drm/art/yelbtn.gif" WIDTH="11" HEIGHT="11" ALIGN="MIDDLE" BORDER=0 ALT="*">Top of Page</A></FONT>
</BLOCKQUOTE><P>
</FONT><P>
</BODY></HTML>
