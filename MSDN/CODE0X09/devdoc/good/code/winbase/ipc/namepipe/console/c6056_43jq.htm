<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6056"></a>README.TXT</h2>
<pre><code>Nmpipe.c is a simple, console named pipe sample demonstrating the "thread per <br>client" method of a named pipe client/server architecture. This sample <br>application demonstrates how to create and connect clients from a server <br>application, and how to wait for and connect to pipes from a client <br>application. <br> <br>To compile the application for simultaneous reading and writing, uncomment the <br>"#define OVERPAPED_IO TRUE" statement in nmpipe.c. For one-way pipe operations, <br>uncomment the "#define OVERLAPPED_IO FALSE" statement. <br> <br>The sample can be started either as a server or as a client. To start the <br>sample as the server, use the /s parameter. To start the sample as a client, <br>use /c. Following either /s or /c should be a string to write to the pipe. <br>Strings with spaces should be quoted. Following the string is an optional <br>parameter that specifies the full name of the pipe to create or connect to. If <br>none is given, a default pipe name is used. <br> <br>For example, to start a server and client: <br> <br>nmpipe /s "hello from the server " \\.\pipe\testpipe <br>nmpipe /c client \\.\pipe\testpipe <br> <br>If OVERLAPPED_IO is defined as TRUE, this will cause the client and server to <br>write their respective strings to each other over the named pipe. If <br>OVERLAPPED_IO is defined as FALSE, then the client will only write and the <br>server will only read. <br> <br>Note that Windows 95 cannot create named pipes, so the /s (run as server) flag <br>will cause errors on the CreateNamedPipe call under Windows 95. In addition, <br>Windows 95 does not support overlapped I/O on named pipes; if the app is <br>compiled with OVERLAPPED_IO defined as TRUE, errors will result from the <br>CreateFile calls, which use the FILE_FLAG_OVERLAPPED flag in this case. So be <br>sure to define OVERLAPPED_IO as FALSE before compiling on Windows 95. </code></pre>
<p>&nbsp;</p></body>
</HTML>
