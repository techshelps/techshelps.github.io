<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SCARDWRP.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6119"></a>SCARDWRP.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1997  Microsoft Corporation <br> <br>Module Name: <br> <br>scardwrp     <br> <br>Abstract: <br> <br>This file contains a simple class implementation for "wrapping"some <br>of the Vendor COM Wrapper API functionality. <br> <br>Author: <br> <br>Environment: <br> <br>    Win32, C++ w/Exceptions, ATL, COM/OLE <br> <br>Revision History: <br> <br>--*/ <br> <br>#ifndef __SCARDWRP_H__ <br>#define __SCARDWRP_H__ <br> <br>// These are required and taken from SCARDCOM.H <br>#ifndef _SCARD_STATES_DEFINED <br>#define _SCARD_STATES_DEFINED <br>typedef /* [version][v1_enum][helpstring] */  <br>enum tagSCARD_STATES <br>    {ABSENT= 1, <br>PRESENT= 2, <br>SWALLOWED= 3, <br>POWERED= 4, <br>NEGOTIABLEMODE= 5, <br>SPECIFICMODE= 6 <br>    }SCARD_STATES; <br> <br>#endif // !_SCARD_STATES_DEFINED <br>#ifndef _SCARD_PROTOCOLS_DEFINED <br>#define _SCARD_PROTOCOLS_DEFINED <br>typedef /* [version][v1_enum][helpstring] */  <br>enum tagSCARD_PROTOCOLS <br>    {T0= 0x1, <br>T1= 0x2, <br>RAW= 0xff <br>    }SCARD_PROTOCOLS; <br> <br>#endif // !_SCARD_PROTOCOLS_DEFINED <br> <br>#define BYTE_BUFFER_HEAD(0) <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// <br>// Includes <br>// <br> <br>// Include Vendor COM object  <br>#include "scardcom.h" <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CSCardWrapper class <br> <br>class CSCardWrapper <br>{ <br>// Member Variables <br>private: <br>// Bit struct used to sequence events, etc. <br>typedef struct _SEQUENCE { <br>unsignedCOMLoad:1; <br>unsignedAttach:1; <br>unsignedOther:6; <br>} SEQUENCE; <br> <br>SEQUENCEm_sequence; <br> <br>// COM interface pointers <br>LPSCARDMANAGEm_pISCardManage; <br>LPSCARDVERIFYm_pISCardVerify; <br>LPSCARDAUTHm_pISCardAuth; <br>LPSCARDFILEACCESSm_pISCardFileAccess; <br> <br>public: <br>// Construction/Destruction <br>CSCardWrapper() {m_pISCardManage = NULL; <br>m_pISCardVerify = NULL; <br>m_pISCardAuth = NULL; <br>m_pISCardFileAccess = NULL; <br> <br>m_sequence.COMLoad = 0; <br>m_sequence.Attach = 0; <br>m_sequence.Other = 0;} <br> <br>~CSCardWrapper() {} <br> <br>private: <br>HRESULT CreateByteBuffer(DWORDdwSize, <br>LPBYTEBUFFER* ppBuffer); <br> <br>public: <br>// Implementation <br>HRESULT AttachToReaderByName( WCHAR *wszReaderName ); <br> <br>HRESULT ChangeDirectory( WCHAR *wszDirectory ); <br> <br>HRESULT Detach(); <br> <br>HRESULT GetChallenge( LPBYTE lpbyChallenge, LONG* lpLengthOfChal ); <br> <br>HRESULT LoadCOM(); <br> <br>HRESULT Open( WCHAR *wszFilename, HSCARD_FILE *phFile ); <br> <br>HRESULT Status( SCARD_STATES *State, SCARD_PROTOCOLS *Protocol ); <br> <br>void UnloadCOM(); <br> <br>HRESULT VerifyPIN( WCHAR *wszPIN ); <br> <br>HRESULT Write ( HSCARD_FILE hFile, BYTE byRecordID, <br>LONG cbBytes, LPBYTE pbyData); <br>}; <br> <br>///////////////////////////////////////////////////////////////////////////// <br> <br>#endif //__SCARDWRP_H__ <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
