<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SCARDFIL.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6109"></a>SCARDFIL.H</h2>
<pre><code>// SCardFil.h : Declaration of the CSCardFileAccess <br> <br>#ifndef __SCARDFILEACCESS_H_ <br>#define __SCARDFILEACCESS_H_ <br> <br>#include "resource.h"       // main symbols <br>#include "scardman.h" <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CSCardFileAccess <br>class ATL_NO_VTABLE CSCardFileAccess :  <br>public CComObjectRootEx&lt;CComSingleThreadModel&gt;, <br>public CComCoClass&lt;CSCardFileAccess, &amp;CLSID_SCardFileAccess&gt;, <br>public IDispatchImpl&lt;ISCardFileAccess, &amp;IID_ISCardFileAccess, &amp;LIBID_SCARDCOMLib&gt; <br>{ <br>// Members <br>private: <br>LPCSCARDMANAGEm_Manage; <br>// Struct and map used for holding file information for open files, etc. <br>typedef struct tagfile_info { <br>HSCARD_FILEfileHandle; <br>SCARD_FLAGSfileStatus; <br>FILETYPEfileType; <br>WORDwfileName; <br>LONGlSeekOffset; <br>LPCSTRszRFU; <br>} FILE_INFORMATION; <br>CMap&lt;HSCARD_FILE, HSCARD_FILE, FILE_INFORMATION, FILE_INFORMATION&amp;&gt; m_FileInfoMap; <br> <br>intm_iOpenFiles; <br>HSCARD_FILEm_hfileNextHandle; <br>WORDm_wCurrentFileID; <br>LONGm_lReplyLength; <br>WORDm_wReplyStatus; <br> <br>CCriticalSectionm_CriticalSection; <br> <br>public: <br>CSCardFileAccess(){} <br> <br>~CSCardFileAccess(){} <br> <br>HRESULT FinalConstruct(); <br> <br>HRESULT FinalRelease(); <br> <br>// <br>//DECLARE_NOT_AGGREGATABLE(CSCardFileAccess)  <br>// Note: <br>// Remove the comment from the line above if you don't want your object to  <br>// support aggregation.  The default is to support it <br>// <br> <br>//Registry: <br> <br>//Simple ALL 1.0 based registry entry <br>DECLARE_REGISTRY(CSCardFileAccess,  <br>_T("SCardCOM.SCardFileAccess.1"),  <br>_T("SCardCOM.SCardFileAccess"),  <br>IDS_SCARDFIL_DESC,  <br>THREADFLAGS_APARTMENT) <br>// Note: Enters the standard class registration into the system <br>// registry.  <br>// <br>// Script based... <br>// DECLARE_REGISTRY_RESOURCEID(IDR_SCARDFILEACCESS) <br> <br>BEGIN_COM_MAP(CSCardFileAccess) <br>COM_INTERFACE_ENTRY(ISCardFileAccess) <br>COM_INTERFACE_ENTRY(IDispatch) <br>END_COM_MAP() <br> <br>private: <br>// ISCardFileAccess Methods <br>WORD ConvertFilename(BSTR bstrFilename); <br>HSCARD_FILE CreateFileHandle(); <br>HRESULT FileSelect(WORD wFileName); <br> <br>public: <br>// ISCardFileAccess Methods <br>STDMETHOD(ChangeDir)( <br>REFTYPE refType, <br>BSTR bstrNewDir); <br>STDMETHOD(Close)( <br>HSCARD_FILE hFile); <br>STDMETHOD(Create)( <br>REFTYPE refType, <br>BSTR bstrPathSpec, <br>LPTLV_TABLE* ppTLVs, <br>LONG* lpcTLVs, <br>SCARD_FLAGS Flags, <br>LPBYTEBUFFER pDataBuffer); <br>STDMETHOD(Delete)( <br>REFTYPE refType, <br>BSTR bstrPathSpec, <br>SCARD_FLAGS Flag); <br>STDMETHOD(Directory)( <br>FILETYPE fileType, <br>LPSAFEARRAY *ppFileList); <br>STDMETHOD(GetCurrentDir)( <br>BSTR* pbstrPathSpec); <br>STDMETHOD(GetFileCapabilities)( <br>LPTLV_TABLE* ppProperties, <br>LONG* plProperties, <br>SCARD_FLAGS Flags); <br>STDMETHOD(GetProperties)( <br>REFTYPE refType, <br>BSTR bstrPathSpec, <br>LPTLV_TABLE *ppTLV, <br>LONG* plcTLV, <br>SCARD_FLAGS Flags); <br>STDMETHOD(Initialize)( <br>LONG* lp); <br>STDMETHOD(Invalidate)( <br>BSTR bstrPathSpec, <br>SCARD_FLAGS Flags); <br>STDMETHOD(Open)( <br>REFTYPE refType, <br>BSTR bstrPathSpec, <br>HSCARD_FILE *phFile); <br>STDMETHOD(Read)( <br>HSCARD_FILE hFile, <br>LONG *lBytesToRead, <br>LPBYTEBUFFER* ppBuffer, <br>SCARD_FLAGS Flags); <br>STDMETHOD(Rehabilitate)( <br>BSTR bstrPathSpec, <br>SCARD_FLAGS Flags); <br>STDMETHOD(Seek)( <br>HSCARD_FILE hFile, <br>LONG lOffset, <br>SEEKTYPE Seek); <br>STDMETHOD(SetProperties)( <br>REFTYPE refType, <br>BSTR bstrPathSpec, <br>LPTLV_TABLE pTLV, <br>LONG lcTLV, <br>SCARD_FLAGS Flags); <br>STDMETHOD(Write)( <br>HSCARD_FILE hFile, <br>LONG lLength, <br>LPBYTEBUFFER pData, <br>SCARD_FLAGS Flags); <br>}; <br> <br>#endif //__SCARDFILEACCESS_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
