<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WRPHELP.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6117"></a>WRPHELP.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1996  Microsoft Corporation <br> <br>Module Name: <br> <br>    WrpHelp <br> <br>Abstract: <br> <br>This file contains the class declarations for wrapper helper classes <br> <br>Author: <br> <br>Environment: <br> <br>    Win32, C++ w/Exceptions, ATL, COM/OLE <br> <br>Revision History: <br> <br>Notes: <br> <br>--*/ <br> <br>#ifndef __WRPHELP_H__ <br>#define __WRPHELP_H__ <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// <br>// Includes <br>// <br>#ifndef __LOWLEVEL_SSP_COM__ <br>#define __LOWLEVEL_SSP_COM__ <br>#include &lt;scarddat.h&gt; <br>#include &lt;scardmgr.h&gt; <br>#include &lt;scardsrv.h&gt; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// <br>// Class Declaration <br>// <br>class CCriticalSection <br>{ <br>// Members <br>private: <br> <br>CRITICAL_SECTIONm_CriticalSection; <br> <br>public: <br> <br>// Construction/Destruction <br>public: <br>CCriticalSection(); <br> <br>~CCriticalSection(); <br> <br>// Methods <br>BOOL EnterCriticalSection(); <br>BOOL ExitCriticalSection(); <br>}; <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// <br>// Class Declaration <br>// <br>class CGrabData <br>{ <br>// members <br>private: <br>LPSCARDCMDm_pISCardCmd; <br>LPSCARDm_pISCard; <br>LPSCARDISO7816m_pISCardISO7816; <br>LPSCARDTYPECONV m_pISCardTypeConv; <br>LONGm_lReplyLength; <br>WORDm_wReplyStatus; <br> <br>public: <br> <br>public: <br> <br>// Construction/Destruction <br>CGrabData(LPSCARDCMD pISCardCmd,  <br>  LPSCARD pISCard, LPSCARDISO7816 pISCardIso, <br>  LPSCARDTYPECONV pISCardTypeConv) { <br>if ( (pISCardCmd == NULL) || (pISCard == NULL)  <br> || (pISCardIso == NULL) || (pISCardTypeConv == NULL) ) <br>delete (this); <br>m_pISCardCmd = pISCardCmd; <br>m_pISCard = pISCard; <br>m_pISCardISO7816 = pISCardIso; <br>m_pISCardTypeConv = pISCardTypeConv; <br>} <br> <br>~CGrabData() {} <br> <br>// Methods <br>HRESULT GetExtraData(LPBYTEBUFFER *ppDataOut,  <br>WORD *pwCmdStatus, <br>LONG *plDataLength); <br>}; <br> <br>////////////////////////////////////////////////////////////////////////////////// <br> <br>////////////////////////////////////////////////////////////////////////////////// <br>// <br>// Other helpful routines <br>// <br>HRESULT <br>SspCreateByteArray( <br>IN DWORD dwAllocSize, <br>OUT LPBYTE *ppbyArray, <br>OUT OPTIONAL EXCEPINFO* pExceptInfo); <br> <br>HRESULT <br>SspConvertDwordToByte( <br>IN DWORD dwNum, <br>OUT LPBYTE *ppbyArray, <br>OUT LPDWORD pdwByteArraySize, <br>OUT OPTIONAL EXCEPINFO* pExceptInfo); <br> <br>HRESULT <br>SspFreeByteArray( <br>IN LPBYTE pbyArray, <br>OUT OPTIONAL EXCEPINFO* pExceptInfo); <br> <br> <br>#endif // __CRITSEC_H__ <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
