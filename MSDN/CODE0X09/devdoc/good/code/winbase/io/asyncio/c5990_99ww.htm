<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5990"></a>README.TXT</h2>
<pre><code>Pattern Matching Search <br> <br> <br>SUMMARY <br>======= <br> <br>The PDC sample is a character mode program for searching the files in a  <br>directory tree for a match against a pattern. It uses multiple threads, with  <br>each thread processing a file at a time, accumulating its matches and  <br>outputting them to standard output contiguously when it is done searching  <br>a file. <br> <br>MORE INFORMATION <br>================ <br> <br>This program demonstrates how to use many of the advanced operating system <br>features provided by the Win32 API. The features that this program  <br>demonstrates are: <br> <br>  - Creating multiple threads, using synchronization objects <br>  - Thread termination <br>  - Virtual memory commitment versus reservation <br>  - Structured exception handling, using an exception filter procedure  <br>  - Enumeration of directory entries <br>  - File mapping <br>  - Asynchronous file I/O using a completion routine <br>  - Synchronous file I/O <br> <br>The command-line syntax is: <br> <br>PDC [-h] [-v] [-y] [-a | -s | -m] [-t n] SearchString [DirectoryPath] <br> <br>where: <br>    h - Prints this message. <br>    v - Generates verbose output. <br>    y - Ignores case when doing comparisons. <br>    a - Specifies that the program should use asynchronous file I/O to read  <br>        the files being searched. <br>    s - Specifies that the program should use synchronous file I/O to read  <br>        the files being searched. <br>    m - Specifies that the program should use mapped file I/O to read the  <br>        files being searched. <br>    t - Specifies the number of threads to use when doing the search.  <br>        Default is 4 * the number of processors. <br>    SearchString - Specifies the text to search for. Enclose in quotes if it  <br>        contains spaces or punctuation. <br>    DirectoryPath - Specifies the root of the tree to begin the search at.  <br>        Defaults to the current directory. </code></pre>
<p>&nbsp;</p></body>
</HTML>
