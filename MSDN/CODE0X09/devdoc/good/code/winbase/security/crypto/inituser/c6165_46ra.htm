<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INITUSER.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6166"></a>INITUSER.C</h2>
<pre><code>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1996 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>#include &lt;windows.h&gt; <br>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include &lt;wincrypt.h&gt; <br> <br>/*****************************************************************************/ <br>void _cdecl main(void) <br>{ <br>    HCRYPTPROV hProv; <br>    HCRYPTKEY hKey; <br>    CHAR szUserName[100]; <br>    DWORD dwUserNameLen = 100; <br> <br>    // Attempt to acquire a handle to the default key container. <br>    if(!CryptAcquireContext(&amp;hProv, NULL, MS_DEF_PROV, PROV_RSA_FULL, 0)) { <br>// Some sort of error occured. <br> <br>// Create default key container. <br>if(!CryptAcquireContext(&amp;hProv, NULL, MS_DEF_PROV, PROV_RSA_FULL, CRYPT_NEWKEYSET)) { <br>    printf("Error creating key container!\n"); <br>    exit(1); <br>} <br> <br>// Get name of default key container. <br>if(!CryptGetProvParam(hProv, PP_CONTAINER, szUserName, &amp;dwUserNameLen, 0)) { <br>    // Error getting key container name. <br>    szUserName[0] = 0; <br>} <br> <br>printf("Create key container '%s'\n",szUserName); <br>    } <br> <br>    // Attempt to get handle to signature key. <br>    if(!CryptGetUserKey(hProv, AT_SIGNATURE, &amp;hKey)) { <br>if(GetLastError() == NTE_NO_KEY) { <br>    // Create signature key pair. <br>    printf("Create signature key pair\n"); <br> <br>    if(!CryptGenKey(hProv,AT_SIGNATURE,0,&amp;hKey)) { <br>printf("Error %x during CryptGenKey!\n", GetLastError()); <br>exit(1); <br>    } else { <br>CryptDestroyKey(hKey); <br>    } <br>} else { <br>    printf("Error %x during CryptGetUserKey!\n", GetLastError()); <br>    exit(1); <br>} <br>    } <br> <br>    // Attempt to get handle to exchange key. <br>    if(!CryptGetUserKey(hProv,AT_KEYEXCHANGE,&amp;hKey)) { <br>if(GetLastError()==NTE_NO_KEY) { <br>    // Create key exchange key pair. <br>    printf("Create key exchange key pair\n"); <br> <br>    if(!CryptGenKey(hProv,AT_KEYEXCHANGE,0,&amp;hKey)) { <br>printf("Error %x during CryptGenKey!\n", GetLastError()); <br>exit(1); <br>    } else { <br>CryptDestroyKey(hKey); <br>    } <br>} else { <br>    printf("Error %x during CryptGetUserKey!\n", GetLastError()); <br>    exit(1); <br>} <br>    } <br> <br>    CryptReleaseContext(hProv,0); <br> <br>    printf("OK\n"); <br> <br>    exit(0); <br>} <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
