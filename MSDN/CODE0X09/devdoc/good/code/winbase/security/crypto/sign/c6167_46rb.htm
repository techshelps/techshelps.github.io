<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6167"></a>README.TXT</h2>
<pre><code>File Signature <br> <br> <br>The SIGNFILE sample is a console application that signs files. Files <br>signed with this sample can be later verified with the VERIFILE sample. <br> <br>Note that the INITUSER sample (or equivalent) must be run prior to running <br>these samples, in order to create a key container for the default user. <br> <br>Usage <br>----- <br> <br>The SIGNFILE sample is run from the command line as follows: <br> <br>    signfile &lt;source file&gt; &lt;signature file&gt; &lt;description&gt; <br> <br>The &lt;source file&gt; argument specifies the filename of the file to be signed, <br>and the &lt;signature file&gt; argument specifies the filename of the file in which <br>to place the signature data. The &lt;description&gt; argument specifies a textual <br>description of the data being signed. This can consist of empty quotes ("") <br>if no description is required. See CryptSignHash in the online documentation <br>for more information on signatures and description strings. <br> <br>The VERIFILE sample is run with the same arguments as SIGNFILE. If the <br>contents of the source file, signature file, or description string has <br>changed in any way from when the file was originally signed, the program <br>will fail. <br> <br>Exercises for the Reader <br>------------------------ <br> <br>1. These samples would be more useful if the signature public key was stored <br>   in the signature file along with the signature data. This public key would <br>   need to be wrapped in a certificate (also known as a credential) to protect <br>   it from unauthorized modification. If this were to be done, then the data <br>   file and its signature could be verified by anyone, even if the original <br>   key pair used to produce the signature is destroyed. <br> <br>2. The SIGNFILE sample could be easily modified such that the description data <br>   is stored in the signature file (in a non-encrypted format) along with the <br>   signature data. The VERIFILE sample could then read the description from <br>   the signature file, instead of requiring it as a command line argument. </code></pre>
<p>&nbsp;</p></body>
</HTML>
