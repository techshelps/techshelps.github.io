<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CERTEXIT.CPP</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6122"></a>CERTEXIT.CPP</h2>
<pre><code>//+-------------------------------------------------------------------------- <br>// <br>// Microsoft Windows <br>// Copyright (C) Microsoft Corporation, 1996-1997 <br>// <br>// File:        certcli.cpp <br>// <br>// Contents:    Cert Server Exit Module implementation <br>// <br>//--------------------------------------------------------------------------- <br> <br>#include "pch.cpp" <br> <br>#pragma hdrstop <br> <br>#include "exit.h" <br> <br>CComModule _Module; <br> <br>BEGIN_OBJECT_MAP(ObjectMap) <br>    OBJECT_ENTRY(CLSID_CCertExit, CCertExit) <br>END_OBJECT_MAP() <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// DLL Entry Point <br> <br>extern "C" <br>BOOL WINAPI <br>DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID /*lpReserved*/) <br>{ <br>    switch (dwReason) <br>    { <br>case DLL_PROCESS_ATTACH: <br>    _Module.Init(ObjectMap, hInstance); <br>    DisableThreadLibraryCalls(hInstance); <br>    break; <br> <br>        case DLL_PROCESS_DETACH: <br>    _Module.Term(); <br>            break; <br>    } <br>    return(TRUE);    // ok <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Used to determine whether the DLL can be unloaded by OLE <br> <br>STDAPI <br>DllCanUnloadNow(void) <br>{ <br>    return(_Module.GetLockCount() == 0? S_OK : S_FALSE); <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Returns a class factory to create an object of the requested type <br> <br>STDAPI <br>DllGetClassObject(REFCLSID rclsid, REFIID riid, LPVOID* ppv) <br>{ <br>    return(_Module.GetClassObject(rclsid, riid, ppv)); <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// DllRegisterServer - Adds entries to the system registry <br> <br>STDAPI <br>DllRegisterServer(void) <br>{ <br>    // registers object, typelib and all interfaces in typelib <br>    return(_Module.RegisterServer(TRUE)); <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// DllUnregisterServer - Removes entries from the system registry <br> <br>STDAPI <br>DllUnregisterServer(void) <br>{ <br>    _Module.UnregisterServer(); <br>    return(S_OK); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
