<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CERTEXIT.IDL</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6123"></a>CERTEXIT.IDL</h2>
<pre><code>//+-------------------------------------------------------------------------- <br>// <br>// Microsoft Windows <br>// Copyright (C) Microsoft Corporation, 1996-1996 <br>// <br>// File:        certexit.idl <br>// <br>// Contents:    IDL source for certexit.dll <br>// <br>//--------------------------------------------------------------------------- <br> <br>// This file will be processed by the MIDL tool to produce the type library <br>// (certexit.tlb) and marshalling code. <br> <br>import "wtypes.idl"; <br> <br>const LONG EXITEVENT_INVALID =       0x00000000;// invalid event <br>const LONG EXITEVENT_CERTISSUED =   0x00000001;// Certificate issued <br>const LONG EXITEVENT_CERTPENDING =   0x00000002;// Certificate pending <br>const LONG EXITEVENT_CERTDENIED =    0x00000004;// Certificate denied <br>const LONG EXITEVENT_CERTREVOKED =    0x00000008;// Certificate revoked <br>const LONG EXITEVENT_CERTRETRIEVEPENDING = 0x00000010;// Certificate retrieval <br>const LONG EXITEVENT_CRLISSUED =   0x00000020;// CRL issued <br>const LONG EXITEVENT_SHUTDOWN =   0x00000040;// Server shutdown <br> <br> <br>//+-------------------------------------------------------------------------- <br>// ICertExit class -- local COM interface, local implementation <br>//+-------------------------------------------------------------------------- <br> <br>[ <br>    object, <br>    uuid(e19ae1a0-7364-11d0-8816-00a0c903b83c), <br>    dual, <br>    helpstring("ICertExit Interface"), <br>    pointer_default(unique) <br>] <br> <br>interface ICertExit: IDispatch <br>{ <br>    import "oaidl.idl"; <br> <br>    HRESULT Initialize( <br>[in] BSTR const strConfig, <br>[out, retval] LONG *pEventMask); <br> <br>    HRESULT Notify( <br>[in] LONG Event, <br>[in] LONG Context); <br> <br>    HRESULT GetDescription( <br>[out, retval] BSTR *pstrDescription); <br>}; <br> <br> <br>//+-------------------------------------------------------------------------- <br>// certexit Type library <br>//+-------------------------------------------------------------------------- <br> <br>[ <br>    uuid(e1f81810-7364-11d0-8816-00a0c903b83c), <br>    version(1.0), <br>    helpstring("CertExit 1.0 Type Library") <br>] <br> <br>library CERTEXITLib <br>{ <br>    importlib("stdole2.tlb"); <br> <br>    [ <br>uuid(c9e6e410-7364-11d0-8816-00a0c903b83c), <br>helpstring("CertExit Class") <br>    ] <br>    coclass CCertExit <br>    { <br>[default] interface ICertExit; <br>    }; <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
