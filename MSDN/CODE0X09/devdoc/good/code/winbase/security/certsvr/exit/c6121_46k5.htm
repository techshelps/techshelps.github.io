<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EXIT.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6125"></a>EXIT.H</h2>
<pre><code>//+-------------------------------------------------------------------------- <br>// <br>// Microsoft Windows <br>// Copyright (C) Microsoft Corporation, 1996-1997 <br>// <br>// File:        exit.cpp <br>// <br>// Contents:    CCertExit definition <br>// <br>//--------------------------------------------------------------------------- <br> <br>#include "resource.h"       // main symbols <br>#include &lt;certexit.h&gt; <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// certexit <br> <br> <br>class CCertExit:  <br>    public CComDualImpl&lt;ICertExit, &amp;IID_ICertExit, &amp;LIBID_CERTEXITLib&gt;,  <br>    public ISupportErrorInfo, <br>    public CComObjectRoot, <br>    public CComCoClass&lt;CCertExit, &amp;CLSID_CCertExit&gt; <br>{ <br>public: <br>    CCertExit() { m_strConfig = NULL; } <br>    ~CCertExit(); <br> <br>BEGIN_COM_MAP(CCertExit) <br>    COM_INTERFACE_ENTRY(IDispatch) <br>    COM_INTERFACE_ENTRY(ICertExit) <br>    COM_INTERFACE_ENTRY(ISupportErrorInfo) <br>END_COM_MAP() <br> <br>DECLARE_NOT_AGGREGATABLE(CCertExit)  <br> <br>DECLARE_REGISTRY( <br>    CCertExit, <br>    wszCLASS_CERTEXIT TEXT(".1"), <br>    wszCLASS_CERTEXIT, <br>    IDS_CERTEXIT_DESC, <br>    THREADFLAGS_BOTH) <br> <br>    // ISupportsErrorInfo <br>    STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid); <br> <br>    // ICertExit <br>public: <br>    STDMETHOD(Initialize)(  <br>            /* [in] */ BSTR const strConfig, <br>            /* [retval][out] */ LONG __RPC_FAR *pEventMask); <br> <br>    STDMETHOD(Notify)( <br>            /* [in] */ LONG Event, <br>            /* [in] */ LONG Context); <br> <br>    STDMETHOD(GetDescription)(  <br>            /* [retval][out] */ BSTR *pstrDescription); <br> <br>private: <br>    // Member variables &amp; private methods here: <br>    BSTR m_strConfig; <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
