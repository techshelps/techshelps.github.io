<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>POLICY.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6136"></a>POLICY.H</h2>
<pre><code>// policy.h: Declaration of CCertPolicy <br> <br> <br>#include "resource.h"       // main symbols <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// certpol <br> <br>#define REVTYPE_NONE0x00000000 <br>#define REVTYPE_CRLDIST0x00000001 <br>#define REVTYPE_NETSCAPE0x00000003 <br> <br>#define CERTTYPE_NONE           0x00000000 <br>#define CERTTYPE_NETSCAPE       0x00000001 <br> <br>class CCertPolicy:  <br>    public CComDualImpl&lt;ICertPolicy, &amp;IID_ICertPolicy, &amp;LIBID_CERTPOLICYLib&gt;,  <br>    public ISupportErrorInfo, <br>    public CComObjectRoot, <br>    public CComCoClass&lt;CCertPolicy, &amp;CLSID_CCertPolicy&gt; <br>{ <br>public: <br>    CCertPolicy() <br>    { <br>// RevocationExtension variables: <br> <br>m_RevocationType = REVTYPE_NONE; <br>m_apstrRevocationURL = NULL; <br> <br> <br>// CertTypeExtension variables: <br> <br>m_CertType = CERTTYPE_NONE; <br> <br> <br>// SubjectAltNameExtension variables: <br> <br>m_astrSubjectAltNameProp[0] = NULL; <br>m_astrSubjectAltNameProp[1] = NULL; <br>m_astrSubjectAltNameObjectId[0] = NULL; <br>m_astrSubjectAltNameObjectId[1] = NULL; <br>    } <br>    ~CCertPolicy(); <br> <br>BEGIN_COM_MAP(CCertPolicy) <br>    COM_INTERFACE_ENTRY(IDispatch) <br>    COM_INTERFACE_ENTRY(ICertPolicy) <br>    COM_INTERFACE_ENTRY(ISupportErrorInfo) <br>END_COM_MAP() <br> <br>DECLARE_NOT_AGGREGATABLE(CCertPolicy)  <br>// Remove the comment from the line above if you don't want your object to  <br>// support aggregation.  The default is to support it <br> <br>DECLARE_REGISTRY( <br>    CCertPolicy, <br>    wszCLASS_CERTPOLICY TEXT(".1"), <br>    wszCLASS_CERTPOLICY, <br>    IDS_CERTPOLICY_DESC, <br>    THREADFLAGS_BOTH) <br> <br>// ISupportsErrorInfo <br>    STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid); <br> <br>// ICertPolicy <br>public: <br>    STDMETHOD(Initialize)(  <br>    /* [in] */ BSTR const strConfig); <br> <br>    STDMETHOD(VerifyRequest)(  <br>    /* [in] */ BSTR const strConfig, <br>    /* [in] */ LONG Context, <br>    /* [in] */ LONG bNewRequest, <br>    /* [in] */ LONG Flags, <br>    /* [out, retval] */ LONG __RPC_FAR *pDisposition); <br> <br>    STDMETHOD(GetDescription)(  <br>    /* [out, retval] */ BSTR __RPC_FAR *pstrDescription); <br> <br>    STDMETHOD(ShutDown)(); <br> <br>private: <br>    VOID _Cleanup(); <br> <br>    VOID _InitRevocationExtension(IN HKEY hkey); <br>    VOID _InitCertTypeExtension(IN HKEY hkey); <br>    VOID _InitSubjectAltNameExtension( <br>IN HKEY hkey, <br>IN WCHAR const *pwszRegName, <br>IN WCHAR const *pwszObjectId, <br>IN DWORD iAltName); <br> <br>    HRESULT _AddRevocationExtension(IN ICertServerPolicy *pServer); <br>    HRESULT _AddCertTypeExtension(IN ICertServerPolicy *pServer); <br>    HRESULT _AddSubjectAltNameExtension( <br>IN ICertServerPolicy *pServer, <br>IN DWORD iAltName); <br> <br>    // Add local variables here! <br> <br>    // RevocationExtension variables: <br> <br>    DWORD m_RevocationType; <br>    DWORD m_cRevocationURL; <br>    BSTR *m_apstrRevocationURL; <br> <br>    // CertTypeExtension variables: <br> <br>    DWORD m_CertType; <br> <br>    // SubjectAltNameExtension variables: <br> <br>    BSTR m_astrSubjectAltNameProp[2]; <br>    BSTR m_astrSubjectAltNameObjectId[2]; <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
