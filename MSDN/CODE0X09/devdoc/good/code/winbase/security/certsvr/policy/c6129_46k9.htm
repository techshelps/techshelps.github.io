<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6129"></a>README.TXT</h2>
<pre><code>The source code in this directory can be used to build a sample Policy Module <br>for the Microsoft Certificate Server.  It is meant to run on Windows NT 4.0 <br>with SP3 or later or on Windows NT 5.0 only.  The Certificate Server must <br>already be installed. <br> <br>The Certificate Server calls the Policy Module through the ICertPolicy <br>interface, and the Policy Module can call back to the Certificate Server <br>through the ICertServerPolicy interface. <br> <br>Each time the Certificate Server receives a certificate request, it passes <br>control to the CCertPolicy::VerifyRequest method in policy.cpp.  The passed <br>Context parameter is used with the ICertServerPolicy interface to retrieve <br>properties from the request and potential certificate.  The VerifyRequest <br>method may add, modify or enable Certificate Extensions, modify the NotBefore <br>and NotAfter dates and Subject name RDN (Relative Distinguished Name) strings <br>for the potential certificate.  It must also perform any validation required, <br>and decide the disposition of the request.  The method should return one of <br>VR_PENDING, VR_INSTANT_OK or VR_INSTANT_BAD to cause the request to be made <br>pending, to grant the request and issue the certificate, or to fail the <br>request. <br> <br>Once the certpdef.dll DLL is built, its COM interface must be registered <br>via the following command: <br>    regsvr32 certpdef.dll <br>and the Certificate Server service must be stopped and restarted to load <br>the newly registered Policy Module.  Use the Control Panel's Services applet, <br>and stop and restart the "Certificate Authority" service. <br> <br>If you wish to see the printf output from the sample Policy Module, register <br>the Policy Module and stop the Certificate Server service as above, then start <br>the Certificate Server as a console application via the following <br>command: <br>    certsrv -z <br> <br>Files: <br>------ <br>atl.cpp      -- ActiveX Template Library COM support code <br> <br>certpdef.cpp -- Implements COM and initialization entry points: <br>DllMain <br>DllCanUnloadNow <br>DllGetClassObject <br>DllRegisterServer <br>DllUnregisterServer <br> <br>certpdef.def -- Exports COM entry points <br> <br>certpdef.rc  -- Version Resource <br> <br>lib.cpp      -- Implements a routine to convert a string to BSTR <br> <br>lib.h        -- Prototype for routine to convert a string to BSTR <br> <br>pch.cpp      -- Precompiled Header file <br> <br>policy.cpp   -- Implements ICertPolicy <br> <br>policy.h     -- Implements ICertPolicy <br> <br>resource.h   -- Resource ID definitions </code></pre>
<p>&nbsp;</p></body>
</HTML>
