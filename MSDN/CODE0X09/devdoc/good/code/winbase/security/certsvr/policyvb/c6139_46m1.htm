<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6139"></a>README.TXT</h2>
<pre><code>The source code in this directory can be used to build a sample Policy Module <br>for the Microsoft Certificate Server.  It is meant to run on Windows NT 4.0 <br>with SP3 or later or on Windows NT 5.0 only.  The Certificate Server must <br>already be installed. <br> <br>The Certificate Server calls the Policy Module through the ICertPolicy <br>interface, and the Policy Module can call back to the Certificate Server <br>through the ICertServerPolicy interface. <br> <br>Each time the Certificate Server receives a certificate request, it passes <br>control to the CCertPolicy::VerifyRequest method in policy.cpp.  The passed <br>Context parameter is used with the ICertServerPolicy interface to retrieve <br>properties from the request and potential certificate.  The VerifyRequest <br>method may add, modify or enable Certificate Extensions, modify the NotBefore <br>and NotAfter dates and Subject name RDN (Relative Distinguished Name) strings <br>for the potential certificate.  It must also perform any validation required, <br>and decide the disposition of the request.  The method should return one of <br>VR_PENDING, VR_INSTANT_OK or VR_INSTANT_BAD to cause the request to be made <br>pending, to grant the request and issue the certificate, or to fail the <br>request. <br> <br>Once the policyvb.dll DLL is built, its COM interface must be registered <br>via the following command: <br>    regsvr32 policyvb.dll <br>the Certificate Server service must then be stopped and restarted as a console <br>application to load the newly registered Policy Module.  Use the Control <br>Panel's Services applet, and stop the "Certificate Authority" service, then <br>start the Certificate Server as a console application via the following <br>command: <br>    certsrv -z <br> <br>NOTE: Because this VB Policy Module uses an Interactive Form to display <br>information passed in the certificate request, IT MUST BE STARTED VIA THE <br>ABOVE COMMAND AS A CONSOLE APPLICATION in order to interact with the desktop <br>to display the form and accept the user's input. <br> <br> <br>Files: <br>------ <br>const.bas    -- Constant definitions <br> <br>main.bas     -- main definition <br> <br>mssccprj.scc -- stub source code control file <br> <br>policy.cls   -- Implements ICertPolicy <br> <br>policyvb.frm -- Form definition <br> <br>policyvb.vbp -- VB Project file <br> <br>policyvb.vbw -- VB Workspace file </code></pre>
<p>&nbsp;</p></body>
</HTML>
