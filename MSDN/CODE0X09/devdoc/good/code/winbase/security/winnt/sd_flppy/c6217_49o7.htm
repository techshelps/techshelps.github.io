<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6217"></a>README.TXT</h2>
<pre><code>How to Put a DACL on Floppy Drives <br> <br> <br>SUMMARY <br>======= <br> <br>There is no way to put a DACL on the floppy drives or on <br>the COM ports with REGEDT32, or using the Control Panel or other <br>part of the user interface. Also, there is no way to use the <br>Win32 API to put a DACL on the floppy drives or on the COM ports <br>that survives reboots. <br> <br>However, the SD_FLPPY sample does put DACLs on the floppy drives or on <br>the COM ports that survive logoff and logon; that is, these DACLs <br>are on the floppy drives or on the COM ports until the next reboot. <br>This sample is a good starting place for anyone writing code to apply DACLs. <br> <br>A version of this sample program can be installed as a service, so <br>that each time the machine boots up the DACLs are automatically re-applied. <br> <br>This sample is not a supported utility. <br> <br>MORE INFORMATION <br>================ <br> <br>There are possibly as many desired user interfaces to this sort of <br>functionality as there are people thinking about this, so it is <br>not a purpose of this sample (or the service variation of <br>it) to present an incredibly cool user interface to how the <br>DACLs get applied. A very simplistic approach is taken to the <br>user interface. <br> <br>To run <br>------ <br> <br>Type sd_flppy to lock the \\.\A: and \\.\B: devices. <br> <br>You can optionally put SD_FLPPY.EXE in the Startup group or a logon script. <br> <br>Notes <br>----- <br> <br>The version of this program that is packaged as a service is <br>in this same directory and is built along with SD_FLPPY.EXE by <br>the same makefile. <br> <br>The packaged-as-a-service approach might better suit people who <br>need to change the DACL on the floppy drives without requiring a <br>reboot or logoff. After installing the FLOPLOCK service on <br>the machine, the client application, CHGFLPSD can be used over the <br>network to lock, unlock or query the floppy-locked-state of any <br>machine where the FLOPLOCK service is running. <br> <br>So, this packaged-as-a-service approach might better suit people <br>that would like to be able to inquire over the net what the <br>DACLs are on the floppy drives of particular machines (to check <br>or audit them). This approach might better suit people that <br>would prefer that the DACLs be applied as the system boots up so <br>the DACLs are applied before any user has logged on at the keyboard. <br> <br>The packaged-as-a-service approach is more aligned with the notion <br>of protecting the floppies as a resource on a particular <br>_machine_ (regardless of who if anyone is logged on), whereas <br>the SD_FLPPY approach (running an .exe at logon time) is <br>more along the lines of keeping a particular user from using <br>the floppies on any machine that that user might use. However, <br>once the user has logged onto the machine and locked the <br>floppies with SD_FLPPY the floppies will stay locked until <br>reboot. Of course a utility could easily be written that could <br>run in the startup group of a different authorized user to force the <br>floppies on any machine this user logs onto to be unlocked. <br> <br>As noted above, the FLOPLOCK service is built by the single <br>makefile in this directory. FLOPLOCK.EXE is the main element of <br>the packaged-as-a-service version. FLOPLOCK installs as a service, using <br>INSTSRV.EXE. INSTSRV.EXE, as well as CHGFLPSD.EXE, is also built by the <br>single makefile in this directory <br> <br>Run "instsrv" to get help on the switches to use when running <br>INSTSRV.EXE to install the service. <br> <br>FLOPLOCK creates a named pipe which CHGFLPSD opens to pass <br>over the lock/unlock/query operations to a particular machine <br>running FLOPLOCK.EXE - the named pipe is at all times protected <br>by an Admins-only DACL <br> <br>Run "chgflpsd" to get help on the switches to use when running <br>CHGFLPSD.EXE. </code></pre>
<p>&nbsp;</p></body>
</HTML>
