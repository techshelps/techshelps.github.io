<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>UTIL.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6192"></a>UTIL.C</h2>
<pre><code>//+--------------------------------------------------------------------------- <br>// <br>//  Microsoft Windows <br>//  Copyright 1992 - 1998 Microsoft Corporation. <br>// <br>//  File:       util.c <br>// <br>//  Contents: <br>// <br>//  Classes: <br>// <br>//  Functions: <br>// <br>//  History:    4-20-95   RichardW   Created <br>// <br>//---------------------------------------------------------------------------- <br> <br>#include "gina.h" <br>#pragma hdrstop <br> <br>HMODULE hNetMsg = NULL; <br> <br>//+--------------------------------------------------------------------------- <br>// <br>//  Function:   CenterWindow <br>// <br>//  Synopsis:   Centers a window <br>// <br>//  Arguments:  [hwnd] -- <br>// <br>//  Notes: <br>// <br>//---------------------------------------------------------------------------- <br>VOID <br>CenterWindow( <br>    HWND    hwnd <br>    ) <br>{ <br>    RECT    rect; <br>    LONG    dx, dy; <br>    LONG    dxParent, dyParent; <br>    LONG    Style; <br> <br>    // Get window rect <br>    GetWindowRect(hwnd, &amp;rect); <br> <br>    dx = rect.right - rect.left; <br>    dy = rect.bottom - rect.top; <br> <br>    // Get parent rect <br>    Style = GetWindowLong(hwnd, GWL_STYLE); <br>    if ((Style &amp; WS_CHILD) == 0) { <br> <br>        // Return the desktop windows size (size of main screen) <br>        dxParent = GetSystemMetrics(SM_CXSCREEN); <br>        dyParent = GetSystemMetrics(SM_CYSCREEN); <br>    } else { <br>        HWND    hwndParent; <br>        RECT    rectParent; <br> <br>        hwndParent = GetParent(hwnd); <br>        if (hwndParent == NULL) { <br>            hwndParent = GetDesktopWindow(); <br>        } <br> <br>        GetWindowRect(hwndParent, &amp;rectParent); <br> <br>        dxParent = rectParent.right - rectParent.left; <br>        dyParent = rectParent.bottom - rectParent.top; <br>    } <br> <br>    // Centre the child in the parent <br>    rect.left = (dxParent - dx) / 2; <br>    rect.top  = (dyParent - dy) / 3; <br> <br>    // Move the child into position <br>    SetWindowPos(hwnd, HWND_TOPMOST, rect.left, rect.top, 0, 0, SWP_NOSIZE); <br> <br>    SetForegroundWindow(hwnd); <br>} <br> <br> <br>int <br>ErrorMessage( <br>    HWND        hWnd, <br>    PWSTR       pszTitleBar, <br>    DWORD       Buttons) <br>{ <br>    WCHAR   szMessage[256]; <br>    DWORD   GLE; <br> <br>    GLE = GetLastError(); <br> <br>    if (GLE &gt;= NERR_BASE) <br>    { <br>        if (!hNetMsg) <br>        { <br>            hNetMsg = LoadLibrary(TEXT("netmsg.dll")); <br>        } <br>        FormatMessage( <br>            FORMAT_MESSAGE_FROM_HMODULE | FORMAT_MESSAGE_IGNORE_INSERTS, <br>            hNetMsg,                               // ignored <br>            GLE,                                  // message id <br>            MAKELANGID(LANG_ENGLISH, SUBLANG_ENGLISH_US),   // message language <br>            szMessage,                  // address of buffer pointer <br>            199,                                  // minimum buffer size <br>            NULL );                              // no other arguments <br> <br>    } <br> <br>    FormatMessage( <br>            FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS, <br>            NULL,                               // ignored <br>            (GetLastError()),                     // message id <br>            MAKELANGID(LANG_ENGLISH, SUBLANG_ENGLISH_US),   // message language <br>            szMessage,                  // address of buffer pointer <br>            199,                                  // minimum buffer size <br>            NULL );                              // no other arguments <br> <br>    return(MessageBox(hWnd, szMessage, pszTitleBar, Buttons)); <br> <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
