<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COLLECT.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6228"></a>COLLECT.C</h2>
<pre><code>/*++ <br> <br>Copyright 1996 - 1998 Microsoft Corporation <br> <br>Module Name: <br> <br>    collect.c <br> <br>Abstract: <br> <br>    Implements a very simple collection for mapping DWORD key values <br>to a blob of data. <br> <br>Revision History: <br> <br>--*/ <br> <br>#include &lt;windows.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include "collect.h" <br> <br>typedef struct _node_tag  { <br>DWORD dwKey; <br>PVOID *pData; <br>struct _node_tag *pNext; <br>} NODE, *PNODE; <br> <br>static NODE Head = {(DWORD)-1, NULL, NULL}; <br> <br>BOOL GetEntry (DWORD dwKey, PVOID *ppData) <br>{ <br>PNODE pCurrent; <br> <br>pCurrent = Head.pNext; <br>while (NULL != pCurrent) { <br>if (dwKey == pCurrent-&gt;dwKey)  { <br>*ppData = pCurrent-&gt;pData; <br>return(TRUE); <br>} <br>pCurrent = pCurrent-&gt;pNext; <br>} <br> <br>return(FALSE); <br>} <br> <br>BOOL AddEntry (DWORD dwKey, PVOID pData) <br>{ <br>PNODE pTemp; <br> <br>pTemp = (PNODE) malloc (sizeof (NODE)); <br>if (NULL == pTemp)  { <br>return(FALSE); <br>} <br> <br>pTemp-&gt;dwKey = dwKey; <br>pTemp-&gt;pData = pData; <br>pTemp-&gt;pNext = Head.pNext; <br>Head.pNext = pTemp; <br> <br>return(TRUE); <br>} <br> <br>BOOL DeleteEntry (DWORD dwKey, PVOID *ppData) <br>{ <br>PNODE pCurrent, pTemp; <br> <br>pTemp = &amp;Head; <br>pCurrent = Head.pNext; <br> <br>while (NULL != pCurrent) { <br>if (dwKey == pCurrent-&gt;dwKey)  { <br>pTemp-&gt;pNext = pCurrent-&gt;pNext; <br>*ppData = pCurrent-&gt;pData; <br>free (pCurrent); <br>return(TRUE); <br>} <br>else { <br>pTemp = pCurrent; <br>pCurrent = pCurrent-&gt;pNext; <br>} <br>} <br> <br>return(FALSE); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
