<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SUBAUTH.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6205"></a>SUBAUTH.H</h2>
<pre><code>/*++ BUILD Version: 0005     Increment this if a change has global effects <br> <br>Copyright (c) 1990-1997  Microsoft Corporation <br> <br>Module Name: <br> <br>    subauth.h <br> <br>Abstract: <br> <br>    This module defines types and macros for Subauthentication Packages. <br> <br>Revision History: <br> <br>--*/ <br> <br>#ifndef _NTSUBAUTH_ <br>#define _NTSUBAUTH_ <br> <br>#ifdef __cplusplus <br>extern "C" { <br>#endif <br> <br>#ifndef _NTDEF_ <br>typedef LONG NTSTATUS, *PNTSTATUS; <br> <br>typedef struct _UNICODE_STRING { <br>    USHORT Length; <br>    USHORT MaximumLength; <br>    PWSTR Buffer; <br>} UNICODE_STRING, *PUNICODE_STRING; <br> <br>typedef struct _STRING { <br>    USHORT Length; <br>    USHORT MaximumLength; <br>    PCHAR Buffer; <br>} STRING, *PSTRING; <br> <br>typedef LARGE_INTEGER OLD_LARGE_INTEGER; <br>typedef LARGE_INTEGER POLD_LARGE_INTEGER; <br> <br>#define NT_SUCCESS(Status) ((NTSTATUS)(Status) &gt;= 0) <br> <br>#endif <br> <br>typedef PVOID SAM_HANDLE, *PSAM_HANDLE;   <br> <br>// <br>// User account control flags... <br>// <br> <br>#define USER_ACCOUNT_DISABLED          (0x00000001) <br>#define USER_HOME_DIRECTORY_REQUIRED   (0x00000002) <br>#define USER_PASSWORD_NOT_REQUIRED     (0x00000004) <br>#define USER_TEMP_DUPLICATE_ACCOUNT    (0x00000008) <br>#define USER_NORMAL_ACCOUNT            (0x00000010) <br>#define USER_MNS_LOGON_ACCOUNT         (0x00000020) <br>#define USER_INTERDOMAIN_TRUST_ACCOUNT (0x00000040) <br>#define USER_WORKSTATION_TRUST_ACCOUNT (0x00000080) <br>#define USER_SERVER_TRUST_ACCOUNT      (0x00000100) <br>#define USER_DONT_EXPIRE_PASSWORD      (0x00000200) <br>#define USER_ACCOUNT_AUTO_LOCKED       (0x00000400) <br> <br> <br>#define USER_MACHINE_ACCOUNT_MASK      \ <br>            ( USER_INTERDOMAIN_TRUST_ACCOUNT |\ <br>              USER_WORKSTATION_TRUST_ACCOUNT |\ <br>              USER_SERVER_TRUST_ACCOUNT) <br> <br>#define USER_ACCOUNT_TYPE_MASK         \ <br>            ( USER_TEMP_DUPLICATE_ACCOUNT |\ <br>              USER_NORMAL_ACCOUNT |\ <br>              USER_MACHINE_ACCOUNT_MASK ) <br> <br> <br>// <br>// Logon times may be expressed in day, hour, or minute granularity. <br>// <br>//              Days per week    = 7 <br>//              Hours per week   = 168 <br>//              Minutes per week = 10080 <br>// <br> <br>#define SAM_DAYS_PER_WEEK    (7) <br>#define SAM_HOURS_PER_WEEK   (24 * SAM_DAYS_PER_WEEK) <br>#define SAM_MINUTES_PER_WEEK (60 * SAM_HOURS_PER_WEEK) <br> <br>typedef struct _LOGON_HOURS { <br> <br>    USHORT UnitsPerWeek; <br> <br>    // <br>    // UnitsPerWeek is the number of equal length time units the week is <br>    // divided into.  This value is used to compute the length of the bit <br>    // string in logon_hours.  Must be less than or equal to <br>    // SAM_UNITS_PER_WEEK (10080) for this release. <br>    // <br>    // LogonHours is a bit map of valid logon times.  Each bit represents <br>    // a unique division in a week.  The largest bit map supported is 1260 <br>    // bytes (10080 bits), which represents minutes per week.  In this case <br>    // the first bit (bit 0, byte 0) is Sunday, 00:00:00 - 00-00:59; bit 1, <br>    // byte 0 is Sunday, 00:01:00 - 00:01:59, etc.  A NULL pointer means <br>    // DONT_CHANGE for SamSetInformationUser() calls. <br>    // <br> <br>    PUCHAR LogonHours; <br> <br>} LOGON_HOURS, *PLOGON_HOURS; <br> <br>typedef struct _SR_SECURITY_DESCRIPTOR { <br>    ULONG Length; <br>    PUCHAR SecurityDescriptor; <br>} SR_SECURITY_DESCRIPTOR, *PSR_SECURITY_DESCRIPTOR; <br> <br>#include "pshpack4.h" <br>typedef struct _USER_ALL_INFORMATION { <br>    LARGE_INTEGER LastLogon; <br>    LARGE_INTEGER LastLogoff; <br>    LARGE_INTEGER PasswordLastSet; <br>    LARGE_INTEGER AccountExpires; <br>    LARGE_INTEGER PasswordCanChange; <br>    LARGE_INTEGER PasswordMustChange; <br>    UNICODE_STRING UserName; <br>    UNICODE_STRING FullName; <br>    UNICODE_STRING HomeDirectory; <br>    UNICODE_STRING HomeDirectoryDrive; <br>    UNICODE_STRING ScriptPath; <br>    UNICODE_STRING ProfilePath; <br>    UNICODE_STRING AdminComment; <br>    UNICODE_STRING WorkStations; <br>    UNICODE_STRING UserComment; <br>    UNICODE_STRING Parameters; <br>    UNICODE_STRING LmPassword; <br>    UNICODE_STRING NtPassword; <br>    UNICODE_STRING PrivateData; <br>    SR_SECURITY_DESCRIPTOR SecurityDescriptor; <br>    ULONG UserId; <br>    ULONG PrimaryGroupId; <br>    ULONG UserAccountControl; <br>    ULONG WhichFields; <br>    LOGON_HOURS LogonHours; <br>    USHORT BadPasswordCount; <br>    USHORT LogonCount; <br>    USHORT CountryCode; <br>    USHORT CodePage; <br>    BOOLEAN LmPasswordPresent; <br>    BOOLEAN NtPasswordPresent; <br>    BOOLEAN PasswordExpired; <br>    BOOLEAN PrivateDataSensitive; <br>} USER_ALL_INFORMATION,  *PUSER_ALL_INFORMATION; <br>#include "poppack.h" <br>#define USER_ALL_PARAMETERS         0x00200000  <br> <br>#define CLEAR_BLOCK_LENGTH          8 <br> <br>typedef struct _CLEAR_BLOCK { <br>    CHAR    data[CLEAR_BLOCK_LENGTH]; <br>}                                   CLEAR_BLOCK; <br>typedef CLEAR_BLOCK *               PCLEAR_BLOCK; <br> <br>#define CYPHER_BLOCK_LENGTH         8 <br> <br>typedef struct _CYPHER_BLOCK { <br>    CHAR    data[CYPHER_BLOCK_LENGTH]; <br>}                                   CYPHER_BLOCK; <br>typedef CYPHER_BLOCK *              PCYPHER_BLOCK; <br>typedef struct _LM_OWF_PASSWORD { <br>    CYPHER_BLOCK data[2]; <br>}                                   LM_OWF_PASSWORD; <br>typedef LM_OWF_PASSWORD *           PLM_OWF_PASSWORD; <br>typedef CLEAR_BLOCK                 LM_CHALLENGE; <br>typedef LM_CHALLENGE *              PLM_CHALLENGE; <br>typedef LM_OWF_PASSWORD             NT_OWF_PASSWORD; <br>typedef NT_OWF_PASSWORD *           PNT_OWF_PASSWORD; <br>typedef LM_CHALLENGE                NT_CHALLENGE; <br>typedef NT_CHALLENGE *              PNT_CHALLENGE; <br>#define USER_SESSION_KEY_LENGTH     (CYPHER_BLOCK_LENGTH * 2) <br> <br>typedef struct _USER_SESSION_KEY { <br>    CYPHER_BLOCK data[2]; <br>}                                   USER_SESSION_KEY; <br>typedef USER_SESSION_KEY          * PUSER_SESSION_KEY; <br> <br>typedef enum _NETLOGON_LOGON_INFO_CLASS { <br>    NetlogonInteractiveInformation = 1, <br>    NetlogonNetworkInformation, <br>    NetlogonServiceInformation, <br>    NetlogonGenericInformation <br>} NETLOGON_LOGON_INFO_CLASS; <br> <br>#pragma pack(4) <br>typedef struct _NETLOGON_LOGON_IDENTITY_INFO { <br>    UNICODE_STRING LogonDomainName; <br>    ULONG ParameterControl; <br>    OLD_LARGE_INTEGER  LogonId; <br>    UNICODE_STRING UserName; <br>    UNICODE_STRING Workstation; <br>} NETLOGON_LOGON_IDENTITY_INFO, <br> *PNETLOGON_LOGON_IDENTITY_INFO; <br>#pragma pack() <br> <br>#pragma pack(4) <br>typedef struct _NETLOGON_INTERACTIVE_INFO { <br>    NETLOGON_LOGON_IDENTITY_INFO Identity; <br>    LM_OWF_PASSWORD LmOwfPassword; <br>    NT_OWF_PASSWORD NtOwfPassword; <br>} NETLOGON_INTERACTIVE_INFO, <br> *PNETLOGON_INTERACTIVE_INFO; <br>#pragma pack() <br> <br>#pragma pack(4) <br>typedef struct _NETLOGON_SERVICE_INFO { <br>    NETLOGON_LOGON_IDENTITY_INFO Identity; <br>    LM_OWF_PASSWORD LmOwfPassword; <br>    NT_OWF_PASSWORD NtOwfPassword; <br>} NETLOGON_SERVICE_INFO, *PNETLOGON_SERVICE_INFO; <br>#pragma pack() <br> <br>#pragma pack(4) <br>typedef struct _NETLOGON_NETWORK_INFO { <br>    NETLOGON_LOGON_IDENTITY_INFO Identity; <br>    LM_CHALLENGE LmChallenge; <br>    STRING NtChallengeResponse; <br>    STRING LmChallengeResponse; <br>} NETLOGON_NETWORK_INFO, *PNETLOGON_NETWORK_INFO; <br>#pragma pack() <br> <br>#pragma pack(4) <br>typedef struct _NETLOGON_GENERIC_INFO { <br>    NETLOGON_LOGON_IDENTITY_INFO Identity; <br>    UNICODE_STRING PackageName; <br>    ULONG DataLength; <br>#ifdef MIDL_PASS <br>    [size_is(DataLength)] <br>#endif <br>    PUCHAR LogonData; <br>} NETLOGON_GENERIC_INFO, *PNETLOGON_GENERIC_INFO; <br>#pragma pack() <br> <br> <br>// Values for Flags <br>#define MSV1_0_PASSTHRU     0x01 <br>#define MSV1_0_GUEST_LOGON  0x02 <br> <br>NTSTATUS NTAPI <br>Msv1_0SubAuthenticationRoutine( <br>    IN NETLOGON_LOGON_INFO_CLASS LogonLevel, <br>    IN PVOID LogonInformation, <br>    IN ULONG Flags, <br>    IN PUSER_ALL_INFORMATION UserAll, <br>    OUT PULONG WhichFields, <br>    OUT PULONG UserFlags, <br>    OUT PBOOLEAN Authoritative, <br>    OUT PLARGE_INTEGER LogoffTime, <br>    OUT PLARGE_INTEGER KickoffTime <br>); <br> <br>typedef struct _MSV1_0_VALIDATION_INFO { <br>    LARGE_INTEGER LogoffTime; <br>    LARGE_INTEGER KickoffTime; <br>    UNICODE_STRING LogonServer; <br>    UNICODE_STRING LogonDomainName; <br>    USER_SESSION_KEY SessionKey; <br>    BOOLEAN Authoritative; <br>    ULONG UserFlags; <br>    ULONG WhichFields; <br>    ULONG UserId; <br>} MSV1_0_VALIDATION_INFO, *PMSV1_0_VALIDATION_INFO; <br> <br>// values for WhichFields <br> <br>#define MSV1_0_VALIDATION_LOGOFF_TIME          0x00000001 <br>#define MSV1_0_VALIDATION_KICKOFF_TIME         0x00000002 <br>#define MSV1_0_VALIDATION_LOGON_SERVER         0x00000004 <br>#define MSV1_0_VALIDATION_LOGON_DOMAIN         0x00000008 <br>#define MSV1_0_VALIDATION_SESSION_KEY          0x00000010 <br>#define MSV1_0_VALIDATION_USER_FLAGS           0x00000020 <br>#define MSV1_0_VALIDATION_USER_ID              0x00000040 <br> <br>// legal values for ActionsPerformed <br>#define MSV1_0_SUBAUTH_ACCOUNT_DISABLED        0x00000001 <br>#define MSV1_0_SUBAUTH_PASSWORD                0x00000002 <br>#define MSV1_0_SUBAUTH_WORKSTATIONS            0x00000004 <br>#define MSV1_0_SUBAUTH_LOGON_HOURS             0x00000008 <br>#define MSV1_0_SUBAUTH_ACCOUNT_EXPIRY          0x00000010 <br>#define MSV1_0_SUBAUTH_PASSWORD_EXPIRY         0x00000020 <br>#define MSV1_0_SUBAUTH_ACCOUNT_TYPE            0x00000040 <br>#define MSV1_0_SUBAUTH_LOCKOUT                 0x00000080 <br> <br>NTSTATUS NTAPI <br>Msv1_0SubAuthenticationRoutineEx( <br>    IN NETLOGON_LOGON_INFO_CLASS LogonLevel, <br>    IN PVOID LogonInformation, <br>    IN ULONG Flags, <br>    IN PUSER_ALL_INFORMATION UserAll, <br>    IN SAM_HANDLE UserHandle, <br>    IN OUT PMSV1_0_VALIDATION_INFO ValidationInfo, <br>    OUT PULONG ActionsPerformed <br>); <br> <br>NTSTATUS NTAPI <br>Msv1_0SubAuthenticationRoutineGeneric( <br>    IN PVOID SubmitBuffer, <br>    IN ULONG SubmitBufferLength, <br>    OUT PULONG ReturnBufferLength, <br>    OUT PVOID *ReturnBuffer <br>); <br> <br>NTSTATUS NTAPI <br>Msv1_0SubAuthenticationFilter( <br>    IN NETLOGON_LOGON_INFO_CLASS LogonLevel, <br>    IN PVOID LogonInformation, <br>    IN ULONG Flags, <br>    IN PUSER_ALL_INFORMATION UserAll, <br>    OUT PULONG WhichFields, <br>    OUT PULONG UserFlags, <br>    OUT PBOOLEAN Authoritative, <br>    OUT PLARGE_INTEGER LogoffTime, <br>    OUT PLARGE_INTEGER KickoffTime <br>); <br> <br>#define STATUS_SUCCESS                          ((NTSTATUS)0x00000000L)  <br>#define STATUS_INVALID_INFO_CLASS        ((NTSTATUS)0xC0000003L)     <br>#define STATUS_ACCESS_VIOLATION          ((NTSTATUS)0xC0000005L)     <br>#define STATUS_NO_SUCH_USER              ((NTSTATUS)0xC0000064L)      <br>#define STATUS_WRONG_PASSWORD            ((NTSTATUS)0xC000006AL)      <br>#define STATUS_PASSWORD_RESTRICTION      ((NTSTATUS)0xC000006CL)      <br>#define STATUS_LOGON_FAILURE             ((NTSTATUS)0xC000006DL)      <br>#define STATUS_ACCOUNT_RESTRICTION       ((NTSTATUS)0xC000006EL)      <br>#define STATUS_INVALID_LOGON_HOURS       ((NTSTATUS)0xC000006FL)      <br>#define STATUS_INVALID_WORKSTATION       ((NTSTATUS)0xC0000070L)      <br>#define STATUS_PASSWORD_EXPIRED          ((NTSTATUS)0xC0000071L)      <br>#define STATUS_ACCOUNT_DISABLED          ((NTSTATUS)0xC0000072L)      <br>#define STATUS_INSUFFICIENT_RESOURCES    ((NTSTATUS)0xC000009AL)      <br>#define STATUS_ACCOUNT_EXPIRED           ((NTSTATUS)0xC0000193L)     <br>#define STATUS_PASSWORD_MUST_CHANGE      ((NTSTATUS)0xC0000224L)     <br>#define STATUS_ACCOUNT_LOCKED_OUT        ((NTSTATUS)0xC0000234L)     <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif /* _NTSUBAUTH_ */ <br> <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
