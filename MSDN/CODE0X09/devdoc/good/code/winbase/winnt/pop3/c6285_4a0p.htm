<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PARAM.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6289"></a>PARAM.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples. <br>*       Copyright 1992 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>//+--------------------------------------------------------------------------- <br>// <br>//  File:       param.c <br>// <br>//  Contents: <br>// <br>//  Classes: <br>// <br>//  Functions: <br>// <br>//---------------------------------------------------------------------------- <br> <br>#include "pop3srvp.h" <br>#pragma hdrstop <br> <br>WCHAR   szParamPath[] = TEXT("System\\CurrentControlSet\\Services\\Pop3Srv\\Parameters"); <br>WCHAR   szMailDirValue[] = TEXT("Mail Directory"); <br>WCHAR   szLoggingValue[] = TEXT("Logging Level"); <br> <br>//+--------------------------------------------------------------------------- <br>// <br>//  Function:   ReadParameters <br>// <br>//  Synopsis:   Read parameters from registry <br>// <br>//  Arguments:  (none) <br>// <br>//  History:    1-11-95   RichardW   Created <br>// <br>//  Notes: <br>// <br>//---------------------------------------------------------------------------- <br>BOOL <br>ReadParameters(VOID) <br>{ <br>    HKEY    hKey; <br>    LONG    err; <br>    DWORD   ValueType; <br>    DWORD   SizeOfBuffer; <br> <br>    if (err = RegOpenKey(HKEY_LOCAL_MACHINE, szParamPath, &amp;hKey)) <br>    { <br>        ReportServiceEvent( <br>            EVENTLOG_ERROR_TYPE, <br>            POP3EVENT_PARAMETER_MISSING, <br>            0, NULL, 1, szParamPath); <br>        DebugLog((DEB_ERROR, "Could not open key, %d\n", err)); <br>        return(FALSE); <br>    } <br> <br>    // <br>    // Now, read the parameters from the key: <br>    // <br> <br>    SizeOfBuffer = MAX_PATH; <br>    err = RegQueryValueEx(  hKey,               // Key that we opened <br>                            szMailDirValue,     // Value that we want <br>                            NULL, <br>                            &amp;ValueType,         // Receives value type <br>                            (PUCHAR) BaseDirectory,      // Receives value <br>                            &amp;SizeOfBuffer );    // Size of buffer <br> <br>    if (err || (ValueType != REG_SZ)) <br>    { <br>        DebugLog((DEB_ERROR, "Error %d reading value\n", err)); <br>        ReportServiceEvent( <br>            EVENTLOG_ERROR_TYPE, <br>            POP3EVENT_PARAMETER_MISSING, <br>            0, NULL, 1, szMailDirValue); <br>        RegCloseKey(hKey); <br>        return(FALSE); <br>    } <br> <br>    // <br>    // Add a backslash, so life is easier later: <br>    // <br>    SizeOfBuffer = wcslen(BaseDirectory); <br>    if (BaseDirectory[SizeOfBuffer - 1] != L'\\') <br>    { <br>        BaseDirectory[SizeOfBuffer++] = L'\\'; <br>        BaseDirectory[SizeOfBuffer] = L'\0'; <br>    } <br> <br>    SizeOfBuffer = sizeof(DWORD); <br>    err = RegQueryValueEx(  hKey, <br>                            szLoggingValue, <br>                            NULL, <br>                            &amp;ValueType, <br>                            (PUCHAR) &amp;LoggingLevel, <br>                            &amp;SizeOfBuffer ); <br> <br>    if (err || ValueType != REG_DWORD) <br>    { <br>        DebugLog((DEB_ERROR, "Error %d reading value\n", err)); <br>        ReportServiceEvent( <br>            EVENTLOG_ERROR_TYPE, <br>            POP3EVENT_PARAMETER_MISSING, <br>            0, NULL, 1, szLoggingValue); <br>        RegCloseKey(hKey); <br>        return(FALSE); <br>    } <br> <br>    RegCloseKey(hKey); <br>    return(TRUE); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
