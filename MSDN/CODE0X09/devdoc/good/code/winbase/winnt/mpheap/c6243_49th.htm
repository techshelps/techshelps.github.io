<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MPHEAP.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6245"></a>MPHEAP.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1992  Microsoft Corporation <br> <br>Module Name: <br> <br>    mpheap.h <br> <br>Abstract: <br> <br>    Public header file for MP heap package <br> <br>Author: <br> <br>    John Vert (jvert) 10-Jul-1995 <br> <br>Revision History: <br> <br>--*/ <br> <br>// <br>// Valid heap creation options <br>// <br>#define MPHEAP_GROWABLE HEAP_GROWABLE <br>#define MPHEAP_REALLOC_IN_PLACE_ONLY HEAP_REALLOC_IN_PLACE_ONLY <br>#define MPHEAP_TAIL_CHECKING_ENABLED HEAP_TAIL_CHECKING_ENABLED <br>#define MPHEAP_FREE_CHECKING_ENABLED HEAP_FREE_CHECKING_ENABLED <br>#define MPHEAP_DISABLE_COALESCE_ON_FREE HEAP_DISABLE_COALESCE_ON_FREE <br>#define MPHEAP_ZERO_MEMORY HEAP_ZERO_MEMORY <br>#define MPHEAP_COLLECT_STATS 0x10000000 <br> <br>HANDLE <br>WINAPI <br>MpHeapCreate( <br>    DWORD flOptions, <br>    DWORD dwInitialSize, <br>    DWORD dwParallelism <br>    ); <br> <br>BOOL <br>WINAPI <br>MpHeapDestroy( <br>    HANDLE hMpHeap <br>    ); <br> <br>BOOL <br>WINAPI <br>MpHeapValidate( <br>    HANDLE hMpHeap, <br>    LPVOID lpMem <br>    ); <br> <br>UINT <br>WINAPI <br>MpHeapCompact( <br>    HANDLE hMpHeap <br>    ); <br> <br>LPVOID <br>WINAPI <br>MpHeapAlloc( <br>    HANDLE hMpHeap, <br>    DWORD flOptions, <br>    DWORD dwBytes <br>    ); <br> <br>LPVOID <br>WINAPI <br>MpHeapReAlloc( <br>    HANDLE hMpHeap, <br>    LPVOID lpMem, <br>    DWORD dwBytes <br>    ); <br> <br>BOOL <br>WINAPI <br>MpHeapFree( <br>    HANDLE hMpHeap, <br>    LPVOID lpMem <br>    ); <br> <br>// <br>// Statistics structure <br>// <br>typedef struct _MPHEAP_STATISTICS { <br>    DWORD Contention; <br>    DWORD TotalAllocates; <br>    DWORD TotalFrees; <br>    DWORD LookasideAllocates; <br>    DWORD LookasideFrees; <br>    DWORD DelayedFrees; <br>} MPHEAP_STATISTICS, *LPMPHEAP_STATISTICS; <br> <br>DWORD <br>MpHeapGetStatistics( <br>    HANDLE hMpHeap, <br>    LPDWORD lpdwSize, <br>    MPHEAP_STATISTICS Statistics[] <br>    ); </code></pre>
<p>&nbsp;</p></body>
</HTML>
