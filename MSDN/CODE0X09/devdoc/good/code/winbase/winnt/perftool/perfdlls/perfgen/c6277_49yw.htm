<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DATAGEN.H</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6278"></a>DATAGEN.H</h2>
<pre><code>/*++  <br> <br>Copyright (c) 1995-6 Microsoft Corporation <br> <br>Module Name: <br> <br>      DATAGEN.h <br> <br>Abstract: <br> <br>    Header file for the signal generator performance counters. <br> <br>    This file contains definitions to construct the dynamic data <br>    which is returned by the Configuration Registry.  Data from <br>    various system API calls is placed into the structures shown <br>    here. <br> <br>Author: <br> <br>    Bob Watson  28-Jul-1995 <br> <br>Revision History: <br> <br> <br>--*/ <br> <br>#ifndef _DATAGEN_H_ <br>#define _DATAGEN_H_ <br>  <br>// <br>//  insure packing is done to the 8 byte align longlong data values. This <br>//  will eliminate alignment faults on RISC platforms. The fields can be  <br>//  manually arranged to minimize or eliminate wasted space if necessary. <br>// <br>#pragma pack (8) <br> <br>// <br>//  Extensible Object definitions <br>// <br> <br>//  Update the following sort of define when adding an object type. <br> <br>#define SIGGEN_NUM_PERF_OBJECT_TYPES 1 <br> <br>//---------------------------------------------------------------------------- <br> <br>// <br>//  Perf Gen Resource object type counter definitions. <br>// <br>//  This is the counter structure presently returned by the generator <br>// <br> <br>typedef struct _SIGGEN_DATA_DEFINITION { <br>    PERF_OBJECT_TYPESigGenObjectType; <br>    PERF_COUNTER_DEFINITIONSineWaveDef; <br>    PERF_COUNTER_DEFINITIONTriangleWaveDef; <br>    PERF_COUNTER_DEFINITIONSquareWaveDef; <br>    PERF_COUNTER_DEFINITION ConstantValueDef; <br>} SIGGEN_DATA_DEFINITION; <br> <br>// <br>// This is the block of data that corresponds to each instance of the  <br>// object. This structure will immediately follow the instance definition <br>// data structure <br>// <br> <br>typedef struct _SIGGEN_COUNTER { <br>    PERF_COUNTER_BLOCK      CounterBlock; <br>    DWORD                   dwSineWaveValue; <br>    DWORD                   dwTriangleWaveValue; <br>    DWORD                   dwSquareWaveValue; <br>    DWORD                   dwConstantValue; <br>} SIGGEN_COUNTER, *PSIGGEN_COUNTER; <br> <br>#pragma pack () <br> <br>#endif //_DATAGEN_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
