<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DATAGEN.C</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6284"></a>DATAGEN.C</h2>
<pre><code>/*++  <br> <br>Copyright (c) 1995-6  Microsoft Corporation <br> <br>Module Name: <br> <br>    datagen.c <br> <br>Abstract: <br>        <br>    a file containing the constant data structures used by the Performance <br>    Monitor data for the Signal Generator Perf DLL <br> <br>    This file contains a set of constant data structures which are <br>    currently defined for the Signal Generator Perf DLL. <br> <br>Created: <br> <br>    Bob Watson  28-Jul-1995 <br> <br>Revision History: <br> <br>    None. <br> <br>--*/ <br>// <br>//  Include Files <br>// <br> <br>#include &lt;windows.h&gt; <br>#include &lt;winperf.h&gt; <br>#include "genctrnm.h" <br>#include "datagen.h" <br> <br>// dummy variable for field sizing. <br>static SIGGEN_COUNTER   sc; <br> <br>// <br>//  Constant structure initializations  <br>//      defined in datagen.h <br>// <br> <br>SIGGEN_DATA_DEFINITION SigGenDataDefinition = { <br> <br>    {sizeof(SIGGEN_DATA_DEFINITION) + sizeof(SIGGEN_COUNTER), <br>    sizeof(SIGGEN_DATA_DEFINITION), <br>    sizeof(PERF_OBJECT_TYPE), <br>    SIGGEN_OBJ, <br>    0, <br>    SIGGEN_OBJ, <br>    0, <br>    PERF_DETAIL_NOVICE, <br>    (sizeof(SIGGEN_DATA_DEFINITION)-sizeof(PERF_OBJECT_TYPE))/ <br>        sizeof(PERF_COUNTER_DEFINITION), <br>    0   // assigned in Open Procedure <br>    PERF_NO_INSTANCES, <br>    0  <br>    }, <br>    {   sizeof(PERF_COUNTER_DEFINITION), <br>    SINE_WAVE, <br>    0, <br>    SINE_WAVE, <br>    0, <br>    0, <br>    PERF_DETAIL_NOVICE, <br>    PERF_COUNTER_RAWCOUNT, <br>    sizeof(sc.dwSineWaveValue), <br>    (DWORD)&amp;(((PSIGGEN_COUNTER)0)-&gt;dwSineWaveValue) <br>    }, <br>    {   sizeof(PERF_COUNTER_DEFINITION), <br>    TRIANGLE_WAVE, <br>    0, <br>    TRIANGLE_WAVE, <br>    0, <br>    0, <br>    PERF_DETAIL_NOVICE, <br>    PERF_COUNTER_RAWCOUNT, <br>    sizeof(sc.dwTriangleWaveValue), <br>    (DWORD)&amp;(((PSIGGEN_COUNTER)0)-&gt;dwTriangleWaveValue) <br>    }, <br>    {   sizeof(PERF_COUNTER_DEFINITION), <br>    SQUARE_WAVE, <br>    0, <br>    SQUARE_WAVE, <br>    0, <br>    0, <br>    PERF_DETAIL_NOVICE, <br>    PERF_COUNTER_RAWCOUNT, <br>    sizeof(sc.dwSquareWaveValue), <br>    (DWORD)&amp;(((PSIGGEN_COUNTER)0)-&gt;dwSquareWaveValue) <br>    }, <br>    {   sizeof(PERF_COUNTER_DEFINITION), <br>    CONSTANT_VALUE, <br>    0, <br>    CONSTANT_VALUE, <br>    0, <br>    0, <br>    PERF_DETAIL_NOVICE, <br>    PERF_COUNTER_RAWCOUNT, <br>    sizeof(sc.dwConstantValue), <br>    (DWORD)&amp;(((PSIGGEN_COUNTER)0)-&gt;dwConstantValue) <br>    } <br>}; <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
