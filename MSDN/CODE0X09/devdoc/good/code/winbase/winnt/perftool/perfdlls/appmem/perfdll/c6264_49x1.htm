<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DATAMEM.H</title>
<link disabled rel=stylesheet href=../../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6265"></a>DATAMEM.H</h2>
<pre><code>/*++ <br> <br>Copyright 1995 - 1998 Microsoft Corporation <br> <br>Module Name: <br> <br>      datamem.h <br> <br>Abstract: <br> <br>    Header file for the application help performance Object data <br>    definitions <br> <br>    This file contains definitions to construct the dynamic data <br>    which is returned by the Configuration Registry.  Data from <br>    various system API calls is placed into the structures shown <br>    here. <br> <br>Author: <br> <br>   Bob Watson 24-aug-95 <br> <br>Revision History: <br> <br> <br>--*/ <br> <br>#ifndef _DATAMEM_H_ <br>#define _DATAMEM_H_ <br> <br>// <br>//  pack on 8-byte boundries so any longlong fields won't cause alignment <br>//  faults on RISC platforms <br>// <br>// <br>#pragma pack (8) <br> <br>// <br>//  Extensible Object definitions <br>// <br> <br>//  Update the following sort of define when adding an object type. <br> <br>#define APP_MEM_NUM_PERF_OBJECT_TYPES 1 <br> <br>//---------------------------------------------------------------------------- <br> <br>//  Application memory counters <br>//   <br>// <br>//  This is the counter structure presently returned by Nbf for <br>//  each Resource.  Each Resource is an Instance, named by its number. <br>// <br>typedef struct _APPMEM_DATA_DEFINITION { <br>    PERF_OBJECT_TYPEAppMemObjectType; <br>    PERF_COUNTER_DEFINITION AppMemBytesAllocated; <br>    PERF_COUNTER_DEFINITION AppMemAllocs; <br>    PERF_COUNTER_DEFINITION AppMemAllocsSec; <br>    PERF_COUNTER_DEFINITION AppMemReAllocs; <br>    PERF_COUNTER_DEFINITION AppMemReAllocsSec; <br>    PERF_COUNTER_DEFINITION AppMemFrees; <br>    PERF_COUNTER_DEFINITION AppMemFreesSec; <br>} APPMEM_DATA_DEFINITION; <br> <br>typedef struct _APPMEM_COUNTERS { <br>    PERF_COUNTER_BLOCK  CounterBlock; <br>    DWORD               dwAppMemBytesAllocated; <br>    DWORD               dwAppMemAllocs; <br>    DWORD               dwAppMemAllocsSec; <br>    DWORD               dwAppMemReAllocs; <br>    DWORD               dwAppMemReAllocsSec; <br>    DWORD               dwAppMemFrees; <br>    DWORD               dwAppMemFreesSec; <br>} APPMEM_COUNTERS, *PAPPMEM_COUNTERS; <br> <br>#pragma pack () <br> <br>#endif //_DATAMEM_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
