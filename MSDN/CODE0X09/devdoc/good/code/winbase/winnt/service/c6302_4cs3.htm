<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CLIENT.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6303"></a>CLIENT.C</h2>
<pre><code>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>// PARTICULAR PURPOSE. <br>// <br>// Copyright 1993 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>//  MODULE:   client.c <br>// <br>//  PURPOSE:  This program is a command line oriented <br>//            demonstration of the Simple service sample. <br>// <br>//  FUNCTIONS: <br>//    main(int argc, char **argv); <br>// <br>//  COMMENTS: <br>// <br>// <br>#include &lt;windows.h&gt; <br>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include &lt;string.h&gt; <br> <br>VOID _CRTAPI1 main(int argc, char *argv[]) <br>{ <br>    char    inbuf[80]; <br>    char    outbuf[80]; <br>    DWORD   bytesRead; <br>    BOOL    ret; <br>    LPSTR   lpszPipeName = "\\\\.\\pipe\\simple"; <br>    LPSTR   lpszString = "World"; <br>    int     ndx; <br> <br>    // allow user to define pipe name <br>    for ( ndx = 1; ndx &lt; argc-1; ndx++ ) <br>    { <br>        if ( (*argv[ndx] == '-') || (*argv[ndx] == '/') ) <br>        { <br>            if ( stricmp( "pipe", argv[ndx]+1 ) == 0 ) <br>            { <br>                lpszPipeName = argv[++ndx]; <br>            } <br>            else if ( stricmp( "string", argv[ndx]+1 ) == 0 ) <br>            { <br>                lpszString = argv[++ndx]; <br>            } <br>            else <br>            { <br>                printf("usage: client [-pipe &lt;pipename&gt;] [-string &lt;string&gt;]\n"); <br>                exit(1); <br>            } <br>        } <br>        else <br>        { <br>            printf("usage: client [-pipe &lt;pipename&gt;] [-string &lt;string&gt;]\n"); <br>            exit(1); <br>        } <br> <br>    } <br> <br>    strcpy( outbuf, lpszString ); <br> <br>    ret = CallNamedPipeA(lpszPipeName, <br>                         outbuf, sizeof(outbuf), <br>                         inbuf, sizeof(inbuf), <br>                         &amp;bytesRead, NMPWAIT_WAIT_FOREVER); <br> <br>    if (!ret) { <br>        printf("client: CallNamedPipe failed, GetLastError = %d\n", GetLastError()); <br>        exit(1); <br>    } <br> <br>    printf("client: received: %s\n", inbuf); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
