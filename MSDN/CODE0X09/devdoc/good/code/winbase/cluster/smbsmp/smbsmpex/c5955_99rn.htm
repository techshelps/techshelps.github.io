<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PROPLIST.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5963"></a>PROPLIST.H</h2>
<pre><code>///////////////////////////////////////////////////////////////////////////// <br>// <br>//Copyright (c) 1997 &lt;company name&gt; <br>// <br>//Module Name: <br>//PropList.h <br>// <br>//Abstract: <br>//Definition of the CClusPropList class. <br>// <br>//Implementation File: <br>//PropList.cpp <br>// <br>//Author: <br>//&lt;name&gt; (&lt;e-mail name&gt;) Mmmm DD, 1997 <br>// <br>//Revision History: <br>// <br>//Notes: <br>// <br>///////////////////////////////////////////////////////////////////////////// <br> <br>#ifndef _PROPLIST_H_ <br>#define _PROPLIST_H_ <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Include Files <br>///////////////////////////////////////////////////////////////////////////// <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Forward Class Declarations <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CClusPropList; <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// External Class Declarations <br>///////////////////////////////////////////////////////////////////////////// <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CObjectProperty <br>///////////////////////////////////////////////////////////////////////////// <br> <br>#pragma warning( disable : 4201 ) // nonstandard extension used : nameless struct/union <br> <br>class CObjectProperty <br>{ <br>public: <br>LPCWSTRm_pwszName; <br>CLUSTER_PROPERTY_FORMATm_propFormat; <br> <br>union CValue <br>{ <br>CString *pstr; <br>DWORD *pdw; <br>BOOL *pb; <br>struct <br>{ <br>PBYTE *ppb; <br>DWORD *pcb; <br>}; <br>}; <br>CValuem_value; <br>CValuem_valuePrev; <br> <br>voidSet( <br>IN LPCWSTR pwszName, <br>IN CString &amp; rstrValue, <br>IN CString &amp; rstrPrevValue <br>) <br>{ <br>m_pwszName = pwszName; <br>m_propFormat = CLUSPROP_FORMAT_SZ; <br>m_value.pstr = &amp;rstrValue; <br>m_value.pcb = NULL; <br>m_valuePrev.pstr = &amp;rstrPrevValue; <br>m_valuePrev.pcb = NULL; <br>} <br> <br>voidSet( <br>IN LPCWSTR pwszName, <br>IN DWORD &amp; rdwValue, <br>IN DWORD &amp; rdwPrevValue <br>) <br>{ <br>m_pwszName = pwszName; <br>m_propFormat = CLUSPROP_FORMAT_DWORD; <br>m_value.pdw = &amp;rdwValue; <br>m_value.pcb = NULL; <br>m_valuePrev.pdw = &amp;rdwPrevValue; <br>m_valuePrev.pcb = NULL; <br>} <br> <br>voidSet( <br>IN LPCWSTR pwszName, <br>IN BOOL &amp; rbValue, <br>IN BOOL &amp; rbPrevValue <br>) <br>{ <br>m_pwszName = pwszName; <br>m_propFormat = CLUSPROP_FORMAT_DWORD; <br>m_value.pb = &amp;rbValue; <br>m_value.pcb = NULL; <br>m_valuePrev.pb = &amp;rbPrevValue; <br>m_valuePrev.pcb = NULL; <br>} <br> <br>voidSet( <br>IN LPCWSTR pwszName, <br>IN PBYTE &amp; rpbValue, <br>IN DWORD &amp; rcbValue, <br>IN PBYTE &amp; rpbPrevValue, <br>IN DWORD &amp; rcbPrevValue <br>) <br>{ <br>m_pwszName = pwszName; <br>m_propFormat = CLUSPROP_FORMAT_BINARY; <br>m_value.ppb = &amp;rpbValue; <br>m_value.pcb = &amp;rcbValue; <br>m_valuePrev.ppb = &amp;rpbPrevValue; <br>m_valuePrev.pcb = &amp;rcbPrevValue; <br>} <br> <br>voidSet( <br>IN LPCWSTR pwszName, <br>IN LPWSTR &amp; rpwszValue, <br>IN DWORD &amp; rcbValue, <br>IN LPWSTR &amp; rpwszPrevValue, <br>IN DWORD &amp; rcbPrevValue <br>) <br>{ <br>m_pwszName = pwszName; <br>m_propFormat = CLUSPROP_FORMAT_MULTI_SZ; <br>m_value.ppb = (PBYTE *) &amp;rpwszValue; <br>m_value.pcb = &amp;rcbValue; <br>m_valuePrev.ppb = (PBYTE *) &amp;rpwszPrevValue; <br>m_valuePrev.pcb = &amp;rcbPrevValue; <br>} <br> <br>};  //*** class CObjectProperty <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CClusPropList dialog <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CClusPropList : public CObject <br>{ <br>DECLARE_DYNAMIC(CClusPropList); <br> <br>// Construction <br>public: <br>CClusPropList(IN BOOL bAlwaysAddProp = FALSE); <br>~CClusPropList(void); <br> <br>// Attributes <br>protected: <br>BOOLm_bAlwaysAddProp; <br> <br>CLUSPROP_BUFFER_HELPERm_proplist; <br>CLUSPROP_BUFFER_HELPERm_propCurrent; <br>DWORDm_cbBufferSize; <br>DWORDm_cbDataSize; <br> <br>public: <br>const CLUSPROP_BUFFER_HELPER const *Proplist(void) const{ return &amp;m_proplist; } <br>PBYTEPbProplist(void) const{ return m_proplist.pb; } <br>DWORDCbProplist(void) const{ return m_cbDataSize + sizeof(CLUSPROP_SYNTAX); /*endmark*/ } <br>DWORDCprops(void) const <br>{ <br>if (m_proplist.pb == NULL) <br>return 0; <br>return m_proplist.pList-&gt;nPropertyCount; <br>} <br> <br>voidAddProp( <br>IN LPCWSTRpwszName, <br>IN const CString &amp;rstrValue, <br>IN const CString &amp;rstrPrevValue <br>); <br>voidAddProp( <br>IN LPCWSTRpwszName, <br>IN DWORDdwValue, <br>IN DWORDdwPrevValue <br>); <br>voidAddProp( <br>IN LPCWSTRpwszName, <br>IN const PBYTEpbValue, <br>IN DWORDcbValue, <br>IN const PBYTEpbPrevValue, <br>IN DWORDcbPrevValue <br>); <br> <br>voidAllocPropList(IN DWORD cbMinimum); <br> <br>// Operations <br>public: <br>DWORDDwGetNodeProperties( <br>IN HNODEhNode, <br>IN DWORDdwControlCode, <br>IN HNODEhHostNode= NULL, <br>IN LPVOIDlpInBuffer= NULL, <br>IN DWORDcbInBufferSize= 0 <br>); <br> <br>DWORDDwGetGroupProperties( <br>IN HGROUPhGroup, <br>IN DWORDdwControlCode, <br>IN HNODEhHostNode= NULL, <br>IN LPVOIDlpInBuffer= NULL, <br>IN DWORDcbInBufferSize= 0 <br>); <br> <br>DWORDDwGetResourceProperties( <br>IN HRESOURCEhResource, <br>IN DWORDdwControlCode, <br>IN HNODEhHostNode= NULL, <br>IN LPVOIDlpInBuffer= NULL, <br>IN DWORDcbInBufferSize= 0 <br>); <br> <br>DWORDDwGetResourceTypeProperties( <br>IN HCLUSTERhCluster, <br>IN LPCWSTRpwszResTypeName, <br>IN DWORDdwControlCode, <br>IN HNODEhHostNode= NULL, <br>IN LPVOIDlpInBuffer= NULL, <br>IN DWORDcbInBufferSize= 0 <br>); <br> <br>DWORDDwGetNetworkProperties( <br>IN HNETWORKhNetwork, <br>IN DWORDdwControlCode, <br>IN HNODEhHostNode= NULL, <br>IN LPVOIDlpInBuffer= NULL, <br>IN DWORDcbInBufferSize= 0 <br>); <br> <br>DWORDDwGetNetInterfaceProperties( <br>IN HNETINTERFACEhNetInterface, <br>IN DWORDdwControlCode, <br>IN HNODEhHostNode= NULL, <br>IN LPVOIDlpInBuffer= NULL, <br>IN DWORDcbInBufferSize= 0 <br>); <br> <br>// Overrides <br> <br>// Implementation <br>protected: <br>voidCopyProp( <br>IN PCLUSPROP_SZpprop, <br>IN CLUSTER_PROPERTY_TYPEproptype, <br>IN LPCWSTRpwsz, <br>IN DWORDcbsz = 0 <br>); <br>voidCopyProp( <br>IN PCLUSPROP_DWORDpprop, <br>IN CLUSTER_PROPERTY_TYPEproptype, <br>IN DWORDdw <br>); <br>voidCopyProp( <br>IN PCLUSPROP_BINARYpprop, <br>IN CLUSTER_PROPERTY_TYPEproptype, <br>IN const PBYTEpb, <br>IN DWORDcb <br>); <br> <br>DWORDDwGetPrivateProps( <br>OUT PBYTE *ppbProps, <br>IN CLUSTER_CONTROL_OBJECTccobjtype = CLUS_OBJECT_RESOURCE <br>); <br>DWORDDwSetPrivateProps( <br>IN PBYTEpbProps, <br>IN DWORDcbProps, <br>IN CLUSTER_CONTROL_OBJECTccobjtype = CLUS_OBJECT_RESOURCE <br>); <br> <br>};  //*** class CClusPropList <br> <br>#pragma warning( default : 4201 ) <br> <br>///////////////////////////////////////////////////////////////////////////// <br> <br>#endif // _PROPLIST_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
