<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EXTOBJ.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5960"></a>EXTOBJ.H</h2>
<pre><code>///////////////////////////////////////////////////////////////////////////// <br>// <br>//Copyright (c) 1997 &lt;company name&gt; <br>// <br>//Module Name: <br>//ExtObj.h <br>// <br>//Abstract: <br>//Definition of the CExtObject class, which implements the <br>//extension interfaces required by a Microsoft Windows NT Cluster <br>//Administrator Extension DLL. <br>// <br>//Implementation File: <br>//ExtObj.cpp <br>// <br>//Author: <br>//&lt;name&gt; (&lt;e-mail name&gt;) Mmmm DD, 1997 <br>// <br>//Revision History: <br>// <br>//Notes: <br>// <br>///////////////////////////////////////////////////////////////////////////// <br> <br>#ifndef _EXTOBJ_H_ <br>#define _EXTOBJ_H_ <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Include Files <br>///////////////////////////////////////////////////////////////////////////// <br> <br>#ifndef __cluadmex_h__ <br>#include &lt;CluAdmEx.h&gt;// for CLUADMEX_OBJECT_TYPE and interfaces <br>#endif <br> <br>#ifndef __extobj_idl_h__ <br>#include "ExtObjID.h"// for CLSID_CoSmbSmpEx <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Forward Class Declarations <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CExtObject; <br>class CObjData; <br>class CResData; <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// External Class Declarations <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CBasePropertyPage; <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPageList <br>///////////////////////////////////////////////////////////////////////////// <br> <br>typedef CList&lt;CBasePropertyPage *, CBasePropertyPage *&gt; CPageList; <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// class CObjData <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CObjData <br>{ <br>public: <br>CStringm_strName; <br>CLUADMEX_OBJECT_TYPEm_cot; <br> <br>virtual ~CObjData(void) { } <br> <br>};  //*** class CObjData <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// class CNodeData <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CNodeData : public CObjData <br>{ <br>public: <br>HNODEm_hnode; <br> <br>};  //*** class CNodeData <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// class CGroupData <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CGroupData : public CObjData <br>{ <br>public: <br>HGROUPm_hgroup; <br> <br>};  //*** class CGroupData <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// class CResData <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CResData : public CObjData <br>{ <br>public: <br>HRESOURCEm_hresource; <br>CStringm_strResTypeName; <br> <br>};  //*** class CResData <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// class CNetworkData <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CNetworkData : public CObjData <br>{ <br>public: <br>HNETWORKm_hnetwork; <br> <br>};  //*** class CNetworkData <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// class CNetInterfaceData <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CNetInterfaceData : public CObjData <br>{ <br>public: <br>HNETINTERFACEm_hnetinterface; <br> <br>};  //*** class CNetInterfaceData <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// class CExtObject <br>///////////////////////////////////////////////////////////////////////////// <br> <br>//REVIEW -- using pointers to ID's is necessary because some compilers don't like <br>//references as template arguments. <br> <br>class CExtObject : <br>public IWEExtendPropertySheet, <br>public IWEExtendWizard, <br>public ISupportErrorInfo, <br>public CComObjectRoot, <br>public CComCoClass&lt;CExtObject, &amp;CLSID_CoSmbSmpEx&gt; <br>{ <br>public: <br>CExtObject(void); <br>BEGIN_COM_MAP(CExtObject) <br>COM_INTERFACE_ENTRY(IWEExtendPropertySheet) <br>COM_INTERFACE_ENTRY(IWEExtendWizard) <br>COM_INTERFACE_ENTRY(ISupportErrorInfo) <br>END_COM_MAP() <br>//DECLARE_NOT_AGGREGATABLE(CExtObject)  <br>// Remove the comment from the line above if you don't want your object to  <br>// support aggregation.  The default is to support it <br> <br>DECLARE_REGISTRY(CExtObject, _T("CLUADMEX.SmbSmpEx"), _T("CLUADMEX.SmbSmpEx"), IDS_CLUADMEX_COMOBJ_DESC, THREADFLAGS_APARTMENT) <br> <br>// ISupportsErrorInfo <br>STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid); <br> <br>// IWEExtendPropertySheet <br>public: <br>STDMETHOD(CreatePropertySheetPages)( <br>IN IUnknown *piData, <br>IN IWCPropertySheetCallback *piCallback <br>); <br> <br>// IWEExtendWizard <br>public: <br>STDMETHOD(CreateWizardPages)( <br>IN IUnknown *piData, <br>IN IWCWizardCallback *piCallback <br>); <br> <br>// Attributes <br>protected: <br>IUnknown *m_piData; <br>IWCWizardCallback *m_piWizardCallback; <br>BOOLm_bWizard; <br>DWORDm_istrResTypeName; <br> <br>// IGetClusterUIInfo data <br>LCIDm_lcid; <br>HFONTm_hfont; <br>HICONm_hicon; <br> <br>// IGetClusterDataInfo data <br>HCLUSTERm_hcluster; <br>LONGm_cobj; <br> <br>CObjData *m_podObjData; <br> <br>CObjData *PodObjDataRW(void) const{ return m_podObjData; } <br>CResData *PrdResDataRW(void) const{ return (CResData *) m_podObjData; } <br> <br>public: <br>IUnknown *PiData(void) const{ return m_piData; } <br>IWCWizardCallback *PiWizardCallback(void) const{ return m_piWizardCallback; } <br>BOOLBWizard(void) const{ return m_bWizard; } <br>DWORDIstrResTypeName(void) const{ return m_istrResTypeName; } <br> <br>// IGetClusterUIInfo data <br>LCIDLcid(void) const{ return m_lcid; } <br>HFONTHfont(void) const{ return m_hfont; } <br>HICONHicon(void) const{ return m_hicon; } <br> <br>// IGetClusterDataInfo data <br>HCLUSTERHcluster(void) const{ return m_hcluster; } <br>LONGCobj(void) const{ return m_cobj; } <br> <br>const CObjData *PodObjData(void) const{ return m_podObjData; } <br>const CNodeData *PndNodeData(void) const{ ASSERT(Cot() == CLUADMEX_OT_NODE); return (CNodeData *) m_podObjData; } <br>const CGroupData *PgdGroupData(void) const{ ASSERT(Cot() == CLUADMEX_OT_GROUP); return (CGroupData *) m_podObjData; } <br>const CResData *PrdResData(void) const{ ASSERT(Cot() == CLUADMEX_OT_RESOURCE); return (CResData *) m_podObjData; } <br>const CNetworkData *PndNetworkData(void) const{ ASSERT(Cot() == CLUADMEX_OT_NETWORK); return (CNetworkData *) m_podObjData; } <br>const CNetInterfaceData *PndNetInterfaceData(void) const{ ASSERT(Cot() == CLUADMEX_OT_NETINTERFACE); return (CNetInterfaceData *) m_podObjData; } <br> <br>CLUADMEX_OBJECT_TYPECot(void) const{ ASSERT(PodObjData() != NULL); return PodObjData()-&gt;m_cot; } <br> <br>HRESULTHrGetUIInfo(IUnknown * piData); <br>HRESULTHrSaveData(IUnknown * piData); <br>HRESULTHrGetObjectInfo(void); <br>HRESULTHrGetObjectName(IN OUT IGetClusterObjectInfo * pi); <br>HRESULTHrGetResourceTypeName(IN OUT IGetClusterResourceInfo * pi); <br> <br>// Implementation <br>protected: <br>virtual ~CExtObject(void); <br> <br>CPageListm_lpg; <br>CPageList &amp;Lpg(void){ return m_lpg; } <br> <br>};  //*** class CExtObject <br> <br>///////////////////////////////////////////////////////////////////////////// <br> <br>#endif // _EXTOBJ_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
