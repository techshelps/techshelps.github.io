<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAVECFG.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5947"></a>SAVECFG.C</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1997 Microsoft Corporation <br> <br>Module Name: <br> <br>    savecfg.c <br> <br>Abstract: <br> <br>    This source file implements code to save the Win9x environment to <br>    a settings file.  It writes a copy of all screen saver settings on <br>    a per-user basis. <br> <br>Author: <br> <br>    Jim Schmidt (jimschm) 11-Apr-1997 <br> <br>Revision History: <br> <br> <br>--*/ <br> <br>#include "pch.h" <br> <br>BOOL <br>SaveDatFileKeyAndVal ( <br>    IN      LPCSTR Key, <br>    IN      LPCSTR Val <br>    ) <br>{ <br>    // <br>    // This function is a wrapper to simplify writing to our settings file <br>    // <br> <br>    return WritePrivateProfileString (g_User, Key, Val, g_SettingsFile); <br>} <br> <br> <br>BOOL <br>CopyRegValueToDatFile ( <br>    IN      HKEY RegKey, <br>    IN      LPCSTR ValueName <br>    ) <br>{ <br>    LPCSTR DataPtr; <br>    DWORD rc; <br> <br>    // <br>    // Obtain registry value data and copy it to our settings file <br>    // <br> <br>    DataPtr = GetRegValueString (RegKey, ValueName); <br>    if (DataPtr) { <br>        return SaveDatFileKeyAndVal (ValueName, DataPtr); <br>    } <br> <br>    // If not found or wrong data type, don't sweat it <br>    rc = GetLastError(); <br>    return rc == ERROR_FILE_NOT_FOUND || rc == ERROR_SUCCESS; <br>} <br> <br> <br>#define WIN9X_MAX_SECTION  32768 <br> <br>BOOL <br>SaveControlIniSection ( <br>    IN      LPCSTR ControlIniSection, <br>    IN      LPCSTR ScreenSaverName <br>    ) <br>{ <br>    LPSTR Buffer; <br>    LPSTR p; <br>    CHAR NewKey[MAX_PATH]; <br>    BOOL b = TRUE; <br>    CHAR DataBuf[MAX_PATH]; <br> <br>    // <br>    // This function copies an entire section in control.ini to our <br>    // settings file.  It may not be necessary because control.ini will <br>    // still be around, but this guarantees if someone modifies <br>    // control.ini later, our migration will not break. <br>    // <br> <br>    // <br>    // Allocate a generous buffer to hold all key names <br>    // <br> <br>    Buffer = HeapAlloc (g_hHeap, 0, WIN9X_MAX_SECTION); <br>    if (!Buffer) { <br>        return FALSE; <br>    } <br> <br>    // <br>    // Retrieve the key names <br>    // <br> <br>    GetPrivateProfileString ( <br>        ControlIniSection,  <br>        NULL,  <br>        S_EMPTY, <br>        Buffer, <br>        WIN9X_MAX_SECTION,  <br>        S_CONTROL_INI <br>        ); <br> <br>    // <br>    // For each key name, copy it to our settings file <br>    // <br> <br>    p = Buffer; <br> <br>    while (*p) { <br>        if (CreateScreenSaverParamKey (ScreenSaverName, p, NewKey)) { <br>            GetPrivateProfileString ( <br>                    ControlIniSection,  <br>                    p,  <br>                    S_EMPTY,  <br>                    DataBuf,  <br>                    MAX_PATH,  <br>                    S_CONTROL_INI <br>                    ); <br> <br>            if (!SaveDatFileKeyAndVal (NewKey, DataBuf)) { <br>                b = FALSE; <br>                break; <br>            } <br>        } <br> <br>        p = _mbschr (p, 0); <br>        p++; <br>    } <br> <br>    // <br>    // Cleanup <br>    // <br> <br>    HeapFree (g_hHeap, 0, Buffer); <br>    return b; <br>} <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
