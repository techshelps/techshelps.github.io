<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MIGINF.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5943"></a>MIGINF.H</h2>
<pre><code>#ifndef MIGINF_H <br>#define MIGINF_H <br> <br> <br>#define SECTION_MIGRATIONPATHS  "Migration Paths" <br>#define SECTION_EXCLUDEDPATHS   "Excluded Paths" <br>#define SECTION_HANDLED         "Handled" <br>#define SECTION_MOVED           "Moved" <br>#define SECTION_INCOMPATIBLE    "Incompatible Messages" <br> <br> <br>typedef enum { <br> <br>    MIG_FIRSTTYPE, <br>    MIG_FILE, <br>    MIG_PATH, <br>    MIG_REGKEY, <br>    MIG_MESSAGE, <br>    MIG_LASTTYPE <br> <br>} MIGTYPE, *PMIGTYPE; <br> <br>typedef struct tagMIGINFSECTIONENUM { <br> <br>    PCSTR        Key; <br>    PCSTR        Value; <br>    PVOID        EnumKey;            // Internal. <br> <br>} MIGINFSECTIONENUM, * PMIGINFSECTIONENUM; <br> <br> <br> <br>BOOL WINAPI MigInf_Initialize (VOID); <br>VOID WINAPI MigInf_CleanUp (VOID); <br>BOOL WINAPI MigInf_PathIsExcluded (IN PCSTR Path); <br>BOOL WINAPI MigInf_FirstInSection(IN PCSTR SectionName, OUT PMIGINFSECTIONENUM Enum); <br>BOOL WINAPI MigInf_NextInSection(IN OUT PMIGINFSECTIONENUM Enum); <br>BOOL WINAPI MigInf_AddObject (IN MIGTYPE ObjectType,IN PCSTR SectionString,IN PCSTR ParamOne,IN PCSTR ParamTwo); <br>BOOL WINAPI MigInf_WriteInfToDisk (VOID); <br>PCSTR WINAPI MigInf_GetNewSectionName (VOID); <br> <br> <br> <br>// <br>// Macros for common miginf actions. <br>// <br> <br>// <br>// Adding Objects. <br>// <br>#define MigInf_AddHandledFile(file)                      MigInf_AddObject(MIG_FILE,SECTION_HANDLED,(file),NULL) <br>#define MigInf_AddHandledDirectory(directory)            MigInf_AddObject(MIG_PATH,SECTION_HANDLED,(directory),NULL) <br>#define MigInf_AddHandledRegistry(key,value)             MigInf_AddObject(MIG_REGKEY,SECTION_HANDLED,(key),(value)) <br> <br>#define MigInf_AddMovedFile(from,to)                     MigInf_AddObject(MIG_FILE,SECTION_MOVED,(from),(to)) <br>#define MigInf_AddMovedDirectory(from,to)                MigInf_AddObject(MIG_PATH,SECTION_MOVED,(from),(to)) <br> <br>#define MigInf_AddMessage(msgSection,msg)                MigInf_AddObject(MIG_MESSAGE,SECTION_INCOMPATIBLE,(msgSection),(msg)) <br> <br>#define MigInf_AddMessageFile(msgSection,file)           MigInf_AddObject(MIG_FILE,(msgSection),(file),NULL) <br>#define MigInf_AddMessageDirectory(msgSection,directory) MigInf_AddObject(MIG_PATH,(msgSection,(directory),NULL) <br>#define MigInf_AddMessageRegistry(msgSection,key,value)  MigInf_AddObject(MIG_REGKEY,(msgSection),(key),(value)) <br> <br>// <br>// Enumerating Sections <br>// <br>#define MigInf_GetFirstMigrationPath(Enum)               MigInf_FirstInSection(SECTION_MIGRATIONPATHS,(Enum)) <br>#define MigInf_GetFirstExcludedPath(Enum)                MigInf_FirstInSection(SECTION_EXCLUDEDPATHS,(Enum)) <br> <br> <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
