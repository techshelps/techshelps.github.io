<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5780"></a>README.TXT</h2>
<pre><code>The files in this directory contain the ATL code generation wizard for MMC snapins. This is an unsupported preview release of a wizard that will be part of Visual Studio '98. To install into a VC5 development environment, copy the file snapwiz.dll into your &lt;devstudio path&gt;\sharedide\template directory and run regsvr32 on it. Copy the files in the template.atl directory to &lt;devstudio path&gt;\sharedide\template\atl. Finally, copy the files in the include directory to &lt;devstudio path&gt;\VC\atl\include. <br>After going through the wizard there are three things you must do to the generated code before it compiles correctly. They are: <br> <br>1) in the project settings dialog, select the c++ settings tab and in the section for preprocessor define _UNICODE <br>2) create a toolbar resource as described in the compile error <br>3) expand the nodetype GUID as described in the compile error <br> <br>Aside from those 3 steps the code generation wizard will provide you with a working snapin framework, although you will have to customize the resulting code before being able to interact with the snapin. <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
