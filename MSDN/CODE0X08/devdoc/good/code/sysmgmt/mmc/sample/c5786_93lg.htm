<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ABOUT.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5794"></a>ABOUT.CPP</h2>
<pre><code>// This is a part of the Microsoft Management Console. <br>// Copyright (C) 1995-1997 Microsoft Corporation <br>// All rights reserved. <br>// <br>// This source code is only intended as a supplement to the <br>// Microsoft Management Console and related <br>// electronic documentation provided with the interfaces. <br> <br>#include &lt;stdafx.h&gt; <br> <br> <br>#include "Service.h"   <br>#include "CSnapin.h" <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br>CSnapinAboutImpl::CSnapinAboutImpl() <br>{ <br>} <br> <br> <br>CSnapinAboutImpl::~CSnapinAboutImpl() <br>{ <br>} <br> <br> <br>HRESULT CSnapinAboutImpl::AboutHelper(UINT nID, LPOLESTR* lpPtr) <br>{ <br>    if (lpPtr == NULL) <br>        return E_POINTER; <br> <br>    CString s; <br> <br>    // Needed for Loadstring <br>    AFX_MANAGE_STATE(AfxGetStaticModuleState()); <br> <br>    s.LoadString(nID); <br>    *lpPtr = reinterpret_cast&lt;LPOLESTR&gt; <br>            (CoTaskMemAlloc((s.GetLength() + 1)* sizeof(wchar_t))); <br> <br>    if (*lpPtr == NULL) <br>        return E_OUTOFMEMORY; <br> <br>USES_CONVERSION; <br> <br>    wcscpy(*lpPtr, T2OLE((LPTSTR)(LPCTSTR)s)); <br> <br>    return S_OK; <br>} <br> <br> <br>STDMETHODIMP CSnapinAboutImpl::GetSnapinDescription(LPOLESTR* lpDescription) <br>{ <br>    return AboutHelper(IDS_DESCRIPTION, lpDescription); <br>} <br> <br> <br>STDMETHODIMP CSnapinAboutImpl::GetProvider(LPOLESTR* lpName) <br>{ <br>    return AboutHelper(IDS_COMPANY, lpName); <br>} <br> <br> <br>STDMETHODIMP CSnapinAboutImpl::GetSnapinVersion(LPOLESTR* lpVersion) <br>{ <br>    return AboutHelper(IDS_VERSION, lpVersion); <br>} <br> <br> <br>STDMETHODIMP CSnapinAboutImpl::GetSnapinImage(HICON* hAppIcon) <br>{ <br>    if (hAppIcon == NULL) <br>        return E_POINTER; <br> <br>    AFX_MANAGE_STATE(AfxGetStaticModuleState()); <br> <br>    *hAppIcon = LoadIcon(AfxGetInstanceHandle(), MAKEINTRESOURCE(IDI_APPICON)); <br> <br>    ASSERT(*hAppIcon != NULL); <br>    return (*hAppIcon != NULL) ? S_OK : E_FAIL; <br>} <br> <br> <br>STDMETHODIMP CSnapinAboutImpl::GetStaticFolderImage(HBITMAP* hSmallImage,  <br>                                                    HBITMAP* hSmallImageOpen, <br>                                                    HBITMAP* hLargeImage,  <br>                                                    COLORREF* cLargeMask) <br>{ <br>    return S_OK; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
