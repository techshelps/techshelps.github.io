<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SNAPIN.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5799"></a>SNAPIN.H</h2>
<pre><code>/* this ALWAYS GENERATED file contains the definitions for the interfaces */ <br> <br> <br>/* File created by MIDL compiler version 3.00.15 */ <br>/* at Thu Oct 03 17:06:29 1996 <br> */ <br>/* Compiler settings for Snapin.idl: <br>    Os, W1, Zp8, env=Win32, ms_ext, c_ext <br>    error checks: none <br>*/ <br>//@@MIDL_FILE_HEADING(  ) <br>#include "rpc.h" <br>#include "rpcndr.h" <br>#ifndef COM_NO_WINDOWS_H <br>#include "windows.h" <br>#include "ole2.h" <br>#endif /*COM_NO_WINDOWS_H*/ <br> <br>#ifndef __Snapin_h__ <br>#define __Snapin_h__ <br> <br>#ifdef __cplusplus <br>extern "C"{ <br>#endif  <br> <br>/* Forward Declarations */  <br> <br>#ifndef __IComponent_FWD_DEFINED__ <br>#define __IComponent_FWD_DEFINED__ <br>typedef interface IComponent IComponent; <br>#endif /* __IComponent_FWD_DEFINED__ */ <br> <br> <br>/* header files for imported files */ <br>#include "oaidl.h" <br> <br>void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t); <br>void __RPC_USER MIDL_user_free( void __RPC_FAR * );  <br> <br>#ifndef __IComponent_INTERFACE_DEFINED__ <br>#define __IComponent_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IComponent <br> * at Thu Oct 03 17:06:29 1996 <br> * using MIDL 3.00.15 <br> ****************************************/ <br>/* [unique][helpstring][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IComponent; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface IComponent : public IUnknown <br>    { <br>    public: <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IComponentVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IComponent __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IComponent __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IComponent __RPC_FAR * This); <br>         <br>        END_INTERFACE <br>    } IComponentVtbl; <br> <br>    interface IComponent <br>    { <br>        CONST_VTBL struct IComponentVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IComponent_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IComponent_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IComponent_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br> <br>#endif /* __IComponent_INTERFACE_DEFINED__ */ <br> <br> <br> <br>#ifndef __SNAPINLib_LIBRARY_DEFINED__ <br>#define __SNAPINLib_LIBRARY_DEFINED__ <br> <br>/**************************************** <br> * Generated header for library: SNAPINLib <br> * at Thu Oct 03 17:06:29 1996 <br> * using MIDL 3.00.15 <br> ****************************************/ <br>/* [helpstring][version][uuid] */  <br> <br> <br> <br>EXTERN_C const IID LIBID_SNAPINLib; <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_Snapin; <br> <br>class Snapin; <br>#endif <br>#endif /* __SNAPINLib_LIBRARY_DEFINED__ */ <br> <br>/* Additional Prototypes for ALL interfaces */ <br> <br>/* end of Additional Prototypes */ <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
