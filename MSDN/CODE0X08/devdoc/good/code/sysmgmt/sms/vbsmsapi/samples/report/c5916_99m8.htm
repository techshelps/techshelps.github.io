<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PICKPROP.FRM</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5930"></a>PICKPROP.FRM</h2>
<pre><code>VERSION 4.00 <br>Begin VB.Form frmPickProperties  <br>   Appearance      =   0  'Flat <br>   BorderStyle     =   3  'Fixed Dialog <br>   Caption         =   "Pick Machine Properties" <br>   ClientHeight    =   5085 <br>   ClientLeft      =   1740 <br>   ClientTop       =   4650 <br>   ClientWidth     =   9930 <br>   BeginProperty Font  <br>      name            =   "MS Sans Serif" <br>      charset         =   1 <br>      weight          =   700 <br>      size            =   8.25 <br>      underline       =   0   'False <br>      italic          =   0   'False <br>      strikethrough   =   0   'False <br>   EndProperty <br>   ForeColor       =   &amp;H80000008&amp; <br>   Height          =   5490 <br>   Left            =   1680 <br>   LinkTopic       =   "Form1" <br>   MaxButton       =   0   'False <br>   MinButton       =   0   'False <br>   ScaleHeight     =   5085 <br>   ScaleWidth      =   9930 <br>   Top             =   4305 <br>   Width           =   10050 <br>   Begin VB.CommandButton cmdOk  <br>      Appearance      =   0  'Flat <br>      Caption         =   "OK" <br>      Default         =   -1  'True <br>      Height          =   375 <br>      Left            =   8700 <br>      TabIndex        =   13 <br>      Top             =   120 <br>      Width           =   1095 <br>   End <br>   Begin VB.CommandButton cmdCancel  <br>      Appearance      =   0  'Flat <br>      Cancel          =   -1  'True <br>      Caption         =   "Cancel" <br>      Height          =   375 <br>      Left            =   8700 <br>      TabIndex        =   12 <br>      Top             =   540 <br>      Width           =   1095 <br>   End <br>   Begin Threed.SSPanel pnlOutlineBackdrop  <br>      Height          =   4830 <br>      Left            =   120 <br>      TabIndex        =   0 <br>      Top             =   120 <br>      Width           =   8475 <br>      _Version        =   65536 <br>      _ExtentX        =   14949 <br>      _ExtentY        =   8520 <br>      _StockProps     =   15 <br>      Begin Threed.SSFrame frameProperties  <br>         Height          =   3990 <br>         Left            =   480 <br>         TabIndex        =   1 <br>         Top             =   720 <br>         Width           =   7815 <br>         _Version        =   65536 <br>         _ExtentX        =   13785 <br>         _ExtentY        =   7038 <br>         _StockProps     =   14 <br>         ForeColor       =   0 <br>         Enabled         =   0   'False <br>         Begin VB.CommandButton cmdRemove  <br>            Appearance      =   0  'Flat <br>            Caption         =   "&amp;Remove &gt;" <br>            Height          =   375 <br>            Left            =   3330 <br>            TabIndex        =   7 <br>            Top             =   900 <br>            Width           =   1035 <br>         End <br>         Begin VB.CommandButton cmdAdd  <br>            Appearance      =   0  'Flat <br>            Caption         =   "&lt; &amp;Add" <br>            Height          =   375 <br>            Left            =   3330 <br>            TabIndex        =   6 <br>            Top             =   480 <br>            Width           =   1035 <br>         End <br>         Begin Threed.SSPanel pnlDestFrame  <br>            Height          =   3390 <br>            Left            =   180 <br>            TabIndex        =   2 <br>            Top             =   480 <br>            Width           =   3075 <br>            _Version        =   65536 <br>            _ExtentX        =   5424 <br>            _ExtentY        =   5980 <br>            _StockProps     =   15 <br>            BevelOuter      =   1 <br>            Autosize        =   3 <br>            Begin MSOutl.Outline olnDest  <br>               Height          =   3360 <br>               Left            =   15 <br>               TabIndex        =   3 <br>               Top             =   15 <br>               Width           =   3045 <br>               _Version        =   65536 <br>               _ExtentX        =   5371 <br>               _ExtentY        =   5927 <br>               _StockProps     =   77 <br>               BackColor       =   -2147483643 <br>               PathSeparator   =   "|" <br>               Style           =   1 <br>            End <br>         End <br>         Begin Threed.SSPanel pnlSrceFrame  <br>            Height          =   3390 <br>            Left            =   4440 <br>            TabIndex        =   4 <br>            Top             =   480 <br>            Width           =   3255 <br>            _Version        =   65536 <br>            _ExtentX        =   5741 <br>            _ExtentY        =   5980 <br>            _StockProps     =   15 <br>            BevelOuter      =   1 <br>            Autosize        =   3 <br>            Begin MSOutl.Outline olnSrce  <br>               Height          =   3360 <br>               Left            =   15 <br>               TabIndex        =   5 <br>               Top             =   15 <br>               Width           =   3225 <br>               _Version        =   65536 <br>               _ExtentX        =   5689 <br>               _ExtentY        =   5927 <br>               _StockProps     =   77 <br>               BackColor       =   -2147483643 <br>               PathSeparator   =   "|" <br>               Style           =   1 <br>            End <br>         End <br>         Begin VB.Label lblDest  <br>            Appearance      =   0  'Flat <br>            AutoSize        =   -1  'True <br>            Caption         =   "&amp;Don't include these properties" <br>            ForeColor       =   &amp;H80000008&amp; <br>            Height          =   195 <br>            Left            =   4440 <br>            TabIndex        =   9 <br>            Top             =   240 <br>            Width           =   2565 <br>         End <br>         Begin VB.Label lblSrce  <br>            Appearance      =   0  'Flat <br>            AutoSize        =   -1  'True <br>            Caption         =   "&amp;Include these properties" <br>            ForeColor       =   &amp;H80000008&amp; <br>            Height          =   195 <br>            Left            =   240 <br>            TabIndex        =   8 <br>            Top             =   240 <br>            Width           =   2070 <br>         End <br>      End <br>      Begin Threed.SSOption optAllProperties  <br>         Height          =   195 <br>         Left            =   240 <br>         TabIndex        =   11 <br>         Top             =   180 <br>         Width           =   4215 <br>         _Version        =   65536 <br>         _ExtentX        =   7435 <br>         _ExtentY        =   344 <br>         _StockProps     =   78 <br>         Caption         =   "Include all properties in report" <br>         Value           =   -1  'True <br>      End <br>      Begin Threed.SSOption optSelectProperties  <br>         Height          =   195 <br>         Left            =   240 <br>         TabIndex        =   10 <br>         TabStop         =   0   'False <br>         Top             =   540 <br>         Width           =   4335 <br>         _Version        =   65536 <br>         _ExtentX        =   7646 <br>         _ExtentY        =   344 <br>         _StockProps     =   78 <br>         Caption         =   "Select properties in report" <br>      End <br>   End <br>End <br>Attribute VB_Name = "frmPickProperties" <br>Attribute VB_Creatable = False <br>Attribute VB_Exposed = False <br>Option Explicit <br> <br>'//**************************************************************************** <br>'// <br>'//  Copyright (c) 1995, Microsoft Corporation <br>'// <br>'//  File:  PICKPROP.FRM <br>'// <br>'//  History: <br>'// <br>'//      Gary Fuehrer, SEA   5/9/95      Created. <br>'// <br>'//**************************************************************************** <br> <br>Dim OldMousePointer% <br>Dim CallingForm As Form <br> <br>Dim hConnect&amp; <br>Dim MachineGroupID$ <br> <br>'State flag and Arrays <br>Dim bGetData%  'If True, getting machine Attributes from SMS. <br>Dim PropertyList$() <br>Dim PropertyCount% <br> <br>'Some relavent names for the outline control pictures <br>Const MSOUTLINE_PICTURE_GROUP = MSOUTLINE_PICTURE_CLOSED <br>Const MSOUTLINE_PICTURE_MACHINE = MSOUTLINE_PICTURE_OPEN <br> <br>Private Sub AddPropertyToOutline(Property$, oln As Outline, ByVal PropertyData&amp;) <br>    Dim Pos1%, Pos2%, PropertyCategory$, PropertyVersion$, PropertyName$ <br>    Dim ListIndex%, Found% <br> <br>    'Property Name not available. Use part of Property ID string. <br>    Pos1% = InStr(Property$, "|") <br>    Pos2% = InStr(Pos1% + 1, Property$, "|") <br>    If Pos1% &lt;= 0 Or Pos2% &lt;= 0 Then Exit Sub <br>    PropertyCategory$ = LCase$(left$(Property$, Pos1% - 1)) <br>    PropertyVersion$ = LCase$(Mid$(Property$, Pos2% + 1)) <br>    PropertyName$ = LCase$(Mid$(Property$, Pos1% + 1, Pos2% - Pos1% - 1)) <br> <br>    'Find category <br>    Found% = False <br>    For ListIndex% = 0 To oln.ListCount - 1 <br>        If oln.Indent(ListIndex%) &lt;= 1 Then <br>            If oln.List(ListIndex%) = PropertyCategory$ Then <br>                Found% = True <br>                Exit For <br>            End If <br>        End If <br>    Next ListIndex% <br>    If Not Found% Then <br>        'Add a new category item <br>        oln.AddItem PropertyCategory$, ListIndex% <br>        oln.Indent(ListIndex%) = 1 <br>        oln.PictureType(ListIndex) = MSOUTLINE_PICTURE_CLOSED <br>        oln.ItemData(ListIndex%) = -1 <br>    End If <br> <br>    'Find Property <br>    Found% = False <br>    For ListIndex% = ListIndex% + 1 To oln.ListCount - 1 <br>        If oln.Indent(ListIndex%) &lt;= 2 Then <br>            If oln.Indent(ListIndex%) &lt;= 1 Then Exit For <br>            If oln.List(ListIndex%) = PropertyName$ Then <br>                Found% = True <br>                Exit For <br>            End If <br>        End If <br>    Next ListIndex% <br>    If Not Found% Then <br>        'Add a new version item <br>        oln.AddItem PropertyName$, ListIndex% <br>        oln.Indent(ListIndex%) = 2 <br>        oln.PictureType(ListIndex) = MSOUTLINE_PICTURE_LEAF <br>        oln.ItemData(ListIndex%) = PropertyData&amp; <br> <br>        oln.Refresh <br>    End If <br>End Sub <br> <br>Private Sub cmdAdd_Click() <br>    Dim ListIndex%, Indent% <br> <br>    ListIndex% = olnSrce.ListIndex <br>    If ListIndex% &lt; 0 Then Exit Sub <br>    Indent% = olnSrce.Indent(ListIndex%) <br> <br>    'Add selection <br>    If olnSrce.ItemData(ListIndex%) &gt;= 0 Then <br>        AddPropertyToOutline PropertyList$(olnSrce.ItemData(ListIndex%)), olnDest, olnSrce.ItemData(ListIndex%) <br>    End If <br> <br>    'Add children of selection <br>    Do While ListIndex% + 1 &lt; olnSrce.ListCount <br>        ListIndex% = ListIndex% + 1 <br>        If olnSrce.Indent(ListIndex%) &gt; Indent% Then <br>            If olnSrce.ItemData(ListIndex%) &gt;= 0 Then <br>                AddPropertyToOutline PropertyList$(olnSrce.ItemData(ListIndex%)), olnDest, olnSrce.ItemData(ListIndex%) <br>            End If <br>        Else: Exit Do <br>        End If <br>    Loop <br>End Sub <br> <br>Private Sub cmdCancel_Click() <br>    Unload Me <br>End Sub <br> <br>Private Sub cmdOk_Click() <br>    Dim ListIndex% <br> <br>    PickPropertiesCount% = 0 <br> <br>    PickPropertiesIsFiltered% = optSelectProperties.Value <br>    If PickPropertiesIsFiltered% Then <br>        'Return list of properties picked <br>        ReDim PickPropertiesList$(0 To olnDest.ListCount) <br>        For ListIndex% = 0 To olnDest.ListCount - 1 <br>            If olnDest.Indent(ListIndex%) = 2 Then <br>                PickPropertiesList$(PickPropertiesCount%) = PropertyList$(olnDest.ItemData(ListIndex%)) <br>                PickPropertiesCount% = PickPropertiesCount% + 1 <br>            End If <br>        Next ListIndex% <br>    End If <br> <br>    'User didn't cancel <br>    PickPropertiesUserCanceled% = False <br>    Unload Me <br>End Sub <br> <br>Private Sub cmdRemove_Click() <br>    Dim ListIndex%, Indent% <br> <br>    ListIndex% = olnDest.ListIndex <br>    If ListIndex% &lt; 0 Then Exit Sub <br>    Indent% = olnDest.Indent(ListIndex%) <br> <br>    'Remove selection <br>    olnDest.RemoveItem ListIndex% <br> <br>    'Remove children of selection <br>    Do While ListIndex% &lt; olnDest.ListCount <br>        If olnDest.Indent(ListIndex%) &gt; Indent% Then <br>            olnDest.RemoveItem ListIndex% <br>        Else: Exit Do <br>        End If <br>    Loop <br>End Sub <br> <br>Private Sub Form_Activate() <br>    bGetData% = True <br>    GetMachineGroups <br>    If bGetData% Then <br>        bGetData% = False <br>    Else: Unload Me <br>    End If <br>End Sub <br> <br>Private Sub Form_Load() <br>    Dim NewLeft%, NewTop% <br>     <br>    'Save the old mouse pointer <br>    Set CallingForm = Screen.ActiveForm <br>    OldMousePointer% = CallingForm.MousePointer <br>     <br>    'Turn on normal pointer <br>    MousePointer = NORMAL <br>     <br>    'Center form on calling form <br>    NewLeft% = CallingForm.left + (CallingForm.Width - Width) / 2 <br>    If NewLeft% + Width &gt; Screen.Width Then NewLeft% = Screen.Width - Width <br>    If NewLeft% &lt; 0 Then NewLeft% = 0 <br>    NewTop% = CallingForm.top + (CallingForm.Height - Height) / 2 <br>    If NewTop% + Height &gt; Screen.Height Then NewTop% = Screen.Height - Height <br>    If NewTop% &lt; 0 Then NewTop% = 0 <br>    left = NewLeft% <br>    top = NewTop% <br> <br>    'Copy parameters locally <br>    hConnect&amp; = PickPropertieshConnect&amp; <br>    MachineGroupID$ = PickPropertiesMachineGroupID$ <br> <br>    'Set default to be user canceled <br>    PickPropertiesUserCanceled% = True <br>End Sub <br> <br>Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer) <br>    If bGetData% Then <br>        bGetData% = False <br>        Cancel = True <br>        Exit Sub <br>    End If <br>End Sub <br> <br>Private Sub Form_Unload(Cancel As Integer) <br>    'Replace mouse pointer <br>    CallingForm.MousePointer = OldMousePointer% <br>End Sub <br> <br>Private Sub GetMachineGroups() <br>    Dim hContainer&amp;, hSubFolder&amp; <br>    Dim lRet&amp;, Resp% <br> <br>    ReDim PropertyList$(0 To 0) <br>    PropertyCount% = 0 <br> <br>    lRet&amp; = SmsOpenContainer&amp;(C_MACHINEGROUP, hConnect&amp;, hContainer&amp;) <br>    If lRet&amp; &lt;&gt; SMS_OK Then <br>        MsgBox "SMS Error:" + Chr$(10) + Chr$(10) + SMSError$(lRet&amp;), MB_ICONEXCLAMATION + MB_OK, Caption <br>        Exit Sub <br>    End If <br> <br>    lRet&amp; = SmsPopulate&amp;(hContainer&amp;, POP_SYNC, ByVal 0&amp;) <br>    If lRet&amp; &lt;&gt; SMS_OK And lRet&amp; &lt;&gt; SMS_EMPTY Then <br>        MsgBox "SMS Error:" + Chr$(10) + Chr$(10) + SMSError$(lRet&amp;), MB_ICONEXCLAMATION + MB_OK, Caption <br>        GoTo GetMachineGroupsQuit <br>    End If <br> <br>    'List the machine groups in this container <br>    Resp% = IDOK <br>    lRet&amp; = SmsGetNextFolder&amp;(hContainer&amp;, F_ANY, hSubFolder&amp;) <br>    Do While lRet&amp; = SMS_OK <br>        'Get subfolders <br>        Resp% = GetMachines%(hSubFolder&amp;) <br> <br>        'See if the user canceled <br>        If Not bGetData% Then Resp% = IDABORT <br> <br>        'Check the user response <br>        Select Case Resp% <br>            Case IDOK, IDIGNORE <br>                lRet&amp; = SmsCloseFolder&amp;(hSubFolder&amp;) <br>                lRet&amp; = SmsGetNextFolder&amp;(hContainer&amp;, F_ANY, hSubFolder&amp;) <br>                Resp% = IDOK <br>            Case IDABORT <br>                lRet&amp; = SmsCloseFolder&amp;(hSubFolder&amp;) <br>                lRet&amp; = SMS_NO_MORE_DATA <br>        End Select <br>    Loop <br>    If lRet&amp; &lt;&gt; SMS_NO_MORE_DATA Then <br>        MsgBox "SMS Error:" + Chr$(10) + Chr$(10) + SMSError$(lRet&amp;), MB_ICONEXCLAMATION + MB_OK, Caption <br>    End If <br> <br>GetMachineGroupsQuit: <br>    lRet&amp; = SmsCloseContainer&amp;(hContainer&amp;) <br>End Sub <br> <br>Private Function GetMachineProperties%(ByVal hFolder&amp;) <br>    Dim hSubFolder&amp;, TypeName$, FolderType&amp; <br>    Dim lRet&amp;, Resp% <br> <br>    'Default return value IDOK (Entry added) <br>    GetMachineProperties% = IDOK <br> <br>    'Get this folder's type (expect Machine) <br>    lRet&amp; = SmsGetFolderType&amp;(hFolder&amp;, FolderType&amp;, TypeName$) <br>    If lRet&amp; &lt;&gt; SMS_OK Then <br>        GetMachineProperties% = MsgBox("SMS Error:" + Chr$(10) + Chr$(10) + SMSError$(lRet&amp;), MB_ICONEXCLAMATION + MB_ABORTRETRYIGNORE, Caption) <br>        Exit Function <br>    End If <br> <br>    Select Case TypeName$ <br>        Case "Machine" <br> <br>        Case Else <br>            Exit Function <br>    End Select <br> <br>    'List the properties in this machine folder <br>    Resp% = IDOK <br>    lRet&amp; = SmsGetNextFolder&amp;(hFolder&amp;, F_ANY, hSubFolder&amp;) <br>    Do While lRet&amp; = SMS_OK <br>        'Get subfolders <br>        Resp% = GetProperty%(hSubFolder&amp;) <br> <br>        'See if user canceled <br>        If Not bGetData% Then Resp% = IDABORT <br> <br>        'Check the user response <br>        Select Case Resp% <br>            Case IDOK, IDIGNORE <br>                lRet&amp; = SmsCloseFolder&amp;(hSubFolder&amp;) <br>                lRet&amp; = SmsGetNextFolder&amp;(hFolder&amp;, F_ANY, hSubFolder&amp;) <br>                Resp% = IDOK <br>            Case IDABORT <br>                lRet&amp; = SmsCloseFolder&amp;(hSubFolder&amp;) <br>                lRet&amp; = SMS_NO_MORE_DATA <br>            Case IDRETRY <br>                lRet&amp; = SMS_OK <br>        End Select <br>    Loop <br>    If lRet&amp; &lt;&gt; SMS_NO_MORE_DATA Then <br>        MsgBox "SMS Error:" + Chr$(10) + Chr$(10) + SMSError$(lRet&amp;), MB_ICONEXCLAMATION + MB_OK, Caption <br>    End If <br> <br>    'Set the return value (either IDABORT or IDOK) <br>    GetMachineProperties% = Resp% <br>End Function <br> <br>Private Function GetMachines%(hFolder&amp;) <br>    Dim hSubFolder&amp;, TypeName$, FolderType&amp;, Group$ <br>    Dim lRet&amp;, Resp% <br> <br>    'Default return value IDOK (Entry added) <br>    GetMachines% = IDOK <br> <br>    'Get this folder's type (expect Machine Group) <br>    lRet&amp; = SmsGetFolderType&amp;(hFolder&amp;, FolderType&amp;, TypeName$) <br>    If lRet&amp; &lt;&gt; SMS_OK Then <br>        GetMachines% = MsgBox("SMS Error:" + Chr$(10) + Chr$(10) + SMSError$(lRet&amp;), MB_ICONEXCLAMATION + MB_ABORTRETRYIGNORE, Caption) <br>        Exit Function <br>    End If <br> <br>    Select Case TypeName$ <br>        Case "Machine Group" <br>            lRet&amp; = SmsGetFolderID&amp;(hFolder&amp;, Group$) <br>            If lRet&amp; &lt;&gt; SMS_OK Then <br>                GetMachines% = MsgBox("SMS Error:" + Chr$(10) + Chr$(10) + SMSError$(lRet&amp;), MB_ICONEXCLAMATION + MB_ABORTRETRYIGNORE, Caption) <br>                Exit Function <br>            End If <br> <br>            'See if this is the choosen group <br>            If Group$ &lt;&gt; MachineGroupID$ Then Exit Function <br> <br>        Case Else <br>            Exit Function <br>    End Select <br> <br>    'List the machine groups in this container <br>    Resp% = IDOK <br>    lRet&amp; = SmsGetNextFolder&amp;(hFolder&amp;, F_ANY, hSubFolder&amp;) <br>    Do While lRet&amp; = SMS_OK <br>        'Get subfolders <br>        Resp% = GetMachineProperties%(hSubFolder&amp;) <br> <br>        'See if the user canceled <br>        If Not bGetData% Then Resp% = IDABORT <br> <br>        'Check the user response <br>        Select Case Resp% <br>            Case IDOK, IDIGNORE <br>                lRet&amp; = SmsCloseFolder&amp;(hSubFolder&amp;) <br>                lRet&amp; = SmsGetNextFolder&amp;(hFolder&amp;, F_ANY, hSubFolder&amp;) <br>                Resp% = IDOK <br>            Case IDABORT <br>                lRet&amp; = SmsCloseFolder&amp;(hSubFolder&amp;) <br>                lRet&amp; = SMS_NO_MORE_DATA <br>            Case IDRETRY <br>                lRet&amp; = SMS_OK <br>        End Select <br>    Loop <br>    If lRet&amp; &lt;&gt; SMS_NO_MORE_DATA Then <br>        MsgBox "SMS Error:" + Chr$(10) + Chr$(10) + SMSError$(lRet&amp;), MB_ICONEXCLAMATION + MB_OK, Caption <br>    End If <br> <br>    'Set the return value (either IDABORT or IDOK) <br>    GetMachines% = Resp% <br>End Function <br> <br>Private Function GetProperty%(ByVal hFolder&amp;) <br>    Dim TypeName$, FolderType&amp; <br>    Dim Property$ <br>    Dim lRet&amp;, Resp%, Index% <br> <br>    'Default return value IDOK (Entry added) <br>    GetProperty% = IDOK <br> <br>    'Get this folder's type (expect Group) <br>    lRet&amp; = SmsGetFolderType&amp;(hFolder&amp;, FolderType&amp;, TypeName$) <br>    If lRet&amp; &lt;&gt; SMS_OK Then <br>        GetProperty% = MsgBox("SMS Error:" + Chr$(10) + Chr$(10) + SMSError$(lRet&amp;), MB_ICONEXCLAMATION + MB_ABORTRETRYIGNORE, Caption) <br>        Exit Function <br>    End If <br> <br>    Select Case TypeName$ <br>        Case "Group" <br>            lRet&amp; = SmsGetFolderID&amp;(hFolder&amp;, Property$) <br> <br>            If lRet&amp; &lt;&gt; SMS_OK Then <br>                GetProperty% = MsgBox("SMS Error:" + Chr$(10) + Chr$(10) + SMSError$(lRet&amp;), MB_ICONEXCLAMATION + MB_ABORTRETRYIGNORE, Caption) <br>                Exit Function <br>            End If <br>        Case Else <br>            Exit Function <br>    End Select <br> <br>    DoEvents <br> <br>    If bGetData% Then <br>        'Add item to outline <br>        AddPropertyToOutline Property$, olnSrce, PropertyCount% <br> <br>        'Add to property list <br>        If UBound(PropertyList$) &gt;= PropertyCount% Then ReDim Preserve PropertyList$(0 To PropertyCount% + 32) <br>        PropertyList$(PropertyCount%) = Property$ <br>        PropertyCount% = PropertyCount% + 1 <br> <br>        Resp% = IDOK <br>    Else: Resp% = IDABORT <br>    End If <br> <br>    'Set the return value (either IDABORT or IDOK) <br>    GetProperty% = Resp% <br>End Function <br> <br>Private Sub olnDest_Click() <br>    ' <br>End Sub <br> <br>Private Sub olnDest_Collapse(ListIndex As Integer) <br>    If olnDest.PictureType(ListIndex) = MSOUTLINE_PICTURE_OPEN Then <br>        olnDest.PictureType(ListIndex) = MSOUTLINE_PICTURE_CLOSED <br>    End If <br>End Sub <br> <br>Private Sub olnDest_DblClick() <br>    olnDest.Expand(olnDest.ListIndex) = Not olnDest.Expand(olnDest.ListIndex) <br>End Sub <br> <br>Private Sub olnDest_Expand(ListIndex As Integer) <br>    If olnDest.Indent(ListIndex) &lt;= 1 Then <br>        If olnDest.Expand(ListIndex) Then <br>            olnDest.PictureType(ListIndex) = MSOUTLINE_PICTURE_OPEN <br>        Else: olnDest.PictureType(ListIndex) = MSOUTLINE_PICTURE_CLOSED <br>        End If <br>    End If <br>End Sub <br> <br>Private Sub olnDest_PictureClick(ListIndex As Integer) <br>    olnDest.ListIndex = ListIndex <br>    olnDest_Click <br>End Sub <br> <br>Private Sub olnDest_PictureDblClick(ListIndex As Integer) <br>    olnDest_PictureClick ListIndex <br>    olnDest_DblClick <br>End Sub <br> <br>Private Sub olnSrce_Click() <br>    ' <br>End Sub <br> <br>Private Sub olnSrce_Collapse(ListIndex As Integer) <br>    If olnSrce.PictureType(ListIndex) = MSOUTLINE_PICTURE_OPEN Then <br>        olnSrce.PictureType(ListIndex) = MSOUTLINE_PICTURE_CLOSED <br>    End If <br>End Sub <br> <br>Private Sub olnSrce_DblClick() <br>    olnSrce.Expand(olnSrce.ListIndex) = Not olnSrce.Expand(olnSrce.ListIndex) <br>End Sub <br> <br>Private Sub olnSrce_Expand(ListIndex As Integer) <br>    If olnSrce.Indent(ListIndex) &lt;= 1 Then <br>        If olnSrce.Expand(ListIndex) Then <br>            olnSrce.PictureType(ListIndex) = MSOUTLINE_PICTURE_OPEN <br>        Else: olnSrce.PictureType(ListIndex) = MSOUTLINE_PICTURE_CLOSED <br>        End If <br>    End If <br>End Sub <br> <br>Private Sub olnSrce_PictureClick(ListIndex As Integer) <br>    olnSrce.ListIndex = ListIndex <br>    olnSrce_Click <br>End Sub <br> <br>Private Sub olnSrce_PictureDblClick(ListIndex As Integer) <br>    olnSrce_PictureClick ListIndex <br>    olnSrce_DblClick <br>End Sub <br> <br>Private Sub optAllProperties_Click(Value As Integer) <br>    frameProperties.Enabled = Not Value <br>End Sub <br> <br>Private Sub optSelectProperties_Click(Value As Integer) <br>    frameProperties.Enabled = Value <br>End Sub <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
