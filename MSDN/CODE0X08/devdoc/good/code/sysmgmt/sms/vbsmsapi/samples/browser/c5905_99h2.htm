<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BROWSER.FRM</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5906"></a>BROWSER.FRM</h2>
<pre><code>VERSION 4.00 <br>Begin VB.MDIForm frmBrowser  <br>   Appearance      =   0  'Flat <br>   BackColor       =   &amp;H8000000C&amp; <br>   Caption         =   "SMS Browser" <br>   ClientHeight    =   4725 <br>   ClientLeft      =   1995 <br>   ClientTop       =   1785 <br>   ClientWidth     =   7935 <br>   Height          =   5415 <br>   Icon            =   "BROWSER.frx":0000 <br>   Left            =   1935 <br>   LinkTopic       =   "Form1" <br>   Top             =   1155 <br>   Width           =   8055 <br>   Begin VB.PictureBox picFormBackdrop  <br>      Align           =   1  'Align Top <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H80000005&amp; <br>      BorderStyle     =   0  'None <br>      BeginProperty Font  <br>         name            =   "MS Sans Serif" <br>         charset         =   0 <br>         weight          =   700 <br>         size            =   8.25 <br>         underline       =   0   'False <br>         italic          =   0   'False <br>         strikethrough   =   0   'False <br>      EndProperty <br>      ForeColor       =   &amp;H80000008&amp; <br>      Height          =   4335 <br>      Left            =   0 <br>      ScaleHeight     =   4335 <br>      ScaleWidth      =   7935 <br>      TabIndex        =   4 <br>      TabStop         =   0   'False <br>      Top             =   0 <br>      Width           =   7935 <br>      Begin VB.PictureBox picSeperator  <br>         Appearance      =   0  'Flat <br>         BackColor       =   &amp;H80000005&amp; <br>         BeginProperty Font  <br>            name            =   "MS Sans Serif" <br>            charset         =   0 <br>            weight          =   700 <br>            size            =   8.25 <br>            underline       =   0   'False <br>            italic          =   0   'False <br>            strikethrough   =   0   'False <br>         EndProperty <br>         ForeColor       =   &amp;H80000008&amp; <br>         Height          =   4215 <br>         Left            =   3420 <br>         MousePointer    =   9  'Size W E <br>         ScaleHeight     =   4185 <br>         ScaleWidth      =   45 <br>         TabIndex        =   5 <br>         TabStop         =   0   'False <br>         Top             =   0 <br>         Width           =   75 <br>      End <br>      Begin VB.PictureBox picRightView  <br>         Appearance      =   0  'Flat <br>         BackColor       =   &amp;H80000005&amp; <br>         BorderStyle     =   0  'None <br>         BeginProperty Font  <br>            name            =   "MS Sans Serif" <br>            charset         =   0 <br>            weight          =   700 <br>            size            =   8.25 <br>            underline       =   0   'False <br>            italic          =   0   'False <br>            strikethrough   =   0   'False <br>         EndProperty <br>         ForeColor       =   &amp;H80000008&amp; <br>         Height          =   3495 <br>         Left            =   3480 <br>         ScaleHeight     =   3495 <br>         ScaleWidth      =   3735 <br>         TabIndex        =   7 <br>         TabStop         =   0   'False <br>         Top             =   0 <br>         Width           =   3735 <br>         Begin Threed.SSPanel pnlInfoHeader  <br>            Height          =   255 <br>            Left            =   0 <br>            TabIndex        =   2 <br>            Top             =   0 <br>            Width           =   2895 <br>            _Version        =   65536 <br>            _ExtentX        =   5106 <br>            _ExtentY        =   450 <br>            _StockProps     =   15 <br>            Caption         =   "&amp;Object Information" <br>            BackColor       =   -2147483633 <br>            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851}  <br>               name            =   "MS Sans Serif" <br>               charset         =   0 <br>               weight          =   700 <br>               size            =   8.25 <br>               underline       =   0   'False <br>               italic          =   0   'False <br>               strikethrough   =   0   'False <br>            EndProperty <br>            BevelWidth      =   2 <br>            BorderWidth     =   0 <br>            Autosize        =   3 <br>         End <br>         Begin VB.ListBox lstObjectInfo  <br>            Appearance      =   0  'Flat <br>            BeginProperty Font  <br>               name            =   "MS Sans Serif" <br>               charset         =   0 <br>               weight          =   700 <br>               size            =   8.25 <br>               underline       =   0   'False <br>               italic          =   0   'False <br>               strikethrough   =   0   'False <br>            EndProperty <br>            Height          =   3150 <br>            Left            =   0 <br>            TabIndex        =   3 <br>            Top             =   240 <br>            Width           =   2865 <br>         End <br>      End <br>      Begin VB.PictureBox picLeftView  <br>         Appearance      =   0  'Flat <br>         BackColor       =   &amp;H80000005&amp; <br>         BorderStyle     =   0  'None <br>         BeginProperty Font  <br>            name            =   "MS Sans Serif" <br>            charset         =   0 <br>            weight          =   700 <br>            size            =   8.25 <br>            underline       =   0   'False <br>            italic          =   0   'False <br>            strikethrough   =   0   'False <br>         EndProperty <br>         ForeColor       =   &amp;H80000008&amp; <br>         Height          =   4095 <br>         Left            =   0 <br>         ScaleHeight     =   4095 <br>         ScaleWidth      =   3075 <br>         TabIndex        =   6 <br>         TabStop         =   0   'False <br>         Top             =   0 <br>         Width           =   3075 <br>         Begin Threed.SSPanel pnlContainerHeader  <br>            Height          =   255 <br>            Left            =   0 <br>            TabIndex        =   0 <br>            Top             =   0 <br>            Width           =   2175 <br>            _Version        =   65536 <br>            _ExtentX        =   3836 <br>            _ExtentY        =   450 <br>            _StockProps     =   15 <br>            Caption         =   "&amp;Container" <br>            BackColor       =   -2147483633 <br>            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851}  <br>               name            =   "MS Sans Serif" <br>               charset         =   0 <br>               weight          =   700 <br>               size            =   8.25 <br>               underline       =   0   'False <br>               italic          =   0   'False <br>               strikethrough   =   0   'False <br>            EndProperty <br>            BevelWidth      =   2 <br>            BorderWidth     =   0 <br>            Autosize        =   3 <br>         End <br>         Begin MSOutl.Outline olnContainer  <br>            Height          =   2715 <br>            Left            =   0 <br>            TabIndex        =   1 <br>            Top             =   240 <br>            Width           =   2175 <br>            _Version        =   65536 <br>            _ExtentX        =   3836 <br>            _ExtentY        =   4789 <br>            _StockProps     =   77 <br>            ForeColor       =   -2147483630 <br>            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851}  <br>               name            =   "MS Sans Serif" <br>               charset         =   0 <br>               weight          =   700 <br>               size            =   8.25 <br>               underline       =   0   'False <br>               italic          =   0   'False <br>               strikethrough   =   0   'False <br>            EndProperty <br>            BorderStyle     =   0 <br>            PicturePlus     =   "BROWSER.frx":030A <br>            PictureMinus    =   "BROWSER.frx":047C <br>            PictureLeaf     =   "BROWSER.frx":05EE <br>            PictureOpen     =   "BROWSER.frx":0760 <br>            PictureClosed   =   "BROWSER.frx":08D2 <br>         End <br>      End <br>   End <br>   Begin VB.Menu mnuFile  <br>      Caption         =   "&amp;File" <br>      Begin VB.Menu mnuFileNewContainer  <br>         Caption         =   "New &amp;Container" <br>      End <br>      Begin VB.Menu mnuFileExit  <br>         Caption         =   "&amp;Exit" <br>      End <br>   End <br>   Begin VB.Menu mnuHelp  <br>      Caption         =   "&amp;Help" <br>      Begin VB.Menu mnuHelpAbout  <br>         Caption         =   "&amp;About..." <br>      End <br>   End <br>End <br>Attribute VB_Name = "frmBrowser" <br>Attribute VB_Creatable = False <br>Attribute VB_Exposed = False <br>Option Explicit <br> <br>Dim ghConnect&amp; <br>Dim gContainerCount&amp; <br> <br>'Seperator dragging state and cursor offset <br>Dim SeperatorDragging% <br>Dim SeperatorDragOffset% <br> <br>Private Function ConvertTimetToDateTime(timet&amp;) As Double <br>    Dim dtimet As Double <br>     <br>    If timet &lt; 0 Then <br>        dtimet = CDbl(&amp;H7FFFFFFF) + 1 + (timet Or &amp;H7FFFFFFF) <br>    Else: dtimet = CDbl(timet) <br>    End If <br>    ConvertTimetToDateTime = CVDate("1 Jan 1970") + dtimet / 86400 <br>End Function <br> <br>Private Function GetScalarTypeName$(scType As SCALARTYPE) <br>    Select Case scType.enum <br>        Case SCALAR_STRING.enum <br>            GetScalarTypeName$ = "String" <br>        Case SCALAR_INT.enum <br>            GetScalarTypeName$ = "Number" <br>        Case SCALAR_TIME.enum <br>            GetScalarTypeName$ = "DateTime" <br>        Case SCALAR_BINARY.enum <br>            GetScalarTypeName$ = "Binary" <br>    End Select <br>End Function <br> <br>Private Sub MDIForm_Load() <br>    Dim SqlConnectParams As SQL_CONNECT_PARAMS <br> <br>    'Get the size of one pixel size in twips <br>    GetPixelSizeInTwips Me, X_PIX_SIZE, Y_PIX_SIZE <br> <br>    'Login to SMS <br>    If DBLogin%(SqlConnectParams, ghConnect&amp;) = False Then <br>        'User canceled, so quit application <br>        Unload Me <br>        Exit Sub <br>    End If <br> <br>    'Position Left View and controls (will be resized later) <br>    picLeftView.left = 0 <br>    picLeftView.top = 0 <br>        pnlContainerHeader.left = 0 <br>        pnlContainerHeader.top = 0 <br>        olnContainer.left = 0 <br>        olnContainer.top = pnlContainerHeader.Height <br>    picLeftView.Width = 2000 <br> <br>    'Position View Seperator (will be resized later) <br>    picSeperator.left = picLeftView.Width <br>    picSeperator.top = -Y_PIX_SIZE <br> <br>    'Position Right View and controls (will be resized later) <br>    picRightView.left = picSeperator.left + picSeperator.Width <br>    picRightView.top = 0 <br>        pnlInfoHeader.left = 0 <br>        pnlInfoHeader.top = 0 <br>        lstObjectInfo.left = -X_PIX_SIZE <br>        lstObjectInfo.top = pnlInfoHeader.Height - Y_PIX_SIZE <br> <br>    olnContainer.AddItem "SMS Containers", 0 <br>    olnContainer.Indent(0) = 1 <br>    olnContainer.ItemData(0) = AddOutlineEntry&amp;(T_ROOTOBJECT, 0, 0, True) <br>    olnContainer.ListIndex = 0 <br> <br>End Sub <br> <br>Private Sub MDIForm_Resize() <br>    Static OldHeight <br>    Dim r As Rect, VBorderPixels% <br> <br>    'See if we're minimized <br>    If WindowState = MINIMIZED Then Exit Sub <br> <br>    'Get client size of form (already in pixels, I find) <br>    GetClientRect hwnd, r <br>    VBorderPixels% = Height / Y_PIX_SIZE - r.bottom <br> <br>    If OldHeight &lt;&gt; Height Then <br>        picFormBackdrop.Height = Height - Y_PIX_SIZE * VBorderPixels% - picFormBackdrop.top <br> <br>        OldHeight = Height <br>    End If <br>End Sub <br> <br>Private Sub MDIForm_Unload(Cancel As Integer) <br>    Dim lRet&amp;, ListIndex% <br> <br>    Me.Hide <br> <br>    Do While olnContainer.ListCount <br>        olnContainer.Expand(0) = False <br>        FreeOutlineEntry olnContainer.ItemData(0) <br>        olnContainer.RemoveItem 0 <br>    Loop <br> <br>    DBLogout ghConnect&amp; <br>End Sub <br> <br>Private Sub mnuFileExit_Click() <br>    Unload Me <br>End Sub <br> <br>Private Sub mnuFileNewContainer_Click() <br>    Dim ContainerName$, ContainerTag&amp;, FolderInfo As FOLDER_INFO <br>    Dim ListIndex%, lRet&amp; <br> <br>    If NewContainer%(ghConnect&amp;, ContainerName$, ContainerTag&amp;) Then <br>        lRet&amp; = SmsDescribeFolder&amp;(T_CONTAINER, ContainerTag&amp;, FolderInfo) <br>        If (lRet&amp; &lt;&gt; SMS_OK) Then GoTo mnuFileNewContainerClickErr <br>     <br>        ListIndex% = olnContainer.ListCount <br>        olnContainer.AddItem ContainerName$ + " (" + FolderInfo.pszTag + ")", ListIndex% <br>        olnContainer.Indent(ListIndex%) = 2 <br>        olnContainer.ItemData(ListIndex%) = AddOutlineEntry&amp;(T_CONTAINER, ContainerTag&amp;, 0&amp;, True) <br>        olnContainer.PictureType(ListIndex%) = MSOUTLINE_PICTURE_CLOSED <br>        If Not olnContainer.Expand(0) Then olnContainer.Expand(0) = True <br>    End If <br> <br>    Exit Sub <br> <br>mnuFileNewContainerClickErr: <br>    MsgBox "mnuFileNewContainer_Click: Unexpected error", MB_OK, Me.Caption <br>End Sub <br> <br>Private Sub mnuHelpAbout_Click() <br>    Dim Info$ <br> <br>    Info$ = "SMS Browser" + Chr$(10) + Chr$(10) + "A Microsoft SMS SDK sample application" <br>    Info$ = Info$ + Chr$(10) + "written in Microsoft Visual Basic 3.0 Professional Edition that" <br>    Info$ = Info$ + Chr$(10) + "demonstrates the Visual Basic Wrapper DLL for SMS API." <br> <br>    SmsAbout "About SMS Browser", Info$ <br>End Sub <br> <br>Private Sub olnContainer_Click() <br>    Dim SelEntry As OutlineEntryData <br>    Static NextScalar As SCALAR, FilterInfo As FILTER_INFO <br>    Dim Filters() As FILTER_INFO, FilterCount&amp; <br>    Dim FolderInfo As FOLDER_INFO, SubInfo As FOLDER_INFO, FolderTag&amp;, FolderTagName$ <br>    Dim SMSAPIVersion$, Text$ <br>    Dim i%, j%, Row%, ListIndex%, DateTime#, lRet&amp;, FilterIndex%, lFilterCount&amp; <br>    ReDim FolderTags&amp;(0), FilterTags&amp;(0), Scalars(0) <br> <br>    lstObjectInfo.Clear <br>    Row% = 0 <br> <br>    ListIndex% = olnContainer.ListIndex <br>    GetOutlineEntry olnContainer.ItemData(ListIndex%), SelEntry <br>    If SelEntry.Type.enum = T_ROOTOBJECT.enum Then <br>        'Display the SMSAPI version string <br>        lRet&amp; = SmsAPIVer&amp;(SMSAPIVersion$) <br>        If (lRet&amp; &lt;&gt; SMS_OK) Then GoTo olnContainerClickErr <br>         <br>        lstObjectInfo.AddItem SMSAPIVersion$, Row% <br>        Row% = Row% + 1 <br>     <br>    ElseIf SelEntry.Type.enum = T_CONTAINER.enum Then <br>        'Get info on selected container <br>        lRet&amp; = SmsDescribeFolder&amp;(T_CONTAINER, SelEntry.Tag&amp;, FolderInfo) <br>        If (lRet&amp; &lt;&gt; SMS_OK) Then GoTo olnContainerClickErr <br> <br>        lstObjectInfo.AddItem FolderInfo.pszTag, Row% <br>        Row% = Row% + 1 <br> <br>        lstObjectInfo.AddItem Chr$(9) + "Folder Types:", Row% <br>        Row% = Row% + 1 <br> <br>        For i% = Row% To FolderInfo.ctFolders - 1 + Row% <br>            lRet&amp; = SmsDescribeFolder&amp;(T_FOLDER, FolderInfo.FolderTags&amp;(i% - Row%), SubInfo) <br>            If (lRet&amp; &lt;&gt; SMS_OK) Then GoTo olnContainerClickErr <br> <br>            lstObjectInfo.AddItem Chr$(9) + Chr$(9) + SubInfo.pszTag, Row% <br>        Next i% <br>        Row% = Row% + FolderInfo.ctFolders <br> <br>        lstObjectInfo.AddItem Chr$(9) + "Filter Types:", Row% <br>        Row% = Row% + 1 <br> <br>        lRet&amp; = SmsEnumFilters(Filters, FilterCount&amp;) <br>        If (lRet&amp; &lt;&gt; SMS_OK) Then GoTo olnContainerClickErr <br>        For i% = Row% To FolderInfo.ctFilters - 1 + Row% <br>            lstObjectInfo.AddItem Chr$(9) + Chr$(9) + Filters(FolderInfo.FilterTags(i% - Row%) - 1).szTag, Row% <br>        Next i% <br>        Row% = Row% + FolderInfo.ctFilters <br> <br>    ElseIf SelEntry.Type.enum = T_FOLDER.enum Then <br>        'Get info on selected Folder <br>        lRet&amp; = SmsDescribeFolder&amp;(T_FOLDER, SelEntry.Tag&amp;, FolderInfo) <br>        If (lRet&amp; &lt;&gt; SMS_OK) Then GoTo olnContainerClickErr <br> <br>        lstObjectInfo.AddItem FolderInfo.pszTag, Row% <br>        Row% = Row% + 1 <br> <br>        lstObjectInfo.AddItem Chr$(9) + "Folder Types:", Row% <br>        Row% = Row% + 1 <br> <br>        For i% = Row% To FolderInfo.ctFolders - 1 + Row% <br>            lRet&amp; = SmsDescribeFolder&amp;(T_FOLDER, FolderInfo.FolderTags&amp;(i% - Row%), SubInfo) <br>            If (lRet&amp; &lt;&gt; SMS_OK) Then GoTo olnContainerClickErr <br> <br>            lstObjectInfo.AddItem Chr$(9) + Chr$(9) + SubInfo.pszTag, Row% <br>        Next i% <br>        Row% = Row% + FolderInfo.ctFolders <br> <br>        'Get list of possible scalar types <br>        lstObjectInfo.AddItem Chr$(9) + "Scalar Types:", Row% <br>        Row% = Row% + 1 <br> <br>        For i% = Row% To FolderInfo.ctScalars - 1 + Row% <br>            lstObjectInfo.AddItem Chr$(9) + Chr$(9) + FolderInfo.Scalars(i% - Row%).szName, Row% <br>        Next i% <br>        Row% = Row% + FolderInfo.ctScalars <br> <br>    ElseIf SelEntry.Type.enum = T_SCALAR.enum Then <br>        lRet&amp; = SmsRewind&amp;(SelEntry.Handle&amp;, RW_ALL) <br>        If lRet&amp; &lt;&gt; SMS_OK Then GoTo olnContainerClickErr <br> <br>        lRet&amp; = SmsGetNextScalar&amp;(SelEntry.Handle&amp;, NextScalar) <br>        Do While lRet&amp; = SMS_OK <br>            If olnContainer.List(ListIndex%) = NextScalar.pszName$ + " (" + GetScalarTypeName$(NextScalar.scType) + ")" Then <br>                lstObjectInfo.AddItem GetScalarTypeName$(NextScalar.scType), Row% <br>                Row% = Row% + 1 <br>                lstObjectInfo.AddItem Chr$(9) + "Value:", Row% <br>                Row% = Row% + 1 <br>                Select Case NextScalar.scType.enum <br>                    Case SCALAR_STRING.enum <br>                        lstObjectInfo.AddItem Chr$(9) + Chr$(9) + CStr(NextScalar.pszValue), Row% <br>                        Row% = Row% + 1 <br>                    Case SCALAR_INT.enum <br>                        lstObjectInfo.AddItem Chr$(9) + Chr$(9) + CStr(NextScalar.dwValue), Row% <br>                        Row% = Row% + 1 <br>                        If NextScalar.bStringEquivalence Then <br>                            lstObjectInfo.AddItem Chr$(9) + "String Equivalent:", Row% <br>                            Row% = Row% + 1 <br>                            lstObjectInfo.AddItem Chr$(9) + Chr$(9) + NextScalar.pszValue, Row% <br>                            Row% = Row% + 1 <br>                        End If <br>                    Case SCALAR_TIME.enum <br>                        DateTime# = ConvertTimetToDateTime(NextScalar.tValue) <br>                        If IsDate(CVDate(DateTime#)) Then <br>                            lstObjectInfo.AddItem Chr$(9) + Chr$(9) + Format$(DateTime#, "ddd mmm dd yyyy hh:mm:ss") + " GMT", Row% <br>                        Else: lstObjectInfo.AddItem Chr$(9) + Chr$(9) + "&lt;invalid date time&gt;", Row% <br>                        End If <br>                        Row% = Row% + 1 <br>                        If NextScalar.bStringEquivalence Then <br>                            lstObjectInfo.AddItem Chr$(9) + "String Equivalent:", Row% <br>                            Row% = Row% + 1 <br>                            lstObjectInfo.AddItem Chr$(9) + Chr$(9) + NextScalar.pszValue, Row% <br>                            Row% = Row% + 1 <br>                        End If <br>                    Case SCALAR_BINARY.enum <br>                        For i% = 0 To NextScalar.dwLen - 1 Step 16 <br>                            If (i% = &amp;H100 And NextScalar.dwLen &gt; &amp;H110) Then <br>                                i% = (NextScalar.dwLen - 1) And &amp;HFFFFFFF0 <br>                                lstObjectInfo.AddItem Chr$(9) + ":", Row% <br>                                Row% = Row% + 1 <br>                            End If <br>                            Text$ = Hex$(i%) <br>                            Text$ = String$(8 - Len(Text$), "0") + Text$ + " " <br>                            For j% = 0 To 15 <br>                                If (i% + j% &gt;= NextScalar.dwLen) Then <br>                                    Text$ = Text$ + "" <br>                                Else: Text$ = Text$ + " " + String$((NextScalar.pValue(i% + j%) &gt; 15) + 1, "0") + Hex$(NextScalar.pValue(i% + j%)) <br>                                End If <br>                            Next j% <br>                            lstObjectInfo.AddItem Chr$(9) + Text$, Row% <br>                            Row% = Row% + 1 <br>                        Next i% <br>                    Case Else <br>                        GoTo olnContainerClickErr <br>                End Select <br>                lRet&amp; = SMS_NO_MORE_DATA <br>                Exit Do <br>            End If <br>            lRet&amp; = SmsGetNextScalar&amp;(SelEntry.Handle&amp;, NextScalar) <br>        Loop <br>        If lRet&amp; &lt;&gt; SMS_NO_MORE_DATA Then GoTo olnContainerClickErr <br>     <br>    Else: GoTo olnContainerClickErr <br>    End If <br>     <br>    Exit Sub <br> <br>olnContainerClickErr: <br>    MsgBox "olnContainerClick:" <br>End Sub <br> <br>Private Sub olnContainer_Collapse(ListIndex%) <br>    Dim SelEntry As OutlineEntryData, DelEntry As OutlineEntryData <br>    Dim NextListIndex%, FreeEntry%, lRet&amp; <br>    Static DepthOfRecursion% <br> <br>    DepthOfRecursion% = DepthOfRecursion% + 1 <br> <br>    NextListIndex% = ListIndex% + 1 <br>    Do While NextListIndex% &lt; olnContainer.ListCount <br>        If olnContainer.Indent(NextListIndex%) &lt;= olnContainer.Indent(ListIndex%) Then Exit Do <br>        olnContainer.Expand(NextListIndex%) = False <br> <br>        FreeEntry% = False <br>        GetOutlineEntry olnContainer.ItemData(NextListIndex%), DelEntry <br>        If DelEntry.Type.enum = T_ROOTOBJECT.enum Then <br>            'Nothing to do <br>         <br>        ElseIf DelEntry.Type.enum = T_CONTAINER.enum Then <br>            If DelEntry.Handle&amp; &lt;&gt; 0 Then <br>                lRet&amp; = SmsCloseContainer&amp;(DelEntry.Handle&amp;) <br>                If (lRet&amp; &lt;&gt; SMS_OK) Then GoSub olnContainerCollapseErr <br> <br>                DelEntry.Handle&amp; = 0 <br>                DelEntry.RetrieveData% = True <br>                SetOutlineEntry olnContainer.ItemData(NextListIndex%), DelEntry <br>            End If <br> <br>        ElseIf DelEntry.Type.enum = T_FOLDER.enum Then <br>            If DelEntry.Handle&amp; &lt;&gt; 0 Then <br>                lRet&amp; = SmsCloseFolder&amp;(DelEntry.Handle&amp;) <br>            End If <br>            If (lRet&amp; &lt;&gt; SMS_OK) Then GoSub olnContainerCollapseErr <br>            FreeEntry% = True <br> <br>        ElseIf DelEntry.Type.enum = T_SCALAR.enum Then <br>            FreeEntry% = True <br> <br>        Else: GoTo olnContainerCollapseErr <br>        End If <br>     <br>        If FreeEntry% Then <br>            FreeOutlineEntry olnContainer.ItemData(NextListIndex%) <br>            olnContainer.RemoveItem NextListIndex% <br>        Else <br>            NextListIndex% = NextListIndex% + 1 <br>        End If <br>    Loop <br> <br>    GetOutlineEntry olnContainer.ItemData(ListIndex%), SelEntry <br>    If SelEntry.RetrieveData% = False Then <br>        SelEntry.RetrieveData% = True <br>        SetOutlineEntry olnContainer.ItemData(ListIndex%), SelEntry <br>    End If <br> <br>    If olnContainer.PictureType(ListIndex%) = MSOUTLINE_PICTURE_OPEN Then <br>        olnContainer.PictureType(ListIndex%) = MSOUTLINE_PICTURE_CLOSED <br>    End If <br> <br>    DepthOfRecursion% = DepthOfRecursion% - 1 <br>    If DepthOfRecursion% = 0 Then <br>        olnContainer.ListIndex = ListIndex% <br>        olnContainer_Click <br>    End If <br> <br>    Exit Sub <br>     <br>olnContainerCollapseErr: <br>    MsgBox "Unexpected error collapsing item " + CStr(ListIndex%), MB_ICONEXCLAMATION, Me.Caption <br>    DepthOfRecursion% = DepthOfRecursion% - 1 <br>    Return <br>End Sub <br> <br>Private Sub olnContainer_DblClick() <br>    olnContainer.Expand(olnContainer.ListIndex) = Not olnContainer.Expand(olnContainer.ListIndex) <br>End Sub <br> <br>Private Sub olnContainer_Expand(ListIndex%) <br>    Dim SelEntry As OutlineEntryData <br>    Dim FolderInfo As FOLDER_INFO, NextScalar As SCALAR <br>    Dim hSubFolder&amp;, SubFolderType&amp;, SubFolderTypeName$ <br>    Dim SubFolderID$ <br>    Dim i%, OldMousePointer%, lRet&amp; <br> <br>    GetOutlineEntry olnContainer.ItemData(ListIndex%), SelEntry <br>    If SelEntry.RetrieveData% Then <br>        'Put up the wait cursor <br>        OldMousePointer = MousePointer <br>        MousePointer = HOURGLASS <br>         <br>        If SelEntry.Type.enum = T_ROOTOBJECT.enum Then <br>            'Nothing to do <br>         <br>        ElseIf SelEntry.Type.enum = T_CONTAINER.enum Then <br>            'Rewind or open/fill the container <br>            If SelEntry.Handle&amp; &lt;&gt; 0&amp; Then <br>                lRet&amp; = SmsRewind&amp;(SelEntry.Handle&amp;, RW_ALL) <br>                If lRet&amp; &lt;&gt; SMS_OK Then GoTo olnContainerExpandErr <br>            Else <br>                lRet&amp; = SmsOpenContainer&amp;(SelEntry.Tag&amp;, ghConnect&amp;, SelEntry.Handle&amp;) <br>                If lRet&amp; &lt;&gt; SMS_OK Then GoTo olnContainerExpandErr <br>     <br>                lRet&amp; = SmsPopulate&amp;(SelEntry.Handle&amp;, POP_SYNC, ByVal 0&amp;) <br>                If lRet&amp; &lt;&gt; SMS_OK And lRet&amp; &lt;&gt; SMS_EMPTY Then GoTo olnContainerExpandErr <br>            End If <br> <br>            'List the folders in this container <br>            i% = 1 <br>            lRet&amp; = SmsGetNextFolder&amp;(SelEntry.Handle&amp;, F_ANY, hSubFolder&amp;) <br>            Do While lRet&amp; = SMS_OK <br>                lRet&amp; = SmsGetFolderID&amp;(hSubFolder&amp;, SubFolderID$) <br>                If lRet&amp; &lt;&gt; SMS_OK Then GoTo olnContainerExpandErr <br> <br>                lRet&amp; = SmsGetFolderType&amp;(hSubFolder&amp;, SubFolderType&amp;, SubFolderTypeName$) <br>                If lRet&amp; &lt;&gt; SMS_OK Then GoTo olnContainerExpandErr <br> <br>                If SelEntry.Tag = C_SITE Then <br>                    'Only list top level Site folders (Depth = 0) <br>                    lRet&amp; = SmsGetScalarByName&amp;(hSubFolder&amp;, "Depth", NextScalar) <br>                    If lRet&amp; &lt;&gt; SMS_OK Then GoTo olnContainerExpandErr <br>                Else <br>                    'List all sub folders <br>                    NextScalar.dwValue = 0 <br>                End If <br>                 <br>                If NextScalar.dwValue = 0 Then <br>                    olnContainer.AddItem SubFolderID$ + " (" + SubFolderTypeName$ + ")", ListIndex% + i% <br>                    olnContainer.Indent(ListIndex% + i%) = olnContainer.Indent(ListIndex%) + 1 <br>                    olnContainer.ItemData(ListIndex% + i%) = AddOutlineEntry(T_FOLDER, SubFolderType&amp;, hSubFolder&amp;, True) <br>                    olnContainer.PictureType(ListIndex% + i%) = MSOUTLINE_PICTURE_CLOSED <br>                Else <br>                    lRet&amp; = SmsCloseFolder&amp;(hSubFolder&amp;) <br>                End If <br> <br>                lRet&amp; = SmsGetNextFolder&amp;(SelEntry.Handle&amp;, F_ANY, hSubFolder&amp;) <br>                i% = i% + 1 <br>            Loop <br>            If lRet&amp; &lt;&gt; SMS_NO_MORE_DATA Then GoTo olnContainerExpandErr <br>     <br>        ElseIf SelEntry.Type.enum = T_FOLDER.enum Then <br>            If SelEntry.Handle&amp; = 0&amp; Then <br>                GoTo olnContainerExpandErr <br>            Else <br>                lRet&amp; = SmsRewind&amp;(SelEntry.Handle&amp;, RW_ALL) <br>                If lRet&amp; &lt;&gt; SMS_OK Then GoTo olnContainerExpandErr <br>            End If <br>             <br>            'First list the sub-folders in this folder <br>            i% = 1 <br>            lRet&amp; = SmsGetNextFolder&amp;(SelEntry.Handle&amp;, F_ANY, hSubFolder&amp;) <br>            Do While lRet&amp; = SMS_OK <br>                lRet&amp; = SmsGetFolderID&amp;(hSubFolder&amp;, SubFolderID$) <br>                If lRet&amp; &lt;&gt; SMS_OK Then GoTo olnContainerExpandErr <br> <br>                lRet&amp; = SmsGetFolderType&amp;(hSubFolder&amp;, SubFolderType&amp;, SubFolderTypeName$) <br>                If lRet&amp; &lt;&gt; SMS_OK Then GoTo olnContainerExpandErr <br> <br>                olnContainer.AddItem SubFolderID$ + " (" + SubFolderTypeName$ + ")", ListIndex% + i% <br>                olnContainer.Indent(ListIndex% + i%) = olnContainer.Indent(ListIndex%) + 1 <br>                olnContainer.ItemData(ListIndex% + i%) = AddOutlineEntry(T_FOLDER, SubFolderType&amp;, hSubFolder&amp;, True) <br>                olnContainer.PictureType(ListIndex% + i%) = MSOUTLINE_PICTURE_CLOSED <br>                 <br>                lRet&amp; = SmsGetNextFolder&amp;(SelEntry.Handle&amp;, F_ANY, hSubFolder&amp;) <br>                i% = i% + 1 <br>            Loop <br>            If lRet&amp; &lt;&gt; SMS_NO_MORE_DATA Then GoTo olnContainerExpandErr <br>             <br>            'Next list the scalars in this folder <br>            lRet&amp; = SmsGetNextScalar&amp;(SelEntry.Handle&amp;, NextScalar) <br>            Do While lRet&amp; = SMS_OK <br>                olnContainer.AddItem NextScalar.pszName$ + " (" + GetScalarTypeName$(NextScalar.scType) + ")", ListIndex% + i% <br>                olnContainer.Indent(ListIndex% + i%) = olnContainer.Indent(ListIndex%) + 1 <br>                olnContainer.ItemData(ListIndex% + i%) = AddOutlineEntry(T_SCALAR, NextScalar.scType.enum, SelEntry.Handle&amp;, True) <br>                olnContainer.PictureType(ListIndex% + i%) = MSOUTLINE_PICTURE_LEAF <br>             <br>                lRet&amp; = SmsGetNextScalar&amp;(SelEntry.Handle&amp;, NextScalar) <br>                i% = i% + 1 <br>            Loop <br>            If lRet&amp; &lt;&gt; SMS_NO_MORE_DATA Then GoTo olnContainerExpandErr <br>     <br>        ElseIf SelEntry.Type.enum = T_SCALAR.enum Then <br>            'Nothing to do <br>         <br>        Else: GoTo olnContainerExpandErr <br>        End If <br>     <br>        SelEntry.RetrieveData% = False <br>        SetOutlineEntry olnContainer.ItemData(ListIndex%), SelEntry <br>        olnContainer.Expand(ListIndex%) = True <br>         <br>        'Restore the mouse pointer <br>        MousePointer = OldMousePointer% <br>    Else <br> <br>        If olnContainer.PictureType(ListIndex%) = MSOUTLINE_PICTURE_CLOSED Then <br>            olnContainer.PictureType(ListIndex%) = MSOUTLINE_PICTURE_OPEN <br>        ElseIf olnContainer.PictureType(ListIndex%) = MSOUTLINE_PICTURE_OPEN Then <br>            olnContainer.Expand(ListIndex%) = False <br>        End If <br> <br>        olnContainer.ListIndex = ListIndex% <br>        olnContainer_Click <br>    End If <br> <br>    Exit Sub <br> <br>olnContainerExpandErr: <br>    MsgBox "olnContainer_Expand: Unexpected error" <br>         <br>    'Restore the mouse pointer <br>    MousePointer = OldMousePointer% <br>End Sub <br> <br>Private Sub olnContainer_PictureClick(ListIndex As Integer) <br>    olnContainer.ListIndex = ListIndex <br>    olnContainer_Click <br>End Sub <br> <br>Private Sub olnContainer_PictureDblClick(ListIndex As Integer) <br>    olnContainer_PictureClick ListIndex <br>    olnContainer_DblClick <br>End Sub <br> <br>Private Sub picFormBackdrop_Resize() <br>    Static OldWidth, OldHeight, OldSepLeft% <br> <br>    If (OldWidth &lt;&gt; picFormBackdrop.Width Or OldSepLeft &lt;&gt; picSeperator.left) And picFormBackdrop.Width &gt; picRightView.left Then <br>        picRightView.Width = picFormBackdrop.Width - picRightView.left <br> <br>        OldWidth = picFormBackdrop.Width <br>    End If <br> <br>    If OldHeight &lt;&gt; picFormBackdrop.Height And picFormBackdrop.Height &gt; picLeftView.top Then <br>        picLeftView.Height = picFormBackdrop.Height - picLeftView.top <br>        picRightView.Height = picFormBackdrop.Height - picRightView.top <br>        picSeperator.Height = picFormBackdrop.Height - picSeperator.top + Y_PIX_SIZE <br> <br>        OldHeight = picFormBackdrop.Height <br>        OldSepLeft = picSeperator.left <br>    End If <br>End Sub <br> <br>Private Sub picLeftView_Resize() <br>    Static OldWidth, OldHeight <br> <br>    If OldWidth &lt;&gt; picLeftView.Width Then <br>        pnlContainerHeader.Width = picLeftView.Width <br>        olnContainer.Width = picLeftView.Width <br> <br>        OldWidth = picLeftView.Width <br>    End If <br> <br>    If OldHeight &lt;&gt; picLeftView.Height And picLeftView.Height &gt; olnContainer.top Then </code></pre>
<p>
</p>
<pre><code>olnContainer.Height = picLeftView.Height - olnContainer.top <br> <br>        OldHeight = picLeftView.Height <br>    End If <br>End Sub <br> <br>Private Sub picRightView_Resize() <br>    Static OldWidth, OldHeight, lItemHeight&amp; <br>         <br>    If OldWidth &lt;&gt; picRightView.Width Then <br>        pnlInfoHeader.Width = picRightView.Width <br>        lstObjectInfo.Width = picRightView.Width - lstObjectInfo.left + X_PIX_SIZE <br> <br>        OldWidth = picLeftView.Width <br>    End If <br> <br>    If OldHeight &lt;&gt; picRightView.Height And picRightView.Height &gt; pnlInfoHeader.Height Then <br>        lItemHeight&amp; = SendMessage(lstObjectInfo.hwnd, LB_GETITEMHEIGHT, 0, 0) <br>        lstObjectInfo.Height = picRightView.Height - lstObjectInfo.top + lItemHeight&amp; * Y_PIX_SIZE <br> <br>        OldWidth = picLeftView.Width <br>    End If <br>End Sub <br> <br>Private Sub picSeperator_MouseDown(Button As Integer, Shift As Integer, x As Single, y As Single) <br>    If Button And LEFT_BUTTON Then <br>        SeperatorDragging% = True <br>        SeperatorDragOffset% = x <br>    End If <br>End Sub <br> <br>Private Sub picSeperator_MouseMove(Button As Integer, Shift As Integer, x As Single, y As Single) <br>    Dim OldLeft% <br> <br>    If SeperatorDragging% And x &lt;&gt; OldLeft% And picSeperator.left + x - SeperatorDragOffset% &gt; 0 Then <br>        picSeperator.left = picSeperator.left + x - SeperatorDragOffset% <br>        picLeftView.Width = picSeperator.left <br>        picRightView.left = picSeperator.left + picSeperator.Width <br>        picFormBackdrop_Resize <br>    End If <br>End Sub <br> <br>Private Sub picSeperator_MouseUp(Button As Integer, Shift As Integer, x As Single, y As Single) <br>    If Button And LEFT_BUTTON Then <br>        SeperatorDragging% = False <br>    End If <br>End Sub <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
