<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BROWSER.BAS</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5905"></a>BROWSER.BAS</h2>
<pre><code>Attribute VB_Name = "basBROWSER" <br>Option Explicit <br> <br>'Horizontal tab character (Can't have string constants) <br>'This is initialized in InitBrowser() <br>Dim HT$ <br> <br>'Size of one pixel in Twips (Set in Browser Form Load) <br>Global X_PIX_SIZE% <br>Global Y_PIX_SIZE% <br> <br>'Here are a few extra BASETYPE for my convenience <br>'This is initialized in InitBrowser() <br>Global T_ROOTOBJECT As BASETYPE <br>Global T_SCALAR As BASETYPE <br> <br>'Data structure for an entry in the Outline control <br>Type OutlineEntryData <br>    Type As BASETYPE <br>    Tag As Long <br>    Handle As Long <br>    RetrieveData As Integer <br>End Type <br> <br>'Collection of OutlineEntryData structures. <br>'This is intialized in InitOutlineEntries() <br>Dim OutlineEntryDataArray() As OutlineEntryData <br>Const OUTLINE_ENTRY_ALLOC = 64  'How to allocated each time we run out <br> <br>Function AddOutlineEntry&amp;(sType As BASETYPE, lTag&amp;, lHandle&amp;, bRetrieveData%) <br>    Dim NewEntryIndex% <br>     <br>    'Initially an invalid value <br>    NewEntryIndex% = -1 <br> <br>    If OutlineEntryDataArray(0).Handle&amp; &lt;= 0 Then <br>        'Need to make more room <br>        OutlineEntryDataArray(0).Handle&amp; = UBound(OutlineEntryDataArray) + 1 <br>        ReDim Preserve OutlineEntryDataArray(0 To UBound(OutlineEntryDataArray) + OUTLINE_ENTRY_ALLOC) <br>        For NewEntryIndex% = OutlineEntryDataArray(0).Handle&amp; To UBound(OutlineEntryDataArray) - 1 <br>            OutlineEntryDataArray(NewEntryIndex%).Handle&amp; = NewEntryIndex% + 1 <br>        Next NewEntryIndex% <br>        OutlineEntryDataArray(NewEntryIndex%).Handle&amp; = 0 <br>    End If <br> <br>    'Allocate an entry <br>    NewEntryIndex% = OutlineEntryDataArray(0).Handle&amp; <br>    OutlineEntryDataArray(0).Handle&amp; = OutlineEntryDataArray(NewEntryIndex%).Handle&amp; <br> <br>    'Copy the info into the new entry <br>    OutlineEntryDataArray(NewEntryIndex%).Type = sType <br>    OutlineEntryDataArray(NewEntryIndex%).Tag = lTag&amp; <br>    OutlineEntryDataArray(NewEntryIndex%).Handle = lHandle&amp; <br>    OutlineEntryDataArray(NewEntryIndex%).RetrieveData% = bRetrieveData% <br> <br>    'Return handle to new entry <br>    AddOutlineEntry&amp; = NewEntryIndex% <br>End Function <br> <br>Sub FreeOutlineEntry(ByVal Handle&amp;) <br>    Dim index% <br> <br>    index% = ValidateOutlineEntryHandle%(Handle&amp;) <br>    If index% &gt; 0 Then <br>        OutlineEntryDataArray(index%).Handle&amp; = OutlineEntryDataArray(0).Handle&amp; <br>        OutlineEntryDataArray(0).Handle&amp; = index% <br>    End If <br>End Sub <br> <br>Sub GetOutlineEntry(ByVal Handle&amp;, Entry As OutlineEntryData) <br>    Dim index% <br> <br>    index% = ValidateOutlineEntryHandle%(Handle&amp;) <br>    If index% &gt; 0 Then <br>        Entry = OutlineEntryDataArray(index%) <br>    End If <br>End Sub <br> <br>Function InitBrowser%() <br>    'Default return value is True <br>    InitBrowser = True <br> <br>    'Horizontal tab character <br>    HT$ = Chr$(9) <br> <br>    'Init the OutlineEntryData collection <br>    InitOutlineEntrys <br> <br>    'Init Visual Basic SMS_API stuff <br>    T_ROOTOBJECT.enum = &amp;HFFFFFFFE <br>    T_SCALAR.enum = &amp;HFFFFFFFF <br>    If Not Init_SMSAPI() Then InitBrowser% = False <br>End Function <br> <br>Sub InitOutlineEntrys() <br>    ReDim OutlineEntryDataArray(0 To 0) <br>    OutlineEntryDataArray(0).Handle&amp; = 0 <br>End Sub <br> <br>Sub Main() <br>    'Initialize the application <br>    If InitBrowser() = True Then <br>        On Error Resume Next <br>        frmBrowser.Show <br>        On Error GoTo 0 <br>    End If <br>End Sub <br> <br>Sub SetOutlineEntry(ByVal Handle&amp;, Entry As OutlineEntryData) <br>    Dim index% <br> <br>    index% = ValidateOutlineEntryHandle%(Handle&amp;) <br>    If index% &gt; 0 Then <br>        OutlineEntryDataArray(index%) = Entry <br>    End If <br>End Sub <br> <br>Function ValidateOutlineEntryHandle%(Handle&amp;) <br>    Dim index%, i% <br> <br>    'Default is an error <br>    ValidateOutlineEntryHandle% = 0 <br>     <br>    index% = CInt(Handle&amp;) <br>     <br>    'Debugging Stuff <br>    If index% &lt;= 0 Or index% &gt; UBound(OutlineEntryDataArray) Then <br>        MsgBox "Entry data index out of bounds!" <br>        Exit Function <br>    End If <br>     <br>    i% = CInt(OutlineEntryDataArray(0).Handle&amp;) <br>    Do While i% &lt;&gt; 0 <br>        If i% = index% Then <br>            MsgBox "Entry data index is invalid!" <br>            Exit Function <br>        Else: i% = CInt(OutlineEntryDataArray(i%).Handle&amp;) <br>        End If <br>    Loop <br>    'End Debugging stuff <br> <br>    ValidateOutlineEntryHandle% = index% <br>End Function <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
