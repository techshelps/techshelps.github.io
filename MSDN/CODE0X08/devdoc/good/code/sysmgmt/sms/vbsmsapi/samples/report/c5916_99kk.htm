<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MDIREPRT.FRM</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5924"></a>MDIREPRT.FRM</h2>
<pre><code>VERSION 4.00 <br>Begin VB.MDIForm frmMDIReport  <br>   Appearance      =   0  'Flat <br>   BackColor       =   &amp;H8000000C&amp; <br>   Caption         =   "SMS Report" <br>   ClientHeight    =   5445 <br>   ClientLeft      =   1350 <br>   ClientTop       =   1935 <br>   ClientWidth     =   8520 <br>   Height          =   6135 <br>   Icon            =   "MDIREPRT.frx":0000 <br>   Left            =   1290 <br>   LinkTopic       =   "Form1" <br>   Top             =   1305 <br>   Width           =   8640 <br>   Begin Threed.SSPanel pnlStatusBar  <br>      Align           =   2  'Align Bottom <br>      Height          =   405 <br>      Left            =   0 <br>      TabIndex        =   0 <br>      Top             =   5040 <br>      Width           =   8520 <br>      _Version        =   65536 <br>      _ExtentX        =   15028 <br>      _ExtentY        =   714 <br>      _StockProps     =   15 <br>      BackColor       =   -2147483633 <br>      BevelInner      =   1 <br>      Alignment       =   1 <br>      Autosize        =   3 <br>      Begin VB.Label lblStatusBar  <br>         Appearance      =   0  'Flat <br>         BeginProperty Font  <br>            name            =   "MS Sans Serif" <br>            charset         =   1 <br>            weight          =   700 <br>            size            =   8.25 <br>            underline       =   0   'False <br>            italic          =   0   'False <br>            strikethrough   =   0   'False <br>         EndProperty <br>         ForeColor       =   &amp;H80000008&amp; <br>         Height          =   225 <br>         Left            =   75 <br>         TabIndex        =   1 <br>         Top             =   75 <br>         Width           =   8370 <br>      End <br>   End <br>   Begin ComctlLib.ImageList imgToolBar  <br>      Left            =   2040 <br>      Top             =   -120 <br>      _Version        =   65536 <br>      _ExtentX        =   1005 <br>      _ExtentY        =   1005 <br>      _StockProps     =   1 <br>      ImageWidth      =   16 <br>      ImageHeight     =   16 <br>      MaskColor       =   8421376 <br>      NumImages       =   5 <br>      i1              =   "MDIREPRT.frx":030A <br>      i2              =   "MDIREPRT.frx":04C1 <br>      i3              =   "MDIREPRT.frx":0678 <br>      i4              =   "MDIREPRT.frx":082F <br>      i5              =   "MDIREPRT.frx":09E6 <br>   End <br>   Begin ComctlLib.Toolbar tlbToolbar  <br>      Align           =   1  'Align Top <br>      Height          =   405 <br>      Left            =   0 <br>      TabIndex        =   2 <br>      Top             =   0 <br>      Width           =   8520 <br>      _Version        =   65536 <br>      _ExtentX        =   15028 <br>      _ExtentY        =   714 <br>      _StockProps     =   96 <br>      BorderStyle     =   1 <br>      ImageList       =   "imgToolBar" <br>      MouseIcon       =   "MDIREPRT.frx":0B9D <br>      ButtonWidth     =   609 <br>      AllowCustomize  =   0   'False <br>      NumButtons      =   5 <br>      i1              =   "MDIREPRT.frx":0BB9 <br>      i2              =   "MDIREPRT.frx":0D60 <br>      i3              =   "MDIREPRT.frx":0F07 <br>      i4              =   "MDIREPRT.frx":10AE <br>      i5              =   "MDIREPRT.frx":1259 <br>      AlignSet        =   -1  'True <br>   End <br>   Begin MSComDlg.CommonDialog CommonDialog  <br>      Left            =   1320 <br>      Top             =   2280 <br>      _ExtentX        =   847 <br>      _ExtentY        =   847 <br>      _StockProps     =   0 <br>   End <br>   Begin VB.Menu mnuFile  <br>      Caption         =   "&amp;File" <br>      Begin VB.Menu mnuFileNew  <br>         Caption         =   "&amp;New..." <br>         Shortcut        =   ^N <br>      End <br>      Begin VB.Menu mnuFileOpen  <br>         Caption         =   "&amp;Open..." <br>         Shortcut        =   ^O <br>      End <br>      Begin VB.Menu mnuFileSave  <br>         Caption         =   "&amp;Save..." <br>         Shortcut        =   ^S <br>      End <br>      Begin VB.Menu mnuFileSaveAs  <br>         Caption         =   "Save &amp;As..." <br>         Shortcut        =   {F12} <br>      End <br>      Begin VB.Menu mnuFileSeperator0  <br>         Caption         =   "-" <br>      End <br>      Begin VB.Menu mnuFilePrintPreview  <br>         Caption         =   "Print Pre&amp;view" <br>      End <br>      Begin VB.Menu mnuFilePrint  <br>         Caption         =   "&amp;Print..." <br>         Shortcut        =   ^P <br>      End <br>      Begin VB.Menu mnuFileExport  <br>         Caption         =   "&amp;Export..." <br>      End <br>      Begin VB.Menu mnuFileSeperator1  <br>         Caption         =   "-" <br>      End <br>      Begin VB.Menu mnuFileExit  <br>         Caption         =   "E&amp;xit" <br>      End <br>   End <br>   Begin VB.Menu mnuWindow  <br>      Caption         =   "&amp;Window" <br>      WindowList      =   -1  'True <br>      Begin VB.Menu mnuWindowCascade  <br>         Caption         =   "&amp;Cascade" <br>         Shortcut        =   {F5} <br>      End <br>      Begin VB.Menu mnuWindowArrangeIcons  <br>         Caption         =   "&amp;Arrange Icons" <br>      End <br>   End <br>   Begin VB.Menu mnuHelp  <br>      Caption         =   "&amp;Help" <br>      Begin VB.Menu mnuHelpAbout  <br>         Caption         =   "&amp;About SMS Report..." <br>      End <br>   End <br>End <br>Attribute VB_Name = "frmMDIReport" <br>Attribute VB_Creatable = False <br>Attribute VB_Exposed = False <br>Option Explicit <br> <br>'//**************************************************************************** <br>'// <br>'//  Copyright (c) 1995, Microsoft Corporation <br>'// <br>'//  File:  MDIREPRT.FRM <br>'// <br>'//  History: <br>'// <br>'//      Gary Fuehrer, SEA   5/9/95      Created. <br>'// <br>'//**************************************************************************** <br> <br>Dim hConnect&amp; <br>Dim FileNewMenuCaption$ <br>Dim FileNewToolTip$ <br>Private Function GetReportType%(ByVal FileSpec$) <br>    Dim db As Database, i% <br> <br>    'Default return value UNKNOWN_REPORT (Failed) <br>    GetReportType% = UNKNOWN_REPORT <br>     <br>    'Open the database file <br>    On Error Resume Next <br>    Set db = OpenDatabase(FileSpec$, True, True) <br>    If Err &gt; 0 Then Exit Function <br>    On Error GoTo 0 <br> <br>    For i% = 0 To db.TableDefs.Count - 1 <br>        Select Case db.TableDefs(i%).Name <br>            Case "Site Hierarchy" <br>                GetReportType% = SITE_HIERARCHY_REPORT <br>            Case "Generic" <br>                GetReportType% = GENERIC_REPORT <br>            Case "MachineGroupID" <br>                GetReportType% = MACHINE_GROUP_REPORT <br>            Case "MachineID" <br>                GetReportType% = MACHINE_REPORT <br>            'Case "GenericTableName" <br>            '    GetReportType% = GENERIC_REPORT <br>        End Select <br>    Next i% <br> <br>    db.Close <br>End Function <br> <br>Private Sub MDIForm_Load() <br>    'Get the size of one pixel size in twips <br>    GetPixelSizeInTwips Me, X_PIX_SIZE, Y_PIX_SIZE <br> <br>    'Initially, File New menu is a way to login to SMS <br>    FileNewMenuCaption$ = mnuFileNew.Caption <br>    FileNewToolTip$ = tlbToolbar.Buttons(1).ToolTipText <br>    mnuFileNew.Caption = "&amp;Login to SMS..." <br>    tlbToolbar.Buttons(1).ToolTipText = "Login to SMS" <br> <br>    'Login to SMS <br>    hConnect&amp; = 0 <br>    mnuFileNew_Click <br> <br>    'Initialize the status bar <br>    SetCurrentStatusBar lblStatusBar <br>    SetStatBarMsg "" <br>End Sub <br> <br>Private Sub MDIForm_Resize() <br>    lblStatusBar.Width = pnlStatusBar.Width - lblStatusBar.left * 2 <br>End Sub <br> <br> <br>Private Sub MDIForm_Unload(Cancel As Integer) <br>    DBLogout hConnect&amp; <br>End Sub <br> <br>Private Sub mnuFileExit_Click() <br>    Unload Me <br>End Sub <br> <br>Private Sub mnuFileExport_Click() <br>    Dim OldStatBarMsg$ <br>     <br>    If Not ActiveForm Is Nothing Then <br>        'Turn on wait cursor and set status bar <br>        MousePointer = HOURGLASS <br>        OldStatBarMsg$ = GetStatBarMsg$() <br>        SetStatBarMsg "Exporting Report..." <br> <br>        'Call Print Preview method of active document <br>        ActiveForm.cmdExport = True <br> <br>        'Restore status bar message and mouse pointer <br>        SetStatBarMsg OldStatBarMsg$ <br>        MousePointer = NORMAL <br>    End If <br>End Sub <br> <br>Private Sub mnuFileNew_Click() <br>    Dim SqlConnectParams As SQL_CONNECT_PARAMS <br>    Dim ErrStr$, OldMenuCaption$, OldStatBarMsg$ <br>    Dim ReportType% <br>    Static Windex% <br> <br>    'Check for reentrancy <br>    If Windex% &gt; 0 Then <br>        ReportWindow(Windex%).cmdAbort = True <br>        Exit Sub <br>    End If <br> <br>    'Check for user needing to log in first <br>    If hConnect&amp; = 0 Then <br>        'Indicate in status bar what's going on <br>        OldStatBarMsg$ = GetStatBarMsg$() <br>        SetStatBarMsg "Login to SMS..." <br> <br>        'Let user try to log in to SMS <br>        If DBLogin%(SqlConnectParams, hConnect&amp;) Then <br>            mnuFileNew.Caption = FileNewMenuCaption$ <br>            tlbToolbar.Buttons(1).ToolTipText = FileNewToolTip$ <br>        End If <br> <br>        'Restore status bar message and quit <br>        SetStatBarMsg OldStatBarMsg$ <br>        Exit Sub <br>    End If <br> <br>    'Get from user what kind of report to create <br>    If Not NewReport%(ReportType%) Then Exit Sub <br> <br>    'Provide a mechanism for user to cancel <br>    OldMenuCaption$ = mnuFileNew.Caption <br>    mnuFileNew.Caption = "&amp;Abort New Report..." <br> <br>    'Indicate in status bar what's going on <br>    OldStatBarMsg$ = GetStatBarMsg$() <br>    SetStatBarMsg "Creating Report..." <br> <br>    'Create new document window of selected type <br>    Select Case ReportType% <br>        Case SITE_HIERARCHY_REPORT <br>            Windex% = NewSiteHierarchyReportWindow%(hConnect&amp;, "", ErrStr$) <br>        Case MACHINE_GROUP_REPORT <br>            Windex% = NewMachineGrpReportWindow%(hConnect&amp;, "", ErrStr$) <br>        Case GENERIC_REPORT <br>            Windex% = NewGenericReportWindow%(hConnect&amp;, "", ErrStr$) <br>    End Select <br> <br>    'If window created OK then initialize it <br>    If Windex% &lt;= 0 Then <br>        'If zero, report error, else user canceled <br>        If Windex% = 0 Then <br>            MsgBox "Error creating a new report:" + Chr$(10) + Chr$(10) + ErrStr$, MB_OK Or MB_ICONEXCLAMATION, Screen.ActiveForm.Caption <br>        End If <br>    Else: ReportWindow(Windex%).cmdInitialize = True <br>    End If <br> <br>    'Restore status bar message and menu caption <br>    SetStatBarMsg OldStatBarMsg$ <br>    mnuFileNew.Caption = OldMenuCaption$ <br>    Windex% = 0 <br>End Sub <br> <br>Private Sub mnuFileOpen_Click() <br>    Dim ErrStr$, OldMenuCaption$, OldStatBarMsg$ <br>    Dim dbSrce As Database, Attrib As AttributeRec 'Dummy arguements <br>    Dim ReportType% <br>    Static Windex% <br>     <br>    'Check for reentrancy <br>    If Windex% &gt; 0 Then <br>        ReportWindow(Windex%).cmdAbort = True <br>        Exit Sub <br>    End If <br> <br>    CommonDialog.CancelError = True <br>    CommonDialog.filename = "" <br>    'Supply file types for all possible reports HERE <br>    CommonDialog.Filter = "Microsoft Access Database (*.mdb)|*.mdb|All Files (*.*)|*.*" <br>    CommonDialog.FilterIndex = 1 <br>    CommonDialog.Flags = OFN_PATHMUSTEXIST Or OFN_FILEMUSTEXIST Or OFN_HIDEREADONLY <br>    On Error Resume Next <br>    CommonDialog.Action = DLG_FILE_OPEN <br>    If Err = CDERR_CANCEL Then Exit Sub <br>    If Err &gt; 0 Then <br>        MsgBox "An unexpected error occured:" + Chr$(10) + Chr$(10) + Error$, MB_OK Or MB_ICONEXCLAMATION, Caption <br>        Exit Sub <br>    End If <br>    On Error GoTo 0 <br> <br>    ReportType% = GetReportType%(CommonDialog.filename) <br>    If ReportType% &lt;= UNKNOWN_REPORT Then <br>        MsgBox "The file " + CommonDialog.filename + " is not an SMS report file.", MB_OK, Caption <br>        Exit Sub <br>    End If <br> <br>    'Provide a mechanism for user to cancel <br>    OldMenuCaption$ = mnuFileNew.Caption <br>    mnuFileNew.Caption = "&amp;Abort Open Report..." <br> <br>    'Indicate in status bar what's going on <br>    OldStatBarMsg$ = GetStatBarMsg$() <br>    SetStatBarMsg "Opening Report..." <br> <br>    'Create new document window of selected type <br>    Select Case ReportType% <br>        Case SITE_HIERARCHY_REPORT <br>            Windex% = NewSiteHierarchyReportWindow%(hConnect&amp;, CommonDialog.filename, ErrStr$) <br>        Case MACHINE_GROUP_REPORT <br>            Windex% = NewMachineGrpReportWindow%(hConnect&amp;, CommonDialog.filename, ErrStr$) <br>        Case MACHINE_REPORT <br>            Windex% = NewMachineReportWindow%(hConnect&amp;, CommonDialog.filename, dbSrce, Attrib, ErrStr$) <br>        Case GENERIC_REPORT <br>            Windex% = NewGenericReportWindow%(hConnect&amp;, CommonDialog.filename, ErrStr$) <br>    End Select <br> <br>    'If window created OK then initialize it <br>    If Windex% &lt;= 0 Then <br>        MsgBox "Error opening report " + CommonDialog.filename + ":" + Chr$(10) + Chr$(10) + ErrStr$, MB_OK Or MB_ICONEXCLAMATION, Screen.ActiveForm.Caption <br>    Else: ReportWindow(Windex%).cmdInitialize = True <br>    End If <br> <br>    'Restore status bar message and menu caption <br>    SetStatBarMsg OldStatBarMsg$ <br>    mnuFileNew.Caption = OldMenuCaption$ <br>    Windex% = 0 <br>End Sub <br> <br>Private Sub mnuFilePrint_Click() <br>    Dim OldStatBarMsg$ <br>     <br>    If Not ActiveForm Is Nothing Then <br>        'Turn on wait cursor and set status bar <br>        MousePointer = HOURGLASS <br>        OldStatBarMsg$ = GetStatBarMsg$() <br>        SetStatBarMsg "Printing Report..." <br> <br>        'Set flag for needing print dialog <br>        gbNeedPrintDialog% = True <br> <br>        'Call Print method of active document <br>        ActiveForm.cmdPrint = True <br> <br>        'Restore status bar message and mouse pointer <br>        SetStatBarMsg OldStatBarMsg$ <br>        MousePointer = NORMAL <br>    End If <br>End Sub <br> <br>Private Sub mnuFilePrintPreview_Click() <br>    Dim OldStatBarMsg$ <br>     <br>    If Not ActiveForm Is Nothing Then <br>        'Turn on wait cursor and set status bar <br>        MousePointer = HOURGLASS <br>        OldStatBarMsg$ = GetStatBarMsg$() <br>        SetStatBarMsg "Previewing Report..." <br> <br>        'Call Print Preview method of active document <br>        ActiveForm.cmdPrintPreview = True <br> <br>        'Restore status bar message and mouse pointer <br>        SetStatBarMsg OldStatBarMsg$ <br>        MousePointer = NORMAL <br>    End If <br>End Sub <br> <br>Private Sub mnuFileSave_Click() <br>    Dim OldStatBarMsg$ <br>     <br>    If Not ActiveForm Is Nothing Then <br>        MousePointer = HOURGLASS <br>        OldStatBarMsg$ = GetStatBarMsg$() <br>        SetStatBarMsg "Saving Report..." <br>         <br>        ActiveForm.cmdSave = True <br>         <br>        SetStatBarMsg OldStatBarMsg$ <br>        MousePointer = NORMAL <br>    End If <br>End Sub <br> <br>Private Sub mnuFileSaveAs_Click() <br>    Dim OldStatBarMsg$ <br>     <br>    If Not ActiveForm Is Nothing Then <br>        MousePointer = HOURGLASS <br>        OldStatBarMsg$ = GetStatBarMsg$() <br>        SetStatBarMsg "Saving Report..." <br>         <br>        ActiveForm.cmdSaveAs = True <br>         <br>        SetStatBarMsg OldStatBarMsg$ <br>        MousePointer = NORMAL <br>    End If <br>End Sub <br> <br>Private Sub mnuHelpAbout_Click() <br>    Dim Info$ <br> <br>    Info$ = "SMS Report" + Chr$(10) + Chr$(10) + "A Microsoft SMS SDK sample application" <br>    Info$ = Info$ + Chr$(10) + "written in Microsoft Visual Basic 3.0 Professional Edition that" <br>    Info$ = Info$ + Chr$(10) + "demonstrates the Visual Basic Wrapper DLL for SMS API." <br> <br>    SmsAbout "About SMS Report", Info$ <br>End Sub <br> <br>Private Sub mnuWindowArrangeIcons_Click() <br>    Arrange ARRANGE_ICONS <br>End Sub <br> <br>Private Sub mnuWindowCascade_Click() <br>    Arrange CASCADE <br>End Sub <br> <br> <br>Private Sub tlbToolbar_ButtonClick(ByVal Button As Button) <br>    Select Case Button.Index <br>    Case 1 <br>        mnuFileNew_Click <br>    Case 2 <br>        mnuFileOpen_Click <br>    Case 3 <br>        mnuFileSave_Click <br>    Case 4 <br>        'Indicate to document that no Pring dialog is needed <br>        'This flag is reset by mnuFilePrint_Click() <br>        gbNeedPrintDialog% = False <br> <br>        mnuFilePrint_Click <br>    Case 5 <br>        mnuFilePrintPreview_Click <br>    End Select <br>End Sub <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
