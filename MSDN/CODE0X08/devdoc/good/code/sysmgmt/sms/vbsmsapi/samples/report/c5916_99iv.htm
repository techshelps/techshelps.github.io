<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GENERIC.FRM</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5917"></a>GENERIC.FRM</h2>
<pre><code>VERSION 4.00 <br>Begin VB.Form frmGenericReport  <br>   Appearance      =   0  'Flat <br>   BackColor       =   &amp;H80000005&amp; <br>   Caption         =   "Generic Report" <br>   ClientHeight    =   4350 <br>   ClientLeft      =   1860 <br>   ClientTop       =   2580 <br>   ClientWidth     =   4530 <br>   BeginProperty Font  <br>      name            =   "MS Sans Serif" <br>      charset         =   1 <br>      weight          =   700 <br>      size            =   8.25 <br>      underline       =   0   'False <br>      italic          =   0   'False <br>      strikethrough   =   0   'False <br>   EndProperty <br>   ForeColor       =   &amp;H80000008&amp; <br>   Height          =   4755 <br>   Left            =   1800 <br>   LinkTopic       =   "Form1" <br>   MDIChild        =   -1  'True <br>   ScaleHeight     =   4350 <br>   ScaleWidth      =   4530 <br>   Top             =   2235 <br>   Width           =   4650 <br>   Begin VB.CommandButton cmdSave  <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H80000005&amp; <br>      Caption         =   "Save" <br>      Height          =   315 <br>      Left            =   420 <br>      TabIndex        =   4 <br>      TabStop         =   0   'False <br>      Top             =   2100 <br>      Visible         =   0   'False <br>      Width           =   3735 <br>   End <br>   Begin VB.CommandButton cmdSaveAs  <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H80000005&amp; <br>      Caption         =   "Save As" <br>      Height          =   315 <br>      Left            =   420 <br>      TabIndex        =   3 <br>      TabStop         =   0   'False <br>      Top             =   2400 <br>      Visible         =   0   'False <br>      Width           =   3735 <br>   End <br>   Begin VB.CheckBox chkDirty  <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H80000005&amp; <br>      Caption         =   "Dirty Bit" <br>      ForeColor       =   &amp;H80000008&amp; <br>      Height          =   195 <br>      Left            =   420 <br>      TabIndex        =   2 <br>      TabStop         =   0   'False <br>      Top             =   1860 <br>      Visible         =   0   'False <br>      Width           =   1155 <br>   End <br>   Begin VB.CommandButton cmdPrintPreview  <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H80000005&amp; <br>      Caption         =   "Print Preview" <br>      Height          =   315 <br>      Left            =   420 <br>      TabIndex        =   1 <br>      TabStop         =   0   'False <br>      Top             =   3000 <br>      Visible         =   0   'False <br>      Width           =   3735 <br>   End <br>   Begin VB.CommandButton cmdPrint  <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H80000005&amp; <br>      Caption         =   "Print" <br>      Height          =   315 <br>      Left            =   420 <br>      TabIndex        =   0 <br>      TabStop         =   0   'False <br>      Top             =   2700 <br>      Visible         =   0   'False <br>      Width           =   3735 <br>   End <br>   Begin VB.CommandButton cmdAbort  <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H80000005&amp; <br>      Caption         =   "Abort" <br>      Height          =   315 <br>      Left            =   420 <br>      TabIndex        =   7 <br>      TabStop         =   0   'False <br>      Top             =   3900 <br>      Visible         =   0   'False <br>      Width           =   3735 <br>   End <br>   Begin VB.CommandButton cmdInitialize  <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H80000005&amp; <br>      Caption         =   "Initialize" <br>      Height          =   315 <br>      Left            =   420 <br>      TabIndex        =   8 <br>      TabStop         =   0   'False <br>      Top             =   3600 <br>      Visible         =   0   'False <br>      Width           =   3735 <br>   End <br>   Begin VB.CommandButton cmdExport  <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H80000005&amp; <br>      Caption         =   "Export" <br>      Height          =   315 <br>      Left            =   420 <br>      TabIndex        =   6 <br>      TabStop         =   0   'False <br>      Top             =   3300 <br>      Visible         =   0   'False <br>      Width           =   3735 <br>   End <br>   Begin Crystal.CrystalReport CrystalReport  <br>      Left            =   960 <br>      Top             =   360 <br>      _ExtentX        =   741 <br>      _ExtentY        =   741 <br>      _StockProps     =   0 <br>      ReportFileName  =   "" <br>      Destination     =   0 <br>      WindowLeft      =   100 <br>      WindowTop       =   100 <br>      WindowWidth     =   480 <br>      WindowHeight    =   300 <br>      WindowTitle     =   "" <br>      WindowBorderStyle=   2 <br>      WindowControlBox=   -1  'True <br>      WindowMaxButton =   -1  'True <br>      WindowMinButton =   -1  'True <br>      CopiesToPrinter =   1 <br>      PrintFileName   =   "" <br>      PrintFileType   =   2 <br>      SelectionFormula=   "" <br>      GroupSelectionFormula=   "" <br>      Connect         =   "" <br>      UserName        =   "" <br>      ReportSource    =   0 <br>      BoundReportHeading=   "" <br>      BoundReportFooter=   -1  'True <br>   End <br>   Begin MSComDlg.CommonDialog CommonDialog  <br>      Left            =   480 <br>      Top             =   360 <br>      _ExtentX        =   847 <br>      _ExtentY        =   847 <br>      _StockProps     =   0 <br>   End <br>   Begin VB.Label lblFileSpec  <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H80000005&amp; <br>      Caption         =   "File Specification" <br>      ForeColor       =   &amp;H80000008&amp; <br>      Height          =   195 <br>      Left            =   1740 <br>      TabIndex        =   5 <br>      Top             =   1860 <br>      Visible         =   0   'False <br>      Width           =   2175 <br>   End <br>End <br>Attribute VB_Name = "frmGenericReport" <br>Attribute VB_Creatable = False <br>Attribute VB_Exposed = False <br>Option Explicit <br> <br>'//**************************************************************************** <br>'// <br>'//  Copyright (c) 1995, Microsoft Corporation <br>'// <br>'//  File:  GENERIC.FRM <br>'// <br>'//  History: <br>'// <br>'//      Gary Fuehrer, SEA   5/9/95      Created. <br>'// <br>'//**************************************************************************** <br> <br>Dim hConnect&amp; <br>Dim ReportTempSpec$ <br>Dim NewNumber% <br>Dim db As Database <br>Dim dbt As Database <br> <br>Private Sub chkDirty_Click() <br>    UpdateCaption <br>End Sub <br> <br>Private Sub cmdAbort_Click() <br>    'Handle user abort of current lengthy operation HERE <br>End Sub <br> <br>Private Sub cmdExport_Click() <br>    Dim FileSpec$, nPos%, Resp%, FileKilled% <br> <br>    'Build suggested file spec <br>    If lblFileSpec &gt; "" Then <br>        nPos% = InStr(lblFileSpec, ".") - 1 <br>        If nPos% &lt; 0 Then nPos% = Len(lblFileSpec) <br>        FileSpec$ = left$(lblFileSpec, nPos) + ".TXT" <br>    Else: FileSpec$ = "*.TXT" <br>    End If <br> <br>    'Get from the user the print file name <br>    FileSpec$ = GetSaveAsFileSpec$(FileSpec$, "ASCII Text (*.TXT) |*.TXT |All Files (*.*) |*.*") <br>    If FileSpec$ &lt;= "" Then Exit Sub <br> <br>    'See if we need to delete existing file <br>    '(Crystal Reports can't overwrite an existing file) <br>    If Dir$(FileSpec$) &gt; "" Then <br>        FileKilled% = 0 <br>        Do <br>            On Error Resume Next <br>            Kill FileSpec <br>            If Err &gt; 0 Then <br>                Resp% = MsgBox("An error occured writing to file " + FileSpec$ + ":" + Chr$(10) + Error$ + Chr$(10) + Chr$(10) + "Do you want to try again?", MB_RETRYCANCEL Or MB_ICONQUESTION, Caption) <br>                If Resp% = IDCANCEL Then Exit Sub <br>            Else: FileKilled% = True <br>            End If <br>        Loop Until FileKilled% <br>    End If <br> <br>    'Export report code HERE <br>End Sub <br> <br>Private Sub cmdInitialize_Click() <br>    If lblFileSpec &gt; "" Then <br>        'Flag that we are in data reading mode <br>        'Initialize for File Open HERE <br>    Else <br>        'Flag that we are in gathering data mode <br>        'Initialize for File New HERE <br>    End If <br>End Sub <br> <br>Private Sub cmdPrint_Click() <br>    'See if we need the print dialog <br>    If gbNeedPrintDialog% = True Then <br>        'Put up the print dialog <br>        CommonDialog.Flags = PD_NOSELECTION Or PD_NOPAGENUMS Or PD_HIDEPRINTTOFILE <br>        CommonDialog.Copies = 1 <br>        CommonDialog.CancelError = True <br>        On Error Resume Next <br>        CommonDialog.Action = DLG_PRINT <br>        If Err = CDERR_CANCEL Then Exit Sub <br>        If Err &gt; 0 Then <br>            MsgBox "An unexpected error occured:" + Chr$(10) + Chr$(10) + Error$, MB_OK Or MB_ICONEXCLAMATION, Caption <br>            Exit Sub <br>        End If <br>        On Error GoTo 0 <br> <br>        'Handle user printer settings HERE <br>    Else <br>        'Supply printer default settings HERE <br>    End If <br> <br>    'Print document HERE <br>End Sub <br> <br>Private Sub cmdPrintPreview_Click() <br>    'Print Preview document HERE <br>End Sub <br> <br>Private Sub cmdSave_Click() <br>    'See if we need to do a Save or a Save As <br>    If lblFileSpec &gt; "" Then <br>        SaveDoc lblFileSpec <br>    Else: cmdSaveAs_Click <br>    End If <br>End Sub <br> <br>Private Sub cmdSaveAs_Click() <br>    Dim NewFileSpec$ <br> <br>    NewFileSpec$ = GetSaveAsFileSpec$(lblFileSpec, "Xxxxx (*.XXX)|*.XXX|All Files (*.*)|*.*") 'HERE <br>    If NewFileSpec$ &lt;= "" Then Exit Sub <br> <br>    SaveDoc NewFileSpec$ <br>End Sub <br> <br>Private Sub Form_Load() <br>    chkDirty = False <br> <br>    NewNumber% = InitReportNewNumber% <br>    hConnect&amp; = InitReporthConnect&amp; <br>    lblFileSpec = InitReportFileSpec$ <br>    ReportTempSpec$ = InitReportTempSpec$ <br>End Sub <br> <br>Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer) <br>    Dim Resp%, FileSpec$ <br>     <br>    'Give the user a chance to save document <br>    If chkDirty Then <br>        Resp% = MsgBox("This report has been modified. Save data before closing?", MB_YESNOCANCEL Or MB_ICONQUESTION, Caption) <br>        If Resp% = IDYES Then <br>            cmdSave_Click <br>            If chkDirty Then Cancel = True <br>        ElseIf Resp% = IDCANCEL Then: Cancel = True <br>        End If <br>    End If <br>End Sub <br> <br>Private Sub Form_Resize() <br>    Static OldWidth, OldHeight <br> <br>    If WindowState = MINIMIZED Then Exit Sub <br> <br>    If OldWidth &lt;&gt; Width Then <br>         <br>        OldWidth = Width <br>    End If <br> <br>    If OldHeight &lt;&gt; Height Then <br>         <br>        OldHeight = Height <br>    End If <br>End Sub <br> <br>Private Sub Form_Unload(Cancel As Integer) <br>    'Kill temp file <br>    On Error Resume Next <br>    Kill ReportTempSpec$ <br>    On Error GoTo 0 <br> <br>    FreeReportWindow Me <br>End Sub <br> <br>Private Function GetSaveAsFileSpec$(ByVal InitFileSpec$, Filter$) <br>    'Default return value empty (User canceled) <br>    GetSaveAsFileSpec$ = "" <br> <br>    CommonDialog.CancelError = True <br>    CommonDialog.filename = InitFileSpec$ <br>    CommonDialog.Filter = Filter$ <br>    CommonDialog.FilterIndex = 1 <br>    CommonDialog.Flags = OFN_OVERWRITEPROMPT Or OFN_PATHMUSTEXIST Or OFN_HIDEREADONLY <br>    On Error Resume Next <br>    CommonDialog.Action = DLG_FILE_SAVE <br>    If Err = CDERR_CANCEL Then Exit Function <br>    If Err &gt; 0 Then <br>        MsgBox "An unexpected error occured:" + Chr$(10) + Error$, MB_OK Or MB_ICONEXCLAMATION, Caption <br>        Exit Function <br>    End If <br>    On Error GoTo 0 <br> <br>    GetSaveAsFileSpec$ = CommonDialog.filename <br>End Function <br> <br>Private Sub lblFileSpec_Change() <br>    UpdateCaption <br>End Sub <br> <br>Private Sub SaveDoc(ByVal FileSpec$) <br>    Dim ReportSaved%, Resp% <br> <br>    ReportSaved% = False <br>    Do <br>        On Error Resume Next <br>        FileCopy ReportTempSpec$, FileSpec$ <br>        If Err &gt; 0 Then <br>            Resp% = MsgBox("An error occured trying to save " + FileSpec$ + ":" + Chr$(10) + Error$ + Chr$(10) + Chr$(10) + "Do you want to try again?", MB_OKCANCEL Or MB_ICONQUESTION, Caption) <br>            If Resp% = IDCANCEL Then Exit Do <br>        Else: ReportSaved% = True <br>        End If <br>    Loop Until ReportSaved% <br> <br>    If ReportSaved% Then <br>        lblFileSpec = FileSpec$ <br>        chkDirty = False <br>    End If <br>End Sub <br> <br>Private Sub UpdateCaption() <br>    Dim NewCaption$ <br> <br>    If lblFileSpec &gt; "" Then <br>        NewCaption$ = lblFileSpec <br>    Else: NewCaption$ = "New Generic Report " + CStr(NewNumber) <br>    End If <br> <br>    If chkDirty Then NewCaption$ = NewCaption$ + "*" <br> <br>    Caption = NewCaption$ <br>End Sub <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
