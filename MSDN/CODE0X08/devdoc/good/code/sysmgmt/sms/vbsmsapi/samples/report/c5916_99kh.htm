<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MACHINE.BAS</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5921"></a>MACHINE.BAS</h2>
<pre><code>Attribute VB_Name = "MACHINE" <br>Option Explicit <br> <br>'//**************************************************************************** <br>'// <br>'//  Copyright (c) 1995, Microsoft Corporation <br>'// <br>'//  File:  MACHINE.BAS <br>'// <br>'//  History: <br>'// <br>'//      Gary Fuehrer, SEA   5/9/95      Created. <br>'// <br>'//**************************************************************************** <br> <br>'For use by QueryProperties%() and FetchProperties%() ONLY <br>Dim dyQueryProperties As Recordset <br> <br>'For use by QueryAttributes%() and FetchAttributes%() ONLY <br>Dim dyQueryAttributes As Recordset <br> <br>Function FetchAttributes%(IDLookup As IDLookupRec, Flush%, DBError%) <br>'   Fetches another Attribute &amp; Value from the dyQueryAttributes dynaset <br>'Parameters: <br>'   IDLookup - Filled in with next attribute and value: <br>'       .ID      - Recieves the ID of the attribute <br>'       .StrID   - Recieves the name of the attribute <br>'       .StrName - Recieves the value of the attribute <br>'   Flush% - Usually False. If True, the fetch is ended. <br>'   DBError% - Returns True when DB error occures. <br>'Return Value: <br>'   True if another record fetched, else False (no more) <br> <br>    DBError% = True <br>    FetchAttributes% = False <br> <br>    If dyQueryAttributes.EOF Or Flush% Then <br>        dyQueryAttributes.Close <br>    Else <br>        ' Populate the site record from the dyQueryProperties <br>        ' dynaset and find the next record <br>        IDLookup.ID&amp; = dyQueryAttributes("ID") <br>        If IsNull(dyQueryAttributes("StrID")) Then <br>            IDLookup.StrID$ = "" <br>        Else: IDLookup.StrID$ = Trim$(dyQueryAttributes("StrID")) <br>        End If <br>        If IsNull(dyQueryAttributes("Value")) Then <br>            IDLookup.StrName$ = "" <br>        Else: IDLookup.StrName$ = Trim$(dyQueryAttributes("Value")) <br>        End If <br> <br>        On Error Resume Next <br>        dyQueryAttributes.MoveNext <br>        If Err &gt; 0 Then Exit Function <br>        On Error GoTo 0 <br> <br>        FetchAttributes% = True <br>    End If <br> <br>    DBError% = False <br>End Function <br> <br>Function FetchProperties%(IDLookup As IDLookupRec, Flush%, DBError%) <br>'   Fetches another Property from the dyQueryProperties dynaset <br>'Parameters: <br>'   IDLookup - Filled in with next property name and ID. <br>'   Flush% - Usually False. If True, the fetch is ended. <br>'   DBError% - Returns True when DB error occures. <br>'Return Value: <br>'   True if another record fetched, else False (no more) <br> <br>    DBError% = True <br>    FetchProperties% = False <br> <br>    If dyQueryProperties.EOF Or Flush% Then <br>        dyQueryProperties.Close <br>    Else <br>        ' Populate the site record from the dyQueryProperties <br>        ' dynaset and find the next record <br>        IDLookup.ID&amp; = dyQueryProperties("ID") <br>        If IsNull(dyQueryProperties("StrID")) Then <br>            IDLookup.StrID$ = "" <br>        Else: IDLookup.StrID$ = Trim$(dyQueryProperties("StrID")) <br>        End If <br>        If IsNull(dyQueryProperties("StrName")) Then <br>            IDLookup.StrName$ = "" <br>        Else: IDLookup.StrName$ = Trim$(dyQueryProperties("StrName")) <br>        End If <br> <br>        On Error Resume Next <br>        dyQueryProperties.MoveNext <br>        If Err &gt; 0 Then Exit Function <br>        On Error GoTo 0 <br> <br>        FetchProperties% = True <br>    End If <br> <br>    DBError% = False <br>End Function <br> <br>Function GetMachine%(db As Database, IDLookup As IDLookupRec) <br>    Dim Sql$ <br>    Dim dyIDLookup As Recordset <br> <br>    'Set default return value False (Database error) <br>    GetMachine% = False <br> <br>    Sql$ = "SELECT ID, StrID, StrName FROM [MachineID]" <br> <br>    ' If an error occurs exit the function <br>    On Error Resume Next <br>    Set dyIDLookup = db.OpenRecordset(Sql$, dbOpenDynaset) <br>    If Err &gt; 0 Then Exit Function <br>    On Error GoTo 0 <br> <br>    ' Populate the site record <br>    If Not dyIDLookup.EOF Then <br>        IDLookup.ID&amp; = dyIDLookup("ID") <br>        If IsNull(dyIDLookup("StrID")) Then <br>            IDLookup.StrID$ = "" <br>        Else: IDLookup.StrID$ = Trim$(dyIDLookup("StrID")) <br>        End If <br>        If IsNull(dyIDLookup("StrName")) Then <br>            IDLookup.StrName$ = "" <br>        Else: IDLookup.StrName$ = Trim$(dyIDLookup("StrName")) <br>        End If <br>    End If <br> <br>    ' Return the record count <br>    GetMachine% = True <br>End Function <br> <br>Function NewMachineDatabase%(db As Database, dbSrce As Database, Attrib As AttributeRec, ErrStr$) <br>    Dim ix As Index <br> <br>    'Default return value False (Failed) <br>    NewMachineDatabase% = False <br> <br>    On Error GoTo NewMachineDatabaseErr <br> <br>    dbSrce.Execute "SELECT PropertyID, PropertyNum, AttributeID, Value INTO Attributes IN '" + db.Name + "' FROM Attributes WHERE MachineID = " + CStr(Attrib.MachineID) <br>    dbSrce.Execute "SELECT DISTINCT ID, StrID, StrName INTO MachineID IN '" + db.Name + "' FROM MachineIDs, Attributes WHERE MachineID = MachineIDs.ID AND MachineID = " + CStr(Attrib.MachineID) <br>    dbSrce.Execute "SELECT DISTINCT ID, StrID, StrName INTO AttributeIDs IN '" + db.Name + "' FROM AttributeIDs, Attributes WHERE AttributeID = AttributeIDs.ID AND MachineID = " + CStr(Attrib.MachineID) <br>    dbSrce.Execute "SELECT DISTINCT ID, StrID, StrName INTO PropertyIDs IN '" + db.Name + "' FROM PropertyIDs, Attributes WHERE PropertyID = PropertyIDs.ID AND MachineID = " + CStr(Attrib.MachineID) <br> <br>    'Set key on Attributes <br>    Set ix = New Index <br>    ix.Name = "SortKey" <br>    ix.Primary = True <br>    ix.Unique = True <br>    ix.Fields = "PropertyID;PropertyNum;AttributeID" <br>    db.TableDefs("Attributes").Indexes.Append ix <br> <br>    'Set key on MachineID <br>    Set ix = New Index <br>    ix.Name = "Key" <br>    ix.Primary = True <br>    ix.Unique = True <br>    ix.Fields = "ID" <br>    db.TableDefs("MachineID").Indexes.Append ix <br> <br>    'Set key on PropertyIDs <br>    Set ix = New Index <br>    ix.Name = "Key" <br>    ix.Primary = True <br>    ix.Unique = True <br>    ix.Fields = "ID" <br>    db.TableDefs("PropertyIDs").Indexes.Append ix <br>     <br>    'Set key on AttributeIDs <br>    Set ix = New Index <br>    ix.Name = "Key" <br>    ix.Primary = True <br>    ix.Unique = True <br>    ix.Fields = "ID" <br>    db.TableDefs("AttributeIDs").Indexes.Append ix <br>     <br>    'Return success <br>    NewMachineDatabase% = True <br>    Exit Function <br> <br>NewMachineDatabaseErr: <br>    ErrStr$ = Error$ <br>    Exit Function <br>End Function <br> <br>Function NewMachineReportWindow%(hConnect&amp;, ByVal FileSpec$, dbSrce As Database, Attrib As AttributeRec, ErrStr$) <br>    Dim i%, Ret&amp;, TempPath$, TempSpec$, frm As Form <br>    Dim db As Database, td As TableDef, fd As Field, ix As Index <br> <br>    'Default return value zero (Failed) <br>    NewMachineReportWindow% = 0 <br> <br>    'Allocate space for returned string <br>    TempSpec$ = String$(256, 0) <br> <br>    'Get a temp file name <br>    TempPath$ = Environ$("TEMP") <br>    Ret&amp; = GetTempFileName(TempPath$, "MDB", 0, TempSpec$) <br>    ErrStr$ = "Could not get a temporary file name for the new report." <br>    If (Ret&amp; = 0) Then Exit Function <br> <br>    'Clean up return string of null terminator <br>    i% = InStr(TempSpec$, Chr$(0)) <br>    If i% = 0 Then i% = Len(TempSpec$) + 1 <br>    TempSpec$ = left$(TempSpec$, i% - 1) <br> <br>    'Create a temporary document file <br>    On Error GoTo NewMachineReportWindowErr <br>    If FileSpec$ &gt; "" Then <br>        'File Open: so copy the file the user selected <br>        ErrStr$ = "Could not create a temporary copy of " + FileSpec$ + ".+" <br>        FileCopy FileSpec$, TempSpec$ <br>    Else <br>        'File New: so create a new empty document <br>        ErrStr$ = "Could not create a temporary file for the new report." <br>        Kill TempSpec$ <br>        Set db = CreateDatabase(TempSpec$, DB_LANG_GENERAL) <br> <br>        'Populate it with data from source database <br>        i% = NewMachineDatabase%(db, dbSrce, Attrib, ErrStr$) <br>        db.Close <br>        If Not i% Then GoTo NewMachineReportWindowErr <br>    End If <br>    On Error GoTo 0 <br> <br>    'Pass the new document the file name to use <br>    InitReporthConnect&amp; = hConnect&amp; <br>    InitReportFileSpec$ = FileSpec$ <br>    InitReportTempSpec$ = TempSpec$ <br>    If InitReportFileSpec$ &lt;= "" Then InitReportNewNumber% = InitReportNewNumber% + 1 <br> <br>    'Create a new document window <br>    On Error GoTo NewMachineReportWindowErr <br>    ErrStr$ = "Could not create site report document window." <br>    Set frm = New frmMachineReport <br>    Load frm <br>    On Error GoTo 0 <br> <br>    'Register document window with MDI <br>    i% = RegisterReportWindow%(frm, ErrStr$) <br>    If i% &lt;= 0 Then GoTo NewMachineReportWindowErr <br> <br>    'Show the document window <br>    frm.Show <br>    NewMachineReportWindow% = i% <br>    Exit Function <br> <br>NewMachineReportWindowErr: <br>    On Error Resume Next <br>    If Not frm Is Nothing Then Unload frm <br>    Kill TempSpec$ <br>    Exit Function <br>End Function <br> <br>Function QueryAttributes%(db As Database, Attrib As AttributeRec) <br>'Queries the Attribute table and creates <br>'   a dynaset (dyQueryAttributes) used by FetchAttributes() <br>'Parameters <br>'   db - The database used for the query <br>'   Attrib - Not used. All the properties are fetched. <br>'Return Value: <br>'   True if no error, else False <br> <br>    Dim Sql$, Where$ <br> <br>    'Default return value False (Database Error) <br>    QueryAttributes% = False <br> <br>    ' Build the SQL statement <br>    Sql$ = "SELECT DISTINCT PropertyID, PropertyNum, AttributeID, ID, StrID, Value FROM AttributeIDs, Attributes " <br> <br>    'Build the Where clause <br>    Where$ = " WHERE AttributeID = ID And PropertyID = " + CStr(Attrib.PropertyID&amp;) + " ORDER BY PropertyID ASC, PropertyNum ASC, AttributeID ASC" <br> <br>    'Append the where clause onto query string <br>    Sql$ = Sql$ + Where$ <br> <br>    'Perform the query <br>    On Error Resume Next <br>    Set dyQueryAttributes = db.OpenRecordset(Sql$, dbOpenDynaset) <br>    If Err &gt; 0 Then Exit Function <br>    On Error GoTo 0 <br> <br>    'Every thing is ok <br>    QueryAttributes% = True <br>End Function <br> <br>Function QueryProperties%(db As Database, Attrib As AttributeRec) <br>'Queries the Attribute table for all properties and creates <br>'   a dynaset (dyQueryProperties) used by FetchProperties() <br>'Parameters <br>'   db - The database used for the query <br>'   Attrib - Not used. All the properties are fetched. <br>'Return Value: <br>'   True if no error, else False <br> <br>    Dim Sql$, Where$ <br> <br>    'Default return value False (Database Error) <br>    QueryProperties% = False <br> <br>    ' Build the SQL statement <br>    Sql$ = "SELECT DISTINCT ID, StrID, StrName FROM PropertyIDs, Attributes" <br>     <br>    'Build the Where clause <br>    Where$ = " WHERE PropertyID = ID" <br> <br>    'Append the where clause onto query string <br>    Sql$ = Sql$ + Where$ <br> <br>    'Perform the query <br>    On Error Resume Next <br>    Set dyQueryProperties = db.OpenRecordset(Sql$, dbOpenDynaset) <br>    If Err &gt; 0 Then Exit Function <br>    On Error GoTo 0 <br> <br>    'Every thing is ok <br>    QueryProperties% = True <br>End Function <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
