<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5868"></a>README.TXT</h2>
<pre><code><br>Sample: container browser <br>========================= <br> <br>This program implements a browser for SMS objects, it illustrates <br>possible uses of the following SMS APIs: <br>    SmsEnumContainers <br>    SmsEnumFilters <br>    SmsDataSourceConnect <br>    SmsDataSourceDisconnect <br>    SmsOpenContainer <br>    SmsPopulate <br>    SmsCloseContainer <br>    SmsGetNextFolder <br>    SmsCloseFolder <br>    SmsRewind <br>    SmsGetFolderID <br>    SmsGetFolderType <br>    SmsGetScalarCount <br>    SmsGetFolderCount <br>    SmsEnumFolderTypes <br>    SmsGetNextScalar <br>    SmsCreateFilter <br>    SmsAddToken <br>    SmsGetAllFilters. <br>    SmsGetFilterType <br>    SmsGetToken <br>    SmsGetTokenCount <br>    SmsCloseFilter <br> <br>Using the EnumContainers and EnumFilters APIs the program discovers <br>what containers and filters have been registered with the API engine. <br>The resulting strings are used to populate the containers and <br>filters listboxes. <br> <br>After establishing a connection to the appropriate datasource, the user <br>selects a container to examine. When the "Done" button, in the select <br>container section of the dialogue, is pressed the "Select" and "Done" <br>buttons in the Filters section are enabled. At this point the user <br>should select and configure filters (explanations further down). <br>Multiple filters may be selected for the container. Pressing the "Done" <br>button in this section enables the "View container" button at the <br>lower part of the dialogue. <br> <br>The "View container" button brings up the "The container" dialogue. <br>This dialogue displays the container type (eg "Package container"), the <br>number of folders contained in the container, and a list of these <br>folders. The user then selects a folder and views it ("View folder" <br>button). The "Done" button dismisses this dialogue and returns to the <br>main doalogue. In this case all the user can do is terminate the <br>browser, or restart by pressing the "Connect" button. <br> <br>Viewing folders: <br>View a folder from the container display brings up a dialogue titled <br>"View of folder: &lt;the folder's name&gt;". This dialogue has two sections, <br>folder details, and a sub-folders listbox. The folder details section <br>displays the folder's ID, type, count of scalars in the folder, count <br>of sub-folders in the folder, and the number of sub-folder types that <br>the folder can contain. Refer to the smsapi.h header file, or supplied <br>help file, for the precise meaning and use of sub-folder type count. <br>If there are any scalars in the folder the "View scalars" button will <br>be enabled. Pressing this brings up a dialogue displaying the scalars and <br>and their values. <br>The sub-folder list displays the names of any sub-folders. Again, if <br>there are any sub-folders the "View sub-folder" button will be enabled. <br>Pressing this will cause the dialogue contents to be replaced with the <br>details of the selected folder. <br> <br>Configuring filters: <br>There are currently 8 filters available: <br>    site, machine, group, job, architecure, package, attribute, and <br>        sitelimit. <br>After selecting a filter the user must configure it in order for it to <br>be applied to the container, this is done in the "Configure filter" <br>dialogue. <br>Filters are composed of one or more tokens, the dialogue allows the <br>setting of tokens into the specified filter. <br>There are, currently, two forms of APIs for inserting tokens into <br>filters, Add{And|Or}Token3 and Add{And|Or}Token4. The former version is <br>used by all filters with the exception of Machine filters. <br>If the dialogue detects that it is processing a Machine filter, then an <br>additional edit control is enabled. For all other filters it is disabled. <br>Machine filters need to be able to specify a group class, an attribute <br>name, an operator, and a value. Other filters do not need the group <br>class field. <br>The usage of the three common fields differs considerably among filters, <br>indeed, some filters do not even need all three parameters to be filled <br>in. <br> <br>    Site filter <br>    ----------- <br>Possible values for the name field are: RootSite, and SiteByCode. <br>They inform the container what site folders it should contain. <br>If no site filter is applied then the site container will contain <br>one folder for each site in the datasource. <br>If RootSite is specified, then no other parameters are needed, and the <br>container will only contain a folder for the root site. <br>If SiteByCode is specified, then the Value field must contain the three <br>letter site code for the requested site. Mixing of a RootSite with <br>SiteByCode tokens makes no sense. (You have asked for only the root site <br>and then additional sites.) In this case the RootSite token will take <br>precedence and the other tokens will be discarded. <br>It is possible, and perfectly sensible, to set multiple SiteByCode <br>tokens. In this case the container will be populated with one folder for <br>each of the requested sites. However, in this case the tokens must be <br>ORed into the filter. To say that you want the boolean product of site <br>ABC and site DEF makes no sense since no site can possibly have to <br>site codes. <br> <br> <br>    Group filter <br>    ----------- <br>This filter allows you to select the groupclasses that will be included <br>for any machines that you wish to browse. As such it is only relevant <br>for a container that includes machines within its hierarchy, eg site <br>container, machine container. <br>Configure this filter as follows: <br> <br>Name field: must say "GroupClass" <br>GroupClass field: a valid groupclass name such as <br>        "MICROSOFT|IDENTIFICATION|1.0". <br>Operator combobox: select the "is" operator. It's the only one allowed. <br> <br>It is possible to OR multiple tokens together. For instance, selecting <br>(OR) a token for MICROSOFT|IDENTIFICATION|1.0 group, select (OR) a <br>token for MICROSOFT|NETCARD|1.0 group. When viewing the parent machine <br>folder there will be two sub-folders, one for each of these groups. <br>Note: some groupclasses have multiple instances, eg MICROSOFT|ENVIRONMENT|1.0. <br>In this case there will be as many machine group sub-folders as there <br>are instances of this group. <br>As in site filters, ANDing tokens together makes no sense. <br> <br> <br>    Job filter <br>    ----------- <br>Three options exist for filtering jobs: by job ID, by job type, and <br>by job status. In all three cases the name and value fields are used. <br>The operation field, currently, is not. <br>To set tokens, enter one of the strings "JobType", "JobID", or "JobStatus" <br>in the name field. <br>For JobType tokens the value should be one of the following (again as <br>a literal string): <br>    "Install"           - for workstation install jobs. <br>    "Server"            - for server share jobs. <br>    "Remove package"    - for remove package jobs. <br>    "System"            - for NAD transfer, site, and minijobs. <br> <br>For retrieving jobs by their ID, you should type "JobID" in the name <br>field, and the (eight character) job name in the value field. <br> <br>For retrieving jobs by their status, type "JobStatus" in the name field. <br>The value field should contain one of the following string values: <br>    "Pending" <br>    "Active" <br>    "Cancelled" <br>    "Complete" <br>    "Failed" <br>    "Active failed" <br> <br>Job tokens can be combined together inside a filter. For instance, the <br>tokens: JobType = Install OR JobID = "ABC00123" will result in the <br>retrieval of all workstation install jobs, and the job with the name <br>"ABC00123". <br> <br> <br>    Architecture filter <br>    ------------------- <br>This uses one parameter, the value field. Additional documentation <br>will describe what values are allowed. For instance, "Personal Computer" <br>will result in machines of the Personal Computer architectures being <br>selected. "SMSEvent" will result in SMS event MIFs being selected. <br> <br> <br>    Package filter <br>    -------------- <br>Currently, there is only one type of token for package filters, this <br>is the Type token. The type field should say "PackageType". The value field <br>is one of the following literal strings: <br>    "Workstation" <br>    "Server" <br>    "Inventory" <br>These can be combined by ORing them into a filter, in which case <br>you could retrieve, say, Workstation and Sharing packages. <br>If no package filter is applied, then the system defaults to returning <br>all packages that are in the datasource. <br> <br> <br>    Attribute filter <br>    ---------------- <br>An attribute filter acts in the same way as an SMS query format. It <br>is used when enumerating/selecting machines and defines what machine <br>attributes should be accepted by the container. This has a significant <br>performance gain over using group filters. <br>For instance, if the user only wants to see the Name, SMSLocation, <br>and NetCardID from a machine's Identification group, then an <br>attribute filter containing tokens for each of these attributes will <br>result in a much faster folder selection than specifying a group <br>filter for then Identification group. Additionally, only the information <br>requested will be returned. <br> <br>The name field should contain the groupclass (eg MICROSOFT|IDENTIFICATION|1.0). <br>The value field should contain the name of the attribute (eg "Name"). <br>The operator is not currently used. <br> <br>NOTE: attribute filters specifying attributes that exist in multiple <br>instance groups (eg the Environment group) will produce indeterminate <br>results. They should not be used in this case. <br> <br> <br>        Machine filter <br>        -------------- <br>A machine filter is the API equivalent of an SMS query. To configure this <br>type of filter you must provide the following: <br> <br>Architecture field: this must contain an architecture that is known to <br>    SMS, exam,ples are: "Personal Computer", "SMSEvent", "UserGroups". <br>    Consult the SMS documentation for full details about architectures. <br>    GroupClass field: a valid groupclass name such as <br>        "MICROSOFT|IDENTIFICATION|1.0". <br>Attribute name field: the name of an attribute that exists within the <br>    specified groupclass. For example "SystemRole". <br>Value: the value for the attribute. <br>Operator combobox: this is a dropdown listbox that contains operators that <br>    define the relationship between the attribute and the value. <br>    For example, "SystemRole" "is" "Server". In this case "is" denotes the <br>    string equality operator. <br> <br>This filter can be applied to site, machine, and machine group containers. <br> <br>For more details refer to your SMS documentation on SMS queries. <br> <br> <br>        Sitelimit filter <br>        ---------------- <br>This filter can only be applied to a machine container. Using it you <br>can specify that you only want machines from a specific site and, <br>optionally, a specified domain to be included within the container. <br>Configure this filter as follows: <br> <br>Site code field: the three letter site code <br>[optional] Domain: the name of the domain <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
