<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MD4.H</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5776"></a>MD4.H</h2>
<pre><code>#ifndef _MD4_H_ <br>#define _MD4_H_ <br> <br>/* MD4.H - header file for MD4C.C <br> */ <br> <br>/* Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All <br>   rights reserved. <br> <br>   License to copy and use this software is granted provided that it <br>   is identified as the "RSA Data Security, Inc. MD4 Message-Digest <br>   Algorithm" in all material mentioning or referencing this software <br>   or this function. <br> <br>   License is also granted to make and use derivative works provided <br>   that such works are identified as "derived from the RSA Data <br>   Security, Inc. MD4 Message-Digest Algorithm" in all material <br>   mentioning or referencing the derived work. <br> <br>   RSA Data Security, Inc. makes no representations concerning either <br>   the merchantability of this software or the suitability of this <br>   software for any particular purpose. It is provided "as is" <br>   without express or implied warranty of any kind. <br> <br>   These notices must be retained in any copies of any part of this <br>   documentation and/or software. <br> */ <br> <br>/* This code differs from the MD4 implementation contained in Internet <br>   RFC-1320 in the following respects: <br> <br>   1. "global.h" is no longer needed. <br> <br>   2. PROTO_LIST was removed from the function prototypes. <br> <br>   3. Comments on the use of the main calls added to aid developers. <br> */ <br> <br>/* --------------------------------------------------------------------- <br> * The procedure for using the following function calls to compute a <br> * digest is as follows: <br> * <br> *   MD4_CTX context; <br> *      // create a storage context that persistes between calls. <br> * <br> *   MD4_Init (&amp;context); <br> *      // initialize context's initial digest and byte-count <br> * <br> *   MD4Update (&amp;context, inputString, inputLength); <br> *      // input first or only block of data to be digested. <br> * <br> *   MD4Update (&amp;context, inputString, inputLength); <br> *      // input subsequent blocks or last block of data to be digested. <br> * <br> *   MD4Final (digest, &amp;context); <br> *      // compute and return final 16-byte digest <br> * <br> * --------------------------------------------------------------------- */ <br> <br>typedef unsigned long UINT4; <br> <br>/* POINTER defines a generic pointer type */ <br>typedef unsigned char *POINTER; <br> <br>/* MD4 context. */ <br>typedef struct { <br>  UINT4 state[4];                                   /* state (ABCD) */ <br>  UINT4 count[2];        /* number of bits, modulo 2^64 (lsb first) */ <br>  unsigned char buffer[64];                         /* input buffer */ <br>} MD4_CTX; <br> <br>/* --------------------------------------------------------------------- <br> * This function initializes the context for the message digest. <br> * It must be called as the first step and before processing input data. <br> * --------------------------------------------------------------------- */ <br> <br>void MD4Init ( MD4_CTX *context ) ;              /* context */ <br> <br>/* --------------------------------------------------------------------- <br> * This function accepts input data of length "inputLen" and digests it. <br> * All data to be digested is input via this function and no other. <br> * The running byte count and any fragment of undigested data is stored <br> * in the context for retention between calls. <br> * --------------------------------------------------------------------- */ <br> <br>void MD4Update ( MD4_CTX *context,              /* context */ <br>                 POINTER input,                 /* input block */ <br>                 unsigned int inputLen ) ;      /* length of input block */ <br> <br>/* --------------------------------------------------------------------- <br> * This function accepts not data, but finishes up the digest and <br> * returns the 16 byte resulting message digest.  Finishing up includes <br> * taking any undigested fragment stored in the context, padding the <br> * message, appending the length and then digesting the resulting string. <br> * --------------------------------------------------------------------- */ <br> <br>void MD4Final ( unsigned char *digest,          /* 16-byte message digest */ <br>                MD4_CTX   *context ) ;          /* context */ <br> <br>/* --------------------------------------------------------------------- <br> <br>   The MD4 test suite results, contained in appendix A.5 of RFC-1320, <br>   are as listed below.  They are printed by the "mddriver.c" test <br>   driver contained in appendix A.4 of RFC-1320. <br> <br>   MD4 test suite: <br>   MD4 ("") = 31d6cfe0d16ae931b73c59d7e0c089c0 <br>   MD4 ("a") = bde52cb31de33e46245e05fbdbd6fb24 <br>   MD4 ("abc") = a448017aaf21d8525fc10ae87aa6729d <br>   MD4 ("message digest") = d9130a8164549fe818874806e1c7014b <br>   MD4 ("abcdefghijklmnopqrstuvwxyz") = d79e1c308aa5bbcdeea8ed63df412da9 <br>   MD4 ("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789") <br>         = 043f8582f241db351ce627e153e7f0e4 <br>   MD4 ("123456789012345678901234567890123456789012345678901234567890123 <br>         45678901234567890") = e33b4ddc9c38f2199c3e7b164fcc0536 <br> <br> * --------------------------------------------------------------------- */ <br> <br>#endif <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
