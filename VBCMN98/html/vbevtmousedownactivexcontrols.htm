<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<title>MouseDown, MouseUp Events (ActiveX Controls)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbevtmousedownactivexcontrols"></a>MouseDown, MouseUp Events (ActiveX Controls)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbevtMouseDownActiveXControls_C;vbevtMouseDownActiveXControlsC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbevtMouseDownActiveXControls_X;vbevtMouseDownActiveXControlsX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbevtMouseDownActiveXControls_A;vbevtMouseDownActiveXControlsA">
</object></p>
<p>
Occur when the user presses (MouseDown) or releases (MouseUp) a mouse button.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>Private Sub Form_MouseDown(</b><i>button</i><b> As Integer</b>,<b> </b><i>shift</i><b> As Integer</b>,<b> </b><i>x</i><b> As Single</b>,<b> </b><i>y</i><b> As Single)</b></p>
<p>
<b>Private Sub MDIForm_MouseDown(</b><i>button</i><b> As Integer</b>,<b> </b><i>shift</i><b> As Integer</b>,<b> </b><i>x</i><b> As Single</b>,<b> </b><i>y</i><b> As Single)</b></p>
<p>
<b>Private Sub</b> <i>object</i><b>_MouseDown(</b>[<i>index</i> <b>As Integer</b>,]<i>button</i> <b>As Integer</b>, <i>shift</i> <b>As Integer</b>, <i>x</i> <b>As Single</b>, <i>y</i> <b>As Single)</b></p>
<p>
<b>Private Sub</b> <b>Form_MouseUp(</b><i>button</i> <b>As Integer</b>, <i>shift</i> <b>As Integer</b>, <i>x</i> <b>As Single</b>, <i>y</i> <b>As Single)</b></p>
<p>
<b>Private Sub MDIForm_MouseUp(</b><i>button</i><b> As Integer</b>,<b> </b><i>shift</i><b> As Integer</b>,<b> </b><i>x</i><b> As Single</b>,<b> </b><i>y</i><b> As Single)</b></p>
<p>
<b>Private Sub</b> <i>object</i><b> _MouseUp(</b>[<i>index</i> <b>As Integer</b>,]<i>button</i> <b>As Integer</b>, <i>shift</i> <b>As Integer</b>, <i>x</i> <b>As Single</b>, <i>y</i> <b>As Single)</b></p>
<p>
The MouseDown and MouseUp event syntaxes have these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=19%><b>Part</b></td>
<td class=label width=81%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=19%><i>object</i></td>
<td width=81%>Returns an <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectexpression">
</object><a href=JavaScript:alink_4.Click()>object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=19%><i>index</i></td>
<td width=81%>Returns an integer that uniquely identifies a control if it's in a <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defcontrolarray">
</object><a href=JavaScript:alink_5.Click()>control array</a>.</td>
</tr>
<tr valign=top>
<td width=19%><i>button</i></td>
<td width=81%>Returns an integer that identifies the button that was pressed (MouseDown) or released (MouseUp) to cause the event. The <i>button</i> argument is a bit field with bits corresponding to the left button (bit 0), right button (bit 1), and middle button (bit 2). These bits correspond to the values 1, 2, and 4, respectively. Only one of the bits is set, indicating the button that caused the event.</td>
</tr>
<tr valign=top>
<td width=19%><i>shift</i></td>
<td width=81%>Returns an integer that corresponds to the state of the SHIFT, CTRL, and ALT keys when the button specified in the <i>button</i> argument is pressed or released. A bit is set if the key is down. The <i>shift</i> argument is a bit field with the least-significant bits corresponding to the SHIFT key (bit 0), the CTRL key (bit 1), and the ALT key (bit 2 ). These bits correspond to the values 1, 2, and 4, respectively. The <i>shift</i> argument indicates the state of these keys. Some, all, or none of the bits can be set, indicating that some, all, or none of the keys are pressed. For example, if both CTRL and ALT were pressed, the value of <i>shift</i> would be 6.</td>
</tr>
<tr valign=top>
<td width=19%><i>x</i>, <i>y</i></td>
<td width=81%>Returns a number that specifies the current location of the mouse pointer. The <i>x</i> and <i>y</i> values are always expressed in terms of the coordinate system set by the <b>ScaleHeight</b>, <b>ScaleWidth</b>, <b>ScaleLeft</b>, and <b>ScaleTop</b> properties of the object.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
Use a MouseDown or MouseUp event procedure to specify actions that will occur when a given mouse button is pressed or released. Unlike the Click and DblClick events, MouseDown and MouseUp events enable you to distinguish between the left, right, and middle mouse buttons. You can also write code for mouse-keyboard combinations that use the SHIFT, CTRL, and ALT keyboard modifiers.</p>
<p>
The following applies to both Click and DblClick events:
<ul type=disc>
<li>
If a mouse button is pressed while the pointer is over a form or control, that object "captures" the mouse and receives all mouse events up to and including the last MouseUp event. This implies that the <i>x</i>, <i>y</i> mouse-pointer coordinates returned by a mouse event may not always be in the internal area of the object that receives them.<br><br></li>
<li>
If mouse buttons are pressed in succession, the object that captures the mouse after the first press receives all mouse events until all buttons are released.</li>
</ul>
<p>
If you need to test for the <i>button</i> or <i>shift</i> arguments, you can use constants listed in the Visual Basic (VB) <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectlibrary">
</object><a href=JavaScript:alink_6.Click()>object library</a> in the <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectbrowser">
</object><a href=JavaScript:alink_7.Click()>Object Browser</a> to define the bits within the argument:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=35%><b>Constant (Button)</b></td>
<td class=label width=18%><b>Value</b></td>
<td class=label width=47%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=35%><b>vbLeftButton</b></td>
<td width=18%>1</td>
<td width=47%>Left button is pressed</td>
</tr>
<tr valign=top>
<td width=35%><b>vbRightButton</b></td>
<td width=18%>2</td>
<td width=47%>Right button is pressed</td>
</tr>
<tr valign=top>
<td width=35%><b>vbMiddleButton</b></td>
<td width=18%>4</td>
<td width=47%>Middle button is pressed</td>
</tr>
</table><br>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=35%><b>Constant (Shift)</b></td>
<td class=label width=18%><b>Value</b></td>
<td class=label width=47%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=35%><b>vbShiftMask</b></td>
<td width=18%>1</td>
<td width=47%>SHIFT key is pressed.</td>
</tr>
<tr valign=top>
<td width=35%><b>vbCtrlMask</b></td>
<td width=18%>2</td>
<td width=47%>CTRL key is pressed.</td>
</tr>
<tr valign=top>
<td width=35%><b>vbAltMask</b></td>
<td width=18%>4</td>
<td width=47%>ALT key is pressed.</td>
</tr>
</table><br>
<p>
The constants then act as bit masks you can use to test for any combination of buttons without having to figure out the unique bit field value for each combination.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can use a MouseMove event procedure to respond to an event caused by moving the mouse. The <i>button</i> argument for MouseDown and MouseUp differs from the <i>button</i> argument used for MouseMove. For MouseDown and MouseUp, the <i>button</i> argument indicates exactly one button per event, whereas for MouseMove, it indicates the current state of all buttons.</p>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
