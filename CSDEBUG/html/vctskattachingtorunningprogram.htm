<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Attaching to a Running Program or Multiple Programs</TITLE>
<LINK REL="Stylesheet" HREF="../scripts/Office10.css"></HEAD>
<BODY>



<H1><A NAME="vctskattachingtorunningprogram"></A>Attaching to a Running Program or Multiple Programs</H1>

<P class=T>The debugger has the ability to attach to a program that is running in a process outside of the environment. You can use this attach capability to:

<UL>
	<LI class=LB1>Debug a program that was not created in Microsoft Office.</LI>

	<LI class=LB1>Debug multiple programs simultaneously.</LI>

	<LI class=LB1>Start the debugger automatically when a program crashes while running outside of the environment (just-in-time debugging).</LI>
</UL>

<P class=T>Once you have attached to a program, you can use debugger execution commands, inspect the program state, and so on. Your ability to inspect the program may be limited, of course, depending on whether the program was built with debug information and whether you have access to the program's source code. </P>

<P><B>To attach to a running program</B>

<OL>
	<LI class=LPROC>From the <B>Debug</B> menu, choose <B>Programs</B>.</LI>

	<LI class=LPROC>In the <B>Programs</B> dialog box, find the program you want to attach to from the <B>Available Processes</B> list.. </LI>

	<LI class=LPROC>Click the <B>Attach</B> button.</LI>

	<LI class=LPROC>In the <B>Attach to Process</B> dialog box, make sure <B>Script</B> is selected in <B>Choose the program types that you want to debug</B> .</LI>

	<LI class=LPROC>Click <B>OK</B>.</LI>

	<LI class=LPROC>At the bottom of the <B>Programs </B>dialog box is a drop-down list box labeled <B>When debugging is stopped</B>. Choose the behavior you want to occur when you stop debugging the selected program. In most cases, it is okay to terminate the program when debugging stops, but you may want to keep it running (for example, so that you can attach to it again in the future.) If you attach to a system process, be especially careful. Terminating a system process can have sudden and undesirable effects, including crashing the system. If you do not want the program to terminate when the debugging session ends, choose <B>Detach from this process</B> rather than <B>Terminate this process</B>.</LI>

	<LI class=LPROC>Click <B>OK</B>.</LI>
</OL>

<P class=T>The <B>Available processes</B> list is displayed automatically when you open the <B>Programs</B>dialog box. Processes can start and stop in the background while the dialog box is open, however, so the contents may not always be current. You can refresh the list at any time to see the current list of processes. </P>

<P><B>To refresh the Programs list</B>

<UL>
	<LI class=LB1>Click the <B>Refresh</B> button. </LI>
</UL>

<P class=T>You can be attached to multiple programs when you are debugging, but only one program is active in the debugger at any given time. You can set the active program in the <B>Debug Location</B> toolbar.</P>

<P class=T>All <B>Debug</B> menu execution commands affect the active program. If you choose <B>Break</B> from the <B>Debug</B> menu, the debugger breaks the active program. You can break any debugged program, active or inactive, from the <B>Programs</B>dialog box.</P>

<P><B>To break a program being debugged</B>

<OL>
	<LI class=LPROC>In the <B>Programs</B> dialog box, locate the process you want to break to in the <B>Debugged Programs</B> list. </LI>

	<LI class=LPROC>Click the <B>Break</B> button.</LI>
</OL>

<P class=T>When you are finished debugging an attached program, you can detach from the program.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
