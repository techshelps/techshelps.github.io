<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Crash Dumps</TITLE>
<LINK REL="Stylesheet" HREF="../scripts/Office10.css"></HEAD>
<BODY>



<H1><A NAME="vxtskcrashdumps"></A>Crash Dumps</H1>

<P class=T>When debugging a native Win32 program, you can save a crash dump file for debugging at a later time, possibly on another machine. If you have just-in-time debugging enabled, you can save a crash dump even if the crash occurs while running outside of Visual Studio. A dialog box gives you the options of saving the crash dump or debugging immediately. Crash dumps can be especially useful if you are testing a program on a machine that does not have source files, PDBs, or Visual Studio installed.</P>

<P class=T>The machine you debug the crash dump on must have access to the binaries for the program and the PDB files. Visual Studio can cope with missing binaries for some modules, however, as long as it has enough modules to generate valid call stacks. The message "No matching binary found" appears in the Modules window. (See <A HREF="vxconcrashdumpmoduleloading.htm">Crash Dump Module Loading</A> for details.)</P>

<P class=T>Crash dumps can be useful if you are testing the program on a machine that does not have source files or PDBs installed. When the crash occurs, you can save a crash dump file and debug it later on the machine that has the source files and PDBs. </P>

<P><B>To save a crash dump file</B>

<UL>
	<LI class=LB1>From the <B>Debug</B> menu, choose <B>Save As CrashDump</B>. </LI>
</UL>

<P><B>To open a crash dump file</B>

<OL>
	<LI class=LPROC>From the <B>File</B> menu, choose <B>Open</B> and click <B>File</B>. </LI>

	<LI class=LPROC>In the <B>Open File</B> dialog box, locate and select the crash dump file. (It will have a .dmp extension.)</LI>

	<LI class=LPROC>Click <B>OK</B>.</LI>
</OL>

<P class=T>In addition, Visual Studio can read crash dumps created by the Microsoft Office Doctor Watson utility or userdump.exe, as well as minidumps generated by minidump.dll version 42899 or higher.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
