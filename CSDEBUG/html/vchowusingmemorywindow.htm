<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using the Memory Window</TITLE>
<LINK REL="Stylesheet" HREF="../scripts/Office10.css"></HEAD>
<BODY>



<H1><A NAME="vchowusingmemorywindow"></A>Using the Memory Window</H1>

<P class=NT><B>Note</B>&nbsp;&nbsp;&nbsp;This feature is not available for languages such as script and SQL that do not support the concept of memory.</P>

<P class=T>You can use a Memory window to view large buffers, strings, and other data that do not display well in the Watch or Variables window. In the Visual Studio debugger, you can open up to four Memory windows.</P>

<P><B>To display a Memory window</B>

<UL>
	<LI class=LB1>From the <B>Debug</B> menu, choose <B>Windows</B>, then <B>Memory</B>, and click <B>Memory 1</B>, <B>Memory 2</B>, <B>Memory 3</B>, or <B>Memory 4</B>. You can open these memory windows in any order; it doesn't matter. (The debugger must be running or in <A HREF="_asug_halting_a_program.htm">break mode</A>.)</LI>
</UL>

<P class=T>When viewing memory contents in a Memory window, you can use the vertical scrollbar to move up or down in the memory space. You will notice that the higher addresses appear at the bottom of the window. To view a higher address, you must move down, not up. </P>

<P><B>To page up or down in memory</B>

<UL>
	<LI class=LB1>To page down (move to a higher memory address), click the vertical scrollbar below the thumb.</LI>

	<LI class=LB1>To page up (move to a lower memory address), click the vertical scrollbar above the thumb.</LI>
</UL>

<P class=T>You will also notice that the vertical scrollbar operates in a nonstandard fashion. The address space of a modern PC is huge, and it would be easy to get lost by grabbing the scrollbar thumb and dragging it to a random location. For this reason, the thumb is "springloaded" and always remains in the center of the scrollbar. You can page up or down, but cannot scroll about freely.</P>

<P class=T>If you want to <A HREF="vctskselectingmemorylocation.htm">move instantly to a selected location</A> in memory, you can do so by using drag and drop or editing the value in the <B>Address</B> box. </P>

<P class=T>The <B>Address</B> box accepts expressions as well as numeric values. By default, the Memory window treats an <B>Address</B> expression as a live expression, which is reevaluated as your program executes. Live expressions can be quite handy. For example, you can use them to <A HREF="vctskfollowingpointerthroughmemory.htm">look at the memory that is touched by a pointer</A>. </P>

<P class=T>In native code applications, you can also use register names as live expressions. You can use the stack pointer to follow the stack, for example.</P>

<P class=T>If you do not want the contents of the Memory window to change as your program executes, you can <A HREF="vctsktogglingliveevaluationinmemorywindow.htm">turn off live expression evaluation</A>. </P>

<P class=T>You can <A HREF="vctskcustomizingmemorywindowdisplay.htm">customize the way the Memory window</A> shows memory contents. By default, memory contents appear as long data types in hexadecimal format, and the number of columns is determined automatically by the current width of the window.</P>

<P class=T>You can <A HREF="vctsktotogglememorywindowtoolbar.htm">hide or display the toolbar</A> at the top of the Memory window. (You will not have access to <B>Address</B> box or other tools while the toolbar is hidden.)</P>

</BODY>
</HTML>
