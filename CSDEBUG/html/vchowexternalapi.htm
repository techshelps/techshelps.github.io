<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Customizing CRT Error Checking</TITLE>
<LINK REL="Stylesheet" HREF="../scripts/Office10.css"></HEAD>
<BODY>

<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="_office_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vcrefRTCRuntimeChecks">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="_office_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vcrefRuntime_checks">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="_office_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_core_.2f.MD.2c_2f.ML.2c_2f.MT.2c_2f.LD">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="_office_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CRT__CrtDbgReport">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="_office_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vcref_RTC_SetErrorType">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="_office_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vcref_RTC_SetErrorFunc">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="_office_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CRT__CrtDbgReport">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="_office_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_CRT__CrtDbgReport">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="_office_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vcref_RTC_NumErrors">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="_office_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vcref_RTC_GetErrDesc">
</OBJECT>
</DIV>



<H1><A NAME="vchowexternalapi"></A>Customizing CRT Error Checking</H1>

<P class=T>The C run-time library provides run-time error checking when you compile with <A HREF="JavaScript:hhobj_1.Click()">/RTC</A> (run-time checks) or use the <A HREF="JavaScript:hhobj_2.Click()">run-time_checks</A> pragma. In some cases, you may want to customize CRT run-time error checking:

<UL>
	<LI class=LB1>To route run-time error messages to a file or destination other than the default.</LI>

	<LI class=LB1>To specify an output destination for run-time error messages under a third-party debugger.</LI>

	<LI class=LB1>To report run-time error messages from a program compiled with a <A HREF="JavaScript:hhobj_3.Click()">release version</A> of the C run-time library. (Release versions of the library do not use <A HREF="JavaScript:hhobj_4.Click()">_CrtDbgReport</A> to report run-time errors. Instead, they display an <B>Assert </B>dialog box for each run-time error.)</LI>
</UL>

<P class=T>To customize run-time error checking, you can:

<UL>
	<LI class=LB1>Write Your Own Function to Report Run-Time Errors</LI>

	<LI class=LB1>Customize the Error Message Destination</LI>

	<LI class=LB1>Query for Information about Run-Time Check Errors</LI>
</UL>

<H3>Writing a Run-Time Error Reporting Function</H3>

<P class=T>A custom reporting function for run-time errors must have same declaration as <B>_CrtDbgReport</B>. It should return value of 1 to the debugger. </P>

<P class=T>The following example shows how to define a custom reporting function:</P>

<PRE class=CT><CODE>int errorhandler = 0;
void configureMyErrorFunc(int i)
{
   errorhandler = i;
}

int MyErrorFunc(int errorType, const char *filename, int linenumber, const char *moduleName, const char *format, ...) 
{
   switch (errorhandler)
   {
   case 0:
   case 1:
      printf("Error type %d at %s line %d in %s",errorType. filename, linenumber, moduleName);
   case 2:
   case 3:
      fprintf(stderr, "Error type);
   }
}</CODE></PRE>

<P class=T>The following example shows a more complex custom reporting function. In this example, the switch statement handles various error types, as defined by the <I>reportType</I> parameter of <B>_CrtDbgReport</B>. Since you are replacing <B>_CrtDbgReport</B>, you cannot use <B>_CrtSetReportMode</B>. Your function must handle the output. The first variable argument in this function takes a <A HREF="JavaScript:hhobj_5.Click()">run-time error number</A>.</P>

<PRE class=CT><CODE>#include &lt;windows.h&gt;
#include &lt;stdarg.h&gt;
#pragma runtime_checks("", off)
int Catch_RTC_Failure(int errType, const char *file, int line, const char *module, const char *format, ...)
{
   // Prevent re-entrancy
   static long running = 0;
   while (InterlockedExchange(&amp;running, 1))
      Sleep(0);
   // Now, disable all RTC failures
   int numErrors = _RTC_GetNumErrors();
   int *errors=_alloca(numErrors);
   for (int i = 0; i &lt; numErrors; i++)
   errors[i] = _RTC_SetErrorType(i, _RTC_ERRTYPE_IGNORE);

   // First, let's get the rtc error number from the var-arg list...
   va_list vl;
   va_start(vl, format);
   _RTC_ErrorNumber rtc_errnum = va_arg(vl, _RTC_ErrorNumber);
   va_end(vl);

   char buf[512];
   const char *err = _RTC_GetErrDesc(rtc_errnum);
   sprintf(buf, "%s\nLine #%d\nFile:%s\nModule:%s", 
      err, 
      line, 
      file ? file : "Unknown", 
      module ? module : "Unknown");
   int res = (MessageBox(NULL, buf, "RTC Failed...", MB_YESNO) == IDYES) ? 1 : 0;
   // Now, restore the RTC errortypes
   for(i = 0; i &lt; numErrors; i++)
      _RTC_SetErrorType(i, errors[i]);
   running = 0;
   return res;
}
#pragma runtime_checks("", restore)</CODE></PRE>

<P class=T>Use <A HREF="JavaScript:hhobj_6.Click()">_RTC_SetErrorFunc</A> to install your custom function in place of <B>_CrtDbgReport</B>. The <B>_RTC_SetErrorFunc</B> return value is the previous reporting function, which you can save and restore if necessary:</P>

<PRE class=CT><CODE>int main()
{
   _RTC_error_fn oldfunction, newfunc;
   oldfunction = _RTC_SetErrorFunc(&amp;MyErrorFunc);
   // run some code...
   newfunc = _RTC_SetErrorFunc(oldfunction);
   // newfunc == &amp;MyErrorFunc;
   // run some more code...
}</CODE></PRE>

<H3>Customizing the Error Message Destination</H3>

<P class=T>If you use <A HREF="JavaScript:hhobj_7.Click()">_CrtDbgReport</A> to report errors, you can use <B>_CrtSetReportMode</B> to specify the destination of error messages.</P>

<P class=T>If you use a custom reporting function, use <B>_RTC_SetErrorType</B> to associate an error with a <A HREF="JavaScript:hhobj_8.Click()">report type</A>. </P>

<H3>Querying for Information about Run-Time Error Checks</H3>

<P class=T><A HREF="JavaScript:hhobj_9.Click()">_RTC_NumErrors</A> returns the number of error types detect by run-time error checks. To get a brief description of each error, you can loop from 0 to (<B>_RTC_NumErrors</B> &#0150;1) return value, passing the iteration value to <A HREF="JavaScript:hhobj_10.Click()">_RTC_GetErrDesc</A> on each loop.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
