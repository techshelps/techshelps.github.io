<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>How VSS Treats Binary Files</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="ssugehow_vss_treats_binary_files"></a>How VSS Treats Binary Files</h1>
<p>
VSS makes a distinction between text files (files that contain only characters) and binary files (all others). For most operations, you can treat text and binary files exactly the same <img src="emdash.gif" border=0> VSS uses its highly disk-efficient <a href="ssugglossary.htm#gloss_reversedelta">reverse delta</a> storage on all files, text and binary. </p>
<p>
It is important to understand how VSS determines the type of a file and how VSS treats these two.</p>
<p class=label>
<b>How VSS Identifies Files</b></p>
<p>
When you add a file to VSS, it's automatically assigned a type: text or binary. The default mechanism for creating this assignment is a simple test: VSS scans the file for NULL characters (bytes with value 0). If it finds such a character, VSS identifies the file as binary.</p>
<p>
Although generally accurate, this method may on occasion incorrectly assign the text type to a binary file. Therefore, VSS allows you to explicitly set the file type.</p>
<p>
When you add a file, you can set the file type option: Auto-Detect, Binary, or Text. Auto-Detect is the default. After you add a file, it retains the type it was originally given, unless you explicitly change it.</p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>Use the <b>General</b> tab in the <b>Properties</b> dialog box on the <b>File</b> menu to view and change the file type setting. </p>
<p class=label>
<b>How VSS Handles Files</b></p>
<p>
There are significant differences in how VSS treats binary and text files:
<ul type=disc>
<li>
Storing changes — Internally, VSS uses different mechanisms for storing changes for text files (which have distinct lines as units of comparison) and binary files (which have no obvious line delimiter). That's why it is important for VSS to correctly identify the type of a file. VSS identifies files as binary if a NULL character exists in the file.<br><br></li>
<li>
<b>Show Differences</b> command — With a binary file, VSS stores each change as a small record of which bytes moved where; this is useful for reconstructing earlier versions, but not for display. VSS can tell you if the file has changed, but it cannot display how the file has changed.<br><br></li>
<li>
Merging binary files — This operation cannot be performed in VSS.<br><br></li>
<li>
Multiple checkouts on binary files — This operation cannot be performed in VSS.<br><br></li>
<li>
End-of-line characters — With a text file, VSS automatically translates end-of-line characters between different operating systems; with a binary file, VSS does not alter the contents of the file except with <a href="ssugglossary.htm#gloss_keywordexpansion">keyword expansion</a>.</li>
</ul>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
