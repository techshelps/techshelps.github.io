<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<title>Format Keywords</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h2><a name="ssugeformat_keywords"></a>Format Keywords</h2>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ssugeCheck_Out_Multiple_Files; ssugeExpand_Keywords; ssugeOptimize_Performance; ssugePerform_an_Exclusive_Checkout">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
By default, VSS replaces the space between a <a href="ssugglossary.htm#gloss_keyword">keyword</a> and the subsequent dollar sign with the value you've specified. This can, however, make it difficult to create an attractive columnar display.</p>
<p>
To fix this, you can place two colons instead of one after the keyword and then add the amount of space that you want displayed. This tells VSS that the dollar sign after the keyword is exactly where you want it: VSS either adds space or truncates the value to ensure that the columns stay intact.</p>
<p class=label>
<b>Binary Files</b></p>
<p>
In addition to creating attractive columns, this feature is very useful when you want to embed keyword information in binary files (such as executable files), where the exact length of the data is important.</p>
<p>
For example:</p>
<pre><code>$Revision::&nbsp;&nbsp;&nbsp;&nbsp; $
</code></pre>
<p>
VSS expands the keyword with the version number of the file, and keeps the extra space you added inside the dollar sign character so that the revision number column maintains its width.</p>
<p class=label>
<b>Formatting the History and Log Keywords</b></p>
<p>
The <b>History</b> and <b>Log</b> keywords instruct VSS to put history information after the keyword. VSS places the file name between the colon and the dollar sign; in the lines following the keyword, it places the latest entry in the file's history.</p>
<p>
To make sure the history is read as comments (to keep code compilable), your VSS administrator can define comment characters that VSS places before and after the History and Log lines.</p>
<p>
Each file extension is associated with a string that is placed before every line, followed, optionally, by a string to be placed after every line. Both strings are in quotes, separated by commas. </p>
<p class=indent>
<B><b>Important&nbsp;&nbsp;&nbsp;</b></B>If no keyword comments are specified, the following comments are assumed:</p>
<p class=indent>
*.asm = "; "</p>
<p class=indent>
*.bas = "rem "</p>
<p class=indent>
*.bat = "rem "</p>
<p class=indent>
*.s = "; "</p>
<p class=indent>
&lt;All others&gt; = "* "</p>
<p>
Suppose your administrator does not have a setting for *.c in your SRCSAFE.INI file. VSS uses its default, which is an asterisk. You could then put the following into the header of your SS.INI file:</p>
<pre><code>/*
 * $History: $
 */
</code></pre>
<p>
Expanding this, VSS would place an asterisk before each line, and nothing after. The resulting file, after you add it to VSS, might look like the following:</p>
<pre><code>/*
 * $History: IDRANGE.TXT $
 * 
 * ***** Version 1 *****
 * User:mariaj Date:8/01/92 Time:11:02a
 * Created
 * Comment: Defined ranges for IDs.
 */
</code></pre>
</BODY>
</HTML>
