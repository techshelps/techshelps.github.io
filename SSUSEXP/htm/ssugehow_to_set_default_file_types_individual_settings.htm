<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>How to Set Default File Types -- Individual Settings</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="ssugehow_to_set_default_file_types_individual_settings"></a>How to Set Default File Types — Individual Settings</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ssugaSet_Default_File_Types_Administrative_Settings">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p class=label>
<b>To set default file types for an individual VSS user:</b>
<ol>
<li>
On the VSS Explorer <b>Tools</b> menu, click <b>Options</b> to display the <b>SourceSafe Options</b> dialog box.<br><br></li>
<li>
Click the <b>File Types</b> tab.<br><br></li>
<li>
Enter or select applicable information on this tab, including: <ul type=disc>
<li>
Binary Files<p class=tl>
Type file masks for files you want VSS to treat as binary. By default, when VSS must know what type a file is, it uses its auto-detect mechanism. By entering values in this edit box, however, you tell VSS that all files of the type you enter are to be considered binary. For example, if you enter "*.obj, *.exe, *.doc" VSS always treats all files with those extensions as binary.</P></li>
<li>
Create SCC File<p class=tl>
Type file masks for files you want VSS to place in your SCC file. </P><p class=tl>
This box is useful only for Visual Basic users. When you work with a Visual Basic project in VSS, a special file is created in your working folder called Mssccprj.scc. This file can never be added to VSS: it stays in your working folder and stores important information used by the VSS integration in Visual Basic.</P><p class=tl>
Create SCC File dictates when VSS creates this file. Its default setting (*.vbp, *.mak) means that whenever you get or add a file with an extension of .vbp (Visual Basic project file) or .mak (used by older versions of Visual Basic), VSS creates the Mssccprj.scc file. This file is very important because without it, VSS integration inside Visual Basic will not function properly.</P><p class=tl>
On the other hand, Visual C++ and other development environments do not use this file at all. You may not want this useless file appearing in your Visual C++ folder. To prevent the appearance of the Mssccprj.scc file in your Visual C++ folder, remove the *.mak from this field. (You should make this change only if you do not use Visual Basic .mak files.)</P></li>
<li>
File Groups<p class=tl>
Select a group of files to which you assign file masks. <b>Add</b> and <b>Delete</b> allow you to add or delete file groups, with one exception: you cannot delete the &lt;Relevant Masks&gt; group. This mask is provided for your convenience. It enables you to create a relevant group of the files you use most often; this &lt;Relevant Masks&gt; group then becomes the group of default file types in the <b>Add File</b>, <b>Share</b>, and other dialog boxes used to manipulate files within projects.</P></li>
<li>
File types included in file group<p class=tl>
Type file masks in this box for the group you selected from the File Groups box. For example, when you click Visual Basic files in the File Groups box, type the file types to make up this group: *.bas, *.frx, *.vbp, *.vbx.</P></li>
</ul>
</li>
<li>
Click <b>OK</b>.</li>
</ol>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
