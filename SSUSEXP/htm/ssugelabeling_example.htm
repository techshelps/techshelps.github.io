<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<title>Labeling Example</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="ssugelabeling_example"></a>Labeling Example</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ssugeLabel_Files_and_Projects">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
This example illustrates how project-level labels are different from file-level labels. Keep in mind that labels are also separate and distinct from version numbers.</p>
<p class=label>
<b>Example</b></p>
<p>
Let’s say you label the project $/NorWind "Version 2.2". You then revise the </p>
<p>
Hyper.c file within the $/NorWind project, and label it "Version 2.2." Because that version of the file did not exist when you labeled the project, however, if you get the project at label Version 2.2, you will not get the latest version of the file Hyper.c. In other words, if you select "Version 2.2" of the $/NorWind project in the <b>File History</b> dialog box and click the <b>Get</b> button, you will not get the latest version of Hyper.c. You will get the version of that file that was in the project $/Norwind when the project was labeled Version 2.2.</p>
</BODY>
</HTML>
