<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Analyze</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="ss_analyze"></a>Analyze</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="SS_Utilities">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
Analyze.exe scans a <a href="ssugglossary.htm#gloss_vssdatabase">VSS database</a> for integrity and/or errors, displays them and, if set to do so, fixes them.&nbsp; <a href="ssugglossary.htm#gloss_vssadministrator">VSS administrators</a> should run Analyze.exe every week to verify that there are no problems in the VSS database.&nbsp; </p>
<p>
Administrators can use the 32-bit command-line utility to repair version 4.0 VSS databases (and later).&nbsp; For example, a database problem exists when you select a file that you know exists in the VSS database, use a command, such as <b>GET</b>, and receive the error message, “File does not exist.” </p>
<p>
Administrators can run Analyze.exe manually from the command line, or as part of a script for unattended operation, to analyze or fix the problem.&nbsp; Analyze.exe is in the WIN32 folder under the folder in which you installed VSS.</p>
<p>
We recommend that you run Analyze.exe twice <img src="emdash.gif" border=0> first with the <b>-F</b> option (to fix any errors found), and the second time to check if any errors remain.&nbsp; If you still have errors after the first run, you can check the Microsoft Knowledge Base at http://www.microsoft.com/kb) article Q152807 for more information.</p>
<h4>Syntax</h4>
<p>
<b>ANALYZE</b> <i>[-B&lt;folder&gt;] [-C] [-D] [-F] [-I-] [-V] [-X] [-?] [-H] &lt;Full Database Path | @Response File | List of Files&gt;</i></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Option</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>-B</b><i>&lt;folder&gt;</i></td>
<td width=50%>Specify a backup folder.</td>
</tr>
<tr valign=top>
<td width=50%><b>-C</b></td>
<td width=50%>Clean up and compress the database.&nbsp; This option can be slow.</td>
</tr>
<tr valign=top>
<td width=50%><b>-D</b></td>
<td width=50%>Delete any unused files.</td>
</tr>
<tr valign=top>
<td width=50%><b>-F</b></td>
<td width=50%>Attempt to repair any inconsistencies and corruption that are detected.</td>
</tr>
<tr valign=top>
<td width=50%><b>-I-</b></td>
<td width=50%>Continue without stopping for user input (allowing unattended operation).&nbsp; By default, Analyze.exe leaves the results window on display.&nbsp; </td>
</tr>
<tr valign=top>
<td width=50%><b>-V</b><i>n</i></td>
<td width=50%>Specify the verbosity of output.&nbsp; <b>-V1</b> displays only critical errors, <b>-V2</b> displays critical and significant errors, <b>-V3</b> displays all errors, and <b>-V4</b> shows all errors and warnings.&nbsp; The <b>-V4</b> option shows its output in the lower pane of the Analyze Results window and contains detailed information on what the utility attempted and accomplished.&nbsp; The default is <b>-V1</b>.&nbsp; <b>-V</b> (without a number) is equivalent to <br>
<b>-V4</b>.</td>
</tr>
<tr valign=top>
<td width=50%><b>-X</b></td>
<td width=50%>Directs Analyze.exe to not lock files as it processes.&nbsp; Allows Analyze.exe to run against a live database.&nbsp; This option cannot be used with the <b>-c</b>, <b>-d</b>, or <b>-f</b> options and use of this option is not recommended unless absolutely necessary.&nbsp; </td>
</tr>
<tr valign=top>
<td width=50%><i>Full Database Path</i></td>
<td width=50%>Path of the VSS data folder to analyze.&nbsp; This parameter must be the first non-switch parameter.&nbsp; A data path, list of files, or response file must be present on the command line.</td>
</tr>
<tr valign=top>
<td width=50%><i>@Response File</i></td>
<td width=50%>File produced by running Analyze.exe, containing listing of problem files, named Analyze.bad by default.&nbsp; Using this file as input directs Analyze.exe to work on fewer files, thereby improving performance.</td>
</tr>
<tr valign=top>
<td width=50%><i>List of Files</i></td>
<td width=50%>List of files to analyze.&nbsp; List can include only log files, or complete data paths, such as C:\VSS\Data\A\AAAAAAAA.</td>
</tr>
<tr valign=top>
<td width=50%><b>-?</b>, <b>-H</b></td>
<td width=50%>Displays usage message containing descriptions of valid options.</td>
</tr>
</table><br>
<p>
Order of options is not important, but the full database path, response file, or list of files must be included on the command line as the first non-option item.</p>
<p class=label>
<b>Examples</b></p>
<pre><code>ANALYZE <b>-C</b> <b>-D</b> <b>-F</b> <b>-V4</b> C:\VSS\Data </code></pre>
<p>
Analyzes and repairs the complete database and generates verbose output.&nbsp; </p>
<pre><code>ANALYZE <b>-BC</b>:\Temp C:\VSS\Data </code></pre>
<p>
Analyzes the database, but does not fix it.&nbsp; Creates a list of corrupted files in C:\Temp.</p>
<pre><code>ANALYZE <b>-F -C -D</b> @C:\Temp\Analyze.bad</code></pre>
<p>
Fixes any problems in the files listed in the Analyze.bad file generated by the preceding example.&nbsp; </p>
<p class=label>
<b>Remarks</b></p>
<p>
The types of problems that Analyze.exe can correct include:
<ul type=disc>
<li>
Parent/child mismatch.&nbsp; Possible situations include those in which a project thinks it has a file or subproject but the child disagrees, a child thinks it has a parent but the parent disagrees, or child and parent don't reference each other but the child counts are off.&nbsp; <br><br></li>
<li>
Corrupt database files.&nbsp; These files include the following: Names.dat (stores long filenames longer than 34 characters), Rights.dat (stores relationships between users and project rights), Status.dat (stores check out status for files), Um.dat (stores all users in a VSS database), and Version.dat (stores the VSS version).<br><br></li>
<li>
Removing unused items from the database.</li>
</ul>
<p>
Administrators should run Analyze.exe regularly to verify that no problems exist in their VSS databases.&nbsp; All results of Analyze/Repair are logged to the file, Analyze.log, which is placed in the \VSS\Data\Backup folder and is replaced each time Analyze.exe is run.&nbsp; When you analyze the database, Analyze.exe creates a file listing all corrupted files.&nbsp; This file is called Analyze.bad and is also placed in the \VSS\Data\Backup folder.&nbsp; In addition, the original versions of files that have been repaired are placed in the \VSS\Data\Backup folder.</p>
<p>
Under normal conditions, all users should be logged out of VSS before Administrators run Analyze.exe.&nbsp; Users must be logged out to run Analyze.exe with the <b>- F</b> option to repair problems.&nbsp; Analyze.exe does not run if any users are logged into VSS unless the <b>-X</b> option is supplied.&nbsp; </p>
<p>
Analyze.exe writes output to the Analyze Results window.&nbsp; This window may contain two panes.&nbsp; You must close any open results windows before running Analyze.exe another time.</p>
<p>
The top (or only) pane contains summary information.&nbsp; For example:</p>
<p class=indent>
Analyze Version 4.00[Build 1110]<br>
Database analysis in progress.<br>
The Parent Project for item acctapp is corrupt and the link to the child file has been lost until the project is recovered.<br>
Analysis complete.<br>
</p>
<p>
This is the information provided in the output window when you run Analyze.exe using the <b>-V</b> or -<b>V4</b> option for verbose output.&nbsp; When you use the <b>-V</b> option, the information provided is written to the bottom pane of the Analyze Results window.&nbsp; The following example shows verbose output:</p>
<p class=indent>
Started analyzing user management system.<br>
Successfully completed analyzing the user management system.<br>
Rebuilding corrupted project for item aaaaaaaa.<br>
Building the project list.<br>
Checking cross file relationships.<br>
Checking parent/child relationships.<br>
Validating the Security System.<br>
Writing a new copy of ‘c:\vss\data\a\aaaaaaaa’.<br>
The count of children of item ‘aaaaaaaa’, as given in its header, does not match the number of children found on disk.&nbsp; The count will be adjusted.<br>
The count of sub-projects of item ‘aaaaaaaa’, as given in its header, does not match the number of sub-projects found on disk.&nbsp; The count will be adjusted.</p>
<p class=indent>
</p>
<p>
Note that the actual output in the Analyze Results window does not wrap; it scrolls within the pane.</p>
<p>
When the Rights.dat database file is rebuilt by Analyze.exe, it turns on project security, even if security was disabled before the rebuild.&nbsp; As a result, only the Administrator can log on to VSS after the rebuild of Rights.dat.&nbsp; Therefore, the Administrator must then run the SSAdmin program to turn off Project Security or re-assign all user rights.&nbsp; </p>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
