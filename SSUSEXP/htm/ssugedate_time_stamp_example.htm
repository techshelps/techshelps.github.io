<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Date/Time Stamp Example</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="ssugedate_time_stamp_example"></a>Date/Time Stamp Example</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ssugeHow_VSS_Uses_the_Date_Time_Stamp">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
In this example, a C programmer has the file Help.c in VSS and in his working folder. His compiler turns this source code file into the object module Help.obj. At any given time during the development cycle, both files, Help.c and Help.obj, can exist in the same folder. Each time the developer types MAKE from the operating system, his Make utility compares the date/time stamp of Help.c with Help.obj to determine if it should compile, using the following rules.
<ul type=disc>
<li>
If Help.c is more recent than Help.obj, the code has changed, and a recompile is necessary.<br><br></li>
<li>
If Help.obj is more recent than Help.c, the code has already been compiled, and no recompile is necessary.</li>
</ul>
<p>
This behavior is simple, logical, and consistent, ensuring that every Make builds the entire program from the most recent version of the code as quickly as possible.</p>
<p>
Now consider the ramifications for VSS. You compile Help.c into Help.obj, giving the latter a new date/time. If you execute Make again without changing anything, Help.c is not recompiled. Satisfied with your changes, you check Help.c into VSS; and the next morning, you get Help.c again.</p>
<p>
If Help.c has not changed, VSS recognizes that its own copy and yours are identical. It does not perform a <b>Get</b>, the file date/time does not change, and the file is not recompiled, which is as it should be.</p>
<p>
If another developer has changed Help.c, VSS recognizes that the file is different. It <b>Get</b>s Help.c, and sets the file's date/time to the <i>current</i> time (instead of the time the file was checked in). When you execute the Make command, the file is recompiled, again as it should be. Hence, VSS's behavior sends the correct signal to the Make utility regardless of whether anyone has changed the file.</p>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
