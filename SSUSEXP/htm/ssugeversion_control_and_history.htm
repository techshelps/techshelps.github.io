<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Version Control and History</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="ssugeversion_control_and_history"></a>Version Control and History</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ssugeLabel_Files_and_Projects; ssugePin_Files_and_Projects; ssugeRollback_to_Previous_Versions">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
VSS provides version control and history services, to ensure that each version of a file is recoverable. The date/time stamp is used to record when files are checked out or changed. See <a href="ssugehow_vss_uses_the_date_time_stamp.htm">How VSS Uses the Date/Time Stamp</a> for more information.</p>
<p>
VSS uses three methods to track versions of files and projects:
<ul type=disc>
<li>
Version numbers. These are internal numbers maintained by VSS. You, the user, have no control over these numbers. Every version of every file and project in VSS has a version number. The version number is always a whole number and always increases. <br><br></li>
<li>
Labels. These are strings that you can apply to any version of a project or file. A label is a free-form string of up to 31 characters. The following are all valid labels: "1.0", "2.01b", "Field Test 3", and "Approved by QA".<br><br></li>
<li>
Date/Time stamp. These tell when a file was last modified, or when a file was checked in. VSS supports both 12-hour format (with "a" or "p" suffix) and 24-hour format.</li>
</ul>
<p>
The following table compares and contrasts version numbers and labels.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Version number </b></td>
<td class=label width=50%><b>Label</b></td>
</tr>
<tr valign=top>
<td width=50%>Assigned automatically by VSS</td>
<td width=50%>Assigned by user, using the <b>Label</b> command from the <b>File</b> menu or the <b>History</b> dialog box</td>
</tr>
<tr valign=top>
<td width=50%>Always a numeric value</td>
<td width=50%>Any combination of letters, numbers, symbols, and spaces up to 31 characters</td>
</tr>
<tr valign=top>
<td width=50%>Always increases to next whole number</td>
<td width=50%>Anything user assigns</td>
</tr>
<tr valign=top>
<td width=50%>Increases each time an action that affects storage is taken on a file or project such as adding, checking in, or branching</td>
<td width=50%>Assigned when user feels that a significant milestone has been reached</td>
</tr>
<tr valign=top>
<td width=50%>Displayed in history, paths, links, share, and file properties dialog boxes and in file pane of VSS Explorer</td>
<td width=50%>Displayed in history dialog boxes as a user-supplied string. Indicated by a label icon next to the project name in place of a version number. The user-supplied label string is displayed in the Action column of the <b>History</b> dialog box.</td>
</tr>
<tr valign=top>
<td width=50%>Does not create a new version, simply identifies a new version</td>
<td width=50%>Creating a label can create a new version of the file or project and the label is associated with the new version </td>
</tr>
<tr valign=top>
<td width=50%>Cannot be edited or changed by user</td>
<td width=50%>Can be edited in the <b>History Details</b> dialog box</td>
</tr>
</table><br>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>Some software development groups label VSS with every build. You can get equivalent functionality and less database clutter by doing a history, get at a specific date-time stamp.</p>
<p>
For information on how VSS uses the date/time stamp, refer to:
<ul type=disc>
<li>
<a href="ssugehow_vss_uses_the_date_time_stamp.htm">How VSS Uses the Date/Time Stamp</a></li>
</ul>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
