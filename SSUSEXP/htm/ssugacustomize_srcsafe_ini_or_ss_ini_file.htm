<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Customize SRCSAFE.INI or SS.INI File</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="ssugacustomize_srcsafe_ini_or_ss_ini_file"></a>Customize SRCSAFE.INI or SS.INI File</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ssugrNaming_Syntax_Conventions_and_Limitations; ssugaSamples_of_SS_INI_and_SRCSAFE_INI">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
VSS provides two initialization files that contain settings you can use to customize your VSS environment:
<ul type=disc>
<li>
SS.INI, for individual user variables. See <a href="ssugass.ini_example.htm">SS.INI Example</a>.<br><br></li>
<li>
SRCSAFE.INI, for the <a href="ssugglossary.htm#gloss_vssdatabase">VSS database</a> global variables. See <a href="ssugasrcsafe_ini_example.htm">SRCSAFE.INI Example</a>.</li>
</ul>
<p>
Each user has an SS.INI file that can be edited. Only the <a href="ssugglossary.htm#gloss_vssadministrator">VSS administrator</a> should edit the global SRCSAFE.INI file.</p>
<p class=indent>
<B><b>Important&nbsp;&nbsp;&nbsp;</b></B>Manually editing the initialization files is not recommended, unless you are very familiar with VSS initialization variables and their behavior. Instead, users can set most initialization variables directly in the VSS Explorer <b>SourceSafe Options</b> dialog box on the <b>Tools</b> menu. VSS administrators can set SRCSAFE.INI variables in the VSS Administrator <b>SourceSafe Options</b> dialog box on the <b>Tools</b> menu. For a list of all initialization file variables, see <i>Initialization Variables</i> in the Reference section of VSS Help.</p>
<p>
When you use the <b>SourceSafe Options</b> dialog box, VSS saves your changes in memory, but does not write the changes to the SS.INI or SRCSAFE.INI file until you quit VSS. Therefore, if you start a second VSS session before quitting the first, your changes are not yet in effect. The changes will only take effect after you quit VSS and start a new session.</p>
<p>
You can read and modify initialization files with any text editor. Initialization file line length is limited to 511 characters, although this maximum may be further restricted by a limit of 31 characters for variable names (such as project path limitations). </p>
<p>
Usually, SS.INI files are located in the Users subfolder of the folder in which VSS is installed. Each user added by the administrator has an SS.INI file in the Users subfolder. For example, if a user called JohnSmith is added by the administrator, he has his own SS.INI file located in the Users\JohnSmith subfolder of the VSS folder. The exact location of each user's SS.INI file is recorded in the Users.txt file, located in the VSS folder. You can move your SS.INI file provided you tell VSS of the change by editing the Users.txt file.</p>
<p>
The SrcSafe.INI file is usually placed in the main VSS folder on a server.</p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>Initialization variables set in SS.INI files override settings in the SRCSAFE.INI file.</p>
<p class=label>
<b>File Format</b></p>
<p>
There are three kinds of lines in SS.INI and SRCSAFE.INI:
<ul type=disc>
<li>
Initialization variables, which are the functional lines, have the format:<pre><code>Initialization variable = value
</code></pre>
<p class=tl>
Values can be set as Yes, No, True, or False.</P></li>
<li>
Comments begin with a semicolon:<pre><code>; This is a comment line.
</code></pre>
<p class=tl>
VSS ignores all comments.</P></li>
<li>
Headers are provided in brackets:<pre><code>[$/Word]
</code></pre>
<p class=tl>
Most headers specify particular project paths. Other headers, such as [Keyword Comments], are used for specific purposes. </P></li>
</ul>
<p>
The order of variables inside an initialization file does not matter; however, the header under which a variable is placed does matter. If a variable is placed under the wrong header <img src="emdash.gif" border=0> for instance, if a general-purpose variable is placed under [Keyword Comments] <img src="emdash.gif" border=0> it is ignored.</p>
<p class=label>
<b>SS.INI on Multiple Platforms</b></p>
<p>
If you are running a multi-platform VSS installation, you may want certain variables to have different values on the different platforms. In this instance, you can place a platform specifier in parentheses after the variable, to indicate that the variable applies only on that platform, for example:</p>
<pre><code>Use_ReadOnly (Win) = Yes
</code></pre>
<p>
The setting in the example applies only under Microsoft Windows. Settings include UNIX, Win, NT, MAC, and PC <img src="emdash.gif" border=0> the last is a catchall for personal computer operating systems. </p>
<p>
VSS recognizes computer names as platform specifiers. Only 10 platform specifiers are allowed per user, or 10 per SS.INI file.</p>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
