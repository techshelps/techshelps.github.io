<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>LZRead</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="3..s.to"></A><B>LZRead  <A HREF="lxh289.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="_f77a7.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="7d2bul.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>LZRead</B> function reads (at most) the specified number of bytes from a file and copies them into a buffer. </P>

<P><B>INT LZRead(</B></P>

<TABLE cols=2 width=347>

<TR VALIGN="top">
<TD width=42%><B>INT</B> <I>hFile</I><B>,</B></TD>
<TD width=58%>// LZ file handle of file</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    LPSTR</B> <I>lpBuffer</I><B>,</B></TD>
<TD width=58%>// address of buffer for bytes</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    INT</B> <I>cbRead</I> </TD>
<TD width=58%>// count of bytes</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>   );</B></TD>
<TD width=58%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hFile</I></P>

<P>Identifies the source file. </P>

<P><I>lpBuffer</I></P>

<P>Points to a buffer that receives the bytes read from the file. </P>

<P><I>cbRead</I></P>

<P>Specifies the count of bytes to be read. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value specifies the number of bytes read. </P>

<P>If the function fails, the return value is an LZERROR_* code. These codes have values less than zero. Note that <B>LZRead</B> calls neither <B>SetLastError</B> nor <B>SetLastErrorEx</B>; thus, its failure does not affect a thread's last-error code. </P>

<P>Here is a list of the LZERROR_* codes that <B>LZRead</B> can return upon failure: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=42%><B>Value</B></TD>
<TD width=58%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%>LZERROR_BADINHANDLE</TD>
<TD width=58%>The handle identifying the source file is not valid. The file cannot be read.</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>LZERROR_BADOUTHANDLE</TD>
<TD width=58%>The handle identifying the destination file is not valid. The file cannot be written.</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>LZERROR_BADVALUE</TD>
<TD width=58%>One of the input parameters is not valid.</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>LZERROR_GLOBALLOC</TD>
<TD width=58%>The maximum number of open compressed files has been exceeded or local memory cannot be allocated.</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>LZERROR_GLOBLOCK</TD>
<TD width=58%>The LZ file handle cannot be locked down.</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>LZERROR_READ</TD>
<TD width=58%>The source file format is not valid.</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>LZERROR_WRITE</TD>
<TD width=58%>There is insufficient space for the output file.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Remarks</B></P>

<P>The handle identifying the file must be retrieved by calling either the <A HREF="hbeguj.htm"><B>LZInit</B></A> or <A HREF="zo.1mn.htm"><B>LZOpenFile</B></A> function. </P>

<P>If the file is compressed, <B>LZRead</B> emulates the <B>_lread</B> function on an expanded image of the file and copies the bytes of data into the specified buffer. </P>

<P>Applications must call the <B>LZOpenFile</B>, <A HREF="1wu._u6.htm"><B>LZSeek</B></A>, and <B>LZRead</B> functions instead of the <B>OpenFile</B>, <B>_llseek</B>, and <B>_lread</B> functions. </P>

<P><B>See Also</B></P>

<P><A HREF="hbeguj.htm"><B>LZInit</B></A>, <A HREF="zo.1mn.htm"><B>LZOpenFile</B></A>, <A HREF="1wu._u6.htm"><B>LZSeek</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
