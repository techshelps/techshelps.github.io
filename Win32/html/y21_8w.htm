<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>EnumServicesStatus</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="y21_8w"></A><B>EnumServicesStatus  <A HREF="iros6i.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="12c8zrk.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="we4jtq.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>EnumServicesStatus</B> function enumerates services in the specified service control manager database. The name and status of each service are provided. </P>

<P><B>BOOL EnumServicesStatus(</B></P>

<TABLE cols=2 width=602>

<TR VALIGN="top">
<TD width=49%><B>SC_HANDLE</B> <I>hSCManager</I><B>,</B></TD>
<TD width=51%>// handle to service control manager database </TD>
</TR>

<TR VALIGN="top">
<TD width=49%><B>    DWORD</B> <I>dwServiceType</I><B>,</B></TD>
<TD width=51%>// type of services to enumerate </TD>
</TR>

<TR VALIGN="top">
<TD width=49%><B>    DWORD</B> <I>dwServiceState</I><B>,</B></TD>
<TD width=51%>// state of services to enumerate </TD>
</TR>

<TR VALIGN="top">
<TD width=49%><B>    LPENUM_SERVICE_STATUS</B> <I>lpServices</I><B>,</B></TD>
<TD width=51%>// pointer to service status buffer </TD>
</TR>

<TR VALIGN="top">
<TD width=49%><B>    DWORD</B> <I>cbBufSize</I><B>,</B></TD>
<TD width=51%>// size of service status buffer </TD>
</TR>

<TR VALIGN="top">
<TD width=49%><B>    LPDWORD</B> <I>pcbBytesNeeded</I><B>,</B></TD>
<TD width=51%>// pointer to variable for bytes needed </TD>
</TR>

<TR VALIGN="top">
<TD width=49%><B>    LPDWORD</B> <I>lpServicesReturned</I><B>,</B></TD>
<TD width=51%>// pointer to variable for number returned </TD>
</TR>

<TR VALIGN="top">
<TD width=49%><B>    LPDWORD</B> <I>lpResumeHandle</I> </TD>
<TD width=51%>// pointer to variable for next entry </TD>
</TR>

<TR VALIGN="top">
<TD width=49%><B>   );</B></TD>
<TD width=51%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hSCManager</I></P>

<P>Identifies the service control manager database. The <A HREF="nbxjug.htm"><B>OpenSCManager</B></A> function returns this handle which must have SC_MANAGER_ENUMERATE_SERVICE access. </P>

<P><I>dwServiceType</I></P>

<P>Specifies the type of services to enumerate. It must be one or both of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=35%><B>Value</B></TD>
<TD width=65%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=35%>SERVICE_WIN32</TD>
<TD width=65%>Enumerates services of type SERVICE_WIN32_OWN_PROCESS and SERVICE_WIN32_SHARE_PROCESS.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>SERVICE_DRIVER</TD>
<TD width=65%>Enumerates services of type SERVICE_KERNEL_DRIVER and SERVICE_FILE_SYSTEM_DRIVER.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>dwServiceState</I></P>

<P>Specifies the services to enumerate based on their running state. It must be one or both of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=35%><B>Value</B></TD>
<TD width=65%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=35%>SERVICE_ACTIVE</TD>
<TD width=65%>Enumerates services that are in the following states: SERVICE_START_PENDING, SERVICE_STOP_PENDING, SERVICE_RUNNING, SERVICE_CONTINUE_PENDING, SERVICE_PAUSE_PENDING, and SERVICE_PAUSED.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>SERVICE_INACTIVE</TD>
<TD width=65%>Enumerates services that are in the SERVICE_STOPPED state.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpServices</I></P>

<P>Points to an array of <A HREF="a9asqv.htm"><B>ENUM_SERVICE_STATUS</B></A> structures in which the name and service status information for each service in the database is returned. </P>

<P><I>cbBufSize</I></P>

<P>Specifies the size, in bytes, of the buffer pointed to by the <I>lpServices</I> parameter. </P>

<P><I>pcbBytesNeeded</I></P>

<P>Points to a variable that receives the number of bytes needed to return the remaining service entries. </P>

<P><I>lpServicesReturned</I></P>

<P>Points to a variable that receives the number of service entries returned. </P>

<P><I>lpResumeHandle</I></P>

<P>Points to a 32-bit variable that, on input, specifies the starting point of enumeration. The first time this function is called, the variable's value is set to zero. On output, the variable's value is zero if the function succeeds. If the function returns FALSE and the <B>GetLastError</B> function returns ERROR_MORE_DATA, the variable's value is used to indicate the next unread service entry when the function is called again to retrieve the additional data. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Errors</B></P>

<P>The following error codes may be set by the service control manager. Other error codes may be set by the registry functions that are called by the service control manager. </P>

<TABLE cols=6>

<TR VALIGN="top">
<TD colspan=2 width=11%><B>Value</B></TD>
<TD colspan=3 width=76%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>ERROR_ACCESS_DENIED</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The specified handle was not opened with SC_MANAGER_ENUMERATE_SERVICE access.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>ERROR_INVALID_HANDLE</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The specified handle is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>ERROR_INVALID_PARAMETER</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>A parameter that was specified is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>ERROR_MORE_DATA</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>There are more service entries than would fit into the <I>lpServices</I> buffer. The actual number of service entries written to <I>lpServices</I> is returned in the <I>lpServicesReturned</I> parameter. The number of bytes required to get the remaining entries is returned in the <I>pcbBytesNeeded</I> parameter. The remaining services can be enumerated by additional calls to <B>EnumServicesStatus</B> with the <I>lpResumeHandle</I> parameter indicating the next service to read.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="w540t9.htm"><B>EnumDependentServices</B></A>, <A HREF="a9asqv.htm"><B>ENUM_SERVICE_STATUS</B></A>, <A HREF="nbxjug.htm"><B>OpenSCManager</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
