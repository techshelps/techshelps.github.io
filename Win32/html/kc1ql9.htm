<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Structure of Registry Entries</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="kc1ql9"></A><B>Structure of Registry Entries</B></P>

<P>The following registry structure is required for Quick View to associate a class identifier or filename extension with the class identifier of a file viewer.</P>

<P>HKEY_CLASSES_ROOT  </P>

<P>\QuickView </P>

<P>\<I>&lt;</I>extension<I>&gt; </I>= <I>&lt;</I>human-readable document type<I>&gt;</I> </P>

<P>\{<I>&lt;</I>CLSID<I>&gt;</I>} = <I>&lt;</I>human-readable viewer name<I>&gt;</I> </P>

<P>\{<I>&lt;</I>CLSID<I>&gt;</I>} = <I>&lt;</I>human-readable viewer name<I>&gt;</I> </P>

<P>\{<I>&lt;</I>CLSID<I>&gt;</I>} = <I>&lt;</I>human-readable viewer name<I>&gt; </I></P>

<P></P>

<P>...[More extension entries for additional file types]<I> </I></P>

<P>... </P>

<P></P>

<P>\CLSID </P>

<P>\{<I>&lt;</I>CLSID<I>&gt;</I>} = <I>&lt;</I>human-readable viewer name<I>&gt;</I> </P>

<P>\InprocServer32 = <I>&lt;</I>full path to file viewer DLL<I>&gt;</I> </P>

<P>= ThreadingModel = "Apartment" </P>

<P></P>

<P>...[More class IDs for file viewers and other object servers] </P>

<P></P>

<P>A description of the registry entries follows.</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=44%><B>Entry</B></TD>
<TD width=56%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>HKEY_CLASSES_ROOT</B></TD>
<TD width=56%>Root of the registry<B>.</B></TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>QuickView</B></TD>
<TD width=56%>Top-level key under which associations are stored.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><I>CLSID</I></TD>
<TD width=56%>16-byte OLE class identifier spelled out in hexadecimal digits in the form of 12345678-1234-1234-1234-1234567890AB with the hyphens included. All class identifiers are surrounded by curly braces when stored in the registry.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><I>human-readable document type</I></TD>
<TD width=56%>String describing the file type associated with the class identifier or filename extension that can be displayed to the user. A file viewer can change the type when it is installed so that the name always reflects the preferred viewer. For example, this string might be "Windows Write Document."</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><I>human-readable viewer name</I></TD>
<TD width=56%>String that describes the vendor of the file viewer, as it might be displayed in an About box, such as "Company ABC Write Document Viewer."</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><I>&lt;extension&gt;</I></TD>
<TD width=56%>Three-character filename extension with the period, as is consistent with the standard 8.3 filename format ¾ for example, .WRI.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>CLSID</B> and <B>InprocServer32</B> are standard OLE (32-bit) subkey names. The "ThreadingModel = Apartment" entry is required for file viewers. The apartment threading model, which is new for OLE in Windows 95 and Microsoft® Windows NT® version 3.51, allows the <B>OleInitialize</B> and <B>CoInitialize</B> functions to be called from multiple threads.</P>

<P>The <B>QuickView</B> key can have any number of filename extension subkeys, each representing a registered file type. Each filename extension subkey can have one or more class identifier subkeys, each representing a registered file viewer object. The most recently registered file viewer appears first in the list of class identifier subkeys, and it is the first one found when Quick View enumerates the registered file viewers. </P>

<P></P>

<P><B>Note</B>  The file viewer class identifier should always differ from the file type class identifier because the application that created the file may already be using the class identifier to identify the application as a compound document server.</P>

<P></P>

<P>Each class identifier stored under the filename extension subkeys must correspond to an entry of the same class identifier stored under the top-level key called <B>CLSID</B>. This is the standard location for storing information for OLE object servers. For file viewers, there must be an <B>InprocServer32</B> subkey under the file viewer's class identifier key. The value of the <B>InprocServer32</B> subkey is the full path to the file viewer DLL. You should store the full path and not depend on the DLL being in the path of the Windows 95 environment. <B>InprocServer32</B> is a standard OLE subkey where the path to a component object server is stored. Using this subkey allows the Quick View program to use standard OLE member functions to access and create objects from file viewer servers.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
