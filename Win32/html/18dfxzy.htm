<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetDIBits</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="18dfxzy"></A><B>GetDIBits  <A HREF="3jtao_.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="15l9v8p.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1z.4d3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetDIBits</B> function retrieves the bits of the specified bitmap and copies them into a buffer using the specified format. </P>

<P><B>int GetDIBits(</B></P>

<TABLE cols=2 width=465>

<TR VALIGN="top">
<TD width=37%><B>HDC</B> <I>hdc</I><B>,</B></TD>
<TD width=63%>// handle of device context </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>    HBITMAP</B> <I>hbmp</I><B>,</B></TD>
<TD width=63%>// handle of bitmap </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>    UINT</B> <I>uStartScan</I><B>,</B></TD>
<TD width=63%>// first scan line to set in destination bitmap  </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>    UINT</B> <I>cScanLines</I><B>,</B></TD>
<TD width=63%>// number of scan lines to copy </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>    LPVOID</B> <I>lpvBits</I><B>,</B></TD>
<TD width=63%>// address of array for bitmap bits </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>    LPBITMAPINFO</B> <I>lpbi</I><B>,</B></TD>
<TD width=63%>// address of structure with bitmap data </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>    UINT</B> <I>uUsage</I> </TD>
<TD width=63%>// RGB or palette index </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>   );</B></TD>
<TD width=63%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hdc</I></P>

<P>Identifies the device context. </P>

<P><I>hbmp</I></P>

<P>Identifies the bitmap. </P>

<P><I>uStartScan</I></P>

<P>Specifies the first scan line to retrieve. </P>

<P><I>cScanLines</I></P>

<P>Specifies the number of scan lines to retrieve. </P>

<P><I>lpvBits</I></P>

<P>Points to a buffer to receive the bitmap data. If this parameter is NULL, the function passes the dimensions and format of the bitmap to the <B>BITMAPINFO</B> structure pointed to by the <I>lpbi</I> parameter. </P>

<P><I>lpbi</I></P>

<P>Points to a <A HREF=".2pxnh.htm"><B>BITMAPINFO</B></A> structure that specifies the desired format for the device-independent bitmap (DIB) data. </P>

<P><I>uUsage</I></P>

<P>Specifies the format of the <B>bmiColors</B> member of the <B>BITMAPINFO</B> structure. It must be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=33%><B>Value</B></TD>
<TD width=67%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=33%>DIB_PAL_COLORS</TD>
<TD width=67%>The color table should consist of an array of 16-bit indices into the current logical palette.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>DIB_RGB_COLORS</TD>
<TD width=67%>The color table should consist of literal red, green, blue (RGB) values.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the <I>lpvBits</I> parameter is non-NULL and the function succeeds, the return value is the number of scan lines copied from the bitmap.</P>

<P><B>Windows 95:</B> </P>

<P>If the <I>lpvBits</I> parameter is NULL and <B>GetDIBits</B> successfully fills the <B>BITMAPINFO</B> structure, the return value is the total number of scan lines in the bitmap. </P>

<P><B>Windows NT:</B> </P>

<P>If the <I>lpvBits</I> parameter is NULL and <B>GetDIBits</B> successfully fills the <B>BITMAPINFO</B> structure, the return value is non-zero. </P>

<P>If the function fails, the return value is zero. </P>

<P><B>Remarks</B></P>

<P>If the requested format for the DIB matches its internal format, the RGB values for the bitmap are copied. If the requested format doesn't match the internal format, a color table is synthesized. The following table describes the color table synthesized for each format. </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=15%><B>Value</B></TD>
<TD width=85%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=15%>1_BPP</TD>
<TD width=85%>The color table consists of a black and a white entry.</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4_BPP</TD>
<TD width=85%>The color table consists of a mix of colors identical to the standard VGA palette.</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>8_BPP</TD>
<TD width=85%>The color table consists of a general mix of 256 colors defined by GDI. (Included in these 256 colors are the 20 colors found in the default logical palette.)</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>24_BPP</TD>
<TD width=85%>No color table is returned.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>If the <I>lpvBits</I> parameter is a valid pointer, the first six members of the <A HREF="05za4g.htm"><B>BITMAPINFOHEADER</B></A> structure must be initialized to specify the size and format of the DIB. Note that a bottom-up DIB is specified by setting the height to a positive number, while a top-down DIB is specified by setting the height to a negative number. The bitmap's color table will be appended to the <B>BITMAPINFO</B> structure. </P>

<P>If <I>lpvBits</I> is NULL, <B>GetDIBits</B> examines the first member of the first structure pointed to by <I>lpbi.</I> This member must specify the size, in bytes, of a <A HREF="eexstk.htm"><B>BITMAPCOREHEADER</B></A> or a <B>BITMAPINFOHEADER</B> structure. The function uses the specified size to determine how the remaining members should be initialized.</P>

<P>If <I>lpvBits</I> is NULL and the bit count member of <A HREF=".2pxnh.htm"><B>BITMAPINFO</B></A> is initialized to zero, <B>GetDIBits</B> fills in <A HREF="05za4g.htm"><B>BITMAPINFOHEADER</B></A> or <B>BITMAPCOREHEADER</B> without the color table. This technique can be used to query bitmap attributes. </P>

<P>The bitmap identified by the <I>hbmp</I> parameter must not be selected into a device context when the application calls this function. </P>

<P>The origin for a bottom-up DIB is the lower-left corner of the bitmap; the origin for a top-down DIB is the upper-left corner. </P>

<P><B>See Also</B></P>

<P><A HREF="eexstk.htm"><B>BITMAPCOREHEADER</B></A>, <A HREF=".2pxnh.htm"><B>BITMAPINFO</B></A>, <A HREF="05za4g.htm"><B>BITMAPINFOHEADER</B></A>, <A HREF="6_ok76.htm"><B>SetDIBits</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
