<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>BITMAPINFO</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME=".2pxnh"></A><B>BITMAPINFO  <A HREF="xzz55x.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="15l9v8p.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1brk.z3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>BITMAPINFO</B> structure defines the dimensions and color information for a Windows device-independent bitmap (DIB). </P>

<P>typedef struct tagBITMAPINFO { // bmi  </P>

<P>BITMAPINFOHEADER bmiHeader; </P>

<P>RGBQUAD          bmiColors[1]; </P>

<P>} BITMAPINFO; </P>

<P></P>

<P><B>Members</B></P>

<P><B>bmiHeader</B></P>

<P>Specifies a <A HREF="05za4g.htm"><B>BITMAPINFOHEADER</B></A> structure that contains information about the dimensions and color format of a DIB. </P>

<P><B>bmiColors</B></P>

<P>Specifies an array of <A HREF="654who.htm"><B>RGBQUAD</B></A> or doubleword data types that define the colors in the bitmap. </P>

<P></P>

<P><B>Remarks</B></P>

<P>A device-independent bitmap consists of two distinct parts: a <B>BITMAPINFO</B> structure describing the dimensions and colors of the bitmap, and an array of bytes defining the pixels of the bitmap. The bits in the array are packed together, but each scan line must be padded with zeroes to end on a LONG data-type boundary. If the height is positive, the bitmap is a bottom-up DIB and its origin is the lower left corner. If the height is negative, the bitmap is a top-down DIB and its origin is the upper left corner. </P>

<P>The <B>biBitCount</B> member of the <A HREF="05za4g.htm"><B>BITMAPINFOHEADER</B></A> structure determines the number of bits that define each pixel and the maximum number of colors in the bitmap. This member can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=13%><B>Value</B></TD>
<TD width=87%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=13%>1</TD>
<TD width=87%>The bitmap is monochrome, and the <B>bmiColors</B> member contains two entries. Each bit in the bitmap array represents a pixel. If the bit is clear, the pixel is displayed with the color of the first entry in the <B>bmiColors</B> table; if the bit is set, the pixel has the color of the second entry in the table.</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>4</TD>
<TD width=87%>The bitmap has a maximum of 16 colors, and the <B>bmiColors</B> member contains up to 16 entries. Each pixel in the bitmap is represented by a 4-bit index into the color table. For example, if the first byte in the bitmap is 0x1F, the byte represents two pixels. The first pixel contains the color in the second table entry, and the second pixel contains the color in the sixteenth table entry.</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>8</TD>
<TD width=87%>The bitmap has a maximum of 256 colors, and the <B>bmiColors</B> member contains up to 256 entries. In this case, each byte in the array represents a single pixel.</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>16</TD>
<TD width=87%>The bitmap has a maximum of 2^16 colors. If the <B>biCompression</B> member of the <A HREF="05za4g.htm"><B>BITMAPINFOHEADER</B></A> is BI_RGB, the <B>bmiColors</B> member is NULL. Each <B>WORD</B> in the bitmap array represents a single pixel. The relative intensities of red, green, and blue are represented with 5 bits for each color component. The value for blue is in the least significant 5 bits, followed by 5 bits each for green and red, respectively. The most significant bit is not used.
<P>If the <B>biCompression</B> member of the <B>BITMAPINFOHEADER</B> is BI_BITFIELDS, the <B>bmiColors</B> member contains three <B>DWORD </B>color masks that specify the red, green, and blue components, respectively, of each pixel. Each <B>WORD </B>in the bitmap array represents a single pixel.</P>

<P><B>Windows NT:</B> When the <B>biCompression</B> member is BI_BITFIELDS, bits set in each <B>DWORD </B>mask must be contiguous and should not overlap the bits of another mask. All the bits in the pixel do not have to be used. </P>

<P><B>Windows 95:</B> When the <B>biCompression</B> member is BI_BITFIELDS, Windows 95 supports only the following 16bpp color masks: A 5-5-5 16-bit image, where the blue mask is 0x001F, the green mask is 0x03E0, and the red mask is 0x7C00; and a 5-6-5 16-bit image, where the blue mask is 0x001F, the green mask is 0x07E0, and the red mask is 0xF800.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>24</TD>
<TD width=87%>The bitmap has a maximum of 2^24 colors, and the <B>bmiColors</B> member is NULL. Each 3-byte triplet in the bitmap array represents the relative intensities of blue, green, and red, respectively, for a pixel.</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>32</TD>
<TD width=87%>The bitmap has a maximum of 2^32 colors. If the <B>biCompression</B> member of the <B>BITMAPINFOHEADER</B> is BI_RGB, the <B>bmiColors</B> member is NULL. Each <B>DWORD</B> in the bitmap array represents the relative intensities of blue, green, and red, respectively, for a pixel. The high byte in each <B>DWORD</B> is not used.
<P>If the <B>biCompression</B> member of the <B>BITMAPINFOHEADER</B> is BI_BITFIELDS, the <B>bmiColors</B> member contains three <B>DWORD </B>color masks that specify the red, green, and blue components, respectively, of each pixel. Each <B>DWORD </B>in the bitmap array represents a single pixel.</P>

<P><B>Windows NT:</B> When the <B>biCompression</B> member is BI_BITFIELDS, bits set in each <B>DWORD </B>mask must be contiguous and should not overlap the bits of another mask. All the bits in the pixel do not have to be used. </P>

<P><B>Windows 95:</B> When the <B>biCompression</B> member is BI_BITFIELDS, Windows 95 supports only the following 32bpp color mask: The blue mask is 0x000000FF, the green mask is 0x0000FF00, and the red mask is 0x00FF0000.</P>
</TD>
</TR>
</TABLE><BR>

<P></P>

<P>The <B>biClrUsed</B> member of the <A HREF="05za4g.htm"><B>BITMAPINFOHEADER</B></A> structure specifies the number of color indices in the color table that are actually used by the bitmap. If the <B>biClrUsed</B> member is set to zero, the bitmap uses the maximum number of colors corresponding to the value of the <B>biBitCount</B> member. </P>

<P>The colors in the <B>bmiColors</B> table should appear in order of importance. </P>

<P>Alternatively, for functions that use DIBs, the <B>bmiColors</B> member can be an array of 16-bit unsigned integers that specify indices into the currently realized logical palette, instead of explicit RGB values. In this case, an application using the bitmap must call the DIB functions (<A HREF="90v.zf.htm"><B>CreateDIBitmap</B></A>, <A HREF="ygbl.p.htm"><B>CreateDIBPatternBrush</B></A>, and <A HREF="gsao6s.htm"><B>CreateDIBSection</B></A>) with the <I>iUsage</I> parameter set to DIB_PAL_COLORS. </P>

<P>If the bitmap is a packed bitmap (a bitmap in which the bitmap array immediately follows the <B>BITMAPINFO</B> header and which is referenced by a single pointer), the <B>biClrUsed</B> member must be set to an even number when using the DIB_PAL_COLORS mode so the DIB bitmap array starts on a doubleword boundary. </P>

<P></P>

<P><B>Note</B>  The <B>bmiColors</B> member should not contain palette indices if the bitmap is to be stored in a file or transferred to another application. Unless the application has exclusive use and control of the bitmap, the bitmap color table should contain explicit RGB values. </P>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="05za4g.htm"><B>BITMAPINFOHEADER</B></A>, <A HREF="90v.zf.htm"><B>CreateDIBitmap</B></A>, <A HREF="ygbl.p.htm"><B>CreateDIBPatternBrush</B></A>, <A HREF="gsao6s.htm"><B>CreateDIBSection</B></A>, <A HREF="654who.htm"><B>RGBQUAD</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
