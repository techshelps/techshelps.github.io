<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>ObjectOpenAuditAlarm</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="3bm2_wx"></A><B>ObjectOpenAuditAlarm  <A HREF="qqs9ww.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1966ja.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="afqqmm.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>ObjectOpenAuditAlarm</B> function generates audit messages when a client application attempts to gain access to an object or to create a new one. Alarms are not supported in the current version of Windows NT. </P>

<P><B>BOOL ObjectOpenAuditAlarm(</B></P>

<TABLE cols=2 width=613>

<TR VALIGN="top">
<TD width=56%><B>LPCTSTR</B> <I>SubsystemName</I><B>,</B></TD>
<TD width=44%>// address of string for subsystem name </TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    LPVOID</B> <I>HandleId</I><B>,</B></TD>
<TD width=44%>// address of handle identifier</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    LPTSTR</B> <I>ObjectTypeName</I><B>,</B></TD>
<TD width=44%>// address of string for object type</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    LPTSTR</B> <I>ObjectName</I><B>,</B></TD>
<TD width=44%>// address of string for object name</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    PSECURITY_DESCRIPTOR</B> <I>pSecurityDescriptor</I><B>,</B></TD>
<TD width=44%>// address of security descriptor</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    HANDLE</B> <I>ClientToken</I><B>,</B></TD>
<TD width=44%>// handle of client's access token</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    DWORD</B> <I>DesiredAccess</I><B>,</B></TD>
<TD width=44%>// mask for desired access rights</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    DWORD</B> <I>GrantedAccess</I><B>,</B></TD>
<TD width=44%>// mask for granted access rights</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    PPRIVILEGE_SET</B> <I>Privileges</I><B>,</B></TD>
<TD width=44%>// address of privileges</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    BOOL</B> <I>ObjectCreation</I><B>,</B></TD>
<TD width=44%>// flag for object creation</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    BOOL</B> <I>AccessGranted</I><B>,</B></TD>
<TD width=44%>// flag for results</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    LPBOOL</B> <I>GenerateOnClose</I> </TD>
<TD width=44%>// address of flag for audit generation</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>   );</B></TD>
<TD width=44%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>SubsystemName</I></P>

<P>Points to a null-terminated string specifying the subsystem calling this function, for example, "DEBUG" or "WIN32". </P>

<P><I>HandleId</I></P>

<P>Points to a unique 32-bit value representing the client's handle of the object. If the access is denied, this parameter is ignored. </P>

<P><I>ObjectTypeName</I></P>

<P>Points to a null-terminated string specifying the type of object to which the client is requesting access. This string appears in the audit log for the object. </P>

<P><I>ObjectName</I></P>

<P>Points to a null-terminated string specifying the name of the object to which the client gained access or attempted to gain access. This string appears in the audit log for the object. </P>

<P><I>pSecurityDescriptor</I></P>

<P>Points to the <A HREF="188mr8k.htm"><B>SECURITY_DESCRIPTOR</B></A> structure for the object being accessed. </P>

<P><I>ClientToken</I></P>

<P>Identifies an access token representing the client requesting the operation. This handle must be obtained by opening the token of a thread impersonating the client. The token must be open for TOKEN_QUERY access. </P>

<P><I>DesiredAccess</I></P>

<P>Specifies the desired access mask. This mask must have been previously mapped by the <B>MapGenericMask</B> function to contain no generic access rights. </P>

<P><I>GrantedAccess</I></P>

<P>Specifies an access mask indicating which access rights are granted. This access mask is intended to be the same value set by one of the access-checking functions in its <I>GrantedAccess</I> parameter. Examples of access-checking functions include <B>AccessCheckAndAuditAlarm</B> and <B>AccessCheck</B>. </P>

<P><I>Privileges</I></P>

<P>Points to a <A HREF="4venv2.htm"><B>PRIVILEGE_SET</B></A> structure that specifies the set of privileges required for the access attempt. This parameter can be NULL. </P>

<P><I>ObjectCreation</I></P>

<P>Specifies a flag that determines whether the application creates a new object when access is granted. When this flag is TRUE, the application creates a new object; when it is FALSE, the application opens an existing object. </P>

<P><I>AccessGranted</I></P>

<P>Specifies a flag indicating whether access was granted or denied in a previous call to an access-checking function, such as <B>AccessCheck</B>. If access was granted, this flag is TRUE. If not, it is FALSE. </P>

<P><I>GenerateOnClose</I></P>

<P>Points to a flag set by the audit-generation routine when the function returns. This flag must be passed to the <B>ObjectCloseAuditAlarm</B> function when the object handle is closed. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <B>GetLastError</B>. </P>

<P><B>Remarks</B></P>

<P>The <B>ObjectOpenAuditAlarm</B> function requires the calling application to have the SE_AUDIT_NAME privilege. The test for this privilege is always performed against the primary token of the calling process, not the impersonation token of the thread. This allows the calling process to impersonate a client during the call. </P>

<P><B>See Also</B></P>

<P><A HREF="6bujdl.htm"><B>AccessCheck</B></A>, <A HREF="42cfuj6.htm"><B>AccessCheckAndAuditAlarm</B></A>, <A HREF="12w7mz7.htm"><B>AreAllAccessesGranted</B></A>, <A HREF="3ebe6c.htm"><B>AreAnyAccessesGranted</B></A>, <A HREF="16rli2z.htm"><B>MapGenericMask</B></A>, <A HREF="2rh2_le.htm"><B>ObjectCloseAuditAlarm</B></A>, <A HREF="6bem_p.htm"><B>ObjectDeleteAuditAlarm</B></A>, <A HREF="jzr57u.htm"><B>ObjectPrivilegeAuditAlarm</B></A>, <A HREF="i9o5nf.htm"><B>PrivilegeCheck</B></A>, <A HREF="lk0uwj.htm"><B>PrivilegedServiceAuditAlarm</B></A>, <A HREF="4venv2.htm"><B>PRIVILEGE_SET</B></A>, <A HREF="188mr8k.htm"><B>SECURITY_DESCRIPTOR</B></A></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
