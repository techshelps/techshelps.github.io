<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Creating a Hot-Key Control</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1m2gq_3"></A><B>Creating a Hot-Key Control</B></P>

<P>The following function creates a hot-key control, uses the <A HREF="w1l3ft.htm">HKM_SETRULES</A> and <A HREF="1bkx0ke.htm">HKM_SETHOTKEY</A> messages to initialize it, and returns a handle to the control. This hot-key control does not allow the user to choose a hot key that is a single unmodified key, nor does it permit the user to choose only SHIFT and a key. (These rules effectively prevent the user from choosing a hot key that might be accidentally entered while typing text.)</P>

<P>// InitializeHotkey - creates a hot-key control and sets rules  </P>

<P>//    and default settings for it. </P>

<P>// Returns the handle of the hot-key control. </P>

<P>// hwndDlg - handle of the parent window (dialog box) </P>

<P>// </P>

<P>// Global variable </P>

<P>//     g_hinst - handle of the application instance </P>

<P>extern HINSTANCE g_hinst; </P>

<P>HWND WINAPI InitializeHotkey(HWND hwndDlg) </P>

<P>{ </P>

<P>// Ensure that the common control DLL is loaded. </P>

<P>InitCommonControls(); </P>

<P></P>

<P>hwndHot = CreateWindowEx( </P>

<P>0,                             // no extended styles </P>

<P>HOTKEY_CLASS,                  // class name </P>

<P>"",                            // no title (caption) </P>

<P>WS_CHILD | WS_VISIBLE,         // style </P>

<P>10, 10,                        // position </P>

<P>200, 20,                       // size </P>

<P>hwndDlg,                       // parent window </P>

<P>NULL,                          // uses class menu </P>

<P>g_hinst,                       // instance </P>

<P>NULL                           // no WM_CREATE parameter </P>

<P>); </P>

<P></P>

<P>SetFocus(hwndHot); </P>

<P></P>

<P>// Set rules for invalid key combinations. If the user </P>

<P>// does not supply a modifier key, use ALT as a modifier. </P>

<P>// If the user supplies SHIFT as a modifier key, use </P>

<P>// SHIFT + ALT instead. </P>

<P>SendMessage(hwndHot, HKM_SETRULES, </P>

<P>(WPARAM) HKCOMB_NONE | HKCOMB_S, // invalid key combinations </P>

<P>MAKELPARAM(HOTKEYF_ALT, 0));     // add ALT to invalid entries </P>

<P></P>

<P>// Set CTRL + ALT + A as the default hot key for this window. </P>

<P>// 0x41 is the virtual-key code for 'A'. </P>

<P>SendMessage(hwndHot, HKM_SETHOTKEY, </P>

<P>MAKEWORD(0x41, HOTKEYF_CONTROL | HOTKEYF_ALT), 0); </P>

<P></P>

<P>return hwndHot; </P>

<P>} </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
