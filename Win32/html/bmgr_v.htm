<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Console Screen Buffers</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="bmgr_v"></A><B>Console Screen Buffers</B></P>

<P>A <I>screen buffer</I> is a two-dimensional array of character and color data for output in a console window. A console can have multiple screen buffers. The <I>active screen buffer</I> is the one that is displayed on the screen. </P>

<P>The system creates a screen buffer whenever it creates a new console. A process can use the <A HREF="1n6839e.htm"><B>CreateConsoleScreenBuffer</B></A> function to create additional screen buffers for its console. A new screen buffer is not active until its handle is specified in a call to the <A HREF="4n5s_56.htm"><B>SetConsoleActiveScreenBuffer</B></A> function. However, screen buffers can be accessed for reading and writing whether they are active or inactive. </P>

<P>Each screen buffer has its own two-dimensional array of character information records. The data for each character is stored in a <A HREF="2xin06y.htm"><B>CHAR_INFO</B></A> structure that specifies the Unicode or ANSI character and the foreground and background colors in which that character is displayed. </P>

<P>A number of properties associated with a screen buffer can be set independently for each screen buffer. This means that changing the active screen buffer can have a dramatic effect on the appearance of the console window. The properties associated with a screen buffer include: </P>

<P>·Screen buffer size, in character rows and columns. </P>

<P>·Text attributes (foreground and background colors for displaying text to be written by the <A HREF="g0sox_.htm"><B>WriteFile</B></A> or <A HREF="5_0w_r1.htm"><B>WriteConsole</B></A> function). </P>

<P>·Window size and location (the rectangular region of the screen buffer that is displayed in the console window). </P>

<P>·Cursor position, appearance, and visibility. </P>

<P>·Output modes (ENABLE_PROCESSED_OUTPUT and ENABLE_WRAP_AT_EOL_OUTPUT). For more information about console output modes, see <A HREF="bg_qq9.htm">High-Level Console Modes</A>. </P>

<P></P>

<P>When a screen buffer is created, it contains blanks. Its cursor is visible and positioned at the buffer's origin (0,0), and the window is positioned with its upper left corner at the buffer's origin. The size of the screen buffer, the window size, the text attributes, and the appearance of the cursor are determined by the user or by the system defaults. To retrieve the current values of the various properties associated with the screen buffer, use the <A HREF="h61zfu.htm"><B>GetConsoleScreenBufferInfo</B></A>, <A HREF="lxegt2.htm"><B>GetConsoleCursorInfo</B></A>, and <A HREF="1n6qct..htm"><B>GetConsoleMode</B></A> functions. </P>

<P>Applications that change any of the screen buffer properties should either create their own screen buffer or save the state of the inherited screen buffer during startup and restore it at exit. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
