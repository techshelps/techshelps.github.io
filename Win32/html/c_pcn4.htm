<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetProcAddress</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="c_pcn4"></A><B>GetProcAddress  <A HREF="1gy.zjh.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="ad.gsp.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="14bc1rp.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetProcAddress</B> function returns the address of the specified exported dynamic-link library (DLL) function. </P>

<P><B>FARPROC GetProcAddress(</B></P>

<TABLE cols=2 width=363>

<TR VALIGN="top">
<TD width=50%><B>HMODULE</B> <I>hModule</I><B>,</B></TD>
<TD width=50%>// handle to DLL module  </TD>
</TR>

<TR VALIGN="top">
<TD width=50%><B>    LPCSTR</B> <I>lpProcName</I> </TD>
<TD width=50%>// name of function </TD>
</TR>

<TR VALIGN="top">
<TD width=50%><B>   );</B></TD>
<TD width=50%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hModule</I></P>

<P>Identifies the DLL module that contains the function. The <A HREF="1vghbf8.htm"><B>LoadLibrary</B></A> or <A HREF="18vfc_p.htm"><B>GetModuleHandle</B></A> function returns this handle. </P>

<P><I>lpProcName</I></P>

<P>Points to a null-terminated string containing the function name, or specifies the function's ordinal value. If this parameter is an ordinal value, it must be in the low-order word; the high-order word must be zero. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the address of the DLL's exported function.</P>

<P>If the function fails, the return value is NULL. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The <B>GetProcAddress</B> function is used to retrieve addresses of exported functions in DLLs. </P>

<P>The spelling and case of the function name pointed to by <I>lpProcName</I> must be identical to that in the <B>EXPORTS</B> statement of the source DLL's module-definition (.DEF) file. </P>

<P>The <I>lpProcName</I> parameter can identify the DLL function by specifying an ordinal value associated with the function in the <B>EXPORTS</B> statement. <B>GetProcAddress</B> verifies that the specified ordinal is in the range 1 through the highest ordinal value exported in the .DEF file. The function then uses the ordinal as an index to read the function's address from a function table. If the .DEF file does not number the functions consecutively from 1 to <I>N</I> (where <I>N</I> is the number of exported functions), an error can occur where <B>GetProcAddress</B> returns an invalid, non-NULL address, even though there is no function with the specified ordinal. </P>

<P>In cases where the function may not exist, the function should be specified by name rather than by ordinal value. </P>

<P><B>See Also</B></P>

<P><A HREF="3mcs_pm.htm"><B>FreeLibrary</B></A>, <A HREF="18vfc_p.htm"><B>GetModuleHandle</B></A>,<B> <A HREF="1vghbf8.htm">LoadLibrary</A></B> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
