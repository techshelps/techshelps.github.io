<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetTimer</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="14a99rj"></A><B>SetTimer  <A HREF="1191mmj.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="2qmb_nn.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="dpggy3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SetTimer</B> function creates a timer with the specified time-out value. </P>

<P><B>UINT SetTimer(</B></P>

<TABLE cols=2 width=471>

<TR VALIGN="top">
<TD width=44%><B>HWND</B> <I>hWnd</I><B>,</B></TD>
<TD width=56%>// handle of window for timer messages</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>    UINT</B> <I>nIDEvent</I><B>,</B></TD>
<TD width=56%>// timer identifier</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>    UINT</B> <I>uElapse</I><B>,</B></TD>
<TD width=56%>// time-out value</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>    TIMERPROC</B> <I>lpTimerFunc</I> </TD>
<TD width=56%>// address of timer procedure</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>   );</B></TD>
<TD width=56%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hWnd</I></P>

<P>Identifies the window to be associated with the timer. This window must be owned by the calling thread. If this parameter is NULL, no window is associated with the timer and the <I>nIDEvent</I> parameter is ignored. </P>

<P><I>nIDEvent</I></P>

<P>Specifies a nonzero timer identifier. If the <I>hWnd</I> parameter is NULL, this parameter is ignored. </P>

<P><I>uElapse</I></P>

<P>Specifies the time-out value, in milliseconds. </P>

<P><I>lpTimerFunc</I></P>

<P>Points to the function to be notified when the time-out value elapses. For more information about the function, see <A HREF="_xk.zv.htm"><B>TimerProc</B></A>. </P>

<P>If <I>lpTimerFunc</I> is NULL, the system posts a <A HREF="303bzxe.htm">WM_TIMER</A> message to the application queue. The <B>hwnd</B> member of the message's <A HREF="5ctef1.htm"><B>MSG</B></A> structure contains the value of the <I>hWnd</I> parameter. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is an integer identifying the new timer. An application can pass this value, or the string identifier, if it exists, to the <A HREF="jcy77..htm"><B>KillTimer</B></A> function to destroy the timer. If the function fails to create a timer, the return value is zero. </P>

<P><B>Remarks</B></P>

<P>An application can process WM_TIMER messages by including a WM_TIMER case statement in the window procedure or by specifying a <B>TimerProc</B> callback function when creating the timer. When you specify a <B>TimerProc</B> callback function, the <B>DispatchMessage</B> function simply calls the callback function instead of the window procedure. Therefore, you need to dispatch messages in the calling thread, even when you use <B>TimerProc</B> instead of processing WM_TIMER. </P>

<P>The <I>wParam</I> parameter of the WM_TIMER message contains the value of the <I>nIDEvent</I> parameter. </P>

<P><B>See Also</B></P>

<P><A HREF="20gx08e.htm"><B>DispatchMessage</B></A>, <A HREF="jcy77..htm"><B>KillTimer</B></A>, <A HREF="5ctef1.htm"><B>MSG</B></A>, <A HREF="_xk.zv.htm"><B>TimerProc</B></A>, <A HREF="303bzxe.htm">WM_TIMER</A> </P>

</BODY>
</HTML>
