<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>GrayString</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="xhskts"></A><B>GrayString  <A HREF=".i104a.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1mptrl8.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="el1da3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GrayString</B> function draws gray text at the specified location. The function draws the text by copying it into a memory bitmap, graying the bitmap, and then copying the bitmap to the screen. The function grays the text regardless of the selected brush and background. <B>GrayString</B> uses the font currently selected for the specified device context. </P>

<P>If the <I>lpOutputFunc</I> parameter is NULL, GDI uses the <A HREF="mwueko.htm"><B>TextOut</B></A> function, and the <I>lpData</I> parameter is assumed to be a pointer to the character string to be output. If the characters to be output cannot be handled by <B>TextOut</B> (for example, the string is stored as a bitmap), the application must supply its own output function. </P>

<P><B>BOOL GrayString(</B></P>

<TABLE cols=2 width=505>

<TR VALIGN="top">
<TD width=51%><B>HDC</B> <I>hDC</I><B>,</B></TD>
<TD width=49%>// handle to the device context</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    HBRUSH</B> <I>hBrush</I><B>,</B></TD>
<TD width=49%>// handle to the brush for graying</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    GRAYSTRINGPROC</B> <I>lpOutputFunc</I><B>,</B></TD>
<TD width=49%>// pointer to the callback function</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    LPARAM</B> <I>lpData</I><B>,</B></TD>
<TD width=49%>// pointer to application-defined data</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    int</B> <I>nCount</I><B>,</B></TD>
<TD width=49%>// number of characters to output</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    int</B> <I>X</I><B>,</B></TD>
<TD width=49%>// horizontal position</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    int</B> <I>Y</I><B>,</B></TD>
<TD width=49%>// vertical position</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    int</B> <I>nWidth</I><B>,</B></TD>
<TD width=49%>// width</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    int</B> <I>nHeight</I> </TD>
<TD width=49%>// height</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>   );</B></TD>
<TD width=49%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hDC</I></P>

<P>Identifies the device context. </P>

<P><I>hBrush</I></P>

<P>Identifies the brush to be used for graying. If this parameter is NULL, the text is grayed with the same brush that was used to draw window text. </P>

<P><I>lpOutputFunc</I></P>

<P>Points to the application-defined function that will draw the string, or, if <B>TextOut</B> is to be used to draw the string, it is a NULL pointer. For details, see the <A HREF="1mejqb..htm"><B>OutputProc</B></A> callback function. </P>

<P><I>lpData</I></P>

<P>Specifies a pointer to data to be passed to the output function. If the <I>lpOutputFunc</I> parameter is NULL, <I>lpData</I> must be a pointer to the string to be output. </P>

<P><I>nCount</I></P>

<P>Specifies the number of characters to be output. If the <I>nCount</I> parameter is zero, <B>GrayString</B> calculates the length of the string (assuming <I>lpData</I> is a pointer to the string). If <I>nCount</I> is -1 and the function pointed to by <I>lpOutputFunc</I> returns FALSE, the image is shown but not grayed. </P>

<P><I>X</I></P>

<P>Specifies the device x-coordinate of the starting position of the rectangle that encloses the string. </P>

<P><I>Y</I></P>

<P>Specifies the device y-coordinate of the starting position of the rectangle that encloses the string. </P>

<P><I>nWidth</I></P>

<P>Specifies the width, in device units, of the rectangle that encloses the string. If this parameter is zero, <B>GrayString</B> calculates the width of the area, assuming <I>lpData</I> is a pointer to the string. </P>

<P><I>nHeight</I></P>

<P>Specifies the height, in device units, of the rectangle that encloses the string. If this parameter is zero, <B>GrayString</B> calculates the height of the area, assuming <I>lpData</I> is a pointer to the string. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the string is drawn, the return value is nonzero.</P>

<P>If either the <B>TextOut</B> function or the application-defined output function returned zero, or there was insufficient memory to create a memory bitmap for graying, the return value is zero. </P>

<P><B>Remarks</B></P>

<P>Without calling <B>GrayString</B>, an application can draw grayed strings on devices that support a solid gray color. The system color COLOR_GRAYTEXT is the solid-gray system color used to draw disabled text. The application can call the <B>GetSysColor</B> function to retrieve the color value of COLOR_GRAYTEXT. If the color is other than zero (black), the application can call the <B>SetTextColor</B> function to set the text color to the color value and then draw the string directly. If the retrieved color is black, the application must call <B>GrayString</B> to gray the text. </P>

<P><B>See Also</B></P>

<P><A HREF="g6q7on.htm"><B>DrawText</B></A>, <A HREF="9s7o1d.htm"><B>GetSysColor</B></A>, <A HREF="1mejqb..htm"><B>OutputProc</B></A>, <A HREF="1hz4b4.htm"><B>SetTextColor</B></A>, <A HREF="2mcwnzm.htm"><B>TabbedTextOut</B></A>, <A HREF="mwueko.htm"><B>TextOut</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
