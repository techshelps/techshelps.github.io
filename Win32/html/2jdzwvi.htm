<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Exchanging Cryptographic Keys</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<H1><A NAME="2jdzwvi"></A>Exchanging Cryptographic Keys</H1>

<P>This section discusses those situations when you must export keys from the secure environment of the cryptographic service provider (CSP) into your application's data space. Keys that have been exported are stored in encrypted data structures known as <I>key blobs. </I>These are discussed in the "Key Blobs Explained" section.</P>

<P>There are two specific situations when it is necessary to export keys:</P>

<P>·<I>You want to save a session key for later use by your application</I>. For example, if your application has just encrypted a database file and you want your application to decrypt this file at a later time, your application is responsible for storing the encryption key. This is necessary because CSPs do not preserve symmetric keys from session to session.</P>

<P>·<I>You want to send a key to someone else.</I> This would be much easier (for your application) if the respective CSPs could communicate directly, but they cannot. This means the key has to be <I>exported</I> from your CSP, transmitted by your application to the destination application, and then <I>imported</I> into the destination CSP. If you don't trust the communication path, this can become somewhat complicated. However, this is covered in the next few sections.</P>

<P></P>

<P></P>

<P><B>Note</B>  This section assumes that users (or CryptoAPI client) already possess their own set of public/private key pairs. Instructions for creating these can be found in the section <A HREF="ea82_u.htm">Generating Cryptographic Keys</A>.</P>

<P></P>

</BODY>
</HTML>
