<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>FSCTL_LOCK_VOLUME</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1_dusdx"></A><B>FSCTL_LOCK_VOLUME  <A HREF="3vibca.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="16zsour.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="4q92u.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>FSCTL_LOCK_VOLUME</B> <A HREF="64ie_y8.htm"><B>DeviceIoControl</B></A><B> </B>operation locks a volume. A locked volume can be accessed only through handles to the file object (*<I>hDevice</I>) that locks the volume.</P>

<P>dwIoControlCode = FSCTL_LOCK_VOLUME;   // operation code  </P>

<P>lpInBuffer = NULL; // pointer to input buffer; not used; must be NULL </P>

<P>nInBufferSize = 0; // size of input buffer; not used; must be zero </P>

<P>lpOutBuffer ;      // pointer to output buffer; not used; must be NULL </P>

<P>nOutBufferSize ;   // size of output buffer; not used; must be zero </P>

<P>lpBytesReturned ;  // pointer to DWORD used by DeviceIoControl function </P>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpInBuffer</I></P>

<P>Points to an input buffer. Not used with this operation. Set to NULL. </P>

<P><I>nInBufferSize</I></P>

<P>Specifies the size, in bytes, of the buffer pointed to by <I>lpInBuffer</I>. Not used with this operation. Set to zero. </P>

<P><I>lpOutBuffer</I></P>

<P>Points to an output buffer. Not used with this operation. Set to NULL.</P>

<P><I>nOutBufferSize</I></P>

<P>Specifies the size, in bytes, of the buffer pointed to by <I>lpOutBuffer</I>. Not used with this operation. Set to zero.  </P>

<P><I>lpBytesReturned</I></P>

<P>Pointer to a <B>DWORD</B>. This value cannot be NULL. Although the <B>FSCTL_LOCK_VOLUME</B> operation produces no output data and <I>lpOutBuffer</I> should be NULL, the <A HREF="64ie_y8.htm"><B>DeviceIoControl</B></A> function uses the variable pointed to by <I>lpBytesReturned</I>. After the operation, the value of this variable is without meaning.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the operation succeeds, <B>DeviceIoControl</B> returns TRUE. </P>

<P>If the operation fails, <B>DeviceIoControl</B> returns FALSE. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The <I>hDevice </I>handle passed to <B>DeviceIoControl</B> must be a handle to a volume, opened for direct access. An application can obtain such a handle by calling <B>CreateFile</B> with <I>lpFileName</I> set to a string that looks like this:</P>

<P>\\.\X: </P>

<P></P>

<P>where X is a hard-drive partition letter, floppy disk drive, or CD-ROM drive. The application must also specify the FILE_SHARE_READ and FILE_SHARE_WRITE flags in the <I>dwShareMode</I> parameter of <A HREF="xn35yd.htm"><B>CreateFile</B></A>.</P>

<P>The <B>FSCTL_LOCK_VOLUME</B> operation fails if there are any open files on the volume. Conversely, success of this operation indicates there are no open files.</P>

<P>The operation is useful for applications that need exclusive access to a volume for a period of time¾for example, disk utility programs.</P>

<P>A locked volume remains locked until one of the following occurs:</P>

<P>·The application invokes the <A HREF="y1w54g.htm"><B>FSCTL_UNLOCK_VOLUME</B></A><B> DeviceIoControl</B> operation to unlock the volume.</P>

<P>·The handle closes, either directly through <B>CloseHandle</B>, or indirectly when a process terminates.</P>

<P></P>

<P>The system flushes all cached data to the volume before locking it. For example, any data held in a lazy-write cache is written to the volume.</P>

<P><B>See Also</B></P>

<P><A HREF="ngwwie.htm"><B>CloseHandle</B></A>, <A HREF="xn35yd.htm"><B>CreateFile</B></A>, <A HREF="64ie_y8.htm"><B>DeviceIoControl</B></A>, <A HREF="y1w54g.htm"><B>FSCTL_UNLOCK_VOLUME</B></A></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
