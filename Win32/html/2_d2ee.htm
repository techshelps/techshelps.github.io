<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>LocalAlloc</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2_d2ee"></A><B>LocalAlloc  <A HREF="5_68ap.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="7gqv3r.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="9cqndc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>LocalAlloc</B> function allocates the specified number of bytes from the heap. In the linear Win32 API environment, there is no difference between the local heap and the global heap. </P>

<P><B>HLOCAL LocalAlloc(</B></P>

<TABLE cols=2 width=339>

<TR VALIGN="top">
<TD width=38%><B>UINT</B> <I>uFlags</I><B>,</B></TD>
<TD width=62%>// allocation attributes </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    UINT</B> <I>uBytes</I> </TD>
<TD width=62%>// number of bytes to allocate  </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>   );</B></TD>
<TD width=62%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>uFlags</I></P>

<P>Specifies how to allocate memory. If zero is specified, the default is the LMEM_FIXED flag. Except for the incompatible combinations that are specifically noted, any combination of the following flags can be specified. To indicate whether the function allocates fixed or movable memory, specify one of the first six flags: </P>

<TABLE cols=6>

<TR VALIGN="top">
<TD colspan=2 width=13%><B>Flag</B></TD>
<TD colspan=3 width=74%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=15%>LMEM_FIXED</TD>
<TD colspan=3 width=85%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD colspan=3 width=64%>Allocates fixed memory. This flag cannot be combined with the LMEM_MOVEABLE or LMEM_DISCARDABLE flag. The return value is a pointer to the memory block. To access the memory, the calling process simply casts the return value to a pointer.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=15%>LMEM_MOVEABLE</TD>
<TD colspan=3 width=85%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD colspan=3 width=64%>Allocates movable memory. This flag cannot be combined with the LMEM_FIXED flag. The return value is the handle of the memory object. The handle is a 32-bit quantity that is private to the calling process. To translate the handle into a pointer, use the <A HREF="x6.z9d.htm"><B>LocalLock</B></A> function.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=15%>LPTR</TD>
<TD colspan=3 width=85%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD colspan=3 width=64%>Combines the LMEM_FIXED and LMEM_ZEROINIT flags.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=15%>LHND</TD>
<TD colspan=3 width=85%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD colspan=3 width=64%>Combines the LMEM_MOVEABLE and LMEM_ZEROINIT flags.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=15%>NONZEROLHND</TD>
<TD colspan=3 width=85%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD colspan=3 width=64%>Same as the LMEM_MOVEABLE flag.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=15%>NONZEROLPTR</TD>
<TD colspan=3 width=85%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD colspan=3 width=64%>Same as the LMEM_FIXED flag.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=15%>LMEM_DISCARDABLE</TD>
<TD colspan=3 width=85%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD colspan=3 width=64%>Allocates discardable memory. This flag cannot be combined with the LMEM_FIXED flag. Some Win32-based applications may ignore this flag.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=15%>LMEM_NOCOMPACT</TD>
<TD colspan=3 width=85%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD colspan=3 width=64%>Does not compact or discard memory to satisfy the allocation request.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=15%>LMEM_NODISCARD</TD>
<TD colspan=3 width=85%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD colspan=3 width=64%>Does not discard memory to satisfy the allocation request.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=15%>LMEM_ZEROINIT</TD>
<TD colspan=3 width=85%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD colspan=3 width=64%>Initializes memory contents to zero.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>uBytes</I></P>

<P>Specifies the number of bytes to allocate. If this parameter is zero and the <I>uFlags</I> parameter specifies the LMEM_MOVEABLE flag, the function returns a handle to a memory object that is marked as discarded. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the handle of the newly allocated memory object.</P>

<P>If the function fails, the return value is NULL. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>If the heap does not contain sufficient free space to satisfy the request, <B>LocalAlloc</B> returns NULL. </P>

<P>The <A HREF="f12w9..htm"><B>GlobalAlloc</B></A> and <B>LocalAlloc</B> functions are limited to a combined total of 65,536 handles for GMEM_MOVEABLE and LMEM_MOVEABLE memory per process. This limitation does not apply to GMEM_FIXED or LMEM_FIXED memory. </P>

<P>If this function succeeds, it allocates at least the amount requested. If the amount allocated is greater than the amount requested, the process can use the entire amount. To determine the actual number of bytes allocated, use the <A HREF="0x7u8y.htm"><B>LocalSize</B></A> function. </P>

<P><B>See Also</B></P>

<P><A HREF="f12w9..htm"><B>GlobalAlloc</B></A>, <A HREF="0wv2ny.htm"><B>LocalFree</B></A>, <A HREF="x6.z9d.htm"><B>LocalLock</B></A>, <A HREF="4vpfqs.htm"><B>LocalReAlloc</B></A>, <A HREF="0x7u8y.htm"><B>LocalSize</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
