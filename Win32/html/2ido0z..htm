<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetTokenInformation</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2ido0z."></A><B>SetTokenInformation  <A HREF="6_b.pe.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1966ja.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="afqqmm.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SetTokenInformation</B> function sets various types of information for a specified access token. The information it sets replaces existing information. The calling process must have appropriate access rights to set the information. </P>

<P><B>BOOL SetTokenInformation(</B></P>

<TABLE cols=2 width=607>

<TR VALIGN="top">
<TD width=64%><B>HANDLE</B> <I>TokenHandle</I><B>,</B></TD>
<TD width=36%>// handle of access token</TD>
</TR>

<TR VALIGN="top">
<TD width=64%><B>    TOKEN_INFORMATION_CLASS</B> <I>TokenInformationClass</I><B>,</B></TD>
<TD width=36%>// type of information to set</TD>
</TR>

<TR VALIGN="top">
<TD width=64%><B>    LPVOID</B> <I>TokenInformation</I><B>,</B></TD>
<TD width=36%>// address of information to set </TD>
</TR>

<TR VALIGN="top">
<TD width=64%><B>    DWORD</B> <I>TokenInformationLength</I> </TD>
<TD width=36%>// size of information buffer</TD>
</TR>

<TR VALIGN="top">
<TD width=64%><B>   );</B></TD>
<TD width=36%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>TokenHandle</I></P>

<P>Identifies the access token for which information is to be set. </P>

<P><I>TokenInformationClass</I></P>

<P>Specifies a variable of the <A HREF="z2c1h2.htm"><B>TOKEN_INFORMATION_CLASS</B></A> enumerated type identifying the type of information the function sets. The valid values from <B>TOKEN_INFORMATION_CLASS</B> are TokenOwner, TokenPrimaryGroup, and TokenDefaultDacl. For more information about these values, see the description of the <I>TokenInformation</I> parameter, following. </P>

<P><I>TokenInformation</I></P>

<P>Points to a buffer containing the information set in the access token. The structure of this buffer depends on the type of information specified by the <I>TokenInformationClass</I> parameter. The following three values are valid in calls to this function: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=39%><B>Token Information Class</B></TD>
<TD width=61%><B>Structure Provided</B></TD>
</TR>

<TR VALIGN="top">
<TD width=39%>TokenOwner</TD>
<TD width=61%><A HREF="1369g97.htm"><B>TOKEN_OWNER</B></A> structure. The TOKEN_ADJUST_DEFAULT access right is needed to set owner information. A valid owner value is a user or group identifier with an attribute allowing assignment as the owner of objects.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>TokenPrimaryGroup</TD>
<TD width=61%><A HREF="21rzul3.htm"><B>TOKEN_PRIMARY_GROUP</B></A> structure. The TOKEN_ADJUST_DEFAULT access right is needed to set primary group information.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>TokenDefaultDacl</TD>
<TD width=61%><A HREF="2uqc8we.htm"><B>TOKEN_DEFAULT_DACL</B></A> structure. The TOKEN_ADJUST_DEFAULT access right is needed to set information in the default discretionary access-control list (ACL). The <B>ACL</B> structure provided as a new default discretionary ACL is not validated for correctness or consistency. If the <I>TokenInformation</I> parameter is NULL, the current default discretionary ACL is removed and no replacement is established.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>The formats for the structures this function can set are listed in the following Remarks section. </P>

<P><I>TokenInformationLength</I></P>

<P>Specifies the length, in bytes, of the buffer pointed to by <I>TokenInformation</I>. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>To set privilege information, an application can call the <B>AdjustTokenPrivileges</B> function. To set a token's groups, an application can call the <B>AdjustTokenGroups</B> function. </P>

<P>Token-type information can be set only when an access token is created. </P>

<P><B>See Also</B></P>

<P><A HREF="6m1u_m2.htm"><B>AdjustTokenGroups</B></A>, <A HREF="1e0u7w4.htm"><B>AdjustTokenPrivileges</B></A>, <A HREF="kt5z95.htm"><B>GetTokenInformation</B></A>, <A HREF="1r9su.q.htm"><B>OpenProcessToken</B></A>, <A HREF="bsqiuv.htm"><B>OpenThreadToken</B></A>, <A HREF="2uqc8we.htm"><B>TOKEN_DEFAULT_DACL</B></A>, <A HREF="z2c1h2.htm"><B>TOKEN_INFORMATION_CLASS</B></A>, <A HREF="1369g97.htm"><B>TOKEN_OWNER</B></A>, <A HREF="21rzul3.htm"><B>TOKEN_PRIMARY_GROUP</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
