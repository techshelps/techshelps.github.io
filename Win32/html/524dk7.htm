<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Quick View Execution and Error Conditions</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="524dk7"></A><B>Quick View Execution and Error Conditions</B></P>

<P>The lifetime of each instance of the Quick View program consists of the following steps:</P>

<P>1.When the user chooses the Quick View or Print command, the shell starts an instance of QUIKVIEW.EXE for each selected file (by using the Win32 <A HREF="5fbj_xx.htm"><B>CreateProcess</B></A><I> </I>or <A HREF="12sap3t.htm"><B>WinExec</B></A> function). The shell may specify a show command, and Quick View passes the command to the file viewer. The command-line argument that the shell passes to Quick View has the following options.</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=24%><B>Option</B></TD>
<TD width=76%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%><B>-f:</B><I>pathname</I></TD>
<TD width=76%>Path of the file to view or print. Universal Naming Convention (UNC) filenames are allowed. If this option is not specified, Quick View terminates without displaying any messages.</TD>
</TR>

<TR VALIGN="top">
<TD width=24%><B>-v</B></TD>
<TD width=76%>File to be opened for viewing in the file viewer. If this option is specified, Quick View ignores all of the options described below. This is the default option in the absence of both <B>-v</B> and <B>-p</B>.</TD>
</TR>

<TR VALIGN="top">
<TD width=24%><B>-d</B></TD>
<TD width=76%>Quick View and the file viewer to suppress all user interface (UI) elements if <B>-p</B> is also specified. Quick View suppresses any error messages, and the file viewer should not display any dialog boxes for printing. Quick View ignores this option in the absence of <B>-p</B><I>.</I></TD>
</TR>

<TR VALIGN="top">
<TD width=24%><B>-p</B></TD>
<TD width=76%>File to be opened for printing. If <B>-v</B> is also present, Quick View ignores this option. </TD>
</TR>

<TR VALIGN="top">
<TD width=24%><B>-&amp;:</B><I>pathname</I></TD>
<TD width=76%>Printer driver to use to print the file. Quick View ignores this option in the absence of <B>-p</B>. If <B>-p</B> is present but <B>-&amp;</B> is not, Quick View instructs the file viewer to use the default printer driver. </TD>
</TR>
</TABLE><BR>

<P></P>

<P>2.Quick View starts and checks for a path on the command line. If there is no path, the user has attempted to start Quick View by itself and the program immediately terminates without displaying any messages.</P>

<P>3.Quick View parses the filename extension from the path given in the <B>-f</B> option. If no filename extension is given, Quick View proceeds to stage E1 (error condition 1). Otherwise, Quick View uses the following procedure to find a file viewer class identifier associated with the given filename extension.</P>

<P>a.Quick View attempts to open the <B>HKEY_CLASS_ROOT</B>\<B>QuickView</B>\<I>extension</I> key, where <I>extension</I> is parsed from the path.</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=11%>i.</TD>
<TD width=89%>If the filename extension maps to a type such as <B>HKEY_CLASS_ROOT</B>\<I>extension</I> = <I>typename</I> and there is a registry entry with the form <B>HKEY_CLASS_ROOT</B>\<I>typename</I>\<B>QuickView = *</B>, Quick View looks for file viewer class identifiers under <B>HKEY_CLASS_ROOT</B>\<B>QuickView</B>\<B>*</B>. If a key with the <B>HKEY_CLASS_ROOT</B>\<B>*</B>\<B>QuickView = *</B> form exists, the system attempts to use all the viewers listed under the "<B>*</B>" section. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>ii.</TD>
<TD width=89%>Otherwise, Quick View begins enumerating the file viewer class identifiers under the <B>HKEY_CLASS_ROOT</B>\<B>QuickView</B>\<I>extension</I> key. If the enumeration fails (that is, there is nothing in the registry to enumerate), Quick View closes the key and proceeds to stage E2. Otherwise, Quick View reads the first file viewer class identifier in the enumeration and proceeds to step 4.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>b.If an error occurs in step 4, the enumeration continues until all file viewer class identifiers have been tried. If no file viewer is activated, Quick View closes the key from (a) and proceeds to stage E2.</P>

<P>4.Given a class identifier of a file viewer DLL, Quick View attempts to create an instance of a file viewer object of the given class by using the following procedure.</P>

<P>a.Quick View calls a<B> </B>function to create an instance of a file viewer object, specifying parameters that include the class identifier and the IID_IPersistFile interface identifier. This instructs OLE to load the DLL listed under the class identifier's <B>InprocServer32</B> subkey, obtain an instance of the object from the DLL, and return an <B>IPersistFile</B> interface pointer to the object. If the instance cannot be created because of lack of memory, Quick View proceeds to stage E4. If it fails for some other reason, Quick View proceeds to stage E3. (Note that, because DLL objects are involved, any call to <B>QueryInterface</B> will not fail with REGDB_IID_NOTREG, which typically signals a corrupted registry. That error is generated only when LRPC proxies and stubs are involved.)</P>

<P>b.Given the <B>IPersistFile</B> interface pointer <I>pIPersistFile</I>, Quick View calls the <B>Load</B> member function of the <B>IPersistFile</B> interface, specifying the path of the file and the STGM_READ and STGM_SHARE_DENY_NONE values, which instruct the object to open the file for read access. If <B>Load</B> fails, Quick View calls the <B>Release</B> member function of <I>pIPersistFile</I> and proceeds to stage E4 if the error is due to a lack of memory. Otherwise, Quick View proceeds to stage E3.</P>

<P>c.Quick View obtains the file viewer object's <A HREF="33s7zao.htm"><B>IFileViewer</B></A> interface by specifying the IID_IFileViewer interface identifier in a call to the <B>QueryInterface</B> member function of <I>pIPersistFile</I>. Quick View calls the <B>Release</B> member function of <I>pIPersistFile</I>, regardless of the outcome. If this call fails due to lack of memory, Quick View proceeds to stage E4. Otherwise, Quick View proceeds to stage E3.</P>

<P>d1.If the <B>-v</B> option was present or both the <B>-v</B><I> </I>and <B>-p</B> options were absent, Quick View calls the <B>ShowInitialize</B> member function of <I>pIFileViewer</I>, which instructs the file viewer to load the file and perform any preshowing initialization that is prone to failure (including the creation of windows, the loading of resources, and so on). This is the file viewer's one chance to fail. If it fails, Quick View proceeds to stage E4 if the error is due to lack of memory or to stage E3 otherwise. If <B>ShowInitialize</B> succeeds, Quick View calls the <B>Show</B> member function of <I>pIFileViewer</I>, specifying the show command that was passed to Quick View's <A HREF="12si984.htm"><B>WinMain</B></A> function. <B>Show</B> does not return until the user closes the file viewer, and it always returns NOERROR in that case. If <B>Show</B> is called before <B>ShowInitialize</B>, it returns E_UNEXPECTED.</P>

<P>d2.If the <B>-p</B> option was present (and the <B>-v</B> option was absent), Quick View calls the <B>PrintTo</B> member function of <I>pIFileViewer</I> specifying the path of the printer driver provided in the <B>-&amp;</B> option (or NULL if <B>-&amp;</B> was absent) and a value indicating if the <B>-d</B> option was present on the command line (UI suppression flag). <B>PrintTo</B> does not return until printing is complete or an error occurs. If an error occurs, the file viewer is responsible for notifying the user if the UI suppression flag is FALSE<I>.</I></P>

<P>e.When <B>Show</B><I> </I>or <B>PrintTo</B><I> </I>returns (whichever was called in steps d1 or d2), Quick View calls the <B>Release</B> member function of <I>pIFileViewer</I>, regardless of the return value. If the file viewer successfully executed the <B>IFileViewer::ShowInitialize</B> member function, the <B>Release</B> member function will not fail. <B>Release</B> fails only if it is called before <B>ShowInitialize</B>. If <B>PrintTo</B><I> </I>fails but the <B>-d</B> option was not specified on the command line, Quick View assumes that the file viewer displayed a message to indicate printing failed, and Quick View fails without displaying a message in that case. In any case, Quick View proceeds to step 5.</P>

<P>5.Quick View releases any interface pointers it may have had and calls <B>OleUninitialize</B>. Quick View then terminates normally.</P>

<P>Quick View may encounter these four error conditions (stages E1 through E4) during the lifetime of an instance.</P>

<P>E1.If Quick View fails to associate the path with a file viewer class identifier (using a filename extension), it displays this message. </P>

<P>There are no viewers for this type of file. Would you like to try the default viewers.  </P>

<P></P>

<P>If the user clicks No, Quick View terminates. If the user clicks Yes, Quick View displays the Searching dialog box, enumerates all registered file viewers (regardless of file type or filename extension ), and attempts to have each one load and display the file. Quick View tries each file viewer of a given class identifier once. If no file viewer successfully displays the file, Quick View removes the Searching dialog box and displays this message.</P>

<P>Error opening or reading file.  </P>

<P></P>

<P>When the user closes the dialog box, Quick View terminates. </P>

<P>E2. If Quick View successfully determines the file type but fails to enumerate any file viewers associated with the filename extension, it displays the Searching dialog box and attempts to have each registered viewer display the file, trying each file viewer class identifier once. If that fails, the Quick View removes the Searching dialog box and displays this message.</P>

<P>There are no viewers capable of viewing &lt;human-readable document type&gt; files.  </P>

<P></P>

<P>When the user closes the dialog box, Quick View terminates. </P>

<P>E3.If Quick View successfully locates an initial file viewer but fails to view the file for any reason other than an out of memory condition, Quick View displays the Searching dialog box and continues enumerating viewers under the class identifier or filename extension key currently in use (steps 3d or 4c). If Quick View tries all viewers registered for the type unsuccessfully, processing continues as in stage E2 by trying all registered viewers regardless of registered type.</P>

<P>E4.If an out of memory condition occurs for one file viewer, it is likely that other viewers will not succeed either. In that case, Quick View displays a dialog box (using MB_ICONEXCLAMATION) with this message.</P>

<P>There is not enough memory to view or print &lt;filename&gt;. Quit one or more files or programs, and then try again.  </P>

<P></P>

<P>A file viewer can return a number of error values to Quick View. When Quick View receives an error value, it displays an error message. Quick View recognizes the following error values.</P>

<P>FV_E_BADFILE ((HRESULT)0x8534E102L)<BR>
FV_E_EMPTYFILE((HRESULT)0x8534E108L)<BR>
FV_E_FILEOPENFAILED((HRESULT)0x8534E105L)<BR>
FV_E_INVALIDID((HRESULT)0x8534E106L)<BR>
FV_E_MISSINGFILES((HRESULT)0x8534E104L)<BR>
FV_E_NOFILTER((HRESULT)0x8534E100L)<BR>
FV_E_NONSUPPORTEDTYPE((HRESULT)0x8534E101L)<BR>
FV_E_NOVIEWER ((HRESULT)0x8534E10AL)<BR>
FV_E_OUTOFMEMORY((HRESULT)0x8534E107L)<BR>
FV_E_PROTECTEDFILE((HRESULT)0x8534E109L)<BR>
FV_E_UNEXPECTED((HRESULT)0x8534E103L)</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
