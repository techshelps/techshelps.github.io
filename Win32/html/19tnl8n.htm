<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetFileSize</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="19tnl8n"></A><B>GetFileSize  <A HREF="4alkxbn.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qnj9so.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1f83g2.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetFileSize</B> function retrieves the size, in bytes, of the specified file. </P>

<P><B>DWORD GetFileSize(</B></P>

<TABLE cols=2 width=483>

<TR VALIGN="top">
<TD width=43%><B>HANDLE</B> <I>hFile</I><B>,</B></TD>
<TD width=57%>// handle of file to get size of</TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    LPDWORD</B> <I>lpFileSizeHigh</I> </TD>
<TD width=57%>// address of high-order word for file size</TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>   );</B></TD>
<TD width=57%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hFile</I></P>

<P>Specifies an open handle of the file whose size is being returned. The handle must have been created with either GENERIC_READ or GENERIC_WRITE access to the file. </P>

<P><I>lpFileSizeHigh</I></P>

<P>Points to the variable where the high-order word of the file size is returned. This parameter can be NULL if the application does not require the high-order word. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the low-order doubleword of the file size, and, if <I>lpFileSizeHigh</I> is non-NULL, the function puts the high-order doubleword of the file size into the variable pointed to by that parameter. </P>

<P>If the function fails and <I>lpFileSizeHigh</I> is NULL, the return value is 0xFFFFFFFF. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P>If the function fails and <I>lpFileSizeHigh</I> is non-NULL, the return value is 0xFFFFFFFF and <B>GetLastError</B> will return a value other than NO_ERROR. </P>

<P><B>Remarks</B></P>

<P>You cannot use the <B>GetFileSize</B> function with a handle of a nonseeking device such as a pipe or a communications device. To determine the file type for <I>hFile</I>, use the <A HREF="3xntz68.htm"><B>GetFileType</B></A> function. </P>

<P>The <B>GetFileSize </B>function obtains the uncompressed size of a file. Use the <A HREF="4onlz_a.htm"><B>GetCompressedFileSize</B></A> function to obtain the compressed size of a file.</P>

<P>Note that if the return value is 0xFFFFFFFF and <I>lpFileSizeHigh</I> is non-NULL, an application must call <A HREF="11c2vs7.htm"><B>GetLastError</B></A> to determine whether the function has succeeded or failed. The following sample code illustrates this point: </P>

<P>//  </P>

<P>// Case One: calling the function with </P>

<P>//           lpFileSizeHigh == NULL </P>

<P></P>

<P>// Try to obtain hFile's size </P>

<P>dwSize = GetFileSize (hFile, NULL) ; </P>

<P></P>

<P>// If we failed ... </P>

<P>if (dwSize == 0xFFFFFFFF) { </P>

<P></P>

<P>// Obtain the error code. </P>

<P>dwError = GetLastError() ; </P>

<P></P>

<P>// Deal with that failure. </P>

<P>. </P>

<P>. </P>

<P>. </P>

<P></P>

<P>} // End of error handler </P>

<P></P>

<P></P>

<P>// </P>

<P>// Case Two: calling the function with </P>

<P>//           lpFileSizeHigh != NULL </P>

<P></P>

<P>// Try to obtain hFile's huge size. </P>

<P>dwSizeLow = GetFileSize (hFile, &amp; dwSizeHigh) ; </P>

<P></P>

<P>// If we failed ... </P>

<P>if (dwSizeLow == 0xFFFFFFFF </P>

<P>&amp;&amp; </P>

<P>(dwError = GetLastError()) != NO_ERROR ){ </P>

<P></P>

<P>// Deal with that failure. </P>

<P>. </P>

<P>. </P>

<P>. </P>

<P></P>

<P>} // End of error handler. </P>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="4onlz_a.htm"><B>GetCompressedFileSize</B></A>, <A HREF="3xntz68.htm"><B>GetFileType</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
