<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>RegCreateKey</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="ioabqx"></A><B>RegCreateKey  <A HREF="2e_6.z.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1y7hnby.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="vm.h_d.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>RegCreateKey</B> function creates the specified key. If the key already exists in the registry, the function opens it. This function is provided for compatibility with Windows version 3.1. Win32-based applications should use the <A HREF=".5u9k7.htm"><B>RegCreateKeyEx</B></A> function. </P>

<P><B>LONG RegCreateKey(</B></P>

<TABLE cols=2 width=434>

<TR VALIGN="top">
<TD width=40%><B>HKEY</B> <I>hKey</I><B>,</B></TD>
<TD width=60%>// handle of an open key </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    LPCTSTR</B> <I>lpSubKey</I><B>,</B></TD>
<TD width=60%>// address of name of subkey to open </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    PHKEY</B> <I>phkResult</I> </TD>
<TD width=60%>// address of buffer for opened handle </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>   );</B></TD>
<TD width=60%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hKey</I></P>

<P>Identifies a currently open key or any of the following predefined reserved handle values: </P>

<P><B>HKEY_CLASSES_ROOT</B><BR>
<B>HKEY_CURRENT_USER</B><BR>
<B>HKEY_LOCAL_MACHINE</B><BR>
<B>HKEY_USERS</B></P>

<P>The key opened or created by this function is a subkey of the key identified by <I>hKey</I>. </P>

<P><I>lpSubKey</I></P>

<P>Points to a null-terminated string specifying the name of a key that this function opens or creates. This key must be a subkey of the key identified by the <I>hKey</I> parameter. </P>

<P>If <I>hKey</I> is one of the predefined keys, <I>lpSubKey</I> may be NULL. In that case, the handle returned by using <I>phkResult</I> is the same <I>hKey</I> handle passed in to the function. </P>

<P><I>phkResult</I></P>

<P>Points to a variable that receives the handle of the opened or created key. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is ERROR_SUCCESS.</P>

<P>If the function fails, the return value is a nonzero error code defined in WINERROR.H. You can use the <A HREF="n7qrmp.htm"><B>FormatMessage</B></A> function with the FORMAT_MESSAGE_FROM_SYSTEM flag to get a generic description of the error.</P>

<P><B>Remarks</B></P>

<P>An application can use the <B>RegCreateKey</B> function to create several keys at once. For example, an application can create a subkey four levels deep at the same time as the three preceding subkeys by specifying a string of the following form for the <I>lpSubKey</I> parameter: </P>

<P><I>subkey1</I><B>\</B><I>subkey2</I><B>\</B><I>subkey3</I><B>\</B><I>subkey4</I></P>

<P>The key identified by the <I>hKey</I> parameter must have been opened with KEY_CREATE_SUB_KEY access (KEY_WRITE access includes KEY_CREATE_SUB_KEY access). </P>

<P>If the <I>lpSubKey</I> parameter is the address of an empty string, the function opens and then passes back the key identified by the <I>hKey</I> parameter.<I> </I></P>

<P><B>See Also</B></P>

<P><A HREF="0f79.0.htm"><B>RegCloseKey</B></A>, <A HREF=".5u9k7.htm"><B>RegCreateKeyEx</B></A>, <A HREF="kr5n7j.htm"><B>RegDeleteKey</B></A>, <A HREF="wg.8d.htm"><B>RegOpenKey</B></A>, <A HREF="rz_3fo.htm"><B>RegOpenKeyEx</B></A>, <A HREF="10hyuh_.htm"><B>RegSetValue</B></A> </P>

</BODY>
</HTML>
