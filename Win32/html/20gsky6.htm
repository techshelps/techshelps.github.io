<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>OpenService</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="20gsky6"></A><B>OpenService  <A HREF="19yt49.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="12c8zrk.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="we4jtq.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>OpenService</B> function opens a handle to an existing service. </P>

<P><B>SC_HANDLE OpenService(</B></P>

<TABLE cols=2 width=525>

<TR VALIGN="top">
<TD width=41%><B>SC_HANDLE</B> <I>hSCManager</I><B>,</B></TD>
<TD width=59%>// handle to service control manager database  </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><B>    LPCTSTR</B> <I>lpServiceName</I><B>,</B></TD>
<TD width=59%>// pointer to name of service to start </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><B>    DWORD</B> <I>dwDesiredAccess</I> </TD>
<TD width=59%>// type of access to service </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><B>   );</B></TD>
<TD width=59%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hSCManager</I></P>

<P>Identifies the service control manager (SCM) database. The <A HREF="nbxjug.htm"><B>OpenSCManager</B></A> function returns this handle. </P>

<P><I>lpServiceName</I></P>

<P>Points to a null-terminated string that names the service to open. The maximum string length is 256 characters. The SCM database preserves the case of the characters, but service name comparisons are always case insensitive. A slash (/), backslash (\), comma, and space are invalid service name characters. </P>

<P><I>dwDesiredAccess</I></P>

<P>Specifies the access to the service. Before granting the requested access, the system checks the access token of the calling process against the discretionary access-control list of the security descriptor associated with the service object. Any or all of the following service object access types can be specified: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=62%><B>Access</B></TD>
<TD width=38%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=62%>SERVICE_ALL_ACCESS</TD>
<TD width=38%>Includes STANDARD_RIGHTS_REQUIRED in addition to all of the access types listed in this table.</TD>
</TR>

<TR VALIGN="top">
<TD width=62%>SERVICE_CHANGE_CONFIG</TD>
<TD width=38%>Enables calling of the <A HREF="5x.__7b.htm"><B>ChangeServiceConfig</B></A> function to change the service configuration.</TD>
</TR>

<TR VALIGN="top">
<TD width=62%>SERVICE_ENUMERATE_DEPENDENTS</TD>
<TD width=38%>Enables calling of the <A HREF="w540t9.htm"><B>EnumDependentServices</B></A> function to enumerate all the services dependent on the service.</TD>
</TR>

<TR VALIGN="top">
<TD width=62%>SERVICE_INTERROGATE</TD>
<TD width=38%>Enables calling of the <A HREF="2nu_3f.htm"><B>ControlService</B></A> function to ask the service to report its status immediately.</TD>
</TR>

<TR VALIGN="top">
<TD width=62%>SERVICE_PAUSE_CONTINUE</TD>
<TD width=38%>Enables calling of the <B>ControlService</B> function to pause or continue the service.</TD>
</TR>

<TR VALIGN="top">
<TD width=62%>SERVICE_QUERY_CONFIG</TD>
<TD width=38%>Enables calling of the <A HREF="1j3lx3w.htm"><B>QueryServiceConfig</B></A> function to query the service configuration.</TD>
</TR>

<TR VALIGN="top">
<TD width=62%>SERVICE_QUERY_STATUS</TD>
<TD width=38%>Enables calling of the <B>QueryServiceStatus</B> function to ask the service control manager about the status of the service.</TD>
</TR>

<TR VALIGN="top">
<TD width=62%>SERVICE_START</TD>
<TD width=38%>Enables calling of the <A HREF="1osmk1p.htm"><B>StartService</B></A> function to start the service.</TD>
</TR>

<TR VALIGN="top">
<TD width=62%>SERVICE_STOP</TD>
<TD width=38%>Enables calling of the <A HREF="2nu_3f.htm"><B>ControlService</B></A> function to stop the service.</TD>
</TR>

<TR VALIGN="top">
<TD width=62%>SERVICE_USER_DEFINED_CONTROL</TD>
<TD width=38%>Enables calling of the <B>ControlService</B> function to specify a user-defined control code.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>STANDARD_RIGHTS_REQUIRED enables the following service object access types: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=47%><B>Standard rights</B></TD>
<TD width=53%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=47%>DELETE</TD>
<TD width=53%>Enables calling of the <A HREF=".zao5x.htm"><B>DeleteService</B></A> function to delete the service.</TD>
</TR>

<TR VALIGN="top">
<TD width=47%>READ_CONTROL</TD>
<TD width=53%>Enables calling of the <A HREF="1f_vgrd.htm"><B>QueryServiceObjectSecurity</B></A> function to query the security descriptor of the service object.</TD>
</TR>

<TR VALIGN="top">
<TD width=47%>WRITE_DAC|WRITE_OWNER</TD>
<TD width=53%>Enables calling of the <A HREF="e9.1kc.htm"><B>SetServiceObjectSecurity</B></A> function to modify the security descriptor of the service object.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>The <I>dwDesiredAccess</I> parameter can specify any or all of the following generic access types: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=34%><B>Generic access</B></TD>
<TD width=66%><B>Service access</B></TD>
</TR>

<TR VALIGN="top">
<TD width=34%>GENERIC_READ</TD>
<TD width=66%>Combines the following access: STANDARD_RIGHTS_READ, SERVICE_QUERY_CONFIG, SERVICE_QUERY_STATUS, SERVICE_INTERROGATE, and SERVICE_ENUMERATE_DEPENDENTS.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>GENERIC_WRITE</TD>
<TD width=66%>Combines the following access: STANDARD_RIGHTS_WRITE and SERVICE_CHANGE_CONFIG.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>GENERIC_EXECUTE</TD>
<TD width=66%>Combines the following access: STANDARD_RIGHTS_EXECUTE, SERVICE_START, SERVICE_STOP, SERVICE_PAUSE_CONTINUE, and SERVICE_USER_DEFINED_CONTROL.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is a handle to the service.</P>

<P>If the function fails, the return value is NULL. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Errors</B></P>

<P>The following error codes can be set by the service control manager. Others can be set by the registry functions that are called by the service control manager. </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=54%><B>Error code</B></TD>
<TD width=46%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=54%>ERROR_ACCESS_DENIED</TD>
<TD width=46%>The specified service control manager database handle does not have access to the service.</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>ERROR_INVALID_HANDLE</TD>
<TD width=46%>The specified handle is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>ERROR_INVALID_NAME</TD>
<TD width=46%>The specified service name is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>ERROR_SERVICE_DOES_NOT_EXIST</TD>
<TD width=46%>The specified service does not exist.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Remarks</B></P>

<P>The calling process can use the returned handle to identify the service in the following functions, if the appropriate access rights are enabled: </P>

<P><B>ChangeServiceConfig</B><BR>
<B>ControlService</B><BR>
<B>DeleteService</B><BR>
<B>EnumDependentServices</B><BR>
<B>QueryServiceConfig</B><BR>
<B>QueryServiceObjectSecurity</B><BR>
<B>QueryServiceStatus</B><BR>
<B>SetServiceObjectSecurity</B><BR>
<B>StartService</B></P>

<P>The returned handle is only valid for the process that called <B>OpenService</B>. It can be closed by calling the <B>CloseServiceHandle</B> function. </P>

<P><B>See Also</B></P>

<P><A HREF="5x.__7b.htm"><B>ChangeServiceConfig</B></A>, <A HREF="2nu_3f.htm"><B>ControlService</B></A>, <A HREF="2wng26.htm"><B>CreateService</B></A>, <A HREF=".zao5x.htm"><B>DeleteService</B></A>, <A HREF="w540t9.htm"><B>EnumDependentServices</B></A>, <A HREF="nbxjug.htm"><B>OpenSCManager</B></A>, <A HREF="1j3lx3w.htm"><B>QueryServiceConfig</B></A>, <A HREF="1f_vgrd.htm"><B>QueryServiceObjectSecurity</B></A>, <A HREF="jps..c.htm"><B>QueryServiceStatus</B></A>, <A HREF="e9.1kc.htm"><B>SetServiceObjectSecurity</B></A>, <A HREF="1osmk1p.htm"><B>StartService</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
