<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>FoldString</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1p4hsgd"></A><B>FoldString  <A HREF="3xk._lb.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1r0c_vq.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="21act6p.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>FoldString</B> function maps one string to another, performing a specified transformation option. </P>

<P><B>int FoldString(</B></P>

<TABLE cols=2 width=513>

<TR VALIGN="top">
<TD width=35%><B>DWORD</B> <I>dwMapFlags</I><B>,</B></TD>
<TD width=65%>// mapping transformation options </TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>    LPCTSTR</B> <I>lpSrcStr</I><B>,</B></TD>
<TD width=65%>// pointer to source string </TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>    int</B> <I>cchSrc</I><B>,</B></TD>
<TD width=65%>// size of source string, in bytes or characters</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>    LPTSTR</B> <I>lpDestStr</I><B>,</B></TD>
<TD width=65%>// pointer to destination buffer </TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>    int</B> <I>cchDest</I> </TD>
<TD width=65%>// size of destination buffer, in bytes or characters </TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>   );</B></TD>
<TD width=65%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>dwMapFlags</I></P>

<P>A set of bit flags that indicate the type of transformation to be used during mapping. This value can be a combination of the following bit-flag constants: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=37%><B>Option</B></TD>
<TD width=63%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%>MAP_FOLDCZONE</TD>
<TD width=63%>Fold compatibility zone characters into standard Unicode equivalents. For information about compatibility zone characters, see the following Remarks section.</TD>
</TR>

<TR VALIGN="top">
<TD width=37%>MAP_FOLDDIGITS</TD>
<TD width=63%>Map all digits to Unicode characters 0 through 9.</TD>
</TR>

<TR VALIGN="top">
<TD width=37%>MAP_PRECOMPOSED</TD>
<TD width=63%>Map accented characters to precomposed characters, in which the accent and base character are combined into a single character value. This value cannot be combined with MAP_COMPOSITE.</TD>
</TR>

<TR VALIGN="top">
<TD width=37%>MAP_COMPOSITE</TD>
<TD width=63%>Map accented characters to composite characters, in which the accent and base character are represented by two character values. This value cannot be combined with MAP_PRECOMPOSED.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpSrcStr</I></P>

<P>Points to the string to be mapped. </P>

<P><I>cchSrc</I></P>

<P>Specifies the size, in bytes (ANSI version) or characters (Unicode version), of the <I>lpSrcStr</I> buffer. If <I>cchSrc</I> is -1, <I>lpSrcStr</I> is assumed to be null-terminated, and the length is calculated automatically. </P>

<P><I>lpDestStr</I></P>

<P>Points to the buffer to store the mapped string. </P>

<P><I>cchDest</I></P>

<P>Specifies the size, in bytes (ANSI version) or characters (Unicode version), of the <I>lpDestStr</I> buffer. If <I>cchDest</I> is zero, the function returns the number of bytes or characters required to hold the mapped string, and the buffer pointed to by <I>lpDestStr</I> is not used.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the number of bytes (ANSI version) or characters (Unicode version) written to the destination buffer, or if the <I>cchDest</I> parameter is zero, the number of bytes or characters required to hold the mapped string. </P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. <B>GetLastError</B> may return one of the following error codes:</P>

<P>ERROR_INSUFFICIENT_BUFFER<BR>
ERROR_INVALID_FLAGS<BR>
ERROR_INVALID_PARAMETER</P>

<P><B>Remarks</B></P>

<P>The mapped string is null-terminated if the source string is null-terminated. </P>

<P>The <I>lpSrcStr</I> and <I>lpDestStr</I> pointers must not be the same. If they are the same, the function fails and <B>GetLastError</B> returns ERROR_INVALID_PARAMETER. </P>

<P>The compatibility zone in Unicode consists of characters in the range 0xF900 through 0xFFEF that are assigned to characters from other character-encoding standards but are actually variants of characters that are already in Unicode. The compatibility zone is used to support round-trip mapping to these standards. Applications can use the MAP_FOLDCZONE flag to avoid supporting the duplication of characters in the compatibility zone. </P>

<P><B>See Also</B></P>

<P><A HREF="2kbvc5.htm"><B>LCMapString</B></A>, <A HREF="7s0y95.htm"><B>CompareString</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
