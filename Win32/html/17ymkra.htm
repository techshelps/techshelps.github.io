<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Registering a Control Handler Function</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="17ymkra"></A><B>Registering a Control Handler Function</B></P>

<P>This section shows an example of the <A HREF="6gcpc8.htm"><B>SetConsoleCtrlHandler</B></A> function that is used to install a control handler. </P>

<P>When a CTRL+C signal is received, the control handler returns TRUE, indicating that it has handled the signal. Doing this prevents other control handlers from being called. </P>

<P>When a CTRL_CLOSE_EVENT signal is received, the control handler returns TRUE, causing the system to display a dialog box that gives the user the choice of terminating the process and closing the console or allowing the process to continue execution. If the user chooses not to terminate the process, the system closes the console when the process finally terminates. </P>

<P>When a CTRL+BREAK, CTRL_LOGOFF_EVENT, or CTRL_SHUTDOWN_EVENT signal is received, the control handler returns FALSE. Doing this causes the signal to be passed to the next control handler function. If no other control handlers have been registered or none of the registered handlers returns TRUE, the default handler will be used, resulting in the process being terminated. </P>

<P>BOOL CtrlHandler(DWORD fdwCtrlType) {  </P>

<P>switch (fdwCtrlType) { </P>

<P></P>

<P>/* Handle the CTRL+C signal. */ </P>

<P></P>

<P>case CTRL_C_EVENT: </P>

<P></P>

<P>Beep(1000, 1000); </P>

<P>return TRUE; </P>

<P></P>

<P>/* CTRL+CLOSE: confirm that the user wants to exit. */ </P>

<P></P>

<P>case CTRL_CLOSE_EVENT: </P>

<P></P>

<P>return TRUE; </P>

<P></P>

<P>/* Pass other signals to the next handler. */ </P>

<P></P>

<P>case CTRL_BREAK_EVENT: </P>

<P></P>

<P>case CTRL_LOGOFF_EVENT: </P>

<P></P>

<P>case CTRL_SHUTDOWN_EVENT: </P>

<P></P>

<P>default: </P>

<P></P>

<P>return FALSE; </P>

<P></P>

<P>} </P>

<P></P>

<P>} </P>

<P></P>

<P>VOID main(void) { </P>

<P>BOOL fSuccess; </P>

<P></P>

<P>fSuccess = SetConsoleCtrlHandler( </P>

<P>(PHANDLER_ROUTINE) CtrlHandler,  /* handler function */ </P>

<P>TRUE);                           /* add to list      */ </P>

<P>if (! fSuccess) </P>

<P>MyErrorExit("Could not set control handler"); </P>

<P></P>

</BODY>
</HTML>
