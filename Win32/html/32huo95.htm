<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>JournalRecordProc</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="32huo95"></A><B>JournalRecordProc  <A HREF="51ys9jj.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qpp.yo.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="rnpdgc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>JournalRecordProc</B> hook procedure is a callback function that records messages the system removes from the system message queue. Later, an application can use a <B>JournalPlaybackProc</B> hook procedure to play back the messages. </P>

<P><B>LRESULT CALLBACK JournalRecordProc(</B></P>

<TABLE cols=2 width=430>

<TR VALIGN="top">
<TD width=38%><B>int</B> <I>code</I><B>,</B></TD>
<TD width=62%>// hook code</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    WPARAM</B> <I>wParam</I><B>,</B></TD>
<TD width=62%>// undefined</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    LPARAM</B> <I>lParam</I> </TD>
<TD width=62%>// address of message being processed</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>   );</B></TD>
<TD width=62%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>code</I></P>

<P>Specifies how to process the message. This parameter can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=35%><B>Value</B></TD>
<TD width=65%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=35%>HC_ACTION</TD>
<TD width=65%>The <I>lParam</I> parameter points to an <A HREF="r9bm84.htm"><B>EVENTMSG</B></A> structure containing information about a message removed from the system queue. The hook procedure must record the contents of the structure by copying them to a buffer or file.  </TD>
</TR>

<TR VALIGN="top">
<TD width=35%>HC_SYSMODALOFF</TD>
<TD width=65%>A system-modal dialog box has been destroyed. The hook procedure must resume recording.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>HC_SYSMODALON</TD>
<TD width=65%>A system-modal dialog box is being displayed. Until the dialog box is destroyed, the hook procedure must stop recording.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>If <I>code</I> is less than zero, the hook procedure must pass the message to the <A HREF="2ebdbc.htm"><B>CallNextHookEx</B></A> function without further processing and should return the value returned by <B>CallNextHookEx</B>. </P>

<P><I>wParam</I></P>

<P>Specifies a NULL value. </P>

<P><I>lParam</I></P>

<P>Points to an <A HREF="r9bm84.htm"><B>EVENTMSG</B></A> structure that contains the message to be recorded. </P>

<P></P>

<P><B>Return Values</B></P>

<P>The return value is ignored. </P>

<P><B>Remarks</B></P>

<P>A <B>JournalRecordProc</B> hook procedure must copy but not modify the messages. After the hook procedure returns control to the system, the message continues to be processed. </P>

<P>An application installs a <B>JournalRecordProc</B> hook procedure by specifying the <A HREF="14lgo22.htm">WH_JOURNALRECORD hook</A> type and the address of the hook procedure in a call to the <A HREF="2d7__i2.htm"><B>SetWindowsHookEx</B></A> function. </P>

<P>A Win32 <B>JournalRecordProc</B> hook procedure does not need to live in a dynamic-link library. A Win32 <B>JournalRecordProc</B> hook procedure can live in the application itself. </P>

<P>Unlike most other global hook procedures, the <B>JournalRecordProc</B> and <A HREF="lesnkt.htm"><B>JournalPlaybackProc</B></A> hook procedures are always called in the context of the thread that set the hook. </P>

<P>An application that has installed a <B>JournalRecordProc</B> hook procedure should watch for the VK_CANCEL virtual keycode (which is implemented as the CTRL+BREAK key combination on most keyboards). This virtual keycode should be interpreted by the application as a signal that the user wishes to stop journal recording. The application should respond by ending the recording sequence and removing the <B>JournalRecordProc</B> hook procedure. Removal is important. It prevents a journaling application from locking up the system by hanging inside a hook procedure. </P>

<P>This role as a signal to stop journal recording means that a CTRL+BREAK key combination cannot itself be recorded. Since the CTRL+C key combination has no such role as a journaling signal, it can be recorded. There are two other key combinations that cannot be recorded: CTRL+ESC and CTRL+ALT+DEL. Those two key combinations cause the system to stop all journaling activities (record or playback), remove all journaling hooks, and post a <A HREF="31phbfw.htm">WM_CANCELJOURNAL</A> message to the journaling application. </P>

<P><B>JournalRecordProc</B> is a placeholder for an application-defined or library-defined function name. </P>

<P><B>See Also</B></P>

<P><A HREF="2ebdbc.htm"><B>CallNextHookEx</B></A>, <A HREF="r9bm84.htm"><B>EVENTMSG</B></A>, <A HREF="lesnkt.htm"><B>JournalPlaybackProc</B></A>, <A HREF="2d7__i2.htm"><B>SetWindowsHookEx</B></A>, <A HREF="31phbfw.htm">WM_CANCELJOURNAL</A> </P>

</BODY>
</HTML>
