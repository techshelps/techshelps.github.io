<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WaitCommEvent</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="orjgqo"></A><B>WaitCommEvent  <A HREF="jfx6s7.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="5jpun8.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="llpv25.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>WaitCommEvent</B> function waits for an event to occur for a specified communications device. The set of events that are monitored by this function is contained in the event mask associated with the device handle. </P>

<P><B>BOOL WaitCommEvent(</B></P>

<TABLE cols=2 width=547>

<TR VALIGN="top">
<TD width=45%><B>HANDLE</B> <I>hFile</I><B>,</B></TD>
<TD width=55%>// handle of communications device</TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>    LPDWORD</B> <I>lpEvtMask</I><B>,</B></TD>
<TD width=55%>// address of variable for event that occurred  </TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>    LPOVERLAPPED</B> <I>lpOverlapped</I><B>,</B> </TD>
<TD width=55%>// address of overlapped structure</TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>   );</B></TD>
<TD width=55%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hFile</I></P>

<P>Identifies the communications device. The <A HREF="xn35yd.htm"><B>CreateFile</B></A> function returns this handle. </P>

<P><I>lpEvtMask</I></P>

<P>Points to a 32-bit variable that receives a mask indicating the type of event that occurred. If an error occurs, the value is zero; otherwise, it is one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=27%><B>Value</B></TD>
<TD width=73%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=27%>EV_BREAK</TD>
<TD width=73%>A break was detected on input.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>EV_CTS</TD>
<TD width=73%>The CTS (clear-to-send) signal changed state.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>EV_DSR</TD>
<TD width=73%>The DSR (data-set-ready) signal changed state.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>EV_ERR</TD>
<TD width=73%>A line-status error occurred. Line-status errors are CE_FRAME, CE_OVERRUN, and CE_RXPARITY.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>EV_RING</TD>
<TD width=73%>A ring indicator was detected.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>EV_RLSD</TD>
<TD width=73%>The RLSD (receive-line-signal-detect) signal changed state.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>EV_RXCHAR</TD>
<TD width=73%>A character was received and placed in the input buffer.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>EV_RXFLAG</TD>
<TD width=73%>The event character was received and placed in the input buffer. The event character is specified in the device's <A HREF="2z9u_.o.htm"><B>DCB</B></A> structure, which is applied to a serial port by using the <A HREF="2tsk0g9.htm"><B>SetCommState</B></A> function.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>EV_TXEMPTY</TD>
<TD width=73%>The last character in the output buffer was sent.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpOverlapped</I></P>

<P>Points to an <A HREF="1n286m5.htm"><B>OVERLAPPED</B></A> structure. This structure is required if <I>hFile</I> was opened with FILE_FLAG_OVERLAPPED.</P>

<P>If <I>hFile</I> was opened with FILE_FLAG_OVERLAPPED, the <I>lpOverlapped</I> parameter must not be NULL. It must point to a valid <B>OVERLAPPED</B> structure. If <I>hFile</I> was opened with FILE_FLAG_OVERLAPPED and <I>lpOverlapped</I> is NULL, the function can incorrectly report that the operation is complete.</P>

<P>If hFile was opened with FILE_FLAG_OVERLAPPED and <I>lpOverlapped</I> is not NULL, <B>WaitCommEvent</B> is performed as an overlapped operation. In this case, the <B>OVERLAPPED</B> structure must contain a handle to a manual-reset event object (created by using the <A HREF="j_zbjv.htm"><B>CreateEvent</B></A> function). </P>

<P>If <I>hFile</I> handle was not opened with FILE_FLAG_OVERLAPPED, <B>WaitCommEvent</B> does not return until one of the specified events or an error occurs. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The <B>WaitCommEvent</B> function monitors a set of events for a specified communications resource. To set and query the current event mask of a communications resource, use the <A HREF="6n9__8j.htm"><B>SetCommMask</B></A> and <A HREF="gupgus.htm"><B>GetCommMask</B></A> functions. </P>

<P>If the overlapped operation cannot be completed immediately, the function returns FALSE and the <B>GetLastError</B> function returns ERROR_IO_PENDING, indicating that the operation is executing in the background. When this happens, the system sets the <B>hEvent</B> member of the <B>OVERLAPPED</B> structure to the not-signaled state before <B>WaitCommEvent</B> returns, and then it sets it to the signaled state when one of the specified events or an error occurs. The calling process can use one of the <A HREF="y2tc_3.htm">wait functions</A> to determine the event object's state and then use the <B>GetOverlappedResult</B> function to determine the results of the <B>WaitCommEvent</B> operation. <B>GetOverlappedResult</B> reports the success or failure of the operation, and the variable pointed to by the <I>lpEvtMask</I> parameter is set to indicate the event that occurred. </P>

<P>If a process attempts to change the device handle's event mask by using the <B>SetCommMask</B> function while an overlapped <B>WaitCommEvent</B> operation is in progress, <B>WaitCommEvent</B> returns immediately. The variable pointed to by the <I>lpEvtMask</I> parameter is set to zero. </P>

<P><B>See Also</B></P>

<P><A HREF="xn35yd.htm"><B>CreateFile</B></A>, <A HREF="2z9u_.o.htm"><B>DCB</B></A>, <A HREF="gupgus.htm"><B>GetCommMask</B></A>, <A HREF="kcz7oz.htm"><B>GetOverlappedResult</B></A>, <A HREF="1n286m5.htm"><B>OVERLAPPED</B></A>, <A HREF="6n9__8j.htm"><B>SetCommMask</B></A>, <A HREF="2tsk0g9.htm"><B>SetCommState</B></A> </P>

<P></P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
