<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Registering Shell Extensions</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2_5k_9g"></A><B>Registering Shell Extensions</B></P>

<P>A shell extension must be registered in the registry database. The class identifier of each handler must be registered under the <B>HKEY_CLASSES_ROOT\CLSID</B> key. The <B>CLSID</B> key contains a list of class identifier key values, such as {00030000-0000-0000-C000-000000000046}. Each class identifier key is a globally unique identifier (GUID) generated by the UUIDGEN tool. Within each class identifier key, the handler adds an <B>InProcServer32</B> key that gives the location of the handler's DLL. It is best to give the complete path for the handler; using the complete path keeps the handler independent of the current path and speeds up the load time for the DLL.</P>

<P>The information that the shell uses to associate a shell extension handler with a file type is stored under the <B>shellex</B> key. The shell also uses several other special keys under <B>HKEY_CLASSES_ROOT</B> to look for shell extensions: <B>*</B>, <B>Folder</B>, <B>Drives</B>, <B>Printers</B>, and keys for network providers. Descriptions of the keys follow:</P>

<P>·You can use the <B>*</B> key to register handlers that the shell calls whenever it creates a context menu or property sheet for a file object in the following manner.</P>

<P>HKEY_CLASSES_ROOT  </P>

<P>* = * </P>

<P>shellex </P>

<P>ContextMenuHandlers </P>

<P>{00000000-1111-2222-3333-00000000000001} </P>

<P>PropertySheetHandlers </P>

<P>{00000000-1111-2222-3333-00000000000002} </P>

<P></P>

<P>The shell uses instances of the ExtraMenu and SummaryInfo handlers to add to the context menus and property sheets for every file object. </P>

<P>·You can use <B>Folder</B> key to register a shell extension for directories in the file system. You can register context menu handlers, copy hook handlers, and property sheet handlers in the same way you register these handlers for the <B>*</B> key. An additional handler, the drag and drop handler, applies only to the <B>Folder</B> and <B>Printers</B> keys. An example showing the <B>Folder</B> key follows.</P>

<P>Folder = Folder  </P>

<P>shellex </P>

<P>DragDropHandlers </P>

<P>{00000000-1111-2222-3333-00000000000004} </P>

<P>CopyHookHandlers </P>

<P>{00000000-1111-2222-3333-00000000000005} </P>

<P></P>

<P>·You can use the <B>Drives</B> key for the same registrations as the <B>Folder</B> key, but the <B>Drives</B> key is called only for root paths (for example, C: \).</P>

<P>·The <B>Printers</B> key allows the same registrations as the <B>Folder</B> key, but it uses additional handlers for printer events, deletion or removal of printers (through the copy hook handler), and printer properties (with property sheet handlers and context menu handlers).</P>

<P>To avoid conflicts with other classes, you must use real GUIDs, not the sample strings shown in the previous examples. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
