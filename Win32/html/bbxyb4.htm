<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>SetUnhandledExceptionFilter</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="bbxyb4"></A><B>SetUnhandledExceptionFilter  <A HREF="zhkxvv.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="atyjkk.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="ndlhxh.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SetUnhandledExceptionFilter</B> function lets an application supersede the top-level exception handler that Win32 places at the top of each thread and process. </P>

<P>After calling this function, if an exception occurs in a process that is not being debugged, and the exception makes it to the Win32 unhandled exception filter, that filter will call the exception filter function specified by the <I>lpTopLevelExceptionFilter</I> parameter. </P>

<P><B>LPTOP_LEVEL_EXCEPTION_FILTER SetUnhandledExceptionFilter(</B></P>

<TABLE cols=2 width=629>

<TR VALIGN="top">
<TD width=70%><B>LPTOP_LEVEL_EXCEPTION_FILTER</B> <I>lpTopLevelExceptionFilter</I> </TD>
<TD width=30%>// exception filter function  </TD>
</TR>

<TR VALIGN="top">
<TD width=70%><B>   );</B></TD>
<TD width=30%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpTopLevelExceptionFilter</I></P>

<P>Supplies the address of a top-level exception filter function that will be called whenever the <A HREF="gwd8cf.htm"><B>UnhandledExceptionFilter</B></A><B> </B>function gets control, and the process is not being debugged. A value of NULL for this parameter specifies default handling within <B>UnhandledExceptionFilter</B>. </P>

<P>The filter function has syntax congruent to that of <B>UnhandledExceptionFilter</B>: It takes a single parameter of type <B>LPEXCEPTION_POINTERS</B>, and returns a value of type <B>LONG</B>. The filter function should return one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=57%><B>Value</B></TD>
<TD width=43%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=57%>EXCEPTION_EXECUTE_HANDLER</TD>
<TD width=43%>Return from <A HREF="gwd8cf.htm"><B>UnhandledExceptionFilter</B></A> and execute the associated exception handler. This usually results in process termination.</TD>
</TR>

<TR VALIGN="top">
<TD width=57%>EXCEPTION_CONTINUE_EXECUTION</TD>
<TD width=43%>Return from <B>UnhandledExceptionFilter</B> and continue execution from the point of the exception. Note that the filter function is free to modify the continuation state by modifying the exception information supplied through its <B>LPEXCEPTION_POINTERS</B> parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=57%>EXCEPTION_CONTINUE_SEARCH</TD>
<TD width=43%>Proceed with normal execution of <B>UnhandledExceptionFilter </B>. That means obeying the <B>SetErrorMod</B> flags, or invoking the Application Error pop-up message box.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>The <B>SetUnhandledExceptionFilter</B> function returns the address of the previous exception filter established with the function. A NULL return value means that there is no current top-level exception handler. </P>

<P><B>Remarks</B></P>

<P>Issuing <B>SetUnhandledExceptionFilter</B> replaces the existing top-level exception filter for all existing and all future threads in the calling process. </P>

<P>The exception handler specified by <I>lpTopLevelExceptionFilter</I> is executed in the context of the thread that caused the fault. This can affect the exception handler's ability to recover from certain exceptions, such as an invalid stack. </P>

<P><B>See Also</B></P>

<P><A HREF="gwd8cf.htm"><B>UnhandledExceptionFilter</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
