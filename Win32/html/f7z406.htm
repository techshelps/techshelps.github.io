<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DdeCreateStringHandle</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="f7z406"></A><B>DdeCreateStringHandle  <A HREF="o5spvv.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="7m.xby.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="11k0r86.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>DdeCreateStringHandle</B> function creates a handle that identifies the string pointed to by the <I>psz</I> parameter. A dynamic data exchange (DDE) client or server application can pass the string handle as a parameter to other Dynamic Data Exchange Management Library (DDEML) functions. </P>

<P><B>HSZ DdeCreateStringHandle(</B></P>

<TABLE cols=2 width=371>

<TR VALIGN="top">
<TD width=38%><B>DWORD</B> <I>idInst</I><B>,</B></TD>
<TD width=62%>// instance identifier</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    LPTSTR</B> <I>psz</I><B>,</B></TD>
<TD width=62%>// pointer to null-terminated string </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    int</B> <I>iCodePage</I> </TD>
<TD width=62%>// code page identifier</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>   );</B></TD>
<TD width=62%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>idInst</I></P>

<P>Specifies the application instance identifier obtained by a previous call to the <A HREF="1_pfuxk.htm"><B>DdeInitialize</B></A> function. </P>

<P><I>psz</I></P>

<P>Points to a buffer that contains the null-terminated string for which a handle is to be created. This string may be up to 255 characters. The reason for this limit is that DDEML string management functions are implemented using global atoms.</P>

<P><I>iCodePage</I></P>

<P>Specifies the code page used to render the string. This value should be either CP_WINANSI (the default code page) or CP_WINUNICODE, depending on whether the ANSI or Unicode version of <B>DdeInitialize</B> was called by the client application. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is a string handle.</P>

<P>If the function fails, the return value is 0L. </P>

<P><B>Errors</B></P>

<P>The <A HREF="aa7fa.htm"><B>DdeGetLastError</B></A> function can be used to get the error code, which may be one of the following values: </P>

<P>DMLERR_INVALIDPARAMETER<BR>
DMLERR_NO_ERROR<BR>
DMLERR_SYS_ERROR</P>

<P><B>Remarks</B></P>

<P>The value of a string handle is not related to the case of the string it identifies. </P>

<P>When an application either creates a string handle or receives one in the callback function and then uses the <A HREF="c96l7s.htm"><B>DdeKeepStringHandle</B></A> function to keep it, the application must free that string handle when it is no longer needed. </P>

<P>An instance-specific string handle cannot be mapped from string handle to string and back to string handle. This is shown in the following example, in which the <A HREF="1aibqf5.htm"><B>DdeQueryString</B></A> function creates a string from a string handle and <B>DdeCreateStringHandle</B> creates a string handle from that string, but the two handles are not the same: </P>

<P>DWORD idInst;  </P>

<P>DWORD cb;  </P>

<P>HSZ hszInst, hszNew; </P>

<P>PSZ pszInst; </P>

<P></P>

<P>DdeQueryString(idInst, hszInst, pszInst, cb, CP_WINANSI); </P>

<P>hszNew = DdeCreateStringHandle(idInst, pszInst, CP_WINANSI); </P>

<P>// hszNew != hszInst ! </P>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="e421.j.htm"><B>DdeAccessData</B></A>, <A HREF="oegniv.htm"><B>DdeCmpStringHandles</B></A>, <A HREF="i6b1lg.htm"><B>DdeFreeStringHandle</B></A>, <A HREF="1_pfuxk.htm"><B>DdeInitialize</B></A>, <A HREF="c96l7s.htm"><B>DdeKeepStringHandle</B></A>, <A HREF="1aibqf5.htm"><B>DdeQueryString</B></A> </P>

</BODY>
</HTML>
