<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DrawEdge</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1vhz5b4"></A><B>DrawEdge  <A HREF="hejzne.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1mptrl8.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="el1da3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>DrawEdge</B> function draws one or more edges of rectangle.</P>

<P><B>BOOL DrawEdge(</B></P>

<TABLE cols=2 width=389>

<TR VALIGN="top">
<TD width=33%><B>HDC</B> <I>hdc</I><B>,</B></TD>
<TD width=67%>// handle to device context</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>    LPRECT </B><I>qrc</I><B>,</B></TD>
<TD width=67%>// pointer to rectangle coordinates</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>    UINT </B><I>edge</I><B>,</B></TD>
<TD width=67%>// type of inner and outer edge to draw</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>    UINT </B><I>grfFlags</I></TD>
<TD width=67%>// type of border</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>   )<B>;</B></TD>
<TD width=67%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hdc</I></P>

<P>Identifies the device context.</P>

<P><I>qrc</I></P>

<P>Points to a <A HREF="ezena2.htm"><B>RECT</B></A> structure that contains the logical coordinates of the rectangle.<I>edge</I></P>

<P>Specifies the type of inner and outer edge to draw. This parameter must be a combination of one inner-border flag and one outer-border flag. The inner-border flags are as follows:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=36%><B>Value</B></TD>
<TD width=64%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=36%>BDR_RAISEDINNER</TD>
<TD width=64%>Raised inner edge.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>BDR_SUNKENINNER</TD>
<TD width=64%>Sunken inner edge.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>The outer-border flags are as follows:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=36%><B>Value</B></TD>
<TD width=64%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=36%>BDR_RAISEDOUTER</TD>
<TD width=64%>Raised outer edge.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>BDR_SUNKENOUTER</TD>
<TD width=64%>Sunken outer edge.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>Alternatively, the <I>edge</I> parameter can specify one of the following flags:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=36%><B>Value</B></TD>
<TD width=64%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=36%>EDGE_BUMP</TD>
<TD width=64%>Combination of BDR_RAISEDOUTER and BDR_SUNKENINNER.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>EDGE_ETCHED</TD>
<TD width=64%>Combination of BDR_SUNKENOUTER and BDR_RAISEDINNER.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>EDGE_RAISED</TD>
<TD width=64%>Combination of BDR_RAISEDOUTER and BDR_RAISEDINNER.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>EDGE_SUNKEN</TD>
<TD width=64%>Combination of BDR_SUNKENOUTER and BDR_SUNKENINNER.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>grfFlags</I></P>

<P>Specifies the type of border. This parameter can be a combination of these values:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=49%><B>Value</B></TD>
<TD width=51%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_ADJUST</TD>
<TD width=51%>Rectangle to be adjusted to leave space for client area.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_BOTTOM</TD>
<TD width=51%>Bottom of border rectangle.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_BOTTOMLEFT</TD>
<TD width=51%>Bottom and left side of border rectangle.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_BOTTOMRIGHT</TD>
<TD width=51%>Bottom and right side of border rectangle.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_DIAGONAL</TD>
<TD width=51%>Diagonal border. </TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_DIAGONAL_ENDBOTTOMLEFT</TD>
<TD width=51%>Diagonal border. The end point is the bottom-left corner of the rectangle; the origin is top-right corner. </TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_DIAGONAL_ENDBOTTOMRIGHT</TD>
<TD width=51%>Diagonal border. The end point is the bottom-right corner of the rectangle; the origin is top-left corner. </TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_DIAGONAL_ENDTOPLEFT</TD>
<TD width=51%>Diagonal border. The end point is the top-left corner of the rectangle; the origin is bottom-right corner. </TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_DIAGONAL_ENDTOPRIGHT</TD>
<TD width=51%>Diagonal border. The end point is the top-right corner of the rectangle; the origin is bottom-left corner. </TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_FLAT</TD>
<TD width=51%>Flat border.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_LEFT</TD>
<TD width=51%>Left side of border rectangle.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_MIDDLE</TD>
<TD width=51%>Interior of rectangle to be filled.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_MONO</TD>
<TD width=51%>One-dimensional border.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_RECT</TD>
<TD width=51%>Entire border rectangle.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_RIGHT</TD>
<TD width=51%>Right side of border rectangle.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_SOFT</TD>
<TD width=51%>Soft buttons instead of tiles.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_TOP</TD>
<TD width=51%>Top of border rectangle.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_TOPLEFT</TD>
<TD width=51%>Top and left side of border rectangle.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>BF_TOPRIGHT</TD>
<TD width=51%>Top and right side of border rectangle.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>See Also</B></P>

<P><A HREF="ezena2.htm"><B>RECT</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
