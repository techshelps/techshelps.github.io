<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WNetCancelConnection</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1xo3_ts"></A><B>WNetCancelConnection  <A HREF="12aygdc.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="mzc0i..htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="jc0l02.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>WNetCancelConnection</B> function breaks an existing network connection. </P>

<P>The function is provided for compatibility with earlier versions of Microsoft Windows. For new applications, use the <A HREF="6g16y..htm"><B>WNetCancelConnection2</B></A> function. </P>

<P><B>DWORD WNetCancelConnection(</B></P>

<TABLE cols=2 width=465>

<TR VALIGN="top">
<TD width=33%><B>LPTSTR</B> <I>lpName</I><B>,</B></TD>
<TD width=67%>// pointer to resource name to be disconnected </TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>    BOOL</B> <I>fForce</I> </TD>
<TD width=67%>// flag for unconditional disconnect </TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>   );</B></TD>
<TD width=67%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpName</I></P>

<P>Points to a null-terminated string that specifies the name of either the redirected local device or the remote network resource to disconnect from. When this parameter specifies a redirected local device, only the specified device redirection is broken. If the parameter specifies a remote network resource, only the connections to remote networks without devices are  broken. </P>

<P><I>fForce</I></P>

<P>Specifies whether the disconnection is to occur even if there are open files or jobs on the connection. If this parameter is FALSE, the function fails if there are open files or jobs. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is NO_ERROR. </P>

<P>If the function fails, the return value is an error code. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. <B>GetLastError</B> may return one of the following error codes: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=51%><B>Value</B></TD>
<TD width=49%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=51%>ERROR_BAD_PROFILE</TD>
<TD width=49%>The user profile is in an incorrect format.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>ERROR_CANNOT_OPEN_PROFILE</TD>
<TD width=49%>The system is unable to open the user profile to process persistent connections.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>ERROR_DEVICE_IN_USE</TD>
<TD width=49%>The device is in use by an active process and cannot be disconnected.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>ERROR_EXTENDED_ERROR</TD>
<TD width=49%>A network-specific error occurred. To get a description of the error, use the <A HREF="1kvezqm.htm"><B>WNetGetLastError</B></A> function.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>ERROR_NOT_CONNECTED</TD>
<TD width=49%>The name specified by the <I>lpName</I> parameter is not a redirected device, or the system is not currently connected to the device specified by the parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>ERROR_OPEN_FILES</TD>
<TD width=49%>There are open files, and the <I>fForce</I> parameter is FALSE.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>The function returns error codes for compatibility with Windows version 3.1. For compatibility with the Win32 API, the function also sets the error code value returned by <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>See Also</B></P>

<P><A HREF="1nkk0yr.htm"><B>WNetAddConnection</B></A>, <A HREF="xgb4k0.htm"><B>WNetAddConnection2</B></A>, <A HREF="6g16y..htm"><B>WNetCancelConnection2</B></A>, <A HREF="apyuz6.htm"><B>WNetGetConnection</B></A>, <A HREF="1kvezqm.htm"><B>WNetGetLastError</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
