<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>RasSecurityDialogBegin [New - Windows NT]</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="esjkc"></A><B>RasSecurityDialogBegin  <A HREF="23o0_kb.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="35kj_0r.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1mpuhlc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>[New - Windows NT]</P>

<P>The <B>RasSecurityDialogBegin</B> function is a third-party RAS security DLL entry point that the Windows NT RAS server calls when a remote user tries to connect. This enables the security DLL to begin its authentication of the remote user.</P>

<P><B>DWORD WINAPI RasSecurityDialogBegin(</B></P>

<TABLE cols=2 width=571>

<TR VALIGN="top">
<TD width=56%><B>HPORT</B> <I>hPort</I><B>,</B></TD>
<TD width=44%>// RAS handle to the port</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    PBYTE</B> <I>pSendBuf</I><B>,</B></TD>
<TD width=44%>// pointer to buffer for sending data </TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    DWORD</B> <I>SendBufSize</I><B>,</B></TD>
<TD width=44%>// size, in bytes, of the send buffer</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    PBYTE</B> <I>pRecvBuf</I><B>,</B></TD>
<TD width=44%>// pointer to buffer for receiving data </TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    DWORD</B> <I>RecvBufSize</I><B>,</B></TD>
<TD width=44%>// size, in bytes, of the receive buffer</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>    VOID (WINAPI</B> * <I>RasSecurityDialogComplete</I><B>)</B></TD>
<TD width=44%>// pointer to the completion function</TD>
</TR>

<TR VALIGN="top">
<TD width=56%><B>   );</B></TD>
<TD width=44%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hPort</I></P>

<P>Specifies a RAS port handle. The security DLL uses this handle in other RAS security functions, such as <A HREF="2mfi9yw.htm"><B>RasSecurityDialogSend</B></A> and <A HREF="15udwga.htm"><B>RasSecurityDialogReceive</B></A>, to identify this authentication transaction. </P>

<P>Note that this handle is valid only in RAS security functions; you cannot use it in other Win32 I/O functions.</P>

<P><I>pSendBuf</I></P>

<P>Pointer to a buffer allocated by the RAS server. The security DLL uses this buffer with the <A HREF="2mfi9yw.htm"><B>RasSecurityDialogSend</B></A> function to send text that is displayed in the RAS terminal window on the remote computer.</P>

<P><I>SendBufSize</I></P>

<P>Specifies the size, in bytes, of the <I>pSendBuf</I> buffer. </P>

<P><I>pRecvBuf</I></P>

<P>Pointer to a buffer allocated by the RAS server. The security DLL uses this buffer with the <A HREF="15udwga.htm"><B>RasSecurityDialogReceive</B></A> function to receive the response from the remote user.</P>

<P><I>RecvBufSize</I></P>

<P>Specifies the size, in bytes, of the <I>pRecvBuf</I> buffer. </P>

<P><I>RasSecurityDialogComplete</I></P>

<P>Specifies a pointer to a <A HREF="cyizsj.htm"><B>RasSecurityDialogComplete</B></A> function. When the security DLL has completed the authentication of the remote user, it calls this function to report the results to the RAS server.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the security DLL successfully starts the authentication operation, <B>RasSecurityDialogBegin</B> should return NO_ERROR. In this case, the security DLL must later terminate the authentication transaction by calling the function pointed to by the <I>RasSecurityDialogComplete</I> parameter.</P>

<P>If an error occurs, <B>RasSecurityDialogBegin</B> should return a nonzero error code. In this case, the RAS server hangs up the call and records the error in the Windows NT event log. Returning a nonzero error code terminates the authentication transaction, so the security DLL does not need to call the <I>RasSecurityDialogComplete</I> function.</P>

<P><B>Remarks</B></P>

<P>When a Windows NT RAS server receives a call from a remote computer, it calls the <B>RasSecurityDialogBegin</B> function exported by the registered RAS security DLL, if there is one. When the RAS server calls this function, it passes the following information to the security DLL:</P>

<P>·A port handle to identify the connection</P>

<P>·Pointers to buffers to use when communicating with the remote user</P>

<P>·A pointer to a <A HREF="cyizsj.htm"><B>RasSecurityDialogComplete</B></A> function to call when the authentication has been completed</P>

<P></P>

<P>The port handle and buffer pointers are valid until you call <B>RasSecurityDialogComplete</B> to terminate the authentication transaction.</P>

<P>Your <B>RasSecurityDialogBegin</B> implementation must return as soon as possible, because the RAS server is blocked and cannot accept any other calls until <B>RasSecurityDialogBegin</B> returns. The <B>RasSecurityDialogBegin</B> function should copy the input parameters and create a thread to communicate with and authenticate the remote user. </P>

<P><B>See Also</B></P>

<P><A HREF="cyizsj.htm"><B>RasSecurityDialogComplete</B></A>, <A HREF="15udwga.htm"><B>RasSecurityDialogReceive</B></A>, <A HREF="2mfi9yw.htm"><B>RasSecurityDialogSend</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
