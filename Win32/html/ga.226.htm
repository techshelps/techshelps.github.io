<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating a Briefcase Reconciler</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="ga.226"></A><B>Creating a Briefcase Reconciler</B></P>

<P>You create a briefcase reconciler by implementing the reconciliation interfaces. At a minimum, a reconciler implements the <A HREF="32s446h.htm"><B>IReconcilableObject</B></A> interface and the <B>IPersistStorage</B> or <B>IPersistFile</B> interface. As the initiator, the Briefcase determines when reconciliation is needed and calls the <A HREF="1tqatwu.htm"><B>IReconcilableObject::Reconcile</B></A> member function to initiate reconciliation. </P>

<P>Although the <B>Reconcile</B> member function can provide a wide-ranging set of reconciliation capabilities, a briefcase reconciler carries out only minimal reconciliation in most cases. In particular, the Briefcase does not require the reconciler to support residue generation or to support the termination object. Also, the reconciler carries out a single top to bottom reconciliation and must not return the REC_E_NOTCOMPLETE value; that is, it should not attempt partial reconciliation.</P>

<P>The Briefcase provides the <A HREF="1prkwhd.htm"><B>IReconcileInitiator</B></A> interface. The briefcase reconciler can use the <A HREF="12pp9qf.htm"><B>IReconcileInitiator::SetAbortCallback</B></A> member function to set the termination object. The Briefcase does not use version identifiers and can, therefore, not provide previous versions of a document if a reconciler requests them using the corresponding member functions in <B>IReconcileInitiator</B>.</P>

<P>The Briefcase passes file monikers to <B>Reconcile</B> representing the versions of the document to be reconciled. The briefcase reconciler gains access to the versions by using either the <B>IMoniker</B>::<B>BindToObject</B> or <B>IMoniker</B>::<B>BindToStorage</B> member function. The latter is generally faster and is recommended. The reconciler must release any objects or storage to which it binds.</P>

<P>When the briefcase reconciler uses <B>BindToStorage</B>, it binds to storage that is either flat storage (a stream) or OLE-defined structured storage. If the reconciler expects flat storage, it should use <B>BindToStorage</B> to request the <B>IStream</B> interface. If the reconciler expects structured storage, it should request the <B>IStorage</B> interface. In both cases, it should request read-only direct (nontransacted) access to the storage; read-write access may not generally be available.</P>

<P>A minimal briefcase reconciler typically looks directly at the storage of the other versions and deals with embedded objects in a very primitive manner, such as merging two versions of the object by including both versions in the output version.</P>

<P>The initiator locates the appropriate briefcase reconciler by using a subset of the logic implemented by the <B>GetClassFile</B> function to determine the class of a given file and then looks in the registry for the reconciler class associated with the given file class. The Briefcase, like other shell components, determines the class of a file solely by the filename extension. A file's extension must have a registered class for the Briefcase to invoke a reconciler for the file. You must set a registry entry of the following form when installing your reconciler.</P>

<P><B>CLSID</B>\<I>clsid</I>\<B>Roles</B>\<B>Reconciler</B>\<I>reconciler-classid</I></P>

<P>The class must be quick loading, must be designated _MULTIPLEUSE, and, unless marshallers are provided for the reconciliation interface, must be an in-process server (contained in a DLL) rather than a local server (implemented in an .EXE file).</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
