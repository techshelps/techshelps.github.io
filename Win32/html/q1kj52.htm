<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Providing Help in a Dialog Box</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="q1kj52"></A><B>Providing Help in a Dialog Box</B></P>

<P>To provide context-sensitive help in a dialog box, you must create an array consisting of pairs of doubleword values. The first value in each pair is the identifier of a control in the dialog box, and the second is the context identifier of the help topic for the control. The array should contain one pair of identifiers for each control in the dialog box.</P>

<P>The dialog box procedure must process the <A HREF="d98_nq.htm">WM_HELP</A> and <A HREF="_1f8jj.htm">WM_CONTEXTMENU</A> messages. The dialog box procedure receives WM_HELP when the user presses the F1 key and WM_CONTEXTMENU when the user clicks the right mouse button.</P>

<P>The <I>lParam</I> parameter of WM_HELP is a pointer to a <A HREF="8ebbkx.htm"><B>HELPINFO</B></A> structure. The <B>hItemHandle</B> member of this structure identifies the control for which the user has requested help. You must pass the handle to the <A HREF="1p1p.rf.htm"><B>WinHelp</B></A> function along with the HELP_WM_HELP command, the name of your help file, and a pointer to the array of identifiers. The <B>WinHelp</B> function searches the array for the control identifier of the specified control and then retrieves the corresponding help context identifier. Next, the function passes the help context identifier to Windows Help, which finds the corresponding topic and displays it in a pop-up window. If the control has an identifier of  - 1, the system searches for the next control that is a tab stop and uses its identifier to find the help context identifier. For this reason, it is important that you place static text before controls in a resource file.</P>

<P>Processing WM_CONTEXTMENU is similar to processing WM_HELP when calling the <B>WinHelp</B> function, with these two exceptions:</P>

<P>·You pass the <I>wParam</I> parameter from WM_CONTEXTMENU, which is the handle of the control that sent the message.</P>

<P>·You specify the HELP_CONTEXTMENU command instead of HELP_WM_HELP. </P>

<P></P>

<P>The HELP_CONTEXTMENU command causes Windows Help to display a menu before it displays the help topic. The menu is system defined. It allows the user to display help for the control or to display the Help Topics dialog box.</P>

<P>The following example shows how to implement context-sensitive help in a dialog box.</P>

<P>LRESULT CALLBACK EditDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam,  </P>

<P>LPARAM lParam) </P>

<P>{ </P>

<P></P>

<P>// Create an array of control identifiers and context identifiers. </P>

<P></P>

<P>static DWORD aIds[] = { </P>

<P>ID_SAVE,   IDH_SAVE, </P>

<P>ID_DELETE, IDH_DELETE, </P>

<P>ID_COPY,   IDH_COPY, </P>

<P>ID_PASTE,  IDH_PASTE, </P>

<P>0,0 </P>

<P>}; </P>

<P></P>

<P>switch (uMsg) { </P>

<P>case WM_HELP: </P>

<P>WinHelp(((LPHELPINFO) lParam)-&gt;hItemHandle, "helpfile.hlp", </P>

<P>HELP_WM_HELP, (DWORD) (LPSTR) aIds); </P>

<P>break; </P>

<P></P>

<P>case WM_CONTEXTMENU: </P>

<P>WinHelp((HWND) wParam, "helpfile.hlp", HELP_CONTEXTMENU, </P>

<P>(DWORD) (LPVOID) aIds); </P>

<P>break; </P>

<P>. </P>

<P>. // process other messages here </P>

<P>. </P>

<P>} </P>

<P></P>

<P>return FALSE; </P>

<P></P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
