<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Notifying the Client that Data Has Changed</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1.7_6x4"></A><B>Notifying the Client that Data Has Changed</B></P>

<P>When the client establishes a link by using the <A HREF="1fmiugc.htm">WM_DDE_ADVISE</A> message, with the <B>fDeferUpd</B> member not set (that is, equal to zero) in the <A HREF="rnrbh..htm"><B>DDEDATA</B></A> structure, the client has requested the server send the data item each time the item's value changes. In such cases, the server renders the new value of the data item in the previously specified format and sends the client a <A HREF="4uoa_rr.htm">WM_DDE_DATA</A> message, as shown in the following example. </P>

<P>/*  </P>

<P>* Allocate the size of a DDE data header, plus data (a string), </P>

<P>* plus a &lt;CR&gt;&lt;LF&gt;&lt;NULL&gt; </P>

<P>*/ </P>

<P></P>

<P>if (!(hData = GlobalAlloc(GMEM_MOVEABLE | GMEM_DDESHARE, </P>

<P>sizeof(DDEDATA) + lstrlen(szItemValue) + 3))) </P>

<P>return; </P>

<P>if (!(lpData = (DDEDATA FAR*) GlobalLock(hData))) { </P>

<P>GlobalFree(hData); </P>

<P>return; </P>

<P>} </P>

<P></P>

<P>lpData-&gt;fAckReq = bAckRequest;  /* as specified in original     */ </P>

<P>/* WM_DDE_ADVISE message        */ </P>

<P>lpData-&gt;cfFormat = CF_TEXT; </P>

<P>lstrcpy(lpData-&gt;Value, szItemValue); /* copies value to be sent */ </P>

<P>lstrcat(lpData-&gt;Value, "\r\n"); /* CR/LF for CF_TEXT format     */ </P>

<P>GlobalUnlock(hData); </P>

<P>if ((atomItem = GlobalAddAtom(szItemName)) != 0) { </P>

<P>if (!PostMessage(hwndClientDDE, </P>

<P>WM_DDE_DATA, </P>

<P>(WPARAM) hwndServerDDE, </P>

<P>PackDDElParam(WM_DDE_DATA, (UINT) hData, atomItem))) { </P>

<P>GlobalFree(hData); </P>

<P>GlobalDeleteAtom(atomItem); </P>

<P>FreeDDElParam(WM_DDE_DATA, lParam); </P>

<P>} </P>

<P>} </P>

<P></P>

<P>if (atomItem == 0) { </P>

<P></P>

<P>. </P>

<P>. /* error handling */ </P>

<P>. </P>

<P></P>

<P>} </P>

<P></P>

<P>In this example, the client processes the item value as appropriate. If the <B>fAckReq</B> flag for the item is set, the client sends the server a positive <A HREF="9k0..a.htm">WM_DDE_ACK</A> message. </P>

<P>When the client establishes the link, with the <B>fDeferUpd</B> member set (that is, equal to 1), the client has requested that only a notification, not the data itself, be sent each time the data changes. In such cases, when the item value changes, the server does not render the value but simply sends the client a <A HREF="4uoa_rr.htm">WM_DDE_DATA</A> message with a null data handle, as illustrated in the following example. </P>

<P>if (bDeferUpd) {     /* checking whether the flag was originally */  </P>

<P>/* set in the WM_DDE_ADVISE message         */ </P>

<P>if ((atomItem = GlobalAddAtom(szItemName)) != 0) { </P>

<P>if (!PostMessage(hwndClientDDE, </P>

<P>WM_DDE_DATA, </P>

<P>(WPARAM) hwndServerDDE, </P>

<P>PackDDElParam(WM_DDE_DATA, 0, </P>

<P>atomItem))) {                   /* NULL data */ </P>

<P>GlobalDeleteAtom(atomItem); </P>

<P>FreeDDElParam(WM_DDE_DATA, lParam); </P>

<P>} </P>

<P>} </P>

<P>} </P>

<P></P>

<P>if (atomItem == 0) { </P>

<P></P>

<P>. </P>

<P>. /* error handling */ </P>

<P>. </P>

<P></P>

<P>} </P>

<P></P>

<P>As necessary, the client can request the latest value of the data item by issuing a normal <A HREF="17imeh8.htm">WM_DDE_REQUEST</A> message, or it can simply ignore the notice from the server that the data has changed. In either case, if <B>fAckReq</B> is equal to 1, the client is expected to send a positive <A HREF="9k0..a.htm">WM_DDE_ACK</A> message to the server. </P>

</BODY>
</HTML>
