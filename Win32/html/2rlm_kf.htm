<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ReadProcessMemory</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2rlm_kf"></A><B>ReadProcessMemory  <A HREF="1dcswvi.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1txdzye.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="19cj0x..htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>ReadProcessMemory</B> function reads memory in a specified process. The entire area to be read must be accessible, or the operation fails. </P>

<P><B>BOOL ReadProcessMemory(</B></P>

<TABLE cols=2 width=579>

<TR VALIGN="top">
<TD width=45%><B>HANDLE</B> <I>hProcess</I><B>,</B></TD>
<TD width=55%>// handle of the process whose memory is read  </TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>    LPCVOID</B> <I>lpBaseAddress</I><B>,</B></TD>
<TD width=55%>// address to start reading</TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>    LPVOID</B> <I>lpBuffer</I><B>,</B></TD>
<TD width=55%>// address of buffer to place read data</TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>    DWORD</B> <I>nSize</I><B>,</B></TD>
<TD width=55%>// number of bytes to read</TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>    LPDWORD</B> <I>lpNumberOfBytesRead</I> </TD>
<TD width=55%>// address of number of bytes read</TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>   );</B></TD>
<TD width=55%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hProcess</I></P>

<P>Identifies an open handle of a process whose memory is read. The handle must have PROCESS_VM_READ access to the process. </P>

<P><I>lpBaseAddress</I></P>

<P>Points to the base address in the specified process to be read. Before any data transfer occurs, the system verifies that all data in the base address and memory of the specified size is accessible for read access. If this is the case, the function proceeds; otherwise, the function fails. </P>

<P><I>lpBuffer</I></P>

<P>Points to a buffer that receives the contents from the address space of the specified process. </P>

<P><I>nSize</I></P>

<P>Specifies the requested number of bytes to read from the specified process. </P>

<P><I>lpNumberOfBytesRead</I></P>

<P>Points to the actual number of bytes transferred into the specified buffer. If <I>lpNumberOfBytesRead</I> is NULL, the parameter is ignored. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>.</P>

<P>The function fails if the requested read operation crosses into an area of the process that is inaccessible. </P>

<P><B>Remarks</B></P>

<P><B>ReadProcessMemory </B>copies the data in the specified address range from the address space of the specified process into the specified buffer of the current process. Any process that has a handle with PROCESS_VM_READ access can call the function. The process whose address space is read is typically, but not necessarily, being debugged. </P>

<P>The entire area to be read must be accessible. If it is not, the function fails as noted previously. </P>

<P><B>See Also</B></P>

<P><A HREF="_4c4hp.htm"><B>WriteProcessMemory</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
