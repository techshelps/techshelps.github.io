<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Creating and Displaying a Caret</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1wi.qcp"></A><B>Creating and Displaying a Caret</B></P>

<P>Upon receiving the keyboard focus, the window should create and display the caret. Use the <A HREF="1yn2nek.htm"><B>CreateCaret</B></A> function to create a caret in the given window. You can then call <A HREF=".agg3v.htm"><B>SetCaretPos</B></A> to set the current position of the caret and <A HREF="wvypvc.htm"><B>ShowCaret</B></A> to make the caret visible. </P>

<P>The system sends the <A HREF="1ml4f9e.htm">WM_SETFOCUS</A> message to the window receiving keyboard focus; therefore, an application should create and display the caret while processing this message. </P>

<P>HWND hwnd,       // window handle  </P>

<P>int x;           // horizontal coordinate of cursor </P>

<P>int y;           // vertical coordinate of cursor </P>

<P>int nWidth;      // width of cursor </P>

<P>int nHeight;     // height of cursor </P>

<P>char *lpszChar;  // pointer to character </P>

<P></P>

<P>case WM_SETFOCUS: </P>

<P></P>

<P>// Create a solid black caret. </P>

<P>CreateCaret(hwnd, (HBITMAP) NULL, nWidth, nHeight); </P>

<P></P>

<P>// Adjust the caret position, in client coordinates. </P>

<P>SetCaretPos(x, y); </P>

<P></P>

<P>// Display the caret. </P>

<P>ShowCaret(hwnd); </P>

<P></P>

<P>break; </P>

<P></P>

<P>To create a caret based on a bitmap, you must specify a bitmap handle when using <A HREF="1yn2nek.htm"><B>CreateCaret</B></A>. You can use a graphics application to create the bitmap and a resource compiler to add the bitmap to your application's resources. Your application can then use the <A HREF="a1xq1h.htm"><B>LoadBitmap</B></A> function to load the bitmap handle. For example, you could replace the <B>CreateCaret</B> line in the preceding example with the following lines to create a bitmap caret. </P>

<P>// Load the application-defined caret resource.  </P>

<P></P>

<P>hCaret = LoadBitmap(hinst, MAKEINTRESOURCE(120)); </P>

<P></P>

<P>// Create a bitmap caret. </P>

<P></P>

<P>CreateCaret(hwnd, hCaret, 0, 0); </P>

<P></P>

<P>Alternatively, you can use the <A HREF="be7zrj.htm"><B>CreateBitmap</B></A> or <A HREF="90v.zf.htm"><B>CreateDIBitmap</B></A> function to retrieve the handle of the caret bitmap. For more information about bitmaps, see <A HREF="15l9v8p.htm">Bitmaps</A>. </P>

<P>If your application specifies a bitmap handle, <A HREF="1yn2nek.htm"><B>CreateCaret</B></A> ignores the width and height parameters. The bitmap defines the size of the caret. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
