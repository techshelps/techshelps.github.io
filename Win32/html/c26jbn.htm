<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetWaitableTimer [New - Windows NT]</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="c26jbn"></A><B>SetWaitableTimer  <A HREF="bocug7.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="36dp5f5.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="24h9od3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>[New - Windows NT]</P>

<P>The <B>SetWaitableTimer</B> function activates the specified "waitable" timer. When the due time arrives, the timer is signaled and the thread that set the timer calls the optional completion routine.</P>

<P><B>BOOL SetWaitableTimer(</B></P>

<TABLE cols=2 width=586>

<TR VALIGN="top">
<TD width=55%><B>HANDLE</B> <I>hTimer</I><B>,</B></TD>
<TD width=45%>// handle to a timer object</TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>    const LARGE_INTEGER</B> <I>*pDueTime</I><B>,</B></TD>
<TD width=45%>// when timer will become signaled</TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>    LONG </B><I>lPeriod</I><B>,</B></TD>
<TD width=45%>// periodic timer interval</TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>    PTIMERAPCROUTINE</B> <I>pfnCompletionRoutine</I><B>,</B></TD>
<TD width=45%>// pointer to the completion routine</TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>    LPVOID</B> <I>lpArgToCompletionRoutine</I><B>,</B></TD>
<TD width=45%>// data passed to the completion routine</TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>    BOOL</B> <I>fResume</I></TD>
<TD width=45%>// flag for resume state</TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>   );</B></TD>
<TD width=45%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hTimer</I></P>

<P>Identifies the timer object. The <A HREF="12bp5e6.htm"><B>CreateWaitableTimer</B></A> or <A HREF="2z5sbu.htm"><B>OpenWaitableTimer</B></A> function returns this handle.</P>

<P><I>pDueTime</I></P>

<P>Specifies when the state of the timer is to be set to signaled, in 100 nanosecond intervals. Use the format described by the <A HREF="a44m8h.htm"><B>FILETIME</B></A> structure. Positive values indicate absolute time. Negative values indicate relative time. The actual timer accuracy depends on the capability of your hardware.</P>

<P><I>lPeriod</I></P>

<P>Specifies the period of the timer, in milliseconds. If <I>lPeriod</I> is zero, the timer is signaled once. If <I>lPeriod</I> is greater than zero, the timer is periodic. A periodic timer automatically reactivates each time the period elapses, until the timer is canceled using the <A HREF="w6gyxd.htm"><B>CancelWaitableTimer</B></A> function or reset using <B>SetWaitableTimer</B>. If <I>lPeriod</I> is less than zero, the function fails.</P>

<P><I>pfnCompletionRoutine</I></P>

<P>Specifies an optional completion routine. The completion routine has the following prototype:</P>

<P>VOID</P>

<P>(APIENTRY *PTIMERAPCROUTINE)(</P>

<P>LPVOID lpArgToCompletionRoutine,</P>

<P>DWORD dwTimerLowValue,</P>

<P>DWORD dwTimerHighValue</P>

<P>);</P>

<P></P>

<P>The argument for the completion routine is specified when the timer is made active, in the <I>lpArgToCompletionRoutine </I>parameter. The completion routine also takes two DWORD values that specify the high and low time values of the time at which the timer was signaled. These values are passed to the routine by the system using the <A HREF="a44m8h.htm"><B>FILETIME</B></A> format..</P>

<P><I>lpArgToCompletionRoutine</I></P>

<P>Pointer to the structure that is passed to the function specified by the pointer <I>pfnCompletionRoutine</I>.</P>

<P><I>fResume</I></P>

<P>Specifies whether to restore a system in suspended power conservation mode when the timer state is set to signaled. If <I>fResume</I> is TRUE on a platform that does not support a restore, the call will succeed, but <B>GetLastError</B> returns ERROR_NOT_SUPPORTED.</P>

<P></P>

<P><B>Return Value</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>.</P>

<P><B>Remarks</B></P>

<P>Timer are initially inactive. Timers are activated by calling <B>SetWaitableTimer</B>. If the timer is already active when you call <B>SetWaitableTimer</B>, the timer is stopped, then it is reactivated. Stopping the timer in this manner does not set the timer state to signaled, so threads blocked in a wait operation on the timer remain blocked.</P>

<P>When the specified due time arrives, the timer becomes inactive. The state of the timer is set to signaled, the timer is reactivated using the specified period, and the thread calls the completion routine. If you call <B>SetWaitableTimer</B> and the thread is not in an alertable state, the completion routine is canceled.</P>

<P>When a manual-reset timer is set to the signaled state, it remains in this state until <B>SetWaitableTimer </B>is called to reset the timer. As a result, a periodic manual-reset timer is set to the signaled state when the initial due time arrives and remains signaled until it is canceled or reset. When a synchronization timer is set to the signaled state, it remains in this state until a thread completes a wait operation on the timer object.</P>

<P><B>See Also</B></P>

<P><A HREF="w6gyxd.htm"><B>CancelWaitableTimer</B></A>,<B> <A HREF="12bp5e6.htm">CreateWaitableTimer</A></B>,<B> <A HREF="a44m8h.htm">FILETIME</A></B>,<B> <A HREF="2z5sbu.htm">OpenWaitableTimer</A></B>  </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
