<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ReBaseImage</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="3_j10zu"></A><B>ReBaseImage  <A HREF="14nys5p.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>ReBaseImage</B> function is used to change the load address for a Win32 image, which reduces the required load time for a DLL.</P>

<P><B>BOOL ReBaseImage(</B></P>

<TABLE cols=2 width=302>

<TR VALIGN="top">
<TD width=88%><B>IN LPSTR </B><I>CurrentImageName</I><B>,</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>    IN LPSTR </B><I>SymbolPath</I><B>,</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>    IN BOOL </B><I>fReBase</I><B>,</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>    IN BOOL </B><I>fRebaseSysfileOk</I><B>,</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>    IN BOOL </B><I>fGoingDown</I><B>,</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>    IN DWORD </B><I>CheckImageSize</I><B>,</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>    OUT LPDWORD </B><I>OldImageSize</I><B>,</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>    OUT LPDWORD </B><I>OldImageBase</I><B>,</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>    OUT LPDWORD </B><I>NewImageSize</I><B>,</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>    IN OUT LPDWORD </B><I>NewImageBase</I><B>,</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>    IN DWORD </B><I>TimeStamp</I></TD>
<TD width=12%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=88%><B>   );</B></TD>
<TD width=12%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>CurrentImageName</I></P>

<P>The filename that is rebased.</P>

<P><I>SymbolPath</I></P>

<P>The path to find the corresponding symbol file.</P>

<P><I>fReBase</I></P>

<P>The image is rebased if this value is TRUE.</P>

<P><I>fRebaseSysfileOk</I></P>

<P>System images can be rebased only if this value is TRUE. A system image is one that has a preferred load address of 0x80000000 or greater.</P>

<P><I>fGoingDown</I></P>

<P>If the image should be rebased below the given base, this value is TRUE.</P>

<P><I>CheckImageSize</I></P>

<P>The maximum size that the image can grow to, or zero if there is no limit.</P>

<P><I>OldImageSize</I></P>

<P>The original image size before the rebase operation.</P>

<P><I>OldImageBase</I></P>

<P>The original image base before the rebase operation.</P>

<P><I>NewImageSize</I></P>

<P>The new image size after the rebase operation.</P>

<P><I>NewImageBase</I></P>

<P>The new image base after the rebase operation.</P>

<P><I>TimeStamp</I></P>

<P>The new time stamp for the image. Use the C run-time (CRT) function<B> time</B> to retrieve a compatible time stamp value. The value must be represented in the number of seconds elapsed since midnight (00:00:00), January 1, 1970, Universal Coordinated Time, according to the system clock.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is TRUE.</P>

<P>If the function fails, then the return value is FALSE. To retrieve extended error information, call <B>GetLastError</B>.</P>

<P><B>Remarks</B></P>

<P>The <B>ReBaseImage</B> function changes the desired load address for a Win32 image. This operation involves reading the entire image and updating all fixups, debug information, checksum, and time stamp<I> </I>values. The purpose of this function is to reduce the required load time for DLLs. If an application can rely on a DLL being loaded at the desired load address, then the system loader does not have to relocate the image. The image is simply loaded into the application's virtual address space and the DLL's initialization routine is called, if one is present.</P>

<P>A well-behaved application has all its DLLs rebased so they each fall within a unique range of the virtual address space. Microsoft publishes an address range that applications should use for their DLLs. By using this address range, the <B>ReBaseImage</B> function, and the list of application DLLs, each one of the DLLs can be assigned a unique base address. This process can be part of the build process or part of the final release procedure for the application.</P>

</BODY>
</HTML>
