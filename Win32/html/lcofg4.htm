<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>HeapReAlloc</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="lcofg4"></A><B>HeapReAlloc  <A HREF="nxlgs1.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="7gqv3r.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="9cqndc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>HeapReAlloc</B> function reallocates a block of memory from a heap. This function enables you to resize a memory block and change other memory block properties. The allocated memory is not movable. </P>

<P><B>LPVOID HeapReAlloc(</B></P>

<TABLE cols=2 width=413>

<TR VALIGN="top">
<TD width=39%><B>HANDLE</B> <I>hHeap</I><B>,</B></TD>
<TD width=61%>// handle to a heap block </TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>    DWORD</B> <I>dwFlags</I><B>,</B></TD>
<TD width=61%>// heap reallocation flags </TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>    LPVOID</B> <I>lpMem</I><B>,</B></TD>
<TD width=61%>// pointer to the memory to reallocate </TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>    DWORD</B> <I>dwBytes</I> </TD>
<TD width=61%>// number of bytes to reallocate </TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>   );</B></TD>
<TD width=61%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hHeap</I></P>

<P>Specifies the heap from which the memory will be reallocated. This is a handle returned by the <A HREF="e.pz6h.htm"><B>HeapCreate</B></A> or <A HREF="26hfdb.htm"><B>GetProcessHeap</B></A> function. </P>

<P><I>dwFlags</I></P>

<P>Specifies several controllable aspects of heap reallocation. Specifying any of these flags will override the corresponding flag specified in the <I>flOptions</I> parameter when the heap was created by using the <A HREF="e.pz6h.htm"><B>HeapCreate</B></A> function. You can specify one or more of the following flags: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=55%><B>Flag</B></TD>
<TD width=45%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=55%>HEAP_GENERATE_EXCEPTIONS</TD>
<TD width=45%>Specifies that the operating-system will raise an exception to indicate a function failure, such as an out-of-memory condition, instead of returning NULL.</TD>
</TR>

<TR VALIGN="top">
<TD width=55%>HEAP_NO_SERIALIZE</TD>
<TD width=45%>Specifies that mutual exclusion will not be used while this function is accessing the heap. For more information about HEAP_NO_SERIALIZE, see the Remarks section of <A HREF="e.pz6h.htm"><B>HeapCreate</B></A>.</TD>
</TR>

<TR VALIGN="top">
<TD width=55%>HEAP_REALLOC_IN_PLACE_ONLY</TD>
<TD width=45%>Specifies that there can be no movement when reallocating a memory block to a larger size. If this flag is not specified and the reallocation request is for a larger size, the function may move the block to a new location. If this flag is specified and the block cannot be enlarged without moving, the function will fail, leaving the original memory block unchanged.</TD>
</TR>

<TR VALIGN="top">
<TD width=55%>HEAP_ZERO_MEMORY</TD>
<TD width=45%>If the reallocation request is for a larger size, this flag specifies that the additional region of memory beyond the original size will be initialized to zero. The contents of the memory block up to its original size are unaffected.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpMem</I></P>

<P>Points to the block of memory that the function reallocates. This pointer is returned by an earlier call to the <A HREF="12yjji7.htm"><B>HeapAlloc</B></A> or <A HREF="#lcofg4"><B>HeapReAlloc</B></A> function. </P>

<P><I>dwBytes</I></P>

<P>Specifies the new size of the memory block, in bytes. A memory block's size can be increased or decreased by using this function. </P>

<P>If the heap specified by the <I>hHeap</I> parameter is a "non-growable" heap, <I>dwBytes</I> must be less than 0x7FFF8. You create a non-growable heap by calling the <B>HeapCreate</B> function with a nonzero value.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is a pointer to the reallocated memory block. </P>

<P>If the function fails and you have not specified HEAP_GENERATE_EXCEPTIONS, the return value is NULL. </P>

<P>If the function fails and you have specified HEAP_GENERATE_EXCEPTIONS, the function may generate the following exceptions: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=46%><B>Value</B></TD>
<TD width=54%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=46%>STATUS_NO_MEMORY</TD>
<TD width=54%>The reallocation attempt failed for lack of available memory.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>STATUS_ACCESS_VIOLATION</TD>
<TD width=54%>The reallocation attempt failed because of heap corruption or improper function parameters.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>If the function fails, it calls <A HREF="34n8_rg.htm"><B>SetLastError</B></A>. An application can call <A HREF="11c2vs7.htm"><B>GetLastError</B></A> for extended error information.</P>

<P><B>Remarks</B></P>

<P>If <B>HeapReAlloc</B> succeeds, it allocates at least the amount of memory requested. If the actual amount allocated is greater than the amount requested, the process can use the entire amount. To determine the actual size of the reallocated block, use the <B>HeapSize</B> function. </P>

<P>To free a block of memory allocated by <B>HeapReAlloc</B>, use the <B>HeapFree</B> function. </P>

<P><B>See Also</B></P>

<P><A HREF="26hfdb.htm"><B>GetProcessHeap</B></A>,<B> <A HREF="12yjji7.htm">HeapAlloc</A></B>, <A HREF="e.pz6h.htm"><B>HeapCreate</B></A>, <A HREF="xaqbyb.htm"><B>HeapDestroy</B></A>, <A HREF="ge8y4..htm"><B>HeapFree</B></A>, <A HREF="geepi..htm"><B>HeapSize</B></A>, <A HREF="34n8_rg.htm"><B>SetLastError</B></A> </P>

<P></P>

<P></P>

</BODY>
</HTML>
