<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Pinned Windows</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="lt6w7k"></A><B>Pinned Windows</B></P>

<P>The shell can request Quick View to display a new file in the same window as that used by the previous file viewer; that is, Quick View can "pin" a viewer window. Quick View communicates the shell's request by sending a <A HREF="ohacpy.htm">WM_DROPFILES</A> message to the file viewer. The message contains an internal drop files structure whose members include the path of the new file to be displayed. A file viewer uses the same code to handle both the "pinned" state and drag and drop operations in which the file viewer displays a file that the user has dragged and dropped on the file viewer's window. </P>

<P>Quick View implements the <A HREF="9dz5wd.htm"><B>IFileViewerSite</B></A> interface, which allows a file viewer to retrieve the handle of the current pinned window, if there is any, or set a new pinned window. When Quick View calls a file viewer's <A HREF="bv99i3.htm"><B>IFileViewer::ShowInitialize</B></A> member function, the file viewer receives the address of Quick View's <B>IFileViewerSite</B> interface. If the file viewer saves the address of the interface, it should call the <B>IFileViewerSite::AddRef</B> member function to increment the reference count. </P>

<P>Only one pinned window can exist at a time. A file viewer uses the <B>IFileViewerSite::SetPinnedWindow</B> interface to set a new pinned window and the <B>IFileViewerSite::GetPinnedWindow</B> interface to retrieve the handle of the current pinned window.</P>

<P>When Quick View calls the file viewer's <B>IFileViewer::Show</B> member function, the file viewer receives the address of a <A HREF="9z07au.htm"><B>FVSHOWINFO</B></A> structure that includes a optional <A HREF="ezena2.htm"><B>RECT</B></A> structure. A valid <B>RECT</B> structure is a hint from the shell that the file viewer window should be pinned; the file viewer should set the size and position of its window based on the information in the structure. </P>

<P>If the file viewer window receives a <A HREF="ohacpy.htm">WM_DROPFILES</A> message, it should fill in the <B>strNewFile</B> member of the <B>FVSHOWINFO</B> structure with the path of the new file to be displayed, fill the <B>rect</B> member with the size and position of the viewer window, and set the appropriate values in the <B>dwFlags</B> member. The file viewer should also fill the <B>punkrel</B> member with the address of an interface that the new file viewer should call to release the previous file viewer. Doing this allows the previous file viewer to perform cleanup operations. The new file viewer may be the same as the current file viewer if the current one supports the new file. If the old file viewer is the same as the new one, the release does not do anything because the reference count is greater than zero. </P>

<P>If a file viewer returns a file but Quick View cannot find a viewer for the new file, it calls the <A HREF="kloql3.htm"><B>IFileViewer::Show</B></A> member function for the old file viewer with the FVSIF_NEWFAILED value. The file viewer can either terminate or continue showing the previous file.</P>

</BODY>
</HTML>
