<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Drawing a Pie Chart</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1cmkyv4"></A><B>Drawing a Pie Chart</B></P>

<P>You can use the line and curve functions to draw a pie chart. The primary function used to draw pie charts is the <A HREF="28jjz8z.htm"><B>AngleArc</B></A> function, which requires you to supply the coordinates of the center of the pie, the radius of the pie, a start angle, and a sweep angle. Following is a dialog box that the user can use to enter these values. </P>

<P><IMG SRC="../images/bm87.gif" ALT="" BORDER=0></P>

<P>The dialog box template found in the application's resource script (.RC) file specifies characteristics of the preceding dialog box (its height, the controls it contains, and its style), as follows. </P>

<P>AngleArc DIALOG 6, 18, 160, 100  </P>

<P>STYLE WS_DLGFRAME | WS_POPUP | WS_VISIBLE | WS_CAPTION </P>

<P>CAPTION "Pie Chart" </P>

<P>FONT 8, "MS Sans Serif" </P>

<P>BEGIN </P>

<P>EDITTEXT   IDD_X, 18, 22, 25, 12, ES_AUTOHSCROLL </P>

<P>LTEXT      "X", 102, 4, 24, 9, 8 </P>

<P>EDITTEXT   IDD_Y, 18, 39, 25, 12, ES_AUTOHSCROLL </P>

<P>LTEXT      "Y", 104, 5, 42, 12, 8 </P>

<P>LTEXT      "Center", 105, 19, 11, 23, 8 </P>

<P>EDITTEXT   IDD_RADIUS, 103, 9, 32, 12, ES_AUTOHSCROLL </P>

<P>EDITTEXT   IDD_STARTANGLE, 103, 31, 32, 12, ES_AUTOHSCROLL </P>

<P>EDITTEXT   IDD_SWEEPANGLE, 103, 53, 32, 12, ES_AUTOHSCROLL </P>

<P>LTEXT      "Radius", 109, 73, 11, 25, 8 </P>

<P>LTEXT      "Start Angle", 110, 59, 33, 42, 8 </P>

<P>LTEXT      "Sweep Angle", 111, 55, 55, 43, 8 </P>

<P>PUSHBUTTON "OK", IDD_OK, 9, 82, 40, 14 </P>

<P>PUSHBUTTON "Cancel", IDD_CANCEL, 110, 82, 40, 14 </P>

<P>END </P>

<P></P>

<P></P>

<P>The dialog box procedure, found in the application's source file, retrieves data (center coordinates, arc radius, and start and sweep angles) by following these steps: </P>

<P>1.The application-defined ClearBits function initializes the array that receives the user-input to zero. </P>

<P>2.The application-defined GetStrLngth function retrieves the length of the string entered by the user. </P>

<P>3.The application-defined RetrieveInput function retrieves the value entered by the user. </P>

<P></P>

<P>The following sample code shows the dialog box procedure.</P>

<P>BOOL CALLBACK ArcDlgProc(HWND hdlg, UINT uMsg, WPARAM wParam,  </P>

<P>LPARAM lParam) </P>

<P>{ </P>

<P>CHAR chInput[4];    /* receives control-window input  */ </P>

<P>int cch;            /* array-size and count variable  */ </P>

<P></P>

<P>switch (uMsg) { </P>

<P>case WM_INITDIALOG: </P>

<P>return FALSE; </P>

<P></P>

<P>case WM_COMMAND: </P>

<P>switch (wParam){ </P>

<P></P>

<P>/* </P>

<P>* If the user pressed the OK button, retrieve the </P>

<P>* data that was entered in the various AngleArc </P>

<P>* controls. </P>

<P>*/ </P>

<P></P>

<P>case IDD_OK: </P>

<P></P>

<P>/* </P>

<P>* Retrieve the x-coordinate of the arc's </P>

<P>* center. </P>

<P>*/ </P>

<P></P>

<P>ClearBits(chInput, sizeof(chInput)); </P>

<P>GetDlgItemText(hdlg, IDD_X, chInput, </P>

<P>sizeof(chInput)); </P>

<P>cch = GetStrLngth(chInput); </P>

<P>nX = (int)RetrieveInput(chInput, cch); </P>

<P></P>

<P>/* </P>

<P>* Retrieve the y-coordinate of the arc's </P>

<P>* center. </P>

<P>*/ </P>

<P></P>

<P>ClearBits(chInput, sizeof(chInput)); </P>

<P>GetDlgItemText(hdlg, IDD_Y, chInput, </P>

<P>sizeof(chInput)); </P>

<P>cch = GetStrLngth(chInput); </P>

<P>nY = (int)RetrieveInput(chInput, cch); </P>

<P></P>

<P>/* Retrieve the radius of the arc. */ </P>

<P></P>

<P>ClearBits(chInput, sizeof(chInput)); </P>

<P>GetDlgItemText(hdlg, IDD_RADIUS, chInput, </P>

<P>sizeof(chInput)); </P>

<P>cch = GetStrLngth(chInput); </P>

<P>dwRadius = (DWORD) RetrieveInput(chInput, cch); </P>

<P></P>

<P>/* Retrieve the start angle. */ </P>

<P></P>

<P>ClearBits(chInput, sizeof(chInput)); </P>

<P>GetDlgItemText(hdlg, IDD_STARTANGLE, chInput, </P>

<P>sizeof(chInput)); </P>

<P>cch = GetStrLngth(chInput); </P>

<P>xStartAngle = (float) RetrieveInput(chInput, </P>

<P>cch); </P>

<P></P>

<P>/* Retrieve the sweep angle. */ </P>

<P></P>

<P>ClearBits(chInput, sizeof(chInput)); </P>

<P>GetDlgItemText(hdlg, IDD_SWEEPANGLE, chInput, </P>

<P>sizeof(chInput)); </P>

<P>cch = GetStrLngth(chInput); </P>

<P>xSweepAngle = (float) RetrieveInput(chInput, </P>

<P>cch); </P>

<P></P>

<P>EndDialog(hdlg, FALSE); </P>

<P>return TRUE; </P>

<P></P>

<P>/* </P>

<P>* If user presses the CANCEL button, close the </P>

<P>* dialog box. </P>

<P>*/ </P>

<P></P>

<P>case IDD_CANCEL: </P>

<P>EndDialog(hdlg, FALSE); </P>

<P>return TRUE; </P>

<P>} /* end switch (wParam) */ </P>

<P></P>

<P>break; </P>

<P></P>

<P>default: </P>

<P>return FALSE; </P>

<P>} /* end switch (message) */ </P>

<P></P>

<P>UNREFERENCED_PARAMETER(lParam); </P>

<P>} </P>

<P></P>

<P></P>

<P>void ClearBits(LPTSTR cArray, int iLength) </P>

<P>{ </P>

<P>int i; </P>

<P></P>

<P>for (i = 0; i &lt; iLength; i++) </P>

<P>cArray[i] = 0; </P>

<P>} </P>

<P></P>

<P>int GetStrLngth(LPTSTR cArray) </P>

<P>{ </P>

<P>int i = 0; </P>

<P></P>

<P>while (cArray[i++] != 0); </P>

<P>return i - 1; </P>

<P>} </P>

<P></P>

<P>DWORD RetrieveInput(LPTSTR cArray, int iLength) </P>

<P>{ </P>

<P>int i, iTmp; </P>

<P>double dVal, dCount; </P>

<P></P>

<P>dVal = 0.0; </P>

<P>dCount = (double) (iLength - 1); </P>

<P></P>

<P>/* Convert ASCII input to a floating-point value. */ </P>

<P></P>

<P>for (i = 0; i &lt; iLength; i++) { </P>

<P>iTmp = cArray[i] - 0x30; </P>

<P>dVal = dVal + (((double)iTmp) * pow(10.0, dCount--)); </P>

<P>} </P>

<P></P>

<P>return (DWORD) dVal; </P>

<P>} </P>

<P></P>

<P>To draw each section of the pie chart, pass the values entered by the user to the <A HREF="28jjz8z.htm"><B>AngleArc</B></A> function. To fill the pie chart using the current brush, embed the call to <B>AngleArc</B> in a path bracket. The following code sample shows the defined path bracket and the call to <B>AngleArc</B>. </P>

<P>int nX;  </P>

<P>int nY; </P>

<P>DWORD dwRadius; </P>

<P>float xStartAngle; </P>

<P>float xSweepAngle; </P>

<P></P>

<P>case (IDM_ANGLEARC): </P>

<P></P>

<P>DialogBox((HINSTANCE) GetModuleHandle (NULL), </P>

<P>(LPTSTR) "AngleArc", </P>

<P>hwnd, (DLGPROC) ArcDlgProc); </P>

<P></P>

<P>hdc = GetDC(hwnd); </P>

<P>BeginPath(hdc); </P>

<P>SelectObject(hdc, </P>

<P>GetStockObject(GRAY_BRUSH)); </P>

<P>MoveToEx(hdc, nX, nY, (LPPOINT) NULL); </P>

<P>AngleArc(hdc, nX, nY, dwRadius, </P>

<P>xStartAngle, xSweepAngle); </P>

<P>LineTo(hdc, nX, nY); </P>

<P>EndPath(hdc); </P>

<P>StrokeAndFillPath(hdc); </P>

<P>ReleaseDC(hwnd, hdc); </P>

<P>break; </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
