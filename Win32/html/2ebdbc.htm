<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CallNextHookEx</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2ebdbc"></A><B>CallNextHookEx  <A HREF="l729ye.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qpp.yo.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="rnpdgc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>CallNextHookEx</B> function passes the hook information to the next hook procedure in the current hook chain. This function supersedes the <B>DefHookProc</B> function. </P>

<P><B>LRESULT CallNextHookEx(</B></P>

<TABLE cols=2 width=429>

<TR VALIGN="top">
<TD width=38%><B>HHOOK</B> <I>hhk</I><B>,</B></TD>
<TD width=62%>// handle to current hook</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    int</B> <I>nCode</I><B>,</B></TD>
<TD width=62%>// hook code passed to hook procedure</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    WPARAM</B> <I>wParam</I><B>,</B></TD>
<TD width=62%>// value passed to hook procedure</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    LPARAM</B> <I>lParam</I> </TD>
<TD width=62%>// value passed to hook procedure</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>   );</B></TD>
<TD width=62%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hhk</I></P>

<P>Identifies the current hook. An application receives this handle as a result of a previous call to the <A HREF="2d7__i2.htm"><B>SetWindowsHookEx</B></A> function. </P>

<P><I>nCode</I></P>

<P>Specifies the hook code passed to the current hook procedure. The next hook procedure uses this code to determine how to process the hook information. </P>

<P><I>wParam</I></P>

<P>Specifies the <I>wParam</I> value passed to the current hook procedure. The meaning of this parameter depends on the type of hook associated with the current hook chain. </P>

<P><I>lParam</I></P>

<P>Specifies the <I>lParam</I> value passed to the current hook procedure. The meaning of this parameter depends on the type of hook associated with the current hook chain. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the value returned by the next hook procedure in the chain. The current hook procedure must also return this value. The meaning of the return value depends on the hook type. For more information, see the descriptions of the individual hook procedures. </P>

<P><B>Remarks</B></P>

<P>Hook procedures are installed in chains for particular hook types. <B>CallNextHookEx</B> calls the next hook in the chain. </P>

<P>Calling <B>CallNextHookEx</B> is optional. A hook procedure can call this function either before or after processing the hook information. If a hook procedure does not call <B>CallNextHookEx</B>, Windows does not call the hook procedures installed before the current hook procedure was installed. </P>

<P><B>See Also</B></P>

<P><A HREF="11tlwq9.htm"><B>SetWindowsHook</B></A>, <A HREF="2d7__i2.htm"><B>SetWindowsHookEx</B></A>, <A HREF="16lbjua.htm"><B>UnhookWindowsHook</B></A>, <A HREF="kjrpns.htm"><B>UnhookWindowsHookEx</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
