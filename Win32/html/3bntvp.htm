<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Enumerating Network Resources</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="3bntvp"></A><B>Enumerating Network Resources</B></P>

<P>To enumerate a network container resource, your application should pass the address of a <A HREF="1e2f7kp.htm"><B>NETRESOURCE</B></A> structure to the <A HREF="1gqx7gy.htm"><B>WNetOpenEnum</B></A> function. <B>WNetOpenEnum</B> creates a handle to the resource described by the <B>NETRESOURCE</B> structure. The application then passes this handle to the <A HREF="1_s56l.htm"><B>WNetEnumResource</B></A> function, which returns information about the resource in the form of an array of <B>NETRESOURCE</B> structures. When the handle is no longer needed, the application can close it by calling the <A HREF="a3f0g9.htm"><B>WNetCloseEnum</B></A> function. </P>

<P>Your application can continue enumerating any container resource described in the array of <B>NETRESOURCE</B> structures retrieved by <B>WNetEnumResource</B>. If the <B>dwUsage</B> member of the <B>NETRESOURCE</B> structure is RESOURCEUSAGE_CONTAINER, the application can pass the address of that structure to <B>WNetOpenEnum</B> to open the container and continue the enumeration. If <B>dwUsage</B> is RESOURCEUSAGE_CONNECTABLE, the application can pass the structure's address to the <A HREF="xgb4k0.htm"><B>WNetAddConnection2</B></A> function. </P>

<P>The following example illustrates an application-defined function (EnumerateFunc) that enumerates all the resources on a network. When calling this function, specify NULL for the pointer to the <B>NETRESOURCE</B> structure. When <B>WNetOpenEnum</B> receives the NULL pointer, it retrieves a handle to the root of the network. Whenever a <B>NETRESOURCE</B> structure retrieved by <B>WNetEnumResource</B> is RESOURCEUSAGE_CONTAINER, the EnumerateFunc function calls itself and uses a pointer to that structure in its call to <B>WNetOpenEnum</B>. </P>

<P>BOOL WINAPI EnumerateFunc(HWND hwnd,  </P>

<P>HDC hdc, </P>

<P>LPNETRESOURCE lpnr) </P>

<P>{ </P>

<P>DWORD dwResult, dwResultEnum; </P>

<P>HANDLE hEnum; </P>

<P>DWORD cbBuffer = 16384;      // 16K is a good size </P>

<P>DWORD cEntries = 0xFFFFFFFF; // enumerate all possible entries </P>

<P>LPNETRESOURCE lpnrLocal;     // pointer to enumerated structures </P>

<P>DWORD i; </P>

<P></P>

<P>dwResult = WNetOpenEnum(RESOURCE_GLOBALNET, </P>

<P>RESOURCETYPE_ANY, </P>

<P>0,                 // enumerate all resources </P>

<P>lpnr,              // NULL first time this function is called </P>

<P>&amp;hEnum);           // handle to resource </P>

<P></P>

<P>if (dwResult != NO_ERROR) { </P>

<P></P>

<P>// An application-defined error handler is demonstrated in the </P>

<P>// section titled "Retrieving Network Errors." </P>

<P>NetErrorHandler(hwnd, dwResult, (LPSTR)"WNetOpenEnum"); </P>

<P>return FALSE; </P>

<P>} </P>

<P></P>

<P>do { </P>

<P></P>

<P>// Allocate memory for NETRESOURCE structures.</P>

<P></P>

<P>lpnrLocal = (LPNETRESOURCE) GlobalAlloc(GPTR, cbBuffer); </P>

<P></P>

<P>dwResultEnum = WNetEnumResource(hEnum, // resource handle </P>

<P>&amp;cEntries,               // defined locally as 0xFFFFFFFF </P>

<P>lpnrLocal,               // LPNETRESOURCE </P>

<P>&amp;cbBuffer);              // buffer size </P>

<P></P>

<P>if (dwResultEnum == NO_ERROR) { </P>

<P>for(i = 0; i &lt; cEntries; i++) </P>

<P>{ </P>

<P>// Following is an application-defined function for </P>

<P>// displaying contents of NETRESOURCE structures. </P>

<P></P>

<P>DisplayStruct(hdc, &amp;lpnrLocal[i]); </P>

<P></P>

<P>// </P>

<P>// If this NETRESOURCE is a container, call the function </P>

<P>// recursively. </P>

<P>if(RESOURCEUSAGE_CONTAINER == </P>

<P>(lpnrLocal[i].dwUsage &amp; RESOURCEUSAGE_CONTAINER)) </P>

<P>if(!EnumerateFunc(hwnd, hdc, &amp;lpnrLocal[i])) </P>

<P>TextOut(hdc, 10, 10, </P>

<P>"EnumerateFunc returned FALSE.", 29); </P>

<P></P>

<P>} </P>

<P>} </P>

<P></P>

<P>else if (dwResultEnum != ERROR_NO_MORE_ITEMS) { </P>

<P>NetErrorHandler(hwnd, dwResultEnum, (LPSTR)"WNetEnumResource"); </P>

<P>break; </P>

<P>} </P>

<P>} </P>

<P>while(dwResultEnum != ERROR_NO_MORE_ITEMS); </P>

<P></P>

<P>GlobalFree((HGLOBAL) lpnrLocal); </P>

<P></P>

<P>dwResult = WNetCloseEnum(hEnum); </P>

<P></P>

<P>if(dwResult != NO_ERROR) { </P>

<P>NetErrorHandler(hwnd, dwResult, (LPSTR)"WNetCloseEnum"); </P>

<P>return FALSE; </P>

<P>} </P>

<P></P>

<P>return TRUE; </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
