<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Arranging, Sorting, and Finding</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="6zvqvd"></A><B>Arranging, Sorting, and Finding</B></P>

<P>You can use list view messages to arrange and sort items and to find items based on their attributes or positions. Arranging repositions items to align on a grid, but the indexes of the items do not change. Sorting changes the sequence of items (and their corresponding indexes) and then repositions them accordingly. You can arrange items only in icon and small icon views, but you can sort items in any view.</P>

<P>To arrange items, use the <A HREF="2m1z9l.htm">LVM_ARRANGE</A> message. You can ensure that items are arranged at all times by specifying the LVS_AUTOARRANGE window style.</P>

<P>To sort items, use the <A HREF="g40bxl.htm">LVM_SORTITEMS</A> message. When you sort using this message, you specify an application-defined callback function that the list view control calls to compare the relative order of any two items. The control passes to the comparison function the item data associated with each of the two items. The item data is the value that was specified in the <B>lParam</B> member of the item's <B>LV_ITEM</B> structure when it was inserted into the list. By specifying the appropriate item data and supplying an appropriate comparison function, you can sort items by their label, by any subitem, or by any other property. Note that sorting items does not reorder the corresponding subitems. Thus, if any subitems are not callback items, you must regenerate the subitems after sorting.</P>

<P>You can ensure that a list view control is always sorted by specifying the LVS_SORTASCENDING or LVS_SORTDESCENDING window style. Controls with these styles use the label text of the items to sort them in ascending or descending order. You cannot supply a comparison function when using these window styles. If a list view control has either of these styles, an LVM_INSERTITEM message will fail if you try to insert an item that has LPSTR_TEXTCALLBACK as the <B>pszText</B> member of its <A HREF="3f10cr.htm"><B>LV_ITEM</B></A> structure.</P>

<P>You can find a list view item with specific properties by using the <A HREF="21f4pbh.htm">LVM_FINDITEM</A> message. You can find a list view item that is in a specified state and bears a specified geometrical relationship to a given item by using the <A HREF="1madyct.htm">LVM_GETNEXTITEM</A> message. For example, you can retrieve the next selected item to the right of a specified item.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
