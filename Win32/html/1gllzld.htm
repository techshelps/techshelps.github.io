<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>RegisterHotKey</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1gllzld"></A><B>RegisterHotKey  <A HREF="d3nkua.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1xtfdy5.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="fkf.jh.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>RegisterHotKey</B> function defines a hot key for the current thread. </P>

<P><B>BOOL RegisterHotKey(</B></P>

<TABLE cols=2 width=417>

<TR VALIGN="top">
<TD width=36%><B>HWND</B> <I>hWnd</I><B>,</B></TD>
<TD width=64%>// window to receive hot-key notification</TD>
</TR>

<TR VALIGN="top">
<TD width=36%><B>    int</B> <I>id</I><B>,</B></TD>
<TD width=64%>// identifier of hot key</TD>
</TR>

<TR VALIGN="top">
<TD width=36%><B>    UINT</B> <I>fsModifiers</I><B>,</B></TD>
<TD width=64%>// key-modifier flags</TD>
</TR>

<TR VALIGN="top">
<TD width=36%><B>    UINT</B> <I>vk</I> </TD>
<TD width=64%>// virtual-key code</TD>
</TR>

<TR VALIGN="top">
<TD width=36%><B>   );</B></TD>
<TD width=64%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hWnd</I></P>

<P>Identifies the window that will receive WM_HOTKEY messages generated by the hot key. If this parameter is NULL, WM_HOTKEY messages are posted to the message queue of the calling thread and must be processed in the message loop. </P>

<P><I>id</I></P>

<P>Specifies the identifier of the hot key. No other hot key in the calling thread should have the same identifier. An application must specify a value in the range 0x0000 through 0xBFFF. A shared dynamic-link library (DLL) must specify a value in the range 0xC000 through 0xFFFF (the range returned by the <A HREF="1qh2cm4.htm"><B>GlobalAddAtom</B></A> function). To avoid conflicts with hot-key identifiers defined by other shared DLLs, a DLL should use the <B>GlobalAddAtom</B> function to obtain the hot-key identifier. </P>

<P><I>fsModifiers</I></P>

<P>Specifies keys that must be pressed in combination with the key specified by the <I>nVirtKey</I> parameter in order to generate the WM_HOTKEY message. The <I>fsModifiers</I> parameter can be a combination of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=31%><B>Value</B></TD>
<TD width=69%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=31%>MOD_ALT</TD>
<TD width=69%>Either ALT key must be held down.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>MOD_CONTROL</TD>
<TD width=69%>Either CTRL key must be held down.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%>MOD_SHIFT</TD>
<TD width=69%>Either SHIFT key must be held down.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>vk</I></P>

<P>Specifies the virtual-key code of the hot key. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. </P>

<P><B>Remarks</B></P>

<P>When a key is pressed, the system looks for a match against all thread hot keys. Upon finding a match, the system posts the WM_HOTKEY message to the message queue of the thread that registered the hot key. This message is posted to the beginning of the queue so it is removed by the next iteration of the message loop. </P>

<P>This function cannot associate a hot key with a window created by another thread. </P>

<P><B>RegisterHotKey</B> fails if the keystrokes specified for the hot key have already been registered by another hot key. </P>

<P>If the window identified by the <I>hWnd</I> parameter already registered a hot key with the same identifier as that specified by the <I>id</I> parameter, the new values for the <I>fsModifiers</I> and <I>vk</I> parameters replace the previously specified values for these parameters. </P>

<P><B>See Also</B></P>

<P><A HREF="1qh2cm4.htm"><B>GlobalAddAtom</B></A>, <A HREF="1mgfjvp.htm"><B>UnregisterHotKey</B></A>, <A HREF="uqh9ub.htm">WM_HOTKEY</A> </P>

</BODY>
</HTML>
