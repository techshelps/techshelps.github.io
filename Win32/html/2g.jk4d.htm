<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Processing the WM_CONTEXTMENU Message</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2g.jk4d"></A><B>Processing the WM_CONTEXTMENU Message</B></P>

<P>The <A HREF="_1f8jj.htm">WM_CONTEXTMENU</A> message is generated when an application's window procedure passes the <A HREF="15.j.k4.htm">WM_RBUTTONUP</A> or <A HREF="9vlml..htm">WM_NCRBUTTONUP</A> message to the <A HREF="32d1nbh.htm"><B>DefWindowProc</B></A> function. The application can process this message to display a shortcut menu appropriate to a specific portion of its screen. If the application does not display a shortcut menu, it should pass the message to <B>DefWindowProc</B> for default handling.</P>

<P>Following is an example of WM_CONTEXTMENU message processing as it might appear in an application's window procedure. The low-order and high-order words of the <I>lParam</I> parameter specify the screen coordinates of the mouse when the right mouse button is released. The application-defined OnContextMenu function returns TRUE if it displays a context menu, or FALSE if it does not.</P>

<P>case WM_CONTEXTMENU:  </P>

<P>if (!OnContextMenu(hwnd, LOWORD(lParam), HIWORD(lParam))) </P>

<P>return DefWindowProc(hwnd, uMsg, wParam, lParam); </P>

<P>break; </P>

<P></P>

<P>The following application-defined OnContextMenu function displays a shortcut menu if the specified mouse position is within the window's client area. A more sophisticated function might display one of several different menus, depending on which portion of the client area is specified. To actually display the shortcut menu, this example calls an application-defined function called DisplayContextMenu. For a description of this function, see <A HREF="09f7k7.htm">Displaying a Shortcut Menu</A>.</P>

<P>BOOL WINAPI OnContextMenu(HWND hwnd, int x, int y)  </P>

<P>{ </P>

<P>RECT rc;                    // client area of window </P>

<P>POINT pt = { x, y };        // location of mouse click </P>

<P></P>

<P>// Get the bounding rectangle of the client area. </P>

<P></P>

<P>GetClientRect(hwnd, &amp;rc); </P>

<P></P>

<P>// Convert the mouse position to client coordinates. </P>

<P></P>

<P>ScreenToClient(hwnd, &amp;pt); </P>

<P></P>

<P>// If the position is in the client area, display a  </P>

<P>// shortcut menu. </P>

<P></P>

<P>if (PtInRect(&amp;rc, pt)) { </P>

<P>ClientToScreen(hwnd, &amp;pt); </P>

<P>DisplayContextMenu(hwnd, pt); </P>

<P>return TRUE; </P>

<P>} </P>

<P></P>

<P>// Return FALSE if no menu is displayed. </P>

<P></P>

<P>return FALSE; </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
