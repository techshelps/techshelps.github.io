<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating Frame and Child Windows</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="d71jgj"></A><B>Creating Frame and Child Windows</B></P>

<P>After registering its window classes, an MDI application can create its windows. First, it creates its frame window by using the <A HREF="we1r5q.htm"><B>CreateWindow</B></A> or <A HREF="rpk.pc.htm"><B>CreateWindowEx</B></A> function. After creating its frame window, the application creates its client window, again by using <B>CreateWindow</B> or <B>CreateWindowEx</B>. The application should specify MDICLIENT as the client window's class name; MDICLIENT is a preregistered window class defined by Windows. The <I>lpvParam</I> parameter of <B>CreateWindow</B> or <B>CreateWindowEx</B> should point to a <A HREF="1s_jdbh.htm"><B>CLIENTCREATESTRUCT</B></A> structure. This structure contains the members described in the following table: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=26%><B>Member</B></TD>
<TD width=74%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=26%><B>hWindowMenu</B></TD>
<TD width=74%>Identifies the Window menu used for controlling MDI child windows. As child windows are created, the application adds their titles to the Window menu as menu items. The user can then activate a child window by choosing its title from the Window menu.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><B>idFirstChild</B></TD>
<TD width=74%>Specifies the identifier of the first MDI child window. The first MDI child window created is assigned this identifier. Additional windows are created with incremented window identifiers. When a child window is destroyed, Windows immediately reassigns the window identifiers to keep their range contiguous.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>When a child window's title is added to the Window menu, Windows assigns an identifier to the child window. When the user chooses a child window's title, the frame window receives a <A HREF="71v.3j.htm">WM_COMMAND</A> message with the identifier in the <I>wParam</I> parameter. You should specify a value for the <B>idFirstChild</B> member that does not conflict with menu-item identifiers in the frame window's menu. </P>

<P>Multipad's frame window procedure creates the MDI client window while processing the <A HREF="2re1yt3.htm">WM_CREATE</A> message. The following example shows how the client window is created.</P>

<P>case WM_CREATE:  </P>

<P>{ </P>

<P>CLIENTCREATESTRUCT ccs; </P>

<P></P>

<P>// Retrieve the handle of the Window menu and assign the </P>

<P>// first child window identifier. </P>

<P></P>

<P>ccs.hWindowMenu = GetSubMenu(GetMenu(hwnd), WINDOWMENU); </P>

<P>ccs.idFirstChild = IDM_WINDOWCHILD; </P>

<P></P>

<P>// Create the MDI client window. </P>

<P></P>

<P>hwndMDIClient = CreateWindow( "MDICLIENT", (LPCTSTR) NULL, </P>

<P>WS_CHILD | WS_CLIPCHILDREN | WS_VSCROLL | WS_HSCROLL, </P>

<P>0, 0, 0, 0, hwnd, (HMENU) 0xCAC, hInst, (LPSTR) &amp;ccs); </P>

<P></P>

<P>ShowWindow(hwndMDIClient, SW_SHOW); </P>

<P>} </P>

<P>break; </P>

<P></P>

<P>Titles of child windows are added to the bottom of the Window menu. If the application adds strings to the Window menu by using the <A HREF="12z._0t.htm"><B>AppendMenu</B></A> function, these strings can be overwritten by the titles of the child windows when the Window menu is repainted (whenever a child window is created or destroyed). An MDI application that adds strings to its Window menu should use the <A HREF="1o2j7n8.htm"><B>InsertMenu</B></A> function and verify that the titles of child windows have not overwritten these new strings. </P>

<P>Use the WS_CLIPCHILDREN style to create the MDI client window to prevent the window from painting over its child windows. </P>

</BODY>
</HTML>
