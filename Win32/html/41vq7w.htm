<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using Owner-Drawn Buttons</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="41vq7w"></A><B>Using Owner-Drawn Buttons</B></P>

<P>The parent window of an owner-drawn button typically responds to at least three messages for the button: <A HREF="ii1w.b.htm">WM_INITDIALOG</A>, <A HREF="71v.3j.htm">WM_COMMAND</A>, and <A HREF="70lqx9p.htm">WM_DRAWITEM</A>. It is not necessary to process the <A HREF=".a2o7n.htm">WM_MEASUREITEM</A> message for owner-drawn buttons. </P>

<P>When you must paint an owner-drawn button, Windows sends the parent window a WM_DRAWITEM message whose <I>lParam</I> points to a <A HREF="1sswtgp.htm"><B>DRAWITEMSTRUCT</B></A> structure. Use this structure with all owner-drawn controls to provide the application with the information it requires to paint the control. The <B>itemAction</B> and <B>itemState</B> members of the <B>DRAWITEMSTRUCT</B> structure define how to paint an owner-drawn button. </P>

<P>The following example shows how to process WM_INITDIALOG, WM_DRAWITEM, and WM_COMMAND messages for owner-drawn buttons. This example demonstrates how to draw one of two bitmaps for a control, depending on whether the control is selected. You would typically use the <I>wParam</I> parameter of the WM_DRAWITEM message to identify the control; in this example, only one control is assumed. </P>

<P>LRESULT APIENTRY OwnDrawProc(hDlg, message, wParam, lParam)  </P>

<P>HWND hDlg;      // window handle of dialog box </P>

<P>UINT message;   // type of message </P>

<P>UINT wParam;    // message-specific information </P>

<P>LONG lParam; </P>

<P>{ </P>

<P>HDC hdcMem; </P>

<P>LPDRAWITEMSTRUCT lpdis; </P>

<P></P>

<P>switch (message) { </P>

<P>case WM_INITDIALOG: </P>

<P></P>

<P>// hinst, hbm1 and hbm2 are defined globally. </P>

<P>hbm1 = LoadBitmap((HANDLE) hinst, "OwnBit1"); </P>

<P>hbm2 = LoadBitmap((HANDLE) hinst, "OwnBit2"); </P>

<P>return TRUE; </P>

<P></P>

<P>case WM_DRAWITEM: </P>

<P>lpdis = (LPDRAWITEMSTRUCT) lParam; </P>

<P>hdcMem = CreateCompatibleDC(lpdis-&gt;hDC); </P>

<P></P>

<P>if (lpdis-&gt;itemState &amp; ODS_SELECTED)  // if selected </P>

<P>SelectObject(hdcMem, hbm2); </P>

<P>else </P>

<P>SelectObject(hdcMem, hbm1); </P>

<P></P>

<P>// Destination </P>

<P>StretchBlt( </P>

<P>lpdis-&gt;hDC,         // destination DC </P>

<P>lpdis-&gt;rcItem.left, // x upper left </P>

<P>lpdis-&gt;rcItem.top,  // y upper left </P>

<P></P>

<P>// The next two lines specify the width and </P>

<P>// height. </P>

<P>lpdis-&gt;rcItem.right - lpdis-&gt;rcItem.left, </P>

<P>lpdis-&gt;rcItem.bottom - lpdis-&gt;rcItem.top, </P>

<P>hdcMem,    // source device context </P>

<P>0, 0,      // x and y upper left </P>

<P>32,        // source bitmap width </P>

<P>32,        // source bitmap height </P>

<P>SRCCOPY);  // raster operation </P>

<P></P>

<P>DeleteDC(hdcMem); </P>

<P>return TRUE; </P>

<P></P>

<P>case WM_COMMAND: </P>

<P>if (wParam == IDOK </P>

<P>|| wParam == IDCANCEL) { </P>

<P>EndDialog(hDlg, TRUE); </P>

<P>return TRUE; </P>

<P>} </P>

<P>if (HIWORD(wParam) == BN_CLICKED) { </P>

<P>switch (LOWORD(wParam)) { </P>

<P>case IDB_OWNERDRAW: </P>

<P></P>

<P>. </P>

<P>. // application-defined processing </P>

<P>. </P>

<P></P>

<P>break; </P>

<P>} </P>

<P>} </P>

<P>break; </P>

<P></P>

<P>case WM_DESTROY: </P>

<P>DeleteObject(hbm1);  // delete bitmaps </P>

<P>DeleteObject(hbm2); </P>

<P></P>

<P>break; </P>

<P></P>

<P>} </P>

<P>return FALSE; </P>

<P>UNREFERENCED_PARAMETER(lParam); </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
