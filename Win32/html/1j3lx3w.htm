<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>QueryServiceConfig</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1j3lx3w"></A><B>QueryServiceConfig  <A HREF="32mkyoe.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="12c8zrk.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="we4jtq.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>QueryServiceConfig</B> function retrieves the configuration parameters of the specified service. </P>

<P><B>BOOL QueryServiceConfig(</B></P>

<TABLE cols=2 width=603>

<TR VALIGN="top">
<TD width=55%><B>SC_HANDLE</B> <I>hService</I><B>,</B></TD>
<TD width=45%>// handle of service </TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>    LPQUERY_SERVICE_CONFIG</B> <I>lpServiceConfig</I><B>,</B></TD>
<TD width=45%>// address of service config. structure  </TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>    DWORD</B> <I>cbBufSize</I><B>,</B></TD>
<TD width=45%>// size of service configuration buffer </TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>    LPDWORD</B> <I>pcbBytesNeeded</I> </TD>
<TD width=45%>// address of variable for bytes needed  </TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>   );</B></TD>
<TD width=45%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hService</I></P>

<P>Identifies the service. This handle is returned by the <A HREF="20gsky6.htm"><B>OpenService</B></A> or <A HREF="2wng26.htm"><B>CreateService</B></A> function, and it must have SERVICE_QUERY_CONFIG access. </P>

<P><I>lpServiceConfig</I></P>

<P>Points to a <A HREF="40nk0g0.htm"><B>QUERY_SERVICE_CONFIG</B></A> structure in which the service configuration information is returned. </P>

<P><I>cbBufSize</I></P>

<P>Specifies the size, in bytes, of the buffer pointed to by the <I>lpServiceConfig</I> parameter. </P>

<P><I>pcbBytesNeeded</I></P>

<P>Points to a variable that receives the number of bytes needed to return all the configuration information. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Errors</B></P>

<P>The following error codes can be set by the service control manager. Others can be set by the registry functions that are called by the service control manager. </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=46%><B>Value</B></TD>
<TD width=54%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=46%>ERROR_ACCESS_DENIED</TD>
<TD width=54%>The specified handle was not opened with SERVICE_QUERY_CONFIG access.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>ERROR_INSUFFICIENT_BUFFER</TD>
<TD width=54%>There is more service configuration information than would fit into the <I>lpServiceConfig</I> buffer. The number of bytes required to get all the information is returned in the <I>pcbBytesNeeded</I> parameter. Nothing is written to the <I>lpServiceConfig</I> buffer.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>ERROR_INVALID_HANDLE</TD>
<TD width=54%>The specified handle is invalid.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Remarks</B></P>

<P>The <B>QueryServiceConfig</B> function returns the service configuration information kept in the registry for a particular service. This configuration information was first set via the <B>CreateService</B> function, and may have been updated via the <A HREF="5x.__7b.htm"><B>ChangeServiceConfig</B></A> function. If the service was running when the configuration information was last changed, the information returned with the <B>QueryServiceConfig</B> will not reflect the true configuration of the service that is running. Instead, it will reflect the configuration of the service when it is run next. Upon stopping the service, the service control manager database will be updated with the configuration that is stored in the registry. The DisplayName key is an exception to this. When the DisplayName key is changed, it takes effect immediately regardless of whether the service is running. </P>

<P>The <I>lpServiceConfig</I> buffer must be large enough to hold the strings pointed to by the members of the <B>QUERY_SERVICE_CONFIG</B> structure. </P>

<P><B>See Also</B></P>

<P><A HREF="5x.__7b.htm"><B>ChangeServiceConfig</B></A>, <A HREF="2wng26.htm"><B>CreateService</B></A>, <A HREF="20gsky6.htm"><B>OpenService</B></A>, <A HREF="40nk0g0.htm"><B>QUERY_SERVICE_CONFIG</B></A>, <A HREF="1f_vgrd.htm"><B>QueryServiceObjectSecurity</B></A>, <A HREF="jps..c.htm"><B>QueryServiceStatus</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
