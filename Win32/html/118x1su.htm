<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Getting Hardware Information</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="118x1su"></A><B>Getting Hardware Information</B></P>

<P>The following example uses the <A HREF="nh29xo.htm"><B>GetSystemInfo</B></A> function to obtain hardware information such as the OEM identifier, processor type, page size, and so on. The example displays the information in a window's client area. </P>

<P>SYSTEM_INFO siSysInfo;   // struct. for hardware information  </P>

<P>int aTabs[1] = {260};    // tab stop for TabbedTextOut  </P>

<P></P>

<P>TCHAR tchBuffer[BUFFER]; // buffer for expanded string </P>

<P>int nSize;               // size of string </P>

<P></P>

<P>// Display the "hardware information" header. </P>

<P></P>

<P>nSize = sprintf(tchBuffer, </P>

<P>"Hardware information:"); </P>

<P>TextOut(hdc, 15, 20, tchBuffer, nSize); </P>

<P></P>

<P>// Copy the hardware information to the SYSTEM_INFO structure. </P>

<P></P>

<P>GetSystemInfo(&amp;siSysInfo); </P>

<P></P>

<P>// Display the contents of the SYSTEM_INFO structure. </P>

<P></P>

<P>nSize = sprintf(tchBuffer, </P>

<P>"OEM ID: %u\tNumber of Processors: %u", </P>

<P>siSysInfo.dwOemId, </P>

<P>siSysInfo.dwNumberOfProcessors); </P>

<P>TabbedTextOut(hdc, 25, 40, tchBuffer, </P>

<P>nSize, 1, aTabs, 25); </P>

<P></P>

<P>nSize = sprintf(tchBuffer, </P>

<P>"Page size: %u\tProcessor Type: %u", </P>

<P>siSysInfo.dwPageSize, </P>

<P>siSysInfo.dwProcessorType); </P>

<P>TabbedTextOut(hdc, 25, 60, tchBuffer, </P>

<P>nSize, 1, aTabs, 25); </P>

<P></P>

<P>nSize = sprintf(tchBuffer, </P>

<P>"Minimum app address: %lx\tMaximum app address: %lx", </P>

<P>siSysInfo.lpMinimumApplicationAddress, </P>

<P>siSysInfo.lpMaximumApplicationAddress); </P>

<P>TabbedTextOut(hdc, 25, 80, tchBuffer, </P>

<P>nSize, 1, aTabs, 25); </P>

<P></P>

<P>nSize = sprintf(tchBuffer, </P>

<P>"Active processor mask: %u", </P>

<P>siSysInfo.dwActiveProcessorMask); </P>

<P>TextOut(hdc, 25, 100, tchBuffer, nSize); </P>

<P></P>

<P>The following example uses the <A HREF="jolchi.htm"><B>GetSystemMetrics</B></A> function to determine whether a mouse is installed and whether the mouse buttons are swapped. The example also uses the <A HREF="flzd_g.htm"><B>SystemParametersInfo</B></A> function to retrieve the mouse threshold and speed. It displays the information in a message box. </P>

<P>TCHAR tchBuffer[BUFFER]; // buffer for expanded string  </P>

<P>int nSize;               // size of string  </P>

<P></P>

<P>BOOL fResult;            // system shutdown flag </P>

<P></P>

<P>int aMouseInfo[3];       // array for mouse information</P>

<P></P>

<P>// Is there a mouse? </P>

<P></P>

<P>fResult = GetSystemMetrics(SM_MOUSEPRESENT); </P>

<P></P>

<P>if (fResult == 0) </P>

<P>{ </P>

<P>// Indicate if there is no mouse. </P>

<P></P>

<P>nSize = sprintf(tchBuffer, "No mouse installed."); </P>

<P>} </P>

<P>else </P>

<P>{ </P>

<P>// If there is a mouse, determine whether its buttons are swapped. </P>

<P></P>

<P>fResult = GetSystemMetrics(SM_SWAPBUTTON); </P>

<P></P>

<P>if (fResult == 0) </P>

<P>{ </P>

<P>nSize = sprintf(tchBuffer, "Buttons not swapped.\r"); </P>

<P>} </P>

<P>else </P>

<P>{ </P>

<P>nSize = sprintf(tchBuffer, "Buttons swapped.\r"); </P>

<P>} </P>

<P></P>

<P>// Get the mouse speed and the threshold values. </P>

<P></P>

<P>SystemParametersInfo(SPI_GETMOUSE, // get mouse information </P>

<P>NULL,                          // not used </P>

<P>&amp;aMouseInfo,                   // holds mouse information </P>

<P>NULL);                         // not used </P>

<P></P>

<P>nSize += sprintf(tchBuffer + nSize, </P>

<P>"Speed: %d\r", aMouseInfo[2]); </P>

<P>sprintf(tchBuffer + nSize, </P>

<P>"Threshold (x,y): %d,%d", </P>

<P>aMouseInfo[0], aMouseInfo[1]); </P>

<P>} </P>

<P></P>

<P>// Display the mouse information. </P>

<P></P>

<P>MessageBox(NULL, tchBuffer, "Mouse information", </P>

<P>MB_ICONINFORMATION); </P>

<P></P>

<P>This next example uses <A HREF="flzd_g.htm"><B>SystemParametersInfo</B></A> to double the mouse speed and update the MouseSpeed value in the WIN.INI file. </P>

<P>TCHAR tchBuffer[BUFFER]; // buffer for expanded string  </P>

<P>int nSize;               // size of string  </P>

<P></P>

<P>int aMouseInfo[3];       // array for mouse information</P>

<P></P>

<P>// Get the current mouse speed. </P>

<P></P>

<P>SystemParametersInfo(SPI_GETMOUSE, // get mouse information </P>

<P>NULL,                          // not used </P>

<P>&amp;aMouseInfo,                   // holds mouse information</P>

<P>NULL);                         // not used </P>

<P></P>

<P>// Double it. </P>

<P></P>

<P>aMouseInfo[2] = 2 * aMouseInfo[2]; </P>

<P></P>

<P>// Change the mouse speed to the new value and update WIN.INI. </P>

<P></P>

<P>SystemParametersInfo(SPI_SETMOUSE, // set mouse information</P>

<P>NULL,                          // not used </P>

<P>aMouseInfo,                    // mouse information </P>

<P>SPIF_UPDATEINIFILE);           // update win.ini </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
