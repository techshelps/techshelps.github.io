<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CryptDestroyHash [New - Windows NT] [New - Windows 95, OEM Service Release 2]</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1rbk0dy"></A><B>CryptDestroyHash  <A HREF="1.odsqo.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="41b3l2.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="rkgz3o.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>[New - Windows NT]</P>

<P>[New - Windows 95, OEM Service Release 2]</P>

<P>The <B>CryptDestroyHash</B> function destroys the hash object referenced by the <I>hHash</I> parameter. Once a hash object has been destroyed, it can no longer be used and its handle is useless from then on.</P>

<P>All hash objects should be destroyed with the <B>CryptDestroyHash</B> function when the application is finished with them.</P>

<P><B>BOOL CRYPTFUNC CryptDestroyHash(</B></P>

<TABLE cols=2 width=215>

<TR VALIGN="top">
<TD width=84%><B>HCRYPTHASH </B><I>hHash</I></TD>
<TD width=16%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=84%><B>   );</B></TD>
<TD width=16%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hHash</I></P>

<P>[in] A handle to the hash object to be destroyed.</P>

<P></P>

<P><B>Remarks</B></P>

<P>When a hash object is destroyed, the many CSPs will scrub the memory in the CSP where the hash object was held. The CSP memory is then freed.</P>

<P>There should be a one-to-one correspondence between calls to <A HREF="4hq3.7.htm"><B>CryptCreateHash</B></A> and <B>CryptDestroyHash</B>.</P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To retrieve extended error information, use the <A HREF="11c2vs7.htm"><B>GetLastError</B></A> function.</P>

<P>The following table lists the error codes most commonly returned by the <B>GetLastError</B> function. The error codes prefaced by "NTE" are generated by the particular CSP you are using.</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=43%><B>Error</B></TD>
<TD width=57%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ERROR_BUSY</TD>
<TD width=57%>The hash object specified by <I>hHash</I> is currently being used by another process.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ERROR_INVALID_HANDLE</TD>
<TD width=57%>One of the parameters specifies an invalid handle.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ERROR_INVALID_PARAMETER</TD>
<TD width=57%>One of the parameters contains an invalid value. This is most often an illegal pointer.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>NTE_BAD_ALGID</TD>
<TD width=57%>The <I>hHash</I> handle specifies an algorithm that this CSP does not support.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>NTE_BAD_HASH</TD>
<TD width=57%>The hash object specified by the <I>hHash</I> parameter is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>NTE_BAD_UID</TD>
<TD width=57%>The CSP context that was specified when the hash object was created cannot be found.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Example</B></P>

<P>See the "Example" section in the <B>CryptSignHash</B> function.</P>

<P><B>See Also</B></P>

<P><A HREF="4hq3.7.htm"><B>CryptCreateHash</B></A>, <A HREF="46c7fgj.htm"><B>CryptHashData</B></A>, <A HREF="bod3zd.htm"><B>CryptSignHash</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
