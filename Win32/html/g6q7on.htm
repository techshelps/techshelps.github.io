<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DrawText</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="g6q7on"></A><B>DrawText  <A HREF="skd3rk.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="4jd_z5i.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1xkvu5n.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>DrawText</B> function draws formatted text in the specified rectangle. It formats the text according to the specified method (expanding tabs, justifying characters, breaking lines, and so forth). </P>

<P><B>int DrawText(</B></P>

<TABLE cols=2 width=482>

<TR VALIGN="top">
<TD width=33%><B>HDC</B> <I>hDC</I><B>,</B></TD>
<TD width=67%>// handle to device context </TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>    LPCTSTR</B> <I>lpString</I><B>,</B></TD>
<TD width=67%>// pointer to string to draw </TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>    int</B> <I>nCount</I><B>,</B></TD>
<TD width=67%>// string length, in characters </TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>    LPRECT</B> <I>lpRect</I><B>,</B></TD>
<TD width=67%>// pointer to structure with formatting dimensions  </TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>    UINT</B> <I>uFormat</I> </TD>
<TD width=67%>// text-drawing flags </TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>   );</B></TD>
<TD width=67%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hDC</I></P>

<P>Identifies the device context. </P>

<P><I>lpString</I></P>

<P>Points to the string to be drawn. If the <I>nCount</I> parameter is -1, the string must be null-terminated. </P>

<P><I>nCount</I></P>

<P>Specifies the number of characters in the string. If <I>nCount</I> is -1, then the <I>lpString</I> parameter is assumed to be a pointer to a null-terminated string and <B>DrawText</B> computes the character count automatically. </P>

<P><I>lpRect</I></P>

<P>Points to a <A HREF="ezena2.htm"><B>RECT</B></A> structure that contains the rectangle (in logical coordinates) in which the text is to be formatted.</P>

<P><I>uFormat</I></P>

<P>Specifies the method of formatting the text. It can be any combination of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=41%><B>Value</B></TD>
<TD width=59%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_BOTTOM</TD>
<TD width=59%>Justifies the text to the bottom of the rectangle. This value must be combined with DT_SINGLELINE.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_CALCRECT</TD>
<TD width=59%>Determines the width and height of the rectangle. If there are multiple lines of text, <B>DrawText</B> uses the width of the rectangle pointed to by the <I>lpRect</I> parameter and extends the base of the rectangle to bound the last line of text. If there is only one line of text, <B>DrawText</B> modifies the right side of the rectangle so that it bounds the last character in the line. In either case, <B>DrawText</B> returns the height of the formatted text but does not draw the text.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_CENTER</TD>
<TD width=59%>Centers text horizontally in the rectangle.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_EDITCONTROL</TD>
<TD width=59%>Duplicates the text-displaying characteristics of a multiline edit control. Specifically, the average character width is calculated in the same manner as for an edit control, and the function does not display a partially visible last line.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_END_ELLIPSIS or DT_PATH_ELLIPSIS</TD>
<TD width=59%>Replaces part of the given string with ellipses, if necessary, so that the result fits in the specified  rectangle. The given string is not modified unless the DT_MODIFYSTRING flag is specified.
<P>You can specify DT_END_ELLIPSIS to replace characters at the end of the string, or DT_PATH_ELLIPSIS to replace characters in the middle of the string. If the string contains backslash (\) characters, DT_PATH_ELLIPSIS preserves as much as possible of the text after the last backslash.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_EXPANDTABS</TD>
<TD width=59%>Expands tab characters. The default number of characters per tab is eight.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_EXTERNALLEADING</TD>
<TD width=59%>Includes the font external leading in line height. Normally, external leading is not included in the height of a line of text.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_LEFT</TD>
<TD width=59%>Aligns text to the left.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_MODIFYSTRING</TD>
<TD width=59%>Modifies the given string to match the displayed text. This flag has no effect unless the DT_END_ELLIPSIS or DT_PATH_ELLIPSIS flag is specified.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_NOCLIP</TD>
<TD width=59%>Draws without clipping. <B>DrawText</B> is somewhat faster when DT_NOCLIP is used.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_NOPREFIX</TD>
<TD width=59%>Turns off processing of prefix characters. Normally, <B>DrawText</B> interprets the mnemonic-prefix character &amp; as a directive to underscore the character that follows, and the mnemonic-prefix characters &amp;&amp; as a directive to print a single &amp;. By specifying DT_NOPREFIX, this processing is turned off.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_RIGHT</TD>
<TD width=59%>Aligns text to the right.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_RTLREADING</TD>
<TD width=59%>Layout in right to left reading order for bi-directional text when the font selected into the <I>hdc</I> is a Hebrew or Arabic font. The default reading order for all text is left to right.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_SINGLELINE</TD>
<TD width=59%>Displays text on a single line only. Carriage returns and linefeeds do not break the line.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_TABSTOP</TD>
<TD width=59%>Sets tab stops. Bits 15-8 (high-order byte of the low-order word) of the <I>uFormat</I> parameter specify the number of characters for each tab. The default number of characters per tab is eight.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_TOP</TD>
<TD width=59%>Top-justifies text (single line only).</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_VCENTER</TD>
<TD width=59%>Centers text vertically (single line only).</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>DT_WORDBREAK</TD>
<TD width=59%>Breaks words. Lines are automatically broken between words if a word would extend past the edge of the rectangle specified by the <I>lpRect</I> parameter. A carriage return-linefeed sequence also breaks the line.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>Note that the DT_CALCRECT, DT_EXTERNALLEADING, DT_INTERNAL, DT_NOCLIP, and DT_NOPREFIX values cannot be used with the DT_TABSTOP value. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the height of the text. </P>

<P><B>Remarks</B></P>

<P>The <B>DrawText</B> function uses the device context's selected font, text color, and background color to draw the text. Unless the DT_NOCLIP format is used, <B>DrawText</B> clips the text so that it does not appear outside the specified rectangle. All formatting is assumed to have multiple lines unless the DT_SINGLELINE format is specified. </P>

<P>If the selected font is too large for the specified rectangle, the <B>DrawText</B> function does not attempt to substitute a smaller font. </P>

<P><B>See Also</B></P>

<P><A HREF="xhskts.htm"><B>GrayString</B></A>, <A HREF="2mcwnzm.htm"><B>TabbedTextOut</B></A>, <A HREF="mwueko.htm"><B>TextOut</B></A>, <A HREF="ezena2.htm"><B>RECT</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
