<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Structuring a Namespace Extension</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="26z9_jq"></A><B>Structuring a Namespace Extension</B></P>

<P>As is the case with shell extensions, a namespace extension is implemented as a COM in-process server DLL. For even the simplest of extensions, experience with COM, OLE, and the behavior of the Windows Explorer is required before you attempt to implement a namespace extension. It also means that you must properly enter it in the system Registry or it will not work.</P>

<P>As a reminder, the construction of an in-process server DLL requires the implementation of a DLL that exports the following functions:</P>

<P>·<B>DllMain</B></P>

<P>·<B>DllGetClassObject</B></P>

<P>·<B>DllUnloadNow</B></P>

<P></P>

<P>The DLL also implements an object that exposes <B>IClassFactory</B> for the creation of the other objects contained in the DLL. Those objects will expose <B>IUnknown</B> and the other interfaces necessary to implement a namespace extension, including <B>IPersistFolder</B>, <B>IShellFolder</B>, <B>IEnumIDList</B>, and <B>IShellView</B>. These interfaces allow the Explorer and your extension to display, interact, and communicate. </P>

<P>It is important to remember that the Explorer calls into your extension by using the <A HREF="113z9we.htm"><B>IShellFolder</B></A> and <A HREF="2239_bf.htm"><B>IShellView</B></A> interfaces you have implemented in your extension. The <B>IShellBrowser</B> interface (implemented by the Explorer), allows your extension to call back into the Explorer. It is very similar to "Site"-type interfaces commonly found in OLE scenarios.</P>

<P>Beyond these required interfaces, your extension will need to implement other interfaces that will be created by the <B>IShellFolder</B> object. These include <B>IExtractIcon</B> to provide icons, <B>IContextMenu</B> to provide context menus for your items, drag-and-drop interfaces (<B>IDropSource</B> and <B>IDropTarget</B>), and <B>IDataObject</B> for data transfer.</P>

<P>Examples of in-process server DLLs, especially any that contain namespace or shell extensions, are obviously helpful in learning to build namespace extension DLLs.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
