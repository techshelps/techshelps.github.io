<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Templates in Memory</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="14un45o"></A><B>Templates in Memory</B></P>

<P>A dialog box template in memory consists of a header that describes the dialog box, followed by one or more additional blocks of data that describe each of the controls in the dialog box. The template can use either the standard format or the extended format. In a standard template, the header is a <A HREF="xaubx..htm"><B>DLGTEMPLATE</B></A> structure followed by additional variable-length arrays. The data for each control consists of a <A HREF="27yvkw7.htm"><B>DLGITEMTEMPLATE</B></A> structure followed by additional variable-length arrays. In an extended dialog box template, the header uses the <A HREF="2h7ddz.htm"><B>DLGTEMPLATEEX</B></A> format and the control definitions use the <A HREF="1svq_fn.htm"><B>DLGITEMTEMPLATEEX</B></A> format. </P>

<P>To distinguish between a standard template and an extended template, check the first 16-bits of a dialog box template. In an extended template, the first <B>WORD</B> is 0xFFFF; any other value indicates a standard template. </P>

<P>If you create a dialog template in memory, you must ensure that the each of the <B>DLGITEMTEMPLATE</B> or <B>DLGITEMTEMPLATEEX</B> control definitions are aligned on <B>DWORD</B> boundaries. In addition, any creation data that follows a control definition must be aligned on a <B>DWORD</B> boundary. All of the other variable-length arrays in a dialog box template must be aligned on <B>WORD</B> boundaries. </P>

<P><B>The Template Header</B></P>

<P>In both the standard and extended templates for dialog boxes, the header includes the following general information:</P>

<P>윲he location and dimensions of the dialog box</P>

<P>윲he window and dialog box styles for the dialog box</P>

<P>윲he number of controls in the dialog box. This value determines the number of <B>DLGITEMTEMPLATE</B> or <B>DLGITEMTEMPLATEEX</B> control definitions in the template.</P>

<P>유n optional menu resource for the dialog box. The template can indicate that the dialog box does not have a menu, or it can specify an ordinal value or null-terminated Unicode string that identifies a menu resource in an executable file.</P>

<P>윲he window class of the dialog box. This can be either the predefined dialog box class, or an ordinal value or null-terminated Unicode string that identifies a registered window class.</P>

<P>유 null-terminated Unicode string that specifies the title for the dialog box window. If the string is empty, the title bar of the dialog box is blank. If the dialog box does not have the WS_CAPTION style, the system sets the title to the specified string but does not display it. </P>

<P>율f the dialog box has the DS_SETFONT style, the header specifies the point size and typeface name of the font to use for the text in the client area and controls of the dialog box. </P>

<P></P>

<P>In an extended template, the <B>DLGTEMPLATEEX</B> header also specifies the following additional information:</P>

<P>윲he help context identifier that identifies the dialog box window when the system sends a <A HREF="d98_nq.htm">WM_HELP</A> message.</P>

<P>율f the dialog box has the DS_SETFONT style, the header specifies the font weight and indicates whether the font is italic.</P>

<P></P>

<P><B>The Control Definitions</B></P>

<P>Following the template header is one or more control definitions that describe the controls of the dialog box. In both the standard and extended templates, the dialog box header has a member that indicates the number of control definitions in the template. In a standard template, each control definition consists of a <A HREF="27yvkw7.htm"><B>DLGITEMTEMPLATE</B></A> structure followed by additional variable-length arrays. In an extended template, the control definitions use the <A HREF="1svq_fn.htm"><B>DLGITEMTEMPLATEEX</B></A> format. </P>

<P>In both the standard and extended templates, the control definition includes the following information:</P>

<P>윲he location and dimensions of the control.</P>

<P>윲he window and control styles for the control.</P>

<P>윲he control identifier.</P>

<P>윲he window class of the control. This can be either the ordinal value of a predefined system class or a null-terminated Unicode string that specifies the name of a registered window class.</P>

<P>유 null-terminated Unicode string that specifies the initial text of the control, or an ordinal value that identifies a resource, such as an icon, in an executable file. </P>

<P>유n optional variable-length block of creation data. When the system creates the control, it passes a pointer to this data in the <I>lParam</I> parameter of the <A HREF="2re1yt3.htm">WM_CREATE</A> message that it sends to the control. </P>

<P></P>

<P>In an extended template, the control definition also specifies a help context identifier that identifies the control when the system sends a <A HREF="d98_nq.htm">WM_HELP</A> message.</P>

</BODY>
</HTML>
