<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating a Printer Device Context</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="4qes4i"></A><B>Creating a Printer Device Context</B></P>

<P>An application can create a printer device context in one of two ways: </P>

<P>·Calling the <A HREF="11768vz.htm"><B>PrintDlg</B></A> function to display a common dialog box that allows the user to specify printer options, then creating a printer device context by using those options. </P>

<P>·Creating a printer device context by using the default printer data from the WIN.INI file. </P>

<P></P>

<P>This section contains code demonstrating the latter method. </P>

<P>To use the default printer, retrieve and parse the appropriate string from the WIN.INI file. This string is retrieved by calling the <A HREF="xbiy4e.htm"><B>GetProfileString</B></A> function and specifying the appropriate section and entry names. In the case of the default printer, this data is stored in the [windows] section and identified by the entry named device. The seventh line in the following excerpt from a WIN.INI file shows an entry for a Kodak® Diconix™ printer. </P>

<P>[windows]  </P>

<P>load= </P>

<P>run= </P>

<P>Beep=yes </P>

<P>Spooler=yes </P>

<P>NullPort=None </P>

<P>device=Diconix,winspool,LPT1: </P>

<P>CoolSwitch=1 </P>

<P>BorderWidth=3 </P>

<P>KeyboardSpeed=31 </P>

<P>InitialKeyboardIndicators=2 </P>

<P>CursorBlinkRate=530 </P>

<P>DoubleClickSpeed=686 </P>

<P>Programs=com exe bat pif cmd </P>

<P>Documents= </P>

<P>DeviceNotSelectedTimeout=15 </P>

<P>TransmissionRetryTimeout=45 </P>

<P>swapdisk= </P>

<P>NetWarn=1 </P>

<P>fPromptOnVerbose=FALSE </P>

<P>fPromptOnWarning=FALSE </P>

<P>fPromptOnError=TRUE </P>

<P>fPrintVerbose=FALSE </P>

<P>fPrintFileLine=FALSE </P>

<P>shell= </P>

<P>ScreenSaveTimeOut=300 </P>

<P>ScreenSaveActive=0 </P>

<P>DebugOptions=2048 </P>

<P></P>

<P>The following example shows how a printer device context was created by using the data from WIN.INI. </P>

<P>HDC hdcPrint;               /* printer DC handle        */  </P>

<P>char szDevString[120];      /* array for WIN.INI data   */ </P>

<P>char *szPrinter, *szDriver; /* printer and driver names */ </P>

<P>char *szPort;               /* port name                */ </P>

<P>/* </P>

<P>* Retrieve the printer, printer-driver, and </P>

<P>* output-port names from WIN.INI. </P>

<P>*/ </P>

<P></P>

<P>GetProfileString("windows", "device", ",,,", </P>

<P>szDevString, 120); </P>

<P></P>

<P>/* </P>

<P>* Parse the string of names, setting ptrs </P>

<P>* as required. If the string contains the </P>

<P>* required names, use them to create a </P>

<P>* device context. </P>

<P>*/ </P>

<P></P>

<P>if ((szPrinter = strtok(szDevString, </P>

<P>(const char *) ",")) </P>

<P>&amp;&amp; (szDriver = strtok ((char *) NULL, </P>

<P>(const char *) ", ")) </P>

<P>&amp;&amp; (szPort = strtok ((char *) NULL, </P>

<P>(const char *) ", "))) </P>

<P>hdcPrint = CreateDC(szDriver, szPrinter, </P>

<P>szPort, NULL); </P>

<P>/* </P>

<P>* Print a test page that contains the string </P>

<P>* "PRINTER TEST" in the upper left corner. </P>

<P>*/ </P>

<P></P>

<P>Escape(hdcPrint, STARTDOC, 8, "Test-Doc", NULL); </P>

<P>TextOut(hdcPrint, 50, 50, "PRINTER TEST", 12); </P>

<P>Escape(hdcPrint, NEWFRAME, 0, NULL, NULL); </P>

<P>Escape(hdcPrint, ENDDOC, 0, NULL, NULL); </P>

<P></P>

<P></P>

<P>/* Delete the printer DC. */ </P>

<P></P>

<P>DeleteDC(hdcPrint); </P>

<P></P>

</BODY>
</HTML>
