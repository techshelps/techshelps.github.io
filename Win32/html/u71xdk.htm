<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>SetServiceStatus</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="u71xdk"></A><B>SetServiceStatus  <A HREF="zluj3.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="12c8zrk.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="we4jtq.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SetServiceStatus</B> function updates the service control manager's status information for the calling service. </P>

<P><B>BOOL SetServiceStatus(</B></P>

<TABLE cols=2 width=538>

<TR VALIGN="top">
<TD width=62%><B>SERVICE_STATUS_HANDLE</B> <I>hServiceStatus~</I><B>,</B></TD>
<TD width=38%>// service status handle </TD>
</TR>

<TR VALIGN="top">
<TD width=62%><B>    LPSERVICE_STATUS</B> <I>lpServiceStatus</I> </TD>
<TD width=38%>// address of status structure </TD>
</TR>

<TR VALIGN="top">
<TD width=62%><B>   );</B></TD>
<TD width=38%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hServiceStatus~</I></P>

<P>Specifies a handle to the service control manager's status information structure for the current service. This handle is returned by the <A HREF="hbd0d..htm"><B>RegisterServiceCtrlHandler</B></A> function. </P>

<P><I>lpServiceStatus</I></P>

<P>Points to the <A HREF="25uoeu.htm"><B>SERVICE_STATUS</B></A> structure the contains the latest status information for the calling service. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Errors</B></P>

<P>The following error codes may be set by the service control manager. Other error codes may be set by the registry functions that are called by the service control manager. </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=40%><B>Value</B></TD>
<TD width=60%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=40%>ERROR_INVALID_HANDLE</TD>
<TD width=60%>The specified handle is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>ERROR_INVALID_DATA</TD>
<TD width=60%>The specified service status structure is invalid.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Remarks</B></P>

<P>A Win32 service's <A HREF="y7r.4o.htm"><B>ServiceMain</B></A> function first calls the <B>RegisterServiceCtrlHandler</B> function to get the service's SERVICE_STATUS_HANDLE. Then it immediately calls the <B>SetServiceStatus</B> function to notify the service control manager of its SERVICE_START_PENDING status. </P>

<P>When a Win32 service receives a control request, the service's <A HREF="1eqr9ip.htm"><B>Handler</B></A> function must call this function, even if the service's status did not change. A service can also use this function at any time and by any thread of the service to notify the service control manager of status changes. Examples of such unsolicited status updates include: </P>

<P>·Checkpoint updates that occur when the service is in transition from one state to another (that is, SERVICE_START_PENDING). </P>

<P>·An update made necessary by the expected occurrence of a fatal error that causes the service to stop. </P>

<P></P>

<P>A service can call this function only after it has called <B>RegisterServiceCtrlHandler</B> to get a service status handle. </P>

<P><B>See Also</B></P>

<P><A HREF="1eqr9ip.htm"><B>Handler</B></A>, <A HREF="hbd0d..htm"><B>RegisterServiceCtrlHandler</B></A>, <A HREF="25uoeu.htm"><B>SERVICE_STATUS</B></A>, <A HREF="y7r.4o.htm"><B>ServiceMain</B></A>, <A HREF="_xo0ag.htm"><B>SetServiceBits</B></A> </P>

<P></P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
