<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>GetVersion</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="3vosbp"></A><B>GetVersion  <A HREF="1taf_j.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="2asgu6i.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="bogapi.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetVersion</B> function returns the current version number of Windows and information about the operating system platform. </P>

<P>This function has been superseded by <A HREF="3_iy_yv.htm"><B>GetVersionEx</B></A>, which is the preferred method for obtaining system version number information. New applications should use <B>GetVersionEx</B>. The <B>GetVersionEx</B> function was developed because many existing Windows applications err when examining the <B>DWORD </B>return value of a <B>GetVersion </B>function call, transposing the major and minor version numbers packed into that <B>DWORD</B>. The <B>GetVersionEx </B>function forces applications to explicitly examine each element of version information, and allows for future enhancements to that information.</P>

<P><B>DWORD GetVersion(VOID)<BR>
 </B></P>

<P><B>Parameters</B></P>

<P>This function has no parameters. </P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is a <B>DWORD</B> value that contains the major and minor version numbers of Windows in the low order word, and information about the operating system platform in the high order word. </P>

<P>For all platforms, the low order word contains the version number of Windows. The low-order byte of this word specifies the major version number, in hexadecimal notation. The high-order byte specifies the minor version (revision) number, in hexadecimal notation. </P>

<P>To distinguish between operating system platforms, use the high order bit and the low order byte, as shown in the following table:</P>

<TABLE cols=3>

<TR VALIGN="top">
<TD width=20%><B>Platform</B></TD>
<TD width=23%><B>High order bit</B></TD>
<TD width=57%><B>Low order byte (major version number)</B></TD>
</TR>

<TR VALIGN="top">
<TD width=20%>Windows NT</TD>
<TD width=23%>zero</TD>
<TD width=57%>3 or 4</TD>
</TR>

<TR VALIGN="top">
<TD width=20%>Windows 95</TD>
<TD width=23%>1 </TD>
<TD width=57%>4</TD>
</TR>

<TR VALIGN="top">
<TD width=20%>Win32s with Windows 3.1</TD>
<TD width=23%>1</TD>
<TD width=57%>3</TD>
</TR>
</TABLE><BR>

<P></P>

<P>For Windows NT and Win32s, the remaining bits in the high order word specify the build number. </P>

<P>For Windows 95 the remaining bits of the high order word are reserved.</P>

<P><B>Remarks</B></P>

<P>This function does <I>not</I> return the current version number of MS-DOS. </P>

<P>The following code fragment illustrates how to extract information from the <B>GetVersion</B> return value:</P>

<P></P>

<P>dwVersion = GetVersion();</P>

<P></P>

<P>// Get major and minor version numbers of Windows</P>

<P>dwWindowsMajorVersion =  (DWORD)(LOBYTE(LOWORD(dwVersion)));</P>

<P>dwWindowsMinorVersion =  (DWORD)(HIBYTE(LOWORD(dwVersion)));</P>

<P>// Get build numbers for Windows NT or Win32s</P>

<P>if (dwVersion &lt; 0x80000000)                // Windows NT</P>

<P>dwBuild = (DWORD)(HIWORD(dwVersion));</P>

<P>else if (dwWindowsMajorVersion &lt; 4)        // Win32s</P>

<P>dwBuild = (DWORD)(HIWORD(dwVersion) &amp; ~0x8000);</P>

<P>else         // Windows 95 -- No build numbers provided</P>

<P>dwBuild =  0;</P>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="3_iy_yv.htm"><B>GetVersionEx</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
