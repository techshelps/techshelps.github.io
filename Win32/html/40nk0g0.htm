<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>QUERY_SERVICE_CONFIG</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="40nk0g0"></A><B>QUERY_SERVICE_CONFIG  <A HREF="x_g1ml.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="12c8zrk.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="gzb5_f.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>QUERY_SERVICE_CONFIG</B> structure is used by the <A HREF="1j3lx3w.htm"><B>QueryServiceConfig</B></A> function to return configuration information about an installed service. </P>

<P>typedef struct _QUERY_SERVICE_CONFIG { // qsc  </P>

<P>DWORD dwServiceType; </P>

<P>DWORD dwStartType; </P>

<P>DWORD dwErrorControl; </P>

<P>LPTSTR lpBinaryPathName; </P>

<P>LPTSTR lpLoadOrderGroup; </P>

<P>DWORD dwTagId; </P>

<P>LPTSTR lpDependencies; </P>

<P>LPTSTR lpServiceStartName; </P>

<P>LPTSTR lpDisplayName; </P>

<P>} QUERY_SERVICE_CONFIG, LPQUERY_SERVICE_CONFIG; </P>

<P></P>

<P><B>Members</B></P>

<P><B>dwServiceType</B></P>

<P>The value returned includes one of the following service type flags to indicate the type of service. In addition, for a SERVICE_WIN32 service, the SERVICE_INTERACTIVE_PROCESS flag might be set, indicating that the service process can interact with the desktop.</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=54%><B>Value</B></TD>
<TD width=46%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=54%>SERVICE_WIN32_OWN_PROCESS</TD>
<TD width=46%>A service type flag that indicates a Win32 service that runs in its own process.</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>SERVICE_WIN32_SHARE_PROCESS</TD>
<TD width=46%>A service type flag that indicates a Win32 service that shares a process with other services.</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>SERVICE_KERNEL_DRIVER</TD>
<TD width=46%>A service type flag that indicates a Windows NT device driver.</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>SERVICE_FILE_SYSTEM_DRIVER</TD>
<TD width=46%>A service type flag that indicates a Windows NT file system driver.</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>SERVICE_INTERACTIVE_PROCESS </TD>
<TD width=46%>A flag that indicates a Win32 service process that can interact with the desktop.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>dwStartType</B></P>

<P>Specifies when to start the service. One of the following values is specified: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=45%><B>Value</B></TD>
<TD width=55%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SERVICE_BOOT_START</TD>
<TD width=55%>Specifies a device driver started by the operating system loader. This value is valid only if the service type is SERVICE_KERNEL_DRIVER or SERVICE_FILE_SYSTEM_DRIVER.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SERVICE_SYSTEM_START</TD>
<TD width=55%>Specifies a device driver started by the <B>IoInitSystem</B> function. This value is valid only if the service type is SERVICE_KERNEL_DRIVER or SERVICE_FILE_SYSTEM_DRIVER.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SERVICE_AUTO_START</TD>
<TD width=55%>Specifies a device driver or Win32 service started by the service control manager automatically during system startup.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SERVICE_DEMAND_START</TD>
<TD width=55%>Specifies a device driver or Win32 service started by the service control manager when a process calls the <A HREF="1osmk1p.htm"><B>StartService</B></A> function.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SERVICE_DISABLED</TD>
<TD width=55%>Specifies a device driver or Win32 service that can no longer be started.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>dwErrorControl</B></P>

<P>Specifies the severity of the error if this service fails to start during startup, and determines the action taken by the startup program if failure occurs. One of the following values can be specified: </P>

<TABLE cols=6>

<TR VALIGN="top">
<TD colspan=2 width=14%><B>Value</B></TD>
<TD colspan=3 width=73%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>SERVICE_ERROR_IGNORE</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=12%>&nbsp;</TD>
<TD colspan=3 width=63%>The startup (boot) program logs the error but continues the startup operation.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>SERVICE_ERROR_NORMAL</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=12%>&nbsp;</TD>
<TD colspan=3 width=63%>The startup program logs the error and displays a message box pop-up but continues the startup operation.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>SERVICE_ERROR_SEVERE</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=12%>&nbsp;</TD>
<TD colspan=3 width=63%>The startup program logs the error. If the last-known good configuration is being started, the startup operation continues. Otherwise, the system is restarted with the last-known-good configuration.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>SERVICE_ERROR_CRITICAL</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=12%>&nbsp;</TD>
<TD colspan=3 width=63%>The startup program logs the error, if possible. If the last-known good configuration is being started, the startup operation fails. Otherwise, the system is restarted with the last-known good configuration.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>lpBinaryPathName</B></P>

<P>Points to a null-terminated string that contains the fully qualified path to the service binary file. </P>

<P><B>lpLoadOrderGroup</B></P>

<P>Points to a null-terminated string that names the load ordering group of which this service is a member. If the pointer is NULL or if it points to an empty string, the service does not belong to a group. The registry has a list of load ordering groups located at:</P>

<P>HKEY_LOCAL_MACHINE\System<BR>
\CurrentControlSet\Control\ServiceGroupOrder. </P>

<P>The startup program uses this list to load groups of services in a specified order with respect to the other groups in the list. You can place a service in a group so that another service can depend on the group. </P>

<P>The order in which a service starts is determined by the following criteria: </P>

<P>1.The order of groups in the registry's load-ordering group list. Services in groups in the load-ordering group list are started first, followed by services in groups not in the load-ordering group list and then services that do not belong to a group. </P>

<P>2.The service's dependencies listed in the <I>lpszDependencies</I> parameter and the dependencies of other services dependent on the service. </P>

<P></P>

<P><B>dwTagId</B></P>

<P>Specifies a unique tag value for this service in the group specified by the <I>lpLoadOrderGroup</I> parameter. A value of zero indicates that the service has not been assigned a tag. You can use a tag for ordering service startup within a load order group by specifying a tag order vector in the registry located at:</P>

<P>HKEY_LOCAL_MACHINE\System\CurrentControlSet<BR>
\Control\GroupOrderList </P>

<P>Tags are only evaluated for SERVICE_KERNEL_DRIVER and SERVICE_FILE_SYSTEM_DRIVER type services that have SERVICE_BOOT_START or SERVICE_SYSTEM_START start types. </P>

<P><B>lpDependencies</B></P>

<P>Points to an array of null-separated names of services or load ordering groups that must start before this service. The array is doubly null-terminated. If the pointer is NULL or if it points to an empty string, the service has no dependencies. If a group name is specified, it must be prefixed by the SC_GROUP_IDENTIFIER (defined in the WINSVC.H file) character to differentiate it from a service name, because services and service groups share the same name space. Dependency on a service means that this service can only run if the service it depends on is running. Dependency on a group means that this service can run if at least one member of the group is running after an attempt to start all members of the group. </P>

<P><B>lpServiceStartName</B></P>

<P>Points to a null-terminated string. If the service type is SERVICE_WIN32_OWN_PROCESS or SERVICE_WIN32_SHARE_PROCESS, this name is the account name in the form of "DomainName\Username", which the service process will be logged on as when it runs. If the account belongs to the built-in domain, ".\Username" can be specified. If NULL is specified, the service will be logged on as the LocalSystem account. </P>

<P>If the service type is SERVICE_KERNEL_DRIVER or SERVICE_FILE_SYSTEM_DRIVER, this name is the Windows NT driver object name (that is, \FileSystem\Rdr or \Driver\Xns) which the input and output (I/O) system uses to load the device driver. If NULL is specified, the driver is run with a default object name created by the I/O system based on the service name. </P>

<P><B>lpDisplayName</B></P>

<P>Points to a null-terminated string that is to be used by user interface programs to identify the service. This string has a maximum length of 256 characters. The name is case-preserved in the service control manager. Display name comparisons are always case-insensitive. </P>

<P></P>

<P><B>Remarks</B></P>

<P>The configuration information for a service is initially specified when the service is created by a call to the <B>CreateService</B> function. The information can be modified by calling the <B>ChangeServiceConfig</B> function. </P>

<P><B>See Also</B></P>

<P><A HREF="5x.__7b.htm"><B>ChangeServiceConfig</B></A>, <A HREF="2wng26.htm"><B>CreateService</B></A>, <A HREF="1j3lx3w.htm"><B>QueryServiceConfig</B></A>, <A HREF="1osmk1p.htm"><B>StartService</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
