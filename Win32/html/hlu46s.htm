<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DdeCreateDataHandle</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="hlu46s"></A><B>DdeCreateDataHandle  <A HREF="syjd.8.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="7m.xby.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="11k0r86.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>DdeCreateDataHandle</B> function creates a dynamic data exchange (DDE) object and fills the object with data from the specified buffer. A DDE application uses this function during transactions that involve passing data to the partner application. </P>

<P><B>HDDEDATA DdeCreateDataHandle(</B></P>

<TABLE cols=2 width=409>

<TR VALIGN="top">
<TD width=34%><B>DWORD</B> <I>idInst</I><B>,</B></TD>
<TD width=66%>// instance identifier</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    LPBYTE</B> <I>pSrc</I><B>,</B></TD>
<TD width=66%>// pointer to source buffer</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    DWORD</B> <I>cb</I><B>,</B></TD>
<TD width=66%>// length of DDE object</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    DWORD</B> <I>cbOff</I><B>,</B></TD>
<TD width=66%>// offset from beginning of source buffer</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    HSZ</B> <I>hszItem</I><B>,</B></TD>
<TD width=66%>// handle to item name string</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    UINT</B> <I>wFmt</I><B>,</B></TD>
<TD width=66%>// clipboard data format</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    UINT</B> <I>afCmd</I> </TD>
<TD width=66%>// creation flags</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>   );</B></TD>
<TD width=66%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>idInst</I></P>

<P>Specifies the application instance identifier obtained by a previous call to the <A HREF="1_pfuxk.htm"><B>DdeInitialize</B></A> function. </P>

<P><I>pSrc</I></P>

<P>Points to a buffer that contains data to be copied to the DDE object. If this parameter is NULL, no data is copied to the object. </P>

<P><I>cb</I></P>

<P>Specifies the amount of memory, in bytes, to copy from the buffer pointed to by <I>pSrc</I>. If this parameter is zero, the <I>pSrc</I> parameter is ignored. </P>

<P><I>cbOff</I></P>

<P>Specifies an offset, in bytes, from the beginning of the buffer pointed to by the <I>pSrc</I> parameter. The data beginning at this offset is copied from the buffer to the DDE object. </P>

<P><I>hszItem</I></P>

<P>Identifies the string that specifies the data item corresponding to the DDE object. This handle must have been created by a previous call to the <A HREF="f7z406.htm"><B>DdeCreateStringHandle</B></A> function. If the data handle is to be used in an XTYP_EXECUTE transaction, this parameter must be 0L. </P>

<P><I>wFmt</I></P>

<P>Specifies the standard clipboard format of the data. </P>

<P><I>afCmd</I></P>

<P>Specifies the creation flags. This parameter can be HDATA_APPOWNED, which specifies that the server application calling the <B>DdeCreateDataHandle</B> function owns the data handle this function creates. This flag enables the application to share the data handle with other Dynamic Data Exchange Management Library (DDEML) applications rather than creating a separate handle to pass to each application. If this flag is specified, the application must eventually free the shared memory object associated with the handle by using the <A HREF="16wlv6r.htm"><B>DdeFreeDataHandle</B></A> function. If this flag is not specified, the handle becomes invalid in the application that created the handle after the data handle is returned by the application's DDE callback function or is used as a parameter in another DDEML function. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is a data handle.</P>

<P>If the function fails, the return value is 0L. </P>

<P><B>Errors</B></P>

<P>The <A HREF="aa7fa.htm"><B>DdeGetLastError</B></A> function can be used to get the error code, which may be one of the following values: </P>

<P>DMLERR_DLL_NOT_INITIALIZED<BR>
DMLERR_INVALIDPARAMETER<BR>
DMLERR_MEMORY_ERROR<BR>
DMLERR_NO_ERROR</P>

<P><B>Remarks</B></P>

<P>Any unfilled locations in the DDE object are undefined. </P>

<P>After a data handle has been used as a parameter in another DDEML function or has been returned by a DDE callback function, the handle may be used only for read access to the DDE object identified by the handle. </P>

<P><B>See Also</B></P>

<P><A HREF="e421.j.htm"><B>DdeAccessData</B></A>, <A HREF="f7z406.htm"><B>DdeCreateStringHandle</B></A>, <A HREF="16wlv6r.htm"><B>DdeFreeDataHandle</B></A>, <A HREF="323wqdx.htm"><B>DdeGetData</B></A>, <A HREF="1_pfuxk.htm"><B>DdeInitialize</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
