<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>HeapWalk</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="19nugrr"></A><B>HeapWalk  <A HREF="gp1_2q.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="7gqv3r.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="9cqndc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>HeapWalk</B> function enumerates the memory blocks in a specified heap.</P>

<P><B>BOOL HeapWalk(</B></P>

<TABLE cols=2 width=685>

<TR VALIGN="top">
<TD width=40%><B>HANDLE</B> <I>hHeap</I><B>,</B></TD>
<TD width=60%>// handle to the heap to enumerate</TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    LPPROCESS_HEAP_ENTRY</B> <I>lpEntry</I> </TD>
<TD width=60%>// points to structure that maintains enumeration state information</TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>   );</B></TD>
<TD width=60%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hHeap</I></P>

<P>Handle to the heap whose memory blocks you wish to enumerate.</P>

<P><I>dwFlags</I></P>

<P>Points to a <A HREF="hrddpt.htm"><B>PROCESS_HEAP_ENTRY</B></A><B> </B>structure that maintains state informationfor a particular heap enumeration. </P>

<P>If the <B>HeapWalk</B> function succeeds, returning the value TRUE, this structure's members contain information about the next memory block in the heap.</P>

<P>To initiate a heap enumeration, set the <B>lpData</B> field of the <B>PROCESS_HEAP_ENTRY </B>structure to NULL. To continue a particular heap enumeration, call the <B>HeapWalk</B> function repeatedly, with no changes to <I>hHeap</I>, <I>lpEntry</I>, or any of the members of the <B>PROCESS_HEAP_ENTRY</B> structure.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P>If the heap enumeration terminates successfully by reaching the end of the heap, the function returns FALSE, and <B>GetLastError </B>returns the error code ERROR_NO_MORE_ITEMS.</P>

<P><B>Remarks</B></P>

<P>To initiate a heap enumeration, call <B>HeapWalk</B> with the <B>lpData</B> field of the <B>PROCESS_HEAP_ENTRY </B>structure pointed to by <I>lpEntry</I><B> </B>set to NULL.</P>

<P>To continue a heap enumeration, call <B>HeapWalk </B>with the same <I>hHeap</I> and <I>lpEntry </I>values, and with the <B>PROCESS_HEAP_ENTRY</B> structure unchanged from the preceding call to<B> HeapWalk</B>. Repeat this process until you have no need for further enumeration, or until the function returns FALSE<B> </B>and <B>GetLastError </B>returns ERROR_NO_MORE_ITEMS, indicating that all of the heap's memory blocks have been enumerated.</P>

<P>No special call of <B>HeapWalk</B> is needed to terminate the heap enumeration, since no enumeration state data is maintained outside the contents of the <B>PROCESS_HEAP_ENTRY</B> structure.</P>

<P><B>HeapWalk</B> can fail in a multithreaded application if the heap is not locked during the heap enumeration. Use the <B>HeapLock</B> and <B>HeapUnlock</B> functions to control heap locking during heap enumeration.</P>

<P><B>See Also</B></P>

<P><A HREF="19njuir.htm"><B>HeapLock</B></A>, <A HREF="w8x.pn.htm"><B>HeapUnlock</B></A>, <A HREF="336u0ic.htm"><B>HeapValidate</B></A>, <A HREF="hrddpt.htm"><B>PROCESS_HEAP_ENTRY</B></A></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
