<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetTempFileName</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="xpkip"></A><B>GetTempFileName  <A HREF="cn.9j8.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qnj9so.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1f83g2.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetTempFileName</B> function creates a name for a temporary file. The filename is the concatenation of specified path and prefix strings, a hexadecimal string formed from a specified integer, and the .TMP extension.</P>

<P>The specified integer can be nonzero, in which case, the function creates the filename but does not create the file. If you specify zero for the integer, the function creates a unique filename and creates the file in the specified directory.</P>

<P><B>UINT GetTempFileName(</B></P>

<TABLE cols=2 width=538>

<TR VALIGN="top">
<TD width=38%><B>LPCTSTR</B> <I>lpPathName</I><B>,</B></TD>
<TD width=62%>// address of directory name for temporary file </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    LPCTSTR</B> <I>lpPrefixString</I><B>,</B></TD>
<TD width=62%>// address of filename prefix </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    UINT</B> <I>uUnique</I><B>,</B></TD>
<TD width=62%>// number used to create temporary filename </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    LPTSTR</B> <I>lpTempFileName</I> </TD>
<TD width=62%>// address of buffer that receives the new filename </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>   );</B></TD>
<TD width=62%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpPathName</I></P>

<P>Points to a null-terminated string that specifies the directory path for the filename. This string must consist of characters in the ANSI character set. Applications typically specify a period (.) or the result of the <A HREF="lzzs8y.htm"><B>GetTempPath</B></A> function for this parameter. If this parameter is NULL, the function fails. </P>

<P><I>lpPrefixString</I></P>

<P>Points to a null-terminated prefix string. The function uses the first three characters of this string as the prefix of the filename. This string must consist of characters in the ANSI character set. </P>

<P><I>uUnique</I></P>

<P>Specifies an unsigned integer that the function converts to a hexadecimal string for use in creating the temporary filename. </P>

<P>If <I>uUnique</I> is nonzero, the function appends the hexadecimal string to <I>lpPrefixString</I> to form the temporary filename. In this case, the function does not create the specified file, and does not test whether the filename is unique.</P>

<P>If <I>uUnique</I> is zero, the function uses a hexadecimal string derived from the current system time. In this case, the function uses different values until it finds a unique filename, and then it creates the file in the <I>lpPathName</I> directory.</P>

<P><I>lpTempFileName</I></P>

<P>Points to the buffer that receives the temporary filename. This null-terminated string consists of characters in the ANSI character set. This buffer should be at least the length, in bytes, specified by MAX_PATH to accommodate the path. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value specifies the unique numeric value used in the temporary filename. If the <I>uUnique</I> parameter is nonzero, the return value specifies that same number. </P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The <B>GetTempFileName</B> function creates a temporary filename of the following form:</P>

<P><I>path</I>\<I>preuuuu</I>.TMP</P>

<P>The following table describes the filename syntax: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=21%><B>Component</B></TD>
<TD width=79%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=21%><I>path</I></TD>
<TD width=79%>Path specified by the <I>lpPathName</I> parameter</TD>
</TR>

<TR VALIGN="top">
<TD width=21%><I>pre</I></TD>
<TD width=79%>First three letters of the <I>lpPrefixString</I> string</TD>
</TR>

<TR VALIGN="top">
<TD width=21%><I>uuuu</I></TD>
<TD width=79%>Hexadecimal value of <I>uUnique</I></TD>
</TR>
</TABLE><BR>

<P></P>

<P>When Windows shuts down, temporary files whose names have been created by this function are not automatically deleted. </P>

<P>To avoid problems resulting from converting an ANSI character set string to a Windows string, an application should call the <A HREF="xn35yd.htm"><B>CreateFile</B></A> function to create a temporary file. </P>

<P>If the <I>uUnique</I> parameter is zero, <B>GetTempFileName</B> attempts to form a unique number based on the current system time. If a file with the resulting filename exists, the number is increased by one and the test for existence is repeated. Testing continues until a unique filename is found. <B>GetTempFileName</B> then creates a file by that name and closes it. When <I>uUnique</I> is nonzero, no attempt is made to create and open the file. </P>

<P><B>See Also</B></P>

<P><A HREF="xn35yd.htm"><B>CreateFile</B></A>, <A HREF="lzzs8y.htm"><B>GetTempPath</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
