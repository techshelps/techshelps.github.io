<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DebugProc</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="ef69vl"></A><B>DebugProc  <A HREF="bzer7..htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qpp.yo.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="rnpdgc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>DebugProc</B> hook procedure is an application-defined or library-defined callback function that Windows calls before calling the hook procedures associated with any other type of hook. The system passes information about the hook to be called to the <B>DebugProc</B> hook procedure, which examines the information and determines whether to allow the hook to be called. </P>

<P><B>LRESULT CALLBACK DebugProc(</B></P>

<TABLE cols=2 width=489>

<TR VALIGN="top">
<TD width=33%><B>int</B> <I>nCode</I><B>,</B></TD>
<TD width=67%>// hook code</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>    WPARAM</B> <I>wParam</I><B>,</B></TD>
<TD width=67%>// type of hook about to be called</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>    LPARAM</B> <I>lParam</I> </TD>
<TD width=67%>// address of structure with debugging information</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>   );</B></TD>
<TD width=67%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>nCode</I></P>

<P>Specifies whether the hook procedure must process the message. If <I>nCode</I> is HC_ACTION, the hook procedure must process the message. If <I>nCode</I> is less than zero, the hook procedure must pass the message to the <A HREF="2ebdbc.htm"><B>CallNextHookEx</B></A> function without further processing and should return the value returned by <B>CallNextHookEx</B>. </P>

<P><I>wParam</I></P>

<P>Specifies the type of hook about to be called. This parameter can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=43%><B>Value</B></TD>
<TD width=57%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_CALLWNDPROC</TD>
<TD width=57%>Installs a hook procedure that monitors messages sent to a window procedure. For more information, see the description of the <A HREF="nejvze.htm"><B>CallWndProc</B></A> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_CALLWNDPROCRET</TD>
<TD width=57%>Installs a hook procedure that monitors messages that have just been processed by a window procedure. For more information, see the description of the <A HREF="4xp4xbu.htm"><B>CallWndRetProc</B></A> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_CBT</TD>
<TD width=57%>Installs a hook procedure that receives notifications useful to a computer-based training (CBT) application. For more information, see the description of the <A HREF="j9p_3k.htm"><B>CBTProc</B></A> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_DEBUG</TD>
<TD width=57%>Installs a hook procedure useful for debugging other hook procedures. For more information, see the description of the <B>DebugProc</B> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_GETMESSAGE</TD>
<TD width=57%>Installs a hook procedure that monitors messages posted to a message queue. For more information, see the description of the <A HREF="wlhv1n.htm"><B>GetMsgProc</B></A> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_JOURNALPLAYBACK</TD>
<TD width=57%>Installs a hook procedure that posts messages previously recorded by a WH_JOURNALRECORD hook procedure. For more information, see the description of the <A HREF="lesnkt.htm"><B>JournalPlaybackProc</B></A> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_JOURNALRECORD</TD>
<TD width=57%>Installs a hook procedure that records input messages posted to the system message queue. This hook is useful for recording macros. For more information, see the description of the <A HREF="32huo95.htm"><B>JournalRecordProc</B></A> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_KEYBOARD</TD>
<TD width=57%>Installs a hook procedure that monitors keystroke messages. For more information, see the description of the <A HREF="2qr7.co.htm"><B>KeyboardProc</B></A> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_MOUSE</TD>
<TD width=57%>Installs a hook procedure that monitors mouse messages. For more information, see the description of the <A HREF="hqw0_a.htm"><B>MouseProc</B></A> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_MSGFILTER</TD>
<TD width=57%>Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar. The hook procedure monitors these messages only for the application that installed the hook procedure. For more information, see the description of the <A HREF="tn9es3.htm"><B>MessageProc</B></A> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_SHELL</TD>
<TD width=57%>Installs a hook procedure that receives notifications useful to a shell application. For more information, see the description of the <A HREF="3i9jhc5.htm"><B>ShellProc</B></A> hook procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>WH_SYSMSGFILTER</TD>
<TD width=57%>Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar. The hook procedure monitors these messages for all applications in the system. For more information, see the description of the <A HREF="uccnb.htm"><B>SysMsgProc</B></A> hook procedure.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lParam</I></P>

<P>Points to a <A HREF="06htoh.htm"><B>DEBUGHOOKINFO</B></A> structure that contains the parameters to be passed to the destination hook procedure. </P>

<P><B>Return Values</B></P>

<P>To prevent the system from calling the hook, the return value must be a nonzero value. Otherwise, the hook procedure must pass the hook information to the <A HREF="2ebdbc.htm"><B>CallNextHookEx</B></A> function. </P>

<P><B>Remarks</B></P>

<P>An application installs this hook procedure by specifying the WH_DEBUG hook type and the pointer to the hook procedure in a call to the <B>SetWindowsHookEx</B> function. </P>

<P><B>CallWndProc</B> and <B>CallWndRetProc</B> are placeholders for the application-defined or library-defined function names. </P>

<P><B>See Also</B></P>

<P><A HREF="2ebdbc.htm"><B>CallNextHookEx</B></A>, <A HREF="nejvze.htm"><B>CallWndProc</B></A>, <A HREF="4xp4xbu.htm"><B>CallWndRetProc</B></A>, <A HREF="j9p_3k.htm"><B>CBTProc</B></A>, <A HREF="06htoh.htm"><B>DEBUGHOOKINFO</B></A>, <A HREF="wlhv1n.htm"><B>GetMsgProc</B></A>, <A HREF="lesnkt.htm"><B>JournalPlaybackProc</B></A>, <A HREF="32huo95.htm"><B>JournalRecordProc</B></A>, <A HREF="2qr7.co.htm"><B>KeyboardProc</B></A>, <A HREF="tn9es3.htm"><B>MessageProc</B></A>, <A HREF="hqw0_a.htm"><B>MouseProc</B></A>, <A HREF="2d7__i2.htm"><B>SetWindowsHookEx</B></A>, <A HREF="3i9jhc5.htm"><B>ShellProc</B></A>, <A HREF="uccnb.htm"><B>SysMsgProc</B></A> </P>

</BODY>
</HTML>
