<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using Pens</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2kz0dx3"></A><B>Using Pens</B></P>

<P>This section contains sample code that demonstrates the appearance of lines drawn using various pen styles and attributes.</P>

<P>LRESULT CALLBACK MainWndProc(HWND hWnd, UINT uMsg, WPARAM wParam,  </P>

<P>LPARAM lParam) </P>

<P>{ </P>

<P>PAINTSTRUCT ps; </P>

<P>LOGBRUSH lb; </P>

<P>RECT rc; </P>

<P>HDC hdc; </P>

<P>int i; </P>

<P>HPEN hPen, hPenOld; </P>

<P>DWORD dwPenStyle[] = { </P>

<P>PS_DASH, </P>

<P>PS_DASHDOT, </P>

<P>PS_DOT, </P>

<P>PS_INSIDEFRAME, </P>

<P>PS_NULL, </P>

<P>PS_SOLID </P>

<P>}; </P>

<P>UINT uHatch[] = { </P>

<P>HS_BDIAGONAL, </P>

<P>HS_CROSS, </P>

<P>HS_DIAGCROSS, </P>

<P>HS_FDIAGONAL, </P>

<P>HS_HORIZONTAL, </P>

<P>HS_VERTICAL </P>

<P>}; </P>

<P></P>

<P>switch (uMsg) </P>

<P>{ </P>

<P>case WM_PAINT: </P>

<P>{ </P>

<P>GetClientRect(hWnd, &amp;rc); </P>

<P>rc.left += 10; </P>

<P>rc.top += 10; </P>

<P>rc.bottom -= 10; </P>

<P></P>

<P>/* Initialize the pen's "brush." */ </P>

<P>lb.lbStyle = BS_SOLID; </P>

<P>lb.lbColor = RGB(255,0,0); </P>

<P>lb.lbHatch = 0; </P>

<P> </P>

<P>hdc = BeginPaint(hWnd, &amp;ps); </P>

<P>for (i = 0; i &lt; 6; i++) </P>

<P>{ </P>

<P>hPen = ExtCreatePen(PS_COSMETIC | dwPenStyle[i], </P>

<P>1, &amp;lb, 0, NULL); </P>

<P>hPenOld = SelectObject(hdc, hPen); </P>

<P>MoveToEx(hdc, rc.left + (i * 20), rc.top, NULL); </P>

<P>LineTo(hdc, rc.left + (i * 20), rc.bottom); </P>

<P>SelectObject(hdc, hPenOld); </P>

<P>DeleteObject(hPen); </P>

<P>} </P>

<P>rc.left += 150; </P>

<P>for (i = 0; i &lt; 6; i++) </P>

<P>{ </P>

<P>lb.lbStyle = BS_HATCHED; </P>

<P>lb.lbColor = RGB(0,0,255); </P>

<P>lb.lbHatch = uHatch[i]; </P>

<P>hPen = ExtCreatePen(PS_GEOMETRIC, </P>

<P>5, &amp;lb, 0, NULL); </P>

<P>hPenOld = SelectObject(hdc, hPen); </P>

<P>MoveToEx(hdc, rc.left + (i * 20), rc.top, NULL); </P>

<P>LineTo(hdc, rc.left + (i * 20), rc.bottom); </P>

<P>SelectObject(hdc, hPenOld); </P>

<P>DeleteObject(hPen); </P>

<P>} </P>

<P>EndPaint(hWnd, &amp;ps); </P>

<P></P>

<P>} </P>

<P>break; </P>

<P></P>

<P>case WM_DESTROY: </P>

<P>DeleteObject(hPen); </P>

<P>PostQuitMessage(0); </P>

<P>break; </P>

<P></P>

<P>default: </P>

<P>return DefWindowProc(hWnd, uMsg, wParam, lParam); </P>

<P>} </P>

<P></P>

<P>return FALSE; </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
