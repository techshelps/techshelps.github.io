<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetTabbedTextExtent</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="80sybt"></A><B>GetTabbedTextExtent  <A HREF="_dec3d.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="4jd_z5i.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1xkvu5n.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetTabbedTextExtent</B> function computes the width and height of a character string. If the string contains one or more tab characters, the width of the string is based upon the specified tab stops. The <B>GetTabbedTextExtent</B> function uses the currently selected font to compute the dimensions of the string. </P>

<P><B>DWORD GetTabbedTextExtent(</B></P>

<TABLE cols=2 width=459>

<TR VALIGN="top">
<TD width=47%><B>HDC</B> <I>hDC</I><B>,</B></TD>
<TD width=53%>// handle of device context </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>    LPCTSTR</B> <I>lpString</I><B>,</B></TD>
<TD width=53%>// address of character string </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>    int</B> <I>nCount</I><B>,</B></TD>
<TD width=53%>// number of characters in string </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>    int</B> <I>nTabPositions</I><B>,</B></TD>
<TD width=53%>// number of tab positions </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>    LPINT</B> <I>lpnTabStopPositions</I> </TD>
<TD width=53%>// address of array of tab positions  </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>   );</B></TD>
<TD width=53%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hDC</I></P>

<P>Identifies the device context. </P>

<P><I>lpString</I></P>

<P>Points to a character string. </P>

<P><I>nCount</I></P>

<P>Specifies the number of characters in the text string. </P>

<P><I>nTabPositions</I></P>

<P>Specifies the number of tab-stop positions in the array pointed to by the <I>lpnTabStopPositions</I> parameter. </P>

<P><I>lpnTabStopPositions</I></P>

<P>Points to an array containing the tab-stop positions, in device units. The tab stops must be sorted in increasing order; the smallest x-value should be the first item in the array. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the dimensions of the string. The height is in the high-order word and the width is in the low-order word. </P>

<P>If the function fails, the return value is 0. <B>GetTabbedTextExtent</B> will fail if <I>hDC</I> is invalid and if <I>nTabPositions</I> is less than 0.</P>

<P><B>Remarks</B></P>

<P>The current clipping region does not affect the width and height returned by the <B>GetTabbedTextExtent</B> function. </P>

<P>Because some devices do not place characters in regular cell arrays (that is, they kern the characters), the sum of the extents of the characters in a string may not be equal to the extent of the string. </P>

<P>If the <I>nTabPositions</I> parameter is zero and the <I>lpnTabStopPositions</I> parameter is NULL, tabs are expanded to eight times the average character width. </P>

<P>If <I>nTabPositions</I> is 1, the tab stops are separated by the distance specified by the first value in the array to which <I>lpnTabStopPositions</I> points. </P>

<P><B>See Also</B></P>

<P><A HREF="101r0q.htm"><B>GetTextExtentPoint32</B></A>, <A HREF="d1si30.htm"><B>HIWORD</B></A>, <A HREF="h7si30.htm"><B>LOWORD</B></A>, <A HREF="2mcwnzm.htm"><B>TabbedTextOut</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
