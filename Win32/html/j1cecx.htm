<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ClearCommError</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="j1cecx"></A><B>ClearCommError  <A HREF="yh62x3.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="5jpun8.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="llpv25.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>ClearCommError</B> function retrieves information about a communications error and reports the current status of a communications device. The function is called when a communications error occurs, and it clears the device's error flag to enable additional input and output (I/O) operations. </P>

<P><B>BOOL ClearCommError(</B></P>

<TABLE cols=2 width=477>

<TR VALIGN="top">
<TD width=36%><B>HANDLE</B> <I>hFile</I><B>,</B></TD>
<TD width=64%>// handle to communications device</TD>
</TR>

<TR VALIGN="top">
<TD width=36%><B>    LPDWORD</B> <I>lpErrors</I><B>,</B></TD>
<TD width=64%>// pointer to variable to receive error codes</TD>
</TR>

<TR VALIGN="top">
<TD width=36%><B>    LPCOMSTAT</B> <I>lpStat</I></TD>
<TD width=64%>// pointer to buffer for communications status  </TD>
</TR>

<TR VALIGN="top">
<TD width=36%><B>   );</B></TD>
<TD width=64%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hFile</I></P>

<P>Identifies the communications device. The <A HREF="xn35yd.htm"><B>CreateFile</B></A> function returns this handle. </P>

<P><I>lpErrors</I></P>

<P>Points to a 32-bit variable to be filled with a mask indicating the type of error. This parameter can be one or more of the following error codes: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=28%><B>Value</B></TD>
<TD width=72%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_BREAK</TD>
<TD width=72%>The hardware detected a break condition.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_DNS</TD>
<TD width=72%><B>Windows 95 only: </B>A parallel device is not selected.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_FRAME</TD>
<TD width=72%>The hardware detected a framing error.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_IOE</TD>
<TD width=72%>An I/O error occurred during communications with the device.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_MODE</TD>
<TD width=72%>The requested mode is not supported, or the <I>hFile</I> parameter is invalid. If this value is specified, it is the only valid error.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_OOP</TD>
<TD width=72%><B>Windows 95 only: </B>A parallel device signaled that it is out of paper.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_OVERRUN</TD>
<TD width=72%>A character-buffer overrun has occurred. The next character is lost.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_PTO</TD>
<TD width=72%><B>Windows 95 only: </B>A time-out occurred on a parallel device.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_RXOVER</TD>
<TD width=72%>An input buffer overflow has occurred. There is either no room in the input buffer, or a character was received after the end-of-file (EOF) character.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_RXPARITY</TD>
<TD width=72%>The hardware detected a parity error.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>CE_TXFULL</TD>
<TD width=72%>The application tried to transmit a character, but the output buffer was full.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpStat</I></P>

<P>Points to a <A HREF="22ru_vr.htm"><B>COMSTAT</B></A> structure in which the device's status information is returned. If <I>lpStat</I> is NULL, no status information is returned. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>If a communications port has been set up with a TRUE value for the <B>fAbortOnError</B> member of the setup <B>DCB</B> structure, the communications software will terminate all read and write operations on the communications port when a communications error occurs. No new read or write operations will be accepted until the application acknowledges the communications error by calling the <B>ClearCommError</B> function. </P>

<P>The <B>ClearCommError</B> function fills the status buffer pointed to by the <I>lpStat</I> parameter with the current status of the communications device specified by the <I>hFile</I> parameter. </P>

<P><B>See Also</B></P>

<P><A HREF="iyc85q.htm"><B>ClearCommBreak</B></A>, <A HREF="22ru_vr.htm"><B>COMSTAT</B></A>, <A HREF="xn35yd.htm"><B>CreateFile</B></A>, <A HREF="2z9u_.o.htm"><B>DCB</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
