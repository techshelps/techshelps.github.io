<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Termination-Handler Syntax</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="0544z4"></A><B>Termination-Handler Syntax</B></P>

<P>The <B>try</B> and <B>finally</B> keywords are used to construct a termination handler. The following example shows the structure of a <B>try</B>-<B>finally</B> termination handler. </P>

<P>try {  </P>

<P></P>

<P>// guarded body of code </P>

<P></P>

<P>} </P>

<P>finally { </P>

<P></P>

<P>// finally block </P>

<P></P>

<P>} </P>

<P></P>

<P>As with the <B>try</B>-<B>except</B> statement, both the <B>try</B> block and the <B>finally</B> block require braces ({}), and using a <B>goto</B> statement to jump into either block is not permitted. </P>

<P>The <B>try</B> block contains the guarded body of code that is protected by the termination handler. A function can have any number of <B>try</B>-<B>finally</B> statements, and these termination handling structures can be nested within the same function or in different functions. </P>

<P>The <B>finally</B> block is executed whenever the flow of control leaves the <B>try</B> block. However, the <B>finally</B> block is not executed if either the <A HREF="i5ihdk.htm"><B>ExitProcess</B></A> or <A HREF="c.xq03.htm"><B>ExitThread</B></A> function is called from within the <B>try</B> block. </P>

<P>If execution of the <B>try</B> block terminates because of an exception that invokes the exception-handling block of a frame-based exception handler, the <B>finally</B> block is executed before the exception-handling block is executed. Similarly, a call to the standard C <B>longjmp</B> function from the <B>try</B> block causes execution of the <B>finally</B> block before execution resumes at the target of the <B>longjmp</B> operation. If <B>try</B> block execution terminates due to a normal control statement (<B>return</B>, <B>break</B>, <B>continue</B>, or <B>goto</B>), the <B>finally</B> block is executed. </P>

<P>The <A HREF="95vmuc.htm"><B>AbnormalTermination</B></A> function can be used within the <B>finally</B> block to determine whether the <B>try</B> block terminated sequentially ¾ that is, whether it reached the closing brace (}). Leaving the <B>try</B> block because of a call to <B>longjmp</B>, a jump to an exception handler, or a <B>return</B>, <B>break</B>, <B>continue</B>, or <B>goto</B> statement, is considered an abnormal termination. Note that failure to terminate sequentially causes the system to search backward through all stack frames to determine whether any termination handlers must be called. This can result in performance degradation due to the execution of hundreds of instructions. </P>

<P>Execution of the <B>finally</B> block can terminate by any of the following means. </P>

<P>·Execution of the last statement in the block and continuation to the next instruction </P>

<P>·Use of a normal control statement (<B>return</B>, <B>break</B>, <B>continue</B>, or <B>goto</B>) </P>

<P>·Use of <B>longjmp</B> or a jump to an exception handler </P>

<P></P>

<P>The <B>finally</B> block is executed in the context of the function in which the <B>try</B>-<B>finally</B> statement is located. This means that the <B>finally</B> block can access that function's local variables. </P>

</BODY>
</HTML>
