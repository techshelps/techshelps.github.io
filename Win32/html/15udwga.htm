<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>RasSecurityDialogReceive [New - Windows NT]</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="15udwga"></A><B>RasSecurityDialogReceive  <A HREF="10hkf9a.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="35kj_0r.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1mpuhlc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>[New - Windows NT]</P>

<P>The <B>RasSecurityDialogReceive</B> function starts an asynchronous operation that receives a response from a remote user. The response is the input that the user typed in a terminal window on the remote computer. A third-party RAS security DLL calls this function as part of its authentication of the remote user.</P>

<P>To call this function, you must first call the <A HREF="1vghbf8.htm"><B>LoadLibrary</B></A> function to load RASMAN.DLL. Then call the <A HREF="c_pcn4.htm"><B>GetProcAddress</B></A> function to get the DLL's <B>RasSecurityDialogReceive</B> entry point. </P>

<P><B>DWORD WINAPI RasSecurityDialogReceive(</B></P>

<TABLE cols=2 width=529>

<TR VALIGN="top">
<TD width=35%><B>HPORT</B> <I>hPort</I><B>,</B></TD>
<TD width=65%>// RAS handle to the port</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>    PBYTE</B> <I>pBuffer</I><B>,</B></TD>
<TD width=65%>// pointer to buffer that receives the user's response</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>    PWORD</B> <I>pBufferLength</I><B>,</B></TD>
<TD width=65%>// returns size, in bytes, of the data received</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>    DWORD</B> <I>Timeout</I><B>,</B></TD>
<TD width=65%>// time-out period, in seconds</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>    HANDLE</B> <I>hEvent</I></TD>
<TD width=65%>// event that is signaled when operation is finished</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>   );</B></TD>
<TD width=65%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hPort</I></P>

<P>Specifies the port handle that the RAS server passed to the security DLL in the <A HREF="esjkc.htm"><B>RasSecurityDialogBegin</B></A> call for this authentication transaction. </P>

<P><I>pBuffer</I></P>

<P>Pointer to the receive buffer that was passed to the security DLL in the <B>RasSecurityDialogBegin</B> call. When the asynchronous receive operation has been completed successfully, this buffer contains the response from the remote user.</P>

<P><I>pBufferLength</I></P>

<P>Pointer to a variable that receives the number of bytes returned in the <I>pBuffer</I> buffer.</P>

<P><I>Timeout</I></P>

<P>Specifies a time-out period, in seconds, after which the RAS server sets the <I>hEvent</I> event object to the signaled state. If this value is zero, there is no time-out period; that is, the RAS server does not signal the event object until the receive operation has been completed. </P>

<P><I>hEvent</I></P>

<P>Specifies the handle of an event object created by the <A HREF="j_zbjv.htm"><B>CreateEvent</B></A> function. The RAS server sets the event object to the signaled state when the receive operation has been completed or when the time-out period has elapsed.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function is successful, the return value is PENDING (defined in RASERROR.H). This indicates that the receive operation is in progress.</P>

<P>If an error occurs, the return value is one of the error codes defined in RASERROR.H or WINERROR.H. <A HREF="11c2vs7.htm"><B>GetLastError</B></A> does not provide extended error information.</P>

<P><B>Remarks</B></P>

<P>After calling the <A HREF="2mfi9yw.htm"><B>RasSecurityDialogSend</B></A> function to send a security challenge to the remote user, the security DLL must call the <B>RasSecurityDialogReceive</B> function to get the user's response. </P>

<P>The <B>RasSecurityDialogReceive</B> function is asynchronous. When the function returns, the security DLL must use one of the wait functions, such as <A HREF="j9iq2g.htm"><B>WaitForSingleObject</B></A>, to wait for the <I>hEvent</I> event object to be signaled. The RAS server signals the event object when the receive operation has been completed or when the time-out interval has elapsed. If the receive operation is successful, the <I>pBuffer</I> buffer contains the response from the remote user, and the <I>pBufferLength</I> parameter indicates the number of bytes received.</P>

<P>You can use the <I>Timeout</I> parameter to specify a time-out interval. If the time-out elapses, the RAS server signals the event object, and the <I>pBufferLength</I> parameter indicates that zero bytes were transferred. Alternatively, you can set <I>Timeout</I> to zero, and specify a time-out interval in the wait function that you use to wait for the event object to be signaled.</P>

<P>When a security DLL is authenticating a remote user, the connection operation on the remote computer enters a RASCS_Interactive paused state. The message sent by <B>RasSecurityDialogSend</B> is displayed as output in a terminal window on the remote computer. The response received by <B>RasSecurityDialogReceive</B> is the input that the remote user types in the terminal window. The RASCS_Interactive value is defined in the <B>RASCONNSTATE</B> enumeration.</P>

<P><B>See Also</B></P>

<P><A HREF="j_zbjv.htm"><B>CreateEvent</B></A>, <A HREF="c_pcn4.htm"><B>GetProcAddress</B></A>, <A HREF="1vghbf8.htm"><B>LoadLibrary</B></A>, <A HREF="244j07_.htm"><B>RASCONNSTATE</B></A>,<B> </B> <A HREF="2mfi9yw.htm"><B>RasSecurityDialogSend</B></A>,<B> </B> <A HREF="j9iq2g.htm"><B>WaitForSingleObject</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
