<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>UnlockFileEx</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1j9_05r"></A><B>UnlockFileEx  <A HREF="9jqray.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qnj9so.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1f83g2.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>UnlockFileEx</B> function unlocks a previously locked byte range in an open file. </P>

<P><B>BOOL UnlockFileEx(</B></P>

<TABLE cols=2 width=605>

<TR VALIGN="top">
<TD width=48%><B>HANDLE</B> <I>hFile</I><B>,</B></TD>
<TD width=52%>// handle of file to unlock </TD>
</TR>

<TR VALIGN="top">
<TD width=48%><B>    DWORD</B> <I>dwReserved</I><B>,</B></TD>
<TD width=52%>// reserved, must be set to zero </TD>
</TR>

<TR VALIGN="top">
<TD width=48%><B>    DWORD</B> <I>nNumberOfBytesToUnlockLow</I><B>,</B></TD>
<TD width=52%>// low order 32-bits of length to unlock </TD>
</TR>

<TR VALIGN="top">
<TD width=48%><B>    DWORD</B> <I>nNumberOfBytesToUnlockHigh</I><B>,</B></TD>
<TD width=52%>// high order 32-bits of length to unlock </TD>
</TR>

<TR VALIGN="top">
<TD width=48%><B>    LPOVERLAPPED</B> <I>lpOverlapped</I> </TD>
<TD width=52%>// addr. of struct. with unlock region start offset </TD>
</TR>

<TR VALIGN="top">
<TD width=48%><B>   );</B></TD>
<TD width=52%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hFile</I></P>

<P>Identifies an open handle to a file that is to have an existing locked region unlocked. The handle must have been created with either GENERIC_READ or GENERIC_WRITE access to the file. </P>

<P><I>dwReserved</I></P>

<P>Reserved parameter; must be zero. </P>

<P><I>nNumberOfBytesToUnlockLow</I></P>

<P>Specifies the low-order 32-bits of the length of the byte range to unlock. </P>

<P><I>nNumberOfBytesToUnlockHigh</I></P>

<P>Specifies the high-order 32-bits of the length of the byte range to unlock. </P>

<P><I>lpOverlapped</I></P>

<P>Points to an <A HREF="1n286m5.htm"><B>OVERLAPPED</B></A> structure that the function uses with the unlocking request. This structure contains the file offset of the beginning of the unlock range. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero or NULL. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>Unlocking a region of a file releases a previously acquired lock on a file. The region to unlock must correspond exactly to an existing locked region. Two adjacent regions of a file can not be locked separately and then unlocked using a single region that spans both locked regions. </P>

<P>If a process terminates with a portion of a file locked or closes a file that has outstanding locks, the behavior is not specified. </P>

<P><B>See Also</B></P>

<P><A HREF="xn35yd.htm"><B>CreateFile</B></A>, <A HREF="egdiih.htm"><B>LockFile</B></A>, <A HREF="adh1lq.htm"><B>LockFileEx</B></A>, <A HREF="1n286m5.htm"><B>OVERLAPPED</B></A>, <A HREF="2v.n6yp.htm"><B>UnlockFile</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
