<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Customizing the Font Dialog Box</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="3eo._gq"></A><B>Customizing the Font Dialog Box</B></P>

<P>You can provide a custom template for the Font dialog box, for example, if you want to include additional controls that are unique to your application. The <A HREF="1c8v_vz.htm"><B>ChooseFont</B></A> function uses your custom template in place of the default template. </P>

<P><B><IMG SRC="../images/bm4.gif" ALT="" BORDER=0>To provide a custom template for the Font dialog box</B></P>

<P>1.Create the custom template by modifying the default template specified in the FONT.DLG file. The control identifiers used in the default Font dialog template are defined in the DLGS.H file.</P>

<P>2.Use the <A HREF="5awy_t0.htm"><B>CHOOSEFONT</B></A> structure to enable the template as follows:</P>

<P>·If your custom template is a resource in an application or dynamic-link library, set the CF_ENABLETEMPLATE flag in the <B>Flags</B> member. Use the <B>hInstance</B> and <B>lpTemplateName</B> members of the structure to identify the module and resource name. </P>

<P><B>-Or-</B></P>

<P>·If your custom template is already in memory, set the CF_ENABLETEMPLATEHANDLE flag. Use the <B>hInstance</B> member to identify the memory object that contains the template. </P>

<P></P>

<P>You can provide a <A HREF="1c6i0je.htm"><B>CFHookProc</B></A> hook procedure for the Font dialog box. The hook procedure can process messages sent to the dialog box. It can also send messages to the dialog box. If you use a custom template to define additional controls, you must provide a hook procedure to process input for your controls. </P>

<P><B><IMG SRC="../images/bm4.gif" ALT="" BORDER=0>To enable a hook procedure for the Font dialog box</B></P>

<P>1.Set the CF_ENABLEHOOK flag in the <B>Flags</B> member of the <A HREF="5awy_t0.htm"><B>CHOOSEFONT</B></A> structure.</P>

<P>2.Specify the address of the hook procedure in the <B>lpfnHook</B> member.</P>

<P></P>

<P>After processing its <A HREF="ii1w.b.htm">WM_INITDIALOG</A> message, the dialog box procedure sends a WM_INITDIALOG message to the hook procedure. The <I>lParam</I> parameter of this message is a pointer to the <B>CHOOSEFONT</B> structure used to initialize the dialog box. </P>

<P>The hook procedure can send the <A HREF="4ohk_w.htm">WM_CHOOSEFONT_GETLOGFONT</A>, <A HREF="16j93d9.htm">WM_CHOOSEFONT_SETLOGFONT</A>, and <A HREF="2e9e_.2.htm">WM_CHOOSEFONT_SETFLAGS</A> messages to the dialog box to get and set the current values and flags of the dialog box.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
