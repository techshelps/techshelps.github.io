<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Default Combo Box Behavior</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="odqd.0"></A><B>Default Combo Box Behavior</B></P>

<P>This section contains a table that describes the messages specifically handled by the predefined COMBOBOX class window procedure. </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=51%><B>Message</B></TD>
<TD width=49%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="4532_t6.htm">CB_ADDSTRING</A></TD>
<TD width=49%>Sends an <A HREF="aidyjg.htm">LB_ADDSTRING</A> message to the list window to add a list item.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1o9mhi6.htm">CB_DELETESTRING</A></TD>
<TD width=49%>Sends an <A HREF="jxlehq.htm">LB_DELETESTRING</A> message to the list window to delete a list item.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="113e_ax.htm">CB_DIR</A></TD>
<TD width=49%>Adds the filenames matching the specified attributes and path to the list.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1.tc7j.htm">CB_FINDSTRING</A></TD>
<TD width=49%>Sends an <A HREF="vl.ntb.htm">LB_FINDSTRING</A> message to the list window. This message returns the index of the first list item that begins with the specified text.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="jlhgh9.htm">CB_FINDSTRINGEXACT</A></TD>
<TD width=49%>Sends an LB_FINDSTRING message to the list window. This message returns the index of the first list item exactly matching the specified text.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="dq99ba.htm">CB_GETCOUNT</A></TD>
<TD width=49%>Sends an <A HREF="es0izz.htm">LB_GETCOUNT</A> message to the list window. It returns the number of list items.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1342t.u.htm">CB_GETCURSEL</A></TD>
<TD width=49%>Sends an <A HREF="3djc0p.htm">LB_GETCURSEL</A> message to the list window. It returns the index of the currently selected item, if any.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="4u9j6.htm">CB_GETDROPPEDCONTROLRECT</A></TD>
<TD width=49%>Fills the specified rectangle structure with the screen coordinates of a drop-down list.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="h5eqqd.htm">CB_GETDROPPEDSTATE</A></TD>
<TD width=49%>Returns TRUE if a drop-down list is open; otherwise, it returns FALSE.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="h90tqg.htm">CB_GETDROPPEDWIDTH</A></TD>
<TD width=49%>Returns the minimum allowable width, in pixels, of the drop down list.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="2tjd_t4.htm">CB_GETEDITSEL</A></TD>
<TD width=49%>Sends an <A HREF="12tnb14.htm">EM_GETSEL</A> message to the edit control, and it returns the starting and ending position of the current selection. In drop-down list boxes, the window procedure returns CB_ERR.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="223vgzv.htm">CB_GETEXTENDEDUI</A></TD>
<TD width=49%>Returns TRUE if the combo box is a drop-down combo box or drop-down list box and the extend user-interface flag is set; otherwise, it returns FALSE.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="gt31io.htm">CB_GETHORIZONTALEXTENT</A></TD>
<TD width=49%>Sends an <A HREF="4_20vm.htm">LB_GETHORIZONTALEXTENT</A> message to the list window. It returns the scrollable width, in pixels, of the drop down list.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="mvsibo.htm">CB_GETITEMDATA</A></TD>
<TD width=49%>Sends an <A HREF="43h6r35.htm">LB_GETITEMDATA</A> message to the list window. It returns the 32-bit value associated with the specified list item.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="baky8t.htm">CB_GETITEMHEIGHT</A></TD>
<TD width=49%>Sends an <A HREF="ne48uv.htm">LB_GETITEMHEIGHT</A> message to the list window. It returns the height, in pixels, of the specified owner-drawn list item.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="ibsg8m.htm">CB_GETLBTEXT</A></TD>
<TD width=49%>Sends an <A HREF="3w.ajt.htm">LB_GETTEXT</A> message to the list window. It copies the specified list text to the specified buffer.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="18icemx.htm">CB_GETLBTEXTLEN</A></TD>
<TD width=49%>Sends an <A HREF="1pwxmwl.htm">LB_GETTEXTLEN</A> message to the list window. It returns the length, in bytes, of the specified list text.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="3_iga3s.htm">CB_GETLOCALE</A></TD>
<TD width=49%>Sends an <A HREF="3makz5c.htm">LB_GETLOCALE</A> message to the list window. It returns the current locale for the list.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="5wlz2f.htm">CB_GETTOPINDEX</A></TD>
<TD width=49%>Sends an <A HREF="5ej9z2.htm">LB_GETTOPINDEX</A> message to the list window. It returns the index of the first visible item in the drop down list.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1m_glf4.htm">CB_INITSTORAGE</A></TD>
<TD width=49%>Sends an <A HREF="1lvdwbk.htm">LB_INITSTORAGE</A> message to the list window. It initializes space for the specified number of items and the specified number of bytes for item strings.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="9l5p29.htm">CB_INSERTSTRING</A></TD>
<TD width=49%>Sends an <A HREF="drll5i.htm">LB_INSERTSTRING</A> message to the list window. It inserts a list item at the specified position.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1mkmg.x.htm">CB_LIMITTEXT</A></TD>
<TD width=49%>Sends an <A HREF="s006qd.htm">EM_LIMITTEXT</A> message to the edit control. It sets the maximum number of characters a user can enter in the edit control. In drop-down list boxes, the window procedure returns CB_ERR.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="te3wjz.htm">CB_RESETCONTENT</A></TD>
<TD width=49%>Sends an <A HREF="1qtvs0o.htm">LB_RESETCONTENT</A> message to the list window, and it removes the contents of the list.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="8kdo2d.htm">CB_SELECTSTRING</A></TD>
<TD width=49%>Sends an <A HREF="1s9hj9i.htm">LB_SELECTSTRING</A> message to the list window. It selects the first list item, if any, that begins with the characters in the specified text.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="22i4e47.htm">CB_SETCURSEL</A></TD>
<TD width=49%>Sends an <A HREF="12yl422.htm">LB_SETCURSEL</A> message to the list window, and it sets the current selection.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="5iasg.htm">CB_SETDROPPEDWIDTH</A></TD>
<TD width=49%>Sets the minimum allowable width, in pixels, of the drop down list.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="17jzrrw.htm">CB_SETEDITSEL</A></TD>
<TD width=49%>Sends an <A HREF="lkbbdo.htm">EM_SETSEL</A> message to the edit control. It selects the specified range of text. In drop-down list boxes, the window procedure returns CB_ERR.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="xf9y3a.htm">CB_SETEXTENDEDUI</A></TD>
<TD width=49%>Sets or clears the extended user-interface flag. This flag changes the keys that open and close the list in a drop-down combo box or drop-down list box. If the combo box is a simple combo box, the window procedure returns CB_ERR.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="3tw9.ck.htm">CB_SETHORIZONTALEXTENT</A></TD>
<TD width=49%>Sends an <A HREF=".rh1o.htm">LB_SETHORIZONTALEXTENT</A> message to the list window. It sets the scrollable width, in pixels, of the drop down list.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="23ic_r.htm">CB_SETITEMDATA</A></TD>
<TD width=49%>Sends an <A HREF="nurmqn.htm">LB_SETITEMDATA</A> message to the list window. It associates the specified 32-bit value with a list item.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="21n4_ct.htm">CB_SETITEMHEIGHT</A></TD>
<TD width=49%>Sends an <A HREF=".5nieq.htm">LB_SETITEMHEIGHT</A> message to the list window. It sets the height of the specified owner-drawn list item or the selection field.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="9qw4jv.htm">CB_SETLOCALE</A></TD>
<TD width=49%>Sends an <A HREF="2k0tl.k.htm">LB_SETLOCALE</A> message to the list window, and it sets the current locale for the list. The locale affects how the list is sorted if it has the CBS_SORT style and strings are added using <A HREF="4532_t6.htm">CB_ADDSTRING</A>.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="7_nsdy.htm">CB_SETTOPINDEX</A></TD>
<TD width=49%>Sends an <A HREF="6vl3ae.htm">LB_SETTOPINDEX</A> message to the list window. It scrolls the drop down list so the specified item is at the top of the visible range.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="octhan.htm">CB_SHOWDROPDOWN</A></TD>
<TD width=49%>Shows or hides the drop-down list. This message has no effect on simple combo boxes.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="4gep_o2.htm">WM_CHAR</A></TD>
<TD width=49%>Processes character input. In drop-down list boxes, this message is passed to the list window, which moves the selection to the first item beginning with the specified character. In simple and drop-down combo boxes, this message is passed to the edit control.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1u0xspp.htm">WM_CLEAR</A></TD>
<TD width=49%>Deletes the edit selection. In simple and drop-down combo boxes, the edit control processes this message. In drop-down list boxes, the window procedure returns CB_ERR.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="71v.3j.htm">WM_COMMAND</A></TD>
<TD width=49%>Processes notification messages from the edit control and list window and sends corresponding combo box notification messages to the parent window.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>&nbsp;</TD>
<TD width=49%>For edit control notifications, the window procedure may update the list window's current selection, caret index, and top index. For list notification messages, the window procedure may update the content of the selection field.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="gxivmk.htm">WM_COMPAREITEM</A></TD>
<TD width=49%>Passes the message to the parent window, enabling the application to specify the relative sort position of two owner-drawn list items. The combo box window receives this message from the list window.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="d93grz.htm">WM_COPY</A></TD>
<TD width=49%>Copies the edit selection to the clipboard. In simple and drop-down combo boxes, the edit control processes this message. In drop-down list boxes, the window procedure returns CB_ERR.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="2re1yt3.htm">WM_CREATE</A></TD>
<TD width=49%>Initializes the combo box.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="5vx_j0.htm">WM_CUT</A></TD>
<TD width=49%>Deletes the edit selection and places it on the clipboard. In simple and drop-down combo boxes, the edit control processes this message. In drop-down list boxes, the window procedure returns CB_ERR.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1nwu_p.htm">WM_DELETEITEM</A></TD>
<TD width=49%>Passes the message to the parent window, notifying the application that a list item has been deleted. The combo box window receives this message from the list window.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="70lqx9p.htm">WM_DRAWITEM</A></TD>
<TD width=49%>Passes the message on to the parent window enabling the application to paint the specified list item. The combo box window receives this message from the list window. The window procedure can also originate this message to have the application paint the selection field of a drop-down list box.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="5ft1di.htm">WM_ENABLE</A></TD>
<TD width=49%>Sets the state to enable or prohibit mouse and keyboard input.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="fey63i.htm">WM_ERASEBKGND</A></TD>
<TD width=49%>Returns 1, indicating that the background is erased.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1n23mxw.htm">WM_GETDLGCODE</A></TD>
<TD width=49%>Returns a combination of the DLG_WANTCHARS and DLGC_WANTARROWS values.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1vgvkcu.htm">WM_GETFONT</A></TD>
<TD width=49%>Returns the handle of the current font with which the combo box will draw its text.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="g5lbj5.htm">WM_GETTEXT</A></TD>
<TD width=49%>Copies the contents of the selection field to the specified buffer. In simple and drop-down combo boxes, the edit control processes this message.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="16t.gdk.htm">WM_GETTEXTLENGTH</A></TD>
<TD width=49%>Returns the length, in characters, of the text in the selection field. In simple and drop-down combo boxes, the edit control processes this message.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="cxjo_p.htm">WM_KEYDOWN</A></TD>
<TD width=49%>Processes noncharacter keyboard input. In drop-down list boxes, this message is sent to the list window, which may show or hide itself, or change its current selection or caret index. In simple and drop-down combo boxes, this message is passed to the edit control. The edit control passes certain keys to the list window, such as the UP and DOWN ARROW keys and the F4 key.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="558y_gq.htm">WM_KILLFOCUS</A></TD>
<TD width=49%>Hides the highlight in the selection field and closes the drop-down list, if necessary. If the window receiving the input focus is part of the combo box (for example, the edit control), this message is ignored.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1.8care.htm">WM_LBUTTONDBLCLK</A></TD>
<TD width=49%>Same as <A HREF="065j6u.htm">WM_LBUTTONDOWN</A>.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="065j6u.htm">WM_LBUTTONDOWN</A></TD>
<TD width=49%>Sets the focus to the combo box and, for drop-down combo boxes and drop-down lists, can open or close the list. If it opens the list, the window procedure captures the mouse to enable selection by dragging and releasing the mouse button.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="yl9yek.htm">WM_LBUTTONUP</A></TD>
<TD width=49%>Releases the mouse capture if the mouse opened the list.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF=".a2o7n.htm">WM_MEASUREITEM</A></TD>
<TD width=49%>Posts the message to the parent window, enabling the application to modify the contents of the specified <A HREF="5k1k_8r.htm"><B>MEASUREITEMSTRUCT</B></A> structure. The combo box window receives this message from the list window.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1mq_iq2.htm">WM_MOUSEMOVE</A></TD>
<TD width=49%>Posts the message to the list window if the mouse has opened the list and the mouse button is still down. This enables a user to select an item by dragging the mouse pointer to a list item and then releasing the button.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="11ps3hu.htm">WM_NCCREATE</A></TD>
<TD width=49%>Allocates an internal data structure used by the combo box window procedure.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="jw500a.htm">WM_NCDESTROY</A></TD>
<TD width=49%>Frees resources allocated in response to the <A HREF="11ps3hu.htm">WM_NCCREATE</A> message.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="f55xz2.htm">WM_PAINT</A></TD>
<TD width=49%>Paints the invalid region of the combo box. If <I>wParam</I> is not NULL, it is assumed to be a DC handle passed from a subclass function. The window procedure uses the specified DC instead of calling <A HREF="f7ytuy.htm"><B>BeginPaint</B></A> and <A HREF="8d6uz5.htm"><B>EndPaint</B></A>.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="f5684n.htm">WM_PASTE</A></TD>
<TD width=49%>Replaces the edit selection with the contents of the clipboard. In simple and drop-down combo boxes, the edit control processes this message. In drop-down list boxes, the window procedure returns CB_ERR.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="1ml4f9e.htm">WM_SETFOCUS</A></TD>
<TD width=49%>Sets the focus to the edit control or, in drop-down list boxes, inverts the selection field and turns on the caret in the list window.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="_0_tib.htm">WM_SETFONT</A></TD>
<TD width=49%>Saves the specified font handle in an internal structure, adjusts the dimensions of the selection field and list, and invalidates the combo box window. Text in the selection field and the list is displayed in the saved font.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="2xks04i.htm">WM_SETREDRAW</A></TD>
<TD width=49%>Sets or clears the redraw flag. If the redraw flag is cleared, the combo box is not repainted until the flag is set again.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="_0kjsb.htm">WM_SETTEXT</A></TD>
<TD width=49%>Sets the contents of the edit control. In simple and drop-down combo boxes, the edit control processes this message. In drop-down list boxes, the window procedure returns CB_ERR.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="d9cb1f.htm">WM_SIZE</A></TD>
<TD width=49%>Resizes the child windows, if necessary.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><A HREF="7.wa3p.htm">WM_SYSKEYDOWN</A></TD>
<TD width=49%>Opens or closes the drop-down list depending on which arrow key the user pressed.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>All other messages are passed to the <A HREF="32d1nbh.htm"><B>DefWindowProc</B></A> function for default processing. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
