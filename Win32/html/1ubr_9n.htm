<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>WM_KEYUP</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1ubr_9n"></A><B>WM_KEYUP  <A HREF="hat8r7.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1xtfdy5.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="2cpq_yt.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is <I>not</I> pressed, or a keyboard key that is pressed when a window has the keyboard focus. </P>

<P>WM_KEYUP  </P>

<P>nVirtKey = (int) wParam;    // virtual-key code </P>

<P>lKeyData = lParam;          // key data </P>

<P></P>

<P><B>Parameters</B></P>

<P><I>nVirtKey</I></P>

<P>Value of <I>wParam</I>. Specifies the virtual-key code of the nonsystem key. </P>

<P><I>lKeyData</I></P>

<P>Value of <I>lParam</I>. Specifies the repeat count, scan code, extended-key flag, context code, previous key-state flag, and transition-state flag, as shown in the following table: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=17%><B>Value</B></TD>
<TD width=83%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>0-15</TD>
<TD width=83%>Specifies the repeat count. The value is the number of times the keystroke is repeated as a result of the user holding down the key. The repeat count is always one for a WM_KEYUP message.</TD>
</TR>

<TR VALIGN="top">
<TD width=17%>16-23</TD>
<TD width=83%>Specifies the scan code. The value depends on the original equipment manufacturer (OEM).</TD>
</TR>

<TR VALIGN="top">
<TD width=17%>24</TD>
<TD width=83%>Specifies whether the key is an extended key, such as the right-hand ALT and CTRL keys that appear on an enhanced 101- or 102-key keyboard. The value is 1 if it is an extended key; otherwise, it is 0.</TD>
</TR>

<TR VALIGN="top">
<TD width=17%>25-28</TD>
<TD width=83%>Reserved; do not use.</TD>
</TR>

<TR VALIGN="top">
<TD width=17%>29</TD>
<TD width=83%>Specifies the context code. The value is always 0 for a WM_KEYUP message.</TD>
</TR>

<TR VALIGN="top">
<TD width=17%>30</TD>
<TD width=83%>Specifies the previous key state. The value is always 1 for a WM_KEYUP message.</TD>
</TR>

<TR VALIGN="top">
<TD width=17%>31</TD>
<TD width=83%>Specifies the transition state. The value is always 1 for a WM_KEYUP message.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>An application should return zero if it processes this message. </P>

<P><B>Default Action</B></P>

<P>The <B>DefWindowProc</B> function sends a <A HREF="3xmtv4t.htm">WM_SYSCOMMAND</A> message to the top-level window if the F10 key or the ALT key was released. The <I>wParam</I> parameter of the message is set to SC_KEYMENU. </P>

<P><B>Remarks</B></P>

<P>For enhanced 101- and 102-key keyboards, extended keys are the right ALT and CTRL keys on the main section of the keyboard; the INS, DEL, HOME, END, PAGE UP, PAGE DOWN and arrow keys in the clusters to the left of the numeric keypad; and the divide (/) and ENTER keys in the numeric keypad. Other keyboards may support the extended-key bit in the <I>lKeyData</I> parameter. </P>

<P><B>See Also</B></P>

<P><A HREF="32d1nbh.htm"><B>DefWindowProc</B></A>, <A HREF="cxjo_p.htm">WM_KEYDOWN</A>, <A HREF="3xmtv4t.htm">WM_SYSCOMMAND</A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
