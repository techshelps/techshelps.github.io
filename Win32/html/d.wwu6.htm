<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>StretchDIBits</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="d.wwu6"></A><B>StretchDIBits  <A HREF="1p7r_uc.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="15l9v8p.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1z.4d3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>StretchDIBits</B> function copies the color data for a rectangle of pixels in a device-independent bitmap (DIB) to the specified destination rectangle. If the destination rectangle is larger than the source rectangle, this function stretches the rows and columns of color data to fit the destination rectangle. If the destination rectangle is smaller than the source rectangle, this function compresses the rows and columns by using the specified raster operation. </P>

<P><B>int StretchDIBits(</B></P>

<TABLE cols=2 width=581>

<TR VALIGN="top">
<TD width=43%><B>HDC</B> <I>hdc</I><B>,</B></TD>
<TD width=57%>// handle of device context </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    int</B> <I>XDest</I><B>,</B></TD>
<TD width=57%>// x-coordinate of upper-left corner of dest. rect. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    int</B> <I>YDest</I><B>,</B></TD>
<TD width=57%>// y-coordinate of upper-left corner of dest. rect. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    int</B> <I>nDestWidth</I><B>,</B></TD>
<TD width=57%>// width of destination rectangle </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    int</B> <I>nDestHeight</I><B>,</B></TD>
<TD width=57%>// height of destination rectangle </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    int</B> <I>XSrc</I><B>,</B></TD>
<TD width=57%>// x-coordinate of upper-left corner of source rect. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    int</B> <I>YSrc</I><B>,</B></TD>
<TD width=57%>// y-coordinate of upper-left corner of source rect. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    int</B> <I>nSrcWidth</I><B>,</B></TD>
<TD width=57%>// width of source rectangle </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    int</B> <I>nSrcHeight</I><B>,</B></TD>
<TD width=57%>// height of source rectangle </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    CONST VOID</B> <B>*</B><I>lpBits</I><B>,</B></TD>
<TD width=57%>// address of bitmap bits </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    CONST BITMAPINFO *</B><I>lpBitsInfo</I><B>,</B></TD>
<TD width=57%>// address of bitmap data </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    UINT</B> <I>iUsage</I><B>,</B></TD>
<TD width=57%>// usage </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    DWORD</B> <I>dwRop</I> </TD>
<TD width=57%>// raster operation code </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>   );</B></TD>
<TD width=57%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hdc</I></P>

<P>Identifies the destination device context. </P>

<P><I>XDest</I></P>

<P>Specifies the x-coordinate, in logical units, of the upper-left corner of the destination rectangle. </P>

<P><I>YDest</I></P>

<P>Specifies the y-coordinate, in logical units, of the upper-left corner of the destination rectangle. </P>

<P><I>nDestWidth</I></P>

<P>Specifies the width, in logical units, of the destination rectangle. </P>

<P><I>nDestHeight</I></P>

<P>Specifies the height, in logical units, of the destination rectangle. </P>

<P><I>XSrc</I></P>

<P>Specifies the x-coordinate, in pixels, of the source rectangle in the DIB. </P>

<P><I>YSrc</I></P>

<P>Specifies the y-coordinate, in pixels, of the source rectangle in the DIB. </P>

<P><I>nSrcWidth</I></P>

<P>Specifies the width, in pixels, of the source rectangle in the DIB. </P>

<P><I>nSrcHeight</I></P>

<P>Specifies the height, in pixels, of the source rectangle in the DIB. </P>

<P><I>lpBits</I></P>

<P>Points to the DIB bits, which are stored as an array of bytes. </P>

<P><I>lpBitsInfo</I></P>

<P>Points to a <A HREF=".2pxnh.htm"><B>BITMAPINFO</B></A> structure that contains information about the DIB. </P>

<P><I>iUsage</I></P>

<P>Specifies whether the <B>bmiColors</B> member of the <B>BITMAPINFO</B> structure was provided and, if so, whether <B>bmiColors</B> contains explicit red, green, blue (RGB) values or indices. The <I>iUsage</I> parameter must be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=33%><B>Value</B></TD>
<TD width=67%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=33%>DIB_PAL_COLORS</TD>
<TD width=67%>The array contains 16-bit indices into the logical palette of the source device context.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>DIB_RGB_COLORS</TD>
<TD width=67%>The color table contains literal RGB values.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>dwRop</I></P>

<P>Specifies how the source pixels, the destination device context's current brush, and the destination pixels are to be combined to form the new image. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the number of scan lines copied.</P>

<P>If the function fails, the return value is GDI_ERROR. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The origin of a bottom-up DIB is the bottom-left corner; the origin of a top-down DIB is the upper-left corner. </P>

<P><B>StretchDIBits</B> creates a mirror image of a bitmap if the signs of the <I>nSrcWidth</I> and <I>nDestWidth</I> parameters, or of the <I>nSrcHeight</I> and <I>nDestHeight</I> parameters differ. If <I>nSrcWidth</I> and <I>nDestWidth</I> have different signs, the function creates a mirror image of the bitmap along the x-axis. If <I>nSrcHeight</I> and <I>nDestHeight</I> have different signs, the function creates a mirror image of the bitmap along the y-axis. </P>

<P><B>See Also</B></P>

<P><A HREF="1gp60x2.htm"><B>SetMapMode</B></A>, <A HREF="a5mbm7.htm"><B>SetStretchBltMode</B></A>, <A HREF=".2pxnh.htm"><B>BITMAPINFO</B></A> </P>

</BODY>
</HTML>
