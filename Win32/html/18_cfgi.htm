<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Retrieving and Setting a Hot Key</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="18_cfgi"></A><B>Retrieving and Setting a Hot Key</B></P>

<P>After the user has chosen a hot key, an application should retrieve the hot key from the hot-key control by using the <A HREF="c6vit8.htm">HKM_GETHOTKEY</A> message. This message retrieves a 16-bit value that contains the virtual-key code and modifier keys describing the hot key. </P>

<P>The following function retrieves a key combination from a hot-key control and then uses the <A HREF="13516.htm">WM_SETHOTKEY</A> message to set a global hot key. Note that you cannot set a global hot key for a window that has the WS_CHILD window style.</P>

<P>// ProcessHotkey - retrieves the hot key from the hot-key control and  </P>

<P>//     sets it as the hot key for the application's main window. </P>

<P>// Returns TRUE if successful or FALSE otherwise. </P>

<P>// hwndHot - handle of the hot-key control </P>

<P>// hwndMain - handle of the main window </P>

<P>BOOL WINAPI ProcessHotkey(HWND hwndHot, HWND hwndMain) </P>

<P>{ </P>

<P>WORD wHotkey; </P>

<P>UINT iSetResult; </P>

<P></P>

<P>// Retrieve the hot key (virtual-key code and modifiers). </P>

<P>wHotkey = SendMessage(hwndHot, HKM_GETHOTKEY, 0, 0); </P>

<P></P>

<P>// Use the result as wParam for WM_SETHOTKEY. </P>

<P>iSetResult = SendMessage(hwndMain, WM_SETHOTKEY, wHotkey, 0); </P>

<P></P>

<P>switch (iSetResult) { </P>

<P>case 2:            // WM_SETHOTKEY succeeded </P>

<P>MessageBox(NULL, "Hot key previously assigned", </P>

<P>"Okay", MB_OK); </P>

<P>return TRUE; </P>

<P></P>

<P>case 1:            // WM_SETHOTKEY succeeded </P>

<P>return TRUE; </P>

<P></P>

<P>case 0: </P>

<P>MessageBox(NULL, "Invalid window for hot key", </P>

<P>"Error", MB_OK); </P>

<P>return FALSE; </P>

<P></P>

<P>case -1: </P>

<P>MessageBox(NULL, "Invalid hot key", </P>

<P>"Error", MB_OK); </P>

<P>return FALSE; </P>

<P></P>

<P>default: </P>

<P>MessageBox(NULL, "Unknown error", "Error", MB_OK); </P>

<P>return FALSE; </P>

<P>} </P>

<P>}<B> </B></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
