<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>BROWSEINFO</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="18ecvw_"></A><B>BROWSEINFO  <A HREF="1ovg9pa.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="b2.3c..htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1lc0a5k.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>Contains parameters for the the <A HREF="18jbn.n.htm"><B>SHBrowseForFolder</B></A> function and receives information about the folder selected by the user.</P>

<P>typedef struct _browseinfo {  </P>

<P>HWND hwndOwner;          // see below </P>

<P>LPCITEMIDLIST pidlRoot;  // see below </P>

<P>LPSTR pszDisplayName;    // see below </P>

<P>LPCSTR lpszTitle;        // see below </P>

<P>UINT ulFlags;            // see below </P>

<P>BFFCALLBACK lpfn;        // see below </P>

<P>LPARAM lParam;           // see below </P>

<P>int iImage;              // see below </P>

<P>} BROWSEINFO, *PBROWSEINFO, *LPBROWSEINFO; </P>

<P></P>

<P><B>Members</B></P>

<P><B>hwndOwner</B></P>

<P>Handle of the owner window for the dialog box.</P>

<P><B>pidlRoot</B></P>

<P>Pointer to an item identifier list (an <A HREF="16gub2n.htm"><B>ITEMIDLIST</B></A> structure) specifying the location of the "root" folder to browse from. Only the specified folder and its subfolders appear in the dialog box. This member can be NULL, and in that case, the name space root (the desktop folder) is used.</P>

<P><B>pszDisplayName</B></P>

<P>Pointer to a buffer that receives the display name of the folder selected by the user. The size of this buffer is assumed to be MAX_PATH bytes.</P>

<P><B>lpszTitle</B></P>

<P>Pointer to a null-terminated string that is displayed above the tree view control in the dialog box. This string can be used to specify instructions to the user.</P>

<P><B>ulFlags</B></P>

<P>Value specifying the types of folders to be listed in the dialog box as well as other options. This member can include zero or more of the following values:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=46%>BIF_BROWSEFORCOMPUTER</TD>
<TD width=54%>Only returns computers. If the user selects anything other than a computer, the OK button is grayed.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>BIF_BROWSEFORPRINTER</TD>
<TD width=54%>Only returns printers. If the user selects anything other than a printer, the OK button is grayed.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>BIF_DONTGOBELOWDOMAIN</TD>
<TD width=54%>Does not include network folders below the domain level in the tree view control.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>BIF_RETURNFSANCESTORS</TD>
<TD width=54%>Only returns file system ancestors. If the user selects anything other than a file system ancestor, the OK button is grayed.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>BIF_RETURNONLYFSDIRS</TD>
<TD width=54%>Only returns file system directories. If the user selects folders that are not part of the file system, the OK button is grayed.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>BIF_STATUSTEXT</TD>
<TD width=54%>Includes a status area in the dialog box. The callback function can set the status text by sending messages to the dialog box.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>lpfn</B></P>

<P>Address an application-defined function that the dialog box calls when events occur. For more information, see the description of the <A HREF="4r0g_2.htm"><B>BrowseCallbackProc</B></A> function. This member can be NULL.</P>

<P><B>lParam</B></P>

<P>Application-defined value that the dialog box passes to the callback function (if one is specified).</P>

<P><B>iImage</B></P>

<P>Variable that receives the image associated with the selected folder. The image is specified as an index to the system image list.</P>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="4r0g_2.htm"><B>BrowseCallbackProc</B></A>, <A HREF="16gub2n.htm"><B>ITEMIDLIST</B></A>, <A HREF="18jbn.n.htm"><B>SHBrowseForFolder</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
