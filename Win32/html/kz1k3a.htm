<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Context Switches</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="kz1k3a"></A><B>Context Switches</B></P>

<P>The scheduler maintains a queue of executable threads for each priority level. These are known as <I>ready threads</I>. When a processor becomes available, the system performs a <I>context switch</I>. The steps in a context switch are: </P>

<P>1.Save the context of the thread that just finished executing. </P>

<P>2.Place the thread that just finished executing at the end of the queue for its priority. </P>

<P>3.Find the highest priority queue that contains ready threads. </P>

<P>4.Remove the thread at the head of the queue, load its context, and execute it. </P>

<P></P>

<P>The following classes of threads are not ready threads. </P>

<P>·Threads created with the CREATE_SUSPENDED flag </P>

<P>·Threads halted during execution with the <A HREF="0pf8eh.htm"><B>SuspendThread</B></A> or <A HREF="qwsq8.htm"><B>SwitchToThread</B></A> function </P>

<P>·Threads waiting for a synchronization object or input. </P>

<P></P>

<P>Until threads that are suspended or blocked become ready to run, the scheduler does not allocate any processor time to them, regardless of their priority. </P>

<P>The most common reasons for a context switch are: </P>

<P>·The time slice has elapsed. </P>

<P>·A thread with a higher priority has become ready to run. </P>

<P>·A running thread needs to wait. </P>

<P></P>

<P>When a running thread needs to wait, it relinquishes the remainder of its time slice. </P>

</BODY>
</HTML>
