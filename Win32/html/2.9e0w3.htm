<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Writing a File Parser</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2.9e0w3"></A><B>Writing a File Parser</B></P>

<P>File parsers should be contained in a set of source and include files as follows, where <I>XXX</I> represents a mnemonic for the data format. For specific examples, see the sample ASCII filter files identified in the following table.</P>

<TABLE cols=3>

<TR VALIGN="top">
<TD width=28%><B>Generic file name</B></TD>
<TD width=32%><B>Contents</B></TD>
<TD width=40%><B>Sample ASCII filter file</B></TD>
</TR>

<TR VALIGN="top">
<TD width=28%>VS_<I>XXX</I>.C</TD>
<TD width=32%>Code</TD>
<TD width=40%>VS_ASC.C</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>VSD_<I>XXX</I>.C</TD>
<TD width=32%>Data</TD>
<TD width=40%>VSD_ASC.C</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>VS_<I>XXX</I>.H</TD>
<TD width=32%>Type definitions</TD>
<TD width=40%>VS_ASC.H</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>VSP_<I>XXX</I>.H</TD>
<TD width=32%>Portability information</TD>
<TD width=40%>VSP_ASC.H</TD>
</TR>
</TABLE><BR>

<P></P>

<P>The portability information file makes porting of filters platforms easier. To allow file parsers to be used for content indexing, a set of include files is provided that will allow conditional compilations to yield executable DLLs for all of these needs from the same set of source files.</P>

<P>Your VSP_<I>XXX</I>.H file should look something like the following. (For further information, see the corresponding ASCII filter file.)</P>

<P>톂he structure type and name of the static data. </P>

<P></P>

<P>#define VwStreamStaticType  ???<BR>
#define VwStreamStaticName  ???<BR>
  </P>

<P>The parser must not change the contents of the structure, because it is shared among all instances of the parser.</P>

<P>톂he structure type and name of the dynamic data.</P>

<P></P>

<P>#define VwStreamDynamicType  ???<BR>
#define VwStreamDynamicName  ???<BR>
  </P>

<P><B>VwStreamDynamicName</B> is for consistency and has no real use, because all dynamic data is accessed through the pseudonym <B>Proc</B>. Each instance of the parser has a separate copy of dynamic data.</P>

<P>톂he structure type and name of the save data.</P>

<P></P>

<P>#define VwStreamSaveType  ???<BR>
#define VwStreamSaveName  ???<BR>
  </P>

<P><B>VwStreamSaveName</B> should reference an element in the <B>VwStreamDynamicType</B> structure. The data in this structure is saved after every call to <A HREF="1mwr7s8.htm"><B>VwStreamSectionFunc</B></A> and <A HREF="22gc0au.htm"><B>VwStreamReadFunc</B></A> and restored before every call to <B>VwStreamReadFunc</B>.</P>

<P>톂he structure type and name of the section data.</P>

<P></P>

<P>#define VwStreamSectionType  ???<BR>
#define VwStreamSectionName  ???<BR>
  </P>

<P>If neither of these is defined, the file parser is assumed to be <I>single section only</I>. <B>VwStreamSectionName</B> should reference an element in the <B>VwStreamDynamicType</B> structure. The data in this structure is saved after each call to <A HREF="1mwr7s8.htm"><B>VwStreamSectionFunc</B></A> and is guaranteed to contain the current section's data on entry to <A HREF="22gc0au.htm"><B>VwStreamReadFunc</B></A>.</P>

<P>This example shows the relationship of the various save areas to the dynamic data structure.</P>

<P></P>

<P>typedef struct {<BR>
 ...<BR>
} VwStreamSaveType;<BR>
typedef struct {<BR>
 ...<BR>
} VwStreamSectionType;<BR>
typedef struct {<BR>
 ...<BR>
    VwStreamSectionType VwStreamSectionName; // multisection only <BR>
    VwStreamSaveType VwStreamSaveName;<BR>
} VwStreamDynamicType;<BR>
  </P>

<P>톂he stream identifier name and count.</P>

<P></P>

<P>#define VwStreamIdName   ???<BR>
#define VwStreamIdCount   ???<BR>
  </P>

<P><B>VwStreamIdName</B> is the name of the FILTER_DESC array in VSD_<I>XXX</I>.C, and <B>VwStreamIdCount</B> is the number of elements in this array. Like the static data, this data should never be changed by a parser.</P>

<P>톂he name of the include file. All the structure types used by the parser should be defined in this file.</P>

<P></P>

<P>#define VwInclude              "vs_xxx.h"<BR>
#define VwStreamUserSaveType   ???<BR>
#define VwStreamGenSeekName    ???<BR>
#define VwStreamOpenFunc        xxx_stream_open<BR>
#define VwStreamSeekFunc        xxx_stream_seek<BR>
#define VwStreamTellFunc        xxx_stream_tell<BR>
#define VwStreamReadFunc        xxx_stream_read<BR>
#define VwStreamReadRecordFunc  xxx_stream_readrecord<BR>
#define VwStreamSectionFunc     xxx_stream_section<BR>
#define VwStreamCloseFunc       xxx_stream_close<BR>
#define VwGetInfoFunc           xxx_getinfo<BR>
#define VwGetRtnsFunc           xxx_getrtns<BR>
#define VwGetDataFunc           xxx_getdata<BR>
#define VwSetDataFunc           xxx_setdata<BR>
#define VwAllocProcFunc         xxx_alloc_proc<BR>
#define VwFreeProcFunc          xxx_free_proc<BR>
#define VwLocalUpFunc           xxx_local_up<BR>
#define VwLocalDownFunc         xxx_local_down<BR>
#define VwGetSectionDataFunc    xxx_getsectiondata<BR>
#define VwSetSectionDataFunc    xxx_setsectiondata<BR>
  </P>

<P>톂he top of the VS_<I>XXX</I>.C file should look like this.</P>

<P></P>

<P>#include "VSP_XXX.H"<BR>
#include "VSCTOP.H"<BR>
#include "VS_XXX.PRO"<BR>
  </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
