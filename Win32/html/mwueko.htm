<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>TextOut</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="mwueko"></A><B>TextOut  <A HREF="i1wgh6.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="4jd_z5i.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1xkvu5n.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>TextOut</B> function writes a character string at the specified location, using the currently selected font. </P>

<P><B>BOOL TextOut(</B></P>

<TABLE cols=2 width=402>

<TR VALIGN="top">
<TD width=40%><B>HDC</B> <I>hdc</I><B>,</B></TD>
<TD width=60%>// handle of device context </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    int</B> <I>nXStart</I><B>,</B></TD>
<TD width=60%>// x-coordinate of starting position  </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    int</B> <I>nYStart</I><B>,</B></TD>
<TD width=60%>// y-coordinate of starting position  </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    LPCTSTR</B> <I>lpString</I><B>,</B></TD>
<TD width=60%>// address of string </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    int</B> <I>cbString</I> </TD>
<TD width=60%>// number of characters in string </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>   );</B></TD>
<TD width=60%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hdc</I></P>

<P>Identifies the device context. </P>

<P><I>nXStart</I></P>

<P>Specifies the logical x-coordinate of the reference point that Windows uses to align the string. </P>

<P><I>nYStart</I></P>

<P>Specifies the logical y-coordinate of the reference point that Windows uses to align the string. </P>

<P><I>lpString</I></P>

<P>Points to the string to be drawn. The string does not need to be zero-terminated, since <I>cbString</I> specifies the length of the string. </P>

<P><I>cbString</I></P>

<P>Specifies the number of characters in the string. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The interpretation of the reference point depends on the current text-alignment mode. An application can retrieve this mode by calling the <A HREF="m5vhb5.htm"><B>GetTextAlign</B></A> function; an application can alter this mode by calling the <A HREF="237ozu5.htm"><B>SetTextAlign</B></A> function. </P>

<P>By default, the current position is not used or updated by this function. However, an application can call the <B>SetTextAlign</B> function with the <I>fMode</I> parameter set to TA_UPDATECP to permit Windows to use and update the current position each time the application calls <B>TextOut</B> for a specified device context. When this flag is set, Windows ignores the <I>nXStart</I> and <I>nYStart</I> parameters on subsequent <B>TextOut</B> calls. </P>

<P>When the <B>TextOut</B> function is placed inside a path bracket, the system generates a path for the TrueType text that includes each character plus its character box. The region generated is the character box minus the text, rather than the text itself. You can obtain the region enclosed by the outline of the TrueType text by setting the background mode to transparent before placing the <B>TextOut</B> function in the path bracket. Following is sample code that demonstrates this procedure.</P>

<P>// Obtain the window's client rectangle  </P>

<P>GetClientRect(hwnd, &amp;r); </P>

<P></P>

<P>// THE FIX: by setting the background mode </P>

<P>// to transparent, the region is the text itself </P>

<P>// SetBkMode(hdc, TRANSPARENT); </P>

<P></P>

<P>// Bracket begin a path </P>

<P>BeginPath(hdc); </P>

<P></P>

<P>// Send some text out into the world </P>

<P>TextOut(hdc, r.left, r.top, "Defenestration can be hazardous", 4); </P>

<P></P>

<P>// Bracket end a path </P>

<P>EndPath(hdc); </P>

<P></P>

<P>// Derive a region from that path </P>

<P>SelectClipPath(hdc, RGN_AND); </P>

<P></P>

<P>// This generates the same result as SelectClipPath() </P>

<P>// SelectClipRgn(hdc, PathToRegion(hdc)); </P>

<P></P>

<P>// Fill the region with grayness </P>

<P>FillRect(hdc, &amp;r, GetStockObject(GRAY_BRUSH)); </P>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="m5vhb5.htm"><B>GetTextAlign</B></A>, <A HREF="237ozu5.htm"><B>SetTextAlign</B></A>, <A HREF="2mcwnzm.htm"><B>TabbedTextOut</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
