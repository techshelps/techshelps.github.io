<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Deriving Session Keys</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="a7nf2a"></A><B>Deriving Session Keys</B></P>

<P>Applications derive session keys from hash values by using the <A HREF="ioh0._.htm"><B>CryptDeriveKey</B></A> function. The underlying mechanism is very simple. The first few bytes of the hash value (however many are required) are used as the session key material. If the CRYPT_CREATE_SALT flag is specified, then the next few bytes are used as the salt value. The remaining bytes of the hash value are not used.</P>

<P>For example, if you have an SHA hash value (160 bits) and want to create a 40-bit session key (with 88 bits of salt) from it, the first five bytes would be used as the session key material and the next 11 bytes would be used as the salt. The last 4 bytes would be unused.</P>

<P>Note that hash values and session keys are considered here to be blocks of data, not large integers. Byte ordering (big endian vs. little endian) is thus not relevant.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
