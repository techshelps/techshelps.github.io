<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CascadeWindows [Now Supported on Windows NT]</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="d_vwrr"></A><B>CascadeWindows  <A HREF="132agj2.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1p1lg2i.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="3fix.ad.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>[Now Supported on Windows NT]</P>

<P>The <B>CascadeWindows</B> function cascades the specified windows or the child windows of the specified parent window.</P>

<P><B>WORD WINAPI CascadeWindows(</B></P>

<TABLE cols=2 width=438>

<TR VALIGN="top">
<TD width=47%><B>HWND </B><I>hwndParent</I><B>,</B></TD>
<TD width=53%>// handle to parent window</TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>    UINT </B><I>wHow</I><B>,</B></TD>
<TD width=53%>// types of windows not to arrange</TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>    CONST RECT *</B><I>lpRect</I><B>,</B></TD>
<TD width=53%>// rectangle to arrange windows in</TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>    UINT </B><I>cKids</I><B>,</B></TD>
<TD width=53%>// number of windows to arrange</TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>    const HWND FAR *</B><I>lpKids</I></TD>
<TD width=53%>// array of window handles</TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>   );</B></TD>
<TD width=53%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hwndParent</I></P>

<P>Identifies the parent window. If this parameter is NULL, the desktop window is assumed.</P>

<P><I>wHow</I></P>

<P>Specifies a cascade flag. The only flag currently available, MDITILE_SKIPDISABLED, prevents disabled MDI child windows from being cascaded. </P>

<P><I>lpRect</I></P>

<P>Pointer to a <A HREF="fk9bc.htm"><B>SMALL_RECT</B></A> structure that specifies the rectangular area, in screen coordinates, within which the windows are arranged. This parameter can be NULL, in which case the client area of the parent window is used.</P>

<P><I>cKids</I></P>

<P>Specifies the number of elements in the array specified by the <I>lpKids</I> parameter. This parameter is ignored if <I>lpKids</I> is NULL.</P>

<P><I>lpKids</I></P>

<P>Pointer to an array of window handles identifying the windows to arrange. If this parameter is NULL, the child windows of the specified parent window (or of the desktop window) are arranged.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the number of windows arranged.</P>

<P>If the function fails, the return value is zero.</P>

<P><B>See Also</B></P>

<P><A HREF="fk9bc.htm"><B>SMALL_RECT</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
