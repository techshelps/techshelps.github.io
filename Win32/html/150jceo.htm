<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MessageBoxIndirect [Now Supported on Windows NT]</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="150jceo"></A><B>MessageBoxIndirect  <A HREF="net0w3.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="ceyqch.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="2bdvrcn.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>[Now Supported on Windows NT]</P>

<P>The <B>MessageBoxIndirect</B> function creates, displays, and operates a message box. The message box contains application-defined message text and title, any icon, and any combination of predefined push buttons.</P>

<P><B>int MessageBoxIndirect(</B></P>

<TABLE cols=2 width=621>

<TR VALIGN="top">
<TD width=46%><B>LPMSGBOXPARAMS </B><I>lpMsgBoxParams</I></TD>
<TD width=54%>// address of structure for message box parameters</TD>
</TR>

<TR VALIGN="top">
<TD width=46%><B>   );</B></TD>
<TD width=54%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpMsgBoxParams</I></P>

<P>Pointer to a <A HREF="ew4k7q.htm"><B>MSGBOXPARAMS</B></A> structure that contains information used to display the message box. </P>

<P></P>

<P><B>Return Values</B></P>

<P>The return value is zero if there is not enough memory to create the message box.</P>

<P>If the function succeeds, the return value is one of the following menu-item values returned by the dialog box: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=20%><B>Value</B></TD>
<TD width=80%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=20%>IDABORT</TD>
<TD width=80%>Abort button was selected.</TD>
</TR>

<TR VALIGN="top">
<TD width=20%>IDCANCEL</TD>
<TD width=80%>Cancel button was selected.</TD>
</TR>

<TR VALIGN="top">
<TD width=20%>IDIGNORE</TD>
<TD width=80%>Ignore button was selected.</TD>
</TR>

<TR VALIGN="top">
<TD width=20%>IDNO</TD>
<TD width=80%>No button was selected.</TD>
</TR>

<TR VALIGN="top">
<TD width=20%>IDOK</TD>
<TD width=80%>OK button was selected.</TD>
</TR>

<TR VALIGN="top">
<TD width=20%>IDRETRY</TD>
<TD width=80%>Retry button was selected.</TD>
</TR>

<TR VALIGN="top">
<TD width=20%>IDYES</TD>
<TD width=80%>Yes button was selected.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>If a message box has a Cancel button, the function returns the IDCANCEL value if either the ESC key is pressed or the Cancel button is selected. If the message box has no Cancel button, pressing ESC has no effect. </P>

<P><B>Remarks</B></P>

<P>When you use a system-modal message box to indicate that the system is low on memory, the strings pointed to by the <B>lpszText</B> and <B>lpszCaption</B> members of the <A HREF="ew4k7q.htm"><B>MSGBOXPARAMS</B></A> structure should not be taken from a resource file, because an attempt to load the resource may fail. </P>

<P>When an application calls <B>MessageBoxIndirect</B> and specifies the MB_ICONHAND and MB_SYSTEMMODAL flags for the <B>dwStyle</B> member of the <B>MSGBOXPARAMS</B> structure, Windows displays the resulting message box regardless of available memory. When these flags are specified, Windows limits the length of the message box text to three lines. Windows does <I>not</I> automatically break the lines to fit in the message box, however, so the message string must contain carriage returns to break the lines at the appropriate places. </P>

<P>If you create a message box while a dialog box is present, use the handle of the dialog box as the <I>hWnd</I> parameter. The <I>hWnd</I> parameter should not identify a child window, such as a control in a dialog box. </P>

<P><B>Windows 95: </B>The system can support a maximum of 16,364 window handles.</P>

<P><B>See Also</B></P>

<P><A HREF="1fw7bh.htm"><B>MessageBox</B></A>, <A HREF="21v9hay.htm"><B>MessageBoxEx</B></A>, <A HREF="ew4k7q.htm"><B>MSGBOXPARAMS</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
