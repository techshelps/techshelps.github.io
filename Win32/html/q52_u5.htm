<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Composition String</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="q52_u5"></A><B>Composition String</B></P>

<P>The composition string is the current text in the composition window. This is the text that the IME converts to final characters. Each composition string consists of one or more <I>clauses</I>, where a clause is the smallest combination of characters that the IME can convert to a final character. You can get and set the composition string and get and set the composition string by using the <A HREF="65q3ci.htm"><B>ImmGetCompositionString</B></A> and <A HREF="97p6ps.htm"><B>ImmSetCompositionString</B></A> functions.</P>

<P>As the user enters text in the composition window, the IME tracks the status of the composition string. This status includes attribute information, clause information, typing information, and cursor position. You can retrieve the composition status by using the <B>ImmGetCompositionString</B> function. </P>

<P>In the <I>attribute information</I> array, all characters of one clause must have the same attribute. The <I>attribute information</I> is an array of 8-bit values that specifies the status of characters in the composition string. There is one value for each byte in the string, including one byte each for the lead and second bytes of any double-byte characters in the string. For each value in the array, bits 0 through 3 can be one combination of these values:</P>

<TABLE cols=3>

<TR VALIGN="top">
<TD colspan=3 width=100%>ATTR_INPUT</TD>
<TD colspan=20 width=1798119239%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=76%>Character being entered by the user. It is yet to be converted by the IME.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=100%>ATTR_INPUT_ERROR</TD>
<TD colspan=20 width=1798119239%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=76%>Character is the error character and cannot be converted by the IME.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=100%>ATTR_TARGET_CONVERTED</TD>
<TD colspan=20 width=1798119239%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=76%>Character converted by the IME. The user has selected this character and the IME has converted it.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=100%>ATTR_CONVERTED</TD>
<TD colspan=20 width=1798119239%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=76%>A converted character. The IME has already converted this character.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=100%>ATTR_TARGET_NOTCONVERTED</TD>
<TD colspan=20 width=1798119239%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=76%>Character being converted. The user has selected this character but the IME has not yet converted it. </TD>
</TR>
</TABLE><BR>

<P></P>

<P>All other values are reserved. In Japanese, any unconverted character having the ATTR_INPUT attribute is a Hiragana, Katakana, or alphanumeric character. In Korean, this character is a Hangeul character that is not converted by IME yet. In Traditional and Simplified Chinese, each IME may limit its character in some range.</P>

<P>You can retrieve the composition status by using the <B>ImmGetCompositionString</B> function.</P>

<P>The <I>clause information</I> is an array of 32-bit values that specify the positions of the clauses in the composition string. There is one value for each clause and a final value that specifies the length of the full string. Each value in the array specifies the offset, in bytes, from the beginning of the string to the clause. The first value is always 0 because the first clause always starts at the beginning of the string. For example, if a string has two clauses, the clause information has three values: the first value is 0, the second value is the offset of the second clause, and the third value is the length of the string.</P>

<P>The <I>typing information</I> a null-terminated character string representing the characters entered at the keyboard. </P>

<P>The <I>cursor position</I> is a value indicating the position of the cursor relative to the characters in the composition string. The value is the offset, in bytes, from the beginning of the string. If this value is 0, the cursor is immediately before the first character in the string. If the value is equal to the length of the string, the cursor is immediately after the last character. If -1, the cursor is not present.</P>

<P>You can set the composition string or elements of the composition status by using the <A HREF="97p6ps.htm"><B>ImmSetCompositionString</B></A> function. To ensure that the composition window updates it appearance based on these changes, the function allows for generating a notification message to be sent to the window. Applications that set a combination of composition status elements typically set the <I>fNotify</I> parameter to FALSE for all but the last call to this function so that only one notification message is generated for the composition window. </P>

</BODY>
</HTML>
