<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Creating a Child Window</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="28d98kp"></A><B>Creating a Child Window</B></P>

<P>To create an MDI child window, an application can either call the <A HREF="us3xck.htm"><B>CreateMDIWindow</B></A> function or send an <A HREF="3nknnz.htm">WM_MDICREATE</A> message to the MDI client window. (The application can use the <A HREF="rpk.pc.htm"><B>CreateWindowEx</B></A> function with the WS_EX_MDICHILD style to create MDI child windows.) A single-threaded MDI application can use either method to create a child window. A thread in a multithreaded MDI application must use the <B>CreateMDIWindow</B> or <B>CreateWindowEx</B> function to create a child window in a different thread. </P>

<P>The <I>lParam</I> parameter of a WM_MDICREATE message is a far pointer to an <A HREF="1p4jxe2.htm"><B>MDICREATESTRUCT</B></A> structure. The structure includes four dimension members: <B>x</B> and <B>y</B>, which indicate the horizontal and vertical positions of the window, and <B>cx</B> and <B>cy</B>, which indicate the horizontal and vertical extents of the window. Any of these members may be assigned explicitly by the application, or they may be set to CW_USEDEFAULT, in which case Windows selects a position, size, or both, according to a cascading algorithm. In any case, all four members must be initialized. Multipad uses CW_USEDEFAULT for all dimensions. </P>

<P>The last member of the <B>MDICREATESTRUCT</B> structure is the <B>style</B> member, which may contain style bits for the window. To create an MDI child window that can have any combination of window styles, specify the MDIS_ALLCHILDSTYLES window style. When this style is not specified, an MDI child window has the WS_MINIMIZE, WS_MAXIMIZE, WS_HSCROLL, and WS_VSCROLL styles as default settings. </P>

<P>Multipad creates its MDI child windows by using its locally defined AddFile function (located in the source file MPFILE.C). The AddFile function sets the title of the child window by assigning the <B>szTitle</B> member of the window's <B>MDICREATESTRUCT</B> structure to either the name of the file being edited or to "Untitled." The <B>szClass</B> member is set to the name of the MDI child window class registered in Multipad's InitializeApplication function. The <B>hOwner</B> member is set to the application's instance handle. </P>

<P>The following example shows the AddFile function in Multipad.</P>

<P>HWND APIENTRY AddFile(pName)  </P>

<P>CHAR * pName; </P>

<P>{ </P>

<P>HWND hwnd; </P>

<P>CHAR sz[160]; </P>

<P>MDICREATESTRUCT mcs; </P>

<P></P>

<P>if (!pName) { </P>

<P></P>

<P>// If the pName parameter is NULL, load the "Untitled" </P>

<P>// string from the STRINGTABLE resource and set the szTitle </P>

<P>// member of MDICREATESTRUCT. </P>

<P></P>

<P>LoadString(hInst, IDS_UNTITLED, sz, sizeof(sz)); </P>

<P>mcs.szTitle = (LPCTSTR) sz; </P>

<P>} </P>

<P>else </P>

<P></P>

<P>// Title the window with the full path and filename, </P>

<P>// obtained by calling the OpenFile function with the </P>

<P>// OF_PARSE flag, which is called before AddFile(). </P>

<P></P>

<P>mcs.szTitle = of.szPathName; </P>

<P></P>

<P>mcs.szClass = szChild; </P>

<P>mcs.hOwner  = hInst; </P>

<P></P>

<P>// Use the default size for the child window. </P>

<P></P>

<P>mcs.x = mcs.cx = CW_USEDEFAULT; </P>

<P>mcs.y = mcs.cy = CW_USEDEFAULT; </P>

<P></P>

<P>// Give the child window the default style. The styleDefault </P>

<P>// variable is defined in MULTIPAD.C. </P>

<P></P>

<P>mcs.style = styleDefault; </P>

<P></P>

<P>// Tell the MDI client window to create the child window. </P>

<P></P>

<P>hwnd = (HWND) SendMessage (hwndMDIClient, WM_MDICREATE, 0, </P>

<P>(LONG) (LPMDICREATESTRUCT) &amp;mcs); </P>

<P></P>

<P>// If the file is found, read its contents into the child </P>

<P>// window's client area. </P>

<P></P>

<P>if (pName) { </P>

<P>if (!LoadFile(hwnd, pName)) { </P>

<P></P>

<P>// Cannot load the file; close the window. </P>

<P></P>

<P>SendMessage(hwndMDIClient, WM_MDIDESTROY, </P>

<P>(DWORD) hwnd, 0L); </P>

<P>} </P>

<P>} </P>

<P>return hwnd; </P>

<P>} </P>

<P></P>

<P>The pointer passed in the <I>lParam</I> parameter of the <A HREF="3nknnz.htm">WM_MDICREATE</A> message is passed to the <A HREF="we1r5q.htm"><B>CreateWindow</B></A> function and appears as the first member in the <A HREF="19uxhwn.htm"><B>CREATESTRUCT</B></A> structure, passed in the <A HREF="2re1yt3.htm">WM_CREATE</A> message. In Multipad, the child window initializes itself during WM_CREATE message processing by initializing document variables in its extra data and by creating the edit control's child window. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
