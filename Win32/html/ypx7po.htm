<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Using the Drag-Drop Feature</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="ypx7po"></A><B>Using the Drag-Drop Feature</B></P>

<P>When an application implements the <I>drag-drop</I> feature, a user can select one or more files in File Manager, drag them to an open application, and drop them there. The application in which the files were dropped receives a message it can use to retrieve the filenames and the coordinates of the point at which the files were dropped. </P>

<P>An application that can accept dropped files from File Manager calls the <A HREF="1.k_6gf.htm"><B>DragAcceptFiles</B></A> function for one or more of its windows. When the user releases the mouse button to drop a file or files in the window specified in the call to <B>DragAcceptFiles</B>, File Manager sends the application a <A HREF="ohacpy.htm">WM_DROPFILES</A> message. (File Manager does not send the WM_DROPFILES message to an application unless the application calls <B>DragAcceptFiles</B>.) WM_DROPFILES contains a handle of a structure the application can query to retrieve the name of the dropped file and the coordinates of the cursor when the file was dropped. The application can use the <A HREF="12_fnd1.htm"><B>DragQueryFile</B></A> function to retrieve a count of the files that were dropped and their names. The <A HREF="16oo3wl.htm"><B>DragQueryPoint</B></A> function returns the window coordinates of the cursor when the user released the mouse button. </P>

<P>To free the memory allocated by the system for the WM_DROPFILES message, an application calls the <A HREF="12fzp5p.htm"><B>DragFinish</B></A> function when it is finished. </P>

<P>For example, an application can call the <B>DragAcceptFiles</B> function when it starts and call a drag-drop function when it receives a WM_DROPFILES message, as shown in the following example. </P>

<P>case WM_CREATE:  </P>

<P>DragAcceptFiles(hwnd, TRUE);  </P>

<P>break; </P>

<P></P>

<P>case WM_DROPFILES: </P>

<P>DragFunc(hwnd, wParam); /* application-defined function */ </P>

<P>break; </P>

<P></P>

<P>case WM_DESTROY: </P>

<P>DragAcceptFiles(hwnd, FALSE); </P>

<P>break; </P>

<P></P>

<P>The following example uses the <A HREF="16oo3wl.htm"><B>DragQueryPoint</B></A> function to determine where to begin to write text. The first call to the <A HREF="12_fnd1.htm"><B>DragQueryFile</B></A> function determines the number of dropped files. The loop writes the name of each file, beginning at the point returned by <B>DragQueryPoint</B>. </P>

<P>POINT pt;  </P>

<P>WORD cFiles, a;  </P>

<P>char lpszFile[80]; </P>

<P></P>

<P>DragQueryPoint((HANDLE) wParam, &amp;pt); </P>

<P></P>

<P>cFiles = DragQueryFile((HANDLE) wParam, 0xFFFF, (LPSTR) NULL, 0); </P>

<P>for(a = 0; a &lt; cFiles; pt.y += 20, a++) { </P>

<P>DragQueryFile((HANDLE) wParam, a, lpszFile, sizeof(lpszFile)); </P>

<P>TextOut(hdc, pt.x, pt.y, lpszFile, lstrlen(lpszFile)); </P>

<P>} </P>

<P></P>

<P>DragFinish((HANDLE) wParam); </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
