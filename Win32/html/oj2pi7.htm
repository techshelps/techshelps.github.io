<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Processing Character Messages</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="oj2pi7"></A><B>Processing Character Messages</B></P>

<P>A window procedure receives a character message when the <A HREF="fhwolf.htm"><B>TranslateMessage</B></A> function translates a virtual-key code corresponding to a character key. The character messages are <A HREF="4gep_o2.htm">WM_CHAR</A>, <A HREF="1ning4y.htm">WM_DEADCHAR</A>, <A HREF="1cbflsp.htm">WM_SYSCHAR</A>, and <A HREF="1.qa4vl.htm">WM_SYSDEADCHAR</A>. A typical window procedure ignores all character messages except WM_CHAR. The <B>TranslateMessage</B> function generates a WM_CHAR message when the user presses any of the following keys. </P>

<P>·Any character key</P>

<P>·BACKSPACE</P>

<P>·ENTER (carriage return)</P>

<P>·ESC</P>

<P>·SHIFT+ENTER (linefeed)</P>

<P>·TAB</P>

<P></P>

<P>When a window procedure receives the <A HREF="4gep_o2.htm">WM_CHAR</A> message, it should examine the character code that accompanies the message to determine how to process the character. The character code is in the message's <I>wParam</I> parameter. </P>

<P>The following example shows the window procedure framework that a typical application uses to receive and process character messages. </P>

<P>case WM_CHAR:  </P>

<P>switch (wParam) { </P>

<P>case 0x08: </P>

<P>. </P>

<P>. /* Process a backspace. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case 0x0A: </P>

<P>. </P>

<P>. /* Process a linefeed. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case 0x1B: </P>

<P>. </P>

<P>. /* Process an escape. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case 0x09: </P>

<P>. </P>

<P>. /* Process a tab. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case 0x0D: </P>

<P>. </P>

<P>. /* Process a carriage return. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>default: </P>

<P>. </P>

<P>. /* Process displayable characters. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
