<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>SetTextJustification</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="afvv2k"></A><B>SetTextJustification  <A HREF="_cdw_z.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="4jd_z5i.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1xkvu5n.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SetTextJustification</B> function specifies the amount of space Windows should add to the break characters in a string of text. The space is added when an application calls the <A HREF="mwueko.htm"><B>TextOut</B></A> or <A HREF="9dxaad.htm"><B>ExtTextOut</B></A> functions. </P>

<P><B>BOOL SetTextJustification(</B></P>

<TABLE cols=2 width=434>

<TR VALIGN="top">
<TD width=34%><B>HDC</B> <I>hdc</I><B>,</B></TD>
<TD width=66%>// handle of device context </TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    int</B> <I>nBreakExtra</I><B>,</B></TD>
<TD width=66%>// length of extra space, in logical units </TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    int</B> <I>nBreakCount</I> </TD>
<TD width=66%>// count of space characters in line of text  </TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>   );</B></TD>
<TD width=66%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hdc</I></P>

<P>Identifies the device context. </P>

<P><I>nBreakExtra</I></P>

<P>Specifies the total extra space, in logical units, to be added to the line of text. If the current mapping mode is not MM_TEXT, the value identified by the <I>nBreakExtra</I> parameter is transformed and rounded to the nearest pixel. </P>

<P><I>nBreakCount</I></P>

<P>Specifies the number of break characters in the line. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The break character is usually the space character (ASCII 32), but it may be defined by a font as some other character. The <A HREF="zd2pdo.htm"><B>GetTextMetrics</B></A> function can be used to retrieve a font's break character. </P>

<P>The <B>TextOut</B> function distributes the specified extra space evenly among the break characters in the line. </P>

<P>The <A HREF="101r0q.htm"><B>GetTextExtentPoint32</B></A> function is always used with the <B>SetTextJustification</B> function. The <B>GetTextExtentPoint32</B> function computes the width of a given line before justification. This width must be known before an appropriate <I>nBreakExtra</I> value can be computed. </P>

<P><B>SetTextJustification</B> can be used to justify a line that contains multiple strings in different fonts. In this case, each string must be justified separately. </P>

<P>Because rounding errors can occur during justification, Windows keeps a running error term that defines the current error value. When justifying a line that contains multiple runs, <B>GetTextExtentPoint</B> automatically uses this error term when it computes the extent of the next run, allowing <B>TextOut</B> to blend the error into the new run. After each line has been justified, this error term must be cleared to prevent it from being incorporated into the next line. The term can be cleared by calling <B>SetTextJustification</B> with <I>nBreakExtra</I> set to zero. </P>

<P><B>See Also</B></P>

<P><A HREF="9dxaad.htm"><B>ExtTextOut</B></A>, <A HREF="101r0q.htm"><B>GetTextExtentPoint32</B></A>, <A HREF="zd2pdo.htm"><B>GetTextMetrics</B></A>, <A HREF="mwueko.htm"><B>TextOut</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
