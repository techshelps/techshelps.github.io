<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetBoundsRect</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="dkpvpw"></A><B>GetBoundsRect  <A HREF="115pxdc.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1mptrl8.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="el1da3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetBoundsRect</B> function obtains the current accumulated bounding rectangle for a specified device context. </P>

<P>Windows maintains an accumulated bounding rectangle for each application. An application can retrieve and set this rectangle. </P>

<P><B>UINT GetBoundsRect(</B></P>

<TABLE cols=2 width=511>

<TR VALIGN="top">
<TD width=34%><B>HDC</B> <I>hdc</I><B>,</B></TD>
<TD width=66%>// handle to device context of interest</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    LPRECT</B> <I>lprcBounds</I><B>,</B></TD>
<TD width=66%>// points to structure to receive bounding rectangle  </TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    UINT</B> <I>flags</I> </TD>
<TD width=66%>// specifies function options</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>   );</B></TD>
<TD width=66%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hdc</I></P>

<P>Identifies the device context whose bounding rectangle the function will return. </P>

<P><I>lprcBounds</I></P>

<P>Points to the <A HREF="ezena2.htm"><B>RECT</B></A> structure that will receive the current bounding rectangle. The application's rectangle is returned in logical coordinates, and the Windows rectangle is returned in screen coordinates. </P>

<P><I>flags</I></P>

<P>Specifies aspects of how the <B>GetBoundsRect</B> function will operate on a given call. This parameter can be the following value: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=25%><B>Value</B></TD>
<TD width=75%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%>DCB_RESET</TD>
<TD width=75%>Clears the bounding rectangle after returning it. If this flag is not set, the bounding rectangle will not be cleared.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>The return value specifies the state of the accumulated bounding rectangle; it can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=24%><B>Value</B></TD>
<TD width=76%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>0</TD>
<TD width=76%>An error occurred. The given device context handle is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>DCB_DISABLE</TD>
<TD width=76%>Boundary accumulation is off.</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>DCB_ENABLE</TD>
<TD width=76%>Boundary accumulation is on.</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>DCB_RESET</TD>
<TD width=76%>The bounding rectangle is empty.</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>DCB_SET</TD>
<TD width=76%>The bounding rectangle is not empty.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Remarks</B></P>

<P>The DCB_SET value is a combination of the bit values DCB_ACCUMULATE and DCB_RESET. Applications that check the DCB_RESET bit to determine whether the bounding rectangle is empty must also check the DCB_ACCUMULATE bit. The bounding rectangle is empty only if the DCB_RESET bit is 1 and the DCB_ACCUMULATE bit is 0. </P>

<P><B>See Also</B></P>

<P><A HREF="2q6e0h..htm"><B>SetBoundsRect</B></A> </P>

</BODY>
</HTML>
