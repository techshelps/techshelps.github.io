<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Creating a Cursor</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="e73vsq"></A><B>Creating a Cursor</B></P>

<P>The following example creates two cursor handles: one for the standard hourglass cursor and one for a custom cursor included as a resource in the application's resource-definition file. </P>

<P>HINSTANCE hinst;            // handle of current instance  </P>

<P>HCURSOR hCurs1, hCurs2;     // cursor handles </P>

<P></P>

<P>// Create a standard hourglass cursor. </P>

<P></P>

<P>hCurs1 = LoadCursor(NULL, IDC_WAIT); </P>

<P></P>

<P>// Create a custom cursor based on a resource. </P>

<P></P>

<P>hCurs2 = LoadCursor(hinst, MAKEINTRESOURCE(240)); </P>

<P></P>

<P>You should implement custom cursors as resources. Rather than create the cursors at run time, use the <A HREF="14g7vvz.htm"><B>LoadCursor</B></A>, <A HREF="1ykc0ru.htm"><B>LoadCursorFromFile</B></A>, or <A HREF="11o6jxc.htm"><B>LoadImage</B></A> function to avoid device dependence, to simplify localization, and to enable applications to share cursor designs. </P>

<P>The following example uses the <A HREF="cq665l.htm"><B>CreateCursor</B></A> function to create a custom cursor at run time. The example is included here to illustrate how the system interprets cursor bitmasks. </P>

<P>HINSTANCE hinst;            // handle of current instance   </P>

<P>HCURSOR hCurs1, hCurs2;     // cursor handles </P>

<P></P>

<P>HCURSOR hCurs3;             // cursor handle </P>

<P></P>

<P>// Yin cursor AND bitmask </P>

<P></P>

<P>BYTE ANDmaskCursor[] = </P>

<P>{ </P>

<P>0xFF, 0xFC, 0x3F, 0xFF,   // line 1 </P>

<P>0xFF, 0xC0, 0x1F, 0xFF,   // line 2 </P>

<P>0xFF, 0x00, 0x3F, 0xFF,   // line 3 </P>

<P>0xFE, 0x00, 0xFF, 0xFF,   // line 4 </P>

<P></P>

<P>0xF7, 0x01, 0xFF, 0xFF,   // line 5 </P>

<P>0xF0, 0x03, 0xFF, 0xFF,   // line 6 </P>

<P>0xF0, 0x03, 0xFF, 0xFF,   // line 7 </P>

<P>0xE0, 0x07, 0xFF, 0xFF,   // line 8 </P>

<P></P>

<P>0xC0, 0x07, 0xFF, 0xFF,   // line 9 </P>

<P>0xC0, 0x0F, 0xFF, 0xFF,   // line 10 </P>

<P>0x80, 0x0F, 0xFF, 0xFF,   // line 11 </P>

<P>0x80, 0x0F, 0xFF, 0xFF,   // line 12 </P>

<P></P>

<P>0x80, 0x07, 0xFF, 0xFF,   // line 13 </P>

<P>0x00, 0x07, 0xFF, 0xFF,   // line 14 </P>

<P>0x00, 0x03, 0xFF, 0xFF,   // line 15 </P>

<P>0x00, 0x00, 0xFF, 0xFF,   // line 16 </P>

<P></P>

<P>0x00, 0x00, 0x7F, 0xFF,   // line 17 </P>

<P>0x00, 0x00, 0x1F, 0xFF,   // line 18 </P>

<P>0x00, 0x00, 0x0F, 0xFF,   // line 19 </P>

<P>0x80, 0x00, 0x0F, 0xFF,   // line 20 </P>

<P></P>

<P>0x80, 0x00, 0x07, 0xFF,   // line 21 </P>

<P>0x80, 0x00, 0x07, 0xFF,   // line 22 </P>

<P>0xC0, 0x00, 0x07, 0xFF,   // line 23 </P>

<P>0xC0, 0x00, 0x0F, 0xFF,   // line 24 </P>

<P></P>

<P>0xE0, 0x00, 0x0F, 0xFF,   // line 25 </P>

<P>0xF0, 0x00, 0x1F, 0xFF,   // line 26 </P>

<P>0xF0, 0x00, 0x1F, 0xFF,   // line 27 </P>

<P>0xF8, 0x00, 0x3F, 0xFF,   // line 28 </P>

<P></P>

<P>0xFE, 0x00, 0x7F, 0xFF,   // line 29 </P>

<P>0xFF, 0x00, 0xFF, 0xFF,   // line 30 </P>

<P>0xFF, 0xC3, 0xFF, 0xFF,   // line 31 </P>

<P>0xFF, 0xFF, 0xFF, 0xFF    // line 32 </P>

<P>};</P>

<P></P>

<P>// Yin cursor XOR bitmask </P>

<P></P>

<P>BYTE XORmaskCursor[] = </P>

<P>{ </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 1 </P>

<P>0x00, 0x03, 0xC0, 0x00,   // line 2 </P>

<P>0x00, 0x3F, 0x00, 0x00,   // line 3 </P>

<P>0x00, 0xFE, 0x00, 0x00,   // line 4 </P>

<P></P>

<P>0x0E, 0xFC, 0x00, 0x00,   // line 5 </P>

<P>0x07, 0xF8, 0x00, 0x00,   // line 6 </P>

<P>0x07, 0xF8, 0x00, 0x00,   // line 7 </P>

<P>0x0F, 0xF0, 0x00, 0x00,   // line 8 </P>

<P></P>

<P>0x1F, 0xF0, 0x00, 0x00,   // line 9 </P>

<P>0x1F, 0xE0, 0x00, 0x00,   // line 10 </P>

<P>0x3F, 0xE0, 0x00, 0x00,   // line 11 </P>

<P>0x3F, 0xE0, 0x00, 0x00,   // line 12 </P>

<P></P>

<P>0x3F, 0xF0, 0x00, 0x00,   // line 13 </P>

<P>0x7F, 0xF0, 0x00, 0x00,   // line 14 </P>

<P>0x7F, 0xF8, 0x00, 0x00,   // line 15 </P>

<P>0x7F, 0xFC, 0x00, 0x00,   // line 16 </P>

<P></P>

<P>0x7F, 0xFF, 0x00, 0x00,   // line 17 </P>

<P>0x7F, 0xFF, 0x80, 0x00,   // line 18 </P>

<P>0x7F, 0xFF, 0xE0, 0x00,   // line 19 </P>

<P>0x3F, 0xFF, 0xE0, 0x00,   // line 20 </P>

<P></P>

<P>0x3F, 0xC7, 0xF0, 0x00,   // line 21 </P>

<P>0x3F, 0x83, 0xF0, 0x00,   // line 22 </P>

<P>0x1F, 0x83, 0xF0, 0x00,   // line 23 </P>

<P>0x1F, 0x83, 0xE0, 0x00,   // line 24 </P>

<P></P>

<P>0x0F, 0xC7, 0xE0, 0x00,   // line 25 </P>

<P>0x07, 0xFF, 0xC0, 0x00,   // line 26 </P>

<P>0x07, 0xFF, 0xC0, 0x00,   // line 27 </P>

<P>0x01, 0xFF, 0x80, 0x00,   // line 28 </P>

<P></P>

<P>0x00, 0xFF, 0x00, 0x00,   // line 29 </P>

<P>0x00, 0x3C, 0x00, 0x00,   // line 30 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 31 </P>

<P>0x00, 0x00, 0x00, 0x00    // line 32 </P>

<P>};</P>

<P></P>

<P>// Create a custom cursor at run time. </P>

<P></P>

<P>hCurs3 = CreateCursor( hinst,   // app instance </P>

<P>19,     // horizontal position of hot spot </P>

<P>2,      // vertical position of hot spot </P>

<P>32,     // cursor width </P>

<P>32,     // cursor height </P>

<P>ANDmaskCursor,     // AND bitmask </P>

<P>XORmaskCursor );   // XOR bitmask </P>

<P></P>

<P>To create the cursor, <A HREF="cq665l.htm"><B>CreateCursor</B></A> applies the following truth table to the AND and XOR bitmasks. </P>

<TABLE cols=3>

<TR VALIGN="top">
<TD width=18%><B>AND bitmask</B></TD>
<TD width=21%><B>XOR bitmask</B></TD>
<TD width=61%><B>Display</B></TD>
</TR>

<TR VALIGN="top">
<TD width=18%>0</TD>
<TD width=21%>0</TD>
<TD width=61%>Black </TD>
</TR>

<TR VALIGN="top">
<TD width=18%>0</TD>
<TD width=21%>1</TD>
<TD width=61%>White </TD>
</TR>

<TR VALIGN="top">
<TD width=18%>1</TD>
<TD width=21%>0</TD>
<TD width=61%>Screen </TD>
</TR>

<TR VALIGN="top">
<TD width=18%>1</TD>
<TD width=21%>1</TD>
<TD width=61%>Reverse screen </TD>
</TR>
</TABLE><BR>

<P></P>

<P>For more information, see <A HREF="15l9v8p.htm">Bitmaps</A>. </P>

<P>Before closing, you must use the <A HREF="1c3krch.htm"><B>DestroyCursor</B></A> function to destroy any cursors you created with <A HREF="cq665l.htm"><B>CreateCursor</B></A>. It is not necessary to destroy cursors created by other functions. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
