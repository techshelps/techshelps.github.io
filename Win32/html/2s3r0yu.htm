<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Load-Time Dynamic Linking</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2s3r0yu"></A><B>Load-Time Dynamic Linking</B></P>

<P>When the system starts a program that uses load-time dynamic linking, it uses the information in the file to locate the names of the required DLL(s). The system then searches for the DLLs in the following locations, in sequence: </P>

<P>1.The directory that contains the module for the current process. </P>

<P>2.The current directory. </P>

<P>3.The Windows system directory. The <A HREF="3oj42sv.htm"><B>GetSystemDirectory</B></A> function retrieves the path of this directory. </P>

<P>4.The Windows directory. The <A HREF="1b6tycn.htm"><B>GetWindowsDirectory</B></A> function retrieves the path of this directory. </P>

<P>5.The directories listed in the PATH environment variable. </P>

<P></P>

<P>If the system cannot locate a specified DLL, it terminates the process and displays a dialog box that reports the error. Otherwise, the system maps the DLL modules into the virtual address space of the process and increments the DLL reference count.</P>

<P>The operating system calls the entry-point function. The function receives a code indicating that the process is loading the DLL. If the entry-point function does not return TRUE, the system terminates the process and reports the error. For more information about the entry-point function, see <A HREF="dq9bkm.htm">Dynamic-Link Library Entry-Point Function</A>. </P>

<P>Finally, the system modifies the code of the process to provide starting addresses for the referenced DLL functions. </P>

<P>The DLL is mapped into the virtual address space of the process during its initialization and is loaded into physical memory only when needed. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
