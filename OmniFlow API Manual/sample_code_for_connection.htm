<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Sample Code For Connection</title>

<!--(Meta)==========================================================-->

<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=6322>
<meta name=layout-width content=499>
<meta name=date content="10 4, 2004 3:28:08 PM">
<meta name=x-ignored-words content="DMS;workitems;OmniDocs;WFSDataOutputStream;WFSDataInputStream;ImageWorks;workstep;faxing;WMFetchworkitem;worklist;login;WMGetWorkItem;G;L;Q;T;W;worksteps;Admin;C-;Login;JTS;MSSQL;PostGres;MSDE;FTS;MB;IP;DAT;Postgre;timeout;Expiry;Balancer;Workstep;d;Mdb;mdb;c;LHS;RTF;TXT;registered.Registering;WFS;Linux;Unix;BEA;WebLogic;WebSphere;iPlanet;NDS;XMLs;callalities;versioning;WfMC;EJB;Weblogic;JBOSS;WM_SUCCESS;WM_CONNECT_FAILED;WMConnect;WM_INVALID_PROCESS_;WM_INVALID_ACTIVITY_;WM_INVALID_WORKITEM;WM_INVALID_ATTRIBUTE;WM_ATTRIBUTE_;ASSIGNMENT_FAILED;WM_INVALID_STATE;WM_TRANSITION_NOT_;WM_INVALID_SESSION_HANDLE;WM_INVALID_QUERY_HANDLE;WM_INVALID_SOURCE_USER;WM_INVALID_TARGET_USER;WM_INVALID_FILTER;WM_LOCKED;WM_NOT_LOCKED;WM_NO_MORE_DATA;WM_INSUFFICIENT_BUFFER;WM_APPLICATION_BUSY;WM_INVALID_APPLICATION;WM_INVALID_WORK_ITEM;WM_APPLICATION_NOT;WF_PARSING_ERROR;WF_ELEMENT_MISSING;WF_INVALID_VERSION;WF_INVALID_RESPONSE_;REQUIRED_VALUE;WF_INVALID_KEY;WF_INVALID_OPERATION_;WF_INVALID_OPERATION;WF_INVALID_CONTEXT_DATA;WF_INVALID_RESULT_DATA;WF_NO_AUTHORIZATION;WF_OPERATION_FAILED;WF_NO_ACCESS_TO;WF_INVALID_PROCESS_;WF_INVALID_STATE_;WF_INVALID_OBSERVER_FOR;WF_INVALID_OBSERVER;FOR_RESOURCE;WF_OTHER;WFS_SQL;WFS_ILP;WFS_SYS;WFS_EXP;WFS_INV_USR;WFS_INV_PWD;WFS_INV_UTP;WFS_PRS_ALRDY_ST;WFS_NOQ;WFS_INV_PRM;WFS_QNM_ALR_EXST;WFS_WKM_N_RASN;WorkItem;WFS_WKM_CLSD;WFS_INTRO;QueueType;WFS_ALR_LNK;ProcessInstance;aleady;WFS_NO_LNK;WFS_NO_PAR;WFS_INV_QTYPE;WFS_NA_WI_LNK;WorkItems;delinked;Ids;WMFetchProcessDefinition;WMOpenProcessDefinitionsList;WMFetchProcessInstance;WMGetProcessInstance;WMCreateProcessInstance;WMStartProcess;WFM;WMTerminateProcessInstance;WMFetchProcessInstanceAttribute;WMAssignProcessInstanceAttribute;WMGetProcessList;WFSetProcessStatus;WFGetProcessProperty;WFGetProcessDefinition;WMAddQueue;WFDeleteQueue;WMGetQueueList;WFGetQueueProperty;WMChangeQueueProperty;WFSetPreferedQueueList;WFGetPreferredQueueList;WFGetProcessLog;WFGetUserPerformanceLog;WFGetProcessTurnAroundLog;WFGetActivityDelayLog;WFGetQueueLoadHistory;WFGetProcessLoadHistory;WFGetProcessDelayLog;WFGetWorkItemExceptionLog;WFGetWorkItemHistory;WFGetExpiredWorkItemLog;WFGetWorkAuditHistory;WFGetUserDiversionReport;WFGetTempQueueAssignmentReport;workItems;Xml;Version=;WMConnect_Input;EngineName;SessionId;WMConnect_Output;MainCode;SubErrorCode;TypeOfError;WMConnect_;java.io.BufferedReader;java.io.*;java.net.*;Particpant;ParticipantType;OmniFlow">


<!--(Links)=========================================================-->

<link rel=StyleSheet href=default.css>



</head>

<!--(Body)==========================================================-->


<body>
<SCRIPT LANGUAGE="JavaScript" TITLE="eHelp Special Effects" SRC="ehlpdhtm.js"></SCRIPT>


<h1><img src="Images/DMSUpdate/logo1.gif"
		x-maintain-ratio=TRUE
		style="border: none;
				float: none;
				width: 93px;
				height: 25px;"
		width=93
		height=25> Communicating with the Server</h1>

<p>After the successful installation of the OmniFlow Server and all the 
 pre-requisite steps, the user has to send the request to the server.</p>

<p>The request is send to the OmniFlow Server in XML format through a socket 
 connection to the OmniFlow Server Port.</p>

<h2>XML Format</h2>

<p>For communicating with the OmniFlow Server the following XML format 
 is used. This section explains all the mandatory tags which have to be 
 sent for each call. The tags can further increase as per the requirement.</p>

<h3>For example:</h3>

<h3>XML Input code standard tags:<a name=XMLInput></a></h3>

<p>&lt;? Xml Version=&quot;1.0&quot;? &gt;</p>

<p>&lt;WMConnect_Input&gt;</p>

<p>&lt;Option&gt;WMConnect&lt;/Option&gt;</p>

<p>&lt;EngineName&gt;&lt;/EngineName&gt;</p>

<p>&lt;SessionId&gt;&lt;/SessionId&gt;</p>

<p>&lt;/WMConnect_Input&gt;</p>

<p>&nbsp;</p>

<h3>Description of the XML Input Tags</h3>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="x-cell-content-align: top;
				width: 100%;
				border-spacing: 0;"
		cellspacing=0
		width=100%>
<col style="width: 50%;">
<col style="width: 50%;">

<tr valign=top>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-left-color: #000000;
			border-left-style: Solid;
			border-top-color: #000000;
			border-top-style: Solid;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-color: #000000;
			border-bottom-style: Solid;
			border-right-width: 1px;
			border-left-width: 1px;
			border-top-width: 1px;
			border-bottom-width: 1px;
			background-color: #c0c0c0;"
	bgcolor=#C0C0C0
	width=50%>
<p style="font-weight: bold;">Tag</p></td>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-top-color: #000000;
			border-top-style: Solid;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-color: #000000;
			border-bottom-style: Solid;
			border-top-width: 1px;
			border-bottom-width: 1px;
			border-right-width: 1px;
			background-color: #c0c0c0;"
	bgcolor=#C0C0C0
	width=50%>
<p style="font-weight: bold;">Description</p></td></tr>

<tr valign=top>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-left-width: 1px;
			border-left-color: #000000;
			border-left-style: Solid;
			border-right-width: 1px;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #000000;
			border-bottom-style: Solid;"
	width=50%>
<p>&lt;Option&gt;...&lt;/Option&gt;</p></td>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-right-width: 1px;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #000000;
			border-bottom-style: Solid;"
	width=50%>
<p>This tag includes the case sensitive call name.</p></td></tr>

<tr valign=top>
<td style="border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>&lt;EngineName&gt;&lt;/EngineName&gt;</p></td>
<td style="border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>It is the cabinet or database name on which the operations are made. 
 </p></td></tr>

<tr valign=top>
<td style="border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>&lt;SessionId&gt;&lt;/SessionId&gt;</p></td>
<td style="border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>It is the current session id of the logged in user.</p></td></tr>
</table>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h3>XML Output code standard tags:<a name=XMLOutpt></a></h3>

<p>&lt;?Xml Version=&quot;1.0&quot;?&gt;</p>

<p>&lt;WMConnect_Output&gt;</p>

<p>&lt;Option&gt;WMConnect&lt;/Option&gt;</p>

<p>&lt;Exception&gt;</p>

<p style="margin-left: 40px;">&lt;MainCode&gt;18&lt;/MainCode&gt;</p>

<p style="margin-left: 40px;">&lt;SubErrorCode&gt;0&lt;/SubErrorCode&gt;</p>

<p style="margin-left: 40px;">&lt;TypeOfError&gt;TEMPORARY&lt;/TypeOfError&gt;</p>

<p style="margin-left: 40px;">&lt;Subject&gt;No more records. &lt;/Subject&gt;</p>

<p style="margin-left: 40px;">&lt;Description&gt;null&lt;/Description&gt;</p>

<p>&lt;/Exception&gt;</p>

<p>&lt;/WMConnect_ Output &gt;</p>

<h3>Description of the XML Output Tags</h3>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="x-cell-content-align: top;
				width: 100%;
				border-spacing: 0;"
		cellspacing=0
		width=100%>
<col style="width: 50%;">
<col style="width: 50%;">

<tr valign=top>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-left-color: #000000;
			border-left-style: Solid;
			border-top-color: #000000;
			border-top-style: Solid;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-color: #000000;
			border-bottom-style: Solid;
			border-right-width: 1px;
			border-left-width: 1px;
			border-top-width: 1px;
			border-bottom-width: 1px;
			background-color: #c0c0c0;"
	bgcolor=#C0C0C0
	width=50%>
<p style="font-weight: bold;">Tag</p></td>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-top-color: #000000;
			border-top-style: Solid;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-color: #000000;
			border-bottom-style: Solid;
			border-top-width: 1px;
			border-bottom-width: 1px;
			border-right-width: 1px;
			background-color: #c0c0c0;"
	bgcolor=#C0C0C0
	width=50%>
<p style="font-weight: bold;">Description</p></td></tr>

<tr valign=top>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-left-width: 1px;
			border-left-color: #000000;
			border-left-style: Solid;
			border-right-width: 1px;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #000000;
			border-bottom-style: Solid;"
	width=50%>
<p>&lt;Option&gt;...&lt;/Option&gt;</p></td>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-right-width: 1px;
			border-right-color: #000000;
			border-right-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #000000;
			border-bottom-style: Solid;"
	width=50%>
<p>This tag includes the case sensitive call name.</p></td></tr>

<tr valign=top>
<td style="border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>&lt;MainCode&gt;...&lt;/MainCode&gt;</p></td>
<td style="border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>This tag includes the error code specified by WAPI.</p></td></tr>

<tr valign=top>
<td style="border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>SubErrorCode&gt;..&lt;/SubErrorCode&gt;</p></td>
<td style="border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>This tag includes the error code occurred during calling.</p></td></tr>

<tr valign=top>
<td colspan=1
	rowspan=1
	style="border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>&lt;TypeOfError&gt;...&lt;/TypeOfError&gt;</p></td>
<td colspan=1
	rowspan=1
	style="border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>This tag includes the type of errors. It can be Temporary or Permanent.</p></td></tr>

<tr valign=top>
<td colspan=1
	rowspan=1
	style="border-left-style: Solid;
			border-left-color: #000000;
			border-left-width: 1px;
			border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>&lt;Subject&gt;..&lt;/Subject&gt;</p></td>
<td colspan=1
	rowspan=1
	style="border-right-style: Solid;
			border-right-color: #000000;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-color: #000000;
			border-bottom-width: 1px;
			padding-right: 10px;
			padding-left: 10px;"
	width=50%>
<p>This tags includes the error description.</p></td></tr>
</table>

<p>&nbsp;</p>

<h2>Running the Sample Code:<a name="Sample Code"></a></h2>

<p>These are the following steps to run the sample code:</p>

<p>1. The following sample code is provided for the test driver to access 
 the exposed API calls. This code allows you to connect to the existing 
 OmniFlow Server and then disconnect from it.</p>

<p>&nbsp;</p>

<!--(Table)=========================================================-->
<!--begin!kadov{{--><div align=left><!--}}end!kadov-->
<table x-use-null-cells
		style="x-cell-content-align: top;
				width: 100%;
				border-spacing: 0;
				float: alignleft;"
		cellspacing=0
		width=100%>
<col style="width: 100%;">

<tr valign=top>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-left-style: None;
			border-top-style: None;
			border-bottom-style: None;
			border-right-style: None;"
	width=100%>
<p style="font-size: 8pt; color: #0000ff;">import java.io.*;</p>
<p style="font-size: 8pt; color: #0000ff;">import java.net.*;</p>
<p style="font-size: 8pt; color: #0000ff;">public class <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->TestDriver</p>
<p style="font-size: 8pt; color: #0000ff;">{</p>
<p style="font-size: 8pt; color: #0000ff;">WFSDataOutputStream wfout;</p>
<p style="font-size: 8pt; color: #0000ff;">WFSDataInputStream wfin;</p>
<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>
<p style="font-size: 8pt; color: #0000ff;">public static void main(String[] 
 args) </p>
<p style="font-size: 8pt; color: #0000ff;">{</p>
<p style="font-size: 8pt; color: #0000ff;">TestDriver tester = <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->new 
 TestDriver();</p>
<p style="font-size: 8pt; color: #0000ff;">int sessionId;</p>
<p style="font-size: 8pt; color: #0000ff;">try {</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->System.out.println(&quot;Omniflow 
 Server IP:&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->BufferedReader 
 inBuf <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->= 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->new BufferedReader(new 
 InputStreamReader(System.in));</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->String 
 str_srvrIP = inBuf.readLine();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->System.out.println(&quot;Omniflow 
 Server Port:&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->String 
 str_srvrPort = inBuf.readLine();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->int 
 m_srvrPort <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->= 
 Integer.parseInt(str_srvrPort);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->boolean 
 success = tester.connectToServer( <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->str_srvrIP 
 , m_srvrPort);</p>
<p style="font-size: 8pt; color: #0000ff;">if (success)</p>
<p style="font-size: 8pt; color: #0000ff;">{</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;Omniflow 
 Server Connection successful&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->System.out.println(&quot;Workflow 
 Engine:&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->String 
 str_engine = inBuf.readLine();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->System.out.println(&quot;Username:&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->String 
 str_userName = inBuf.readLine();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->System.out.println(&quot;Password:&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->String 
 str_password = inBuf.readLine();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->String 
 str_inxml = &quot;&lt;? Xml Version=\&quot;1.0\&quot;? &gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->+&quot;&lt;WMConnect_Input&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->+&quot;&lt;Option&gt;WMConnect&lt;/Option&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->+&quot;&lt;EngineName&gt;&quot;+str_engine+&quot;&lt;/EngineName&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->+&quot;&lt;Particpant&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->+&quot;&lt;Name&gt;&quot;+str_userName+&quot;&lt;/Name&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->+&quot;&lt;Password&gt;&quot;+str_password+&quot;&lt;/Password&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->+&quot;&lt;Scope&gt;USER&lt;/Scope&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->+&quot;&lt;ParticipantType&gt;U&lt;/ParticipantType&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->+&quot;&lt;/Participant&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->+&quot;&lt;/WMConnect_Input&gt;&quot;;</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;Input 
 XML for WMConnect.&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->System.out.println(str_inxml);</p>
<p style="font-size: 8pt; color: #0000ff;">String str_outxml = tester.execute(str_inxml);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;****************************************************&quot;); 
 </p>
<p style="font-size: 8pt; color: #0000ff;">String str_temp = tester.parseXML(str_outxml, 
 &quot;MainCode&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">int mainCode = Integer.parseInt(str_temp);</p>
<p style="font-size: 8pt; color: #0000ff;">if (mainCode == 0)</p>
<p style="font-size: 8pt; color: #0000ff;">{</p>
<p style="font-size: 8pt; color: #0000ff;">str_temp = tester.parseXML(str_outxml, 
 &quot;SessionID&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">sessionId = Integer.parseInt(str_temp); 
 </p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;WMConnect 
 successful. Your SessionID is &quot;+sessionId);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(str_outxml);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;****************************************************&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>
<!--(Table)=========================================================-->
<table x-use-null-cells
		style="x-cell-content-align: top;
				width: 100%;
				border-spacing: 0;"
		cellspacing=0
		width=100%>
<col style="width: 100%;">

<tr style="height: 133px;"
	valign=top>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-left-style: none;
			border-top-style: none;
			border-bottom-style: none;
			border-right-style: none;
			background-color: #ffffd2;"
	bgcolor=#FFFFD2
	width=100%>
<p style="font-size: 8pt; color: #0000ff;">str_inxml = &quot;&lt;? Xml 
 Version=\&quot;1.0\&quot;?&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;WFGetExternalInterfaceList_Input&gt;&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;Option&gt;WFGetExternalInterfaceList&lt;/Option&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;EngineName&gt;&quot;+str_engine+&quot;&lt;/EngineName&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;SessionID&gt;&quot;+sessionId+&quot;&lt;/SessionID&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;ProcessDefinitionId&gt;3&lt;/ProcessDefinitionId&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;/WFGetExternalInterfaceList_Input&gt;&quot;;</p></td></tr>
</table>
<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;****************************************************&quot;); 
 </p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(str_inxml); 
 </p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;****************************************************&quot;); 
 </p>
<p style="font-size: 8pt; color: #0000ff;">str_outxml = tester.execute(str_inxml);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;OutputXML 
 &quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(str_outxml);</p>
<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;****************************************************&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>
<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>
<p style="font-size: 8pt; color: #0000ff;">str_inxml = &quot;&lt;? Xml 
 Version=\&quot;1.0\&quot;?&gt;&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;WMDisConnect_Input&gt;&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;Option&gt;WMDisConnect&lt;/Option&gt;&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;EngineName&gt;&quot;+str_engine+&quot;&lt;/EngineName&gt;&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;SessionID&gt;&quot;+sessionId+&quot;&lt;/SessionID&gt;&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;/WMDisConnect_Input&gt;&quot;;</p>
<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>
<p style="font-size: 8pt; color: #0000ff;">str_outxml = tester.execute(str_inxml);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;Input 
 XML for WMDisConnect.&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(str_inxml);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;****************************************************&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;OutputXML 
 for WMDisConnect &quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(str_outxml);</p>
<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;****************************************************&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">}else{</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;WMConnect 
 failed. For Details please see the following xml.&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(str_outxml);</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;****************************************************&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}catch(IOException 
 e){</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->System.out.println(&quot;Error 
 : &quot;+e.toString());</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}catch(NumberFormatException 
 e){</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->System.out.println(&quot;Invalid 
 value for Server Port: &quot;+e.toString());</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">String parseXML(String inXml 
 , String tag )</p>
<p style="font-size: 8pt; color: #0000ff;">{</p>
<p style="font-size: 8pt; color: #0000ff;">String parseXml = inXml.toUpperCase();</p>
<p style="font-size: 8pt; color: #0000ff;">int startIndex = 0;</p>
<p style="font-size: 8pt; color: #0000ff;">int endIndex = 0;</p>
<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>
<p style="font-size: 8pt; color: #0000ff;">startIndex = parseXml.indexOf(&quot;&lt;&quot;+tag.toUpperCase()+&quot;&gt;&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">endIndex = parseXml.indexOf(&quot;&lt;/&quot;+tag.toUpperCase()+&quot;&gt;&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">if (startIndex &gt; 0 &amp;&amp; 
 endIndex &gt; 0)</p>
<p style="font-size: 8pt; color: #0000ff;">return inXml.substring(startIndex+tag.length()+2 
 , endIndex );</p>
<p style="font-size: 8pt; color: #0000ff;">else </p>
<p style="font-size: 8pt; color: #0000ff;">return null;</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">boolean connectToServer( String 
 ip , int port){</p>
<p style="font-size: 8pt; color: #0000ff;">try {</p>
<p style="font-size: 8pt; color: #0000ff;">String str_srvrIP = ip; </p>
<p style="font-size: 8pt; color: #0000ff;">int m_srvrPort = port;</p>
<p style="font-size: 8pt; color: #0000ff;">Socket s = new Socket (str_srvrIP 
 , m_srvrPort);</p>
<p style="font-size: 8pt; color: #0000ff;">wfout = new WFSDataOutputStream 
 ( s.getOutputStream()); </p>
<p style="font-size: 8pt; color: #0000ff;">wfin = new WFSDataInputStream 
 ( s.getInputStream() ); <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>
<p style="font-size: 8pt; color: #0000ff;">}catch(UnknownHostException 
 e){</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;Unknown 
 Host&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">return false;</p>
<p style="font-size: 8pt; color: #0000ff;">}catch(IOException e){</p>
<p style="font-size: 8pt; color: #0000ff;">System.out.println(&quot;Connect 
 Failed&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;">return false;</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">return true;</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">String execute( String inXml 
 ) {</p>
<p style="font-size: 8pt; color: #0000ff;">try {</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->wfout.writeObject(inXml);</p>
<p style="font-size: 8pt; color: #0000ff;">return wfin.readObject();</p>
<p style="font-size: 8pt; color: #0000ff;">}catch(IOException e){</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->System.out.println(&quot;Error 
 : &quot;+e.toString());</p>
<p style="font-size: 8pt; color: #0000ff;">return &quot;&quot;;</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">class WFSDataInputStream </p>
<p style="font-size: 8pt; color: #0000ff;">{</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->private 
 DataInputStream obj_din;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->public 
 WFSDataInputStream(InputStream in)</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_din 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->= new DataInputStream(in);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->public 
 WFSDataInputStream(InputStream in, boolean flush)</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_din 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->= new DataInputStream(in);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->public 
 String readObject() throws IOException {</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->int 
 dataRead = obj_din.readInt();</p>
<p style="font-size: 8pt; color: #0000ff;">byte[] input_buffer = new byte[dataRead];</p>
<p style="font-size: 8pt; color: #0000ff;">if (dataRead &gt; 0){</p>
<p style="font-size: 8pt; color: #0000ff;">int bytes_received = -1;</p>
<p style="font-size: 8pt; color: #0000ff;">int off = 0; </p>
<p style="font-size: 8pt; color: #0000ff;">do{</p>
<p style="font-size: 8pt; color: #0000ff;">bytes_received = obj_din.read(input_buffer,off,dataRead);</p>
<p style="font-size: 8pt; color: #0000ff;">if(bytes_received == -1) </p>
<p style="font-size: 8pt; color: #0000ff;">break;</p>
<p style="font-size: 8pt; color: #0000ff;">off += bytes_received;</p>
<p style="font-size: 8pt; color: #0000ff;">dataRead -= bytes_received; 
 </p>
<p style="font-size: 8pt; color: #0000ff;">} while (dataRead &gt; 0);</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">return new String(input_buffer, 
 &quot;8859_1&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->public 
 void close() throws IOException {</p>
<p style="font-size: 8pt; color: #0000ff;">obj_din.close();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->protected 
 void finalize() throws Throwable {</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->if(obj_din 
 != null) {</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->try 
 {</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_din.close();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}catch(Exception 
 ignored) {}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_din 
 = null;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;">private int readInt()throws 
 IOException </p>
<p style="font-size: 8pt; color: #0000ff;">{</p>
<p style="font-size: 8pt; color: #0000ff;">return obj_din.readInt();</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">private void read(byte[] bytebuffer, 
 int startPos, int len)throws IOException </p>
<p style="font-size: 8pt; color: #0000ff;">{</p>
<p style="font-size: 8pt; color: #0000ff;">obj_din.read(bytebuffer, startPos, 
 len);</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">class WFSDataOutputStream </p>
<p style="font-size: 8pt; color: #0000ff;">{</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->private 
 DataOutputStream obj_dout;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->private 
 boolean b_autoflush;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->public 
 WFSDataOutputStream(OutputStream out)</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_dout 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->= new DataOutputStream(out);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->b_autoflush 
 = true;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->public 
 WFSDataOutputStream(OutputStream out, boolean flush)</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_dout 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->= new DataOutputStream(out);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->b_autoflush 
 = flush;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->public 
 void writeObject(String str_response) throws IOException</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->int 
 buffer_length = str_response.length();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->byte[] 
 output_buffer = new byte[buffer_length];</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->output_buffer 
 = str_response.getBytes(&quot;8859_1&quot;);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_dout.writeInt(buffer_length);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_dout.write(output_buffer 
 , 0, buffer_length);</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->if(b_autoflush){</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->flush();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->public 
 void flush() throws IOException</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_dout.flush();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->public 
 void close() throws IOException</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_dout.flush();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_dout.close();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->protected 
 void finalize() throws Throwable {</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->if(obj_dout 
 != null) {</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->try 
 {</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_dout.close();</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}catch(Exception 
 ignored) {}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->obj_dout 
 = null;</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>
<p style="font-size: 8pt; color: #0000ff;">}</p>
<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p></td></tr>
</table>
<!--begin!kadov{{--></div><!--}}end!kadov-->
<p>&nbsp;</p>

<p>2. There is a highlighted portion in the sample code.</p>

<p>&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="x-cell-content-align: top;
				width: 100%;
				border-spacing: 0;"
		cellspacing=0
		width=100%>
<col style="width: 100%;">

<tr style="height: 133px;"
	valign=top>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-left-style: none;
			border-top-style: none;
			border-bottom-style: none;
			border-right-style: none;
			background-color: #ffffd2;"
	bgcolor=#FFFFD2
	width=100%>
<p style="font-size: 8pt; color: #0000ff;">str_inxml = &quot;&lt;? Xml 
 Version=\&quot;1.0\&quot;?&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;WFGetExternalInterfaceList_Input&gt;&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;Option&gt;WFGetExternalInterfaceList&lt;/Option&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;EngineName&gt;&quot;+str_engine+&quot;&lt;/EngineName&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;SessionID&gt;&quot;+sessionId+&quot;&lt;/SessionID&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;ProcessDefinitionId&gt;3&lt;/ProcessDefinitionId&gt;\n&quot;</p>
<p style="font-size: 8pt; color: #0000ff;">+&quot;&lt;/WFGetExternalInterfaceList_Input&gt;&quot;;</p></td></tr>
</table>

<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>

<p>This is the sample XMLInput for <span style="font-size: 8pt; color: #0000ff;">WFGetExternalInterfaceList_Input 
 </span>call.</p>

<p>For accessing any other call you just need to replace this section with 
 the sample code given along with each call.</p>

<p>3. Save the test driver code as &quot;TestDriver.java&quot; file. </p>

<p>4. Compile the code and then try to execute it on the existing database.</p>

<p>&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="x-cell-content-align: top;
				width: 100%;
				border-spacing: 0;"
		cellspacing=0
		width=100%>
<col style="width: 100%;">

<tr style="height: 71px;"
	valign=top>
<td style="padding-right: 10px;
			padding-left: 10px;
			border-left-style: none;
			border-top-style: none;
			border-bottom-style: none;
			border-right-style: none;
			background-color: #ffffd2;"
	bgcolor=#FFFFD2
	width=100%>
<h3>Note:</h3>
<p>This sample code is the JAVA based implementation for accessing the 
 API's. You can build your own socket connection code and call the API's</p></td></tr>
</table>

<p style="font-size: 8pt; color: #0000ff;">&nbsp;</p>

<h3>Quick look for the steps to run the code:</h3>

<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p><p>Copy the Test Driver Code and save it as &quot;TestDriver.java&quot; 
 file. Compile it to create class file named &quot;TestDriver&quot;.</p></li>
	
	<li class=kadov-p><p>Try to connect with the existing OmniFlow server.</p></li>
	
	<li class=kadov-p>
	<p>You can pass the Input XML for the specific call in order to retrieve 
 the output from the OmniFlow Server.</p>
	
	<p>&nbsp;</p>
	</li>
</ul>

<p>&nbsp;</p>

<h3>Related Topics</h3>

<p><a onmouseover="mouse1.src ='bullet_red.gif'"
		onmouseout="mouse1.src='bullet_blue.gif'"
		href="Customization.htm"
		target=_self><img src="bullet_blue.gif"
							name=mouse1
							style="border-style: none;
									width: 13px;
									height: 13px;"
							width=13
							height=13></a> <a href="Customization.htm">Basic 
 Steps for Customization</a></p>

<p><a onmouseover="mouse2.src ='bullet_red.gif'"
		onmouseout="mouse2.src='bullet_blue.gif'"
		href="System_Requirements.htm"
		target=_self><img src="bullet_blue.gif"
							name=mouse2
							style="border-style: none;
									width: 13px;
									height: 13px;"
							width=13
							height=13></a> <a href="System_Requirements.htm">System 
 Requirements</a></p>

<p><a onmouseover="mouse3.src ='bullet_red.gif'"
		onmouseout="mouse3.src='bullet_blue.gif'"
		href="Installations_and_Configurations.htm"
		target=_self><img src="bullet_blue.gif"
							name=mouse3
							style="border-style: none;
									width: 13px;
									height: 13px;"
							width=13
							height=13></a> <a href="Installations_and_Configurations.htm">Installation 
 and Configuration</a></p>

</body>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
