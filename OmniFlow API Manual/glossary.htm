<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Glossary</title>

<!--(Meta)==========================================================-->

<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=7188>
<meta name=layout-width content=475>
<meta name=date content="01 29, 2003 11:15:49 AM">
<meta name=x-ignored-words content="DMS;workitems;OmniDocs;WFSDataOutputStream;WFSDataInputStream;ImageWorks;workstep;faxing;WMFetchworkitem;worklist;login;WMGetWorkItem;G;L;Q;T;W;worksteps;Admin;C-">


<!--(Links)=========================================================-->

<link rel=StyleSheet href=default.css>



</head>

<!--(Body)==========================================================-->


<body>
<SCRIPT LANGUAGE="JavaScript" TITLE="eHelp Special Effects" SRC="ehlpdhtm.js"></SCRIPT>


<h1><img src="Images/DMSUpdate/logo1.gif"
		x-maintain-ratio=TRUE
		style="border: none;
				float: none;
				width: 83px;
				height: 22px;"
		width=83
		height=22> Glossary<a name=Glossary></a></h1>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="x-cell-content-align: top;
				width: 100%;
				border-spacing: 0px;"
		cellspacing=0
		width=100%>
<col style="width: 10%;">
<col style="width: 10%;">
<col style="width: 10%;">
<col style="width: 10%;">
<col style="width: 10%;">
<col style="width: 10%;">
<col style="width: 10%;">
<col style="width: 10%;">
<col style="width: 10%;">
<col style="width: 10%;">

<tr valign=top>
<td style="border-left-width: 1px;
			border-top-style: Solid;
			border-top-color: #008000;
			border-top-width: 3px;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #008000;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#A-">A</a></p></td>
<td style="border-top-style: Solid;
			border-top-color: #008000;
			border-top-width: 3px;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #008000;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#B-">B</a></p></td>
<td style="border-top-style: Solid;
			border-top-color: #008000;
			border-top-width: 3px;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #008000;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#C-"><!--kadov_tag{{<ignored>}}-->C<!--kadov_tag{{</ignored>}}--></a></p></td>
<td style="border-top-style: Solid;
			border-top-color: #008000;
			border-top-width: 3px;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #008000;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#D-">D</a></p></td>
<td style="border-top-style: Solid;
			border-top-color: #008000;
			border-top-width: 3px;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #008000;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#E-"><!--kadov_tag{{<ignored>}}-->E<!--kadov_tag{{</ignored>}}--></a></p></td>
<td style="border-top-style: Solid;
			border-top-color: #008000;
			border-top-width: 3px;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #008000;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#F-"><!--kadov_tag{{<ignored>}}-->F<!--kadov_tag{{</ignored>}}--></a></p></td>
<td style="border-top-style: Solid;
			border-top-color: #008000;
			border-top-width: 3px;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #008000;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#G-">G</a></p></td>
<td style="border-top-style: Solid;
			border-top-color: #008000;
			border-top-width: 3px;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #008000;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#H-">H</a></p></td>
<td style="border-top-style: Solid;
			border-top-color: #008000;
			border-top-width: 3px;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #008000;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#I-">I</a></p></td>
<td style="border-top-style: Solid;
			border-top-color: #008000;
			border-top-width: 3px;
			border-right-width: 1px;
			border-bottom-style: Solid;
			border-bottom-width: 1px;
			border-bottom-color: #008000;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#L-">L</a></p></td></tr>

<tr valign=top>
<td style="border-bottom-width: 3px;
			border-bottom-color: #008000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#O-">O</a></p></td>
<td style="border-bottom-width: 3px;
			border-bottom-color: #008000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#P-">P</a></p></td>
<td style="border-bottom-width: 3px;
			border-bottom-color: #008000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#Q-">Q</a></p></td>
<td style="border-bottom-width: 3px;
			border-bottom-color: #008000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#R-">R</a></p></td>
<td style="border-bottom-width: 3px;
			border-bottom-color: #008000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#S-">S</a></p></td>
<td style="border-bottom-width: 3px;
			border-bottom-color: #008000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#T-">T</a></p></td>
<td style="border-bottom-width: 3px;
			border-bottom-color: #008000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#U-">U</a></p></td>
<td style="border-bottom-width: 3px;
			border-bottom-color: #008000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#V-">V</a></p></td>
<td style="border-bottom-width: 3px;
			border-bottom-color: #008000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#W-">W</a></p></td>
<td style="border-bottom-width: 3px;
			border-bottom-color: #008000;
			border-bottom-style: Solid;
			padding-right: 10px;
			padding-left: 10px;"
	width=10%>
<p><a href="#X-">X</a></p></td></tr>
</table>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-A-<a name=A-></a></h2>

<h3>Action</h3>

<p>Actions are the explicit rules that are defined for users on the Desktop. 
 It is on the user’s discretion whether to perform these Actions on the 
 worksteps or skip them.</p>

<h3>Ad-hoc routing</h3>

<p style="margin-bottom: 0;">Many times you forward a specific case to 
 an expert within a same processing group if it comes to you. Although 
 in rule-based workflow, system assigns the task to a performer but if 
 permitted then performer can reassign that task to an expert who is the 
 member of same queue. </p>

<h3>Admin Port</h3>

<p>The Server Port is the port for administering the OmniFlow Server. While 
 registering the OmniFlow server with the OmniDocs Service Administration, 
 you need to specify the Admin Port.</p>

<h3>Activity</h3>

<p>A description of a piece of work that forms one logical step within 
 a process. An activity may be manual or automated.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><a href="Glossary.htm">Top</a></p>

<h2 style="text-align: center;"
	align=center>-B-<a name=B-></a></h2>

<p style="margin-bottom: 0; font-weight: bold;"><span>Batch Size</span></p>

<p style="margin-bottom: 0;">&nbsp;</p>

<p style="margin-bottom: 0;"><span style="font-weight: bold;">Both Type 
 Cabinet</span> –- Currently both type Cabinet is being used . It encapsulates 
 the features of both the Document Cabinet as well as Image Cabinet. </p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-C-<a name=C-></a></h2>

<h3>Cabinet </h3>

<p>Database Cabinet is the basic entity <!--kadov_tag{{<ignored>}}-->Entity<!--kadov_tag{{</ignored>}}--> 
 in the OmniDocs Document Management System. OmniDocs Engine has 3 types 
 of Cabinets. Viz. Document Cabinet, Image Cabinet, Both type Cabinet. 
 A Cabinet refers to a database.</p>

<h3>Custom workstep</h3>

<p>Custom workstep implies that the user has to explicitly login to his 
 desktop to perform the intended operation. Custom worksteps can also be 
 termed as Manual <!--kadov_tag{{<ignored>}}-->Worksteps<!--kadov_tag{{</ignored>}}-->.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-D-<a name=D-></a></h2>

<h3>Decision</h3>

<p>A decision step leads to more than one workstep. You can define the 
 rule to route the incoming Workitem to any one of the leading workstep. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Rules can 
 be defined on Workitem data and queue variables. OmniFlow automatically 
 evaluates the rule and routes the Workitem to appropriate workstep.</p>

<p><span style="font-weight: bold;">Document Cabinet</span> - Document 
 Cabinet refers to the database, which maintains the Document Management 
 System information. All Users, folder <!--kadov_tag{{<ignored>}}-->Folder<!--kadov_tag{{</ignored>}}--> 
 and document <!--kadov_tag{{<ignored>}}-->Document<!--kadov_tag{{</ignored>}}--> 
 information resides in this Cabinet. </p>

<h3>Data</h3>

<p>OmniFlow provides two types of data. One is the application data and 
 other is the workflow data. System can use both data for routing purpose.</p>

<h3>DMS</h3>

<p>Abbreviation for Document Management System. </p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-<!--kadov_tag{{<ignored>}}-->E-<!--kadov_tag{{</ignored>}}--><a 
 name=E-></a></h2>

<h3>Engine</h3>

<p>It is synonym for cabinet name, in case of workflow calls.</p>

<h3>Exceptions</h3>

<p>Any business process takes some exception in special cases. Processing 
 staff for taking special permission from authorized person can raise these 
 exceptions. For example in the absence of income document, credit card 
 application should be processed or not is an exception, which can be cleared 
 by an authorized person. </p>

<p>ImageWorks provides facility to define list of exception, which can 
 be raised and cleared at particular workstep. On exception system can 
 route the workitem to exception resolving workstep.</p>

<h3><!--kadov_tag{{<ignored>}}-->Expiry<!--kadov_tag{{</ignored>}}--> Interval</h3>

<p>The time interval after which the OmniFlow Server expires the workitems 
 that have reached their <!--kadov_tag{{<ignored>}}-->expiry<!--kadov_tag{{</ignored>}}--> 
 time.</p>

<h3>External Database variables</h3>

<p>External Database variables, to keep the Workflow system efficient and 
 capable of processing millions of transactions only 26 queue variables 
 can be defined. However you can also import external application data 
 variables in the form of a database table (where each column corresponds 
 to an external database variable). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Once 
 imported into the Workflow system they act like normal process variables. 
 </p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-<!--kadov_tag{{<ignored>}}-->F-<!--kadov_tag{{</ignored>}}--><a 
 name=F-></a></h2>

<h3>Flow Control Steps</h3>

<p>Flow control steps are automatically executed by workflow system. Some 
 examples of such steps would be routing of workitems to alternative worksteps, 
 splitting Workitem for parallel processing, collecting split workitems 
 etc.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-<!--kadov_tag{{<ignored>}}-->G-<!--kadov_tag{{</ignored>}}--><a 
 name=G-></a></h2>

<h3>Group</h3>

<p>An entity consisting of multiple users.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-H-<a name=H-></a></h2>

<h3>Hold</h3>

<p>At hold step the Workitem waits for the specified condition to become 
 true and than moves further. Typically this step is used for time based 
 waiting, but can also be used where a Workitem is expecting a state change 
 due to external inputs.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-I-<a name=I-></a></h2>

<h3>Interface</h3>

<p>Interfaces are the customized programs for defining properties. These 
 settings are reflected on the <!--kadov_tag{{<ignored>}}-->Omniflow<!--kadov_tag{{</ignored>}}--> 
 Desktop.</p>

<p>System Defined workstep processing is performed by the system, or an 
 external application. A user does not have to perform the related operations 
 explicitly. For example, Print, Fax, Mail, Workflow Entry, Workflow-Exit, 
 and so on. There are seven such worksteps: Introduction, Distribute, Decision, 
 Hold, Collect, Discard and Exit.</p>

<h3><!--kadov_tag{{<ignored>}}-->InputXml<!--kadov_tag{{</ignored>}}--> 
 </h3>

<p>The term <!--kadov_tag{{<ignored>}}-->InputXml<!--kadov_tag{{</ignored>}}--> 
 specifies required information passed to OmniFlow server for performing 
 any operation. To view the standard format for <!--kadov_tag{{<ignored>}}-->InputXML<!--kadov_tag{{</ignored>}}-->, 
 </p>

<p><span style="font-weight: bold;">Image Server Cabinet</span> - This 
 Cabinet refers to the database where Volume and document <!--kadov_tag{{<ignored>}}-->Document<!--kadov_tag{{</ignored>}}--> 
 storage <!--kadov_tag{{<ignored>}}-->Storage<!--kadov_tag{{</ignored>}}--> 
 information is stored. </p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-<!--kadov_tag{{<ignored>}}-->L-<!--kadov_tag{{</ignored>}}--><a 
 name=L-></a></h2>

<h3>Linking workitems</h3>

<p>Similar <!--kadov_tag{{<ignored>}}-->Workitems<!--kadov_tag{{</ignored>}}--> 
 can be linked together for later referral. </p>

<h3>Linked workitems</h3>

<p><!--kadov_tag{{<ignored>}}-->Workitems<!--kadov_tag{{</ignored>}}--> 
 linked together are called as Linked Workitem.</p>

<h3>Load <!--kadov_tag{{<ignored>}}-->balancer<!--kadov_tag{{</ignored>}}--> 
 Interval</h3>

<p>The time interval at which the OmniFlow Server tries to redistribute 
 the workitems to the users according to the current load. </p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-O-<a name=O-></a></h2>

<h3><!--kadov_tag{{<ignored>}}-->OutputXml<!--kadov_tag{{</ignored>}}--></h3>

<p>The term <!--kadov_tag{{<ignored>}}-->OutputXml<!--kadov_tag{{</ignored>}}--> 
 specifies information returned by OmniFlow server corresponding to any 
 operation. To view the standard format for <!--kadov_tag{{<ignored>}}-->InputXML<!--kadov_tag{{</ignored>}}-->, 
 </p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-P-<a name=P-></a></h2>

<h3>Predefined templates for responses and notices</h3>

<p>You can make templates in MS Word, Excel etc and can invoke these applications 
 with data from processing desktop</p>

<p>&nbsp;</p>

<h3>Process</h3>

<p>A process is a set of activities, which are performed one after another 
 based on decisions on information available with the Workitem. There are 
 two kind of activities, An activity where a well-defined work is to be 
 done, called a <!--kadov_tag{{<ignored>}}-->Workstep<!--kadov_tag{{</ignored>}}-->, 
 and the other where decisions are made and routing done called flow control 
 steps.</p>

<h3>Process Instance</h3>

<p>The representation of a single enactment of a process including its 
 associated data. Each instance represents a separate thread of execution 
 of the process, which may be controlled independently and will have its 
 own internal state and externally visible identity, which may be used 
 as a handle, for example, to update or retrieve data relating to the individual 
 enactment.</p>

<h3>Process Modeler</h3>

<p>It is a graphical tool for designing processes.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-<!--kadov_tag{{<ignored>}}-->Q-<!--kadov_tag{{</ignored>}}--><a 
 name=Q-></a></h2>

<h3>Queue</h3>

<p style="margin-bottom: 0;">OmniFlow is a Queue based workflow system. 
 A queue is a list of tasks called <!--kadov_tag{{<ignored>}}-->WorlItems<!--kadov_tag{{</ignored>}}-->, 
 which are to be processed. </p>

<p style="margin-bottom: 0;">For every user in the system there is a personal 
 queue. You can also define group queues that are acted upon by some set 
 of users or programs. Group Queues can be independent of business process. 
 For example a data entry queue, where a set of operators do data entry 
 on many type of workitems, belonging to different business processes. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->With a 
 queue, you can associate worksteps as defined in the process definition. 
 </p>

<h3>Queue Variables</h3>

<p style="margin-bottom: 0;">User Defined (Queue) variables are the temporary 
 variables used mainly for processing rules at different <!--kadov_tag{{<ignored>}}-->Worksteps<!--kadov_tag{{</ignored>}}-->. 
 Both the variables can be defined and modified. User can define a maximum 
 number of 26 variables.</p>

<h3>Query <!--kadov_tag{{<ignored>}}-->Timeout<!--kadov_tag{{</ignored>}}--></h3>

<p>It is the time after which the query is terminated.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-R-<a name=R-></a></h2>

<h3>Rules</h3>

<p>A rule is a list of one or more actions that are to be executed when 
 the associated list of conditions, if any, are satisfied. Rules are used 
 for defining all the processing that has to be performed on any particular 
 <!--kadov_tag{{<ignored>}}-->Workstage<!--kadov_tag{{</ignored>}}-->. 
 Rules are always executed sequentially, one after another, in the sequence 
 in which they are defined.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-S-<a name=S-></a></h2>

<h3>Security Levels</h3>

<p>It can be on the Cabinet, Object Level or No Security.</p>

<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p><p><span style="font-weight: bold;">No Security</span> 
 implies no validation of rights on any object, for any user. </p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;">Cabinet Level</span> 
 implies that the rights are applicable at the cabinet level. All the rights 
 on an object for a user would be inherited from the cabinet. </p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;">Object Level</span> 
 implies object level security, which means that all the rights and privileges 
 are assigned to all the objects of OmniDocs. </p></li>
</ul>

<h3><!--kadov_tag{{<ignored>}}-->SessionID<!--kadov_tag{{</ignored>}}--></h3>

<p>For connection with the OmniFlow server the user has to establish the 
 connection through <!--kadov_tag{{<ignored>}}-->WMConnect<!--kadov_tag{{</ignored>}}--> 
 API. This API provides a unique session id for the login user after authentication 
 process is done. This session id will persist for all the operations carried 
 by the login user on that particular system. The Server will recognize 
 the user through this session id for his current session. </p>

<h3>Server Port</h3>

<p>The Server Port is the port where at which the A queue is a list of 
 tasks called <!--kadov_tag{{<ignored>}}-->WorlItems<!--kadov_tag{{</ignored>}}-->, 
 which are to be processed. </p>

<h3>Sequential and parallel processing</h3>

<p>System supports both sequential as well as parallel routing. System 
 supports split and join flow control activities. These are useful when 
 work at two stages is independent, and can be performed <!--kadov_tag{{<ignored>}}-->parrallely<!--kadov_tag{{</ignored>}}-->.</p>

<h3>Streams for User selections</h3>

<p>System provides the facility of predefined filters for the workitems 
 of a workstep. These predefined filters are called streams.</p>

<h3>Split and Collect</h3>

<p style="margin-bottom: 0;">Split and Collect steps are used in conjunction 
 with each other. For parallel processing a Workitem can be split in two 
 or more instances and routed to different worksteps. For each one of the 
 spitted Workitem data variables are the same and only queue variables 
 are different.</p>

<h3>System workstep</h3>

<p>System workstep implies that the processing is done by the system or 
 an external application. The user does not have to explicitly login to 
 perform the intended operations at these worksteps. They can also be termed 
 as Automated <!--kadov_tag{{<ignored>}}-->Worksteps<!--kadov_tag{{</ignored>}}-->. 
 There are a total of seven such worksteps, namely, Introduction, Distribute, 
 Decision, Hold, Collect, Discard and Exit. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->From 
 the above the Distribute, Decision, Hold and Collect can also be termed 
 as the Flow control worksteps, which perform operations like routing workitems 
 to alternate worksteps, splitting workitems for parallel processing, collecting 
 the split workitems and so on.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-<!--kadov_tag{{<ignored>}}-->T-<!--kadov_tag{{</ignored>}}--><a 
 name=T-></a></h2>

<h3><!--kadov_tag{{<ignored>}}-->TODOList<!--kadov_tag{{</ignored>}}--></h3>

<p>Checklist for processing a workstep</p>

<p>ImageWorks provides the facility of defining checklist for processing 
 a workstep, which is termed as ‘<!--kadov_tag{{<ignored>}}-->ToDo<!--kadov_tag{{</ignored>}}--> 
 <!--kadov_tag{{<ignored>}}-->List’<!--kadov_tag{{</ignored>}}-->. <!--kadov_tag{{<ignored>}}-->ToDo<!--kadov_tag{{</ignored>}}--> 
 list is not just the reminder for the user but has much more, like provision 
 for taking input using a pick list, invoking a trigger on selection of 
 a <!--kadov_tag{{<ignored>}}-->ToDo<!--kadov_tag{{</ignored>}}--> item, 
 launch of applications like MS Word, Excel etc for generation of responses 
 or notices etc. </p>

<h3>Triggers </h3>

<p>At each worksteps or flow control steps, events can be defined. These 
 events can invoke trigger that can send messages or invoke exception-processing 
 programs. Triggers can be used by the system for sending mails/ fax, generating 
 responses, invoking data form for data entry, communicating from external 
 systems for data updating and retrieval, informing supervisors of exceptional 
 conditions etc.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-U-<a name=U-></a></h2>

<h3>User Variables</h3>

<p>User Defined (Queue) variables are the temporary variables used mainly 
 for processing rules at different <!--kadov_tag{{<ignored>}}-->Worksteps<!--kadov_tag{{</ignored>}}-->. 
 Both the variables can be defined and modified. User can define a maximum 
 number of 26 variables.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-V-<a name=V-></a></h2>

<h3>Variables</h3>

<p>Variables are used for processing rules and in monitoring workitems. 
 There can be three types of variables- System Defined, User Defined (Queue 
 variables) and External Database variables</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-<!--kadov_tag{{<ignored>}}-->W-<!--kadov_tag{{</ignored>}}--><a 
 name=W-></a></h2>

<h3><!--kadov_tag{{<ignored>}}-->Workstep<!--kadov_tag{{</ignored>}}--></h3>

<p><!--kadov_tag{{<ignored>}}-->Workstep<!--kadov_tag{{</ignored>}}--> 
 is an activity where some work has to be done either by a fully automated 
 program or by an interactive program where people act, enter/ change data, 
 set decision variables etc.</p>

<h3>Workitem</h3>

<p>The representation of work to be processed (by a workflow participant 
 in the context of an activity within a process instance.</p>

<h3>Work Audit</h3>

<p style="margin-bottom: 0;">OmniFlow provides the facility of auditing 
 a percentage of work of a user. This is useful in case administrator want 
 to audit the work of a new user. Administrator can define the percentage 
 of the workitem to be audited, system routes those many workitem to audit 
 stage. Later this percentage can be set to 0 when administrator gets confidence 
 on his work.</p>

<h3><!--kadov_tag{{<ignored>}}-->WorkfFlow<!--kadov_tag{{</ignored>}}--> 
 Engine</h3>

<p style="margin-bottom: 0;">Engine is based on server side JAVA based 
 technology. It is designed to serve small as well as big corporate. It 
 is capable of handling thousands of transactions per day. It supports 
 ORACLE, <!--kadov_tag{{<ignored>}}-->MSSQL<!--kadov_tag{{</ignored>}}--> 
 and DB2. It has its own application server, which handles session management, 
 database license management etc. </p>

<h3><!--kadov_tag{{<ignored>}}-->Workstep<!--kadov_tag{{</ignored>}}--> 
 Properties</h3>

<p>A workstep requires a unique name along with the description. System 
 provides the facility of selecting an icon for the workstep for the graphical 
 representation.</p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h2 style="text-align: center;"
	align=center>-X-<a name=X-></a></h2>

<h3>XML</h3>

<p>Extensible Markup Language (XML) is a meta-markup language that provides 
 a format for describing structured data. This facilitates more precise 
 declarations of content and more meaningful search results across multiple 
 platforms. </p>

<p style="margin-bottom: 0; text-align: right;"
	align=right><span style="text-align: right;"><a href="Glossary.htm">Top</a></span></p>

<p>&nbsp;</p>

<h3>Related Topics</h3>

<p><a onmouseover="mouse5.src ='bullet_red.gif'"
		onmouseout="mouse5.src='bullet_blue.gif'"
		href="TroubleShooting_%26_Debugging.htm"
		target=_self><img src="bullet_blue.gif"
							name=mouse5
							style="border-style: none;
									width: 13px;
									height: 13px;"
							width=13
							height=13></a> <a href="TroubleShooting_%26_Debugging.htm">Trouble 
 Shooting &amp; Debugging</a></p>

<p><a onmouseover="mouse2.src ='bullet_red.gif'"
		onmouseout="mouse2.src='bullet_blue.gif'"
		href="XML_Codes_(Alphabetically).htm"
		target=_self><img src="bullet_blue.gif"
							name=mouse2
							style="border-style: none;
									width: 13px;
									height: 13px;"
							width=13
							height=13></a> <a href="XML_Codes_(Alphabetically).htm">List 
 of Functions</a></p>

<p><a onmouseover="mouse3.src ='bullet_red.gif'"
		onmouseout="mouse3.src='bullet_blue.gif'"
		href="List_of_Error_Messages.htm"
		target=_self><img src="bullet_blue.gif"
							name=mouse3
							style="border-style: none;
									width: 13px;
									height: 13px;"
							width=13
							height=13></a> <a href="List_of_Error_Messages.htm">List 
 of Error Messages</a></p>

<p><a onmouseover="mouse4.src ='bullet_red.gif'"
		onmouseout="mouse4.src='bullet_blue.gif'"
		href="Action_Ids_and_Corresponding_Actions.htm"
		target=_self><img src="bullet_blue.gif"
							name=mouse4
							style="border-style: none;
									width: 13px;
									height: 13px;"
							width=13
							height=13></a> <a href="Action_Ids_and_Corresponding_Actions.htm">Action 
 <!--kadov_tag{{<ignored>}}-->Ids<!--kadov_tag{{</ignored>}}--> and Corresponding 
 Actions</a></p>

<p>&nbsp;</p>

</body>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
