<HTML>
<HEAD>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch13a.htm" , "ch13c.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="468"><h1>Creating a COM Add-In</h1></A>
<p>You can create a COM add-in for Office 2000 in any programming language that lets
you create a COM .dll or COM .exe file. These languages include Microsoft Visual C++,
Visual J++, Visual Basic version 5.0 or higher (Professional or Enterprise Edition),
and the version of Visual Basic for Applications included in Microsoft Office 2000
Developer. The examples in this chapter use Visual Basic version 6.0.</p>

<A NAME="469"><h2>Creating a COM Add-In with Visual Basic</h2></A>
<p>To create a simple COM add-in for Office 2000 using Visual Basic version 6.0,
complete the following steps:</p>

<ol>
<p><li>Start Visual Basic. In the New tab on the New Project dialog box,
double-click the ActiveX DLL icon to create a new project. The Class1 class module is
added by default.</li></p>

<p><img src="images/G13ovb01.JPG" width=55 height=45 border="0"></p>

<p><li>In the Project Explorer, right-click the Class1 class module and select
Remove Class1. Click No when prompted to save changes in Class1.</li></p>

<p><li>From the Project menu, click Components to display the Components dialog
box for the current project.</li></p>

<p><li>Click the Designers tab and select Addin Class (if it's not already
selected). This adds the menu item Add Addin Class to the Project menu.</li></p>

<p>
<A HREF="javascript:fullSize('G13ovb02x.htm')"> <img src="images/G13ovb02.JPG" width=404 height=359 border=0 ALT = "Click to view at full size."> </A>
</p>


<p><li>Click Add Addin Class from the Project menu. In the Properties window, change the Name property of the Designer project item from AddinDesigner1 to ConnectWord. Set the Public property to True and then click OK.</li></p>

<p><li>In the General tab of the ConnectWord window, enter or select the values
listed in the following table. You may have to resize the Add-in Designer window in
order to see the Initial Load Behavior drop-down list at the bottom of the General
tab.</li></p>


<table cellpadding=5 width="95%">
<tr><th valign="top">Property</th> <th valign="top">Value</th></tr>

<tr>
   <td valign="top">Addin Display Name text box</td> 
   <td valign="top">Type <b>Microsoft Office Basic COM add-in for Word.</b></td>
</tr>

<tr>
    <td valign="top">Application drop-down list</td> 
    <td valign="top">Microsoft Word</td>
</tr>

<tr>
   <td valign="top">Application Version drop-down list </td>
   <td valign="top">Microsoft Word 9.0</td>
</tr>

<tr> 
   <td valign="top">Initial Load Behavior drop-down list</td> 
   <td valign="top">None</td>
</tr>
</table>

<p>
<img src="images/G13ovb03.JPG" width=366 height=423 border=0>


<p>The COM add-ins dialog box displays the &quot;friendly name&quot; of the add-in, which is &quot;Microsoft Office Basic COM add-in for Word.&quot; The
Application drop-down list contains the applications for which you can register your
COM add-in. COM add-ins are supported in Office 2000 and later versions. If you have
Office 2000 installed on your machine, each Office 2000 application will be listed. The
Initial Load Behavior drop-down list at the bottom of the General tab allows you to set
how your add-in loads. Chapter 14, in the section &quot;<A HREF="ch14d.htm#506">COM Add-in Load Behavior Settings</A>,&quot; describes the different load behaviors in more detail.</p>

<p>The default load behavior in the General tab is set to None; consequently, the
add-in won't automatically load when you start Word. Instead, you have to load the
add-in using the COM Add-Ins dialog box. The next section, &quot;<A HREF="ch13b.htm#470">Test the COM Add-in</A>,&quot; describes how to use the COM Add-Ins dialog box.</p>

<p><li>In the Project Explorer window, make sure you select the ConnectWord
project item, and then click the View Code button or press <font size="-2">F7</font>. In the ConnectWord code
window, select AddinInstance from the Object drop-down list. When you select AddinInstance<i>,</i> the <i>Sub</i> procedure <i>AddinInstance_OnConnection</i> is automatically inserted, as shown in the figure below.</li></p>

<p>
<img src="images/G13ovb04.JPG" width=25 height=24 border=0>

<p>
<A HREF="javascript:fullSize('G13ovb05x.htm')"> <img src="images/G13ovb05.JPG" width=404 height=227 border=0 ALT = "Click to view at full size."> </A>
</p>


<p><li>Add the following line to the <i>AddinInstance_OnConnection</i>
procedure:</li></p>


<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
MsgBox &quot;Add-in connected to: &quot; &amp; Application.Name
</pre>
</td></tr>
</table>
</p>

<p><li>Select OnDisconnection from the Procedures drop-down list and add the
following line to the <i>AddinInstance_OnDisconnection</i> procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
MsgBox &quot;Add-in disconnected&quot;
</pre>
</td></tr>
</table>
</p>

<p><li>From the Project menu, click Project1 Properties. Type <b>
BasicCOMAddIn</b> in the Project Name text box and then click OK.</li></p>

<p>
<A HREF="javascript:fullSize('G13ovb06x.htm')"> <img src="images/G13ovb06.JPG" width=404 height=364 border=0 ALT = "Click to view at full size."> </A>
</p>


<p>The project name represents the first part of the programmatic identifier (ProgID)
of your COM add-in. The ProgID lets you uniquely identify your COM add-in.</p>
</ol>

<p><div class="note"><blockquote><b>NOTE</b><HR>
Programmatic identifiers are described in the <a href="ch14a.htm">next chapter</a>.</blockquote></div></p>

<ol>
<p><li value="11">On the File menu, click Save Project and save the project files under
the names shown in the following table. Note that Visual Basic assigns the appropriate
extension to each file.</li></p>

<table cellpadding=5 width="95%">
<tr><th valign="top">File</th> 
<th valign="top">File name</th> 
<th valign="top">Extension</th></tr>

<tr><td valign="top">Add-in Designer</td> <td valign="top">ConnectWord</td> <td valign="top">.dsr</td></tr>

<tr><td valign="top">Project</td> <td valign="top">BasicCOMAddIn</td> <td valign="top">.vbp</td></tr>
</table>

</ol>

<A NAME="470"><h2><i>Test the COM Add-In</i></h2></A>
<p>The next step is for you to test your COM add-in.</p>

<ol>
<p><li>Click the File menu, and then click Make BasicCOMAddIn<b>.</b>dll<i>.</i>
In the Make Project dialog box, click OK.</li></p>

<p>When you compile the .dll, it's automatically registered in the Windows system
registry. Because of the Add-in Designer, the add-in is registered where the Office application (such as Word) will know to load
it.</p> 
 
<p><li>Start Word. Click Customize on the Tools menu to display the Customize
dialog box. Then click the Commands tab and select Tools from the Categories list box.
Scroll down the Commands list box adjacent to the Categories list box until the COM Add-Ins command is in view.</li></p>

<p>In Word, the COM Add-Ins command is listed at the top of the Commands list box.
However, the COM Add-Ins command is not listed in the same position in the Commands
list box of every Office application, so you'll then need to scroll down the
list.</p>
 
<p><li>Click COM Add-Ins and drag the command to the right end of the menu bar
in Word, beside the Help menu.</li></p>

<p>
<img src="images/G13ovb07.JPG" width=372 height=337 border=0>


<p><li>Click the COM Add-Ins command to open the COM Add-Ins dialog box. Select
the Microsoft Office Basic COM Add-In for Word check box, and then click OK.</li></p>

<p>
<img src="images/G13ovb08.JPG" width=383 height=277 border=0>


<p>The following message box appears. Click OK to dismiss it.</p>

<p>
<img src="images/G13ovb09.JPG" width=203 height=100 border=0>


<p><li>Click COM Add-Ins again. Clear the Microsoft Office Basic COM Add-In for
Word check box, and then click OK. Visual Basic displays a message box with the text,
&quot;Add-in disconnected.&quot; After you click OK on the message box, the add-in is
disconnected.</li></p>
</ol>

<p>The COM add-in you created is now compiled as a .dll file, registered, and available
on your computer. When your add-in is fully developed and debugged, you'll need to
<i>package</i> and <i>deploy</i> it&#8212;that is, make it available to other users. The
last section of this chapter describes how to deploy your COM add-in so that you can
register and install it on any user's machine.</p>


</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






