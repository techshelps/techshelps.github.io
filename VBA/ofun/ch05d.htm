<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>The Document Open Event</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch05c.htm" , "ch05e.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="173"><h1>The Document Open Event</h1></A>
<p>The procedure for the document Open event is called <i>after</i> you open a
document. Word, Excel, or PowerPoint will load an existing document, display it, and
then, if it's set up in your program, call the document Open event. This event
can't be cancelled. You can open documents with the Open command on the File menu
or on the Standard toolbar. The <i>Open</i> method on the <i>Documents, Workbooks</i>,
and <i>Presentations</i> collection objects, described in the 
<a href="ch04a.htm#117">previous chapter</a>, also
triggers the <i>Open</i> event procedure.</p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Sub App_DocumentOpen(ByVal Doc As Document)

Sub App_WorkbookOpen(ByVal Wb As Workbook)

Sub App_ PresentationOpen(ByVal Pres As Presentation)
</pre>
</td></tr>
</table>
</p>

<p>There are no differences in how the Open event in each application is defined or
when it's called. In all three applications, the application opens the document
first and then calls the event procedure.</p>

<A NAME="174"><h2>Example Scenario</h2></A>
<p>In the following examples for Word, Excel, and PowerPoint, the application retrieves
the opened document's file extension in order to evaluate the opened document's
file format type. You may need to know the opened document's file format in order
to set specific custom menu or toolbar commands or to set document properties.</p>

<p>For each event procedure example to function properly, you need to add the following
custom function to the class module where the document <i>Open</i> event procedure is
defined for each application. The custom function <i>GetFileExtension</i> is described
in Chapter 4 in the section entitled &quot;<A HREF="ch04b.htm#124">Parse Filenames</A>.&quot; The function takes a
filename as an argument into the function and returns just the extension of the
filename.</p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Function GetFileExtension(sFileName As String) As String
    Dim iPosn As Integer
    iPosn = InStrRev(sFileName, &quot;.&quot;)
    GetFileExtension = Mid$(sFileName, iPosn + 1)
End Function
</pre>
</td></tr>
</table>
</p>

<p>In all three following examples, the Name property of the <i>Document, Workbook</i>,
and <i>Presentation</i> object in Word, Excel, and PowerPoint, respectively, returns the document's filename. If the document isn't newly created and is
a file on disk, the Name property will contain an extension. In the case here, the
opened document will contain a file extension. The expression in the Select Case
statement evaluates the upper case of the extension returned by the custom <i>
GetFileExtension</i> function. </p>

<p>Each application prints the file format type to the Immediate window in the Visual
Basic Editor. Note that the Select Case statement in each event procedure doesn't
cover all possible file format types in each application. The examples only parse for
the most common format types.</p>

<A NAME="175"><h2><i>Set Up the DocumentOpen Event in Word</i></h2></A>
<p><div class="sidebar"><blockquote><p><i>Before following the steps below, make sure you complete steps 1, 2, and 4 in the
section &quot;<A HREF="ch05b.htm#167">Set Up an Event Procedure</A>&quot; after the Quick Guide.</i></p></blockquote></div>
</p>

<ol>
<p><li> In Word, start the Visual Basic Editor and then double-click the Class1
project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select
DocumentOpen from the Procedures drop-down list in the class module. In the <i>
DocumentOpen</i> event procedure, add the following code:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_DocumentOpen(ByVal Doc As Document)
    Select Case UCase$(GetFileExtension(Doc.Name))
        Case &quot;HTM&quot;, &quot;HTML&quot;
            Debug.Print &quot;HTML file&quot;
        Case &quot;DOC&quot;
            Debug.Print &quot;Document file&quot;
        Case &quot;DOT&quot;
            Debug.Print &quot;Document template file&quot;
        Case &quot;TXT&quot;
            Debug.Print &quot;Text file&quot;
    End Select
End Sub
</pre>
</td></tr>
</table>
</p>

<p><li> In the Project Explorer, double-click the Module1 project item to make it
the active window, place the cursor in the <i>InitEvents</i> procedure, and press
<font size="-2">F5</font>.</li></p>

<p><li> Switch to Word and click the Open button on the Standard toolbar.</li></p>

<p><li> Open a file and then switch back to the Visual Basic Editor. If the file
you open is a Word document, template, HTML, or text file, the extension of the file is
printed in the Immediate window.</li></p>
</ol>

<A NAME="176"><h2><i>Set Up the WorkbookOpen Event in Excel</i></h2></A>
<p><div class="sidebar"><blockquote><p><i>Before following the steps below, make sure you complete steps 1, 2, and 4 in the
section &quot;<A HREF="ch05b.htm#167">Set Up an Event Procedure</A>&quot; after the Quick Guide.</i></p></blockquote></div>
</p>

<ol>
<p><li> In Excel, start the Visual Basic Editor and then double-click the Class1
project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select
WorkbookOpen from the Procedures drop-down list in the class module. In the <i>
WorkbookOpen</i> event procedure, add the following code:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_WorkbookOpen(ByVal Wb As Workbook)
    Select Case UCase$(GetFileExtension(Wb.Name))
        Case &quot;HTM&quot;, &quot;HTML&quot;
            Debug.Print &quot;HTML file&quot;
        Case &quot;XLS&quot;
            Debug.Print &quot;Workbook file&quot;
        Case &quot;XLT&quot;
            Debug.Print &quot;Workbook template file&quot;
        Case &quot;TXT&quot;
            Debug.Print &quot;Text file&quot;
    End Select
End Sub
</pre>
</td></tr>
</table>
</p>

<p><li> In the Project Explorer, double-click the Module1 project item to make it
the active window, place the cursor in the <i>InitEvents</i> procedure, and press
<font size="-2">F5</font>.</li></p>

<p><li> Switch to Excel and click the Open button on the Standard toolbar.</li></p>

<p><li> Open a file and then switch back to the Visual Basic Editor. If the file
you open is an Excel workbook, template, HTML, or text file, the extension of the file
is printed in the Immediate window.</li></p>
</ol>

<A NAME="177"><h2><i>Set Up the PresentationOpen Event in PowerPoint</i></h2></A>
<p><div class="sidebar"><blockquote><p><i>Before following the steps below, make sure you complete steps 1, 2, and 4 in the
section &quot;<A HREF="ch05b.htm#167">Set Up an Event Procedure</A>&quot; after the Quick Guide.</i></p></blockquote></div>
</p>

<ol>
<p><li> In PowerPoint, start the Visual Basic Editor and then double-click the
Class1 project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select
PresentationOpen from the Procedures drop-down list in the class module. In the <i>
PresentationOpen</i> event procedure, add the following code:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_PresentationOpen(ByVal <b>Pres</b> As Presentation)
    Select Case UCase$(GetFileExtension(<b>Pres</b>.Name))
        Case &quot;HTM&quot;, &quot;HTML&quot;
            Debug.Print &quot;HTML file&quot;
        Case &quot;PPT&quot;
            Debug.Print &quot;Presentation file&quot;
        Case &quot;POT&quot;
            Debug.Print &quot;Presentation template file&quot;
    End Select
End Sub
</pre>
</td></tr>
</table>
</p>

<p><li> In the Project Explorer, double-click the Module1 project item to make it
the active window, place the cursor in the <i>InitEvents</i> procedure, and press
<font size="-2">F5</font>.</li></p>

<p><li> Switch to PowerPoint and click the Open button on the Standard
toolbar.</li></p>

<p><li> Open a file and then switch back to the Visual Basic Editor.</li></p>


<p>If the file you open is a PowerPoint presentation, template, or HTML, the extension
of the file is printed in the Immediate window.</p>
</ol>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






