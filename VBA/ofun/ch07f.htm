<HTML>
<HEAD>
<TITLE>Disconnecting a Variable from an Object</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch07e.htm" , "ch07g.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="270"><h1>Disconnecting a Variable from an Object</h1></A>
<p>When you use the <i>CreateObject</i> or <i>GetObject</i> function or the
<i>New</i> keyword to assign a variable to an object, the object resides in your
computer system's memory. Depending on your program's complexity, releasing
certain objects from memory may speed up other parts of your program. To disconnect an
object variable from an object in memory that you no longer need, set the object
variable to the keyword <i>Nothing</i>. Once an object variable is set to <i>
Nothing,</i> it no longer references an actual object in memory. If no other object
variable refers to that object, it's removed from your system's memory. </p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
If the object variable is declared as a procedure-level variable, Visual
Basic will automatically set it to <i>Nothing</i> once Visual Basic finishes executing
the procedure containing the procedure-level variable. Explicitly setting object
variables to <i>Nothing</i> is common for public or module-level object variables.
</blockquote></div>
</p>

<p>All Office applications provide, as a member of the respective <i>Application</i>
object, a <i>Quit</i> method that closes the application whether it's visible or
not. Running the <i>Quit</i> method in Visual Basic is the same as clicking Exit on the
File menu in an Office application. In some cases, running the <i>Quit</i> method
doesn't release the reference to the actual object until you explicitly set the
object variable to <i>Nothing</i> or until the object variable goes out of scope.</p>

<A NAME="271"><h2><i>Quit Excel Using Visual Basic Code</i></h2></A>
<ol>
<p><li> Exit any running versions of Excel without saving changes.</li></p>

<p><li> In the <i>UsingGetObject</i> procedure you just created in Word's
Visual Basic Editor, add the following message box statement and With&#8230End block
after the last line of the procedure and just before the <font face="courier">End Sub</font> statement:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
MsgBox &quot;Excel will now be closed.&quot;
With m_wbBook1.Application
    .DisplayAlerts = False
    .Quit
End With
</pre>
</td></tr>
</table>
</p>

<p>The DisplayAlerts property of the Excel <i>Application</i> object indicates whether
Excel displays a dialog box asking if you want to save changes (or any other alert
dialog box Excel normally displays). If DisplayAlerts is set to False, no dialog boxes
are displayed. Thus, when Visual Basic executes the <i>Quit</i> method of the Excel <i>
Application</i> object, Excel won't display a dialog box asking whether you want to
save changes to the workbook.</p>

<p><li> Place the cursor in the procedure and press <font size="-2">F5</font> to run it. When you run
the <i>UsingGetObject</i> procedure, Excel starts and the file, Book1.xls, is
activated.</li></p>

<p><li> Switch to Word, but do nothing to Excel. Once Book1.xls is displayed,
Word displays a message box indicating that Excel will now be closed. When you click OK
in the Word message box, Word closes Excel, along with the Book1 workbook.</li></p>
</ol>

</BODY>
</HTML>






