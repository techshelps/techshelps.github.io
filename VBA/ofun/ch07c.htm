<HTML>
<HEAD>
<TITLE>Creating an Instance of an Application</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch07b.htm" , "ch07d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="259"><h1>Creating an Instance of an Application</h1></A>
<p>To work with an application other than the one where you execute your 
Visual Basic code, you must first set an object variable so that it represents the
application you want to use. To do this, you can either create a new instance of the
application or access an existing instance of an application (one that's currently
running). When you start an instance of a Word, Excel, PowerPoint, Access, or Outlook
application by using the <i>CreateObject</i> or <i>GetObject</i> function or the <i>
New</i> keyword, the application window isn't displayed on the screen or the
Windows taskbar.</p>

<A NAME="260"><h2>The Visible Property on the <i>Application</i> Object</h2></A>
<p>Each <i>Application</i> object in Office, with the exception of Outlook,
provides a Visible property that allows you to display the application window after you
create the application. In many Visual Basic for Applications programming scenarios,
you create an <i>Application</i> object first, and then, before displaying the
application window, you manipulate documents that you open or create. Once you finish,
you display the application window with the document or documents. This technique
allows you to make changes without distracting your program's user.</p>

<A NAME="261"><h3>Starting More than One Instance of an Application</h3></A>
<p>As the accompanying table shows, when you use <i>CreateObject</i> or the
<i>New</i> keyword to create an instance of an Office application, Visual Basic creates
a new instance of the application on the system for all applications except PowerPoint
and Outlook. This means that if Word or Excel is already running and visible, <i>
CreateObject</i> or the <i>New</i> keyword actually loads another instance of Word or
Excel. For example, two Windows processes will have the Word executable loaded: the one
visible and the other started using <i>CreateObject</i> or the <i>New</i> keyword. If
you exit the visible instance, the other instance of Word remains. You must explicitly
close the instance created by your code.</p>

<p>
<table valign="top" cellpadding="5" width="95%">
<tr>
<th>Application</th>
<th>New instance created when using <i>CreateObject</i> or <i>New</i> keyword</th>
</tr>
<tr>
<td valign="top">Access</td>
<td valign="top">Yes</td>
</tr>
<tr>
<td valign="top">Excel</td>
<td valign="top">Yes</td>
</tr>
<tr>
<td valign="top">Outlook</td>
<td valign="top">No</td>
</tr>
<tr>
<td valign="top">PowerPoint</td>
<td valign="top">No</td>
</tr>
<tr>
<td valign="top">Word</td>
<td valign="top">Yes</td>
</tr>
</table>
</p>

<p>In the case of PowerPoint and Outlook, a new instance isn't created and <i>
CreateObject</i> and the <i>New</i> keyword attaches to an existing instance of these
applications (if either one is running).</p>

<p>
<div class="note"><blockquote>
<b>NOTE</b><hr>
When you use the <i>CreateObject</i> function to create a new
instance of an <i>Application</i> object, you assign the <i>Application</i> object
returned by the function to an object variable. In this case, and in the case where the
<i>New</i> keyword is used in a variable declaration to create a new instance of an <i>
Application</i> object, you need to declare the object variable at either a procedure,
module, or public level. For example, as described in <A HREF="ch02a.htm">Chapter 2</A>, if the object variable
is declared at a module or public level, the application associated with the <i>
Application</i> object remains loaded even after the procedure that creates the
application is executed.</blockquote></div>
</p>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






