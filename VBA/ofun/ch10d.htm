<HTML>
<HEAD>
<TITLE>The Right-Click Event</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch10c.htm" , "ch10e.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="382"><h1>The Right-Click Event</h1></A>
<p>Microsoft Windows 95 introduced the widespread use of right-clicking. You can
right-click almost anything in Windows and most applications. When you right-click, you
see a shortcut menu containing a list of items to select. Usually, the list contains
the most common actions that pertain to the object you right-clicked. When you
right-click content in a Word, Excel, or PowerPoint document, you do see a shortcut
menu; what items it lists depends on the content below the right click.</p>

<p>The document's content below the right click is viewed as a selection in Word,
Excel, and PowerPoint. You should note that the right-click event occurs only when any
part of a document's content is right-clicked. It doesn't happen when you
right-click a command bar. In Word, Excel, and PowerPoint, the right-click event occurs
before the default right-click action, which is to display a built-in shortcut
menu. </p>

<p>In all three applications, as the use of the word &quot;Before&quot; in the name of the
event implies, you can cancel the display of the default shortcut menu and, therefore,
you can display your own custom shortcut menu for any document content. The chart below
shows the different names used for the right-click event procedure.</p> 

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Office Application  </th>
<th>Right-click event procedure  </th></tr>
<tr>
<td valign="top">Word  </td>
<td valign="top">WindowBeforeRightClick  </td></tr>
<tr>
<td valign="top">Excel   </td>
<td valign="top">SheetBeforeRightClick  </td></tr>
<tr>
<td valign="top">PowerPoint  </td>
<td valign="top">WindowBeforeRightClick  </td></tr>
</table></p>


<A NAME="383"><h2>Differences Between Word, Excel, and PowerPoint</h2></A>
<p>The main difference between the right-click events in Word, Excel, and PowerPoint is
the argument that's passed into the event procedure. In Word and PowerPoint, two
arguments&#8212;an instance of the <i>Selection</i> object and the Cancel
Boolean&#8212;are passed to the event procedure in each application. Using the <i>Selection</i> object, you can determine what type of object is below the right
click and display a specific custom shortcut. The selection may be text or a shape, for
example. In Excel, three arguments are passed into the right-click event. The second
argument is always a <i>Range</i> object.</p>

<p>The second argument in Word and PowerPoint and the third argument in Excel is the
Cancel Boolean. You can set the Cancel Boolean to True if you want to cancel the
display of the built-in, default shortcut menu. In the following example, a custom
shortcut menu is displayed and the display of the built-in shortcut menu is
canceled.</p>

<A NAME="384"><h2><i>Display a Custom Shortcut Menu Based on the Selection Beneath a Right Click</i></h2></A>

<p>The most common scenario that the right-click event allows you to handle is the
display of a custom shortcut menu based on the content that the user right-clicked. In
the following sections, you'll create a custom shortcut menu in Word, Excel, and
PowerPoint. The custom shortcut menu that's displayed will be based on the type of
the current selection.</p>

<p>For each procedure under the descriptions of the right-click event in Word, Excel,
and PowerPoint, you need to complete the following steps first. The code in the
following steps is generic, because it uses the <i>CommandBar</i> object model and,
hence, works identically in Word, Excel, and PowerPoint. Note that if you started with
the steps from the sections &quot;<A HREF="ch10b.htm#349">The Selection Change Event</A>&quot; or &quot;<a href="ch10c.htm#369">The Double-Click Event</a>,&quot; you've most likely completed the first two steps
already.</p>

<ol>
<p><li> In whichever application you're working with (Word, Excel, or
PowerPoint), display the Visual Basic Editor and insert a new class module by clicking
Class on the Insert menu. Add the following declaration.</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Public WithEvents App As Application
</pre>
</td></tr>
</table>
</p>

<p><li> Insert a new standard code module by clicking Module on the Insert menu.
Add the following declaration and procedure to the top of the module:</li></p>


<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Dim AppEvents As New Class1

Sub InitEvents()
    Set AppEvents.App = Application
End Sub
</pre>
</td></tr>
</table>
</p>


<p>The class name &quot;Class1&quot; stated just after the <i>New</i> keyword in the
declaration statement should be the name of the class module you added in the previous
step. If you've changed the class module's name, you must also change the class
name after the <i>New</i> keyword in the above declaration.</p>


<p><li> After the <i>InitEvents</i> procedure, add the following procedure:</li></p>


<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Sub InsertShortcut()
    Dim cmbNewShortcut As CommandBar

    Set cmbNewShortcut = Application _
        .CommandBars.Add(Name:=&quot;NewShortcut&quot;, _
        Position:=msoBarPopup, Temporary:=True)
    With cmbNewShortcut.Controls
        With .Add
            .Caption = &quot;&amp;ShortcutItem 1&quot;
        End With
        With .Add
            .Caption = &quot;&amp;ShortcutItem 2&quot;
        End With
    End With
End Sub
</pre>
</td></tr>
</table>
</p>

<p>This procedure is copied from the procedure <i>InsertShortcutMenu</i> from the
&quot;<A HREF="ch11d.htm#423">Add a Shortcut Menu</A>&quot; section in the next chapter. The procedure adds a
custom shortcut menu named NewShortcut to the command bar collection. The custom
shortcut menu contains two menu items. You can use this procedure in all
applications.</p>

<p>In the Add method of the <i>CommandBars</i> collection object, you specify the <i>
Position</i> and the <i>Temporary</i> arguments. As discussed in the <a href="ch11a.htm">next chapter</a>,
which describes working with the CommandBar objects, methods and properties, you need
to specify the <i>Position</i> argument in order to create a shortcut menu. Setting the
<i>Temporary</i> argument to True indicates that the shortcut menu will be removed when
the Office application is exited.</p>


<p><li> Place the cursor in the procedure <i>InsertShortcut</i> and press <font size="-2">F5</font> to
insert the custom shortcut menu.</li></p>
</ol>

<p>Now you're set up for either Word, Excel, or PowerPoint to display a custom
shortcut menu, based on the selection. Once you complete the steps under the following
Word, Excel, and PowerPoint sections, a right click will result in the display of a
custom shortcut menu rather than the application's built-in, default shortcut
menu.</p>

<A NAME="385"><h2>Word</h2></A>
<p>The right-click event in Word triggers whenever you right click any part of a
document in the active window.</p>

<A NAME="386"><h2><i>Set Up the WindowBeforeRightClick Event in Word</i></h2></A>
<p>Before completing the following steps, complete the steps in the section 
&quot;<A HREF="ch10d.htm#384">Display a Custom Shortcut Menu Based on the Selection Beneath a Right Click</A>.&quot;</p>

<ol>
<p><li> In the Visual Basic Editor started from Word, double-click the Class1
project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select <i>
WindowBeforeRightClick</i> from the Procedures drop-down list in the class module. In
the <i>WindowBeforeRightClick</i> event procedure, add the following code so that the
procedure appears as follows:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_WindowBeforeRightClick( _
    ByVal Sel As Selection, Cancel As Boolean)
    
    Application.CommandBars(&quot;NewShortcut&quot;) _
       .ShowPopup
    Cancel = True
End Sub
</pre>
</td></tr>
</table>
</p>

<p><li> Double-click the standard code module project item, Module1, in the
Project Explorer to make it the active window. Place the cursor in the procedure <i>
InitEvents</i> and press <font size="-5">F5</font> to run the project.</li></p>

<p><li> Switch back to Word and right-click in the active document. You'll
see the custom shortcut menu. You can extend the <i>WindowBeforeRightClick</i> event
procedure to filter the content type in the selection beneath the right click and
display shortcut menus based on the content.</li></p>
</ol>

<A NAME="387"><h2>Excel</h2></A>
<p>The right-click event in Excel fires when you right-click a range of cells on the
active worksheet. In most cases, the range contains only one cell. The right-click
event in Excel does not provide a way for you to determine if the user has
right-clicked a shape or any other object that floats on top of the cells in a
worksheet.</p>

<A NAME="388"><h2><i>Set Up the SheetBeforeRightClick Event in Excel</i></h2></A>
<p>Before completing the following steps, complete the steps in the section &quot;<A HREF="ch10d.htm#384">Display a Custom Shortcut Menu Based on the Selection Beneath a Right Click</A>.&quot;</p>

<ol>
<p><li> In the Visual Basic Editor started from Excel, double-click the Class1
project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select <i>
SheetBefore-RightClick</i> from the Procedures drop-down list in the class module.</li></p>

<p>In the <i>SheetBeforeRightClick</i> event procedure, add the following code so that
the procedure appears as follows:</p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_SheetBeforeRightClick( _
    ByVal Sh As Object, ByVal Target As Range, _
    Cancel As Boolean)
    
    Application.CommandBars(&quot;NewShortcut&quot;) _
       .ShowPopup
    Cancel = True
End Sub
</pre>
</td></tr>
</table>
</p>

<p><li> Double-click the standard code module project item, Module1, in the
Project Explorer to make it the active window. Place the cursor in the procedure <i>
InitEvents</i> and press <font size="-2">F5</font> to run the project.</li></p>

<p><li> Switch back to Excel and right-click in the active document. You'll
see the custom shortcut menu. You can extend the <i>SheetBeforeRightClick</i> event
procedure to filter the content in the target range and display shortcut menus based on
the content.</li></p>
</ol>

<A NAME="389"><h2>PowerPoint</h2></A>
<p>The right-click event procedure is called when you right-click a shape, text, or a
slide in any view, including a master view and Notes Page view. This event is triggered
after the right mouse button returns to the up position after 
being pressed down. The cancel behavior prevents (cancels) only the context menu from
appearing.</p>

<A NAME="390"><h2><i>Set Up the WindowBeforeRightClick Event in PowerPoint</i></h2></A>
<p>Before completing the following steps, complete the steps in the section
&quot;<A HREF="ch10d.htm#384">Display a Custom Shortcut Menu Based on the Selection Beneath a Right Click</A>.&quot;</p>

<ol>
<p><li> In the Visual Basic Editor started from PowerPoint, double-click the
Class1 project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select <i>
WindowBeforeRightClick</i> from the Procedures drop-down list in the class module. In
the <i>WindowBeforeRightClick</i> event procedure, add the following code so that the
procedure appears as follows:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_WindowBeforeRightClick( _
    ByVal Sel As Selection, Cancel As Boolean)

    Application.CommandBars(&quot;NewShortcut&quot;) _
       .ShowPopup
    Cancel = True
End Sub
</pre>
</td></tr>
</table>
</p>

<p><li> Double-click the standard code module project item, Module1, in the
Project Explorer to make it the active window. Place the cursor in the procedure <i>
InitEvents</i> and press <font size="-2">F5</font> to run the project.</li></p>

<p><li> Switch back to PowerPoint and right-click in the active document.</li></p>


<p>You'll see the custom shortcut menu. You can extend the <i>
Window-BeforeRightClick</i> event procedure to filter the content type in the selection
beneath the right click and display shortcut menus based on the content.</p>
</ol>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






