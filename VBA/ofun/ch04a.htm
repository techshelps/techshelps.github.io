<html>
<head>
<title>Chapter 4 -- Creating and Managing Files and Documents</title>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</head>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch03j.htm" , "ch04b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>



<font size="+3">Chapter 4</font> 


<A NAME="117"><h1>Creating and Managing Files and Documents</h1></A>
<p>
<div class="sidebar"><blockquote>
<A NAME="118"><h3><i>Chapter Objectives</i></h3></A><b>Estimated time: 90 minutes</b>

<ul>

<p><li>Work with various coding techniques used to find files to open and to find
folders to save files to. Use the same techniques to parse fully qualified filenames to
retrieve the path or filename.</li></p>

<p><li>Display system-defined dialog boxes in which users select a file to open or
a folder to save a file to. Customize the Microsoft Office File dialog box to make
searching for files and folders easier.</li></p>

<p><li>Work with the programmatic equivalents of the following commands: New, Open,
Close, Save, Save As, Save as Web Page, Print, and Properties.</li></p>

<p><li>Create and open Microsoft Word, Microsoft Excel, and Microsoft PowerPoint
files. Create Microsoft Outlook folder items such as e-mail and appointments.</li></p>

<p><li>Save Word, Excel, and PowerPoint documents in HTML format for viewing in a
Web browser.</li></p>

<p><li>Set and retrieve properties of a document, such as its Author and
Title.</li></p>

</ul>

</blockquote></div>
</p>

<p>Before you can insert or manipulate content in applications like Word, 
Excel, PowerPoint, or Microsoft Access, you need to create a new document or open an
existing one. When you've finished inserting and manipulating content, you need to
determine where the document is going to reside. Before saving a document, you might
want to add properties that distinguish it from others or help categorize it in a set
of documents. A server, for example, may have a document library that organizes
information about documents, manages them, and provides functionality such as version
control and backup facilities.</p>

<p>The functionality provided by the commands on the File menus in Word, Excel,
PowerPoint, and Access help you create and manage documents. The File menu is used to
create new documents and open existing ones; to save, close, and print documents; and
to set document properties. This chapter describes the programmatic equivalents of the
following commands: New, Open, Close, Save, Save As, Save as Web Page, Print, and
Properties.</p>

<p>
<img src="images/G04ovb01.JPG" width=152 height=303 border="0">
</p>


<p>This chapter also discusses the programmatic equivalents of locating where a
document is situated or finding a folder to store a document&#8212;similar to the
functionality provided by the New, Open, and Save As dialog boxes. The next chapter,
&quot;<A HREF="ch05a.htm#163">Managing Documents With Events</A>,&quot; describes how to set up event procedures
that are triggered when the actions new, open, save, close, and print occur either
through Microsoft Visual Basic code or from the user clicking a File menu command.</p>

<p>
<div class="sidebar"><blockquote>
<b>Quick Guide</b>

<p>This chapter has three main parts. Because you have to specify where a
document is or where it is to be located in order to open or save it, the first part
describes how to write Visual Basic code that allows you to retrieve specific file
folders, determine if a file or folder exists, and parse filenames to retrieve.</p> 

<p>The second part describes the methods and properties associated with the new, open,
save, close, and print actions in Word, Excel, and PowerPoint. It also explains the use
of the new, save, close, and print actions with an Outlook mail item. The chapter
doesn't discuss the use of these actions in Access (with the exception of Open)
because they depend on the data access object library you work with (Microsoft DAO
Object Library or Microsoft ActiveX Data Objects Library).</p>

<p>The final part discusses how to set and retrieve built-in document properties such
as Author. It also explains custom document properties, which allow you to define your
own document properties that you can use, for example, in document management systems.
The following table provides a quick reference to the methods and properties discussed
in the chapter.</p>

<p>
	<table valign="top" cellpadding="5" width="95%">

		<tr>
			<th>Task</th>
			<th>Description</th>
		</tr>

		<tr>
			<td valign="top">Creating a new document</td>
			<td valign="top">Use the <i>Add</i> method on the following document 
collections in Word, Excel, and PowerPoint: <i>Documents, Workbooks</i>, 
and <i>Presentations</i>.</td>
		</tr>

		<tr>
			<td valign="top">Opening an existing document</td>
			<td valign="top">Use the <i>Open</i> method on the following collection 
objects: <i>Documents, Workbooks,</i> and <i>Presentations</i>. 
The filename of the file to be opened is passed as the first 
argument in the <i>Open</i> method in each application.</td>
		</tr>

		<tr>
			<td valign="top">Save a document to a new location</td>
			<td valign="top">To save a new document that has no file path or 
change the saved location of an existing (opened) 
document, use the <i>SaveAs</i> method. You specify the 
filename as the first argument and the file format 
type as the second argument in each application.</td>
		</tr>

		<tr>
			<td valign="top">Close a document loaded in an application </td>
			<td valign="top">Use the <i>Close</i> method on the document object 
<i>(Document,</i> <i>Workbook,</i> and <i>Presentation)</i> 
in each application. Word and Excel also provide the 
<i>Close</i> method on the <i>Documents</i> and <i>Workbooks</i> 
collection object in order to close all opened documents. The 
<i>Close</i> method on the collection object is equivalent to 
clicking the Close All command on the File menu. The Close All 
command is displayed only when you hold down the Shift key 
and click the File menu.</td>
		</tr>

		<tr>
			<td valign="top">Print a document</td>
			<td valign="top">Use the <i>PrintOut</i> method on the document object 
<i>(Document, Workbook,</i> and <i>Presentation)</i> in each 
application. PowerPoint provides a <i>PrintOptions</i> 
object in addition to the <i>PrintOut</i> method that 
provides functionality equivalent to the <i>PrintOut</i> 
method in Word and Excel. You can access the 
<i>PrintOptions</i> object from the <i>Presentation</i> object.</td>
		</tr>
		
		<tr>
			<td valign="top">Retrieve built-in document properties 
in Word, Excel, or PowerPoint </td>
			<td valign="top">Use the BuiltInDocumentProperties property of 
the <i>Document</i> object in Word, the <i>Workbook</i> object 
in Excel, or the <i>Presentation</i> object in PowerPoint 
to specify the property value you want. For 
example:
<p>
<table cellpadding=5 width="95%"><tr><td><pre>
sProperty = ActivePresentation.  _ 
   BuiltInDocumentProperties(&quot;Author&quot;)
</pre></td></tr></table>
</p></td>
		</tr>

		<tr>
			<td valign="top">Set document properties using Visual Basic code</td>			
			<td valign="top">Assign the property values to the appropriate property 
index in the <i>BuiltInDocumentProperties</i> collection. 
For example:
<p>
<table cellpadding=5 width="95%"><tr><td><pre>
ActiveDocument _ 
  .BuiltInDocumentProperties(&quot;Company&quot;) _ 
  = &quot;My Company&quot;
</pre></td></tr></table>
</p>
			</td>
		</tr>

		<tr>
			<td valign="top">Locate, create, remove, and copy files and folders </td>
			<td valign="top">You can use the combination of Visual Basic for 
Applications built-in functions, Windows application 
programming interfaces (APIs), and functionality in 
the Microsoft Scripting Runtime object library to find 
files and folders and to parse filenames.</td>
		</tr>

		<tr>
			<td valign="top">Parse filenames</td>
			<td valign="top">Use Visual Basic for Applications built-in functions 
that manipulate text strings. Built-in text manipulation 
functions include <i>Left$, Right$, Mid$, Trim$, 
Len</i>, and <i>InStr</i>.</td>
		</tr>
		
	</table>
</p>

</blockquote></div>
</p>

<p>The code you use to locate, create, remove, and copy file folders, as well as to
parse filenames, involves a number of different functions. The following section
describes them.</p>


</BODY>
</HTML>






