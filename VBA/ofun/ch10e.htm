<HTML>
<HEAD>
<TITLE>The Window Activate and Deactivate Events</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch10d.htm" , "ch10f.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="391"><h1>The Window Activate and Deactivate Events</h1></A>

<p>When you switch between windows in Windows, one window becomes the active window
while the window you're moving away from becomes inactive. You can see the
difference by the change in color of the window's title bar. When you switch
between documents in Word, Excel, and PowerPoint, the same behavior occurs. Knowing when a document window becomes active or inactive allows
you to develop solutions that address scenarios like the following:</p>

<ul>
<p><li>Start or stop text-to-speech document readers based on when a document
window is activated or deactivated.</li></p>

<p><li>Update command bar customizations to reflect the current selection in the
active window.</li></p>

<p><li>Show or hide components. This is similar to the way Office shows and hides
the Office Assistant when you navigate to and from an Office application or a document
window.</li></p>
</ul>

<A NAME="392"><h2>Differences Between Word, Excel, and PowerPoint</h2></A>
<p>The names of the window activate and deactivate events are the same in Word, Excel,
and PowerPoint: WindowActivate and WindowDeactivate. Like the other events described in
this chapter, they apply at the application level, so you can determine when any
document window becomes active or inactive. In all three applications, two arguments
are passed to each event. The first is the document in the window that's being
activated or deactivated, and the second is the document window.</p> 

<p>The main difference between Word, Excel, and PowerPoint is that in Word and PowerPoint,
when you navigate to and from a window that doesn't belong to the application, the
window activate and deactivate events will be triggered for the application's
document windows. In Excel, the window activate and deactivate events will be triggered
only when you navigate between Excel document windows.</p>

<p>If you navigate from an Excel document window to Notepad, for example, the window
deactivate event doesn't get triggered. Conversely, navigating from Notepad to an
Excel document window doesn't trigger the window activate event. When you navigate
to and from Notepad to a document window in Word or PowerPoint, however, the window
activate and deactivate events trigger each time a document window becomes active and
inactive respectively.</p>

<A NAME="393"><h2>Word</h2></A>
<p>When you switch between document windows in Word, the selection change event
doesn't get triggered. Since each window in Word maintains its own selection, as in
PowerPoint, the selection doesn't change when you switch between document windows.
Thus, you use the window activate event to determine when the active document window has changed and, therefore, to determine what the active selection is in order to update any command bar
customizations. In the following steps, the selection change event procedure is
explicitly called from the window activate event so that the same code 
in the selection change event procedure doesn't have to be repeated in the window activate event. This example continues the scenario of updating 
custom command bar controls that was started with the selection change event procedure
at the beginning of this chapter.</p>

<A NAME="394"><h3>When the Window Activate and Deactivate Events Trigger</h3></A>

<ul>
<p><li>Navigating between Word document windows.</li></p>

<p><li>Navigating between a Word document window and a window that doesn't
belong to Word. When you navigate from a document window to another window such as
Notepad, the window deactivate event fires for the Word document window only. When you
navigate back to the Word document window, the window activate event fires.</li></p>
</ul>

<A NAME="395"><h3>When the Window Activate and Deactivate Events Do <i>Not</i> Trigger</h3></A>


<ul>
<p><li>Navigating to and from a document to a mode-less balloon displayed by the
Office Assistant. If you press <font size="-2">F1</font> while in Word, Excel, or PowerPoint, you see the
Office Assistant with a balloon that allows you to enter a question. The balloon in
this case is mode-less, because you can navigate to and from the Office Assistant's
balloon without having to click anything in it.</li></p>
</ul>

<A NAME="396"><h2><i>Set Up the WindowActivate Events in Word</i></h2></A>
<p>Before completing the following steps, complete the steps in the section 
&quot;<A HREF="ch10b.htm#352">Update Your Controls Based on a Selection Change</A>&quot; and the Word-specific
steps just after that section.</p>

<ol>
<p><li> In the Visual Basic Editor started from Word, double-click the Class1
project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select <i>
WindowActivate</i> from the Procedures drop-down list in the class module. In the <i>
WindowActivate</i> event procedure, add the following code so that the procedure
appears as follows:</li></p>


<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_WindowActivate( _
    ByVal Doc As Document, ByVal Wn As Window)
    
    App_WindowSelectionChange Wn.Selection
End Sub
</pre>
</td></tr>
</table>
</p>

<p>The window selection change event in Word takes one argument, the <i>Selection</i>
object. In the <i>WindowActivate</i> event procedure, the <i>Wn</i> argument represents the active window. You use the Selection property on
the <i>Wn</i> object to return the active selection object, which is passed to the <i>
WindowSelectionChange</i> event procedure.</p>



<p><li> Double-click the standard code module project item, Module1, in the
Project Explorer to make it the active window. Place the cursor in the procedure <i>
InitEvents</i> and press <font size="-2">F5</font> to run the project.</li></p>

<p><li> Switch back to Word, add some text to the document, add shapes, and
change the style of some of the text to bold.</li></p>

<p><li> Click the document's content, such as the bold text, not-bold
(lightface) text, or a shape.</li></p>

<p><li> Create a new document and insert some content along with more text.
Format some text to bold.</li></p>

<p><li> Switch between the document windows. The selection is maintained between
windows, but the WindowActivate event is called when you switch between windows, and
the custom Bold button still toggles between the up and down (depressed) state and
between enabled and disabled.</li></p>
</ol>

<A NAME="397"><h2>Excel</h2></A>
<p>When you switch between document windows in Excel, the selection change event
doesn't get triggered. Because in Excel each sheet in the window maintains its own
selection, the selection doesn't change when you switch between document windows
and sheets within a window. Thus, you use the window activate event <i>and</i> the
sheet activate event to determine when the active document window and sheet have
changed. With the combination of these two events, you can determine what the active
selection is in order to update any command bar customizations. In the following steps,
the selection change is explicitly called from the window activate and sheet activate
events, so that the same code in the selection change event procedure doesn't have
to be repeated in other event procedures.</p>

<A NAME="398"><h3>When the Window Activate and Deactivate Events Trigger</h3></A>
<ul>
<p><li>Navigating between Excel document windows.</li></p>
</ul>

<A NAME="399"><h3>When the Window Activate and Deactivate Events Do <i>Not</i> Trigger</h3></A>
<ul>
<p><li>Navigating between an Excel document window and a window that doesn't
belong to Excel.</li></p>

<p><li>Navigating to and from a document to a mode-less balloon displayed by the
Office Assistant.</li></p>
</ul>

<A NAME="400"><h2><i>Set Up the WindowActivate Events in Excel</i></h2></A>
<p>Before completing the following steps, complete the steps in the section &quot;<A HREF="ch10b.htm#352">Update Your Controls Based on a Selection Change</A>&quot; and the Excel-specific
steps just after that section.</p>

<ol>
<p><li> In the Visual Basic Editor started from Excel, double-click the Class1
project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select <i>
WindowActivate</i> from the Procedures drop-down list in the class module. In the <i>
WindowActivate</i> event procedure, add the following code so that the procedure
appears as follows:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_WindowActivate( _
    ByVal Wb As Workbook, ByVal Wn As Window)
    
    App_SheetSelectionChange _
        Wn.ActiveSheet, Wn.Selection
End Sub
</pre>
</td></tr>
</table>
</p>

<p>The window selection change event in Excel takes two arguments, the active sheet in
the activated window and the <i>Range</i> object. In the <i>WindowActivate</i> event
procedure, the <i>Wn</i> argument represents the active window. You use the Selection
property on the <i>Wn</i> object to return the object in the active selection, which is
passed to the <i>SheetSelectionChange</i> event procedure.</p>



<p><li> From the Procedures drop-down list in the class module, click <i>
SheetActivate</i> and add the following code to the event procedure so that the
procedure appears as follows:</li></p>


<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_SheetActivate(ByVal Sh As Object)
    If TypeName(Sh) = &quot;Worksheet&quot; Then
    App_SheetSelectionChange _
        Sh, ActiveWindow.Selection
    End If
End Sub
</pre>
</td></tr>
</table>
</p>

<p>In the <i>SheetActivate</i> event procedure, the <i>Sh</i> argument represents the
active sheet in the activated window.</p>



<p><li> Double-click the standard code module project item, Module1, in the
Project Explorer to make it the active window. Place the cursor in the procedure <i>InitEvents</i> and press <font size="-2">F5</font> to run the project.</li></p>

<p><li> Switch back to Excel, add some text to a cell, add shapes, and format the
text to bold in any cell that contains text.</li></p>

<p><li> Click the workbook's content, such as the bold text, not-bold
(lightface) text, or a shape.</li></p>

<p><li> Create a new workbook, and insert some content, along with more text.
Format some text to bold.</li></p>

<p><li> Switch between the document windows and sheets within a window. The
selection is maintained between windows and between sheets. However, the WindowActivate
and the SheetActivate events are called when you switch between windows and sheets,
respectively. The custom Bold button therefore toggles between the up and down
(depressed) state.</li></p>
</ol>

<A NAME="401"><h2>PowerPoint</h2></A>
<p>When you switch between document windows in PowerPoint, the selection change event
procedure doesn't get triggered. Because each window in PowerPoint maintains its
own selection, as in Word, the selection doesn't change when you switch between
document windows. Thus, you use the window activate event procedure to determine when
the active document window has changed and, therefore, to determine what the active
selection is in order to update any command bar customizations. In the following steps,
the selection change is explicitly called from the window activate event procedure so
that the same code in the selection change event procedure doesn't have to be
repeated in the window activate event procedure.</p>

<A NAME="402"><h3>When the Window Activate and Deactivate Events Trigger</h3></A>
<ul>
<p><li>Navigating between PowerPoint document windows.</li></p>

<p><li>Navigating between a PowerPoint document window and a window that
doesn't belong to PowerPoint.</li></p>
</ul>

<A NAME="403"><h3>When the Window Activate and Deactivate Events Do <i>Not</i> Trigger</h3></A>
<ul>
<p><li>Switching to a Slide Show window. The window activate event doesn't get
triggered when you switch to a Slide Show window, and the window deactivate event
doesn't get triggered when a Slide Show window becomes inactive.</li></p>

<p><li>Navigating to and from a document to a mode-less balloon displayed by the
Office Assistant.</li></p>
</ul>

<A NAME="404"><h2><i>Set Up the WindowActivate Events in PowerPoint</i></h2></A>
<p>Before completing the following steps, complete the steps in the section &quot;<A HREF="ch10b.htm#352">Update Your Controls Based on a Selection Change</A>&quot; and the
PowerPoint-specific steps just after that section.</p>

<ol>
<p><li> In the Visual Basic Editor started from PowerPoint, double-click the
Class1 project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list, and then select <i>
WindowActivate</i> from the Procedures drop-down list in the class module. In the <i>
WindowActivate</i> event procedure, add the following code so that the procedure
appears as follows:</li></p>


<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_WindowActivate( _
    ByVal Pres As Presentation, _
    ByVal Wn As DocumentWindow)

    On Error GoTo Error_Handler
    App_WindowSelectionChange Wn.Selection

Error_Handler:
    Debug.Print Err.Description
End Sub
</pre>
</td></tr>
</table>
</p>

<p>The window selection change event in PowerPoint takes one argument, the <i>
Selection</i> object. In the <i>WindowActivate</i> event procedure, the <i>Wn</i>
argument represents the active window. You use the Selection property on the <i>Wn</i>
object to return the active selection object, which is passed to the <i>
WindowSelectionChange</i> event procedure.</p>



<p><li> Double-click the standard code module project item, Module1, in the
Project Explorer to make it the active window. Place the cursor in the procedure <i>
InitEvents</i> and press <font size="-2">F5</font> to run the project.</li></p>

<p><li> Switch back to PowerPoint, add some text to a cell, add shapes, and
format the text to bold in any cell that contains text.</li></p>

<p><li> Create a new presentation and insert some content along with more text.
Format some text to bold.</li></p>

<p><li> Switch between the document windows.</li></p>


<p>The selection is maintained between windows. However, the WindowActivate event is
called when you switch between windows and the custom Bold button still toggles between
the up and down (depressed) state and between enabled and disabled.</p>
</ol>

</BODY>
</HTML>






