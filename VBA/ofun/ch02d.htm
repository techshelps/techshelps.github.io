<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Making Decisions with Condition Blocks</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch02c.htm" , "ch02e.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="60"><h1>Making Decisions with Condition Blocks</h1></A>
<p>In any production process, whether you're producing a report, a car, or
software, you need to decide what materials you need and how to control the flow of
those materials through your personnel, your departments, and your technologies. At
each point in the process, you may gather input from sources like quality control or
computer sensors and select alternative flows for the material. In Visual Basic, you
decide what data you need to work with, create a program flow to work with the data,
gather input from users or data sources on your system or network, and produce a
result.</p>

<p>In many situations, you select a path depending on conditions, just like on a drive
from city to city. When travelling, you choose which roads to take depending on
weather, traffic, scenery, and time. Your Visual Basic program is no different. Once
you decide what conditions determine the flow, your program will follow a logical path
to the final output. Visual Basic provides a number of syntax choices to allow you to
evaluate information and run appropriate code, depending on which criteria and
conditions you specify.</p>

<A NAME="61"><h2><i>Pick an Option with If&#8230;Then&#8230;Else Statements</i></h2></A>
<p>In Visual Basic the most common and simplest condition statements are <i>
If&#8230;Then</i> and <i>If&#8230;Then&#8230;Else.</i> These statements allow you to
evaluate a condition (or set of conditions) in order to run a particular block of
statements. (You already used this structure in the procedure you wrote to determine a
data type.)</p>

<ol>
<p><li> In the Code window, create a new procedure by typing <b>Sub
IfThenCondition</b> and pressing <font size="-2">ENTER</font>.</li></p>

<p><li> Between the lines <font face="courier new" size="-1">Sub IfThenCondition</font> and <font face="courier new" size="-1">End Sub</font>, add the following line
of code:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
sInput = InputBox(&quot;Enter a number greater than 10.&quot;)
</pre>
</td></tr>
</table>
</p>

<p>As discussed earlier, the built-in Visual Basic <i>InputBox</i> function prompts
the user to enter a value in a text box and returns a string representing the value
that the user enters. In this case, you prompt the user to enter a number greater than 10.</p>


<p><li> After the line containing the <i>InputBox</i> function, enter the
following If&#8230;Then condition block:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
If sInput &gt; 10 Then
    MsgBox &quot;You entered a number greater than 10.&quot;
End If
</pre>
</td></tr>
</table>
</p>

<p>Within this If&#8230;Then condition block, if the value entered by the user is
greater than 10, the program displays the message box. Otherwise, nothing else
happens.</p>

<p><li> Place the cursor anywhere in the <i>IfThenCondition</i> procedure and
press <font size="-2">F5</font>. You'll see the InputBox prompting you to enter a number greater than 10.
If the condition is evaluated to True (that is, the input value is a number greater
than 10), the program displays the confirmation message. If the number is less than or
equal to 10, no message is displayed.</li></p>

<p><li> Enter a number greater than 10 and click OK.</li></p>

<p><li> Click OK to close the message box.</li></p>

<p><li> Add the following two lines between the line containing the <i>MsgBox</i>
function and End If of the If&#8230;Then condition block you just created:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Else
    MsgBox &quot;You entered a number less than 10.&quot;
</pre>
</td></tr>
</table>
</p>

<p>The If&#8230;Then&#8230;Else condition block goes one step further. It provides an
alternative if the condition isn't met. Now, if you enter a number less than 10,
you see a different message box.</p>

<p><li> Press <font size="-2">F5</font>.</li></p>

<p><li> Enter a number less than 10 and then click OK.</li></p>

<p><li> Click OK to close the message box.</li></p>

<p><li> Within the If&#8230;Then&#8230;Else condition block you created above, add
the following two lines just above the line Else:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
ElseIf sInput = 10 Then
    MsgBox &quot;You entered the number 10.&quot;
</pre>
</td></tr>
</table>
</p>

<p>Finally, the If&#8230;Then&#8230;ElseIf condition block goes yet another step and
adds more flexibility than the If&#8230;Then&#8230;Else condition block. With the
If&#8230;Then&#8230;ElseIf condition block, you can evaluate more than one condition
within the same block. Now, a different message box is displayed for all three cases
for the input value. This value can either be greater than, equal to, or less than
10.</p>

<p>The completed If&#8230;Then&#8230;ElseIf condition block should look like this:</p>

<p>
<A HREF="javascript:fullSize('G02ovb06x.htm')"> <img src="images/G02ovb06.JPG" width=404 height=245 border=0 ALT = "Click to view at full size."> </A>
</p>


<p><li> Press <font size="-2">F5</font>.</li></p>

<p><li> Enter the number 10 and click OK.</li></p>

<p><li> Click OK to close the message box.</li></p>
</ol>

<A NAME="62"><h2><i>Select Among Options with Select Case</i></h2></A>
<p>The Select Case condition block is very similar to the If&#8230;Then&#8230;ElseIf
condition block. Select Case evaluates the test expression in the first line and
afterward compares it to the value in each case.</p>

<ol>
<p><li> In the procedure you created above, delete the If&#8230;Then&#8230;ElseIf
condition block and replace it with a Select Case statement. The revised procedure
looks like this:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Sub IfThenCondition()
    sInput = InputBox(&quot;Enter a number greater than 10.&quot;)
    Select Case sInput
    Case Is &gt; 10
        MsgBox &quot;You entered a number greater than 10.&quot;
    Case Is = 10
        MsgBox &quot;You entered the number 10.&quot;
    Case Is &lt; 10
        MsgBox &quot;You entered a number less than 10.&quot;
    End Select
End Sub
</pre>
</td></tr>
</table>
</p>

<p>Pay particular attention to the similarities between the overall structure of the
Select Case condition with the If&#8230;Then&#8230;ElseIf condition block. In the Select
Case condition block, the variable <i>sInput</i> is the test expression and you enter
it at the beginning of the condition block. Then a number of Case statements follow to
handle the possible conditions of the test expression.</p>

<p><li> Run the procedure and enter numbers as you did before. The procedure
responds the same way.</li></p>
</ol>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






