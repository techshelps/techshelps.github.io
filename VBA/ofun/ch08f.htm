<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Sending E-mail in Outlook</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch08e.htm" , "ch08g.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="299"><h1>Sending E-mail in Outlook</h1></A>
<p>Once all of the Office documents selected in the form <i>frmMain</i> are
automatically generated, you can send them as an e-mail message created in Outlook.
This link gives you a convenient way to update people about a project.</p>

<A NAME="300"><h2><i>Create an Outlook E-mail Message</i></h2></A>
<ol>
<p><li> In the Visual Basic Editor, click Module on the Insert menu to create a
new code module.</li></p>

<p><li> Add the following <i>SendEmail</i> procedure:</li></p>


<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Sub SendEmail(bReport As Boolean, bSheet As Boolean, _
       bPres As Boolean)
    Dim appOL As New Outlook.Application
    Dim itemUsageEmail As Outlook.MailItem 
	  
    Set itemUsageEmail = appOL.CreateItem(olMailItem)
End Sub
</pre>
</td></tr>
</table>
</p>

<p>The three Boolean variables you pass into the <i>SendEmail</i> procedure indicate
which check boxes were selected in the form <i>frmMain</i>. You use these variables to
determine which file attachments should be added to the e-mail message. Within the <i>
SendEmail</i> procedure, you declare two variables. The first, the variable <i>
appOL</i>, is the declaration of a new instance of the Outlook Application object. You
use the keyword New in the declaration statement to indicate that the first time the
variable <i>appOL</i> is used in code, you create a new instance. The second, the
variable <i>itemUsageEmail</i>, declares the variable as an Outlook MailItem object,
which you set in the Set statement following the declaration.</p>


<p><li> After the Set statement in the <i>SendEmail</i> procedure, add the
following With&#8230;End block:</li></p>


<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
With itemUsageEmail
    .To = &quot;Energy Committee&quot;
    .Subject = &quot;New energy usage documents&quot;
    .Body = &quot;The following documents reflect&quot; &amp; _
        &quot; the energy usage for the circuit: &quot; &amp; _
        g_sCircuit &amp; &quot;.&quot; &amp; vbCrLf
    .Display
End With
</pre>
</td></tr>
</table>
</p>

<p>The With&#8230;End block sets the main properties of the e-mail message and then
displays the message on the screen. If you want to send the 
e-mail message automatically, you can replace the Display method with the Send method
in the last line of the With&#8230;End block. The message will go to the alias
&quot;Energy Committee.&quot;</p>


<p><li> Before the line used to display the Outlook message, add the following
If&#8230;Then condition blocks to add attachments to the message:</li></p>


<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
If bReport = True Then
    .Attachments.Add g_sDBProjectPath &amp; &quot;Report.doc&quot;
End If
If bSheet = True Then
    .Attachments.Add g_sDBProjectPath &amp; &quot;DataAnalysis.xls&quot;
End If
If bPres = True Then
    .Attachments.Add g_sDBProjectPath &amp; &quot;EnergyPres.ppt&quot;
End If
</pre>
</td></tr>
</table>
</p>

<p>The three If&#8230;Then condition blocks evaluate the Boolean values representing the
items selected in the form <i>frmMain</i>. If an item is selected and the appropriate
Office document is generated, the document is attached to the e-mail message.</p>


<p><li> In the Properties window in the Visual Basic Editor, change the Name
property of the code module to <b>modOutlook</b>.</li></p>

<p><li> Click the Save button on the Standard toolbar in the Visual Basic Editor
to save changes to the code.</li></p>
</ol>

<p>You've now added all the code needed to create an Outlook e-mail message. Later,
when you run the integrated Office solution and select the item to create an Outlook
e-mail message along with the other Office documents, the Outlook e-mail message should
look like this:</p>

<p>
<A HREF="javascript:fullSize('G08ovb10x.htm')"> <img src="images/G08ovb10.JPG" width=404 height=212 border=0 ALT = "Click to view at full size."> </A>
</p>


<p>
<div class="note"><blockquote>
<b>NOTE</b><hr>
Before running the integrated solution, remove the apostrophe at
the beginning of the Option Explicit statement in the modMain module if you previously
added an apostrophe. The Option Explicit statement will enable you to find coding
errors more easily (if any exist).</blockquote></div>
</p>

<A NAME="301"><h2><i>See the Solution in Action</i></h2></A>
<ol>
<p><li> In the MyEnergy: Database window, click Forms in the Objects bar, select
the item frmMain, and then click Open on the Database window toolbar. You'll see
the custom Energy Management form.</li></p>

<p><li> Select all four check boxes in the Energy Management form and click
OK.</li></p>


<p>Depending on your computer system's hardware and software configuration, it may
take a few minutes to iterate through the data in the Access database and generate each
Office document. You can watch the progress by reading the Number Of Records Read
indicator in the dialog box. Once the <i>Main</i> procedure finishes running,
you'll see the new Word report, the Excel worksheet and chart, the PowerPoint
presentation, and the Outlook e-mail message with the Office documents attached. Each
window displayed on your screen should look similar to the graphic shown at the end of
the example that created that particular Office document.</p>
</ol>

<p>
<div class="tip"><blockquote><b>TIP</b><hr>
If your code has errors you can't easily resolve, or if you
didn't have time to complete this chapter, you can run the solution from the
Energy.mdb file provided in the Chapter 8 folder of the practice files. This file
contains the complete working code for all the sections in this chapter.</blockquote></div>
</p>

<ol>
<p><li value="3"> Close the Energy database and exit Access.</li></p>

<p><li> After examining the generated contents in Word, Excel, and PowerPoint,
close each application without saving any changes.</li></p>
</ol>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






