<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Checklist for Developing COM Add-Ins</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch14b.htm" , "ch14d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="496"><h1>Checklist for Developing COM Add-Ins</h1></A>
<p>Your add-in's elements often determine how you should structure your code. For
example, if your COM add-in is loaded when the application starts up, your code would
search for your command bar customizations and either add them if they don't exist
or set up the Click event procedures if they do exist. You need to build a checklist of
what your COM add-in will do. The following table provides a list of the common items
and associated tasks you'll need to address while building your COM add-ins.</p>

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Item  </th>
<th>Tasks  </th></tr>
<tr>
<td valign="top" rowspan="3">O&nbsp;&nbsp;&nbsp; Connection  </td>
<td valign="top"> <li> Determine if the COM add-in is to be loaded 
 at startup or after startup using the <i>ConnectMode</i> 
 argument of the <i>OnConnection</i> procedure.</li>  </td></tr>
<tr> 
<td valign="top"><li> Set up code that handles Office application 
 events.</li>  </td></tr>
<tr>  
<td valign="top"><li> Add command bar customizations.</li>  </td></tr>
<tr>
<td valign="top" rowspan="2">O&nbsp;&nbsp;&nbsp; Disconnection  </td>
<td valign="top"><li> Free memory and system resources by setting 
 variables associated with an object to Nothing.</li>   </td></tr>
<tr> 
<td valign="top"><li> Remove command bar customizations if the 
 user disconnects the add-in from the COM 
 Add-Ins dialog box. Use the <i>RemoveMode</i> 
 argument of the <i>OnDisconnection</i> procedure to 
 determine if the add-in is to be unloaded when 
 the application quits or if it will be unloaded 
 through the COM Add-Ins dialog box.</li>  </td></tr>
<tr>
<td valign="top" rowspan="2">O&nbsp;&nbsp;&nbsp; Managing command bar customizations  </td>
<td valign="top"><li> Use the <i>FindControls</i> method to find all 
  copies of a command bar customization. 
 (See <A HREF="ch11a.htm">Chapter 11</A> for more information and 
 for use of the <i>FindControls</i> method.)</li>   </td></tr>
<tr>
<td valign="top"> <li> Use the Protection property of the <i>CommandBar</i> 
 object to indicate whether the command 
 bar is protected from user customization. 
 (See <A HREF="ch11a.htm">Chapter 11</A> for more information and 
 for use of the <i>Protection</i> property.)</li>  </td></tr>
<tr>
<td valign="top" rowspan="2">O&nbsp;&nbsp;&nbsp; Displaying custom dialog boxes (forms)  </td> 
<td valign="top"><li> Use the Show method of a form to display a 
  custom dialog box or form.</li>  </td></tr>
<tr>
<td valign="top"><li> If a custom Visual Basic 6.0 form is displayed 
 from a command bar event procedure such as 
 <i>Click</i> or <i>Change</i>, pass <i>vbModal</i> to the Modal 
 argument in the Show method to ensure that 
 the dialog box is properly displayed in front 
 of the Office application window.</li>  </td></tr>
<tr>
<td valign="top" rowspan="2">O&nbsp;&nbsp;&nbsp; Resources (strings, images) </td>
<td valign="top"><li> Use the Resource Editor in Visual Basic 6.0 to 
  add resources to a COM add-in created in 
 Visual Basic 6.0. You can access the Resource 
 Editor by clicking Add-In Manager on the 
 Add-Ins menu, selecting the VB 6 Resource 
 Editor item in the Available Add-Ins list box, 
 and then selecting the Load/Unloaded 
 check box.</li>  </td></tr>
 <tr>
 <td valign="top"><li> Use the Visual Basic 6.0 functions 
 <i>LoadResString</i> and <i>LoadResPicture</i> to retrieve 
 string and image resources.</li>  </td></tr>
<tr>
 <td valign="top">&nbsp;&nbsp;&nbsp; Performance   </td>
 <td valign="top"><li> Avoid writing a lot of code that gets executed 
 when a COM add-in is first loaded. If a lot of 
 code needs to be executed along with the 
 initialization of other objects or Automation 
 servers when an add-in is loaded, the start 
 time of the Office application can be noticeably 
 increased if the COM add-in is boot-loaded.</li>  </td></tr>
<tr>
<td valign="top" colspan="2" align="center"><i>An add-in that needs to be loaded when an Office application starts is called a boot-loaded add-in.</i> </td></tr>
<tr>
<td valign="top" rowspan="3">O&nbsp;&nbsp;&nbsp; Structuring code and resources for international use of an add-in </td>
<td valign="top"><li> Isolate resources that need to be translated to 
 other languages in a resource file stored in the 
  add-in so that there's no need to access the 
 source code or recompile the add-in when 
 strings are translated. </li>  </td></tr>
<tr>
<td valign="top"><li> Alternatively, isolate resources that need to be 
 translated in a resource file stored in another 
 .dll file and accessed from the COM add-in. </li>  </td></tr>
<tr>
<td valign="top"><li> Edit resources in a COM add-in .dll or .exe file 
 using a software program like Visual C++ that 
 allows you to translate resources without 
 recompiling the add-in .dll/.exe.</li>  </td></tr>
<tr>
<td valign="top" rowspan="3">O&nbsp;&nbsp;&nbsp; Deployment </td>
<td valign="top"><li> Use the Package and Deployment Wizard 
 installed by Visual Basic 6.0 or Office 2000 
 Developer to deploy COM add-ins. You can 
 also use installation software from third-party 
 vendors. The last section of the previous 
 chapter steps through using the Package and 
 Deployment Wizard.</li>  </td></tr>
 <tr>
 <td valign="top"><li> Determine if your add-in will be registered 
 under the HKEY_LOCAL_MACHINE or 
 HKEY_CURRENT_USER branch of the 
 Windows Registry.</li>   </td></tr>
 <tr>
 <td valign="top"><li> Determine if the add-in will be installed on a 
 machine where end-users have limited control 
 over folders and subfolders.</li>  </td></tr>
 <tr>
 <td valign="top" rowspan="2"> O&nbsp;&nbsp;&nbsp; Security </td>
<td valign="top"> <li> Apply for a certificate from a certificate 
 authority. A certificate authority issues, manages, and revokes certificates. </li> </td></tr>
 <tr>
 <td valign="top"><li> Sign your COM add-in .dlls or .exes before 
 you deploy them to your users.</li>  </td></tr>
  </table></p>



</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






