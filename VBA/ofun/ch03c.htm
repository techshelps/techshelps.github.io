<HTML>
<HEAD>
<TITLE>Creating List Dialog Boxes</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch03b.htm" , "ch03d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="93"><h1>Creating List Dialog Boxes</h1></A>
<p>When you start creating Visual Basic projects and features for Office, you'll
often come across scenarios in which you'll want to position your ActiveX controls
on your UserForm to resemble the dialog boxes in Microsoft Access, Word, Excel,
PowerPoint, or Outlook. You'll also find many dialog boxes in Word, Excel, and
PowerPoint that share a set of controls and a layout, although the tasks of the dialog
boxes may be very different.</p>

<A NAME="94"><h2><i>Move Items Between Two List Boxes</i></h2></A>
<p>A common dialog box layout is to have two ListBox controls with Add, Remove, and
Remove All command button controls in between. You see this layout when you're
asked to select items from one full list in order to create a subset of items. The
Define Custom Show dialog box in PowerPoint is an example of this layout, which
you'll create below in Excel.</p>

<ol>
<p><li>Without exiting Excel, start PowerPoint. In the opening PowerPoint
dia-log box, select Blank Presentation and click OK. In the New Slide dialog box,
select any AutoLayout and click OK.</li></p>

<p><li>On the Slide Show menu, click Custom Shows, and click the New button.
You're going to create a dialog box in Excel that's similar to the Define
Custom Show dialog box.</li></p>

<p><li>Click Cancel, click Close, and exit PowerPoint without saving
changes.</li></p>

<p><li>In the Visual Basic Editor of Excel, click UserForm on the Insert
menu.</li></p>

<p><li>In the Toolbox, click the ListBox control and drag the control to the
left side of the UserForm.</li></p>

<p><li>Click the ListBox control again and drag the control to the right side of
the UserForm.</li></p>

<p><li>Move and size the controls using the following illustration as a
guide:</li></p>

<p>
<img src="images/G03ovb08.JPG" width=320 height=212 border=0>


<p><li>Add two CommandButton controls, placing the first control between the two
list boxes and the second one just below the first.</li></p>

<p><li>Add two more CommandButton controls, placing them below the second list
box, ListBox2. (The fourth command button is to the right of the third.) Use the
following illustration as a guide:</li></p>

<p>
<img src="images/G03ovb09.JPG" width=326 height=183 border=0>


<p><li>In the Properties window, set the following values. You may need to
resize the window to see the complete control names.</li></p>
</ol>

<table cellpadding=5 width="95%">
<tr>
   <th valign="top">Control</th> 
   <th valign="top">Property</th> 
   <th valign="top">Value</th>
</tr>

<tr><td valign="top">CommandButton1</td> <td valign="top">Name</td> <td valign="top">cmdAdd</td></tr>

<tr><td valign="top">CommandButton1</td> <td valign="top">Caption</td> <td valign="top">Add &gt;</td></tr>

<tr><td valign="top">CommandButton2</td> <td valign="top">Name</td> <td valign="top">cmdRemove</td></tr>

<tr><td valign="top">CommandButton2</td> <td valign="top">Caption</td> <td valign="top">&lt; Remove</td></tr>

<tr><td valign="top">CommandButton3</td> <td valign="top">Name</td> <td valign="top">cmdOK</td></tr>

<tr><td valign="top">CommandButton3</td> <td valign="top">Caption</td> <td valign="top">OK</td></tr>

<tr><td valign="top">CommandButton4</td> <td valign="top">Name</td> <td valign="top">cmdCancel</td></tr>

<tr><td valign="top">CommandButton4</td> <td valign="top">Cancel</td> <td valign="top">True</td></tr>

<tr><td valign="top">CommandButton4</td> <td valign="top">Caption</td> <td valign="top">Cancel</td></tr>

<tr><td valign="top">ListBox1</td> <td valign="top">Name</td> <td valign="top">lstEmployees</td></tr>

<tr><td valign="top">ListBox2</td> <td valign="top">Name</td> <td valign="top">lstAttendees</td></tr>
</table>

<p>
<div class="tip"><blockquote><b>TIP</b><hr>
When working with controls in Visual Basic code, you commonly add
a three-letter prefix to the names of the ActiveX controls. The prefix indicates what
type of control is being referenced in code. For the controls listed in the Toolbox of
the Visual Basic Editor, use the following prefixes: <i>chk</i> for check box, <i>
cbo</i> for combo box, <i>cmd</i> for command button, <i>img</i> for image, <i>lbl</i>
for label, <i>lst</i> for list box, <i>mpg</i> for multipage, <i>opt</i> for option
button, <i>scb</i> for scroll bar, <i>spn</i> for spin button, <i>txt</i> for textbox,
and <i>tgl</i> for toggle button.</blockquote></div>
</p>

<ol>
<p>To enter property values more efficiently, click the control on the UserForm before
typing its values in the Properties window.</p>
</ol>

<p><div class="sidebar"><blockquote><i>
If your UserForm is behind the Code window, display it by clicking UserForm3
(UserForm) on the Window menu.
</i></blockquote></div></p>

<ol>
<p><li value="11">Double-click the cmdAdd command button and type the following statements
in the Code window between the <font face="courier new" size="-1">Private Sub cmdAdd_Click</font>
 and<font face="courier new" size="-1"> End Sub</font> statements:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Dim i As Integer
For i = 0 To lstEmployees.ListCount _ 1
    If lstEmployees.Selected(i) = True Then
        lstAttendees.AddItem _
            lstEmployees.List(i)
        lstEmployees.RemoveItem i
        lstEmployees.Selected(i) = False
    End If
Next i
</pre>
</td></tr>
</table>
</p>

<p>The For&#8230;Next loop, discussed in the <a href="ch02a.htm">previous chapter</a>, iterates through each
item in the lstEmployees list box and checks to see whether the item is selected. If it
is, it's added to the lstAttendees list box and removed from the lstEmployees list
box. The Selected property of the lstEmployees list box control returns a Boolean value
indicating whether the item is selected.</p>

<p><li>Double-click the cmdRemove command button and type the following program
statements in the Code window between the <font face="courier new" size="-1">Private Sub cmdRemove_Click </font>
and<font face="courier new" size="-1"> End Sub</font>
statements:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Dim i As Integer
For i = 0 To lstAttendees.ListCount _ 1
    If lstAttendees.Selected(i) = True Then
        lstEmployees.AddItem lstAttendees.List(i)
        lstAttendees.RemoveItem i
    End If
Next i
</pre>
</td></tr>
</table>
</p>

<p>The structure and sequence of this code segment is exactly the same as the code
assigned to the cmdAdd command button, but it moves items in the opposite direction
(that is, from the lstAttendees list box to the lstEmployees list box).</p>

<p><li>Double-click any blank area on the UserForm, select Initialize from the
Procedure drop-down list in the Code window (the list on the right), and type the
following program statements in the Code window between the <font face="courier new" size="-1">Private Sub
UserForm_Initialize </font>and <font face="courier new" size="-1">End Sub</font> statements:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
With lstEmployees
    .AddItem &quot;Dave&quot;
    .AddItem &quot;Rob&quot;
    .AddItem &quot;Greg&quot;
    .AddItem &quot;Christina&quot;
    .AddItem &quot;Mark&quot;
End With
</pre>
</td></tr>
</table>
</p>

<p>When you add the Employees list box to the UserForm, it doesn't contain any of
the items in the list. The With&#8230;End block adds five items to fill the list box
when the UserForm is first initialized, just before it's displayed on the screen.
In an actual program, the program would probably load the data from a file stored on
disk.</p>

<p><li>Double-click the cmdOK and cmdCancel command buttons and type <b>Unload
Me</b> between the <font face="courier new" size="-1">Sub</font> and <font face="courier new" size="-1">End Sub</font> statements.</li></p>

<p>Now you're ready to go.</p>

<p><li>Run the dialog box by pressing<font size="-2">F5</font>, and click each button to reveal its
functionality.</li></p>

<p>When you click the Add button, the program removes selected items in the left list
box and adds them to the right list box. The opposite happens when you click the Remove
button.</p>

<p>
<img src="images/G03ovb10.JPG" width=349 height=243 border=0>


<p><li>Click the Save button to save your work.</li></p>

<p>
<img src="images/G11ovb08.JPG" width=25 height=24 border=0><br><i>Save button</i>


</ol>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






