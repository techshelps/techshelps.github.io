<html>
<head>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Chapter 12 -- Working with the Office Assistant</title>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</head>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch11g.htm" , "ch12b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<font size="+3">Chapter 12</font> 

<A NAME="448"><h1>Working with the Office Assistant</h1></A>
<p>
<div class="sidebar">
<A NAME="449"><h3><i>Chapter Objectives</i></h3></A><b>Estimated time: 50 minutes</b>

<ul>
<p><li>Set the characteristics and functions of custom balloons displayed by the
Assistant.</li></p>

<p><li>Work with the elements of the Assistant's balloon, including the
heading, labels, buttons, and check boxes.</li></p>

<p><li>Set text attributes such as color and underlining in the balloon's
heading, labels, and check boxes.</li></p>

<p><li>Understand the similarities between the Assistant's <i>Balloon</i>
object and the <i>MsgBox</i> function built into the Microsoft Visual Basic for
Applications language.</li></p>

<p><li>Determine if the Assistant is on and visible and learn when to display a
message box instead of the Assistant.</li></p>

<p><li>Place a button on a custom dialog box that displays the Office
Assistant&#8212;one that's similar to many of Microsoft Office's built-in dialog
boxes, such as the toolbar Customize dialog box. (The <i>custom dialog box</i> is a
file search dialog box based on the use of Office's <i>FileSearch</i> object.)</li></p>
</ul>
</div>
</p>

<p>The Office Assistant provides a common interface for displaying Help information and
tips to users who are working with any Office application. To allow Visual Basic for
Applications solutions to use the Office Assistant as well, each Office application
provides an Assistant property on the <i>Application</i> object. This property returns
a reference to the <i>Assistant</i> object, as defined in the shared Microsoft Office
9.0 Object Library. By using the Assistant in your custom solution, you can provide
Help tips that explain how to use your custom dialog box or wizard. You can also
display a set of ways to get more information. Since the objects, methods, and
properties associated with the Office Assistant are defined in the Microsoft Office 9.0
Object Library, you can write code that can be shared among, and executed in, all the
Office applications without having to tailor the code to each one.</p>

<p>This chapter describes the <i>Assistant</i> and <i>Balloon</i> objects, along with
their associated methods. It also contains an example that shows you how to create a
custom dialog box with a button similar to the ones in wizards and in dialog boxes
across the Office suite of applications that display the Office Assistant. This would
be a button like the one at the bottom left of the Customize dialog box, which you
access by clicking Customize on the Tools menu in any Office application. You build the
functionality of the custom dialog box by using the <i>FileSearch</i> object, methods,
and properties, which are also defined in the Microsoft Office 9.0 Object Library. The
<i>FileSearch</i> object allows your code to return a list of files from a search with
specific criteria.</p>

<p>
<div class="sidebar"><blockquote>
<b>Quick Guide: Elements of the Assistant's Balloon</b>
<p>The Office Assistant displays or gathers information through the
Assistant's balloon. The balloon can display message text as well as numbered or
bulleted list items, check boxes, bitmaps, and buttons. Each of these items lets the
user get information or select an item from a set of choices. The following diagram
shows the main elements of the Assistant's balloon. You use the methods and
properties associated with these elements to set a balloon's display and
purpose.</p>

<p>
<A HREF="javascript:fullSize('G12ovb01x.htm')"> <img src="images/G12ovb01.JPG" width=404 height=346 border=0 ALT = "Click to view at full size."> </A>
</p>

<p>The following code is the procedure that generated the characteristics of
the Assistant's balloon in the diagram above. The With&#8230;End block contains the
properties on the <i>Balloon</i> object that you use to set the balloon's
appearance.</p>

<p>
<table cellpadding=5><tr><td>
<pre>
Sub ShowBalloon()
    Dim bln As Office.Balloon
    Set bln = Assistant.NewBalloon
    With bln
       .Icon = msoIconAlertInfo
       .Heading = &quot;Elements of the Assistant's Balloon&quot;
       .Text = &quot;Click OK when you've reviewed the elements.&quot;
       .Labels(1).Text = &quot;There are 6 main elements.&quot;
       .Labels(2).Text = &quot;Labels can be numbered&quot; &amp; _
            &quot;or bulleted.&quot;
       .Checkboxes(1).Text = &quot;Show more information.&quot;
       .BalloonType = msoBalloonTypeButtons
       .Mode = msoModeModal
       .Button = msoButtonSetOK
       .Show
    End With
End Sub
</pre>
</td></tr>
</table>
</p>

<p>The following table lists each element of the Assistant's balloon and
describes the property associated with it. The descriptions summarize those given in
this chapter's step-by-step examples. You can assign text to the Heading and Text
properties and to each label and check box in the <i>BalloonLabels</i> and <i>
BalloonCheckboxes</i> collections. As you'll see in the &quot;<A HREF="ch12c.htm#453">Setting Text Attributes in the Assistant's Balloon</A>&quot; section of this chapter, you can set
attributes like underlining and color to any text in the balloon.</p>
<a name="balloon"></a>
<p><table cellpadding=5><tr>
<th>Balloon Element</th><th>Property Description</th>
</tr><tr>
<td valign="top">Heading</td><td valign="top">Use the Heading property for bold text displayed at the top of the balloon.</td></tr>
<tr><td valign="top">Icon</td><td valign="top">You can set the Icon property to one of the MsoIconType constants. These icons are like those you see when you use the <i>MsgBox</i> function built into the Visual Basic for Applications language. The icon appears at the upper-left side of the Assistant's balloon, just to the left of the heading. If you don't want to display an icon, set the Icon property to msoIconNone.</td>
</tr>
<tr><td valign="top">Text</td> <td valign="top">Use the Text property for text that's displayed just below the heading but isn't bold. This text is displayed above any labels or check boxes.</td></tr>
<tr><td valign="top">Labels</td> <td valign="top">Use the Labels property to return the <i>Balloon-Labels</i> collection object. Using the <i>Item</i> method of the <i>BalloonLabels</i> object, or the shortcut syntax Labels(index), you can specify up to five labels in a balloon. You don't need to explicitly add a label. A label in the collection of five appears when you assign a value to the label's Text property.</td></tr>
<tr><td valign="top">Check boxes</td><td valign="top">Use the Checkboxes property, similar to the Labels property, to return the <i>BalloonCheckboxes</i> collection object. Using the <i>Item</i> method of the <i>BalloonCheckboxes</i> object or the shortcut syntax Checkboxes(index), you can specify up to five check boxes in a balloon. You don't need to explicitly add a check box. A check box in the collection of five appears when you assign a value to the Text property of the check box.</td></tr>
<tr><td valign="top">Balloon type</td> <td valign="top">The BalloonType property of the Balloon object indicates whether the labels specified by the Label property appear as a numbered list, a bulleted list, or a list with circular buttons. You specify the numbered list with msoBalloonTypeNumbers, the bulleted list with msoBalloonTypeBullets, and the button list with msoBalloonTypeButtons. By default, if you don't set the ButtonType property, msoBalloonTypeButtons is used.</td></tr>
<tr><td valign="top">Button set </td><td valign="top">Use the Button property to display the set of buttons that appear at the bottom of the Assistant's balloon. You can assign the Button property to one of the following MsoButtonSetType constants:
<p>
msoButtonSetAbortRetryIgnore<br>
msoButtonSetBackClose<br>
msoButtonSetBackNextClose<br>
msoButtonSetBackNextSnooze<br> 
msoButtonSetCancel<br>
msoButtonSetNextClose 
msoButtonSetNone<br> 
msoButtonSetOK<br> 
msoButtonSetOkCancel<br> 
msoButtonSetRetryCancel<br> 
msoButtonSetSearchClose<br>
msoButtonSetTipsOptionsClose<br> 
msoButtonSetYesAllNoCancel<br> 
msoButtonSetYesNoCancel<br> 
msoButtonSetYesNo</p>

<p>By default, if you don't set the Button property, 
msoButtonSetOK is used.</p></td></tr></table></p>
</blockquote></div></p>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






