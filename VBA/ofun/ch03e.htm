<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Developing Office Wizards</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch03d.htm" , "ch03f.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="98"><h1>Developing Office Wizards</h1></A>
<p>Wizards are common features of many software applications. Not only do they guide
you through a series of tasks and often help you save time creating documents, they
also step you through many prebuilt content templates and provide you with ideas,
starter text, formatting, and organization. The new style of Office wizards now lets
you navigate more easily, both backward and forward, through the steps and allows you
to track your progress visually through the task steps so you have a sense of where you
are and where you're going.</p>

<p>It's even easier if you integrate the Office Assistant with wizards. The 
Assistant gives you tips for going through the steps as well as visual examples and
step-by-step instructions for specific tasks.</p>

<A NAME="99"><h2>Wizard Look and Style</h2></A>
<p>The wizard dialog box has three main features: navigation buttons, a subway map, and
tab pages. The subway map is optional but is provided in many 
Office wizards. Your wizard works equally well without it.</p>

<p>
<A HREF="javascript:fullSize('G03ovb15x.htm')"> <img src="images/G03ovb15.JPG" width=404 height=334 border=0 ALT = "Click to view at full size."> </A>
</p>


<p>The Energy Wizard has the same look and style as the Fax Wizard in Word. To access
the Fax Wizard, click New on the File menu in Word, and in the Letter And Faxes tab,
select the Fax Wizard icon and click OK. (The details of the AutoContent Wizard in
PowerPoint differ slightly from those of the wizards in Word, but the look and style of
the two wizard types are the same.) In this chapter, you'll use the details of the
Fax Wizard in Word as the model. The code for the wizard UserForm will be very generic
so that you can easily plug the same code into a wizard in any Office application.</p>

<A NAME="100"><h2><i>Set Up a Multiple-Step Wizard Dialog Box</i></h2></A>
<p>You can easily build dialog boxes with multiple steps by using the MultiPage
control. The MultiPage control is a container of controls within a collection of pages.
As you'll see, the MultiPage control makes it simple to design each page because
you can add controls to one page and display the controls of another page.</p>

<ol>
<p><li>Start Word. Display the Visual Basic Editor and insert a new
UserForm.</li></p>

<p><li>In the Properties window, change the default name in the Name property of
the new UserForm from UserForm1 to frmWizard.</li></p>

<p><li>In the Toolbox, click the MultiPage control and then click the frmWizard
UserForm.</li></p>

<p><img src="images/W-BTN37.JPG" width=27 height=25 border="0"><br><i>MultiPage control</i></p>

<p><li>In the Properties window, change the default name in the Name property
from MultiPage1 to mpgSteps. (The prefix <i>mpg</i> represents
&quot;multipage.&quot;)</li></p>

<p><li>Right-click the first tab of the mpgSteps control and click New Page on
the shortcut menu.</li></p>

<p>
<img src="images/G03ovb16.JPG" width=386 height=295 border=0>


<p>This adds a new page to the mpgSteps control. The tab caption of the new page is
Page3.</p>

<p><li>Click the tab with the caption Page1 and change the Name property in the
Properties window to pgStart. (The prefix <i>pg</i> represents &quot;page.&quot;)
Change the Caption property from Page1 to Start.</li></p>

<p><li>Click the tab with the caption Page2 and change the Name property to
pgStep1. Change the Caption property to Step1.</li></p>

<p><li>Click the tab with the caption Page3 and change the Name property to
pgFinish. Change the Caption property to Finish.</li></p>
</ol>

<p>Your MultiPage control has three pages. The first page is the Start screen, or the
screen that the wizard displays first. The last page is the Finish screen, which the
wizard displays once the user completes all the steps in the wizard. The page between
the first and last pages will become the step in the wizard where the user sets options
and enters information that the wizard needs to complete its overall task. Each
subsequent step in the wizard requires its own page. In the section later in this
chapter titled &quot;<A HREF="ch03e.htm#105">Add a New Step in the Wizard</A>,&quot; you'll learn how to add
another new page and, hence, another new step in your wizard.</p>

<p>By default, the program sets the style of the MultiPage control to the enumeration
value fmTabStyleTabs, which represents a value of 0. Later in this chapter, when you
start adding controls to each page in the control, you'll set the Style property of
the MultiPage control to fmTabStyleNone so that the tabs aren't displayed in the
wizard dialog box. Some wizards display tabs, but the style you're creating in this
chapter doesn't.</p>

<A NAME="101"><h2><i>Add Navigation Buttons</i></h2></A>
<p>Most well-designed wizards provide a set of common navigation buttons along the
lower edge of the wizard dialog box. These navigation buttons are Cancel, Previous,
Next, and Finish. With the introduction of the Office Assistant, you can add another
button that allows you to display tips or instructions from the Assistant.</p>

<ol>
<p><li>Move the MultiPage control mpgSteps to the upper-right area of the
frmWizard UserForm.</li></p>

<p><li>Resize the UserForm to slightly increase its width. Double-click the
CommandButton control in the Toolbox, and then click four times in the lower area of
the UserForm, working from left to right, to create four command buttons. Use the
following illustration as a guide:</li></p>


<p>
<A HREF="javascript:fullSize('G03ovb17x.htm')"> <img src="images/G03ovb17.JPG" width=404 height=278 border=0 ALT = "Click to view at full size."> </A>
</p>

</ol>

<p>
<div class="note"><blockquote>
<b>NOTE</b><hr>
By double-clicking a control in the Toolbox, you can add more
than one of a particular control to a UserForm without having to continuously click the
control in the Toolbox. You can't resize or select any other control in the
UserForm until you click the Select Objects arrow in the Toolbox.</blockquote></div>
</p>

<ol>
<p><li value="3">Click the Select Objects arrow in the Toolbox so that you can select the
controls in the UserForm, and then change the properties of the CommandButton controls
to the following:</li></p>

<p><img src="images/W-BTN26.JPG" width=27 height=25 border="0"><br><i>Select Objects arrow</i></p>

<table cellpadding=5 width="95%">
<tr><th valign="top">Control</th> <th valign="top">Property</th> <th valign="top">Value</th></tr>

<tr><td valign="top">CommandButton1</td> <td valign="top">Name</td> <td valign="top">cmdCancel</td></tr>

<tr><td valign="top">CommandButton1</td> <td valign="top">Caption</td> <td valign="top">Cancel</td></tr>

<tr><td valign="top">CommandButton1</td> <td valign="top">Cancel</td> <td valign="top">True</td></tr>

<tr><td valign="top">CommandButton2</td> <td valign="top">Name</td> <td valign="top">cmdPrevious</td></tr>

<tr><td valign="top">CommandButton2</td> <td valign="top">Caption</td> <td valign="top">&lt; Previous</td></tr>

<tr><td valign="top">CommandButton2</td> <td valign="top">Accelerator</td> <td valign="top">P</td></tr>

<tr><td valign="top">CommandButton3</td> <td valign="top">Name</td> <td valign="top">cmdNext</td></tr>

<tr><td valign="top">CommandButton3</td> <td valign="top">Caption</td> <td valign="top">Next &gt;</td></tr>

<tr><td valign="top">CommandButton3</td> <td valign="top">Accelerator</td> <td valign="top">N</td></tr>

<tr><td valign="top">CommandButton4</td> <td valign="top">Name</td> <td valign="top">cmdFinish</td></tr>

<tr><td valign="top">CommandButton4</td> <td valign="top">Caption</td> <td valign="top">Finish</td></tr>

<tr><td valign="top">CommandButton4</td> <td valign="top">Accelerator</td> <td valign="top">F</td></tr>
</table>

<p>You should set the Cancel property of the Cancel button to True so that the user
can press <font size="-2">ESC</font> to cancel the wizard dialog box. Allowing the user to cancel a dialog box
by pressing <font size="-2">ESC</font> is a standard Windows programming practice.</p>
</ol>


<OL>
<p><li value="4">Double-click the Previous button and add the following line to the <i>
cmdPrevious_Click</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
mpgSteps.Value = mpgSteps.Value - 1
</pre>
</td></tr>
</table>
</p>


<p><div class="sidebar"><blockquote><i>
Remember, because the code belongs exclusively to an object (the frmWizard UserForm), the code is contained in a class module. If a module doesn't belong to an object, it's 
referred to as a code module (or as a standard module in more recent versions of Visual
Basic).
</i></blockquote></div></p>



<p>The Value property of the MultiPage control mpgSteps is an integer that indicates
the currently active page. A value of 0 represents the first page in the control. The
maximum value of this property is the number of pages minus 1. Each time you click the
Previous button, the program decreases the value of the mpgSteps control by 1 and
displays the previous step.</p>

<p><li>In the Object drop-down list of the frmWizard Code window, select cmdNext
and add the following line to the <i>cmdNext_Click</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
mpgSteps.Value = mpgSteps.Value + 1
</pre>
</td></tr>
</table>
</p>

<p>Each time you click the Next button, you increase the value of the mpgSteps control
by one and display the next step.</p>

<p><li>In the Object drop-down list of the frmWizard Code window, select
cmdCancel and add the following line to the <i>cmdCancel_Click</i> event
procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Unload Me
</pre>
</td></tr>
</table>
</p>
<p>The Visual Basic keyword <i>Me</i> is an implicit reference to the UserForm in
which the code is currently running. Thus, <i>Me</i> represents the frmWizard UserForm.
When you click the Cancel button or press <font size="-2">ESC</font>, you close the dialog box and unload it
from memory.</p>

<p><li>In the Object drop-down list of the frmWizard Code window, select
cmd-Finish and add the following line to the <i>cmdFinish_Click</i> event
procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Unload Me
</pre>
</td></tr>
</table>
</p>
<p>For now, the Finish button closes the UserForm. Later in this chapter, however, to
the <i>cmdFinish_Click</i> event procedure you'll add code that checks the values
entered in the steps in the wizard and then calls a number of procedures to perform the
wizard's overall task before unloading the dialog box from memory.</p>

<p><li>In the Object drop-down list, select mpgSteps and add the following lines
to the <i>mpgSteps_Change</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Select Case mpgSteps.Value
    Case 0
        cmdNext.Enabled = True
        cmdPrevious.Enabled = False
        cmdFinish.Enabled = False
    Case m_iTotalSteps - 1
        cmdNext.Enabled = False
        cmdPrevious.Enabled = True
        cmdFinish.Enabled = True
    Case Else
        cmdNext.Enabled = True
        cmdPrevious.Enabled = True
        cmdFinish.Enabled = False
End Select
</pre>
</td></tr>
</table>
</p>

<p>When the value of the MultiPage control mpgSteps is changed by the <i>
cmdNext_Click</i> or <i>cmdPrevious_Click</i> event procedure, the Change event of the
mpgSteps control is triggered. The Select Case statement you added evaluates the
current value of the mpgSteps control and determines the appropriate course of action.
If the value is 0, the program displays the Start page and disables the Previous button
because there are no more pages before the Start.</p>

<p>If the value is equal to the module-level variable <i>m_iTotalSteps</i> minus one,
the program displays the Finish page and disables the Next button because there are no
more pages after the Finish. In this case, however, it enables the Finish button. The
variable <i>m_iTotalSteps</i> is declared in step 10 and represents the total number of
pages in the mpgSteps control. If the value of the mpgSteps control is neither the
first nor last page, both the Previous and Next buttons are enabled.</p>

<p><li>In the Object drop-down list of the frmWizard Code window, select
UserForm. In the Procedure drop-down list of the module, select Initialize and add the
following lines to the <i>UserForm_Initialize</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
m_iTotalSteps = mpgSteps.Pages.Count
mpgSteps.Value = 0
Call mpgSteps_Change
</pre>
</td></tr>
</table>
</p>

<p>Before the dialog box is displayed, you need to initialize the state of some
controls and then set the value of the variable <i>m_iTotalSteps</i>. This is done in
the <i>UserForm_Initialize</i> event procedure, which runs just before the dialog box
is displayed on the screen. In the <i>Initialize</i> event procedure of the frmWizard
UserForm, <i>m_iTotalSteps</i> is set to the number of pages in the mpgSteps
control.</p>

<p>The second line of code above sets the value of the mpgSteps control to 0 so that
the Start page is shown when the UserForm is displayed. Despite the fact that the value
of the mpgSteps control is set, the <i>mpgSteps_Change</i> event procedure may not run
if the value of the mpgSteps is 0 while you're designing the UserForm. Thus, you
explicitly call the <i>mpgSteps_Change</i> event procedure so that the navigation
button is also initialized.</p>

<p><li>In the Declarations section of the frmWizard Code window (at the top of
the code window before the first procedure), add the following module-level
declaration:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Dim m_iTotalSteps As Integer
</pre>
</td></tr>
</table>
</p>

</ol>
<p>
<div class="tip"><blockquote><b>TIP</b><hr>
If the Option Explicit statement isn't included at the
beginning of the frmWizard Code window, you should add it by typing &quot;Option
Explicit&quot; before the module-level declaration you added in the previous step. If
you want the Option Explicit statement to be added to any code module by default, on
the Tools menu in the Visual Basic Editor, click Options, and then click Require
Variable Declaration in the Editor tab of the Options dialog box. See &quot;<a href="ch02c.htm#var">Do I Need
to Declare My Variables and Constants?</a>&quot; in Chapter 2 for more
information.</blockquote></div>
</p>

<ol>
<p><li value="11">In the frmWizard UserForm, resize and move the navigation Command-Button
controls, using the following illustration as a guide. Then press <font size="-2">F5</font> to display the
dialog box.</li></p>

<p>
<img src="images/G03ovb18.JPG" width=379 height=240 border=0>


<p>The program disables the Finish and Previous buttons and shows the first page (the
Start page) in the MultiPage control when the wizard is displayed. Click the Next and
Previous buttons to see the pages of the MultiPage control being activated and the
navigation buttons being enabled and disabled.</p>

<p><li>Click Cancel, and then in the Project Explorer, right-click the
frmWizard project item located in the Forms folder. Click Export File on the shortcut
menu.</li></p>

<p><li>In the Export File dialog box, change to the Chapter 3 subfolder in the
Office VBA practice folder, type the name <b>frmWizardTemplateBasic</b> in the File
Name text box, and click Save.</li></p>
</ol>

<p>This example gave you the basics of setting up a wizard dialog box. In steps 12 and
13, you exported the UserForm so that you can use it as a starting point when you
create a new wizard. In the next example, you'll continue building onto your wizard
by adding the subway map panel on the left side of the UserForm.</p>

<A NAME="102"><h2><i>Create a Subway Map</i></h2></A>
<p>The &quot;subway map&quot; is a new style of Office wizard that permits easy
navigation through the wizard's steps by giving a visual representation of where
you are within the wizard. Each &quot;station&quot; on the subway map represents a step
in the wizard, and the current station, or step, is green. If you want to skip a step
or jump to a specific step, you can do so by using the subway map panel.</p>

<ol>

<p><li>In the Editor, in the Project Explorer, double-click the frmWizard
project item. In the Toolbox, click the Image control, and then click in the upper-left
area of the UserForm. In the Properties window, change the name of the Image control
from Image1 to imgLeftPane.</li></p>

<p><img src="images/W-BTN40.JPG" width=27 height=25 border="0"><br><i>Image control</i></p>

<p><li>Click the Image control in the Toolbox again and click the UserForm just
below the imgLeftPane control. Change the name of the Image control from Image1 to
imgBottomStripe.</li></p>

<p><li>To change the color of the Image controls you just inserted, select both
Image controls by first selecting either one and then holding down the <font size="-2">CTRL</font> key to select the other. In the Properties window, click the value of the BackColor, and then click the arrow. Click the Palette tab and select the color black.</li></p>

<p><li>Move and resize the imgLeftPane and imgBottomStripe controls so that the
UserForm looks like the following illustration:</li></p>

<p>
<img src="images/G03ovb19.JPG" width=379 height=240 border=0>


<p><li>Click the Image control in the Toolbox and then click the imgLeftPane
control. Change the name of the newly inserted Image control to imgSubway. You're
placing imgSubway on top of imgLeftPane.</li></p>

<p><li>In the Properties window, change the BackStyle property of the imgSubway
control to 0 - fmBackStyleTransparent. Change the BorderColor property by clicking the
arrow, clicking the Palette tab, and selecting light gray. The value
&amp;H00C0C0C0&amp; appears, which represents light gray.</li></p>

<p><li>Add another Image control and place it in the upper-left corner of the
imgSubway control. Change the name to imgStart and set the BorderStyle property to 0 -
fmBorderStyleNone. Resize the control so that it looks like the following
illustration:</li></p>

<p>
<img src="images/G03ovb20.JPG" width=379 height=240 border=0>


<p><li>Click the imgStart control. On the Edit menu, click Copy. On the Edit
menu, click Paste twice to create two copies of the control. In the Properties window,
select Image1 from the drop-down list and change its name to imgStep1. Similarly,
change the name of Image2 to imgFinish.</li></p>

<p><li>Move the imgStep1 and imgFinish controls so that they are on the border
of the imgSubway control.</li></p>

<p>If the imgStep1 and imgFinish controls are underneath the mpgSteps control, select
the selection border around the mpgSteps control and move the control temporarily out
of the way. Also, if one image is underneath the other, select one by clicking its name
in the drop-down list in the Properties window to select the control on the UserForm.
Then drag the control to a new location on the UserForm.</p>

<p><li>In the Toolbox, click the Label control, and then click the UserForm
just beside the imgStart control. Set the following properties for the Label
control:</li></p>


<table cellpadding=5 width="95%">
<tr><th valign="top">Property</th> <th valign="top">Value</th></tr>

<tr><td valign="top">Name</td> <td valign="top">lblStart</td></tr>

<tr><td valign="top">BackStyle</td> <td valign="top">0 - fmBackStyleTransparent</td></tr>

<tr><td valign="top">Caption</td> <td valign="top">Start</td></tr>

<tr><td valign="top">ForeColor</td> <td valign="top">&amp;H00FFFFFF&amp; (or white in the Palette tab)</td></tr>
</table>

<p><li>Select the lblStart control by clicking any other control and then
clicking the lblStart control. (If you initially click only the lblStart control,
you'll select the caption of the control, not the control itself.) On the Edit
menu, click Copy, and then paste the control twice.</li></p>

<p><li>Move one of the pasted Label controls beside the imgStep1 control, name
it lblStep1, and set the Caption property to Step1. Move the second pasted Label
control beside the imgFinish control, name it lblFinish, and set the Caption property
to Finish.</li></p>

<p><li>Move and resize the controls so that the UserForm looks like the
following illustration:</li></p>

<p>
<img src="images/G03ovb21.JPG" width=379 height=240 border="0">
</p>

<p>Make sure the label controls are slightly wider than the text they contain.</p>

<p><li>Select the controls imgStart, lblStart, imgStep1, lblStep1, imgFinish,
and lblFinish, and then in the ControlTipText property in the Properties window, type
<b>To skip to this step, click here.</b> Each subway map image and label has the same
ToolTip text, which is the same as that in Word's Fax Wizard.</li></p>
</ol>

<p>You've completed the layout of the subway map. What remains is to add the code
that allows you to use the map to navigate through the steps.</p>

<A NAME="103"><h2><i>Indicate Active and Visited Steps in the Subway Map</i></h2></A>
<p>The subway map has to indicate which step is currently active and which steps you
have visited. You indicate the currently active step by setting two properties of the
controls in the subway map. First, set the BackColor property of the Image control, or
station, to light green. Second, set the font of the station label to bold. Once you
move on to another step in the wizard, the program sets the BackColor property of the
Image control of the previous station to dark gray to indicate that you have previously
visited it.</p>

<ol>
<p><li>In the Project Explorer, select the frmWizard project item and click the
View Code button, which is the leftmost button on the Project Explorer toolbar.</li></p>

<p><img src="images/W-BTN23.JPG" width=27 height=25 border="0"><br><i>View Code</i></p>

<p><li>At the top of the module, just after the module-level declaration <i>
m_iTotalSteps</i>, add the following module-level declaration:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Dim m_sCurStep As String
</pre>
</td></tr>
</table>
</p>

<p>The variable <i>m_sCurStep</i> is the name of the current step, and it's used
to keep track of the current step. Once you move to another step, you can use the value
in the variable <i>m_sCurStep</i> to determine what the previous step was and to reset
its properties so that the previous step appears visited.</p>

<p><li>In the Object drop-down list of the frmWizard Code window, select
mpgSteps so that the <i>mpgSteps_Change</i> event procedure appears. Add the following
procedure call just before the Select Case statement so that the call is the first line
of the <i>mpgSteps_Change</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
SetSubwayMap
</pre>
</td></tr>
</table>
</p>

<p>Every time the <i>mpgSteps_Change</i> event procedure runs, the <i>SetSubwayMap</i>
procedure is called so that the images and labels of the map can be initialized.</p>

<p><li>At the bottom of the module, create the <i>SetSubwayMap</i> procedure by
adding the following code:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Sub SetSubwayMap()
    Controls(&quot;img&quot; &amp; m_sCurStep).BackColor = &amp;H808080
    Controls(&quot;lbl&quot; &amp; m_sCurStep).Font.Bold = False   
    Select Case mpgSteps.Value
        Case 0
            m_sCurStep = &quot;Start&quot;
        Case m_iTotalSteps - 1
            m_sCurStep = &quot;Finish&quot;
        Case Else
            m_sCurStep = &quot;Step&quot; &amp; mpgSteps.Value
    End Select
    Controls(&quot;img&quot; &amp; m_sCurStep).BackColor = vbGreen
    Controls(&quot;lbl&quot; &amp; m_sCurStep).Font.Bold = True
End Sub
</pre>
</td></tr>
</table>
</p>

<p>The <i>SetSubwayMap</i> procedure performs three tasks. The first task is to use
the m_sCurStep value to determine what the previous step is. The program calls the <i>
SetSubwayMap</i> procedure when the value of the mpgSteps control has been changed.
Before you update the value of m_sCurStep to reflect the current step, you reset the
control properties of the previous step so that it appears visited. You do this by
setting the BackColor property of the Image control to dark gray (&amp;H808080) and the
font of the Label control to roman (not bold).</p>

<p>For the second task of the procedure, the Select Case statement evaluates the
current value of the mpgSteps control and sets the variable <i>m_sCurStep</i> to the
name of the current step. You then use the value of <i>m_sCurStep</i> to set the
BackColor property of the current Image control to light green (vbGreen). The Visual
Basic color enumeration vbGreen represents the value &amp;HFF00.The third task of the
procedure is to set the associated Label control's font to bold.</p>

<p><li>In the Object drop-down list of the frmWizard Code window, select
UserForm. In the Procedure drop-down list in the upper-right area of the Code window,
select Initialize and add the line:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
m_sCurStep = &quot;Start&quot;
</pre>
</td></tr>
</table>
</p>

<p>The <i>UserForm_Initialize</i> event procedure should now look like this:</p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub UserForm_Initialize()
    m_iTotalSteps = mpgSteps.Pages.Count
    m_sCurStep = &quot;Start&quot;
    mpgSteps.Value = 0
    mpgSteps_Change
End Sub
</pre>
</td></tr>
</table>
</p>

<p><li>In the Project Explorer, select the frmWizard project item and click the
View Object button, which is just to the right of the View Code button on the Project
Explorer toolbar.</li></p>

<p><img src="images/W-BTN24.JPG" width=27 height=25 border="0"><br><i>View Object</i></p>

<p><li>Select the imgFinish control on the frmWizard UserForm. In the Properties
window, change the BackColor property to red in the Palette tab (a value of
&amp;H000000FF&amp;).</li></p>

<p>The color red is used as an initial indicator that this step is the last one in the
wizard (or the last station on the subway map).</p>

<p><li>Click anywhere on the frmWizard UserForm and press <font size="-2">F5</font> to run the UserForm.</li></p>

<p>
<A HREF="javascript:fullSize('G03ovb22x.htm')"> <img src="images/G03ovb22.JPG" width=404 height=208 border=0 ALT = "Click to view at full size."> </A>
</p>

<p>Click the Next and Previous buttons to see the program activate the pages of the
MultiPage control, enable and disable the navigation buttons, and update the properties
of the subway map's Image and Label controls. The last remaining task is to add the
code that allows you to click the controls on the subway map to navigate between the
steps.</p>
</ol>

<A NAME="104"><h2><i>Add Code to the Subway Map</i></h2></A>
<ol>
<p><li>Close and unload the frmWizard UserForm by clicking the Cancel or Finish
button.</li></p>

<p><li>Double-click the imgStart control of the subway map and add the following
line to the <i>imgStart_Click</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
mpgSteps.Value = 0
</pre>
</td></tr>
</table>
</p>

<p><li>In the Object drop-down list, select lblStart and add the following line
to the <i>lblStart_Click</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
mpgSteps.Value = 0
</pre>
</td></tr>
</table>
</p>

<p><li>In the Object drop-down list, select imgStep1 and add the following line
to the <i>imgStep1_Click</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
mpgSteps.Value = 1
</pre>
</td></tr>
</table>
</p>

<p><li>In the Object drop-down list, select lblStep1 and add the following line
to the <i>lblStep1_Click</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
mpgSteps.Value = 1
</pre>
</td></tr>
</table>
</p>

<p><li>In the Object drop-down list, select imgFinish and add the following line
to the <i>imgFinish_Click</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
mpgSteps.Value = m_iTotalSteps - 1
</pre>
</td></tr>
</table>
</p>

<p><li>In the Object drop-down list, select lblFinish and add the following line
to the <i>lblFinish_Click</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
mpgSteps.Value = m_iTotalSteps - 1
</pre>
</td></tr>
</table>
</p>

<p><li>Press <font size="-2">F5</font> to run the UserForm.</li></p>

<p>Click the Image and Label controls on the subway map to see the program enable and
disable the Previous and Next buttons and activate the pages of the MultiPage
control.</p>
</ol>

<A NAME="105"><h2><i>Add a New Step in the Wizard</i></h2></A>
<p>You need to use the naming convention for the controls of the subway map so that a
new step can be added easily. The following example shows how to set up your code to
add more steps as needed.</p>

<ol>
<p><li>Close and unload the frmWizard UserForm by clicking the Cancel or Finish
button.</li></p>

<p><li>In the frmWizard UserForm, select the imgStep1 control. With the <font size="-2">CTRL</font> key
pressed, select the lblStep1 control adjacent to it.</li></p>

<p><li>On the Edit menu, click Copy and then click Paste. The program pastes
copies of the controls imgStep1 and lblStep1 into the center of the UserForm and
selects both copies.</li></p>

<p><li>Click the selection border of either one of the controls and drag the two
controls so that the imgStep1 control sits on the border of the imgSubway control.</li></p>

<p>
<img src="images/G03ovb23.JPG" width=379 height=240 border=0>


<p><li>Rename the pasted Image control to imgStep2 and the Label control to
lblStep2. Change the Caption of lblStep2 to Step2.</li></p>

<p><li>Move imgStep1, lblStep1, imgStep2, and lblStep2 so that these controls
are evenly spaced on the border of the imgSubway control.</li></p>

<p><li>Click the mpgSteps MultiPage control and then right-click any of the
tabs. On the shortcut menu, click New Page. The program adds a new page to the control
with the default tab caption Page1.</li></p>

<p><li>In the Properties window, change the Caption property of Page1 to Step2
and then change the Name property to pgStep2.</li></p>

<p><li>Right-click any tab in the MultiPage control. On the shortcut menu, click
Move. The Page Order dialog box, which lists the pages within the MultiPage control, is
displayed.</li></p>

<p>
<img src="images/G03ovb24.JPG" width=331 height=228 border=0>


<p><li>In the Page Order dialog box, select Step2 in the Page Order list and
click the Move Up button to move the Step2 page after the Step1 page and before the
Finish page. Click OK.</li></p>

<p><li>Double-click the imgStep2 control. In the <i>imgStep2_Click</i> event
procedure, add the following line:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
mpgSteps.Value = 2
</pre>
</td></tr>
</table>
</p>

<p><li>In the Object drop-down list, select lblStep2 and add the following line
to the <i>lblStep2_Click</i> event procedure:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
mpgSteps.Value = 2
</pre>
</td></tr>
</table>
</p>

<p><li>Press <font size="-2">F5</font> to run the UserForm. Click the Next button, or click the label Step2 to navigate and activate the second step in the wizard.</li></p>

<p>
<img src="images/G03ovb25.JPG" width=379 height=240 border=0>


<p><li>Close and unload the frmWizard UserForm by clicking the Cancel or Finish
button.</li></p>

<p><li>Right-click the frmWizard project item in the Project Explorer and then
click Export File on the shortcut menu. In the Export File dialog box, change to the
Chapter 3 practice folder and in the File Name text box, type the name <b>
frmWizardTemplateSubway</b> and click Save.</li></p>
</ol>

<p>You've completed the wizard UserForm with its subway map. In step 15, you
exported the UserForm so that you can use it as a starting point when you create a new
wizard with a subway map. The final process in setting up the wizard UserForm is to add
the new element that all wizards in Office can include: the Office Assistant.</p>

<p>
<div class="note"><blockquote>
<b>NOTE</b><hr>
Because none of the code in the UserForm you've created so
far is specific to any Office application, you can import the wizard UserForm into a
Visual Basic for Applications project in any application.</blockquote></div>
</p>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






