<HTML>
<HEAD>
<TITLE>The Document Close Event</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch05e.htm" , "ch05g.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="184"><h1>The Document Close Event</h1></A>
<p>The procedure for the document Close event is called <i>before</i> you close a
document. Word, Excel, and PowerPoint will call the document <i>Close</i> event
procedure, if it's set up in your program, before you close the document.</p>

<p>
<div class="note"><blockquote>
<b>NOTE</b><hr>
If the document has been changed since it was last saved to
disk, the document Close event is called before the user is asked to save the changes.
After the document <i>Close</i> event procedure is executed, the message box that's
displayed contains a Yes, a No, and a Cancel button. If the user clicks Cancel, Word,
Excel, or PowerPoint cancels the close operation and the document is <i>not</i>
closed.</blockquote></div>
</p>

<p>In Word and Excel, you <i>can</i> cancel this event. Therefore, the event's name
is prefixed with the word <i>Before</i>. In PowerPoint, you can't cancel this event
and, thus, its name isn't prefixed with <i>Before</i>. You have at least eight
common ways to close a document in Word, Excel, and PowerPoint. These are listed
and described in the table below.</p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Sub App_DocumentBeforeClose( _
ByVal Doc As Document, Cancel As Boolean)

Sub App_WorkbookBeforeClose( _
    ByVal Wb As Workbook, Cancel As Boolean)

Sub App_PresentationClose(ByVal Pres As Presentation)
</pre>
</td></tr>
</table>
</p>

<p>The main difference between the document Close event in Word, Excel, and PowerPoint
is that both Word and Excel allow the developer to cancel the close action while
PowerPoint does not. When the user clicks on Close or a related close command, or when
the <i>Close</i> or related close method on the document object is executed, the event
procedure listed above is called in the appropriate application. In Word and Excel, if
you set to True the <i>Cancel</i> Boolean argument passed into the event procedure,
your code can prevent Word and Excel from actually closing the document.</p>

<A NAME="185"><h2>Closing a Document</h2></A>
<p>The following table lists the ways you can close a document in Word, Excel, and
PowerPoint:</p>

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Way to close   </th>
<th>Description  </th></tr>
<tr>
<td valign="top">Use the keyboard shortcut <font size="-2">ALT+4</font> </td>
<td valign="top"><font size="-2">ALT+4 </font> executes the Close command on the 
 Control-menu, displayed when you click 
 the application's (or document's) icon on the title 
 bar at the top left of a window. The Control-menu, 
 and hence the <font size="-2">ALT+4</font> keyboard shortcut, is available to all Windows applications, by default.  </td></tr>
<tr>
<td valign="top">Use the keyboard shortcut <font size="-2">CTRL+F4 </font> </td>
<td valign="top"><font size="-2">CTRL+F4</font>, not to be confused with <font size="-2">ALT+F4</font>, is available in Word, Excel, and PowerPoint. It doesn't work for Outlook windows or many other applications. This keyboard shortcut closes the active document window.   </td></tr>
<tr>
<td valign="top">Click the Close window button </td>
<td valign="top">In Word, the Close window button is the 'x' located at the top right of a document window,  next to the Minimize and Maximize button on all  document windows. In Excel and PowerPoint, the  Close window button exists for a document window <i>and</i> the application window. It's located  at the right end of the menu bar and at the right end of the title bar, respectively.  </td></tr>
<tr>
<td valign="top">Click Close All on the File menu  </td>
<td valign="top">The Close All command is only available in Word  and Excel. To display the Close All command, you must hold down the shift key and then click the File menu. When the File menu is displayed, Close All is displayed in place of the Close command.   </td></tr>
<tr>
<td valign="top">Click Close on the File menu </td>
<td valign="top">This command is available in Word, Excel, and PowerPoint.  </td></tr>
<tr>
<td valign="top">Click Exit on the File menu </td>
<td valign="top"> This command is available in Word, Excel, and  PowerPoint.   </td></tr>
<tr>
<td valign="top">Application.Quit method </td>
<td valign="top">This method is available in Word, Excel, and PowerPoint.   </td></tr>
<tr>
<td valign="top">Document.Close method </td>
<td valign="top">This method is available in Word, Excel, and  PowerPoint.   </td></tr>
<tr>
<td valign="top">Documents.Close method   </td>
<td valign="top">This method is only available in Word and Excel. 
It's equivalent to the Close All command available on the File menu when you hold down the <font size="-2">SHIFT</font> key and then click the File menu.  </td></tr>  
<tr>
<td valign="top">Window.Close method </td>
<td valign="top">This method is available in Word, Excel, and PowerPoint. If only one document window is 
 open for the document, the document is actually closed. More than one document window in 
 Word, Excel, and PowerPoint for any given document can exist if you click on the New Window 
 command on the Window menu. If more than one window for a document is open, the Close method closes only the specified window, while the document and its other windows remain open. This is similar to clicking on the 'x' at the top right of a document window.  </td></tr>
</table></p>

<A NAME="186"><h2>Example Scenario</h2></A>
<p>In the following examples for Word, Excel, and PowerPoint, the code in the document
<i>Close</i> event procedure evaluates if the built-in document property, Subject, is
set before you close the document. If the Subject isn't set, in Word and Excel the
<i>Cancel</i> argument in the event procedure is set to True and the close action is
cancelled. The user sees a message saying that the Subject document property hasn't
been set before the event is cancelled. In PowerPoint, the event can't be cancelled
and therefore, the message that the user sees is slightly different. It suggests that
the user reopen the document and set the Subject document property.</p> 

<p>Note the use of the text characters represented by the built-in Visual 
Basic for Applications language function <i>Chr$</i>. Chr$(10) and Chr$(13) together
represent a linefeed and carriage return in between the two sentences of the message.
You use the BuiltInDocumentProperties property of the <i>Document, Workbook,</i> and
<i>Presentation</i> object in Word, Excel, and PowerPoint, respectively, to access the
Subject document property. If the Subject document property value doesn't contain
text, the string returned by the Value property is equal to the Visual Basic for
Applications constant vbNullString, which represents an empty string
(&quot;&quot;).</p>

<A NAME="187"><h2><i>Set Up the DocumentBeforeClose Event in Word</i></h2></A>
<p><div class="sidebar"><blockquote><p><i>Before following the steps below, make sure you complete steps 1, 2, and 4 in the
section &quot;<A HREF="ch05b.htm#167">Set Up an Event Procedure</A>&quot; after the Quick Guide.</i></p></blockquote></div>
</p>

<ol>
<p><li> In Word, start the Visual Basic Editor and then double-click the Class1
project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select
DocumentBeforeClose from the Procedures drop-down list in the class module. In the <i>
DocumentBeforeClose</i> event procedure, add the following code:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_DocumentBeforeClose( _
    ByVal Doc As Document, Cancel As Boolean)

    If Doc.BuiltinDocumentProperties(&quot;Subject&quot;) _
        .Value = vbNullString Then
        MsgBox &quot;Before this document can be closed, the &quot; &amp; _
            &quot;subject of this document must be entered.&quot; &amp; _
            Chr$(10) &amp; Chr$(13) &amp; Chr$(10) &amp; Chr$(13) &amp; _
            &quot;Click Properties on the &quot; &amp; _
            &quot;File menu to set the Subject.&quot;, vbCritical
        Cancel = True
    End If
End Sub
</pre>
</td></tr>
</table>
</p>

<p><li> In the Project Explorer, double-click the Module1 project item to make it
the active window, place the cursor in the <i>InitEvents</i> procedure, and then press
<font size="-2">F5</font>.</li></p>

<p><li> Switch to Word and click New on the Standard toolbar to create a new
document.</li></p>

<p><li> Add some text to the document and click the Close button on the File menu.</li></p>
</ol>

<A NAME="188"><h2><i>Set Up the WorkbookBeforeClose Event in Excel</i></h2></A>
<p><div class="sidebar"><blockquote><p><i>Before following the steps below, make sure you complete steps 1, 2, and 4 in the
section &quot;<A HREF="ch05b.htm#167">Set Up an Event Procedure</A>&quot; after the Quick Guide.</i></p></blockquote></div>
</p>

<ol>
<p><li> In Excel, start the Visual Basic Editor and then double-click the Class1
project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select
WorkbookBeforeClose from the Procedures drop-down list in the class module. In the <i>
WorkbookBeforeClose</i> event procedure, add the following code:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_WorkbookBeforeClose( _
    ByVal Wb As Workbook, Cancel As Boolean)

    If Wb.BuiltinDocumentProperties(&quot;Subject&quot;) _
        .Value = vbNullString Then
        MsgBox &quot;Before this workbook can be closed, the &quot; &amp; _
            &quot;subject of this workbook must be entered.&quot; &amp; _
            Chr$(10) &amp; Chr$(13) &amp; Chr$(10) &amp; Chr$(13) &amp; _
            &quot;Click Properties on the &quot; &amp; _
            &quot;File menu to set the Subject.&quot;, vbCritical
        Cancel = True
    End If
End Sub
</pre>
</td></tr>
</table>
</p>

<p><li> In the Project Explorer, double-click the Module1 project item to make it
the active window, place the cursor in the <i>InitEvents</i> procedure, and press
<font size="-2">F5</font>.</li></p>

<p><li> Switch to Excel and click New on the Standard toolbar to create a new
workbook.</li></p>

<p><li> Add some text to the workbook and click the Close button on the File menu.</li></p>

</ol>

<A NAME="189"><h2><i>Set Up the PresentationClose Event in PowerPoint</i></h2></A>
<p><div class="sidebar"><blockquote><p><i>Before following the steps below, make sure you complete steps 1, 2, and 4 in the
section &quot;<A HREF="ch05b.htm#167">Set Up an Event Procedure</A>&quot; after the Quick Guide.</i></p></blockquote></div>
</p>

<ol>
<p><li> In PowerPoint, start the Visual Basic Editor and then double-click the
Class1 project item in the Project Explorer to make it the active window.</li></p>

<p><li> Click <i>App</i> from the Object drop-down list and then select
PresentationClose from the Procedures drop-down list in the class module. In the <i>
PresentationClose</i> event procedure, add the following code:</li></p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub App_PresentationClose(ByVal Pres As Presentation)
    If Pres.BuiltinDocumentProperties(&quot;Subject&quot;) _
        .Value = vbNullString Then
        MsgBox &quot;A subject was not entered for this &quot; &amp; _
            &quot;presentation.&quot; &amp; _
            Chr$(10) &amp; Chr$(13) &amp; Chr$(10) &amp; Chr$(13) &amp; _
            &quot;Please reopen this presentation and &quot; &amp; _
            &quot;click Properties on the &quot; &amp; _
            &quot;File menu to set the Subject.&quot;, vbCritical
    End If
End Sub
</pre>
</td></tr>
</table>
</p>

<p><li> In the Project Explorer, double-click the Module1 project item to make it
the active window, place the cursor in the <i>InitEvents</i> procedure, and then press
<font size="-2">F5</font>.</li></p>

<p><li> Switch to PowerPoint and click New on the Standard toolbar to create a
new presentation.</li></p>

<p><li> Add some text to the presentation and click the Close button on the File menu.</li></p>

</ol>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>






