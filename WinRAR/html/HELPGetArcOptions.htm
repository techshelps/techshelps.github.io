<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">

<TITLE>Archive name and parameters dialog: options</TITLE>

<link href="style.css" rel="stylesheet" type="text/css">
</HEAD>

<BODY>

<P class="title"><A NAME="HELPGetArcOptions"></A>Archive name and
parameters dialog: options<hr></P>

<h1>Delete mode</h1>

<p>All delete options listed below modify the behavior
of "Delete files after archiving" from
<A HREF="HELPGetArcGeneral.htm">General options</A>. They have an effect
only if "Delete files after archiving" is on. You can enable any of
these options in the default <A HREF="HELPProfiles.htm">compression
profile</A> to change the default behavior of "Delete files after 
archiving".</p>

<h1><I>Delete files</I></h1>

<P>Delete files normally. Files are deleted permanently, but not
securely, so sometimes it may be possible to recover them using
special software.</P>


<h1><I>Move files to Recycle Bin</I></h1>

<P>Deleted files are placed to Recycle Bin.</P>


<h1><I>Wipe files</I></h1>

<P>Before deleting file data are overwritten by zero bytes to prevent
recovery of deleted files, file is truncated and renamed to temporary name.</P>

<P>Please be aware that such approach is designed for usual hard disks,
but may fail to overwrite the original file data on solid state disks,
as result of SSD wear leveling technology and more complicated data
addressing.</P>


<h1><I>Wipe encrypted files</I></h1>

<P>If this option is on and files are archived with a password,
"Wipe files" mode is enabled regardless of other options
in "Delete mode" group.</P>

<P>There is no much sense to enable it directly in archiving dialog,
because you can just turn on "Wipe files" instead. So this option
is intended for use in compression profiles. If you prefer to always delete
encrypted files securely, you can enable "Wipe files if password is set"
in the default compression profile.</P>


<h1 id="QO"><I>Quick open information</I></h1>

<p>RAR archives store every file header containing information
such as file name, time, size and attributes immediately
before data of described file. This approach is more damage
resistant than storing all file headers in a single continuous
block, which if broken or truncated would destroy the entire
archive contents. But while being more reliable, such file
headers scattered around the entire archive are slower to
access if we need to quickly open the archive contents 
in a shell like WinRAR graphical interface.</p>

<p>To improve archive open speed and still not make the entire
archive dependent on a single damaged block, 
<a href="HELPRAR5Format.htm">RAR 5.0</a> archives
can include an optional quick open record. Such record is
added to the end of archive and contains copies of file names
and other file information stored in a single continuous block
additionaly to normal file headers inside of archive.
Since the block is continuous, its contents can be read quickly,
without necessity to perform a lot of disk seek operations.
Every file header in this block is protected with a checksum.
If WinRAR detects that quick open information is damaged,
it resorts to reading individual headers from inside of archive,
so damage resistance is not lessened.</p>

<p>Quick open record contains the full copy of file header,
which may be several tens or hundreds of bytes per file,
increasing the archive size by the same amount. This size
increase is most noticeable for many small files, when file
data size is comparable to file header. So by default,
in "Add for larger files" mode, WinRAR stores copies of headers
only for relatively large files and continues to use local
headers for smaller files. Concrete file size threshold can
depend on WinRAR version. Such approach provides a reasonable
open speed to archive size tradeoff. If you prefer to have
the maximum archive open speed regardless of size, you can use
"Add for all files" to store copies of all file headers.
If you need to have the smallest possible archive and do not care
about archive open speed in different programs, set "Do not add"
to exclude the quick open information completely.</p>

<p>If you wish to measure the performance effect of this option,
be sure that archive contents is not stored in a disk cache.
No real disk seeks are performed for cached archive file,
making access to file headers fast even without quick open record.</p>


<h1>Archive features</h1>

<h1 id="BLAKE2"><I>Use BLAKE2 file checksum</I></h1>

<p>Store BLAKE2 file checksums. Available only for
<a href="HELPRAR5Format.htm">RAR 5.0</a> archive format.</p>

<p>File data integrity in RAR archive is protected by checksums
calculated and stored for every archived file. By default, WinRAR uses
CRC32 function to calculate the checksum. RAR 5.0 archive format also allows
to select BLAKE2sp version of BLAKE2 hash function instead of CRC32.</p>

<p>CRC32 output is 32 bit length. While CRC32 properties are suitable
to detect most of unintentional data errors, it is not reliable enough
to verify file data identity. In other words, if two files have
the same CRC32, it does not guarantee that file contents is the same.</p>

<p>BLAKE2 output is 256 bit. Being a cryptographically strong hash function,
it practically guarantees that if two files have the same value of BLAKE2,
their contents is the same. BLAKE2 error detection property is also
more reliable than in shorter CRC32.</p>

<p>Since BLAKE2 output is longer, resulting archive is slightly larger,
when this option is enabled.</p>

<p>If archive headers are unencrypted (<a href="HELPArcPassword.htm">Encrypt
file names</a> option was not set), checksums for
<a href="HELPArcEncryption.htm">encrypted</a> RAR 5.0 files are modified
using a special password dependent algorithm, to make impossible guessing
file contents based on checksums. Do not expect encrypted file checksums
to match usual CRC32 and BLAKE2 values.</p>

<h1 id="ident"><I>Save identical files as references</I></h1>

<p>If this option is enabled, WinRAR analyzes the file contents before
starting archiving. If several identical files larger than 64 KB are found,
the first file in the set is saved as usual file and all following files
are saved as references to this first file. It allows to reduce the archive
size, but applies some restrictions to resulting archive. You must not delete
or rename the first identical file in archive after the archive was created,
because it will make extraction of following files using it as a reference
impossible. If you modify the first file, following files will also have
the modified contents after extracting. Extraction command must involve
the first file to create following files successfully.</p>

<p>It is recommended to use this option only if you compress a lot of
identical files, will not modify an archive later and will extract
an archive entirely, without necessity to unpack or skip individual files.
If all identical files are small enough to fit into
<a href="HELPGetArcGeneral.htm#DictSize">compression dictionary</a>,
<A HREF="HELPArcSolid.htm">solid archiving</A> can provide more flexible
solution than this option.</p>

<p>Supported for <a href="HELPRAR5Format.htm">RAR 5.0</a> archives only.</p>

<h1><I>Additional switches</I></h1>

<P>Here you can provide one or more <a href="HELPSwitches.htm">command line
switches</a>. It might be useful if there is no option in WinRAR graphical
interface matching a switch. For example, to convert file names to lowercase
and place them to folder "myfiles", set this string to:</p>

<blockquote>
  <p class="sample">-cl -apmyfiles</p>
</blockquote>

<p>Switches entered here override similar graphical interface options.
Use this feature only if you are familiar with WinRAR command line syntax
and clearly understand what specified switches are intended for.
Not every switch is applicable here. Improper use of this option
can interfere with WinRAR functionality and even lead to data loss.</p>

</BODY>
</HTML>
