<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Making Faster For...Next Loops</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defvariantdatatype">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="deflong">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defdatatype">
</OBJECT>
</TD></TR></TABLE>



<H1><A NAME="vaconmakingfasterloops"></A>Making Faster For...Next Loops</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:See Also">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="12;30;31">
</OBJECT>&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:Specifics">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vaconMakingFasterLoopsS">
</OBJECT></P>

<P class=T>Integers use less memory than the <A HREF="JavaScript:hhobj_3.Click()">Variant data type</A> and are slightly faster to update. However, this difference is only noticeable if you perform many thousands of operations. For example:</P>

<PRE class=CT><CODE>Dim CountFaster As Integer    ' First case, use Integer.
For CountFaster = 0 to 32766    
Next CountFaster

Dim CountSlower As Variant    ' Second case, use Variant.
For CountSlower = 0 to 32766
Next CountSlower
</CODE></PRE>

<P class=T>The first case above takes slightly less time to run than the second case. However, if <CODE>CountFaster</CODE> exceeds 32,767, an error occurs. To fix this, you can change <CODE>CountFaster</CODE> to the <A HREF="JavaScript:hhobj_4.Click()">Long data type</A>, which accepts a wider range of integers. In general, the smaller the <A HREF="JavaScript:hhobj_5.Click()">data type</A>, the less time it takes to update. Variants are slightly slower than their equivalent data type.</P>

</BODY>
</HTML>
