<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Understanding Objects, Properties, Methods, and Events</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defmethod">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defproperty">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defprocedure">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defmethod">
</OBJECT>
</TD></TR></TABLE>



<H1><A NAME="vaconunderstandingobjects"></A>Understanding Objects, Properties, Methods, and Events</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:See Also">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="6;25">
</OBJECT>&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:Specifics">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vaconUnderstandingobjectsS">
</OBJECT></P>

<P class=T>An object represents an element of an application, such as a worksheet, a cell, a chart, a form, or a report. In Visual Basic code, you must identify an object before you can apply one of the object’s <A HREF="JavaScript:hhobj_3.Click()">methods</A> or change the value of one of its <A HREF="JavaScript:hhobj_4.Click()">properties</A>.</P>

<P class=T>A collection is an object that contains several other objects, usually, but not always, of the same type. In Microsoft Excel, for example, the <B>Workbooks</B> object contains all the open <B>Workbook</B> objects. In Visual Basic, the <B>Forms</B> collection contains all the <B>Form</B> objects in an application.</P>

<P class=T>Items in a collection can be identified by number or by name. For example, in the following <A HREF="JavaScript:hhobj_5.Click()">procedure</A>, <CODE>Workbooks(1)</CODE> identifies the first open <B>Workbook</B> object.</P>

<PRE class=CT><CODE>Sub CloseFirst()
    Workbooks(1).Close
End Sub
</CODE></PRE>

<P class=T>The following procedure uses a name specified as a string to identify a <B>Form</B> object. </P>

<PRE class=CT><CODE>Sub CloseForm()
    Forms("MyForm.frm").Close
End Sub
</CODE></PRE>

<P class=T>You can also manipulate an entire collection of objects if the objects share common <A HREF="JavaScript:hhobj_6.Click()">methods</A>. For example, the following procedure closes all open forms.</P>

<PRE class=CT><CODE>Sub CloseAll()
    Forms.Close
End Sub
</CODE></PRE>

<P class=T>A method is an action that an object can perform. For example, <B>Add</B> is a method of the <B>ComboBox</B> object, because it adds a new entry to a combo box.</P>

<P class=T>The following procedure uses the <B>Add</B> method to add a new item to a <B>ComboBox</B>.</P>

<PRE class=CT><CODE>Sub AddEntry(newEntry as String)
    Combo1.Add newEntry
End Sub
</CODE></PRE>

<P class=T>A property is an attribute of an object that defines one of the object's characteristics, such as size, color, or screen location, or an aspect of its behavior, such as whether it is enabled or visible. To change the characteristics of an object, you change the values of its properties.</P>

<P class=T>To set the value of a property, follow the reference to an object with a period, the property name, an equal sign (<B>=</B>), and the new property value. For example, the following procedure changes the caption of a Visual Basic form by setting the <B>Caption</B> property.</P>

<PRE class=CT><CODE>Sub ChangeName(newTitle)
    myForm.Caption = newTitle
End Sub
</CODE></PRE>

<P class=T>You can't set some properties. The Help topic for each property indicates whether you can set that property (read-write), only read the property (read-only), or only write the property (write-only).</P>

<P class=T>You can retrieve information about an object by returning the value of one of its properties. The following procedure uses a message box to display the title that appears at the top of the currently active form.</P>

<PRE class=CT><CODE>Sub GetFormName()
    formName = Screen.ActiveForm.Caption
    MsgBox formName
End Sub
</CODE></PRE>

<P class=T>An event is an action recognized by an object, such as clicking the mouse or pressing a key, and for which you can write code to respond. Events can occur as a result of a user action or program code, or they can be triggered by the system.</P>

<H4>Returning Objects</H4>

<P class=T>Every application has a way to return the objects it contains. However, they are not all the same, so you must refer to the Help topic for the object or collection you're using in the application to see how to return the object.</P>

</BODY>
</HTML>
