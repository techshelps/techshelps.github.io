<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Avoiding Naming Conflicts</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">


<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defidentifier">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defvariable">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defscoping">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defproclevel">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defmodulelevel">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defmodule">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defproject">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defreferencedproject">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defhostapplication">
</OBJECT>
</TD></TR></TABLE>



<H1><A NAME="vaconavoidingnamingconflicts"></A>Avoiding Naming Conflicts</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:See Also">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="3;21">
</OBJECT>&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:Specifics">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vaconAvoidingNamingConflictsS;MultiPageControl">
</OBJECT></P>

<P class=T>A naming conflict occurs when you try to create or use an <A HREF="JavaScript:hhobj_3.Click()">identifier</A> that was previously defined. In some cases, naming conflicts generate errors such as "<CODE>Ambiguous name detected</CODE>" or "<CODE>Duplicate declaration in current scope</CODE>". Naming conflicts that go undetected can result in bugs in your code that produce erroneous results, especially if you do not explicitly declare all <A HREF="JavaScript:hhobj_4.Click()">variables</A> before first use.</P>

<P class=T>You can avoid most naming conflicts by understanding the <A HREF="JavaScript:hhobj_5.Click()">scoping</A> characteristics of identifiers for data, objects, and procedures. Visual Basic has three scoping levels: <A HREF="JavaScript:hhobj_6.Click()">procedure-level</A>, private <A HREF="JavaScript:hhobj_7.Click()">module-level</A>, and public module-level.</P>

<P class=T>A naming conflict can occur when an identifier:

<UL>
	<LI class=LB1>Is visible at more than one scoping level.<BR><BR></LI>

	<LI class=LB1>Has two different meanings at the same level.</LI>
</UL>

<P class=T>For example, procedures in separate <A HREF="JavaScript:hhobj_8.Click()">modules</A> can have the same name. Therefore, you can define a procedure named <CODE>MySub</CODE> in modules named <CODE>Mod1</CODE> and <CODE>Mod2</CODE>. No conflicts occur if each procedure is called only from other procedures in its own module. However, an error can occur if <CODE>MySub</CODE> is called from a third module, and no qualification is provided to distinguish between the two <CODE>MySub</CODE> procedures.</P>

<P class=T>Most naming conflicts can be resolved by preceding each identifier with a qualifier that consists of the module name and, if necessary, a <A HREF="JavaScript:hhobj_9.Click()">project</A> name. For example:</P>

<PRE class=CT><CODE>YourProject.YourModule.YourSub MyProject.MyModule.MyVar
</CODE></PRE>

<P class=T>The preceding code calls the <B>Sub</B> procedure <CODE>YourSub</CODE> and passes <CODE>MyVar</CODE> as an argument. You can use any combination of qualifiers to differentiate identical identifiers.</P>

<P class=T>Visual Basic matches each reference to an identifier with the "closest" declaration of a matching identifier. For example, if <CODE>MyID</CODE> is declared <B>Public</B> in two modules in a project (<CODE>Mod1</CODE> and <CODE>Mod2</CODE>), you can specify the <CODE>MyID</CODE> declared in <CODE>Mod2</CODE> without qualification from within <CODE>Mod2</CODE>, but you must qualify it as <CODE>Mod2.MyID</CODE> to specify it in <CODE>Mod1</CODE>. This is also true if <CODE>Mod2</CODE> is in a different but directly <A HREF="JavaScript:hhobj_10.Click()">referenced project</A>. However, if <CODE>Mod2</CODE> is in an indirectly referenced project, that is, a project referenced by the project you directly reference, references to the <CODE>Mod2</CODE> variable named <CODE>MyID</CODE> must always be qualified with the project name. If you reference <CODE>MyID</CODE> from a third, directly referenced module, the match is made with the first declaration encountered by searching:

<UL>
	<LI class=LB1>Directly referenced projects, in the order that they appear in the <B>References</B> dialog box of the <B>Tools</B> menu.<BR><BR></LI>

	<LI class=LB1>The modules of each project. Note that there is no inherent order to the modules in the project.</LI>
</UL>

<P class=T>You can't reuse names of <A HREF="JavaScript:hhobj_11.Click()">host-application</A> objects, for example, R1C1 in Microsoft Excel, at different scoping levels.</P>

<P class=NT><B>Tip</B>&nbsp;&nbsp;&nbsp;Typical errors caused by naming conflicts include ambiguous names, duplicate declarations, undeclared identifiers, and procedures that are not found. By beginning each module with an <B>Option Explicit </B>statement to force explicit declarations of variables before they are used, you can avoid some potential naming conflicts and identifier-related bugs.</P>

</BODY>
</HTML>
