<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating Object Variables</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defobjectvariable">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defobject">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defproperty">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defmethod">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defvariable">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defdatatype">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defobjecttype">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defobjectexpression">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defkeyword">
</OBJECT>
</TD></TR></TABLE>



<H1><A NAME="vaconcreatingobjvar"></A>Creating Object Variables</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:See Also">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="21">
</OBJECT>&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:Specifics">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vaconCreatingObjVarS">
</OBJECT></P>

<P class=T>You can treat an <A HREF="JavaScript:hhobj_3.Click()">object variable</A> exactly the same as the <A HREF="JavaScript:hhobj_4.Click()">object</A> to which it refers. You can set or return the <A HREF="JavaScript:hhobj_5.Click()">properties</A> of the object or use any of its <A HREF="JavaScript:hhobj_6.Click()">methods</A>.</P>

<P class=LPROCH><B>To create an object variable:</B>

<OL>
	<LI class=LPROC>Declare the object variable.<BR><BR></LI>

	<LI class=LPROC>Assign the object variable to an object.</LI>
</OL>

<H4>Declaring an Object Variable</H4>

<P class=T>Use the <B>Dim</B> statement or one of the other declaration statements (<B>Public</B>, <B>Private</B>, or<B> Static</B>) to declare an object variable. A <A HREF="JavaScript:hhobj_7.Click()">variable</A> that refers to an object must be a <B>Variant</B>, an <B>Object</B>, or a specific type of object. For example, the following declarations are valid:</P>

<PRE class=CT><CODE>' Declare MyObject as Variant data type.
Dim MyObject
' Declare MyObject as Object data type.
Dim MyObject As Object    
' Declare MyObject as Font type.
Dim MyObject As Font    
</CODE></PRE>

<P class=NT><B>Note</B>&nbsp;&nbsp;&nbsp;If you use an object variable without declaring it first, the <A HREF="JavaScript:hhobj_8.Click()">data type</A> of the object variable is <B>Variant</B> by default.</P>

<P class=T>You can declare an object variable with the <B>Object</B> data type when the specific <A HREF="JavaScript:hhobj_9.Click()">object type</A> is not known until the procedure runs. Use the <B>Object</B> data type to create a generic reference to any object.</P>

<P class=T>If you know the specific object type, you should declare the object variable as that object type. For example, if the application contains a Sample object type, you can declare an object variable for that object using either of these statements:</P>

<PRE class=CT><CODE>Dim MyObject As Object    ' Declared as generic object.
Dim MyObject As Sample    ' Declared only as Sample object.
</CODE></PRE>

<P class=T>Declaring specific object types provides automatic type checking, faster code, and improved readability.</P>

<H4>Assigning an Object Variable to an Object</H4>

<P class=T>Use the <B>Set</B> statement to assign an object to an object variable. You can assign an <A HREF="JavaScript:hhobj_10.Click()">object expression</A> or <B>Nothing</B>. For example, the following object variable assignments are valid:</P>

<PRE class=CT><CODE>Set MyObject = YourObject    ' Assign object reference.
Set MyObject = Nothing    ' Discontinue association.
</CODE></PRE>

<P class=T>You can combine declaring an object variable with assigning an object to it by using the <B>New</B> <A HREF="JavaScript:hhobj_11.Click()">keyword</A> with the <B>Set</B> statement. For example:</P>

<PRE class=CT><CODE>Set MyObject = New Object    ' Create and Assign
</CODE></PRE>

<P class=T>Setting an object variable equal to <B>Nothing</B> discontinues the association of the object variable with any specific object. This prevents you from accidentally changing the object by changing the variable. An object variable is always set to <B>Nothing</B> after closing the associated object so you can test whether or not the object variable points to a valid object. For example:</P>

<PRE class=CT><CODE>If Not MyObject Is Nothing Then
    ' Variable refers to valid object.
    . . .
End If
</CODE></PRE>

<P class=T>Of course, this test can never determine with absolute certainty whether or not a user has closed the application containing the object to which the object variable refers.</P>

<H4>Referring to the Current Instance of an Object</H4>

<P class=T>Use the <B>Me</B> keyword to refer to the current instance of the object where the code is running. All procedures associated with the current object have access to the object referred to as <B>Me</B>. Using <B>Me</B> is particularly useful for passing information about the current instance of an object to a procedure in another module. For example, suppose you have the following procedure in a module:</P>

<PRE class=CT><CODE>Sub ChangeObjectColor(MyObjectName As Object)
    MyObjectName.BackColor = RGB(Rnd * 256, Rnd * 256, Rnd * 256)
End Sub
</CODE></PRE>

<P class=T>You can call the procedure and pass the current instance of the object as an argument using the following statement:</P>

<PRE class=CT><CODE>ChangeObjectColor Me
</CODE></PRE>

</BODY>
</HTML>
