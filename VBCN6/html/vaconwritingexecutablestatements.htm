<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Writing Executable Statements</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defstatement">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defmethod">
</OBJECT>
</TD></TR></TABLE>



<H1><A NAME="vaconwritingexecutablestatements"></A>Writing Executable Statements</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:See Also">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="12;41;43;45">
</OBJECT>&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:Specifics">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vaconWritingExecutableStatementsS">
</OBJECT></P>

<P class=T>An executable <A HREF="JavaScript:hhobj_3.Click()">statement</A> initiates action. It can execute a <A HREF="JavaScript:hhobj_4.Click()">method</A> or function, and it can loop or branch through blocks of code. Executable statements often contain mathematical or conditional operators.</P>

<P class=T>The following example uses a <B>For Each...Next</B> statement to iterate through each cell in a range named <CODE>MyRange</CODE> on <CODE>Sheet1</CODE> of an active Microsoft Excel workbook. The variable <CODE>c</CODE> is a cell in the collection of cells contained in <CODE>MyRange</CODE>.</P>

<PRE class=CT><CODE>Sub ApplyFormat()
Const limit As Integer = 33
For Each c In Worksheets("Sheet1").Range("MyRange").Cells
    If c.Value &gt; limit Then
        With c.Font
            .Bold = True
            .Italic = True
        End With
    End If
Next c
MsgBox "All done!"
End Sub
</CODE></PRE>

<P class=T>The <B>If...Then...Else</B> statement in the example checks the value of the cell. If the value is greater than 33, the <B>With</B> statement sets the <B>Bold</B> and <B>Italic</B> properties of the <B>Font</B> object for that cell. <B>If...Then...Else</B> statements end with <B>End If</B>.</P>

<P class=T>The <B>With</B> statement can save typing because the statements it contains are automatically executed on the object following the <B>With </B>keyword.</P>

<P class=T>The <B>Next</B> statement calls the next cell in the collection of cells contained in <CODE>MyRange</CODE>.</P>

<P class=T>The <B>MsgBox</B> function (which displays a built-in Visual Basic dialog box) displays a message indicating that the <B>Sub</B> procedure has finished running.</P>

</BODY>
</HTML>
