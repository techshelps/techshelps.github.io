<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Regular Expressions</TITLE>
<LINK REL="Stylesheet" HREF="../scripts/Office10.css"></HEAD>
<BODY>



<H1><A NAME="vxgrfregularexpressionss"></A>Regular Expressions</H1>

<P class=T>Regular expressions are a concise and flexible notation for finding and replacing patterns of text.</P>

<P class=T>You can use the following regular expressions in the Find and Replace dialog boxes to refine and expand your search.</P>

<P class=NT><B>Note</B>&nbsp;&nbsp;&nbsp;You must choose the Use check box in the Find and Replace dialog boxes before using any of the following as part of your search criteria.</P>

<P class=T>The following expressions can be used to match characters or digits in your search string:</P>

<P class=FIXP></P>

<TABLE cellpadding=4 cellspacing=4 cols=4 width=100%>

<TR VALIGN="top">
<TH>Expression</TH>
<TH>Syntax</TH>
<TH>Description</TH>
<TH>Example</TH>
</TR>

<TR VALIGN="top">
<TD class=T>Any character</TD>
<TD class=T>.</TD>
<TD class=T>Matches any one character except a line break.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Maximal-zero or more </TD>
<TD class=T>*</TD>
<TD class=T>Matches zero or more occurrences of the preceding expression.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Maximal-one or more</TD>
<TD class=T>+</TD>
<TD class=T>Matches at least one occurrence of the preceding expression.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Minimal zero or more</TD>
<TD class=T>@</TD>
<TD class=T>Matches zero or more occurrences of the preceding expression, matching as few characters as possible.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Minimal-one or more</TD>
<TD class=T>#</TD>
<TD class=T>Matches one or more occurrences of the preceding expression, matching as few characters as possible.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Repeat<I> n</I> times</TD>
<TD class=T>^<I>n</I></TD>
<TD class=T>Matches <I>n</I> occurrences of the preceding expression.</TD>
<TD class=T><CODE>[0-9]^4</CODE>&nbsp;&nbsp;&nbsp; matches any 4-digit sequence.</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Set of characters</TD>
<TD class=T>[]</TD>
<TD class=T>Matches any one of the characters within the []. To specify a range of characters, list the starting and ending character separated by a dash (-), as in [a-z]</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Character not in set</TD>
<TD class=T>[^...]</TD>
<TD class=T>Matches any character not in the set of characters following the ^</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Beginning of line</TD>
<TD class=T>^</TD>
<TD class=T>Anchors the match to the beginning of a line.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>End of line</TD>
<TD class=T>$</TD>
<TD class=T>Anchors the match to the end of a line.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Beginning of word</TD>
<TD class=T>&lt;</TD>
<TD class=T>Matches only when a word begins at this point in the text.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>End of word</TD>
<TD class=T>&gt;</TD>
<TD class=T>Matches only when a word ends at this point in the text.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Grouping</TD>
<TD class=T>()</TD>
<TD class=T>Groups a subexpression.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Or</TD>
<TD class=T>|</TD>
<TD class=T>Matches the expression before or after the |. Mostly used within a group. </TD>
<TD class=T><CODE>(sponge|mud) bath</CODE>&nbsp;&nbsp;&nbsp; matches "sponge bath" and "mud bath."</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Escape</TD>
<TD class=T>\</TD>
<TD class=T>Matches the character following the backslash (\). This allows you to find characters used in the regular expression notation, such as { and ^.</TD>
<TD class=T><CODE>\^</CODE>&nbsp;&nbsp;&nbsp;Searches for the ^ character.</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Tagged expression</TD>
<TD class=T>{}</TD>
<TD class=T>Tags the text matched by the enclosed expression.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T><I>n</I>th tagged text</TD>
<TD class=T>\<I>n</I></TD>
<TD class=T>In a Find or Replace expression, indicates the text matched by the <I>n</I>th tagged expression, where <I>n</I> is a number from 1 to 9.
<P class=T>In a Replace expression, \0 inserts the entire matched text.</P>
</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Right-justified field</TD>
<TD class=T>\(<I>w</I>,<I>n</I>)</TD>
<TD class=T>In a Replace expression, right-justifies the <I>n</I>th tagged expression in a field at least <I>w</I> characters wide.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Left-justified field</TD>
<TD class=T>\(-<I>w</I>,<I>n</I>)</TD>
<TD class=T>In a Replace expression, left-justifies the <I>n</I>th tagged expression in a field at least <I>w</I> characters wide.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Prevent match</TD>
<TD class=T>~X</TD>
<TD class=T>Prevents a match when X appears at this point in the expression. </TD>
<TD class=T><CODE>real~(ity)</CODE>&nbsp;&nbsp;&nbsp; matches the "real" in "realty" and "really," but not the "real" in "reality."</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Alphanumeric character</TD>
<TD class=T>:a</TD>
<TD class=T>Matches the expression <BR>
([a-zA-Z0-9])</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Alphabetic character</TD>
<TD class=T>:c</TD>
<TD class=T>Matches the expression<BR>
([a-zA-Z])</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Decimal digit</TD>
<TD class=T>:d</TD>
<TD class=T>Matches the expression <BR>
([0-9])</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Hexadecimal digit</TD>
<TD class=T>:h</TD>
<TD class=T>Matches the expression <BR>
([0-9a-fA-F]+)</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Identifier</TD>
<TD class=T>:i</TD>
<TD class=T>Matches the expression <BR>
([a-zA-Z-$][a-zA-Z0-9_$]*)</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Rational number</TD>
<TD class=T>:n</TD>
<TD class=T>Matches the expression <BR>
(([0-9]+.[0-9]*)|([0-9]*.[0-9]+)|([0-9]+))</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Quoted string</TD>
<TD class=T>:q</TD>
<TD class=T>Matches the expression (("[^"]*")|('[^']*'))</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Alphabetic string</TD>
<TD class=T>:w</TD>
<TD class=T>Matches the expression <BR>
([a-zA-Z]+)</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Decimal integer</TD>
<TD class=T>:z</TD>
<TD class=T>Matches the expression <BR>
([0-9]+)</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Escape</TD>
<TD class=T>\e</TD>
<TD class=T>Unicode U+001B</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Bell</TD>
<TD class=T>\g</TD>
<TD class=T>Unicode U+0007</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Backspace</TD>
<TD class=T>\h</TD>
<TD class=T>Unicode U+0008</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Line break</TD>
<TD class=T>\n</TD>
<TD class=T>Matches a platform-independent line break. In a Replace expression, inserts a line break.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Tab</TD>
<TD class=T>\t</TD>
<TD class=T>Matches a tab character, Unicode U+0009</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Unicode character</TD>
<TD class=T>\x#### or \u####</TD>
<TD class=T>Matches a character given by Unicode value where #### is hexadecimal digits. You can specify a character outside the Basic Multilingual Plane (that is, a surrogate) with the ISO 10646 code point or with two Unicode code points giving the values of the surrogate pair.</TD>
<TD class=T>&nbsp;</TD>
</TR>
</TABLE><BR>

<P class=FIXP></P>

<P class=T>The following table lists the syntax for matching by standard Unicode character properties. The two-letter abbreviation is the same as listed in the Unicode character properties database. These may be specified as part of a character set. For example, the expression [:Nd:Nl:No] matches any kind of digit.</P>

<P class=FIXP></P>

<TABLE cellpadding=4 cellspacing=4 cols=4 width=100%>

<TR VALIGN="top">
<TH>Expression</TH>
<TH>Syntax</TH>
<TH>Description</TH>
<TH>Example</TH>
</TR>

<TR VALIGN="top">
<TD class=T>Uppercase letter</TD>
<TD class=T>:Lu</TD>
<TD class=T>Matches any one capital letter.</TD>
<TD class=T><CODE>:Luhe</CODE>&nbsp;&nbsp;&nbsp;matches "The" but not "the".</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Lowercase letter</TD>
<TD class=T>:Ll</TD>
<TD class=T>Matches any one lower case letter.</TD>
<TD class=T><CODE>:Llhe</CODE>&nbsp;&nbsp;&nbsp;matches "the" but not "The".</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Title case letter</TD>
<TD class=T>:Lt</TD>
<TD class=T>Matches characters that combine an uppercase letter with a lowercase letter, such as Nj and Dz.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Decimal digit</TD>
<TD class=T>:Nd</TD>
<TD class=T>Matches decimal digits such as 0-9 and their full-width equivalents.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Open punctuation</TD>
<TD class=T>:Ps</TD>
<TD class=T>Matches opening punctuation such as open brackets and braces.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Close punctuation</TD>
<TD class=T>:Pe</TD>
<TD class=T>Matches closing punctuation such as closing brackets and braces.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Initial quote punctuation</TD>
<TD class=T>:Pi</TD>
<TD class=T>Matches initial double quotation marks.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Final quote punctuation</TD>
<TD class=T>:Pf</TD>
<TD class=T>Matches single quotation marks and ending double quotation marks. </TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Dash punctuation</TD>
<TD class=T>:Pd</TD>
<TD class=T>Matches the dash mark.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Connector punctuation</TD>
<TD class=T>:Pc</TD>
<TD class=T>Matches the underscore or underline mark.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Other punctuation</TD>
<TD class=T>:Po</TD>
<TD class=T>Matches commas (,), ?, ", !, @, #, %, &amp;, *, \, colons (:), semi-colons (;), ', and /.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Space separator</TD>
<TD class=T>:Zs</TD>
<TD class=T>Matches blanks.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Line separator</TD>
<TD class=T>:Zl</TD>
<TD class=T>Matches the Unicode character U+2028</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Paragraph separator</TD>
<TD class=T>:Zp</TD>
<TD class=T>Matches the Unicode character U+2029</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Math symbol</TD>
<TD class=T>:Sm</TD>
<TD class=T>Matches +, =, ~, |, &lt;, and &gt;</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Currency symbol</TD>
<TD class=T>:Sc</TD>
<TD class=T>Matches $ and other currency symbols.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Other control</TD>
<TD class=T>:Cc</TD>
<TD class=T>Matches end of line.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Other format</TD>
<TD class=T>:Cf</TD>
<TD class=T>Formatting control character such as the bidirectional control characters.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Surrogate</TD>
<TD class=T>:Cs</TD>
<TD class=T>Matches one half of a surrogate pair.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Other private-use</TD>
<TD class=T>:Co</TD>
<TD class=T>Matches any character from the private-use area.</TD>
<TD class=T>&nbsp;</TD>
</TR>
</TABLE><BR>

<P class=FIXP></P>

<P class=T>In addition to the standard Unicode character properties, the following additional properties may be specified. These properties may be specified as part of a character set.</P>

<P class=FIXP></P>

<TABLE cellpadding=4 cellspacing=4 cols=4 width=100%>

<TR VALIGN="top">
<TH>Expression</TH>
<TH>Syntax</TH>
<TH>Description</TH>
<TH>Example</TH>
</TR>

<TR VALIGN="top">
<TD class=T>Alpha</TD>
<TD class=T>:Al</TD>
<TD class=T>Matches any one character</TD>
<TD class=T><CODE>:Alhe</CODE>&nbsp;&nbsp;&nbsp;matches words such as "The", "then", and "reached".</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Numeric</TD>
<TD class=T>:Nu</TD>
<TD class=T>Matches any one number or digit</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Punctuation</TD>
<TD class=T>:Pu</TD>
<TD class=T>Matches any one punctuation mark, such as ?, @, ', etc.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>White space</TD>
<TD class=T>:Wh</TD>
<TD class=T>Matches all types of white space, including publishing and ideographic spaces.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Bidi</TD>
<TD class=T>:Bi</TD>
<TD class=T>Matches characters from right-to-Left scripts such as Arabic and Hebrew.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Hangul</TD>
<TD class=T>:Ha</TD>
<TD class=T>Matches Korean Hangul and combining Jamos.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Hiragana</TD>
<TD class=T>:Hi</TD>
<TD class=T>Matches Hiragana characters.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Katakana</TD>
<TD class=T>:Ka</TD>
<TD class=T>Matches katakana characters.</TD>
<TD class=T>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD class=T>Ideographic/Han/Kanji</TD>
<TD class=T>:Id</TD>
<TD class=T>Matches ideographic characters, such as Han and Kanji</TD>
<TD class=T>&nbsp;</TD>
</TR>
</TABLE><BR>

<P class=FIXP></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
