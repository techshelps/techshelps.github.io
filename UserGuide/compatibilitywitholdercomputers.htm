<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
   <title>Compatibility with older computers</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />

<script type="text/javascript" src="helpman_topicinit.js"></script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#B8CDE5">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">Compatibility with older computers</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="introduction.htm">Top</a>&nbsp;
     <a href="upgradingfrom2x1x.htm">Previous</a>&nbsp;
     <a href="compatibilitywithxpandvista.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<br>

<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p>Ideally, all computers should support LBA interface for accessing boot USB storage devices, present bootable USB thumbdrive as first storage device, and provide full access to all its data, without remapping and shifting sectors in firmware.</p>
<p>&nbsp;</p>
<p>But unfortunately, many real world BIOSes, especially on older computers, have bugs and quirks in implementation of this interface for USB boot devices. For specific formatting scenarios (related to Windows XP and DOS), when compatibility with older computers really matters, FlashBoot goes great length to take care of these issues by installing special stage1 and stage2 loaders.</p>
<p>&nbsp;</p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table cellspacing="0" cellpadding="10" border="0" style="border: none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="50%" bgcolor="#efefef" style="width:50%; background-color:#efefef;"><p>Sometimes disk CHS geometry is different from BIOS to BIOS. E.g., when formatted on the workstation, the USB disk sometimes is not bootable on the embedded hardware because of different CHS geometry on Windows and under embedded BIOS.</p>
</td>
<td valign="top" width="50%" bgcolor="#efefef" style="width:50%; background-color:#efefef;"><p>FlashBoot allows to specify disk CHS geometry explicitly at format time, and stage2 loader will force it to predefined values at run time.</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="50%" bgcolor="#d0d0d0" style="width:50%; background-color:#d0d0d0;"><p>Some BIOSes cut off MBR track from USB disk when booting (especially for A:-mapped boots). E.g., they map only partition 1 of USB disk via int 13h.</p>
</td>
<td valign="top" width="50%" bgcolor="#d0d0d0" style="width:50%; background-color:#d0d0d0;"><p>FlashBoot stage2 loader emulates MBR track in such cases, thus hiding firmware diversity and avoiding OS confusion when it switches to native hardware drivers to access USB disk.</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="50%" bgcolor="#efefef" style="width:50%; background-color:#efefef;"><p>Some BIOSes provide int 13h extended API for USB disks, some do not. Some BIOSes do not provide these services in USB-ZIP mode, but provide ones in USB-HDD mode. </p>
</td>
<td valign="top" width="50%" bgcolor="#efefef" style="width:50%; background-color:#efefef;"><p>To unify runtime environment, FlashBoot stage2 loader always provides LBA and CHS disk access to USB device it boots from.</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="50%" bgcolor="#d0d0d0" style="width:50%; background-color:#d0d0d0;"><p>When BIOS boots from ordinary, non-FlashBoot formatted USB disk, this disk is mapped to A: or C: at BIOS discretion, quite randomly. In the majority of real world cases USB-ZIP formatted disks are mapped to A: and USB-HDD disks are mapped to C:.</p>
<p>&nbsp;</p>
<p>But there are some exceptions.</p>
<p>&nbsp;</p>
<p>For example, ASUS P5GDC-V BIOS in Auto mode maps 0-512Mb USB disks to A: and 512+ Mb disks to C:.</p>
<p>&nbsp;</p>
<p>ASUS P6T BIOS in Auto mode maps 0-1024Mb USB disks to A: and 1024+ Mb disks to C:.</p>
<p>&nbsp;</p>
<p>ASUS netbooks show similar behavior, but unfortunately there is no setting in their BIOS setups to override such &quot;Auto mode&quot; when choice between A: / C: is made by BIOS depending on disk size</p>
</td>
<td valign="top" width="50%" bgcolor="#d0d0d0" style="width:50%; background-color:#d0d0d0;"><p>All this diversity is no more a problem for FlashBoot user. When formatting USB disk, you'll be able to specify target drive letter, e.g. A: or C:, and stage2 loader of FlashBoot will take care of this problem at run time.</p>
</td>
</tr>
</table>
</div>
<p>&nbsp;</p>
<p>At boot time, stage1 and stage2 loaders execute the following algorithm:</p>
<p>&nbsp;</p>
<p>1) Stage1 loader loads stage2 loader via CHS or LBA interface in slow (single-sector transfer) mode and verifies its checksum. If something does wrong at this step, then the following error message is displayed:</p>
<p>&nbsp;</p>
<p><span style="font-family: 'Courier New';">Boot from USB disk failed, status &lt;000000000&gt;.</span></p>
<p><span style="font-family: 'Courier New';">Press Ctrl+Alt+Del to reboot.</span></p>
<p>&nbsp;</p>
<p>Each status digit corresponds to certain BIOS disk.</p>
<p>&nbsp;</p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;x&nbsp;x&nbsp;x&nbsp;x&nbsp;x&nbsp;x&nbsp;x&nbsp;x&nbsp;x</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;+-----&nbsp;Status&nbsp;digit&nbsp;of&nbsp;boot&nbsp;disk&nbsp;DL</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;+-------&nbsp;Status&nbsp;digit&nbsp;of&nbsp;disk&nbsp;0x80</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;+---------&nbsp;Status&nbsp;digit&nbsp;of&nbsp;disk&nbsp;0</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;+-----------&nbsp;Status&nbsp;digit&nbsp;of&nbsp;disk&nbsp;0x81</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;+-------------&nbsp;Status&nbsp;digit&nbsp;of&nbsp;disk&nbsp;1</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;|&nbsp;|&nbsp;|&nbsp;+---------------&nbsp;Status&nbsp;digit&nbsp;of&nbsp;disk&nbsp;0x82</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;|&nbsp;|&nbsp;+-----------------&nbsp;Status&nbsp;digit&nbsp;of&nbsp;disk&nbsp;2</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;|&nbsp;+-------------------&nbsp;Status&nbsp;digit&nbsp;of&nbsp;disk&nbsp;0x83</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;+---------------------&nbsp;Status&nbsp;digit&nbsp;of&nbsp;disk&nbsp;3</span></p>
<p>&nbsp;</p>
<p>Meaning of each status digit:</p>
<p>&nbsp;</p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table cellspacing="4" cellpadding="0" border="0" style="border: none; border-spacing:4px;">
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="79" style="width:79px;"><p>0</p>
</td>
<td valign="top" width="703" style="width:703px;"><p>No single sector of stage2 loader was read from disk, neither in CHS nor in LBA mode</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="79" style="width:79px;"><p>1</p>
</td>
<td valign="top" width="703" style="width:703px;"><p>Should not happen (internal error in stage1 loader)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="79" style="width:79px;"><p>2</p>
</td>
<td valign="top" width="703" style="width:703px;"><p>Some sectors of stage2 loader were read from disk in LBA mode, but not all. </p>
<p>No single sector could be read from disk in CHS mode.</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="79" style="width:79px;"><p>3</p>
</td>
<td valign="top" width="703" style="width:703px;"><p>All sectors of stage2 loader were read from disk in LBA mode,</p>
<p>but checksum or signature does not mach the expected one.</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="79" style="width:79px;"><p>4</p>
</td>
<td valign="top" width="703" style="width:703px;"><p>Some sectors of stage2 loader were read from disk in CHS mode, but not all. </p>
<p>No single sector could be read from disk in LBA mode.</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="79" style="width:79px;"><p>5</p>
</td>
<td valign="top" width="703" style="width:703px;"><p>All sectors of stage2 loader were read from disk in CHS mode,</p>
<p>but checksum or signature does not mach the expected one.</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="79" style="width:79px;"><p>6</p>
</td>
<td valign="top" width="703" style="width:703px;"><p>Some sectors of stage2 loader were read from disk in LBA mode, but not all. </p>
<p>Some sectors of stage2 loader were read from disk in CHS mode, but not all. </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="79" style="width:79px;"><p>7</p>
</td>
<td valign="top" width="703" style="width:703px;"><p>Some sectors of stage2 loader were read from disk in LBA mode,</p>
<p>some other sectors of stage2 loader were read from disk in CHS mode,</p>
<p>but checksum or signature does not mach the expected one.</p>
</td>
</tr>
</table>
</div>
<p>&nbsp;</p>
<p>2) FlashBoot stage2 loader tries to read first 128 sectors of the File Allocation Table via CHS and LBA interfaces. If either fails, stage2 loader switches to single-sector transfer mode and retries. If that interface fails again, stage2 loader prints &quot;<span class="f_CodeExample" style="font-size: 10pt;">LBA not available</span>&quot; or &quot;<span class="f_CodeExample" style="font-size: 10pt;">CHS not available</span>&quot;. If LBA was unavailable in stage1, it is not tried here again, then only CHS is tried.</p>
<p>&nbsp;</p>
<p>3) If both interfaces have failed, stage2 loader prints &quot;<span class="f_CodeExample" style="font-size: 10pt;">Press Ctrl+Alt+Del to reboot</span>&quot; and softly halts machine.</p>
<p>&nbsp;</p>
<p>4) Once FAT#1 and FAT#2 is loaded into the memory via CHS and/or LBA, stage2 loader compares FAT#1 versus FAT#2 to verify each BIOS interface. If FAT#1 does not match FAT#2 for LBA-originated data, stage2 loader prints &quot;<span class="f_CodeExample" style="font-size: 10pt;">FAT#1 != FAT#2 for LBA on this BIOS</span>&quot;. If FAT#1 does not match FAT#2 for CHS-originated data, FlashBoot prints &quot;<span class="f_CodeExample" style="font-size: 10pt;">FAT#1 != FAT#2 for CHS on this BIOS</span>&quot;.</p>
<p>&nbsp;</p>
<p>5) If both interfaces have failed, stage2 loader prints &quot;<span class="f_CodeExample" style="font-size: 10pt;">Press Ctrl+Alt+Del to reboot</span>&quot; and softly halts machine.</p>
<p>&nbsp;</p>
<p>6) stage2 loader chooses LBA if available, otherwise it falls back to CHS. Then it prints either &quot;<span class="f_CodeExample" style="font-size: 10pt;">LBA mode</span>&quot; or &quot;<span class="f_CodeExample" style="font-size: 10pt;">CHS mode</span>&quot;. If single-sector transfer mode is active, it adds &quot;<span class="f_CodeExample" style="font-size: 10pt;"> (slow)</span>&quot;.</p>
<p>&nbsp;</p>
<p>7) If BIOS hides MBR track, then stage2 loader prints the following message:</p>
<p class="p_CodeExample"><span class="f_CodeExample" style="font-size: 10pt;">BIOS&nbsp;hides&nbsp;MBR&nbsp;track&nbsp;of&nbsp;USB&nbsp;boot&nbsp;disk&nbsp;(emulating)</span></p>
<p>&nbsp;</p>

</td></tr></table>

</body>
</html>
