<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Streams and Persistence</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/ADO.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADO 2.5</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mdmscstreamspersistence"></A>Streams and Persistence</H1>

<P>The <A HREF="mdobjodbrec.htm">Recordset</A> object <A HREF="mdmthrstsave.htm">Save</A> method stores, or <I>persists</I>, a <B>Recordset</B> in a file, and the <A HREF="mdmthrstopen.htm">Open</A> method restores the <B>Recordset</B> from that file.</P>

<P>With ADO 2.5, the <B>Save</B> and <B>Open</B> methods can persist a <B>Recordset</B> to a <A HREF="mdobjstream.htm">Stream</A> object as well. This feature is especially useful when working with Remote Data Service (RDS) and Active Server Pages (ASP).</P>

<P>For more information about how persistence can be used by itself on ASP pages, see the current ASP documentation.</P>

<P>The following are a few scenarios that show how <B>Stream</B> objects and persistence can be used.</P>

<H2 class="dtH2">Scenario 1</H2>

<P>This scenario simply saves a <B>Recordset</B> to a file and then to a <B>Stream</B>. It then opens the persisted stream into another <B>Recordset</B>.</P>

<PRE class="code">Dim rs1 As ADODB.Recordset
Dim rs2 As ADODB.Recordset
Dim stm As ADODB.Stream

Set rs1 = New ADODB.Recordset
Set rs2 = New ADODB.Recordset
Set stm = New ADODB.Stream

rs1.<code><b class="cfe">Open</b></code>   "SELECT * FROM Customers", "Provider=sqloledb;" &amp; _
        "Data Source=MyServer;Initial Catalog=Northwind;" &amp; _
        "Integrated Security=SSPI;""", adopenStatic, adLockReadOnly, adCmdText
rs1.<code><b class="cfe">Save</b></code> "c:\myfolder\mysubfolder\myrs.xml", <code><b class="cfe">adPersistXML</b></code>
rs1.<code><b class="cfe">Save</b></code> stm, <code><b class="cfe">adPersistXML</b></code>
rs2.<code><b class="cfe">Open</b></code> stm</PRE>

<H2 class="dtH2">Scenario 2</H2>

<P>This scenario persists a <B>Recordset</B> into a <B>Stream</B> in XML format. It then reads the <B>Stream</B> into a string that you can examine, manipulate, or display.</P>

<PRE class="code">Dim rs As ADODB.Recordset
Dim stm As ADODB.Stream
Dim strRst As String

Set rs = New ADODB.Recordset
Set stm = New ADODB.Stream

' Open, save, and close the recordset. 
rs.<code><b class="cfe">Open</b></code> "SELECT * FROM Customers", "Provider=sqloledb;" &amp; _
        "Data Source=MyServer;Initial Catalog=Northwind;" &amp; _
        "Integrated Security=SSPI;"""
rs.<code><b class="cfe">Save</b></code> stm, <code><b class="cfe">adPersistXML</b></code>
rs.Close
Set rs = nothing

' Put saved Recordset into a string variable.
strRst = stm.<code><b class="cfe">ReadText</b></code>(adReadAll)

' Examine, manipulate, or display the XML data.
...</PRE>

<H2 class="dtH2">Scenario 3</H2>

<P>This example code shows ASP code persisting a <B>Recordset</B> as XML directly to the <B>Response</B> object:</P>

<PRE class="code">...
&lt;%
response.ContentType = "text/xml"

' Create and open a Recordset.
Set rs = Server.CreateObject("ADODB.Recordset")
rs.Open "select * from Customers", "Provider=sqloledb;" &amp; _
        "Data Source=MyServer;Initial Catalog=Northwind;" &amp; _
        "Integrated Security=SSPI;"""

' Save Recordset directly into output stream.
rs.<code><b class="cfe">Save</b></code> Response, <code><b class="cfe">adPersistXML</b></code> 

' Close Recordset.
rs.Close
Set rs = nothing
%&gt;
...</PRE>

<H2 class="dtH2">Scenario 4</H2>

<P>In this scenario, ASP code writes the contents of the <B>Recordset</B> in ADTG format to the client. The <A HREF="mdrefcursorengine.htm">Microsoft Cursor Service for OLE DB</A> can use this data to create a disconnected <B>Recordset</B>.</P>

<P>A new property on the RDS <A HREF="mdobjdatacontrol.htm">DataControl</A>, <A HREF="mdprourlproperty.htm">URL</A>, points to the .asp page that generates the <B>Recordset</B>. This means a <B>Recordset</B> object can be obtained without RDS using the server-side <A HREF="mdobjdatafactory.htm">DataFactory</A> object or the user writing a business object. This simplifies the RDS programming model significantly.</P>

<P>Server-side code, named http://server/directory/recordset.asp:</P>

<PRE class="code">&lt;%
Dim rs 
Set rs = Server.CreateObject("ADODB.Recordset")
rs.Open "select au_fname, au_lname, phone from Authors", ""&amp; _
        "Provider=sqloledb;Data Source=MyServer;" &amp; _
        "Initial Catalog=Pubs;Integrated Security=SSPI;"
response.ContentType = "multipart/mixed"
rs.<code><b class="cfe">Save</b></code> response, <code><b class="cfe">adPersistADTG</b></code>
%&gt;</PRE>

<P>Client-side code:</P>

<PRE class="code">&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;RDS Query Page&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;body&gt;
&lt;CENTER&gt;
&lt;H1&gt;Remote Data Service 2.5&lt;/H1&gt;
&lt;TABLE DATASRC="#DC1"&gt;
   &lt;TR&gt; 
      &lt;TD&gt;&lt;SPAN DATAFLD="au_fname"&gt;&lt;/SPAN&gt;&lt;/TD&gt;
      &lt;TD&gt;&lt;SPAN DATAFLD="au_lname"&gt;&lt;/SPAN&gt;&lt;/TD&gt;
      &lt;TD&gt;&lt;SPAN DATAFLD="phone"&gt;&lt;/SPAN&gt;&lt;/TD&gt;
   &lt;/TR&gt;
&lt;/TABLE&gt;
&lt;BR&gt;

&lt;OBJECT classid="clsid:BD96C556-65A3-11D0-983A-00C04FC29E33"
&nbsp;&nbsp;&nbsp;&nbsp;ID=DC1 HEIGHT=1 WIDTH = 1&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;PARAM NAME="<code><b class="cfe">URL</b></code>" VALUE="http://server/directory/recordset.asp"&gt;
&lt;/OBJECT&gt;

&lt;/SCRIPT&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>

<P>Developers also have the option of using a <B>Recordset</B> object on the client:</P>

<PRE class="code">...
function GetRs() 
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;rs = CreateObject("ADODB.Recordset");
&nbsp;&nbsp;&nbsp;&nbsp;rs.<code><b class="cfe">Open</b></code> "http://server/directory/recordset.asp"
&nbsp;&nbsp;&nbsp;&nbsp;DC1.SourceRecordset = rs;
&nbsp;&nbsp;&nbsp;&nbsp;}
...</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="mdmthrstopen.htm">Open Method (ADO Recordset)</A> | <A HREF="mdobjrecord.htm">Record Object</A> | <A HREF="mdmthrstsave.htm">Save Method</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
