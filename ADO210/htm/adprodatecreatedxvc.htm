<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DateCreated and DateModified Properties Example (VC++)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/samples.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADOX 2.5</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="adprodatecreatedxvc"></A>DateCreated and DateModified Properties Example (VC++)</H1>

<P>This example demonstrates the <A HREF="adprodatecreated.htm">DateCreated</A> and <A HREF="adprodatemodified.htm">DateModified</A> properties by adding a new <A HREF="adobjcolumn.htm">Column</A> to an existing <A HREF="adobjtable.htm">Table</A> and by creating a new <B>Table</B>. The DateOutput procedure is required for this example to run.</P>

<PRE class="code">// BeginDateCreatedCpp
#import "c:\Program Files\Common Files\system\ado\msadox.dll" \
    no_namespace
#import "c:\Program Files\Common Files\system\ado\msado15.dll"

#include "iostream.h"
#include "stdio.h"
#include "conio.h"

//Function declarations
inline void TESTHR(HRESULT x) {if FAILED(x) _com_issue_error(x);};
void DateCreatedX(void);
void DateOutPut(_bstr_t strTemp , _TablePtr tblTemp);

//////////////////////////////////////////////////////////
//                                                      //
//        Main Function                                 //
//                                                      //
//////////////////////////////////////////////////////////
void main()
{
    if(FAILED(::CoInitialize(NULL)))
        return;

    DateCreatedX();

    ::CoUninitialize();
}

//////////////////////////////////////////////////////////
//                                                      //
//       DateCreatedX Function                          //
//                                                      //
//////////////////////////////////////////////////////////
void DateCreatedX()
{
    HRESULT hr = S_OK;

    // Define ADOX object pointers.
    // Initialize pointers on define.
    // These are in the ADOX::  namespace.
    _CatalogPtr m_pCatalog = NULL;
    _TablePtr m_pTblEmployees = NULL;
    _TablePtr m_pTblNew = NULL;

    //Set ActiveConnection of Catalog to this string
    _bstr_t strCnn("Provider='Microsoft.JET.OLEDB.4.0';" 
        "Data Source= 'c:\\Program Files\\Microsoft Office\\"
        "Office\\Samples\\Northwind.mdb';");

    try
    {
        TESTHR(hr = m_pCatalog.CreateInstance(__uuidof (Catalog)));

        // Connect the catalog.
        m_pCatalog-&gt;PutActiveConnection(strCnn);

        m_pTblEmployees = m_pCatalog-&gt;Tables-&gt;GetItem("Employees");

        // Print current information about the Employees table.
        DateOutPut((_bstr_t)"Current properties", m_pTblEmployees);

        // Create and append column to the Employees table.
        m_pTblEmployees-&gt;Columns-&gt;Append("NewColumn", adInteger,0);

        m_pCatalog-&gt;Tables-&gt;Refresh();

        // Print new information about the Employees table.
        DateOutPut((_bstr_t)"After creating a new column", 
            m_pTblEmployees);

        // Delete new column because this is a demonstration.
        m_pTblEmployees-&gt;Columns-&gt;Delete("NewColumn");

        // Create and append new Table object to the Northwind database.
        TESTHR(hr = m_pTblNew.CreateInstance(__uuidof(Table)));

        m_pTblNew-&gt;Name = "NewTable";
        m_pTblNew-&gt;Columns-&gt;Append("NewColumn", adInteger,0);
        m_pCatalog-&gt;Tables-&gt;Append(_variant_t((IDispatch*)m_pTblNew));
        m_pCatalog-&gt;Tables-&gt;Refresh();

        //Print information about the new Table object.
        DateOutPut((_bstr_t)"After creating a new table", m_pCatalog-&gt;
            Tables-&gt;GetItem("NewTable"));

        // Delete new Table object because this is a demonstration.
        m_pCatalog-&gt;Tables-&gt;Delete(m_pTblNew-&gt;Name);
    }

    catch(_com_error &amp;e)
    {
        // Notify the user of errors if any.
        _bstr_t bstrSource(e.Source());
        _bstr_t bstrDescription(e.Description());
          
        printf("\n\tSource :  %s \n\tdescription : %s \n ",
            (LPCSTR)bstrSource,(LPCSTR)bstrDescription);
    }

    catch(...)
    {
        cout &lt;&lt; "Error occured in include files...."&lt;&lt; endl;
    }
}

//////////////////////////////////////////////////////////
//                                                      //
//        DateOutPut Function                           //
//                                                      //
//////////////////////////////////////////////////////////
void DateOutPut(_bstr_t strTemp , _TablePtr tblTemp)
{
    // Print DateCreated and DateModified information about
    // specified Table object.
    cout &lt;&lt; strTemp &lt;&lt; endl;
    cout &lt;&lt; "    Table: " &lt;&lt; tblTemp-&gt;GetName() &lt;&lt; endl;
    cout &lt;&lt; "        DateCreated = " &lt;&lt; (_bstr_t)tblTemp-&gt;
        GetDateCreated() &lt;&lt; endl;
    cout &lt;&lt; "        DateModified = " &lt;&lt; (_bstr_t)tblTemp-&gt;
        GetDateModified() &lt;&lt; endl;
}
// EndDateCreatedCpp</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="adobjcolumn.htm">Column Object</A> | <A HREF="adprodatecreated.htm">DateCreated Property</A> | <A HREF="adprodatemodified.htm">DateModified Property</A> | <A HREF="adobjtable.htm">Table Object</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
