<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Execute, Requery, and Clear Methods Example (JScript)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/samples.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADO 2.5 Samples</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mdmthexecutejs"></A>Execute, Requery, and Clear Methods Example (JScript)</H1>

<P>This example demonstrates the <B>Execute</B> method when run from both a <A HREF="mdobjcommand.htm">Command</A> object and a <A HREF="mdobjconnection.htm">Connection</A> object. It also uses the <A HREF="mdmthadorequery.htm">Requery</A> method to retrieve current data in a <A HREF="mdobjodbrec.htm">Recordset</A>, and the <A HREF="mdmthclear.htm">Clear</A> method to clear the contents of the <A HREF="mdcolerrors.htm">Errors</A> collection. (The <B>Errors</B> collection is accessed via the <B>Connection</B> object of the <A HREF="mdproactivecon.htm">ActiveConnection</A> property of the <A HREF="mdobjodbrec.htm">Recordset</A>.) Name the file <B>ExecuteJS.asp</B>.</P>

<PRE class="code">&lt;!-- BeginExecuteJS --&gt;
&lt;%@LANGUAGE="JScript"%&gt;
&lt;%// use this meta tag instead of adojavas.inc%&gt;
&lt;!--METADATA TYPE="typelib" uuid="00000205-0000-0010-8000-00AA006D2EA4" --&gt;

&lt;%
    strLastName = new String(Request.Form("AuthorLName"));
    
    if (strLastName.indexOf("undefined") &gt; -1)
        strLastName = "";
%&gt;

&lt;html&gt;

&lt;head&gt;
&lt;title&gt;Execute, Requery and Clear Methods Example (JScript)&lt;/title&gt;
&lt;style&gt;
&lt;!--
BODY {
   font-family: 'Verdana','Arial','Helvetica',sans-serif;
   BACKGROUND-COLOR:white;
   COLOR:black;
    }
--&gt;
&lt;/style&gt;
&lt;/head&gt;

&lt;body bgcolor="White"&gt;
&lt;h1&gt;Execute, Requery and Clear Methods Example (JScript)&lt;/h1&gt;
&lt;%
    if (strLastName.length &gt; 0)
    {
        // command and recordset variables
        var Connect = "Provider='sqloledb';Data Source=" + Request.ServerVariables("SERVER_NAME") + ";" +
            "Initial Catalog='pubs';Integrated Security='SSPI';";
        var Cnxn = Server.CreateObject("ADODB.Connection");
        var cmdAuthor = Server.CreateObject("ADODB.Command");
        var rsAuthor = Server.CreateObject("ADODB.Recordset");
        var rsAuthor2 = Server.CreateObject("ADODB.Recordset");
        var SQLAuthor2, strMessage, strMessage2;
        var Err, ErrCount;
    
        try
        {
            // open connection
            Cnxn.Open(Connect);
    
            // command object parameters
            cmdAuthor.CommandText = "SELECT * FROM Authors WHERE au_lname = ?";
            cmdAuthor.Parameters.Append(cmdAuthor.CreateParameter("Last Name", adChar, adParamInput, 20, strLastName));
            cmdAuthor.ActiveConnection = Cnxn;
        
            // recordset from command.execute
            rsAuthor = cmdAuthor.Execute();
        
            // recordset from connection.execute
            SQLAuthor2 = "SELECT * FROM Authors";
            rsAuthor2 = Cnxn.Execute(SQLAuthor2);
        
                // check for errors
                ErrCount = Cnxn.errors.count;
                if(ErrCount !== 0) //write the errors
                {
                    for(Err = 0; Err = ErrCount; Err++){
                        Err = Cnxn.errors.item;
                        Response.Write(Err);
                    }
                    // clean out any existing errors
                    Cnxn.Errors.Clear;
                }
                
                // show the data    
            Response.Write("&lt;HR&gt;&lt;HR&gt;");
        
                // first recordset
            Response.Write("&lt;b&gt;Command.Execute results&lt;/b&gt;")
            while (!rsAuthor.EOF)
            {
                // build output string by starting a new line
                strMessage = "&lt;P&gt;";
                strMessage += "&lt;br&gt;";
                    
                // recordset data 
                strMessage += rsAuthor("au_fname") + " "; 
                strMessage += rsAuthor("au_lname") + " ";
                    
                // end the line
                strMessage += "&lt;/P&gt;";
                
                // show the results
                Response.Write(strMessage);
                    
                // get next record
                rsAuthor.MoveNext;
            }
        
            Response.Write("&lt;HR&gt;&lt;HR&gt;");
        
            // second recordset
            Response.Write("&lt;b&gt;Connection.Execute results&lt;/b&gt;")
            while (!rsAuthor2.EOF)
            {
                // start a new line
                strMessage2 = "&lt;P&gt;";
                    
                // first and last name are in first column
                strMessage2 += rsAuthor2("au_fname") + " " 
                strMessage2 += rsAuthor2("au_lname") + " ";
                    
                // end the line
                strMessage2 += "&lt;/P&gt;";
                
                // show results
                Response.Write(strMessage2);
                
                // get next record
                rsAuthor2.MoveNext;
            }
        }
        catch (e)
        {
            Response.Write(e.message);
        }
        finally
        {
            // clean up
            if (rsAuthor.State == adStateOpen)
                rsAuthor.Close;
            if (rsAuthor2.State == adStateOpen)
                rsAuthor2.Close;
            if (Cnxn.State == adStateOpen)
                Cnxn.Close;
            rsAuthor1 = null;
            rsAuthor2 = null;
            Cnxn = null;
        }
    }
%&gt;

&lt;hr&gt;


&lt;form method="POST" action="ExecuteJS.asp" id=form1 name=form1&gt;
  &lt;p align="left"&gt;Enter last name of author to find (e.g., Ringer): &lt;input type="text" name="AuthorLName" size="40"&gt;&lt;/p&gt;
  &lt;p align="left"&gt;&lt;input type="submit" value="Submit" name="B1"&gt;&lt;input type="reset" value="Reset" name="B2"&gt;&lt;/p&gt;
&lt;/form&gt;
&lt;/body&gt;

&lt;/html&gt;
&lt;!-- EndExecuteJS --&gt;

</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="mdmthclear.htm">Clear Method</A> | <A HREF="mdobjcommand.htm">Command Object</A> | <A HREF="mdobjconnection.htm">Connection Object</A> | <A HREF="mdobjerror.htm">Error Object</A> | <A HREF="mdmthcmdexecute.htm">Execute Method (ADO Command)</A> | <A HREF="mdmthcnnexecute.htm">Execute Method (ADO Connection)</A> | <A HREF="mdobjodbrec.htm">Recordset Object</A> | <A HREF="mdmthadorequery.htm">Requery Method</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
