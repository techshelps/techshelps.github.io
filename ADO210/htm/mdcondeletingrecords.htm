<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Deleting Records Using the Delete Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/ADO.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADO 2.5</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mdcondeletingrecords"></A>Deleting Records Using the Delete Method</H1>

<P>Using the <B>Delete</B> method marks the current record or a group of records in a <B>Recordset</B> object for deletion. If the <B>Recordset</B> object does not allow record deletion, an error occurs. If you are in immediate update mode, deletions occur in the database immediately. If a record cannot be successfully deleted (due to database integrity violations, for example), the record will remain in edit mode after the call to <B>Update</B>. This means that you must cancel the update using <A HREF="mdmthcancelupdate.htm">CancelUpdate</A> before moving off the current record (for example, using <A HREF="mdmthclose.htm">Close</A>, <A HREF="mdmthmove.htm">Move</A>, or <A HREF="mdmthnextrec.htm">NextRecordset</A>).</P>

<P>If you are in batch update mode, the records are marked for deletion from the cache and the actual deletion happens when you call the <B>UpdateBatch</B> method. (To view the deleted records, set the <B>Filter</B> property to <B>adFilterAffectedRecords</B> after <B>Delete</B> is called.)</P>

<P>Attempting to retrieve field values from the deleted record generates an error. After deleting the current record, the deleted record remains current until you move to a different record. Once you move away from the deleted record, it is no longer accessible.</P>

<P>If you nest deletions in a transaction, you can recover deleted records by using the <B>RollbackTrans</B> method. If you are in batch update mode, you can cancel a pending deletion or group of pending deletions by using the <B>CancelBatch</B> method.</P>

<P>If the attempt to delete records fails because of a conflict with the underlying data (for example, a record has already been deleted by another user), the provider returns warnings to the <B>Errors</B> collection but does not halt program execution. A run-time error occurs only if there are conflicts on all the requested records.</P>

<P>If the <B>Unique Table</B> dynamic property is set and the <B>Recordset</B> is the result of executing a JOIN operation on multiple tables, the <B>Delete</B> method will delete rows only from the table named in the <B>Unique Table</B> property.</P>

<P>The <B>Delete</B> method takes an optional argument that allows you to specify which records are affected by the <B>Delete</B> operation. The only valid values for this argument are either of the following ADO <B>AffectEnum</B> enumerated constants:

<UL type="disc">
	<LI><B>adAffectCurrent&nbsp;&nbsp;&nbsp;</B>Affects only the current record.</li>

	<LI><B>adAffectGroup&nbsp;&nbsp;&nbsp;</B>Affects only records that satisfy the current <B>Filter</B> property setting. The <B>Filter</B> property must be set to a <B>FilterGroupEnum</B> value or an array of <B>Bookmarks</B> to use this option.</li>
</UL>

<P>The following code shows an example of specifying <B>adAffectGroup</B> when calling the <B>Delete</B> method. This example adds some records to the sample <B>Recordset</B> and updates the database. Then it filters the <B>Recordset</B> using the <B>adFilterAffectedRecords</B> filter enumerated constant, which leaves only the newly added records visible in the <B>Recordset</B>. Finally, it calls the <B>Delete</B> method and specifies that all of the records that satisfy the current <B>Filter</B> property setting (the new records) should be deleted.</P>

<PRE class="code">'BeginDeleteGroup
    'add some bogus records
    With objRs1
        For i = 0 To 8
            .AddNew
            .Fields("CompanyName") = "Shipper Number " &amp; i + 1
            .Fields("Phone") = "(425) 555-000" &amp; (i + 1)
            .Update
        Next i
        
    're-connect &amp; update
        .ActiveConnection = GetNewConnection
        .UpdateBatch
        
    'filter on newly added records
        .Filter = adFilterAffectedRecords
        Debug.Print "Deleting the " &amp; .RecordCount &amp; _
                    " records you just added."
        
    'delete the newly added bogus records
        .Delete adAffectGroup
        .Filter = adFilterNone
        Debug.Print .RecordCount &amp; " records remain."
        
        .Close
    End With
'EndDeleteGroup</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
