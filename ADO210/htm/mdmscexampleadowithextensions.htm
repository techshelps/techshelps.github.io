<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Visual C++ Extensions Example</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/ADO.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADO 2.5 Appendixes</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mdmscexampleadowithextensions"></A>Visual C++ Extensions Example</H1>

<P>This program shows how values are retrieved from fields and converted to C/C++ variables.</P>

<P>This example also takes advantage of "smart pointers," which automatically handle the COM-specific details of calling <code class="ce">QueryInterface</code> and reference counting for the <B>IADORecordBinding</B> interface.</P>

<P>Without smart pointers, you would code:</P>

<PRE class="code">IADORecordBinding&nbsp;&nbsp;&nbsp;*picRs = NULL;
...
TESTHR(pRs-&gt;QueryInterface(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__uuidof(IADORecordBinding), (LPVOID*)&amp;picRs));
...
if (picRs) picRs-&gt;Release();</PRE>

<P>With smart pointers, you derive the <code class="ce">IADORecordBindingPtr</code> type from the <code class="ce">IADORecordBinding</code> interface with this statement:</P>

<PRE class="code">_COM_SMARTPTR_TYPEDEF(IADORecordBinding, __uuidof(IADORecordBinding));</PRE>

<P>And instantiate the pointer like this:</P>

<PRE class="code">IADORecordBindingPtr picRs(pRs);</PRE>

<P>Because the Visual C++ Extensions are implemented by the <B>Recordset</B> object, the constructor for the smart pointer, <code class="ce">picRs</code>, takes the _<code class="ce">RecordsetPtr</code> pointer, <code class="ce">pRs</code>. The constructor calls <code class="ce">QueryInterface</code> using <code class="ce">pRs</code> to find the <code class="ce">IADORecordBinding</code> interface.</P>

<PRE class="code">// Visual C++ Extensions Example
#import "c:\Program Files\Common Files\System\ADO\msado15.dll" \
&nbsp;&nbsp;&nbsp;no_namespace rename("EOF", "EndOfFile")

#include &lt;stdio.h&gt;
#include &lt;icrsint.h&gt;
_COM_SMARTPTR_TYPEDEF(IADORecordBinding, __uuidof(IADORecordBinding));

inline void TESTHR(HRESULT _hr) { if FAILED(_hr) _com_issue_error(_hr); }

class CCustomRs : public CADORecordBinding
{
BEGIN_ADO_BINDING(CCustomRs)
&nbsp;&nbsp;&nbsp;ADO_VARIABLE_LENGTH_ENTRY2(2, adVarChar, m_ch_fname, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sizeof(m_ch_fname), m_ul_fnameStatus, false)
&nbsp;&nbsp;&nbsp;ADO_VARIABLE_LENGTH_ENTRY2(4, adVarChar, m_ch_lname, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sizeof(m_ch_lname), m_ul_lnameStatus, false)
END_ADO_BINDING()
public:
&nbsp;&nbsp;&nbsp;CHAR&nbsp;&nbsp;&nbsp;&nbsp;m_ch_fname[22];
&nbsp;&nbsp;&nbsp;CHAR&nbsp;&nbsp;&nbsp;&nbsp;m_ch_lname[32];
&nbsp;&nbsp;&nbsp;ULONG&nbsp;&nbsp;&nbsp;m_ul_fnameStatus;
&nbsp;&nbsp;&nbsp;ULONG&nbsp;&nbsp;&nbsp;m_ul_lnameStatus;
};

void main(void)
{
&nbsp;&nbsp;&nbsp;::CoInitialize(NULL);
&nbsp;&nbsp;&nbsp;try 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_RecordsetPtr pRs("ADODB.Recordset");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CCustomRs rs;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IADORecordBindingPtr picRs(pRs);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pRs-&gt;Open("SELECT * FROM Employee ORDER BY lname", 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"dsn=pubs;uid=sa;pwd=;", 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adOpenStatic, adLockOptimistic, adCmdText);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TESTHR(picRs-&gt;BindToRecordset(&amp;rs));

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (!pRs-&gt;EndOfFile)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Process data in the CCustomRs C++ instance variables.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("Name = %s %s\n",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(rs.m_ul_fnameStatus == adFldOK ? rs.m_ch_fname: "&lt;Error&gt;"), 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(rs.m_ul_lnameStatus == adFldOK ? rs.m_ch_lname: "&lt;Error&gt;"));

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Move to the next row of the Recordset. 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Fields in the new row will automatically be 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// placed in the CCustomRs C++ instance variables.
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pRs-&gt;MoveNext();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;catch (_com_error &amp;e )
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("Error:\n");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("Code = %08lx\n", e.Error());
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("Meaning = %s\n", e.ErrorMessage());
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("Source = %s\n", (LPCSTR) e.Source());
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("Description = %s\n", (LPCSTR) e.Description());
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;::CoUninitialize();
}</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="mdmscusingadovcextensions.htm">Using Visual C++ Extensions for ADO</A> | <A HREF="mdmscvcextensionsheaderindetail.htm">Visual C++ Extensions Header</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
