<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Recordset (Visual C++ Syntax Index with #import)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/ADO.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADO 2.5 API Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mdidxrecordsetvcimport"></A>Recordset (Visual C++ Syntax Index with #import)</H1>

<P class="label"><B>Methods</B></P>

<PRE class="code">HRESULT <A HREF="mdmthaddnew.htm">AddNew</A>( const _variant_t &amp; <I>FieldList</I> = vtMissing,
&nbsp;&nbsp;&nbsp;&nbsp;const    _variant_t &amp; <I>Values</I> =<I> </I>vtMissing<I> </I>);

HRESULT <A HREF="mdmthadocancel.htm">Cancel</A>( );

HRESULT <A HREF="mdmthcancelbatch.htm">CancelBatch</A>( enum AffectEnum<I> AffectRecords </I>);

HRESULT <A HREF="mdmthcancelupdate.htm">CancelUpdate</A>( );

_RecordsetPtr <A HREF="mdmthclone.htm">Clone</A>( enum LockTypeEnum<I> LockType </I>);

HRESULT <A HREF="mdmthclose.htm">Close</A>( );

enum CompareEnum <A HREF="mdmthcomparebookmarks.htm">CompareBookmarks</A>( const _variant_t
&nbsp;&nbsp;&nbsp;&nbsp;&amp; <I>Bookmark1</I>, const &nbsp;&nbsp;&nbsp;&nbsp;_variant_t &amp; <I>Bookmark2</I> );

HRESULT <A HREF="mdmthrstdelete.htm">Delete</A>( enum AffectEnum<I> AffectRecords </I>);

HRESULT <A HREF="mdmthfindmethodado.htm">Find</A>( _bstr_t <I>Criteria</I>, long <I>SkipRecords</I>, enum
&nbsp;&nbsp;&nbsp;&nbsp;SearchDirectionEnum <I>SearchDirection</I>, const _variant_t &amp; <I>Start</I> =
&nbsp;&nbsp;&nbsp;&nbsp;vtMissing );

_variant_t <A HREF="mdmthgetrows.htm">GetRows</A>( long <I>Rows</I>, const _variant_t &amp; <I>Start</I> =
&nbsp;&nbsp;&nbsp;&nbsp;vtMissing, const _variant_t &amp; <I>Fields</I> =<I> vtMissing </I>);

_bstr_t <A HREF="mdmthgetstringmethod(recordset)ado.htm">GetString</A>( enum
&nbsp;&nbsp;&nbsp;&nbsp;StringFormatEnum <I>StringFormat</I>, long <I>NumRows</I>, &nbsp;&nbsp;&nbsp;&nbsp;_bstr_t 
&nbsp;&nbsp;&nbsp;&nbsp;<I>ColumnDelimeter</I>, _bstr_t <I>RowDelimeter</I>, _bstr_t<I> NullExpr </I>);

HRESULT <A HREF="mdmthmove.htm">Move</A>( long <I>NumRecords</I>, const _variant_t &amp; <I>Start</I> =<I> 
</I>&nbsp;&nbsp;&nbsp;&nbsp;vtMissing<I> </I>);

HRESULT <A HREF="mdmthmovefirst.htm">MoveFirst</A>( );
HRESULT <B>MoveLast</B>( );
HRESULT <B>MoveNext</B>( );
HRESULT <B>MovePrevious</B>( );

_RecordsetPtr <A HREF="mdmthnextrec.htm">NextRecordset</A>( VARIANT *<I> RecordsAffected </I>);

HRESULT <A HREF="mdmthrstopen.htm">Open</A>( const _variant_t &amp; <I>Source</I>, const _variant_t &amp;
&nbsp;&nbsp;&nbsp;&nbsp;<I>ActiveConnection</I>, enum CursorTypeEnum <I>CursorType</I>, enum LockTypeEnum
&nbsp;&nbsp;&nbsp;&nbsp;<I>LockType</I>, long<I> Options </I>);

HRESULT <A HREF="mdmthadorequery.htm">Requery</A>( long<I> Options </I>);

HRESULT <A HREF="mdmthupdate.htm">Update</A>( const _variant_t &amp; <I>Fields</I> = vtMissing, const
&nbsp;&nbsp;&nbsp;&nbsp;_variant_t &amp; &nbsp;&nbsp;&nbsp;&nbsp;<I>Values</I> =<I> </I>vtMissing<I> </I>);

HRESULT <A HREF="mdmthupdatebatch.htm">UpdateBatch</A>( enum AffectEnum<I> AffectRecords </I>);

HRESULT <A HREF="mdmthadoresync.htm">Resync</A>( enum AffectEnum <I>AffectRecords</I>, enum
&nbsp;&nbsp;&nbsp;&nbsp;ResyncEnum &nbsp;&nbsp;&nbsp;&nbsp;<I>ResyncValues</I> );

HRESULT <A HREF="mdmthrstsave.htm">Save</A>( const _variant_t &amp; <I>Destination</I>, enum
&nbsp;&nbsp;&nbsp;&nbsp;PersistFormatEnum &nbsp;&nbsp;&nbsp;&nbsp;<I>PersistFormat</I> );

HRESULT <A HREF="mdmthseek.htm">Seek</A>( const _variant_t &amp; KeyValues, enum SeekEnum<I>
</I>&nbsp;&nbsp;&nbsp;&nbsp;<I>SeekOption </I>);

VARIANT_BOOL <A HREF="mdmthsupports.htm">Supports</A>( enum CursorOptionEnum<I> CursorOptions </I>);</PRE>

<P class="label"><B>Properties</B></P>

<PRE class="code">enum PositionEnum <B>GetAbsolutePage</B>( );
void <B>PutAbsolutePage</B>( enum PositionEnum<I> pl </I>);
__declspec(property(get=GetAbsolutePage,put=PutAbsolutePage)) enum
&nbsp;&nbsp;&nbsp;&nbsp;PositionEnum <A HREF="mdproabpage.htm">AbsolutePage</A>;

enum PositionEnum <B>GetAbsolutePosition</B>( );
void <B>PutAbsolutePosition</B>( enum PositionEnum<I> pl </I>);
__declspec(property(get=GetAbsolutePosition,put=PutAbsolutePosition))
&nbsp;&nbsp;&nbsp;&nbsp;enum PositionEnum <A HREF="mdproabpos.htm">AbsolutePosition</A>;

IDispatchPtr <B>GetActiveCommand</B>( );
__declspec(property(get=GetActiveCommand)) IDispatchPtr <A HREF="mdproactivecommand.htm">ActiveCommand</A>;

void <A HREF="mdproactivecon.htm">PutRefActiveConnection</A>( IDispatch *<I> pvar </I>);
void <B>PutActiveConnection</B>( const _variant_t &amp;<I> pvar </I>);
_variant_t <B>GetActiveConnection</B>( );

enum CursorLocationEnum <B>GetCursorLocation</B>( );
void <B>PutCursorLocation</B>( enum CursorLocationEnum<I> plCursorLoc </I>);
__declspec(property(get=GetCursorLocation,put=PutCursorLocation)) enum
&nbsp;&nbsp;&nbsp;&nbsp;CursorLocationEnum <A HREF="mdprocursorlocation.htm">CursorLocation</A>;

VARIANT_BOOL <B>GetBOF</B>( );
__declspec(property(get=GetBOF)) VARIANT_BOOL <A HREF="mdprobof.htm">BOF</A>;

VARIANT_BOOL <B>GetEndOfFile</B>( ); // Actually, <B>GetEOF</B>. Renamed in #import.
__declspec(property(get=GetEndOfFile)) VARIANT_BOOL <A HREF="mdprobof.htm">EndOfFile</A>;

_variant_t <B>GetBookmark</B>( );
void <B>PutBookmark</B>( const _variant_t &amp;<I> pvBookmark </I>);
__declspec(property(get=GetBookmark,put=PutBookmark)) _variant_t
&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="mdprobookmark.htm">Bookmark</A>;

long <B>GetCacheSize</B>( );
void <B>PutCacheSize</B>( long<I> pl </I>);
__declspec(property(get=GetCacheSize,put=PutCacheSize)) long
&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="mdprocachesize.htm">CacheSize</A>;

enum CursorTypeEnum <B>GetCursorType</B>( );
void <B>PutCursorType</B>( enum CursorTypeEnum<I> plCursorType </I>);
__declspec(property(get=GetCursorType,put=PutCursorType)) enum
&nbsp;&nbsp;&nbsp;&nbsp;CursorTypeEnum <A HREF="mdprocursortype.htm">CursorType</A>;

_bstr_t <B>GetDataMember</B>( );
void <B>PutDataMember</B>( _bstr_t<I> pbstrDataMember </I>);
__declspec(property(get=GetDataMember,put=PutDataMember)) _bstr_t
&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="mdprodatamember.htm">DataMember</A>;

IUnknownPtr <B>GetDataSource</B>( );
void <B>PutRefDataSource</B>( IUnknown *<I> ppunkDataSource </I>);
__declspec(property(get=GetDataSource,put=PutRefDataSource)) IUnknownPtr
&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="mdprodatasource.htm">DataSource</A>;

enum EditModeEnum <B>GetEditMode</B>( );
__declspec(property(get=GetEditMode)) enum EditModeEnum <A HREF="mdproeditmode.htm">EditMode</A>;

FieldsPtr <B>GetFields</B>( );
__declspec(property(get=GetFields)) FieldsPtr <A HREF="mdcolfields.htm">Fields</A>;

_variant_t <B>GetFilter</B>( );
void <B>PutFilter</B>( const _variant_t &amp;<I> Criteria </I>);
__declspec(property(get=GetFilter,put=PutFilter)) _variant_t <A HREF="mdprofilter.htm">Filter</A>;

_bstr_t <B>GetIndex</B>( );
void <B>PutIndex</B>( _bstr_t<I> pbstrIndex </I>);
__declspec(property(get=GetIndex,put=PutIndex)) _bstr_t <A HREF="mdproindex.htm">Index</A>;

enum LockTypeEnum <B>GetLockType</B>( );
void <B>PutLockType</B>( enum LockTypeEnum<I> plLockType </I>);
__declspec(property(get=GetLockType,put=PutLockType)) enum LockTypeEnum
&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="mdprolocktype.htm">LockType</A>;

enum MarshalOptionsEnum <B>GetMarshalOptions</B>( );
void <B>PutMarshalOptions</B>( enum MarshalOptionsEnum<I> peMarshal </I>);
__declspec(property(get=GetMarshalOptions,put=PutMarshalOptions)) enum
&nbsp;&nbsp;&nbsp;&nbsp;MarshalOptionsEnum <A HREF="mdpromarshaloptions.htm">MarshalOptions</A>;

long <B>GetMaxRecords</B>( );
void <B>PutMaxRecords</B>( long<I> plMaxRecords </I>);
__declspec(property(get=GetMaxRecords,put=PutMaxRecords)) long
&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="mdpromaxrecords.htm">MaxRecords</A>;

long <B>GetPageCount</B>( );
__declspec(property(get=GetPageCount)) long <A HREF="mdpropagecount.htm">PageCount</A>;

long <B>GetPageSize</B>( );
void <B>PutPageSize</B>( long<I> pl </I>);
__declspec(property(get=GetPageSize,put=PutPageSize)) long <A HREF="mdpropagesize.htm">PageSize</A>;

long <B>GetRecordCount</B>( );
__declspec(property(get=GetRecordCount)) long <A HREF="mdprorecordcount.htm">RecordCount</A>;

_bstr_t <B>GetSort</B>( );
void <B>PutSort</B>( _bstr_t<I> Criteria </I>);
__declspec(property(get=GetSort,put=PutSort)) _bstr_t <A HREF="mdprosortpropertyado.htm">Sort</A>;

void <A HREF="mdprorstsource.htm">PutRefSource</A>( IDispatch *<I> pvSource </I>);
void <B>PutSource</B>( _bstr_t<I> pvSource </I>);
_variant_t <B>GetSource</B>( );

long <B>GetState</B>( );
__declspec(property(get=GetState)) long <A HREF="mdprostate.htm">State</A>;

long <B>GetStatus</B>( );
__declspec(property(get=GetStatus)) long <A HREF="mdprostatus.htm">Status</A>;

VARIANT_BOOL <B>GetStayInSync</B>( );
void <B>PutStayInSync</B>( VARIANT_BOOL<I> pbStayInSync </I>);
__declspec(property(get=GetStayInSync,put=PutStayInSync)) VARIANT_BOOL
&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="mdprostayinsync.htm">StayInSync</A>;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="mdobjodbrec.htm">Recordset Object</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
