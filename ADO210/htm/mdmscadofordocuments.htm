<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Chapter 10: Records and Streams</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/ADO.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADO 2.5</TD>
<TD valign="middle"><a href="#Feedback"><IMG name="feedb" onclick="startFeedback(SDKFeedB)" style="CURSOR: hand" hspace="15" alt="" src="../stylesheets/mailto.gif" align="right"></a></TD>
					</TR>
				</TABLE>
			</div>
		</div>
<DIV id="scrtext" valign="bottom">
		<H1 class="dtH1"><A NAME="mdmscadofordocuments"></A>Chapter 10: 
			Records and Streams</H1>
		<P>ADO currently provides the<A HREF="mdobjodbrec.htm">Recordset</A>
			object as the primary means of accessing information in data sources, such as 
			relational databases. However, some providers support the <A HREF="mdobjrecord.htm">
				Record</A> and <A HREF="mdobjstream.htm">Stream</A> objects as alternative 
			or complementary objects with which data from providers can be manipulated. For 
			specifics on <B>Record</B> behavior, see your provider's documentation.</P>
		<H2 class="dtH2" valign="bottom">Records</H2>
		<P><B>Record</B> objects essentially function as one-row <B>Recordset</B>s. 
			However, <B>Records</B> have limited functionality compared to <B>Recordsets</B>
			and they have different properties and methods.The source for the data in a <B>Record</B>
			object can be a command which returns one row of data from the provider. Using <B>Record</B>
			objects rather than <B>Recordset</B> objects to receive the results from a 
			query that returns one row of data eliminates the overhead of instantiating the 
			more complex <B>Recordset</B> object.</P>
		<p><B>Record</B> objects can serve another purpose, particularly 
			with providers for data sources other than traditional relational databases, 
			such as the <A HREF="mdrefproviderrosebud.htm">Microsoft OLE DB Provider for 
				Internet Publishing</A>. Much of the information that must be processed 
			exists, not as tables in databases, but as messages in electronic mail systems 
			and files in modern file systems. The <B>Record</B> and <B>Stream</B> objects 
			facilitate access to information stored in sources other than relational 
			databases.</P>
		<p>The <B>Record</B> object can represent and manage data such as 
			directories and files in a file system or folders and messages in an e-mail 
			system. For these purposes, the source for the <B>Record</B> can be the current 
			row of an open <B>Recordset</B>, an absolute URL, or a relative URL in 
			conjunction with an open <A HREF="mdobjconnection.htm">Connection</A> object.</P>
		<p>Typically, a <B>Recordset</B> can be used to represent a 
			container or parent in a hierarchy such as a folder or directory. A <B>Record</B>
			can be used to return specific information about one node in the parent 
			container, such as a file or document. The primary reason <B>Records</B> are 
			used to represent this type of information is that these sources of data are 
			heterogenous. This means that each <B>Record</B> may have a different set and 
			number of fields. Traditional <B>Recordsets</B> containing rows from a database 
			are homogenous, which means that each row has the same number and type of 
			fields.</P>
		<p>For more information about using the <B>Record</B> object for 
			processing this heterogeneous data from providers such as the Internet 
			Publishing Provider, see <A HREF="mdmscusingadoforinetpub.htm">Using ADO for 
				Internet Publishing</A>.</P>
		<H2 class="dtH2" valign="bottom">Streams</H2>
		<p>The <B>Stream</B> object provides the means to read, write, and 
			manage a stream of bytes. This byte stream may be text or binary and is limited 
			in size only by system resources. Typically, ADO <B>Stream</B> objects are used 
			for the following purposes:
			<UL type="disc">
				<LI>
					To contain the text or bytes that comprise a file or message, typically used 
					with providers such as the Microsoft OLE DB Provider for Internet Publishing. 
					For more information about this use of <B>Stream</B> objects, see <A HREF="mdmscusingadoforinetpub.htm">
						Using ADO for Internet Publishing</A>.</LI></UL>
		<P>A <B>Stream</B> object can be opened on:
			<UL type="disc">
				<LI>
				A simple file specified with a URL.
				<LI>
					A field of a <B>Record</B> or <B>Recordset</B> containing a <B>Stream</B>
				object.
				<LI>
					The default stream of a <B>Record</B> or <B>Recordset</B>
				object representing a directory or compound file.
				<LI>
				A resource field containing the URL of a simple file.
				<LI>
					No particular source at all. In this case, a <B>Stream</B> object is opened in 
					memory. Data can be written to it and then saved in another <B>Stream</B>
				or file.
				<LI>
					A BLOB field in a <B>Recordset</B>.</LI>
			</UL>
			<H4><A NAME="feedback"></A></H4>
			<SPAN id="SDKFeedB"></SPAN>
		<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">© 1998-2002 Microsoft 
				Corporation. All rights reserved.</A></P>
	</body>
</HTML>
