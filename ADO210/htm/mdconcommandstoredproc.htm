<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="ltr">
	<HEAD>
		<TITLE>Calling a Stored Procedure with a Command</TITLE>
		<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
		<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
		<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
		<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/ADO.js"></SCRIPT>
	</HEAD>
	<body topmargin="0" id="bodyID" class="dtBODY">
		
		<div id="scrbanner">
			<div id="bannerrow1">
				<TABLE CLASS="bannerparthead" CELLSPACING="0">
					<TR ID="hdr">
						<TD CLASS="bannerparthead td" nowrap>ADO 2.5</TD>
						<TD valign="center"><a href="#Feedback"><IMG name="feedb" onclick="startFeedback(SDKFeedB)" style="CURSOR: hand" hspace="15" alt="" src="../stylesheets/mailto.gif" align="right"></a></TD>
					</TR>
				</TABLE>
			</div>
		</div>
		<DIV id="scrtext" valign="bottom">
			<H1 class="dtH1"><A NAME="mdconcommandstoredproc"></A>Calling a Stored Procedure 
				with a Command</H1>
			<P>You can also use a command when calling a stored procedure. The following code 
				calls a stored procedure in the Northwind sample database, called 
				CustOrdersOrders, which is defined as follows:</P>
			<PRE class="code">CREATE PROCEDURE CustOrdersOrders @CustomerID nchar(5) AS
SELECT OrderID, OrderDate, RequiredDate, ShippedDate
FROM Orders
WHERE CustomerID = @CustomerID
ORDER BY OrderID</PRE>
			<P>This stored procedure is similar to the command used in <A HREF="mdconcommandparams.htm">
					Command Object Parameters</A>, in that it takes a customer ID parameter and 
				returns information about that customer's orders. The code below uses this 
				stored procedure as the source for an ADO <B>Recordset</B>.</P>
			<P>Using the stored procedure allows you to access another capability of ADO: the <B>Parameters</B>
				collection <B>Refresh</B> method. By using this method, ADO can automatically 
				fill in all information about the parameters required by the command at run 
				time. There is a performance penalty in using this technique, because ADO must 
				query the data source for the information about the parameters.</P>
			<P>Other important differences exist between the code below and the code in <A HREF="mdconcommandparams.htm">
					Command Object Parameters</A>, where the parameters were entered manually. 
				First, this code does not set the <B>Prepared</B> property to <B>True</B> because 
				it is a SQL Server stored procedure and is precompiled by definition. Second, 
				the <B>CommandType</B> property of the <B>Command</B> object changed to <B>adCmdStoredProc</B>
				in the second example to inform ADO that the command was a stored procedure.</P>
			<PRE class="code">'BeginAutoParamCmd
    On Error GoTo ErrHandler:
    
    Dim objConn As New ADODB.Connection
    Dim objCmd As New ADODB.Command
    Dim objParm1 As New ADODB.Parameter
    Dim objRs As New ADODB.Recordset
    
    ' Set CommandText equal to the stored procedure name.
    objCmd.CommandText = "CustOrdersOrders"
    objCmd.CommandType = adCmdStoredProc
            
    ' Connect to the data source.
    Set objConn = GetNewConnection
    objCmd.ActiveConnection = objConn
        
    ' Automatically fill in parameter info from stored procedure.
    objCmd.Parameters.Refresh
    
    ' Set the param value.
    objCmd(1) = "ALFKI"
    
    ' Execute once and display...
    Set objRs = objCmd.Execute
        
    Debug.Print objParm1.Value
    Do While Not objRs.EOF
        Debug.Print vbTab &amp; objRs(0) &amp; vbTab &amp; objRs(1) &amp; vbTab &amp; _
                    objRs(2) &amp; vbTab &amp; objRs(3)
        objRs.MoveNext
    Loop
        
    ' ...then set new param value, re-execute command, and display.
    objCmd(1) = "CACTU"
    Set objRs = objCmd.Execute
        
    Debug.Print objParm1.Value
    Do While Not objRs.EOF
        Debug.Print vbTab &amp; objRs(0) &amp; vbTab &amp; objRs(1) &amp; vbTab &amp; _
                    objRs(2) &amp; vbTab &amp; objRs(3)
        objRs.MoveNext
    Loop
        
    'clean up
    objRs.Close
    objConn.Close
    Set objRs = Nothing
    Set objConn = Nothing
    Set objCmd = Nothing
    Set objParm1 = Nothing
    Exit Sub
    
ErrHandler:
    'clean up
    If objRs.State = adStateOpen Then
        objRs.Close
    End If
    
    If objConn.State = adStateOpen Then
        objConn.Close
    End If
    
    Set objRs = Nothing
    Set objConn = Nothing
    Set objCmd = Nothing
    Set objParm1 = Nothing
    
    If Err &lt;&gt; 0 Then
        MsgBox Err.Source &amp; "--&gt;" &amp; Err.Description, , "Error"
    End If
'EndAutoParamCmd</PRE>
			<H4><A NAME="feedback"></A></H4>
			<SPAN id="SDKFeedB"></SPAN>
		</DIV>
		<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">© 1998-2002 Microsoft 
				Corporation. All rights reserved.</A></P>
	</body>
</HTML>
