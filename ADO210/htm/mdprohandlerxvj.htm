<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Handler Property Example (VJ++)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/ADO.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>RDS 2.5 API Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mdprohandlerxvj"></A>Handler Property Example (VJ++)</H1>

<P>This example demonstrates the <A HREF="mdobjdatacontrol.htm">RDS DataControl</A> object <A HREF="mdprohandlerpropertyrds.htm">Handler</A> property. (See <A HREF="mdmscdatafactorycustomization.htm">DataFactory Customization</A> for more details.)</P>

<P>Assume the following sections in the parameter file, Msdfmap.ini, located on the server:</P>

<PRE class="code">[connect AuthorDataBase]
Access=ReadWrite
Connect="DSN=Pubs"
[sql AuthorById]
SQL="SELECT * FROM Authors WHERE au_id = ?"</PRE>

<P>Your code looks like the following. The command assigned to the <A HREF="mdprosqlprop.htm">SQL</A> property will match the <I>AuthorById</I> identifier and will retrieve a row for author Michael O'Leary. Although the <A HREF="mdproconnectprop.htm">Connect</A> property in your code specifies the Northwind data source, that data source will be overwritten by the Msdfmap.ini <I>connect</I> section. The <B>DataControl</B> object's <A HREF="mdprorecordset.htm">Recordset</A> property is assigned to a disconnected <A HREF="mdobjodbrec.htm">Recordset</A> object purely as a coding convenience.</P>

<P class="normal"><CODE>// BeginHandlerJ</CODE></P>

<P class="normal"><CODE>import com.ms.wfc.data.*;</CODE></P>

<P class="normal"><CODE>import com.ms.wfc.data.rds.*;</CODE></P>

<P class="normal"><CODE>import java.io.* ;</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>public class HandlerX</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>// The main entry point for the application.</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>public static void main (String[] args)</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>HandlerX();</CODE></P>

<P class="normal"><CODE>System.exit(0);</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>// HandlerX function</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>static void HandlerX()</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>// Define ADO Objects.</CODE></P>

<P class="normal"><CODE>Recordset rstAuthors = null;</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>// Declarations.</CODE></P>

<P class="normal"><CODE>BufferedReader in = </CODE></P>

<P class="normal"><CODE>new BufferedReader (new InputStreamReader(System.in));</CODE></P>

<P class="normal"><CODE>int intCount = 0;</CODE></P>

<P class="normal"><CODE>int intDisplaysize = 15;</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>try</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>IBindMgr dc = (IBindMgr) new DataControl();</CODE></P>

<P class="normal"><CODE>dc.setServer("MyServer");</CODE></P>

<P class="normal"><CODE>dc.setConnect("Data Source=Northwind");</CODE></P>

<P class="normal"><CODE>dc.setSQL("AuthorById(267-41-2394)");</CODE></P>

<P class="normal"><CODE>dc.Refresh();                  // Retrieve the record.</CODE></P>

<P class="normal"><CODE>// Use another recordset as a convenience.</CODE></P>

<P class="normal"><CODE>rstAuthors = (Recordset)dc.getRecordset();</CODE></P>

<P class="normal"><CODE>System.out.println("Author is '" +</CODE></P>

<P class="normal"><CODE>rstAuthors.getField("au_fname").getString() +</CODE></P>

<P class="normal"><CODE>" " +</CODE></P>

<P class="normal"><CODE>rstAuthors.getField("au_lname").getString() +</CODE></P>

<P class="normal"><CODE>"'");</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>System.out.println("\nPress &lt;Enter&gt; to continue..");</CODE></P>

<P class="normal"><CODE>in.readLine();</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"><CODE>catch( AdoException ae )</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>// Notify user of any errors that result from ADO.</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>// As passing a Recordset, check for null pointer first.</CODE></P>

<P class="normal"><CODE>if (rstAuthors != null)</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>PrintProviderError(rstAuthors.getActiveConnection());</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"><CODE>else</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>System.out.println("Exception: " + ae.getMessage());</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>// System read requires this catch.</CODE></P>

<P class="normal"><CODE>catch( java.io.IOException je)</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>PrintIOError(je);</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"><CODE>catch(java.lang.UnsatisfiedLinkError e)</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>System.out.println("Exception: " + e.getMessage());</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"><CODE>catch(java.lang.NullPointerException ne)</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>System.out.println(</CODE></P>

<P class="normal"><CODE>"Exception: Attempt to use null where an object is required.");</CODE></P>

<P class="normal"><CODE>}   </CODE></P>

<P class="normal"><CODE></CODE></P>

<P class="normal"><CODE>finally</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>// Cleanup objects before exit.   </CODE></P>

<P class="normal"><CODE>if (rstAuthors != null)</CODE></P>

<P class="normal"><CODE>if (rstAuthors.getState() == 1)</CODE></P>

<P class="normal"><CODE>rstAuthors.close();</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>// PrintProviderError Function</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>static void PrintProviderError( Connection Cnn1 )</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>// Print Provider errors from Connection object.</CODE></P>

<P class="normal"><CODE>// ErrItem is an item object in the Connection’s Errors collection.</CODE></P>

<P class="normal"><CODE>com.ms.wfc.data.Error  ErrItem = null;</CODE></P>

<P class="normal"><CODE>long nCount = 0;</CODE></P>

<P class="normal"><CODE>int  i      = 0;</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>nCount = Cnn1.getErrors().getCount();</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>// If there are any errors in the collection, print them.</CODE></P>

<P class="normal"><CODE>if( nCount &gt; 0);</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>// Collection ranges from 0 to nCount - 1</CODE></P>

<P class="normal"><CODE>for (i = 0; i&lt; nCount; i++)</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>ErrItem = Cnn1.getErrors().getItem(i);</CODE></P>

<P class="normal"><CODE>System.out.println("\t Error number: " + ErrItem.getNumber()</CODE></P>

<P class="normal"><CODE>+ "\t" + ErrItem.getDescription() );</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>// PrintIOError Function</CODE></P>

<P class="normal"></P>

<P class="normal"><CODE>static void PrintIOError( java.io.IOException je)</CODE></P>

<P class="normal"><CODE>{</CODE></P>

<P class="normal"><CODE>System.out.println("Error \n");</CODE></P>

<P class="normal"><CODE>System.out.println("\tSource = " + je.getClass() + "\n");</CODE></P>

<P class="normal"><CODE>System.out.println("\tDescription = " + je.getMessage() + "\n");</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"><CODE>}</CODE></P>

<P class="normal"><CODE>// EndHandlerJ</CODE></P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="mdobjdatacontrol.htm">DataControl Object (RDS)</A> | <A HREF="mdprohandlerpropertyrds.htm">Handler Property (RDS)</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
