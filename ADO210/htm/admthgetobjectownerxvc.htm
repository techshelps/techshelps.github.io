<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetObjectOwner and SetObjectOwner Methods Example (VC++)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/samples.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADOX 2.5</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="admthgetobjectownerxvc"></A>GetObjectOwner and SetObjectOwner Methods Example (VC++)</H1>

<P>This example demonstrates the <A HREF="admthgetobjectowner.htm">GetObjectOwner</A> and <A HREF="admthsetobjectowner.htm">SetObjectOwner</A> methods. This code assumes the existence of the group Accounting (see the <A HREF="admthgroupsusersappendxvc.htm">Groups and Users Append, ChangePassword Methods Example (VC++)</A> to see how to add this group to the system). The owner of the Categories table is set to Accounting.</P>

<PRE class="code">// BeginOwnersCpp
#import "c:\Program Files\Common Files\system\ado\msadox.dll" no_namespace

#include "iostream.h"
#include "stdio.h"
#include "conio.h"

//Function declarations
inline void TESTHR(HRESULT x) {if FAILED(x) _com_issue_error(x);};
void OwnersX(void);

//////////////////////////////////////////////////////////
//                                                      //
//        Main Function                                 //
//                                                      //
//////////////////////////////////////////////////////////
void main()
{
    if(FAILED(::CoInitialize(NULL)))
        return; 

    OwnersX();

        ::CoUninitialize();
}

//////////////////////////////////////////////////////////
//                                                      //
//      OwnersX Function                                //
//                                                      //
//////////////////////////////////////////////////////////
void OwnersX()
{
    HRESULT hr = S_OK;

    // Define ADOX object pointers.
    // Initialize pointers on define.
    // These are in the ADOX::  namespace.
    _TablePtr m_pTable = NULL;
    _CatalogPtr m_pCatalog = NULL;

    try
    {
        TESTHR(hr = m_pCatalog.CreateInstance(__uuidof(Catalog)));
        TESTHR(hr = m_pTable.CreateInstance(__uuidof(Table)));

        //Open the Catalog.
        m_pCatalog-&gt;PutActiveConnection(
            "Provider='Microsoft.JET.OLEDB.4.0';" \
            "data source='c:\\Program Files\\Microsoft Office\\"
            "Office\\Samples\\Northwind.mdb';" 
            "jet oledb:system database='c:\\Program Files\\Microsoft Office\\"
            "Office\\system.mdw'");

        //Print the original owner of Categories
        _bstr_t strOwner = m_pCatalog-&gt;GetObjectOwner("Categories",
            adPermObjTable);
        cout &lt;&lt; "Owner of Categories: " &lt;&lt; strOwner &lt;&lt; "\n" &lt;&lt; endl;
        int iLineCnt = 2; 

        //Create and append new group with a string.
        m_pCatalog-&gt;Groups-&gt;Append("Accounting");

        //Set the owner of Categories to Accounting.
        m_pCatalog-&gt;SetObjectOwner("Categories",
            adPermObjTable,"Accounting");

        _variant_t vIndex;
        //List the owners of all tables and columns in the catalog.
        for (long iIndex = 0; iIndex &lt; m_pCatalog-&gt;Tables-&gt;Count; iIndex++)
        {
            vIndex = iIndex;
            m_pTable = m_pCatalog-&gt;Tables-&gt;GetItem(vIndex);
            cout &lt;&lt; "Table: " &lt;&lt; m_pTable-&gt;Name &lt;&lt; endl;
            cout &lt;&lt; "   Owner: " &lt;&lt; m_pCatalog-&gt;
                GetObjectOwner(m_pTable-&gt;Name,adPermObjTable) &lt;&lt; endl;
            if (iLineCnt%16 == 0)
                {
                    printf("\nPress any key to continue...\n");
                    getch();
                }
                iLineCnt = iLineCnt + 2;
        }

        //Restore the original owner of Categories
        m_pCatalog-&gt;SetObjectOwner("Categories",adPermObjTable,strOwner);

        //Delete Accounting
        m_pCatalog-&gt;Groups-&gt;Delete("Accounting");
    }
    catch(_com_error &amp;e)
    {
        // Notify the user of errors if any.
        _bstr_t bstrSource(e.Source());
        _bstr_t bstrDescription(e.Description());
          
        printf("\n\tSource :  %s \n\tdescription : %s \n ",
             (LPCSTR)bstrSource,(LPCSTR)bstrDescription);
    }

    catch(...)
    {
        cout &lt;&lt; "Error occured in include files...."&lt;&lt; endl;
    }
}
// EndOwnersCpp</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
