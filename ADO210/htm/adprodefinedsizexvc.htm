<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DefinedSize Property Example (VC++)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/samples.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADOX 2.5</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="adprodefinedsizexvc"></A>DefinedSize Property Example (VC++)</H1>

<P>This example demonstrates the <A HREF="adprodefinedsize.htm">DefinedSize</A> property of a <A HREF="adobjcolumn.htm">Column</A>. The code will redefine the size of the FirstName column of the <B>Employees</B> table of the <I>Northwind</I> database. Then, the change in the values of the FirstName <A HREF="mdobjfield.htm">Field</A> of a <A HREF="mdobjodbrec.htm">Recordset</A> based on the <B>Employees</B> table is displayed. Note that by default, the FirstName field becomes padded with spaces after you redefine the <B>DefinedSize</B> property.</P>

<PRE class="code">// BeginDefinedSizeCpp
#import "c:\Program Files\Common Files\system\ado\msadox.dll" \
    no_namespace
#import "C:\Program Files\Common Files\System\ADO\msado15.dll" \
     rename("EOF", "EndOfFile")

#include "iostream.h"
#include "stdio.h"
#include "conio.h"

// Function declarations
inline void TESTHR(HRESULT x) {if FAILED(x) _com_issue_error(x);};
void DefinedSizeX(void);

//////////////////////////////////////////////////////////
//                                                      //
//      Main Function                                   //
//                                                      //
//////////////////////////////////////////////////////////
void main()
{
    if(FAILED(::CoInitialize(NULL)))
        return;

    DefinedSizeX();

    ::CoUninitialize();
}

//////////////////////////////////////////////////////////
//                                                      //
//      DefinedSizeX Function                           //
//                                                      //
//////////////////////////////////////////////////////////
void DefinedSizeX(void)
{
    HRESULT hr = S_OK;

    // Define ADOX object pointers.
    // Initialize pointers on define.
    // These are in the ADOX::  namespace.
    _CatalogPtr m_pCatNorthwind   = NULL;
    _ColumnPtr m_pColFirstName    = NULL;
    _ColumnPtr m_pColNewFirstName = NULL;

    // Define ADODB object pointers
    ADODB::_RecordsetPtr m_pRstEmployees  = NULL;

    // Define string variables.
    _bstr_t strCnn("Provider='Microsoft.JET.OLEDB.4.0';data source="
        "'c:\\Program Files\\Microsoft Office\\Office\\Samples\\"
        "Northwind.mdb';");
    _bstr_t aryFirstName[10];

    try
    {
        // Open a Recordset for the Employees table.
        TESTHR(hr = m_pRstEmployees.CreateInstance(
            __uuidof(ADODB::Recordset)));
        TESTHR(hr = m_pCatNorthwind.CreateInstance(__uuidof (Catalog)));
        TESTHR(hr = m_pColNewFirstName.CreateInstance(__uuidof(Column)));

        m_pRstEmployees-&gt;Open("Employees",strCnn,ADODB::adOpenKeyset,
            ADODB::adLockReadOnly,ADODB::adCmdTable);

        long lngSize = m_pRstEmployees-&gt;RecordCount;
        aryFirstName[lngSize];

        // Open a catalog for the Northwind database,
        // using same connection as rstEmployees.
        m_pCatNorthwind-&gt;PutActiveConnection(m_pRstEmployees-&gt;
            GetActiveConnection());

        // Loop through the recordset displaying the contents,
        // of the FirstName field, the field's defined size,
        // and its actual size.
        // Also store FirstName values in aryFirstName array.
        m_pRstEmployees-&gt;MoveFirst();
        printf("\nOriginal Defined Size and Actual Size");
        int iCount=0;
        while (!(m_pRstEmployees-&gt;EndOfFile))
        {
            printf("\nEmployee Name:");
            printf("%s ",(LPSTR)(_bstr_t)m_pRstEmployees-&gt;Fields-&gt;
                GetItem("FirstName")-&gt;Value);
            printf("%s\n",(LPSTR)(_bstr_t)m_pRstEmployees-&gt;Fields-&gt;
                GetItem("LastName")-&gt;Value);
            printf("  FirstName Defined size: %d\n",m_pRstEmployees-&gt;
                Fields-&gt;GetItem("FirstName")-&gt;DefinedSize) ;
            printf("  FirstName Actual size: %d\n",m_pRstEmployees-&gt;
                Fields-&gt;GetItem("FirstName")-&gt;ActualSize);
            aryFirstName[iCount] = (_bstr_t) m_pRstEmployees-&gt;Fields-&gt;
                GetItem("FirstName")-&gt;Value;
            m_pRstEmployees-&gt;MoveNext();
            iCount++;
            if(iCount%5==0)
            {
                printf("Press any key to continue...");
                getch();
                system("cls");
            }
        }
        m_pRstEmployees-&gt;Close();

        // Redefine the DefinedSize of FirstName in the catalog.
        m_pColFirstName = m_pCatNorthwind-&gt;Tables-&gt;GetItem("Employees")-&gt;
            Columns-&gt;GetItem("FirstName");
        m_pColNewFirstName-&gt;Name = m_pColFirstName-&gt;Name;
        m_pColNewFirstName-&gt;Type = m_pColFirstName-&gt;Type;
        m_pColNewFirstName-&gt;DefinedSize = 
            (m_pColFirstName-&gt;DefinedSize) + 1;

        // Append new FirstName column to catalog.
        m_pCatNorthwind-&gt;Tables-&gt;GetItem("Employees")-&gt;Columns-&gt;
            Delete(m_pColFirstName-&gt;Name);
        m_pCatNorthwind-&gt;Tables-&gt;GetItem("Employees")-&gt;Columns-&gt;
            Append(_variant_t((IDispatch*)m_pColNewFirstName,true),
            adVarWChar,m_pColNewFirstName-&gt;DefinedSize);

        // Open Employee table in Recordset for updating.
        m_pRstEmployees-&gt;Open("Employees",m_pCatNorthwind-&gt;
            GetActiveConnection(),ADODB::adOpenKeyset,
            ADODB::adLockOptimistic,ADODB::adCmdTable);

        // Loop through the recordset displaying the contents 
        // of the FirstName field,the field's defined size,
        // and its actual size.
        // Also restore FirstName values from aryFirstName.
        printf("Press any key to continue...");
        getch();
        system("cls");
        m_pRstEmployees-&gt;MoveFirst();
        printf("\n\nNew Defined Size and Actual Size");
        iCount=0;
        while (!(m_pRstEmployees-&gt;EndOfFile))
        {
            m_pRstEmployees-&gt;Fields-&gt;GetItem("FirstName")-&gt;Value = 
                aryFirstName[iCount];
            printf("\nEmployee Name: ");
            printf("%s ",(LPSTR) (_bstr_t)m_pRstEmployees-&gt;Fields-&gt;
                GetItem("FirstName")-&gt;Value);
            printf("%s\n",(LPSTR)(_bstr_t)m_pRstEmployees-&gt;Fields-&gt;
                GetItem("LastName")-&gt;Value);
            printf("  FirstName Defined size: %d\n",m_pRstEmployees-&gt;
                Fields-&gt;GetItem("FirstName")-&gt;DefinedSize );
            printf("  FirstName Actual size: %d\n",m_pRstEmployees-&gt;
                Fields-&gt;GetItem("FirstName")-&gt;ActualSize );
            m_pRstEmployees-&gt;MoveNext();
            iCount++;
            if(iCount%5==0)
            {
                printf("Press any key to continue...");
                getch();
                system("cls");
            }            
        }
        m_pRstEmployees-&gt;Close();

        // Restore original FirstName column to catalog
        m_pCatNorthwind-&gt;Tables-&gt;GetItem("Employees")-&gt;Columns-&gt;
            Delete(m_pColNewFirstName-&gt;Name);

        m_pCatNorthwind-&gt;Tables-&gt;GetItem("Employees")-&gt;Columns-&gt;
            Append(_variant_t((IDispatch*)m_pColFirstName,true),
            adVarWChar,m_pColFirstName-&gt;DefinedSize);

        // Restore original FirstName values to Employees table.
        m_pRstEmployees-&gt;Open("Employees",m_pCatNorthwind-&gt;
            GetActiveConnection(),ADODB::adOpenKeyset,
            ADODB::adLockOptimistic,ADODB::adCmdTable);

        m_pRstEmployees-&gt;MoveFirst();
        iCount = 0;
        while(!(m_pRstEmployees-&gt;EndOfFile))
        {
            m_pRstEmployees-&gt;Fields-&gt;GetItem("FirstName")-&gt;Value = 
                aryFirstName[iCount];
            m_pRstEmployees-&gt;MoveNext();
            iCount++;
        }
    }
    catch(_com_error &amp;e)
    {
        // Notify the user of errors if any.
        _bstr_t bstrSource(e.Source());
        _bstr_t bstrDescription(e.Description());

        printf("\n\tSource :  %s \n\tdescription : %s \n ",
            (LPCSTR)bstrSource,(LPCSTR)bstrDescription);
    }
    catch(...)
    {
        cout &lt;&lt; "Error occured in DefinedSizeX...."&lt;&lt; endl;
    }
    
    if (m_pRstEmployees)
        if (m_pRstEmployees-&gt;State == 1)
            m_pRstEmployees-&gt;Close();

    m_pCatNorthwind = NULL;
}
// EndDefinedSizeCpp</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="adobjcolumn.htm">Column Object</A> | <A HREF="adprodefinedsize.htm">DefinedSize Property</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
