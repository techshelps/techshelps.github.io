<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Handling Errors in VBScript</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/ADO.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADO 2.5</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mdconhandlingerrorsvbscript"></A>Handling Errors in VBScript</H1>

<P>There is little difference between the methods used in Visual Basic and those used with VBScript. The primary difference is that VBScript does not support the concept of error handling by continuing execution at a label. In other words, you cannot use <code class="ce">On Error GoTo</code> in VBScript. Instead, use <code class="ce">On Error Resume Next</code> and then check both <B>Err.Number</B> and the <B>Count</B> property of the <B>Errors</B> collection, as shown in the following example:</P>

<PRE class="code">&lt;!-- BeginErrorExampleVBS --&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META NAME="GENERATOR" Content="Microsoft Visual Studio 6.0"&gt;
&lt;TITLE&gt;Error Handling Example (VBScript)&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;h1&gt;Error Handling Example (VBScript)&lt;/h1&gt;

&lt;%
    Dim errLoop
    Dim strError
    
    On Error Resume Next
       
    ' Intentionally trigger an error.
    Set cnn1 = Server.CreateObject("ADODB.Connection")
    cnn1.Open "nothing"

    If cnn1.Errors.Count &gt; 0 Then
        ' Enumerate Errors collection and display
        ' properties of each Error object.
        For Each errLoop In cnn1.Errors
            strError = "Error #" &amp; errLoop.Number &amp; "&lt;br&gt;" &amp; _
                "   " &amp; errLoop.Description &amp; "&lt;br&gt;" &amp; _
                "   (Source: " &amp; errLoop.Source &amp; ")" &amp; "&lt;br&gt;" &amp; _
                "   (SQL State: " &amp; errLoop.SQLState &amp; ")" &amp; "&lt;br&gt;" &amp; _
                "   (NativeError: " &amp; errLoop.NativeError &amp; ")" &amp; "&lt;br&gt;"
            If errLoop.HelpFile = "" Then
                strError = strError &amp; _
                    "   No Help file available" &amp; _
                    "&lt;br&gt;&lt;br&gt;"
            Else
                strError = strError &amp; _
                    "   (HelpFile: " &amp; errLoop.HelpFile &amp; ")" &amp; "&lt;br&gt;" &amp; _
                    "   (HelpContext: " &amp; errLoop.HelpContext &amp; ")" &amp; _
                    "&lt;br&gt;&lt;br&gt;"
            End If
            Response.Write ("&lt;p&gt;" &amp; strError &amp; "&lt;/p&gt;")
        Next
    End If
%&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
&lt;!-- EndErrorExampleVBS --&gt;</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
