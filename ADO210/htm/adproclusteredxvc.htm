<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Clustered Property Example (VC++)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/samples.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADOX 2.5</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="adproclusteredxvc"></A>Clustered Property Example (VC++)</H1>

<P>This example demonstrates the <A HREF="adproclustered.htm">Clustered</A> property of an <A HREF="adobjindex.htm">Index</A>. Note that Microsoft Jet databases do not support clustered indexes, so this example will return <B>False</B> for the <B>Clustered</B> property of all indexes in the <I>Northwind</I> database.</P>

<PRE class="code">// BeginClusteredCpp
#import "c:\Program Files\Common Files\system\ado\msadox.dll" \
    no_namespace

#include "iostream.h"
#include "stdio.h"
#include "conio.h"

//Function declarations
inline void TESTHR(HRESULT x) {if FAILED(x) _com_issue_error(x);};
void ClusteredX(void);

//////////////////////////////////////////////////////////
//                                                      //
//     Main Function                                    //
//                                                      //
//////////////////////////////////////////////////////////
void main()
{
    if(FAILED(::CoInitialize(NULL)))
        return;

    ClusteredX();

    ::CoUninitialize();
}

//////////////////////////////////////////////////////////
//                                                      //
//       ClusteredX Function                            //
//                                                      //
//////////////////////////////////////////////////////////
void ClusteredX()
{
    HRESULT hr = S_OK;

    // Define ADOX object pointers.
    // Initialize pointers on define.
    // These are in the ADOX::  namespace.
    _CatalogPtr m_pCatalog = NULL;
    _TablePtr m_pTable = NULL;
    _IndexPtr m_pIndex = NULL;

    //Define other variables here
    _variant_t vIndex;
    try
    {
        TESTHR(hr = m_pCatalog.CreateInstance(__uuidof(Catalog)));

        // Connect to the catalog.
        m_pCatalog-&gt;PutActiveConnection(
            "Provider='Microsoft.JET.OLEDB.4.0';data source="
            "'c:\\Program Files\\Microsoft Office\\Office\\Samples"
            "\\Northwind.mdb';");

        int iLineCnt = 1; 
        //Enumerate Tables.
        for(short iTable = 0;iTable &lt; m_pCatalog-&gt;Tables-&gt;Count;iTable++)
        {
            vIndex = iTable;
            m_pTable = m_pCatalog-&gt;Tables-&gt;GetItem(vIndex);

            //Enumerate Indexes.
            for(short iIndex = 0;iIndex &lt; m_pTable-&gt;Indexes-&gt;Count;
                iIndex++)
            {
                vIndex = iIndex;
                m_pIndex = m_pTable-&gt;Indexes-&gt;GetItem(vIndex);
                cout &lt;&lt; m_pTable-&gt;Name &lt;&lt; "   " ;
                cout &lt;&lt; m_pIndex-&gt;Name &lt;&lt; "   " &lt;&lt; (m_pIndex-&gt;
                    GetClustered() ? "True" : "False") &lt;&lt; endl;

                 if (iLineCnt%15 == 0)
                {
                    printf("\nPress any key to continue...\n");
                    getch();
                }
                iLineCnt++;
            }
        }
    }
    catch(_com_error &amp;e)
    {
        // Notify the user of errors if any.
        _bstr_t bstrSource(e.Source());
        _bstr_t bstrDescription(e.Description());

        printf("\n\tSource :  %s \n\tdescription : %s \n ",
            (LPCSTR)bstrSource,(LPCSTR)bstrDescription);
    }
    catch(...)
    {
        cout &lt;&lt; "Error occured in ClusteredX...."&lt;&lt; endl;
    }
}
// EndClusteredCpp</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="adproclustered.htm">Clustered Property</A> | <A HREF="adobjindex.htm">Index Object</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
