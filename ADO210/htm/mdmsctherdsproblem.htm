<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="ltr">
	<HEAD>
		<TITLE>Solutions for Remote Data Access</TITLE>
		<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
		<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
		<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
		<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/ADO.js"></SCRIPT>
	</HEAD>
	<body topmargin="0" id="bodyID" class="dtBODY">
		
		<div id="scrbanner">
			<div id="bannerrow1">
				<TABLE CLASS="bannerparthead" CELLSPACING="0">
					<TR ID="hdr">
						<TD CLASS="bannerparthead td" nowrap>RDS 2.5</TD>
						<TD valign="center"><a href="#Feedback"><IMG name="feedb" onclick="startFeedback(SDKFeedB)" style="CURSOR: hand" hspace="15" alt="" src="../stylesheets/mailto.gif" align="right"></a></TD>
					</TR>
				</TABLE>
			</div>
		</div>
		<DIV id="scrtext" valign="bottom">
			<H1 class="dtH1"><A NAME="mdmsctherdsproblem"></A>Solutions for Remote Data Access</H1>
			<H2 class="dtH2">The Issue</H2>
			<P>ADO enables your application to directly gain access to and modify data sources 
				(sometimes called a two-tier system). For example, if your connection is to the 
				data source that contains your data, that is a direct connection in a two-tier 
				system.</P>
			<P>However, you may want to access data sources indirectly through an intermediary 
				such as Microsoft® Internet Information Services (IIS). This arrangement is 
				sometimes called a three-tier system. IIS is a client/server system that 
				provides an efficient way for a local, or client, application to invoke a 
				remote, or server, program across the Internet or an intranet. The server 
				program gains access to the data source and optionally processes the acquired 
				data.</P>
			<P>For example, your intranet Web page contains an application written in 
				Microsoft® Visual Basic Scripting Edition (VBScript), which connects to IIS. 
				IIS in turn connects to the actual data source, retrieves the data, processes 
				it in some way, and then returns the processed information to your application.</P>
			<P>In this example, your application never directly connected to the data source; 
				IIS did. And IIS accessed the data by means of ADO.</P>
			<BLOCKQUOTE class="dtBlock"> <b class="le">Note&nbsp;&nbsp;&nbsp;</b>The 
				client/server application does not have to be based on the Internet or an 
				intranet (that is, Web-based)—it could consist solely of compiled programs on a 
				local area network. However, the typical case is a Web-based application.</BLOCKQUOTE>
			<P>Because some visual control, such as a grid, check box, or list, may use the 
				returned information, the returned information must be easily used by a visual 
				control.</P>
			<P>You want a simple and efficient application-programming interface that supports 
				three-tier systems, and returns information as easily as if it had been 
				retrieved on a two-tier system. Remote Data Service (RDS) is this interface.</P>
			<H2 class="dtH2">The Solution</H2>
			<P>RDS defines a programming model—the sequence of activities necessary to gain 
				access to and update a data source—to gain access to data through an 
				intermediary, such as Internet Information Services (IIS). The programming 
				model summarizes the entire functionality of RDS.</P>
			<H4 class="dtH4">See Also</H4>
			<P><A HREF="mdmscbasicrdsprogrammingmodel.htm">Basic RDS Programming Model</A> | <A HREF="mdhowrdstutorial.htm">
					RDS Tutorial</A> | <A HREF="mdhowoverview.htm">Using RDS</A></P>
			<H4><A NAME="feedback"></A></H4>
			<SPAN id="SDKFeedB"></SPAN>
		</DIV>
		<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">© 1998-2003 Microsoft 
				Corporation. All rights reserved.</A></P>
	</body>
</HTML>
