<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Description, HelpContext, HelpFile, NativeError, Number, Source, and SQLState Properties Example (VC++)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/samples.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannerparthead td" nowrap>ADO 2.5 Samples</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mdprodescriptionxvc"></A>Description, HelpContext, HelpFile, NativeError, Number, Source, and SQLState Properties Example (VC++)</H1>

<P>This example triggers an error, traps it, and displays the <A HREF="mdprodescription.htm">Description</A>, <A HREF="mdprohelpcontext.htm">HelpContext</A>, <A HREF="mdprohelpcontext.htm">HelpFile</A>, <A HREF="mdpronativeerror.htm">NativeError</A>, <A HREF="mdpronumber.htm">Number</A>, <A HREF="mdproerrsource.htm">Source</A>, and <A HREF="mdprosqlstate.htm">SQLState</A> properties of the resulting <A HREF="mdobjerror.htm">Error</A> object.</P>

<PRE class="code">// BeginDescriptionCpp
#import "C:\Program Files\Common Files\System\ADO\msado15.dll" \
    no_namespace rename("EOF", "EndOfFile")

#include &lt;ole2.h&gt;
#include &lt;stdio.h&gt;
#include&lt;conio.h&gt;

// Function declarations
inline void TESTHR(HRESULT x) {if FAILED(x) _com_issue_error(x);};
void DescriptionX(void);
void PrintProviderError(_ConnectionPtr pConnection);
void PrintComError(_com_error &amp;e);

///////////////////////////////////////////////////////////
//                                                       //
//      Main Function                                    //
//                                                       //
///////////////////////////////////////////////////////////

void main()
{
    if(FAILED(::CoInitialize(NULL)))
        return;

    DescriptionX();

    //Wait here for user to see the output..
    printf("\nPress any key to continue...");
    getch();
    ::CoUninitialize();
}

///////////////////////////////////////////////////////////
//                                                       //
//      DescriptionX Function                            //
//                                                       //
///////////////////////////////////////////////////////////

void DescriptionX()
{
    // Define ADO object pointers.
    // Initialize pointers on define.
    // These are in the ADODB::  namespace
    _ConnectionPtr pConnection = NULL;
    ErrorPtr errorLoop = NULL;

    //Define Other Variables
    HRESULT hr = S_OK;
    

    try
    {
        // Intentionally trigger an error.
        // open connection
        TESTHR(pConnection.CreateInstance(__uuidof(Connection)));

        if (FAILED(hr = pConnection-&gt;Open("nothing","","",adConnectUnspecified)))
        {
            _com_issue_error(hr);
            exit(1);
        }

        // Cleanup object before exit.
        pConnection-&gt;Close();
    }
    catch(_com_error)
    {
        // Pass a connection pointer.
        PrintProviderError(pConnection);
    }
}

///////////////////////////////////////////////////////////
//                                                       //
//      PrintProviderError Function                      //
//                                                       //
///////////////////////////////////////////////////////////

void PrintProviderError(_ConnectionPtr pConnection)
{
    //Define Other Variables
    HRESULT  hr = S_OK;
    _bstr_t  strError;
    ErrorPtr  pErr = NULL;

    try
    {
        // Enumerate Errors collection and display
        // properties of each Error object.
        long nCount = pConnection-&gt;Errors-&gt;Count;

        // Collection ranges from 0 to nCount - 1.
        for(long i = 0; i &lt; nCount; i++)
        {
            pErr = pConnection-&gt;Errors-&gt;GetItem(i);
            printf("Error #%d\n", pErr-&gt;Number);
            printf(" %s\n",(LPCSTR)pErr-&gt;Description);
            printf(" (Source: %s)\n",(LPCSTR)pErr-&gt;Source);
            printf(" (SQL State: %s)\n",(LPCSTR)pErr-&gt;SQLState);
            printf(" (NativeError: %d)\n",(LPCSTR)pErr-&gt;NativeError);
            if ((LPCSTR)pErr-&gt;GetHelpFile() == NULL)
            {
                printf("\tNo Help file available\n");
            }
            else
            {
                printf("\t(HelpFile: %s\n)" ,pErr-&gt;HelpFile);
                printf("\t(HelpContext: %s\n)" , pErr-&gt;HelpContext);
            }
        }
    }
    catch(_com_error &amp;e)
    {
        // Notify the user of errors if any.
        PrintComError(e);
    }
}

///////////////////////////////////////////////////////////
//                                                       //
//      PrintComError Function                           //
//                                                       //
///////////////////////////////////////////////////////////

void PrintComError(_com_error &amp;e)
{
   // Notify the user of errors if any.
   _bstr_t bstrSource(e.Source());
   _bstr_t bstrDescription(e.Description());
    
    // Print Com errors.
    
   printf("Error\n");
   printf("\tCode = %08lx\n", e.Error());
   printf("\tCode meaning = %s", e.ErrorMessage());
   printf("\tSource = %s\n", (LPCSTR) bstrSource);
   printf("\tDescription = %s\n", (LPCSTR) bstrDescription);
}
// EndDescriptionCpp</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="mdprodescription.htm">Description Property</A> | <A HREF="mdobjerror.htm">Error Object</A> | <A HREF="mdprohelpcontext.htm">HelpContext Property</A> | <A HREF="mdprohelpcontext.htm">HelpFile Property</A> | <A HREF="mdpronativeerror.htm">NativeError Property</A> | <A HREF="mdpronumber.htm">Number Property</A> | <A HREF="mdproerrsource.htm">Source Property (ADO Error)</A> | <A HREF="mdprosqlstate.htm">SQLState Property</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
<P align="center"><A HREF="ado_sdk_copyright_and_trademarks.htm">&copy; 1998-2003 Microsoft Corporation. All rights reserved.</A></P>
</BODY>
</HTML>
