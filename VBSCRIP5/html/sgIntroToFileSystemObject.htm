<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>

<HEAD><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
<TITLE>Microsoft&#174; Scripting Library - Introduction to the FileSystemObject and the Scripting Run-Time Library Reference</TITLE> 

<META NAME="MS-HKWD" CONTENT="FileSystemObject object">
<META NAME=MS-HAID CONTENT="sgIntroToFileSystemObject">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="PRODUCT" CONTENT="Scripting Library">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="FileSystemObject">
<META NAME="Description" CONTENT="Introduction to the FileSystemObject and the Scripting Run-Time Library Reference">
<META NAME="Keywords" CONTENT="FileSystemObject object">

</HEAD>

<BODY BGCOLOR="#FFFFFF" LINK="#0033CC">
<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE="Verdana, ARIAL, HELVETICA" SIZE=2>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR VALIGN=TOP><TD WIDTH=360>
<FONT SIZE=1 COLOR="#660033">Microsoft&#174; Scripting Library - FileSystemObject</FONT><BR>
<FONT SIZE=5 COLOR="#660033"><B>Introduction to the FileSystemObject<br>and the<br> Scripting Run-Time Library Reference</B></FONT><br>

</TD>
<TD ALIGN=RIGHT>
<FONT SIZE=2>&nbsp;
<A HREF="sgUsingFileSystemObject.htm">Previous</A><br>
<A HREF="sgFileSystemObjects.htm">Next</A><P></FONT>
</TD></TR>
</TABLE><p>

<hr noshade size=1>

The <b>FileSystemObject</b> (FSO) object model allows you to use the familiar <i>object.method</i> syntax with a rich set of properties, methods, and events to process folders and files.<p>

Use this object-based tool with:

<ul>
<li><A>HTML to create Web pages</a><p>
<li><A>Windows Scripting Host to create batch files for Microsoft Windows</a><p>
<li><A>Script Control to provide a scripting capability to applications developed in other languages</a><p>
</ul>

Because use of the FSO on the client side raises serious security issues about providing potentially unwelcome access to a client's local file system, this documentation assumes use of the FSO object model to create scripts executed by Internet Web pages on the server side. Since the server side is used, the Internet Explorer default security settings do not allow client-side use of the <B>FileSystemObject</B> object. Overriding those defaults could subject a local computer to unwelcome access to the file system, which could result in total destruction of the file system's integrity, causing loss of data, or worse.<P>

The FSO object model gives your server-side applications the ability to create, alter, move, and delete folders, or to detect if particular folders exist, and if so, where. You can also find out information about folders, such as their names, the date they were created or last modified, and so forth.<P>

The FSO object model also makes it easy to process files. When processing files, the primary goal is to store data in a space- and resource-efficient, easy-to-access format. You need to be able to create files, insert and change the data, and output (read) the data. Since storing data in a database, such as Access or SQL Server, adds a significant amount of overhead to your application, storing your data in a binary or text file may be the most efficient solution. You may prefer not to have this overhead, or your data access requirements may not require all the extra features associated with a full-featured database.<p>

The FSO object model, which is contained in the Scripting <A HREF="fsoglossary.htm#defTypeLibrary">type library</A> (Scrrun.dll), supports text file creation and manipulation through the <b>TextStream</b> object. Although it does not  yet support the creation or manipulation of binary files, future support of binary files is planned.<P>
</blockquote>

<hr noshade size=1>
<!--COPYRIGHT BEGIN--><!--COPYRIGHT END--> 
</FONT>
</BODY>
</HTML>
