<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"><HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Property Set Statement</TITLE>
<META NAME="MS-HKWD" CONTENT="Property Set statement">
<META NAME="MS-HKWD" CONTENT="Property Set">
<META NAME="MS-HKWD" CONTENT="Property">
<META NAME="MS-HKWD" CONTENT="Set">
<META NAME="MS-HKWD" CONTENT="Public">
<META NAME="MS-HKWD" CONTENT="Private">

<META NAME="MS-HKWD" CONTENT="End Property">
<META NAME="MS-HKWD" CONTENT="Exit Property">
<META NAME="MS-HKWD" CONTENT="creating properties">
<META NAME="MS-HKWD" CONTENT="declaring properties">
<META NAME="MS-HKWD" CONTENT="setting properties">
<META NAME="MS-HKWD" CONTENT="arguments">
<META NAME="MS-HKWD" CONTENT="property procedures">

<META NAME=MS-HAID CONTENT="vsstmPropertySet">
 
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="PRODUCT" CONTENT="Visual Basic Scripting Edition">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="Language Reference">

<META NAME="Keywords" CONTENT="Property Set statement; Property Set; Property; Set; Public; Private; End Property; Exit Property; creating properties; declaring properties; setting properties; arguments; property procedures">

<META NAME="Description" CONTENT="Property Set Statement">
</HEAD>

<BODY BGCOLOR=FFFFFF LINK=#0033CC>

<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR VALIGN=TOP><TD WIDTH=360>
<FONT SIZE=1 COLOR="#660033">Microsoft&#174; Visual Basic&#174; Scripting Edition</FONT><BR>
<FONT SIZE=5 COLOR="#660033"><B>Property Set Statement</B></FONT>

</TD>
<TD ALIGN=RIGHT>
<FONT SIZE=2>&nbsp;<A HREF="vbstoc.htm">Language&nbsp;Reference</A>&nbsp;<BR>
<A HREF="vbsversion.htm">Version&nbsp;5</A>&nbsp;<P></FONT>
</TD></TR>
</TABLE> 

<FONT SIZE=2><p><A HREF="vsstmPropertySetC.htm">See Also</A></FONT>
<hr noshade size=1>

<H5>Description</H5>
<BLOCKQUOTE>Declares, in a <B>Class</B> block, the name, arguments, and code that form the body of a <b>Property</b> procedure that sets a reference to an object.</BLOCKQUOTE>

<H5>Syntax</H5>
<BLOCKQUOTE>
[<B>Public</B> | <B>Private</B>] <b>Property Set</b> <i>name</i><b>(</b>[<i>arglist</i>,] <I>reference</I><b>)</b><BR>
&nbsp;&nbsp;&nbsp;&nbsp;[<i>statements</i>]<BR> 
&nbsp;&nbsp;&nbsp;&nbsp;[<b>Exit Property</b>] <BR> 
&nbsp;&nbsp;&nbsp;&nbsp;[<i>statements</i>]<BR> 
<b>End Property</b>
<P>The <b>Property Set</b> statement syntax has these parts:<P>

<TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT SIZE=2><b>Part</b></FONT></TD>
<TD><FONT SIZE=2><b>Description</b></FONT></TD></TR>

<TR VALIGN=TOP>
<TD><FONT SIZE=2><b>Public</b></FONT></TD>
<TD><FONT SIZE=2>Indicates that the <b>Property Set</b> procedure is accessible to all other procedures in all scripts.</FONT></TD></TR>

<TR VALIGN=TOP>
<TD><FONT SIZE=2><b>Private</b></FONT></TD>
<TD><FONT SIZE=2>Indicates that the <b>Property Set</b> procedure is accessible only to other procedures in the <B>Class</B> block where it's declared.</FONT></TD></TR>

<TR VALIGN=TOP>
<TD><FONT SIZE=2><i>name</i></FONT></TD>
<TD><FONT SIZE=2>Name of the <b>Property Set</b> procedure; follows standard <A HREF="glossary.htm#defVariable">variable</A> naming conventions, except that the name can be the same as a <B>Property Get</B> or <B>Property Let</B> procedure in the same <B>Class</B> block.</FONT></TD></TR>

<TR VALIGN=TOP>
<TD><FONT SIZE=2><i>arglist</i></FONT></TD>
<TD><FONT SIZE=2>List of variables representing arguments that are passed to the <B>Property Set</B> procedure when it is called. Multiple arguments are separated by commas. In addition, the <B>Property Set</B> procedure will always have one more <A HREF="glossary.htm#defArg">argument</A> than its corresponding <B>Property Get</B> procedure. That argument is the object being assigned to the <A HREF="glossary.htm#defProperty">property</A>. </FONT></TD></TR>

<TR VALIGN=TOP>
<TD><FONT SIZE=2><I>reference</I></FONT></TD>
<TD><FONT SIZE=2>Variable containing the object reference used on the right side of the object reference assignment. </FONT></TD>

<TR VALIGN=TOP>
<TD><FONT SIZE=2><i>statements</i></FONT></TD>
<TD><FONT SIZE=2>Any group of statements to be executed within the body of the <b>Property Set</b> procedure.</FONT></TD></TR></TABLE><P>

<TABLE CELLSPACING=0 CELLPADDING=0 BORDER=0 WIDTH=87%><TR><TD COLSPAN=2 VALIGN=BOTTOM><HR noshade size=1></TD></TR>
<TR><TD VALIGN=TOP><FONT SIZE=2><b>Note</b>Version&nbsp;Version&nbsp;Every <B>Property Set</B> statement must define at least one argument for the <A HREF="glossary.htm#defProcedure">procedure</A> it defines. That argument (or the last argument if there is more than one) contains the actual object reference for the property when the procedure defined by the <B>Property Set</B> statement is invoked. That argument is referred to as <I>reference</I> in the preceding syntax.</FONT></TD></TR><TR><TD COLSPAN=2 VALIGN=TOP><HR noshade SIZE=1></TD></TR>
</TABLE>
</BLOCKQUOTE>

<H5>Remarks</H5>
<BLOCKQUOTE>
If not explicitly specified using either <A HREF="glossary.htm#defPublic"><B>Public</B></A> or <A HREF="glossary.htm#defPrivate"><B>Private</B></A>, <b>Property Set</b> procedures are public by default, that is, they are visible to all other procedures in your script. The value of local variables in a <B>Property Set</B> procedure is not preserved between calls to the procedure.<P>

You can't define a <b>Property Set</b> procedure inside any other procedure (e.g. <b>Function</b> or <b>Property Let</b>).<P>

The <b>Exit Property </b>statement causes an immediate exit from a <b>Property Set</b> procedure. Program execution continues with the statement that follows	 the statement that called the <b>Property Set</b> procedure. Any number of <b>Exit Property</b> statements can appear anywhere in a <b>Property Set</b> procedure.<P>

Like a <B>Function</B> and <B>Property Get</B> procedure, a <B>Property Set</B> procedure is a separate procedure that can take arguments, perform a series of statements, and change the value of its arguments. However, unlike a <B>Function</B> and <B>Property Get</B> procedure, both of which return a value, you can only use a <B>Property Set</B> procedure on the left side of an object reference assignment (<B>Set</B> statement).<P>
</BLOCKQUOTE>

<hr noshade size=1>
 
</FONT></BODY><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>















































































