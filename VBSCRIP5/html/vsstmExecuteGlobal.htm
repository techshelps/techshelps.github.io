<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"><HTML>
<HEAD><TITLE>Execute Statement</title><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
<META NAME="MS-HKWD" CONTENT="Execute statement">
<META NAME="MS-HKWD" CONTENT="Execute">
<META NAME="MS-HKWD" CONTENT="executing statements">
<META NAME=MS-HAID CONTENT="vsstmExecuteGlobal">
 
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="PRODUCT" CONTENT="Visual Basic Scripting Edition">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="Language Reference">

<META NAME="Keywords" CONTENT="ExecuteGlobal statement; Execute; executing statements">

<META NAME="Description" CONTENT="ExecuteGlobal Statement">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LINK="#0033CC">

<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR VALIGN=TOP><TD WIDTH=360>
<FONT SIZE=1 COLOR="#660033">Microsoft&#174; Visual Basic&#174; Scripting Edition</FONT><BR>
<FONT SIZE=5 COLOR="#660033"><B>ExecuteGlobal Statement</B></FONT>

</TD>
<TD ALIGN=RIGHT>
<FONT SIZE=2>&nbsp;<A HREF="vbstoc.htm">Language&nbsp;Reference</A>&nbsp;<BR>
<A HREF="vbsversion.htm">Version&nbsp;5</A>&nbsp;<P></FONT>
</TD></TR>
</TABLE> 

<FONT SIZE=2><p><A HREF="vsstmExecuteGlobalC.htm">See Also</A></FONT>
<hr noshade size=1>

<H5>Description</H5>
<BLOCKQUOTE>Executes one or more specified statements in the global namespace of a script.</BLOCKQUOTE>

<H5>Syntax</H5>
<BLOCKQUOTE>
<b>ExecuteGlobal</b> <i>statement</i><p>
<P>The required <i>statement</i> argument is a <A HREF="glossary.htm#defstringexpression">string expression</A> containing one or more statements for execution.&nbsp; Include multiple statements in the <I>statement</I> argument, using colons or embedded line breaks to separate them.
</BLOCKQUOTE>

<H5>Remarks</H5>
<BLOCKQUOTE>
In VBScript, <I>x = y</I> can be interpreted two ways. The first is as an assignment statement, where the value of <I>y</I> is assigned to <I>x</I>. The second interpretation is as an <A HREF="glossary.htm#defExpression">expression</A> that tests if <I>x</I> and <I>y</I> have the same value. If they do, <I>result</I> is <B>True</B>; if they are not, <I>result</I> is <B>False</B>. The <B>ExecuteGlobal</B> statement always uses the first interpretation, whereas the <B>Eval</B> method always uses the second.<P>

<B>Note</B>&nbsp;&nbsp;In Microsoft&#174; JScript™, no confusion exists between assignment and comparison, because the assignment operator (=) is different from the <A HREF="glossary.htm#defComparisonOperator">comparison operator(==)</A>.<P>

All statements used with <B>ExecuteGlobal</B> are executed in the script's global namespace.  This allows code to be added to the program so that any <A HREF="glossary.htm#defProcedure">procedure</A> can access it.  For example, a VBScript <B>Class</B> statement can be executed at run time and functions can subsequently create new instances of the class.<P>

 Adding procedures and classes at runtime can be useful, but also introduces the possibility of overwriting existing global <A HREF="glossary.htm#defVariable">variables</A> and functions at runtime.  Because this can cause significant programming problems, care should be exercised when using the <B>ExecuteGlobal</B> statement.  If you don’t need access to a variable or function outside of a procedure, use the <B>Execute</B> statement which will only affect the namespace of the calling function.<P>

The following example illustrates the use of the <B>ExecuteGlobal</B> statement:<P>

<BLOCKQUOTE>	
<PRE><FONT FACE="Courier New" SIZE=3>Dim X			' Declare X in global scope.
X = "Global"		' Assign global X a value.
Sub Proc1	' Declare procedure.
  Dim X		' Declare X in local scope.
  X = "Local"	' Assign local X a value.
			' The Execute statement here creates a
			' procedure that, when invoked, prints X.
			' It print the global X because Proc2
			' inherits everything in global scope.
  <font color="#FF0000">ExecuteGlobal</FONT> "Sub Proc2: Print X: End Sub"
  Print Eval("X")	' Print local X.
  Proc2		' Invoke Proc2 in Global scope resulting
			' in "Global" being printed.
End Sub
Proc2			' This line causes an error since 
			' Proc2 is unavailable outside Proc1.
Proc1			' Invoke Proc1.
  Execute "Sub Proc2: Print X: End Sub"
Proc2			' This invocation succeeds because Proc2
			' is now available globally.
</PRE></FONT></BLOCKQUOTE>
The following example shows how the <B>ExecuteGlobal</B> statement can be rewritten so you don't have to enclose the entire procedure in the quotation marks:<P>

<BLOCKQUOTE>
<PRE><FONT FACE="Courier New" SIZE=3>S = "Sub Proc2" & vbCrLf
S = S & "  Print X" & vbCrLf 
S = S & "End Sub"
<font color="#FF0000">ExecuteGlobal</FONT> S</PRE></FONT></BLOCKQUOTE>

</BLOCKQUOTE>

<hr noshade size=1>
 
</FONT></BODY><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
