<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 3.0//EN" "html.dtd">
<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>VBScript Glossary</title><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
<META NAME="MS-HKWD" CONTENT="VBScript glossary">
<META NAME="MS-HKWD" CONTENT="glossary">
<META NAME="MS-HKWD" CONTENT="terms">
<META NAME=MS-HAID CONTENT="glossary">
 
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="PRODUCT" CONTENT="Visual Basic Scripting Edition">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="Language Reference">
<META NAME="Keywords" CONTENT="VBScript glossary; glossary; terms">

<META NAME="Description" CONTENT="VBScript Glossary">
</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#0033CC">

<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%>
<TR VALIGN=TOP><TD WIDTH=360>
<FONT SIZE=1 COLOR="#660033">Microsoft&#174; Visual Basic&#174; Scripting Edition</FONT><BR>
<FONT SIZE=5 COLOR="#660033"><B>VBScript Glossary</B></FONT> 

</TD>
<TD ALIGN=RIGHT>
<FONT SIZE=2>&nbsp;<A HREF="vbstoc.htm">Language&nbsp;Reference</A>&nbsp;<BR>
<p></FONT>

</TD></TR>
</TABLE> 

<FONT SIZE=2>
<DL><HR NOSHADE SIZE=1>

<A NAME="defActiveXControl">&nbsp;</A>
<DT><B>ActiveX control</B></DT>
<DD>An object that you place on a form to enable or enhance a user's interaction with an application. ActiveX controls have events and can be incorporated into other controls. The controls have an .ocx file name extension.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defActiveXObject">&nbsp;</A>
<DT><B>ActiveX object</B></DT>
<DD>An object that is exposed to other applications or programming tools through Automation interfaces.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defArg">&nbsp;</A>
<DT><B>argument</B></DT>
<DD>A constant, variable, or expression passed to a procedure.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defArray">&nbsp;</A>
<DT><B>array</B></DT>
<DD>A set of sequentially indexed elements having the same type of data. Each element of an array has a unique identifying index number. Changes made to one element of an array do not affect the other elements.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defASCII">&nbsp;</A>
<DT><B>ASCII Character Set</B></DT>
<DD>American Standard Code for Information Interchange (ASCII) 7-bit character set widely used to represent letters and symbols found on a standard U.S. keyboard. The ASCII character set is the same as the first 128 characters (0&#150;127) in the ANSI character set.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defOLEAutomationObject">&nbsp;</A>
<DT><B>Automation object</B></DT>
<DD>An object that is exposed to other applications or programming tools through Automation interfaces.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defBitwise">&nbsp;</A>
<DT><B>bitwise comparison</B></DT>
<DD>A bit-by-bit comparison of identically positioned bits in two numeric expressions.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defBoolean">&nbsp;</A>
<DT><B>Boolean expression</B></DT>
<DD>An expression that evaluates to either <b>True</b> or <b>False</b>.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defByReference">&nbsp;</A>
<DT><B>by reference</B></DT>
<DD>A way of passing the address, rather than the value, of an argument to a procedure.  This allows the procedure to access the actual variable.  As a result, the variable's actual value can be changed by the procedure to which it is passed.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defByValue">&nbsp;</A>
<DT><B>by value</B></DT>
<DD>A way of passing the value, rather than the address, of an argument to a procedure.  This allows the procedure to access a copy of the variable.  As a result, the variable's actual value can't be changed by the procedure to which it is passed.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defCharCode">&nbsp;</A>
<DT><B>character code</B></DT>
<DD>A number that represents a particular character in a set, such as the ASCII character set.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defClass">&nbsp;</A>
<DT><B>class</B></DT>
<DD>The formal definition of an object. The class acts as the template from which an instance of an object is created at run time. The class defines the properties of the object and the methods used to control the object's behavior.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defClassModule">&nbsp;</A>
<DT><B>class module</B></DT>
<DD>A module containing the definition of a class (its property and method definitions).</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defCollection">&nbsp;</A>
<DT><B>collection</B></DT>
<DD>An object that contains a set of related objects. An object's position in the collection can change whenever a change occurs in the collection; therefore, the position of any specific object in the collection may vary.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defComment">&nbsp;</A>
<DT><B>comment</B></DT>
<DD>Text added to code by a programmer that explains how the code works. In Visual Basic Scripting Edition, a comment line generally starts with an apostrophe (<b>'</b>), or you can use the keyword <b>Rem</b> followed by a space.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defComparisonOperator">&nbsp;</A>
<DT><B>comparison operator</B></DT>
<DD>A character or symbol indicating a relationship between two or more values or expressions. These operators include less than (&lt;), less than or equal to (&lt;=), greater than (&gt;), greater than or equal to (&gt;=), not equal (&lt;&gt;), and equal (=). <p><b>Is</b> is also a comparison operator, but it is used exclusively for determining if one object reference is the same as another.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defConstant">&nbsp;</A>
<DT><B>constant</B></DT>
<DD>A named item that retains a constant value throughout the execution of a program. Constants can be used anywhere in your code in place of actual values. A constant can be a string or numeric literal, another constant, or any combination that includes arithmetic or logical operators except <b>Is</b> and exponentiation. For example:<P>
<BLOCKQUOTE><PRE><FONT FACE="Courier New" SIZE=3>
Const A = &quot;MyString&quot;
</FONT></PRE></BLOCKQUOTE></DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defDataTypeRanges">&nbsp;</A>
<DT><B>data ranges</B></DT>
<DD>Each Variant subtype has a specific range of allowed values:<P>
<TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
	<TD><FONT SIZE=2><b>Subtype</b></FONT></TD>
		<TD><FONT SIZE=2><b>Range</b></FONT></TD></TR>
<TR VALIGN=TOP>
	<TD><FONT SIZE=2><b>Byte</b></FONT></TD>
		<TD><FONT SIZE=2>0 to 255.</FONT></TD></TR>
<TR VALIGN=TOP>
	<TD><FONT SIZE=2><b>Boolean</b></FONT></TD>
		<TD><FONT SIZE=2><b>True</b> or <b>False</b>.</FONT></TD></TR>
<TR VALIGN=TOP>
	<TD><FONT SIZE=2><b>Integer</b></FONT></TD>
		<TD><FONT SIZE=2>-32,768 to 32,767.</FONT></TD></TR>
<TR VALIGN=TOP>
	<TD><FONT SIZE=2><b>Long</b></FONT></TD>
		<TD><FONT SIZE=2>-2,147,483,648 to 2,147,483,647.</FONT></TD></TR>
<TR VALIGN=TOP>
	<TD><FONT SIZE=2><b>Single</b></FONT></TD>
		<TD><FONT SIZE=2>-3.402823E38 to -1.401298E-45 for negative values; 1.401298E-45 to 3.402823E38 for positive values.</FONT></TD></TR>
<TR VALIGN=TOP>
	<TD><FONT SIZE=2><b>Double</b></FONT></TD>
		<TD><FONT SIZE=2>-1.79769313486232E308 to -4.94065645841247E-324 for negative values; 4.94065645841247E-324 to 1.79769313486232E308 for positive values.</FONT></TD></TR>
<TR VALIGN=TOP>
	<TD><FONT SIZE=2><b>Currency</b></FONT></TD>
		<TD><FONT SIZE=2>-922,337,203,685,477.5808 to 922,337,203,685,477.5807.</FONT></TD></TR>
<TR VALIGN=TOP>
	<TD><FONT SIZE=2><b>Date</b></FONT></TD>
		<TD><FONT SIZE=2>January 1, 100 to December 31, 9999, inclusive.</FONT></TD></TR>
<TR VALIGN=TOP>
	<TD><FONT SIZE=2><b>Object</b></FONT></TD>
		<TD><FONT SIZE=2>Any <b>Object</b> reference.</FONT></TD></TR>
<TR VALIGN=TOP>
	<TD><FONT SIZE=2><b>String</b></FONT></TD>
		<TD><FONT SIZE=2>Variable-length strings may range in length from 0 to approximately 2 billion characters.</FONT></TD></TR></TABLE></DD><P><P>
<HR NOSHADE SIZE=1>

<A NAME="defDateExpression">&nbsp;</A>
<DT><B>date expression</B></DT>
<DD>Any expression that can be interpreted as a date. This includes any combination of date literals, numbers that look like dates, strings that look like dates, and dates returned from functions. A date expression is limited to numbers or strings, in any combination, that can represent a date from January 1, 100 through December 31, 9999.
<P>Dates are stored as part of a real number. Values to the left of the decimal represent the date; values to the right of the decimal represent the time. Negative numbers represent dates prior to December 30, 1899.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defDateLiteral">&nbsp;</A>
<DT><B>date literal</B></DT>
<DD>Any sequence of characters with a valid format that is surrounded by number signs (#). Valid formats include the date format specified by the locale settings for your code or the universal date format. For example, #12/31/99# is the date literal that represents December 31, 1999, where English-U.S. is the locale setting for your application.

<P>VBScript always interprets a date literal as US-ENGLISH if it is possible to do so. If a date literal cannot be interpreted as a date, an error occurs.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defDateSeparators">&nbsp;</A>
<DT><B>date separators</B></DT>
<DD>Characters used to separate the day, month, and year when date values are formatted.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defEmpty">&nbsp;</A>
<DT><B>Empty</B></DT>
<DD>A value that indicates that no beginning value has been assigned to a variable. <b>Empty</b> variables are 0 in a numeric context, or zero-length in a string context.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defErrorNumber">&nbsp;</A>
<DT><B>error number</B></DT>
<DD>A whole number in the range 0 to 65,535, inclusive, that corresponds to the <b>Number</b> property of the <b>Err</b> object. When combined with the <b>Name</b> property of the <b>Err</b> object, this number represents a particular error message. </DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defExpression">&nbsp;</A>
<DT><B>expression</B></DT>
<DD>A combination of keywords, operators, variables, and constants that yield a string, number, or object. An expression can perform a calculation, manipulate characters, or test data.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defIntrinsicConstant">&nbsp;</A>
<DT><B>intrinsic constant</B></DT>
<DD>A constant provided by an application. Because you can't disable intrinsic constants, you can't create a user-defined constant with the same name.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defkeyword">&nbsp;</A>
<DT><B>keyword</B></DT>
<DD>A word or symbol recognized as part of the VBScript language; for example, a statement, function name, or operator.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defLocale">&nbsp;</A>
<DT><B>locale</B></DT>
<DD>The set of information that corresponds to a given language and country/region. A locale affects the language of predefined programming terms and locale-specific settings. There are two contexts where locale information is important:
<UL>
<LI>The code locale affects the language of terms such as keywords and defines locale-specific settings such as the decimal and list separators, date formats, and character sorting order.
<LI>The system locale affects the way locale-aware functionality behaves, for example, when you display numbers or convert strings to dates. You set the system locale using the Control Panel utilities provided by the operating system.
</UL></DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defNothing">&nbsp;</A>
<DT><B>Nothing</B></DT>
<DD>The special value that indicates that an object variable is no longer associated with any actual object.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defNull">&nbsp;</A>
<DT><B>Null</B></DT><DD>A value indicating that a variable contains no valid data. <b>Null</b> is the result of:
<UL>
<LI>An explicit assignment of <b>Null</b> to a variable.
<LI>Any operation between expressions that contain <b>Null</b>. 
</UL></DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defNumericExpression">&nbsp;</A>
<DT><B>numeric expression</B></DT>
<DD>Any expression that can be evaluated as a number. Elements of the expression can include any combination of keywords, variables, constants, and operators that result in a number.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defObjectType">&nbsp;</A>
<DT><B>object type</B></DT>
<DD>A type of object exposed by an application, for example, Application, File, Range, and Sheet. Refer to the application's documentation (Microsoft Excel, Microsoft Project, Microsoft Word, and so on) for a complete listing of available objects.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defpi">&nbsp;</A>
<DT><B>pi</B></DT>
<DD>Pi is a mathematical constant equal to approximately 3.1415926535897932.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defPrivate">&nbsp;</A>
<DT><B>Private</B></DT>
<DD>Variables that are visible only to the script in which they are declared.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defProcedure">&nbsp;</A>
<DT><B>procedure</B></DT>
<DD>A named sequence of statements executed as a unit. For example, <b>Function</b> and <b>Sub</b> are types of procedures.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defProcLevel">&nbsp;</A>
<DT><B>procedure level</B></DT>
<DD>Describes statements located within a <b>Function</b> or <b>Sub</b> procedure. Declarations are usually listed first, followed by assignments and other executable code. For example:
<BLOCKQUOTE><PRE><FONT FACE="Courier New" SIZE=3>
Sub MySub() ' This statement declares a sub procedure block.
    Dim A ' This statement starts the procedure block.
    A = &quot;My variable&quot; ' Procedure-level code.
    Debug.Print A ' Procedure-level code.
End Sub ' This statement ends a sub procedure block.
</FONT></PRE>
</BLOCKQUOTE>
<FONT SIZE=2>Note that script-level code resides outside any procedure blocks.</FONT></DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defProperty">&nbsp;</A>
<DT><B>property</B></DT>
<DD>A named attribute of an object.  Properties define object characteristics such as size, color, and screen location, or the state of an object, such as enabled or disabled.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defPublic">&nbsp;</A>
<DT><B>Public</B></DT>
<DD>Variables declared using the <b>Public</b> Statement are visible to all procedures in all modules in all applications.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defRuntime">&nbsp;</A>
<DT><B>run time</B></DT>
<DD>The time when code is running. During run time, you can't edit the code.</DD><P><P>
<HR NOSHADE SIZE=1>

<A NAME="defRTErr">&nbsp;</A>
<DT><B>run-time error</B></DT>
<DD>An error that occurs when code is running. A run-time error results when a statement attempts an invalid operation.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defScoping">&nbsp;</A>
<DT><B>scope</B></DT>
<DD>Defines the visibility of a variable, procedure, or object. For example, a variable declared as <b>Public</b> is visible to all procedures in all modules. Variables declared in procedures are visible only within the procedure and lose their value between calls.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defSCode">&nbsp;</A>
<DT><B>SCODE</B></DT>
<DD>A long integer value that is used to pass detailed information to the caller of an interface member or API function. The status codes for OLE interfaces and APIs are defined in FACILITY_ITF.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defScriptLevel">&nbsp;</A>
<DT><B>script level</B></DT>
<DD>Any code outside a procedure is referred to as script-level code.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defSeed">&nbsp;</A>
<DT><B>seed</B></DT>
<DD>An initial value used to generate pseudorandom numbers. For example, the <b>Randomize</b> statement creates a seed number used by the <b>Rnd</b> function to create unique pseudorandom number sequences.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defStringComparison">&nbsp;</A>
<DT><B>string comparison</B></DT>
<DD>A comparison of two sequences of characters. Unless specified in the function making the comparison, all string comparisons are binary. In English, binary comparisons are case-sensitive; text comparisons are not.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defStringExpression">&nbsp;</A>
<DT><B>string expression</B></DT>
<DD>Any expression that evaluates to a sequence of contiguous characters. Elements of a string expression can include a function that returns a string, a string literal, a string constant, or a string variable.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defTypeLibrary">&nbsp;</A>
<DT><B>type library</B></DT>
<DD>A file or component within another file that contains standard descriptions of exposed objects, properties, and methods.</DD><P>
<HR NOSHADE SIZE=1>

<A NAME="defVariable">&nbsp;</A>
<DT><B>variable</B></DT>
<DD>A named storage location that can contain data that can be modified during program execution. Each variable has a name that uniquely identifies it within its level of scope.<P>Variable names:
<UL>
<LI>Must begin with an alphabetic character.
<LI>Can't contain an embedded period or type-declaration character.
<LI>Must be unique within the same scope.
<LI>Must be no longer than 255 characters.
</UL>
</DD><P>
<HR NOSHADE SIZE=1>
 
</FONT></FONT></DL>
</BODY><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
