<html dir="ltr"><head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META HTTP-EQUIV="assetid" CONTENT="HP05206745"><META NAME="lcid" CONTENT="1033"><title>Request status and other information</title><link rel="stylesheet" type="text/css" href="office10.css"><script type="text/javascript" language="Javascript" src="ExpCollapse.js"></script><script type="text/javascript" language="JavaScript" src="inline.js"></script></head><body><p id="ExpandAllLine" class="ExpFav"><a href="#" onclick="ExpandAll()" onkeypress="ExpandAll()" class="DropDown"><img id="picHeader" border="0" src="expandtri.gif" alt="Show All"><span id="ExpandAll">Show All</span></a></p><h1>Request status and other information</h1><p>Once you've opened a DDE channel to Microsoft Query, you can return a <a href="#" class="glossary" onclick="AppendPopup(this,'ofResultSet')" onkeypress="AppendPopup(this,'ofResultSet')">result set</a> or other information using <b class="ui">DDERequest</b>.</p><p>The <b class="ui">DDERequest</b> method has two arguments.</p><table>
			<tr>
				<th>Argument</th>
				<th>Description</th>
			</tr>
			<tr>
				<td>channel</td>
				<td>The DDE channel value returned by <b class="ui">DDEInitiate</b>.</td>
			</tr>
			<tr>
				<td>request_item</td>
				<td>The data to be returned. This data can be the contents of a field or range of fields in a query window, or other types of information, such as the number of records in a query window.</td>
			</tr>
		</table><br><p>Request items can be requested on both the <a href="#" class="glossary" onclick="AppendPopup(this,'defQueryChannel')" onkeypress="AppendPopup(this,'defQueryChannel')">query channel</a> and the <a href="#" class="glossary" onclick="AppendPopup(this,'defSystemChannel')" onkeypress="AppendPopup(this,'defSystemChannel')">system channel</a>. On the query channel, you can return information only about the query, such as the number of rows or columns, or the query definition. On the system channel, you can return general information about Microsoft Query, such as the current connections, topic names, and program status, as well as information specific to the active query.</p><p>Request items for a query channel or the active query on a system channel can be one of the following.</p><table>
			<tr>
				<th>Request item</th>
				<th>Information returned</th>
			</tr>
			<tr>
				<td>ColumnTitles</td>
				<td>An array of column titles. The column title is the same as the field name, unless the user has modified the column title in Microsoft Query.</td>
			</tr>
			<tr>
				<td>ConnectionString</td>
				<td>An array of connection string segments (each of which can be up to 255 characters long) that makes up the connection string used to connect to the active query window. If the query was created from a File Data Source Name (DSN), this item returns a DSN-less connection string.</td>
			</tr>
			<tr>
				<td>ConnectionString/n</td>
				<td>An array of connection string segments (each of which can be up to n characters long) that makes up the connection string used to connect to the active query window. If the query was created from a File DSN, this item returns a DSN-less connection string.</td>
			</tr>
			<tr>
				<td>DataSourceName</td>
				<td>The <a href="#" class="glossary" onclick="AppendPopup(this,'qudefDataSource')" onkeypress="AppendPopup(this,'qudefDataSource')">data source</a> name (DSN) used by the active query.</td>
			</tr>
			<tr>
				<td>ErrorText</td>
				<td>The error text, if any, from the most recently executed <a href="#" class="glossary" onclick="AppendPopup(this,'IDH_qudefStructuredQueryLanguageSQL')" onkeypress="AppendPopup(this,'IDH_qudefStructuredQueryLanguageSQL')">SQL</a> statement. This item can be requested multiple times to retrieve all the errors that have occurred. After all errors are retrieved, the item returns an empty string. The item returns a null string if the most recently executed SQL statement was successful, even if previously executed SQL statements were not successful.</td>
			</tr>
			<tr>
				<td>FieldDef</td>
				<td>An array of values that describes the expressions and data types of the columns (fields) in the query window. Each row of the array describes a field in the query. The array returns the following data in columnar format: the field name, the field <a href="defQandEDataTypes1.htm" id="HP03056440" lcid=" ">Q+E data type</a>, the field width, the field precision, and the field <a href="defSQLDataTypes1.htm" id="HP03056442" lcid=" ">SQL data type</a>.</td>
			</tr>
			<tr>
				<td>GetUniqueItems</td>
				<td>An array of the unique items in a given column of the query results. The actual request item must be the zero-based column index of the column appended to "GetUniqueItems" (for example, the unique items in the second column are returned by "GetUniqueItems1"). You cannot request the unique items for a column not included in the query. 

<p>This item returns the same values as a SELECT DISTINCT statement for the requested column, with any joins and criteria clauses in effect. Any criteria clauses that use parameters are not included.</p>
				</td>
			</tr>
			<tr>
				<td>NameSeparator</td>
				<td>The single character used as the ODBC qualifier name separator.</td>
			</tr>
			<tr>
				<td>NumCols</td>
				<td>The number of columns (fields) in the query.</td>
			</tr>
			<tr>
				<td>NumRows</td>
				<td>The number of rows (records) in the query.</td>
			</tr>
			<tr>
				<td>ODBCSQLStatement</td>
				<td>An array of SQL segments (each of which can be up to 255 characters long) that makes up the ODBC SQL statement for the query. With this string, you can bypass Microsoft Query and send an ODBC SQL statement directly to ODBC for processing.</td>
			</tr>
			<tr>
				<td>ODBCSQLStatement/n</td>
				<td>An array of SQL segments (each of which can be up to n characters long) that makes up the ODBC SQL statement for the query. You can use this request item to store an ODBC SQL statement in several smaller segments.</td>
			</tr>
			<tr>
				<td>ParameterNames</td>
				<td>An array of parameters in the query. An empty array is returned if no parameters exist. This item can be requested at any time, even if parameters are disabled for the query.</td>
			</tr>
			<tr>
				<td>Query</td>
				<td>The name of the query.</td>
			</tr>
			<tr>
				<td>QueryDefinition</td>
				<td>An array of query definition segments (each of which can be up to 255 characters long) that makes up the definition of the query (an SQL statement), as defined by Microsoft Query. This item can be retrieved and saved for future queries.</td>
			</tr>
			<tr>
				<td>QueryDefinition/n</td>
				<td>An array of query definition segments (each of which can be up to n characters long) that makes up the query definition of the query (an SQL statement).</td>
			</tr>
			<tr>
				<td>Recest</td>
				<td>A rough estimate of how many rows can be retrieved at a time.</td>
			</tr>
			<tr>
				<td>TierType</td>
				<td>A single digit specifying the type of data source: 1 indicates a file that can contain only a single table; 2 indicates a file for a database containing one or more tables; 3 indicates the data can't be browsed. This request item is used if the program needs to provide an Open dialog box for browsing the data on a disk.</td>
			</tr>
		</table><br><p>When you use the above request items on the system channel, information is returned for the query window most recently used in a DDE operation.</p><p>For the system channel, in addition to the above request items, you can also request the following items.</p><table>
			<tr>
				<th>Request item</th>
				<th>Information returned</th>
			</tr>
			<tr>
				<td>Sources</td>
				<td>All current data source connections (DSN only).</td>
			</tr>
			<tr>
				<td>Logon</td>
				<td>All remote databases you can connect to (DSN entries from the registry).</td>
			</tr>
			<tr>
				<td>Logoff</td>
				<td>All currently connected remote databases (DSN only).</td>
			</tr>
			<tr>
				<td>Tables/source/user/database</td>
				<td>All tables for the specified DSN connection, user, and database. Note that the source must be a valid DSN.</td>
			</tr>
			<tr>
				<td>Users/source/database</td>
				<td>All users for the specified DSN connection and database. Note that the source must be a valid DSN.</td>
			</tr>
			<tr>
				<td>Database/source</td>
				<td>All databases for the specified DSN connection. Note that the source must be a valid DSN.</td>
			</tr>
			<tr>
				<td>Username/source/database</td>
				<td>The user name for the specified DSN connection and database. Note that the source must be a valid DSN.</td>
			</tr>
			<tr>
				<td>Topics</td>
				<td>The names of the topics open on the system channel, along with System.</td>
			</tr>
			<tr>
				<td>Status</td>
				<td>The status of the program, which can be Ready or Busy. Ready means that the program can have a <a href="#" class="glossary" onclick="AppendPopup(this,'defDDEConversation')" onkeypress="AppendPopup(this,'defDDEConversation')">DDE conversation</a> with Microsoft Query. Busy means that Microsoft Query isn't ready to have a DDE conversation.</td>
			</tr>
		</table><br><p>This example inserts the value returned by the NumRows request item into cell A10 in Microsoft Excel.</p><pre>
<code>ActiveWorksheet.Range("A10").Value = DDERequest(chan, "NumRows")</code>
		</pre></body></html>