<html dir="ltr"><head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META HTTP-EQUIV="assetid" CONTENT="HP05206883"><META NAME="lcid" CONTENT="1033"><title>Use DDE</title><link rel="stylesheet" type="text/css" href="office10.css"><script type="text/javascript" language="Javascript" src="ExpCollapse.js"></script><script type="text/javascript" language="JavaScript" src="inline.js"></script></head><body><p id="ExpandAllLine" class="ExpFav"><a href="#" onclick="ExpandAll()" onkeypress="ExpandAll()" class="DropDown"><img id="picHeader" border="0" src="expandtri.gif" alt="Show All"><span id="ExpandAll">Show All</span></a></p><h1>Use DDE</h1><p>Two programs exchange information by engaging in a <a href="#" class="glossary" onclick="AppendPopup(this,'defDDEConversation')" onkeypress="AppendPopup(this,'defDDEConversation')">DDE conversation</a> on a DDE channel. A program can conduct more than one conversation with Microsoft Query, but each conversation occurs on a different channel.</p><p>The program that initiates the conversation is called the destination program; the program that responds to the destination program is called the source program. Microsoft Query is always the source program in a DDE conversation. This means that other programs are always the ones to initiate a DDE conversation with Microsoft Query.</p><p><b>Note</b>  Not all programs support DDE. To find out if your program does, consult your program's documentation.</p><h2>DDE Channels</h2><p>There are two types of DDE channels: <a href="#" class="glossary" onclick="AppendPopup(this,'defSystemChannel')" onkeypress="AppendPopup(this,'defSystemChannel')">system channels</a> and <a href="#" class="glossary" onclick="AppendPopup(this,'defQueryChannel')" onkeypress="AppendPopup(this,'defQueryChannel')">query channels</a>.</p><p>You use a system channel in a DDE conversation between the destination program and Microsoft Query to get general and query-related information. In addition to providing information about queries, the system channel also lets you retrieve information about the system, such as the current connections, open queries, and the status of the destination program.</p><p>You use a query channel in a DDE conversation between the destination program and a specific query (for example, Query1) in Microsoft Query. To use a query channel, the query window must have already been opened using a system channel.</p><h2>How DDE Works</h2><p>You can compare a DDE conversation to a typical conversation between two people. For example, in a job interview, the interviewer may ask the applicant a series of interview questions. The interviewer (the destination) initiates and requests information from the applicant (the source) and records the information on a piece of paper (the worksheet or document). Of course, the applicant can also ask questions of the interviewer and establish a two-way conversation.</p><p>Similarly, the participating programs in a DDE conversation pass information back and forth. For example, to use DDE to communicate with Microsoft Query, a Visual Basic for Applications procedure might perform these steps:</p><ol>
			<li>The procedure opens a channel by using the <b class="ui">DDEInitiate</b> method.</li>
			<li>Optionally, the procedure sends information, such as what the available <a href="#" class="glossary" onclick="AppendPopup(this,'qudefDataSource')" onkeypress="AppendPopup(this,'qudefDataSource')">data sources</a> or current connections are, to Microsoft Query.</li>
			<li>The procedure activates Microsoft Query. This step enables Microsoft Query to accept commands. At this point, either the user or the procedure can build or modify a query. The procedure can send commands directly to Microsoft Query by using the <b class="ui">DDEExecute</b> method.</li>
			<li>After the user or procedure exits Microsoft Query, control returns to the destination program. The procedure can retrieve query data and send it back to the destination program by using the <b class="ui">DDERequest</b> method, or the procedure can send data to Microsoft Query.</li>
			<li>The procedure closes the channel by using <b class="ui">DDETerminate</b>.</li>
		</ol><p>For details about specific DDE methods in Visual Basic for Applications, see Visual Basic Help.</p></body></html>