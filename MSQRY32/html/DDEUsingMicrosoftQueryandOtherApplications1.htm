<html dir="ltr"><head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META HTTP-EQUIV="assetid" CONTENT="HP05206886"><META NAME="lcid" CONTENT="1033"><title>Use Microsoft Query with other programs</title><link rel="stylesheet" type="text/css" href="office10.css"><script type="text/javascript" language="Javascript" src="ExpCollapse.js"></script><script type="text/javascript" language="JavaScript" src="inline.js"></script></head><body><p id="ExpandAllLine" class="ExpFav"><a href="#" onclick="ExpandAll()" onkeypress="ExpandAll()" class="DropDown"><img id="picHeader" border="0" src="expandtri.gif" alt="Show All"><span id="ExpandAll">Show All</span></a></p><h1>Use Microsoft Query with other programs</h1><p class="somecontent">Some of the content in this topic may not be applicable to some languages.</p><p>Typically, other programs use Microsoft Query to accomplish three main tasks:</p><ul>
			<li>To create a new query</li>
			<li>To update existing data</li>
			<li>To modify the query definition or data</li>
		</ul><h2>Microsoft Query as a data query tool for users</h2><p>Using DDE, you can have Microsoft Query function as a tool for retrieving data. Once your macro or program opens a DDE channel, it can activate Microsoft Query and specify which command replaces <b class="ui">Exit</b> on the <b class="ui">File</b> menu in Microsoft Windows or <b class="ui">Quit</b> on the <b class="ui">File</b> menu on the Macintosh, what program state (minimized [Windows only], maximized, or restored) Microsoft Query is in, and whether to display a series of dialog boxes.</p><p>A user can then create, open, or edit a query as if Microsoft Query were running as a standalone program. When the user has finished building the query, the user can click the custom <b class="ui">Exit</b> command or click the <b class="ui">Exit</b> button on the toolbar.</p><p>Once control returns to the destination program (the document, worksheet, or other object) data can be requested from Microsoft Query. For example, the user may request the number of rows or columns in the query, the <a href="#" class="glossary" onclick="AppendPopup(this,'IDH_qudefStructuredQueryLanguageSQL')" onkeypress="AppendPopup(this,'IDH_qudefStructuredQueryLanguageSQL')">SQL</a> string defining the query, the connection string for the <a href="#" class="glossary" onclick="AppendPopup(this,'qudefDataSource')" onkeypress="AppendPopup(this,'qudefDataSource')">data source</a>, or the data source name. Data can be returned to the destination program before the DDE channel is closed and the macro or program ends.</p><h2>Update retrieved data</h2><p>After you have executed a query and returned a <a href="#" class="glossary" onclick="AppendPopup(this,'ofResultSet')" onkeypress="AppendPopup(this,'ofResultSet')">result set</a>, you may later want to update the data with whatever is then current in the data source. Using DDE, you can update data without input from the user: A program can send an SQL statement to Microsoft Query, which can execute the query and then return the result set to the destination program.</p><h2>Modify a query definition or data</h2><p>Another way a program can use Microsoft Query is to allow a user to modify an existing query definition in Microsoft Query or to edit data in a data source.</p><p>A program starts this process by opening a DDE channel, connecting to a data source, and sending an SQL string (saved from the previous query) to Microsoft Query to build a new query. Once the program has opened the new query, user control begins, and the user can modify the query or edit the data as needed. Once the user exits Microsoft Query, the data is returned to the program, the new query definition is saved, and the query is closed.</p><p>For example, a user working in Microsoft Word could choose a custom command called "Get Sales Figures" to start the corresponding macro. Without the user being aware of it, this macro could then start Microsoft Query, build a query, and then return the sales data to the Word document.</p></body></html>